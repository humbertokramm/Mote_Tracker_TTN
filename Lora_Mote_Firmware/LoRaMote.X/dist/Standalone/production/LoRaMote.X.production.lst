

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 17:22:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   186                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   187                           	dabs	1,0x400,48,_BDT
   188                           	dabs	1,0x500,64,_cdc_data_tx
   189                           	dabs	1,0x438,8,_CtrlTrfData
   190                           	dabs	1,0x430,8,_SetupPkt
   191                           	dabs	1,0x540,64,_cdc_data_rx
   192  0000                     
   193                           ; Version 1.45
   194                           ; Generated 16/11/2017 GMT
   195                           ; 
   196                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   197                           ; All rights reserved.
   198                           ; 
   199                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   200                           ; 
   201                           ; Redistribution and use in source and binary forms, with or without modification, are
   202                           ; permitted provided that the following conditions are met:
   203                           ; 
   204                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   205                           ;        conditions and the following disclaimer.
   206                           ; 
   207                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   208                           ;        of conditions and the following disclaimer in the documentation and/or other
   209                           ;        materials provided with the distribution.
   210                           ; 
   211                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   212                           ;        software without specific prior written permission.
   213                           ; 
   214                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   215                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   216                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   217                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   218                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   219                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   220                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   221                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   222                           ; 
   223                           ; 
   224                           ; Code-generator required, PIC18LF45K50 Definitions
   225                           ; 
   226                           ; SFR Addresses
   227  0000                     
   228                           	psect	idataCOMRAM
   229  005B9B                     __pidataCOMRAM:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _Contrast_level
   233  005B9B  13                 	db	19
   234                           
   235                           	psect	idataBANK0
   236  005B48                     __pidataBANK0:
   237                           	opt stack 0
   238                           
   239                           ;initializer for _exitUSB
   240  005B48  01                 	db	1
   241                           
   242                           ;initializer for _periodicState
   243  005B49  03                 	db	3
   244                           
   245                           ;initializer for _menuTimeout
   246  005B4A  01                 	db	1
   247                           
   248                           ;initializer for _dataRateValue
   249  005B4B  02                 	db	2
   250                           
   251                           ;initializer for _periodicTimerValue
   252  005B4C  03                 	db	3
   253                           
   254                           ;initializer for _periodicUpValue
   255  005B4D  03                 	db	3
   256                           
   257                           ;initializer for _moteState
   258  005B4E  01                 	db	1
   259                           
   260                           	psect	idataBANK1
   261  005B98                     __pidataBANK1:
   262                           	opt stack 0
   263                           
   264                           ;initializer for _selectedFont
   265  005B98  F7                 	db	low _OledFont0
   266  005B99  75                 	db	high _OledFont0
   267                           
   268                           ;initializer for _dataRateSelection
   269  005B9A  02                 	db	2
   270                           
   271                           	psect	mediumconst
   272  0075EE                     __pmediumconst:
   273                           	opt stack 0
   274  0075EE  00                 	db	0
   275  0075EF                     _USB_SD_Ptr:
   276                           	opt stack 0
   277  0075EF  B4                 	db	low _sd000
   278  0075F0  79                 	db	high _sd000
   279  0075F1  6E                 	db	low _sd001
   280  0075F2  79                 	db	high _sd001
   281  0075F3  3A                 	db	low _sd002
   282  0075F4  79                 	db	high _sd002
   283  0075F5                     __end_of_USB_SD_Ptr:
   284                           	opt stack 0
   285  0075F5                     _USB_CD_Ptr:
   286                           	opt stack 0
   287  0075F5  F7                 	db	low _configDescriptor1
   288  0075F6  78                 	db	high _configDescriptor1
   289  0075F7                     __end_of_USB_CD_Ptr:
   290                           	opt stack 0
   291  0075F7                     _OledFont0:
   292                           	opt stack 0
   293  0075F7  00                 	db	0
   294  0075F8  00                 	db	0
   295  0075F9  00                 	db	0
   296  0075FA  00                 	db	0
   297  0075FB  00                 	db	0
   298  0075FC  00                 	db	0
   299  0075FD  00                 	db	0
   300  0075FE  00                 	db	0
   301  0075FF  00                 	db	0
   302  007600  00                 	db	0
   303  007601  00                 	db	0
   304  007602  5F                 	db	95
   305  007603  00                 	db	0
   306  007604  00                 	db	0
   307  007605  00                 	db	0
   308  007606  00                 	db	0
   309  007607  00                 	db	0
   310  007608  00                 	db	0
   311  007609  03                 	db	3
   312  00760A  00                 	db	0
   313  00760B  03                 	db	3
   314  00760C  00                 	db	0
   315  00760D  00                 	db	0
   316  00760E  00                 	db	0
   317  00760F  64                 	db	100
   318  007610  3C                 	db	60
   319  007611  26                 	db	38
   320  007612  64                 	db	100
   321  007613  3C                 	db	60
   322  007614  26                 	db	38
   323  007615  24                 	db	36
   324  007616  00                 	db	0
   325  007617  26                 	db	38
   326  007618  49                 	db	73
   327  007619  49                 	db	73
   328  00761A  7F                 	db	127
   329  00761B  49                 	db	73
   330  00761C  49                 	db	73
   331  00761D  32                 	db	50
   332  00761E  00                 	db	0
   333  00761F  42                 	db	66
   334  007620  25                 	db	37
   335  007621  12                 	db	18
   336  007622  08                 	db	8
   337  007623  24                 	db	36
   338  007624  52                 	db	82
   339  007625  21                 	db	33
   340  007626  00                 	db	0
   341  007627  20                 	db	32
   342  007628  50                 	db	80
   343  007629  4E                 	db	78
   344  00762A  55                 	db	85
   345  00762B  22                 	db	34
   346  00762C  58                 	db	88
   347  00762D  28                 	db	40
   348  00762E  00                 	db	0
   349  00762F  00                 	db	0
   350  007630  00                 	db	0
   351  007631  00                 	db	0
   352  007632  03                 	db	3
   353  007633  00                 	db	0
   354  007634  00                 	db	0
   355  007635  00                 	db	0
   356  007636  00                 	db	0
   357  007637  00                 	db	0
   358  007638  00                 	db	0
   359  007639  1C                 	db	28
   360  00763A  22                 	db	34
   361  00763B  41                 	db	65
   362  00763C  00                 	db	0
   363  00763D  00                 	db	0
   364  00763E  00                 	db	0
   365  00763F  00                 	db	0
   366  007640  00                 	db	0
   367  007641  00                 	db	0
   368  007642  41                 	db	65
   369  007643  22                 	db	34
   370  007644  1C                 	db	28
   371  007645  00                 	db	0
   372  007646  00                 	db	0
   373  007647  00                 	db	0
   374  007648  15                 	db	21
   375  007649  15                 	db	21
   376  00764A  0E                 	db	14
   377  00764B  0E                 	db	14
   378  00764C  15                 	db	21
   379  00764D  15                 	db	21
   380  00764E  00                 	db	0
   381  00764F  00                 	db	0
   382  007650  08                 	db	8
   383  007651  08                 	db	8
   384  007652  3E                 	db	62
   385  007653  08                 	db	8
   386  007654  08                 	db	8
   387  007655  00                 	db	0
   388  007656  00                 	db	0
   389  007657  00                 	db	0
   390  007658  00                 	db	0
   391  007659  00                 	db	0
   392  00765A  50                 	db	80
   393  00765B  30                 	db	48
   394  00765C  00                 	db	0
   395  00765D  00                 	db	0
   396  00765E  00                 	db	0
   397  00765F  00                 	db	0
   398  007660  08                 	db	8
   399  007661  08                 	db	8
   400  007662  08                 	db	8
   401  007663  08                 	db	8
   402  007664  08                 	db	8
   403  007665  00                 	db	0
   404  007666  00                 	db	0
   405  007667  00                 	db	0
   406  007668  00                 	db	0
   407  007669  00                 	db	0
   408  00766A  40                 	db	64
   409  00766B  00                 	db	0
   410  00766C  00                 	db	0
   411  00766D  00                 	db	0
   412  00766E  00                 	db	0
   413  00766F  40                 	db	64
   414  007670  20                 	db	32
   415  007671  10                 	db	16
   416  007672  08                 	db	8
   417  007673  04                 	db	4
   418  007674  02                 	db	2
   419  007675  01                 	db	1
   420  007676  00                 	db	0
   421  007677  00                 	db	0
   422  007678  3E                 	db	62
   423  007679  41                 	db	65
   424  00767A  41                 	db	65
   425  00767B  41                 	db	65
   426  00767C  3E                 	db	62
   427  00767D  00                 	db	0
   428  00767E  00                 	db	0
   429  00767F  00                 	db	0
   430  007680  00                 	db	0
   431  007681  41                 	db	65
   432  007682  7F                 	db	127
   433  007683  40                 	db	64
   434  007684  00                 	db	0
   435  007685  00                 	db	0
   436  007686  00                 	db	0
   437  007687  00                 	db	0
   438  007688  42                 	db	66
   439  007689  61                 	db	97
   440  00768A  51                 	db	81
   441  00768B  49                 	db	73
   442  00768C  6E                 	db	110
   443  00768D  00                 	db	0
   444  00768E  00                 	db	0
   445  00768F  00                 	db	0
   446  007690  22                 	db	34
   447  007691  41                 	db	65
   448  007692  49                 	db	73
   449  007693  49                 	db	73
   450  007694  36                 	db	54
   451  007695  00                 	db	0
   452  007696  00                 	db	0
   453  007697  00                 	db	0
   454  007698  18                 	db	24
   455  007699  14                 	db	20
   456  00769A  12                 	db	18
   457  00769B  7F                 	db	127
   458  00769C  10                 	db	16
   459  00769D  00                 	db	0
   460  00769E  00                 	db	0
   461  00769F  00                 	db	0
   462  0076A0  27                 	db	39
   463  0076A1  49                 	db	73
   464  0076A2  49                 	db	73
   465  0076A3  49                 	db	73
   466  0076A4  71                 	db	113
   467  0076A5  00                 	db	0
   468  0076A6  00                 	db	0
   469  0076A7  00                 	db	0
   470  0076A8  3C                 	db	60
   471  0076A9  4A                 	db	74
   472  0076AA  49                 	db	73
   473  0076AB  48                 	db	72
   474  0076AC  70                 	db	112
   475  0076AD  00                 	db	0
   476  0076AE  00                 	db	0
   477  0076AF  00                 	db	0
   478  0076B0  43                 	db	67
   479  0076B1  21                 	db	33
   480  0076B2  11                 	db	17
   481  0076B3  0D                 	db	13
   482  0076B4  03                 	db	3
   483  0076B5  00                 	db	0
   484  0076B6  00                 	db	0
   485  0076B7  00                 	db	0
   486  0076B8  36                 	db	54
   487  0076B9  49                 	db	73
   488  0076BA  49                 	db	73
   489  0076BB  49                 	db	73
   490  0076BC  36                 	db	54
   491  0076BD  00                 	db	0
   492  0076BE  00                 	db	0
   493  0076BF  00                 	db	0
   494  0076C0  06                 	db	6
   495  0076C1  09                 	db	9
   496  0076C2  49                 	db	73
   497  0076C3  29                 	db	41
   498  0076C4  1E                 	db	30
   499  0076C5  00                 	db	0
   500  0076C6  00                 	db	0
   501  0076C7  00                 	db	0
   502  0076C8  00                 	db	0
   503  0076C9  00                 	db	0
   504  0076CA  12                 	db	18
   505  0076CB  00                 	db	0
   506  0076CC  00                 	db	0
   507  0076CD  00                 	db	0
   508  0076CE  00                 	db	0
   509  0076CF  00                 	db	0
   510  0076D0  00                 	db	0
   511  0076D1  00                 	db	0
   512  0076D2  52                 	db	82
   513  0076D3  30                 	db	48
   514  0076D4  00                 	db	0
   515  0076D5  00                 	db	0
   516  0076D6  00                 	db	0
   517  0076D7  00                 	db	0
   518  0076D8  00                 	db	0
   519  0076D9  08                 	db	8
   520  0076DA  14                 	db	20
   521  0076DB  14                 	db	20
   522  0076DC  22                 	db	34
   523  0076DD  00                 	db	0
   524  0076DE  00                 	db	0
   525  0076DF  00                 	db	0
   526  0076E0  14                 	db	20
   527  0076E1  14                 	db	20
   528  0076E2  14                 	db	20
   529  0076E3  14                 	db	20
   530  0076E4  14                 	db	20
   531  0076E5  14                 	db	20
   532  0076E6  00                 	db	0
   533  0076E7  00                 	db	0
   534  0076E8  00                 	db	0
   535  0076E9  22                 	db	34
   536  0076EA  14                 	db	20
   537  0076EB  14                 	db	20
   538  0076EC  08                 	db	8
   539  0076ED  00                 	db	0
   540  0076EE  00                 	db	0
   541  0076EF  00                 	db	0
   542  0076F0  02                 	db	2
   543  0076F1  01                 	db	1
   544  0076F2  59                 	db	89
   545  0076F3  05                 	db	5
   546  0076F4  02                 	db	2
   547  0076F5  00                 	db	0
   548  0076F6  00                 	db	0
   549  0076F7  3E                 	db	62
   550  0076F8  41                 	db	65
   551  0076F9  5D                 	db	93
   552  0076FA  55                 	db	85
   553  0076FB  4D                 	db	77
   554  0076FC  51                 	db	81
   555  0076FD  2E                 	db	46
   556  0076FE  00                 	db	0
   557  0076FF  40                 	db	64
   558  007700  7C                 	db	124
   559  007701  4A                 	db	74
   560  007702  09                 	db	9
   561  007703  4A                 	db	74
   562  007704  7C                 	db	124
   563  007705  40                 	db	64
   564  007706  00                 	db	0
   565  007707  41                 	db	65
   566  007708  7F                 	db	127
   567  007709  49                 	db	73
   568  00770A  49                 	db	73
   569  00770B  49                 	db	73
   570  00770C  49                 	db	73
   571  00770D  36                 	db	54
   572  00770E  00                 	db	0
   573  00770F  1C                 	db	28
   574  007710  22                 	db	34
   575  007711  41                 	db	65
   576  007712  41                 	db	65
   577  007713  41                 	db	65
   578  007714  41                 	db	65
   579  007715  22                 	db	34
   580  007716  00                 	db	0
   581  007717  41                 	db	65
   582  007718  7F                 	db	127
   583  007719  41                 	db	65
   584  00771A  41                 	db	65
   585  00771B  41                 	db	65
   586  00771C  22                 	db	34
   587  00771D  1C                 	db	28
   588  00771E  00                 	db	0
   589  00771F  41                 	db	65
   590  007720  7F                 	db	127
   591  007721  49                 	db	73
   592  007722  49                 	db	73
   593  007723  5D                 	db	93
   594  007724  41                 	db	65
   595  007725  63                 	db	99
   596  007726  00                 	db	0
   597  007727  41                 	db	65
   598  007728  7F                 	db	127
   599  007729  49                 	db	73
   600  00772A  09                 	db	9
   601  00772B  1D                 	db	29
   602  00772C  01                 	db	1
   603  00772D  03                 	db	3
   604  00772E  00                 	db	0
   605  00772F  1C                 	db	28
   606  007730  22                 	db	34
   607  007731  41                 	db	65
   608  007732  49                 	db	73
   609  007733  49                 	db	73
   610  007734  3A                 	db	58
   611  007735  08                 	db	8
   612  007736  00                 	db	0
   613  007737  41                 	db	65
   614  007738  7F                 	db	127
   615  007739  08                 	db	8
   616  00773A  08                 	db	8
   617  00773B  08                 	db	8
   618  00773C  7F                 	db	127
   619  00773D  41                 	db	65
   620  00773E  00                 	db	0
   621  00773F  00                 	db	0
   622  007740  41                 	db	65
   623  007741  41                 	db	65
   624  007742  7F                 	db	127
   625  007743  41                 	db	65
   626  007744  41                 	db	65
   627  007745  00                 	db	0
   628  007746  00                 	db	0
   629  007747  30                 	db	48
   630  007748  40                 	db	64
   631  007749  41                 	db	65
   632  00774A  41                 	db	65
   633  00774B  3F                 	db	63
   634  00774C  01                 	db	1
   635  00774D  01                 	db	1
   636  00774E  00                 	db	0
   637  00774F  41                 	db	65
   638  007750  7F                 	db	127
   639  007751  08                 	db	8
   640  007752  0C                 	db	12
   641  007753  12                 	db	18
   642  007754  61                 	db	97
   643  007755  41                 	db	65
   644  007756  00                 	db	0
   645  007757  41                 	db	65
   646  007758  7F                 	db	127
   647  007759  41                 	db	65
   648  00775A  40                 	db	64
   649  00775B  40                 	db	64
   650  00775C  40                 	db	64
   651  00775D  60                 	db	96
   652  00775E  00                 	db	0
   653  00775F  41                 	db	65
   654  007760  7F                 	db	127
   655  007761  42                 	db	66
   656  007762  0C                 	db	12
   657  007763  42                 	db	66
   658  007764  7F                 	db	127
   659  007765  41                 	db	65
   660  007766  00                 	db	0
   661  007767  41                 	db	65
   662  007768  7F                 	db	127
   663  007769  42                 	db	66
   664  00776A  0C                 	db	12
   665  00776B  11                 	db	17
   666  00776C  7F                 	db	127
   667  00776D  01                 	db	1
   668  00776E  00                 	db	0
   669  00776F  1C                 	db	28
   670  007770  22                 	db	34
   671  007771  41                 	db	65
   672  007772  41                 	db	65
   673  007773  41                 	db	65
   674  007774  22                 	db	34
   675  007775  1C                 	db	28
   676  007776  00                 	db	0
   677  007777  41                 	db	65
   678  007778  7F                 	db	127
   679  007779  49                 	db	73
   680  00777A  09                 	db	9
   681  00777B  09                 	db	9
   682  00777C  09                 	db	9
   683  00777D  06                 	db	6
   684  00777E  00                 	db	0
   685  00777F  0C                 	db	12
   686  007780  12                 	db	18
   687  007781  21                 	db	33
   688  007782  21                 	db	33
   689  007783  61                 	db	97
   690  007784  52                 	db	82
   691  007785  4C                 	db	76
   692  007786  00                 	db	0
   693  007787  41                 	db	65
   694  007788  7F                 	db	127
   695  007789  09                 	db	9
   696  00778A  09                 	db	9
   697  00778B  19                 	db	25
   698  00778C  69                 	db	105
   699  00778D  46                 	db	70
   700  00778E  00                 	db	0
   701  00778F  66                 	db	102
   702  007790  49                 	db	73
   703  007791  49                 	db	73
   704  007792  49                 	db	73
   705  007793  49                 	db	73
   706  007794  49                 	db	73
   707  007795  33                 	db	51
   708  007796  00                 	db	0
   709  007797  03                 	db	3
   710  007798  01                 	db	1
   711  007799  41                 	db	65
   712  00779A  7F                 	db	127
   713  00779B  41                 	db	65
   714  00779C  01                 	db	1
   715  00779D  03                 	db	3
   716  00779E  00                 	db	0
   717  00779F  01                 	db	1
   718  0077A0  3F                 	db	63
   719  0077A1  41                 	db	65
   720  0077A2  40                 	db	64
   721  0077A3  41                 	db	65
   722  0077A4  3F                 	db	63
   723  0077A5  01                 	db	1
   724  0077A6  00                 	db	0
   725  0077A7  01                 	db	1
   726  0077A8  0F                 	db	15
   727  0077A9  31                 	db	49
   728  0077AA  40                 	db	64
   729  0077AB  31                 	db	49
   730  0077AC  0F                 	db	15
   731  0077AD  01                 	db	1
   732  0077AE  00                 	db	0
   733  0077AF  01                 	db	1
   734  0077B0  1F                 	db	31
   735  0077B1  61                 	db	97
   736  0077B2  14                 	db	20
   737  0077B3  61                 	db	97
   738  0077B4  1F                 	db	31
   739  0077B5  01                 	db	1
   740  0077B6  00                 	db	0
   741  0077B7  41                 	db	65
   742  0077B8  41                 	db	65
   743  0077B9  36                 	db	54
   744  0077BA  08                 	db	8
   745  0077BB  36                 	db	54
   746  0077BC  41                 	db	65
   747  0077BD  41                 	db	65
   748  0077BE  00                 	db	0
   749  0077BF  01                 	db	1
   750  0077C0  03                 	db	3
   751  0077C1  44                 	db	68
   752  0077C2  78                 	db	120
   753  0077C3  44                 	db	68
   754  0077C4  03                 	db	3
   755  0077C5  01                 	db	1
   756  0077C6  00                 	db	0
   757  0077C7  43                 	db	67
   758  0077C8  61                 	db	97
   759  0077C9  51                 	db	81
   760  0077CA  49                 	db	73
   761  0077CB  45                 	db	69
   762  0077CC  43                 	db	67
   763  0077CD  61                 	db	97
   764  0077CE  00                 	db	0
   765  0077CF  00                 	db	0
   766  0077D0  00                 	db	0
   767  0077D1  7F                 	db	127
   768  0077D2  41                 	db	65
   769  0077D3  41                 	db	65
   770  0077D4  00                 	db	0
   771  0077D5  00                 	db	0
   772  0077D6  00                 	db	0
   773  0077D7  01                 	db	1
   774  0077D8  02                 	db	2
   775  0077D9  04                 	db	4
   776  0077DA  08                 	db	8
   777  0077DB  10                 	db	16
   778  0077DC  20                 	db	32
   779  0077DD  40                 	db	64
   780  0077DE  00                 	db	0
   781  0077DF  00                 	db	0
   782  0077E0  00                 	db	0
   783  0077E1  41                 	db	65
   784  0077E2  41                 	db	65
   785  0077E3  7F                 	db	127
   786  0077E4  00                 	db	0
   787  0077E5  00                 	db	0
   788  0077E6  00                 	db	0
   789  0077E7  00                 	db	0
   790  0077E8  04                 	db	4
   791  0077E9  02                 	db	2
   792  0077EA  01                 	db	1
   793  0077EB  01                 	db	1
   794  0077EC  02                 	db	2
   795  0077ED  04                 	db	4
   796  0077EE  00                 	db	0
   797  0077EF  00                 	db	0
   798  0077F0  40                 	db	64
   799  0077F1  40                 	db	64
   800  0077F2  40                 	db	64
   801  0077F3  40                 	db	64
   802  0077F4  40                 	db	64
   803  0077F5  40                 	db	64
   804  0077F6  00                 	db	0
   805  0077F7  00                 	db	0
   806  0077F8  01                 	db	1
   807  0077F9  02                 	db	2
   808  0077FA  00                 	db	0
   809  0077FB  00                 	db	0
   810  0077FC  00                 	db	0
   811  0077FD  00                 	db	0
   812  0077FE  00                 	db	0
   813  0077FF  00                 	db	0
   814  007800  34                 	db	52
   815  007801  4A                 	db	74
   816  007802  4A                 	db	74
   817  007803  4A                 	db	74
   818  007804  3C                 	db	60
   819  007805  40                 	db	64
   820  007806  00                 	db	0
   821  007807  00                 	db	0
   822  007808  41                 	db	65
   823  007809  3F                 	db	63
   824  00780A  48                 	db	72
   825  00780B  48                 	db	72
   826  00780C  48                 	db	72
   827  00780D  30                 	db	48
   828  00780E  00                 	db	0
   829  00780F  00                 	db	0
   830  007810  3C                 	db	60
   831  007811  42                 	db	66
   832  007812  42                 	db	66
   833  007813  42                 	db	66
   834  007814  24                 	db	36
   835  007815  00                 	db	0
   836  007816  00                 	db	0
   837  007817  00                 	db	0
   838  007818  30                 	db	48
   839  007819  48                 	db	72
   840  00781A  48                 	db	72
   841  00781B  49                 	db	73
   842  00781C  3F                 	db	63
   843  00781D  40                 	db	64
   844  00781E  00                 	db	0
   845  00781F  00                 	db	0
   846  007820  3C                 	db	60
   847  007821  4A                 	db	74
   848  007822  4A                 	db	74
   849  007823  4A                 	db	74
   850  007824  2C                 	db	44
   851  007825  00                 	db	0
   852  007826  00                 	db	0
   853  007827  00                 	db	0
   854  007828  00                 	db	0
   855  007829  48                 	db	72
   856  00782A  7E                 	db	126
   857  00782B  49                 	db	73
   858  00782C  09                 	db	9
   859  00782D  00                 	db	0
   860  00782E  00                 	db	0
   861  00782F  00                 	db	0
   862  007830  26                 	db	38
   863  007831  49                 	db	73
   864  007832  49                 	db	73
   865  007833  49                 	db	73
   866  007834  3F                 	db	63
   867  007835  01                 	db	1
   868  007836  00                 	db	0
   869  007837  41                 	db	65
   870  007838  7F                 	db	127
   871  007839  48                 	db	72
   872  00783A  04                 	db	4
   873  00783B  44                 	db	68
   874  00783C  78                 	db	120
   875  00783D  40                 	db	64
   876  00783E  00                 	db	0
   877  00783F  00                 	db	0
   878  007840  00                 	db	0
   879  007841  44                 	db	68
   880  007842  7D                 	db	125
   881  007843  40                 	db	64
   882  007844  00                 	db	0
   883  007845  00                 	db	0
   884  007846  00                 	db	0
   885  007847  00                 	db	0
   886  007848  00                 	db	0
   887  007849  40                 	db	64
   888  00784A  44                 	db	68
   889  00784B  3D                 	db	61
   890  00784C  00                 	db	0
   891  00784D  00                 	db	0
   892  00784E  00                 	db	0
   893  00784F  41                 	db	65
   894  007850  7F                 	db	127
   895  007851  10                 	db	16
   896  007852  18                 	db	24
   897  007853  24                 	db	36
   898  007854  42                 	db	66
   899  007855  42                 	db	66
   900  007856  00                 	db	0
   901  007857  00                 	db	0
   902  007858  40                 	db	64
   903  007859  41                 	db	65
   904  00785A  7F                 	db	127
   905  00785B  40                 	db	64
   906  00785C  40                 	db	64
   907  00785D  00                 	db	0
   908  00785E  00                 	db	0
   909  00785F  42                 	db	66
   910  007860  7E                 	db	126
   911  007861  02                 	db	2
   912  007862  7C                 	db	124
   913  007863  02                 	db	2
   914  007864  7E                 	db	126
   915  007865  40                 	db	64
   916  007866  00                 	db	0
   917  007867  42                 	db	66
   918  007868  7E                 	db	126
   919  007869  44                 	db	68
   920  00786A  02                 	db	2
   921  00786B  42                 	db	66
   922  00786C  7C                 	db	124
   923  00786D  40                 	db	64
   924  00786E  00                 	db	0
   925  00786F  00                 	db	0
   926  007870  3C                 	db	60
   927  007871  42                 	db	66
   928  007872  42                 	db	66
   929  007873  42                 	db	66
   930  007874  3C                 	db	60
   931  007875  00                 	db	0
   932  007876  00                 	db	0
   933  007877  00                 	db	0
   934  007878  41                 	db	65
   935  007879  7F                 	db	127
   936  00787A  49                 	db	73
   937  00787B  09                 	db	9
   938  00787C  09                 	db	9
   939  00787D  06                 	db	6
   940  00787E  00                 	db	0
   941  00787F  00                 	db	0
   942  007880  06                 	db	6
   943  007881  09                 	db	9
   944  007882  09                 	db	9
   945  007883  49                 	db	73
   946  007884  7F                 	db	127
   947  007885  41                 	db	65
   948  007886  00                 	db	0
   949  007887  00                 	db	0
   950  007888  42                 	db	66
   951  007889  7E                 	db	126
   952  00788A  44                 	db	68
   953  00788B  02                 	db	2
   954  00788C  02                 	db	2
   955  00788D  04                 	db	4
   956  00788E  00                 	db	0
   957  00788F  00                 	db	0
   958  007890  64                 	db	100
   959  007891  4A                 	db	74
   960  007892  4A                 	db	74
   961  007893  4A                 	db	74
   962  007894  36                 	db	54
   963  007895  00                 	db	0
   964  007896  00                 	db	0
   965  007897  00                 	db	0
   966  007898  04                 	db	4
   967  007899  3F                 	db	63
   968  00789A  44                 	db	68
   969  00789B  44                 	db	68
   970  00789C  20                 	db	32
   971  00789D  00                 	db	0
   972  00789E  00                 	db	0
   973  00789F  00                 	db	0
   974  0078A0  02                 	db	2
   975  0078A1  3E                 	db	62
   976  0078A2  40                 	db	64
   977  0078A3  40                 	db	64
   978  0078A4  22                 	db	34
   979  0078A5  7E                 	db	126
   980  0078A6  40                 	db	64
   981  0078A7  02                 	db	2
   982  0078A8  0E                 	db	14
   983  0078A9  32                 	db	50
   984  0078AA  40                 	db	64
   985  0078AB  32                 	db	50
   986  0078AC  0E                 	db	14
   987  0078AD  02                 	db	2
   988  0078AE  00                 	db	0
   989  0078AF  02                 	db	2
   990  0078B0  1E                 	db	30
   991  0078B1  62                 	db	98
   992  0078B2  18                 	db	24
   993  0078B3  62                 	db	98
   994  0078B4  1E                 	db	30
   995  0078B5  02                 	db	2
   996  0078B6  00                 	db	0
   997  0078B7  42                 	db	66
   998  0078B8  62                 	db	98
   999  0078B9  14                 	db	20
  1000  0078BA  08                 	db	8
  1001  0078BB  14                 	db	20
  1002  0078BC  62                 	db	98
  1003  0078BD  42                 	db	66
  1004  0078BE  00                 	db	0
  1005  0078BF  01                 	db	1
  1006  0078C0  43                 	db	67
  1007  0078C1  45                 	db	69
  1008  0078C2  38                 	db	56
  1009  0078C3  05                 	db	5
  1010  0078C4  03                 	db	3
  1011  0078C5  01                 	db	1
  1012  0078C6  00                 	db	0
  1013  0078C7  00                 	db	0
  1014  0078C8  46                 	db	70
  1015  0078C9  62                 	db	98
  1016  0078CA  52                 	db	82
  1017  0078CB  4A                 	db	74
  1018  0078CC  46                 	db	70
  1019  0078CD  62                 	db	98
  1020  0078CE  00                 	db	0
  1021  0078CF  00                 	db	0
  1022  0078D0  00                 	db	0
  1023  0078D1  08                 	db	8
  1024  0078D2  36                 	db	54
  1025  0078D3  41                 	db	65
  1026  0078D4  00                 	db	0
  1027  0078D5  00                 	db	0
  1028  0078D6  00                 	db	0
  1029  0078D7  00                 	db	0
  1030  0078D8  00                 	db	0
  1031  0078D9  00                 	db	0
  1032  0078DA  7F                 	db	127
  1033  0078DB  00                 	db	0
  1034  0078DC  00                 	db	0
  1035  0078DD  00                 	db	0
  1036  0078DE  00                 	db	0
  1037  0078DF  00                 	db	0
  1038  0078E0  00                 	db	0
  1039  0078E1  00                 	db	0
  1040  0078E2  41                 	db	65
  1041  0078E3  36                 	db	54
  1042  0078E4  08                 	db	8
  1043  0078E5  00                 	db	0
  1044  0078E6  00                 	db	0
  1045  0078E7  00                 	db	0
  1046  0078E8  18                 	db	24
  1047  0078E9  08                 	db	8
  1048  0078EA  08                 	db	8
  1049  0078EB  10                 	db	16
  1050  0078EC  10                 	db	16
  1051  0078ED  18                 	db	24
  1052  0078EE  00                 	db	0
  1053  0078EF  AA                 	db	170
  1054  0078F0  55                 	db	85
  1055  0078F1  AA                 	db	170
  1056  0078F2  55                 	db	85
  1057  0078F3  AA                 	db	170
  1058  0078F4  55                 	db	85
  1059  0078F5  AA                 	db	170
  1060  0078F6  55                 	db	85
  1061  0078F7                     __end_of_OledFont0:
  1062                           	opt stack 0
  1063  0078F7                     _configDescriptor1:
  1064                           	opt stack 0
  1065  0078F7  09                 	db	9
  1066  0078F8  02                 	db	2
  1067  0078F9  43                 	db	67
  1068  0078FA  00                 	db	0
  1069  0078FB  02                 	db	2
  1070  0078FC  01                 	db	1
  1071  0078FD  00                 	db	0
  1072  0078FE  C0                 	db	192
  1073  0078FF  32                 	db	50
  1074  007900  09                 	db	9
  1075  007901  04                 	db	4
  1076  007902  00                 	db	0
  1077  007903  00                 	db	0
  1078  007904  01                 	db	1
  1079  007905  02                 	db	2
  1080  007906  02                 	db	2
  1081  007907  01                 	db	1
  1082  007908  00                 	db	0
  1083  007909  05                 	db	5
  1084  00790A  24                 	db	36
  1085  00790B  00                 	db	0
  1086  00790C  10                 	db	16
  1087  00790D  01                 	db	1
  1088  00790E  04                 	db	4
  1089  00790F  24                 	db	36
  1090  007910  02                 	db	2
  1091  007911  02                 	db	2
  1092  007912  05                 	db	5
  1093  007913  24                 	db	36
  1094  007914  06                 	db	6
  1095  007915  00                 	db	0
  1096  007916  01                 	db	1
  1097  007917  05                 	db	5
  1098  007918  24                 	db	36
  1099  007919  01                 	db	1
  1100  00791A  00                 	db	0
  1101  00791B  01                 	db	1
  1102  00791C  07                 	db	7
  1103  00791D  05                 	db	5
  1104  00791E  81                 	db	129
  1105  00791F  03                 	db	3
  1106  007920  08                 	db	8
  1107  007921  00                 	db	0
  1108  007922  02                 	db	2
  1109  007923  09                 	db	9
  1110  007924  04                 	db	4
  1111  007925  01                 	db	1
  1112  007926  00                 	db	0
  1113  007927  02                 	db	2
  1114  007928  0A                 	db	10
  1115  007929  00                 	db	0
  1116  00792A  00                 	db	0
  1117  00792B  00                 	db	0
  1118  00792C  07                 	db	7
  1119  00792D  05                 	db	5
  1120  00792E  02                 	db	2
  1121  00792F  02                 	db	2
  1122  007930  40                 	db	64
  1123  007931  00                 	db	0
  1124  007932  00                 	db	0
  1125  007933  07                 	db	7
  1126  007934  05                 	db	5
  1127  007935  82                 	db	130
  1128  007936  02                 	db	2
  1129  007937  40                 	db	64
  1130  007938  00                 	db	0
  1131  007939  00                 	db	0
  1132  00793A                     __end_of_configDescriptor1:
  1133                           	opt stack 0
  1134  00793A                     _sd002:
  1135                           	opt stack 0
  1136  00793A  34                 	db	52
  1137  00793B  03                 	db	3
  1138  00793C  0043               	dw	67
  1139  00793E  0044               	dw	68
  1140  007940  0043               	dw	67
  1141  007942  0020               	dw	32
  1142  007944  0052               	dw	82
  1143  007946  0053               	dw	83
  1144  007948  002D               	dw	45
  1145  00794A  0032               	dw	50
  1146  00794C  0033               	dw	51
  1147  00794E  0032               	dw	50
  1148  007950  0020               	dw	32
  1149  007952  0045               	dw	69
  1150  007954  006D               	dw	109
  1151  007956  0075               	dw	117
  1152  007958  006C               	dw	108
  1153  00795A  0061               	dw	97
  1154  00795C  0074               	dw	116
  1155  00795E  0069               	dw	105
  1156  007960  006F               	dw	111
  1157  007962  006E               	dw	110
  1158  007964  0020               	dw	32
  1159  007966  0044               	dw	68
  1160  007968  0065               	dw	101
  1161  00796A  006D               	dw	109
  1162  00796C  006F               	dw	111
  1163  00796E                     __end_of_sd002:
  1164                           	opt stack 0
  1165  00796E                     _sd001:
  1166                           	opt stack 0
  1167  00796E  34                 	db	52
  1168  00796F  03                 	db	3
  1169  007970  004D               	dw	77
  1170  007972  0069               	dw	105
  1171  007974  0063               	dw	99
  1172  007976  0072               	dw	114
  1173  007978  006F               	dw	111
  1174  00797A  0063               	dw	99
  1175  00797C  0068               	dw	104
  1176  00797E  0069               	dw	105
  1177  007980  0070               	dw	112
  1178  007982  0020               	dw	32
  1179  007984  0054               	dw	84
  1180  007986  0065               	dw	101
  1181  007988  0063               	dw	99
  1182  00798A  0068               	dw	104
  1183  00798C  006E               	dw	110
  1184  00798E  006F               	dw	111
  1185  007990  006C               	dw	108
  1186  007992  006F               	dw	111
  1187  007994  0067               	dw	103
  1188  007996  0079               	dw	121
  1189  007998  0020               	dw	32
  1190  00799A  0049               	dw	73
  1191  00799C  006E               	dw	110
  1192  00799E  0063               	dw	99
  1193  0079A0  002E               	dw	46
  1194  0079A2                     __end_of_sd001:
  1195                           	opt stack 0
  1196  0079A2                     _device_dsc:
  1197                           	opt stack 0
  1198  0079A2  12                 	db	18
  1199  0079A3  01                 	db	1
  1200  0079A4  0200               	dw	512
  1201  0079A6  02                 	db	2
  1202  0079A7  00                 	db	0
  1203  0079A8  00                 	db	0
  1204  0079A9  08                 	db	8
  1205  0079AA  04D8               	dw	1240
  1206  0079AC  000A               	dw	10
  1207  0079AE  0100               	dw	256
  1208  0079B0  01                 	db	1
  1209  0079B1  02                 	db	2
  1210  0079B2  00                 	db	0
  1211  0079B3  01                 	db	1
  1212  0079B4                     __end_of_device_dsc:
  1213                           	opt stack 0
  1214  0079B4                     _sd000:
  1215                           	opt stack 0
  1216  0079B4  04                 	db	4
  1217  0079B5  03                 	db	3
  1218  0079B6  0409               	dw	1033
  1219  0079B8                     __end_of_sd000:
  1220                           	opt stack 0
  1221  0000                     _ANSELCbits	set	3933
  1222  0000                     _ANSELAbits	set	3931
  1223  0000                     _TMR3	set	4018
  1224  0000                     _TMR0	set	4054
  1225  0000                     _UEP0bits	set	3946
  1226  0000                     _IPR3bits	set	4005
  1227  0000                     _RCONbits	set	4048
  1228  0000                     _UCON	set	3936
  1229  0000                     _USTAT	set	3937
  1230  0000                     _PIR3bits	set	4004
  1231  0000                     _UIEbits	set	3940
  1232  0000                     _UIRbits	set	3941
  1233  0000                     _UADDR	set	3939
  1234  0000                     _UIE	set	3940
  1235  0000                     _UEIE	set	3942
  1236  0000                     _UCFG	set	3938
  1237  0000                     _UIR	set	3941
  1238  0000                     _UEIR	set	3943
  1239  0000                     _PIE3bits	set	4003
  1240  0000                     _T0CONbits	set	4053
  1241  0000                     _T3GCONbits	set	4020
  1242  0000                     _T3CONbits	set	4017
  1243  0000                     _T3GCON	set	4020
  1244  0000                     _T3CON	set	4017
  1245  0000                     _T2CONbits	set	4026
  1246  0000                     _TMR2	set	4028
  1247  0000                     _PR2	set	4027
  1248  0000                     _T2CON	set	4026
  1249  0000                     _VREFCON0bits	set	3965
  1250  0000                     _CM1CON0bits	set	3992
  1251  0000                     _CM2CON1bits	set	3994
  1252  0000                     _CM1CON0	set	3992
  1253  0000                     _EEDATA	set	4008
  1254  0000                     _EEADR	set	4009
  1255  0000                     _EECON2	set	4007
  1256  0000                     _EECON1bits	set	4006
  1257  0000                     _TABLAT	set	4085
  1258  0000                     _TBLPTRL	set	4086
  1259  0000                     _TBLPTRH	set	4087
  1260  0000                     _TBLPTRU	set	4088
  1261  0000                     _TRISD	set	3989
  1262  0000                     _IOCBbits	set	3974
  1263  0000                     _INTCON2bits	set	4081
  1264  0000                     _TRISAbits	set	3986
  1265  0000                     _T1GCONbits	set	4044
  1266  0000                     _T1CONbits	set	4045
  1267  0000                     _TMR1L	set	4046
  1268  0000                     _TMR1H	set	4047
  1269  0000                     _T1GCON	set	4044
  1270  0000                     _T1CON	set	4045
  1271  0000                     _SSP1STATbits	set	4039
  1272  0000                     _SSPBUF	set	4041
  1273  0000                     _SSP1CON1bits	set	4038
  1274  0000                     _SSP1ADD	set	4040
  1275  0000                     _SSP1CON1	set	4038
  1276  0000                     _SSP1STAT	set	4039
  1277  0000                     _ADRESH	set	4036
  1278  0000                     _ADRESL	set	4035
  1279  0000                     _ADCON2	set	4032
  1280  0000                     _ADCON1	set	4033
  1281  0000                     _ADCON0	set	4034
  1282  0000                     _VREFCON0	set	3965
  1283  0000                     _ACTCON	set	4021
  1284  0000                     _OSCCON2bits	set	4050
  1285  0000                     _OSCCON2	set	4050
  1286  0000                     _OSCCON	set	4051
  1287  0000                     _OSCTUNE	set	3995
  1288  0000                     _PIR1bits	set	3998
  1289  0000                     _RCREG	set	4014
  1290  0000                     _RCSTAbits	set	4011
  1291  0000                     _TXSTA	set	4012
  1292  0000                     _RCSTA	set	4011
  1293  0000                     _BAUDCON	set	4024
  1294  0000                     _LATD	set	3980
  1295  0000                     _TRISCbits	set	3988
  1296  0000                     _TRISBbits	set	3987
  1297  0000                     _TRISEbits	set	3990
  1298  0000                     _SPBRGH	set	4016
  1299  0000                     _SPBRG	set	4015
  1300  0000                     _UCONbits	set	3936
  1301  0000                     _TMR3L	set	4018
  1302  0000                     _TMR3H	set	4019
  1303  0000                     _PIR2bits	set	4001
  1304  0000                     _WDTCONbits	set	4049
  1305  0000                     _PORTCbits	set	3970
  1306  0000                     _IOCCbits	set	3975
  1307  0000                     _INTCON3bits	set	4080
  1308  0000                     _PIE2bits	set	4000
  1309  0000                     _LATEbits	set	3981
  1310  0000                     _INTCONbits	set	4082
  1311  0000                     _ADCON0bits	set	4034
  1312  0000                     _PORTAbits	set	3968
  1313  0000                     _PIE1bits	set	3997
  1314  0000                     _TXREG	set	4013
  1315  0000                     _LATCbits	set	3979
  1316  0000                     _TXSTAbits	set	4012
  1317  0000                     _LATAbits	set	3977
  1318  0000                     _PORTBbits	set	3969
  1319  0000                     _LATBbits	set	3978
  1320  0000                     _UEP1	set	3947
  1321  0000                     _UEP0	set	3946
  1322  0000                     _CKE	set	32318
  1323  0000                     _CKP	set	32308
  1324  0000                     _GIE	set	32663
  1325  0000                     _PEIE	set	32662
  1326  0079B8                     STR_184:
  1327  0079B8  73                 	db	115	;'s'
  1328  0079B9  79                 	db	121	;'y'
  1329  0079BA  73                 	db	115	;'s'
  1330  0079BB  20                 	db	32
  1331  0079BC  73                 	db	115	;'s'
  1332  0079BD  65                 	db	101	;'e'
  1333  0079BE  74                 	db	116	;'t'
  1334  0079BF  20                 	db	32
  1335  0079C0  70                 	db	112	;'p'
  1336  0079C1  69                 	db	105	;'i'
  1337  0079C2  6E                 	db	110	;'n'
  1338  0079C3  6D                 	db	109	;'m'
  1339  0079C4  6F                 	db	111	;'o'
  1340  0079C5  64                 	db	100	;'d'
  1341  0079C6  65                 	db	101	;'e'
  1342  0079C7  20                 	db	32
  1343  0079C8  47                 	db	71	;'G'
  1344  0079C9  50                 	db	80	;'P'
  1345  0079CA  49                 	db	73	;'I'
  1346  0079CB  4F                 	db	79	;'O'
  1347  0079CC  31                 	db	49	;'1'
  1348  0079CD  32                 	db	50	;'2'
  1349  0079CE  20                 	db	32
  1350  0079CF  61                 	db	97	;'a'
  1351  0079D0  6E                 	db	110	;'n'
  1352  0079D1  61                 	db	97	;'a'
  1353  0079D2  00                 	db	0
  1354  0079D3                     STR_183:
  1355  0079D3  73                 	db	115	;'s'
  1356  0079D4  79                 	db	121	;'y'
  1357  0079D5  73                 	db	115	;'s'
  1358  0079D6  20                 	db	32
  1359  0079D7  73                 	db	115	;'s'
  1360  0079D8  65                 	db	101	;'e'
  1361  0079D9  74                 	db	116	;'t'
  1362  0079DA  20                 	db	32
  1363  0079DB  70                 	db	112	;'p'
  1364  0079DC  69                 	db	105	;'i'
  1365  0079DD  6E                 	db	110	;'n'
  1366  0079DE  6D                 	db	109	;'m'
  1367  0079DF  6F                 	db	111	;'o'
  1368  0079E0  64                 	db	100	;'d'
  1369  0079E1  65                 	db	101	;'e'
  1370  0079E2  20                 	db	32
  1371  0079E3  47                 	db	71	;'G'
  1372  0079E4  50                 	db	80	;'P'
  1373  0079E5  49                 	db	73	;'I'
  1374  0079E6  4F                 	db	79	;'O'
  1375  0079E7  31                 	db	49	;'1'
  1376  0079E8  33                 	db	51	;'3'
  1377  0079E9  20                 	db	32
  1378  0079EA  61                 	db	97	;'a'
  1379  0079EB  6E                 	db	110	;'n'
  1380  0079EC  61                 	db	97	;'a'
  1381  0079ED  00                 	db	0
  1382  0079EE                     STR_177:
  1383  0079EE  73                 	db	115	;'s'
  1384  0079EF  79                 	db	121	;'y'
  1385  0079F0  73                 	db	115	;'s'
  1386  0079F1  20                 	db	32
  1387  0079F2  73                 	db	115	;'s'
  1388  0079F3  65                 	db	101	;'e'
  1389  0079F4  74                 	db	116	;'t'
  1390  0079F5  20                 	db	32
  1391  0079F6  70                 	db	112	;'p'
  1392  0079F7  69                 	db	105	;'i'
  1393  0079F8  6E                 	db	110	;'n'
  1394  0079F9  64                 	db	100	;'d'
  1395  0079FA  69                 	db	105	;'i'
  1396  0079FB  67                 	db	103	;'g'
  1397  0079FC  20                 	db	32
  1398  0079FD  47                 	db	71	;'G'
  1399  0079FE  50                 	db	80	;'P'
  1400  0079FF  49                 	db	73	;'I'
  1401  007A00  4F                 	db	79	;'O'
  1402  007A01  31                 	db	49	;'1'
  1403  007A02  30                 	db	48	;'0'
  1404  007A03  20                 	db	32
  1405  007A04  30                 	db	48	;'0'
  1406  007A05  0D                 	db	13
  1407  007A06  0A                 	db	10
  1408  007A07  00                 	db	0
  1409  007A08                     STR_178:
  1410  007A08  73                 	db	115	;'s'
  1411  007A09  79                 	db	121	;'y'
  1412  007A0A  73                 	db	115	;'s'
  1413  007A0B  20                 	db	32
  1414  007A0C  73                 	db	115	;'s'
  1415  007A0D  65                 	db	101	;'e'
  1416  007A0E  74                 	db	116	;'t'
  1417  007A0F  20                 	db	32
  1418  007A10  70                 	db	112	;'p'
  1419  007A11  69                 	db	105	;'i'
  1420  007A12  6E                 	db	110	;'n'
  1421  007A13  64                 	db	100	;'d'
  1422  007A14  69                 	db	105	;'i'
  1423  007A15  67                 	db	103	;'g'
  1424  007A16  20                 	db	32
  1425  007A17  47                 	db	71	;'G'
  1426  007A18  50                 	db	80	;'P'
  1427  007A19  49                 	db	73	;'I'
  1428  007A1A  4F                 	db	79	;'O'
  1429  007A1B  31                 	db	49	;'1'
  1430  007A1C  31                 	db	49	;'1'
  1431  007A1D  20                 	db	32
  1432  007A1E  30                 	db	48	;'0'
  1433  007A1F  0D                 	db	13
  1434  007A20  0A                 	db	10
  1435  007A21  00                 	db	0
  1436  007A22                     STR_175:
  1437  007A22  73                 	db	115	;'s'
  1438  007A23  79                 	db	121	;'y'
  1439  007A24  73                 	db	115	;'s'
  1440  007A25  20                 	db	32
  1441  007A26  73                 	db	115	;'s'
  1442  007A27  65                 	db	101	;'e'
  1443  007A28  74                 	db	116	;'t'
  1444  007A29  20                 	db	32
  1445  007A2A  70                 	db	112	;'p'
  1446  007A2B  69                 	db	105	;'i'
  1447  007A2C  6E                 	db	110	;'n'
  1448  007A2D  64                 	db	100	;'d'
  1449  007A2E  69                 	db	105	;'i'
  1450  007A2F  67                 	db	103	;'g'
  1451  007A30  20                 	db	32
  1452  007A31  47                 	db	71	;'G'
  1453  007A32  50                 	db	80	;'P'
  1454  007A33  49                 	db	73	;'I'
  1455  007A34  4F                 	db	79	;'O'
  1456  007A35  31                 	db	49	;'1'
  1457  007A36  30                 	db	48	;'0'
  1458  007A37  20                 	db	32
  1459  007A38  31                 	db	49	;'1'
  1460  007A39  0D                 	db	13
  1461  007A3A  0A                 	db	10
  1462  007A3B  00                 	db	0
  1463  007A3C                     STR_176:
  1464  007A3C  73                 	db	115	;'s'
  1465  007A3D  79                 	db	121	;'y'
  1466  007A3E  73                 	db	115	;'s'
  1467  007A3F  20                 	db	32
  1468  007A40  73                 	db	115	;'s'
  1469  007A41  65                 	db	101	;'e'
  1470  007A42  74                 	db	116	;'t'
  1471  007A43  20                 	db	32
  1472  007A44  70                 	db	112	;'p'
  1473  007A45  69                 	db	105	;'i'
  1474  007A46  6E                 	db	110	;'n'
  1475  007A47  64                 	db	100	;'d'
  1476  007A48  69                 	db	105	;'i'
  1477  007A49  67                 	db	103	;'g'
  1478  007A4A  20                 	db	32
  1479  007A4B  47                 	db	71	;'G'
  1480  007A4C  50                 	db	80	;'P'
  1481  007A4D  49                 	db	73	;'I'
  1482  007A4E  4F                 	db	79	;'O'
  1483  007A4F  31                 	db	49	;'1'
  1484  007A50  31                 	db	49	;'1'
  1485  007A51  20                 	db	32
  1486  007A52  31                 	db	49	;'1'
  1487  007A53  0D                 	db	13
  1488  007A54  0A                 	db	10
  1489  007A55  00                 	db	0
  1490  007A56                     STR_185:
  1491  007A56  73                 	db	115	;'s'
  1492  007A57  79                 	db	121	;'y'
  1493  007A58  73                 	db	115	;'s'
  1494  007A59  20                 	db	32
  1495  007A5A  67                 	db	103	;'g'
  1496  007A5B  65                 	db	101	;'e'
  1497  007A5C  74                 	db	116	;'t'
  1498  007A5D  20                 	db	32
  1499  007A5E  70                 	db	112	;'p'
  1500  007A5F  69                 	db	105	;'i'
  1501  007A60  6E                 	db	110	;'n'
  1502  007A61  61                 	db	97	;'a'
  1503  007A62  6E                 	db	110	;'n'
  1504  007A63  61                 	db	97	;'a'
  1505  007A64  20                 	db	32
  1506  007A65  47                 	db	71	;'G'
  1507  007A66  50                 	db	80	;'P'
  1508  007A67  49                 	db	73	;'I'
  1509  007A68  4F                 	db	79	;'O'
  1510  007A69  31                 	db	49	;'1'
  1511  007A6A  32                 	db	50	;'2'
  1512  007A6B  00                 	db	0
  1513  007A6C                     STR_186:
  1514  007A6C  73                 	db	115	;'s'
  1515  007A6D  79                 	db	121	;'y'
  1516  007A6E  73                 	db	115	;'s'
  1517  007A6F  20                 	db	32
  1518  007A70  67                 	db	103	;'g'
  1519  007A71  65                 	db	101	;'e'
  1520  007A72  74                 	db	116	;'t'
  1521  007A73  20                 	db	32
  1522  007A74  70                 	db	112	;'p'
  1523  007A75  69                 	db	105	;'i'
  1524  007A76  6E                 	db	110	;'n'
  1525  007A77  61                 	db	97	;'a'
  1526  007A78  6E                 	db	110	;'n'
  1527  007A79  61                 	db	97	;'a'
  1528  007A7A  20                 	db	32
  1529  007A7B  47                 	db	71	;'G'
  1530  007A7C  50                 	db	80	;'P'
  1531  007A7D  49                 	db	73	;'I'
  1532  007A7E  4F                 	db	79	;'O'
  1533  007A7F  31                 	db	49	;'1'
  1534  007A80  33                 	db	51	;'3'
  1535  007A81  00                 	db	0
  1536  007A82                     STR_22:
  1537  007A82  73                 	db	115	;'s'
  1538  007A83  79                 	db	121	;'y'
  1539  007A84  73                 	db	115	;'s'
  1540  007A85  20                 	db	32
  1541  007A86  73                 	db	115	;'s'
  1542  007A87  6C                 	db	108	;'l'
  1543  007A88  65                 	db	101	;'e'
  1544  007A89  65                 	db	101	;'e'
  1545  007A8A  70                 	db	112	;'p'
  1546  007A8B  20                 	db	32
  1547  007A8C  39                 	db	57	;'9'
  1548  007A8D  39                 	db	57	;'9'
  1549  007A8E  39                 	db	57	;'9'
  1550  007A8F  39                 	db	57	;'9'
  1551  007A90  39                 	db	57	;'9'
  1552  007A91  39                 	db	57	;'9'
  1553  007A92  39                 	db	57	;'9'
  1554  007A93  39                 	db	57	;'9'
  1555  007A94  39                 	db	57	;'9'
  1556  007A95  00                 	db	0
  1557  007A96                     STR_96:
  1558  007A96  4D                 	db	77	;'M'
  1559  007A97  61                 	db	97	;'a'
  1560  007A98  63                 	db	99	;'c'
  1561  007A99  20                 	db	32
  1562  007A9A  45                 	db	69	;'E'
  1563  007A9B  72                 	db	114	;'r'
  1564  007A9C  72                 	db	114	;'r'
  1565  007A9D  6F                 	db	111	;'o'
  1566  007A9E  72                 	db	114	;'r'
  1567  007A9F  20                 	db	32
  1568  007AA0  4F                 	db	79	;'O'
  1569  007AA1  63                 	db	99	;'c'
  1570  007AA2  63                 	db	99	;'c'
  1571  007AA3  75                 	db	117	;'u'
  1572  007AA4  72                 	db	114	;'r'
  1573  007AA5  72                 	db	114	;'r'
  1574  007AA6  65                 	db	101	;'e'
  1575  007AA7  64                 	db	100	;'d'
  1576  007AA8  00                 	db	0
  1577  007AA9                     STR_83:
  1578  007AA9  28                 	db	40
  1579  007AAA  55                 	db	85	;'U'
  1580  007AAB  4E                 	db	78	;'N'
  1581  007AAC  43                 	db	67	;'C'
  1582  007AAD  4E                 	db	78	;'N'
  1583  007AAE  46                 	db	70	;'F'
  1584  007AAF  29                 	db	41
  1585  007AB0  20                 	db	32
  1586  007AB1  20                 	db	32
  1587  007AB2  20                 	db	32
  1588  007AB3  20                 	db	32
  1589  007AB4  28                 	db	40
  1590  007AB5  43                 	db	67	;'C'
  1591  007AB6  4E                 	db	78	;'N'
  1592  007AB7  46                 	db	70	;'F'
  1593  007AB8  29                 	db	41
  1594  007AB9  20                 	db	32
  1595  007ABA  00                 	db	0
  1596  007ABB                     STR_40:
  1597  007ABB  20                 	db	32
  1598  007ABC  20                 	db	32
  1599  007ABD  28                 	db	40
  1600  007ABE  53                 	db	83	;'S'
  1601  007ABF  32                 	db	50	;'2'
  1602  007AC0  29                 	db	41
  1603  007AC1  20                 	db	32
  1604  007AC2  20                 	db	32
  1605  007AC3  20                 	db	32
  1606  007AC4  20                 	db	32
  1607  007AC5  20                 	db	32
  1608  007AC6  20                 	db	32
  1609  007AC7  20                 	db	32
  1610  007AC8  20                 	db	32
  1611  007AC9  20                 	db	32
  1612  007ACA  20                 	db	32
  1613  007ACB  00                 	db	0
  1614  007ACC                     STR_92:
  1615  007ACC  20                 	db	32
  1616  007ACD  20                 	db	32
  1617  007ACE  20                 	db	32
  1618  007ACF  20                 	db	32
  1619  007AD0  52                 	db	82	;'R'
  1620  007AD1  65                 	db	101	;'e'
  1621  007AD2  63                 	db	99	;'c'
  1622  007AD3  65                 	db	101	;'e'
  1623  007AD4  69                 	db	105	;'i'
  1624  007AD5  76                 	db	118	;'v'
  1625  007AD6  65                 	db	101	;'e'
  1626  007AD7  64                 	db	100	;'d'
  1627  007AD8  20                 	db	32
  1628  007AD9  20                 	db	32
  1629  007ADA  20                 	db	32
  1630  007ADB  20                 	db	32
  1631  007ADC  00                 	db	0
  1632  007ADD                     STR_42:
  1633  007ADD  20                 	db	32
  1634  007ADE  20                 	db	32
  1635  007ADF  20                 	db	32
  1636  007AE0  20                 	db	32
  1637  007AE1  20                 	db	32
  1638  007AE2  20                 	db	32
  1639  007AE3  20                 	db	32
  1640  007AE4  20                 	db	32
  1641  007AE5  20                 	db	32
  1642  007AE6  28                 	db	40
  1643  007AE7  53                 	db	83	;'S'
  1644  007AE8  33                 	db	51	;'3'
  1645  007AE9  29                 	db	41
  1646  007AEA  20                 	db	32
  1647  007AEB  20                 	db	32
  1648  007AEC  20                 	db	32
  1649  007AED  00                 	db	0
  1650  007AEE                     STR_34:
  1651  007AEE  20                 	db	32
  1652  007AEF  20                 	db	32
  1653  007AF0  28                 	db	40
  1654  007AF1  53                 	db	83	;'S'
  1655  007AF2  32                 	db	50	;'2'
  1656  007AF3  29                 	db	41
  1657  007AF4  20                 	db	32
  1658  007AF5  20                 	db	32
  1659  007AF6  20                 	db	32
  1660  007AF7  28                 	db	40
  1661  007AF8  53                 	db	83	;'S'
  1662  007AF9  33                 	db	51	;'3'
  1663  007AFA  29                 	db	41
  1664  007AFB  20                 	db	32
  1665  007AFC  20                 	db	32
  1666  007AFD  20                 	db	32
  1667  007AFE  00                 	db	0
  1668  007AFF                     STR_79:
  1669  007AFF  20                 	db	32
  1670  007B00  20                 	db	32
  1671  007B01  4C                 	db	76	;'L'
  1672  007B02  61                 	db	97	;'a'
  1673  007B03  73                 	db	115	;'s'
  1674  007B04  74                 	db	116	;'t'
  1675  007B05  20                 	db	32
  1676  007B06  4D                 	db	77	;'M'
  1677  007B07  65                 	db	101	;'e'
  1678  007B08  73                 	db	115	;'s'
  1679  007B09  73                 	db	115	;'s'
  1680  007B0A  61                 	db	97	;'a'
  1681  007B0B  67                 	db	103	;'g'
  1682  007B0C  65                 	db	101	;'e'
  1683  007B0D  20                 	db	32
  1684  007B0E  20                 	db	32
  1685  007B0F  00                 	db	0
  1686  007B10                     STR_78:
  1687  007B10  20                 	db	32
  1688  007B11  56                 	db	86	;'V'
  1689  007B12  69                 	db	105	;'i'
  1690  007B13  65                 	db	101	;'e'
  1691  007B14  77                 	db	119	;'w'
  1692  007B15  20                 	db	32
  1693  007B16  44                 	db	68	;'D'
  1694  007B17  6F                 	db	111	;'o'
  1695  007B18  77                 	db	119	;'w'
  1696  007B19  6E                 	db	110	;'n'
  1697  007B1A  6C                 	db	108	;'l'
  1698  007B1B  69                 	db	105	;'i'
  1699  007B1C  6E                 	db	110	;'n'
  1700  007B1D  6B                 	db	107	;'k'
  1701  007B1E  20                 	db	32
  1702  007B1F  20                 	db	32
  1703  007B20  00                 	db	0
  1704  007B21                     STR_75:
  1705  007B21  20                 	db	32
  1706  007B22  20                 	db	32
  1707  007B23  49                 	db	73	;'I'
  1708  007B24  73                 	db	115	;'s'
  1709  007B25  73                 	db	115	;'s'
  1710  007B26  75                 	db	117	;'u'
  1711  007B27  65                 	db	101	;'e'
  1712  007B28  20                 	db	32
  1713  007B29  55                 	db	85	;'U'
  1714  007B2A  70                 	db	112	;'p'
  1715  007B2B  6C                 	db	108	;'l'
  1716  007B2C  69                 	db	105	;'i'
  1717  007B2D  6E                 	db	110	;'n'
  1718  007B2E  6B                 	db	107	;'k'
  1719  007B2F  20                 	db	32
  1720  007B30  20                 	db	32
  1721  007B31  00                 	db	0
  1722  007B32                     STR_29:
  1723  007B32  20                 	db	32
  1724  007B33  28                 	db	40
  1725  007B34  53                 	db	83	;'S'
  1726  007B35  32                 	db	50	;'2'
  1727  007B36  29                 	db	41
  1728  007B37  20                 	db	32
  1729  007B38  20                 	db	32
  1730  007B39  20                 	db	32
  1731  007B3A  20                 	db	32
  1732  007B3B  20                 	db	32
  1733  007B3C  20                 	db	32
  1734  007B3D  28                 	db	40
  1735  007B3E  53                 	db	83	;'S'
  1736  007B3F  33                 	db	51	;'3'
  1737  007B40  29                 	db	41
  1738  007B41  20                 	db	32
  1739  007B42  00                 	db	0
  1740  007B43                     STR_32:
  1741  007B43  20                 	db	32
  1742  007B44  4A                 	db	74	;'J'
  1743  007B45  6F                 	db	111	;'o'
  1744  007B46  69                 	db	105	;'i'
  1745  007B47  6E                 	db	110	;'n'
  1746  007B48  69                 	db	105	;'i'
  1747  007B49  6E                 	db	110	;'n'
  1748  007B4A  67                 	db	103	;'g'
  1749  007B4B  20                 	db	32
  1750  007B4C  4D                 	db	77	;'M'
  1751  007B4D  65                 	db	101	;'e'
  1752  007B4E  74                 	db	116	;'t'
  1753  007B4F  68                 	db	104	;'h'
  1754  007B50  6F                 	db	111	;'o'
  1755  007B51  64                 	db	100	;'d'
  1756  007B52  20                 	db	32
  1757  007B53  00                 	db	0
  1758  007B54                     STR_91:
  1759  007B54  53                 	db	83	;'S'
  1760  007B55  65                 	db	101	;'e'
  1761  007B56  72                 	db	114	;'r'
  1762  007B57  76                 	db	118	;'v'
  1763  007B58  65                 	db	101	;'e'
  1764  007B59  72                 	db	114	;'r'
  1765  007B5A  20                 	db	32
  1766  007B5B  52                 	db	82	;'R'
  1767  007B5C  65                 	db	101	;'e'
  1768  007B5D  73                 	db	115	;'s'
  1769  007B5E  70                 	db	112	;'p'
  1770  007B5F  6F                 	db	111	;'o'
  1771  007B60  6E                 	db	110	;'n'
  1772  007B61  73                 	db	115	;'s'
  1773  007B62  65                 	db	101	;'e'
  1774  007B63  20                 	db	32
  1775  007B64  00                 	db	0
  1776  007B65                     STR_120:
  1777  007B65  54                 	db	84	;'T'
  1778  007B66  78                 	db	120	;'x'
  1779  007B67  20                 	db	32
  1780  007B68  45                 	db	69	;'E'
  1781  007B69  76                 	db	118	;'v'
  1782  007B6A  65                 	db	101	;'e'
  1783  007B6B  6E                 	db	110	;'n'
  1784  007B6C  74                 	db	116	;'t'
  1785  007B6D  20                 	db	32
  1786  007B6E  54                 	db	84	;'T'
  1787  007B6F  69                 	db	105	;'i'
  1788  007B70  6D                 	db	109	;'m'
  1789  007B71  69                 	db	105	;'i'
  1790  007B72  6E                 	db	110	;'n'
  1791  007B73  67                 	db	103	;'g'
  1792  007B74  20                 	db	32
  1793  007B75  00                 	db	0
  1794  007B76                     STR_119:
  1795  007B76  50                 	db	80	;'P'
  1796  007B77  65                 	db	101	;'e'
  1797  007B78  72                 	db	114	;'r'
  1798  007B79  69                 	db	105	;'i'
  1799  007B7A  6F                 	db	111	;'o'
  1800  007B7B  64                 	db	100	;'d'
  1801  007B7C  69                 	db	105	;'i'
  1802  007B7D  63                 	db	99	;'c'
  1803  007B7E  20                 	db	32
  1804  007B7F  55                 	db	85	;'U'
  1805  007B80  70                 	db	112	;'p'
  1806  007B81  6C                 	db	108	;'l'
  1807  007B82  69                 	db	105	;'i'
  1808  007B83  6E                 	db	110	;'n'
  1809  007B84  6B                 	db	107	;'k'
  1810  007B85  20                 	db	32
  1811  007B86  00                 	db	0
  1812  007B87                     STR_76:
  1813  007B87  20                 	db	32
  1814  007B88  4C                 	db	76	;'L'
  1815  007B89  6F                 	db	111	;'o'
  1816  007B8A  52                 	db	82	;'R'
  1817  007B8B  61                 	db	97	;'a'
  1818  007B8C  57                 	db	87	;'W'
  1819  007B8D  41                 	db	65	;'A'
  1820  007B8E  4E                 	db	78	;'N'
  1821  007B8F  20                 	db	32
  1822  007B90  50                 	db	80	;'P'
  1823  007B91  61                 	db	97	;'a'
  1824  007B92  63                 	db	99	;'c'
  1825  007B93  6B                 	db	107	;'k'
  1826  007B94  65                 	db	101	;'e'
  1827  007B95  74                 	db	116	;'t'
  1828  007B96  20                 	db	32
  1829  007B97  00                 	db	0
  1830  007B98                     STR_33:
  1831  007B98  3C                 	db	60	;'<'
  1832  007B99  2D                 	db	45
  1833  007B9A  20                 	db	32
  1834  007B9B  41                 	db	65	;'A'
  1835  007B9C  42                 	db	66	;'B'
  1836  007B9D  50                 	db	80	;'P'
  1837  007B9E  20                 	db	32
  1838  007B9F  20                 	db	32
  1839  007BA0  20                 	db	32
  1840  007BA1  4F                 	db	79	;'O'
  1841  007BA2  54                 	db	84	;'T'
  1842  007BA3  41                 	db	65	;'A'
  1843  007BA4  41                 	db	65	;'A'
  1844  007BA5  20                 	db	32
  1845  007BA6  2D                 	db	45
  1846  007BA7  3E                 	db	62	;'>'
  1847  007BA8  00                 	db	0
  1848  007BA9                     STR_26:
  1849  007BA9  52                 	db	82	;'R'
  1850  007BAA  65                 	db	101	;'e'
  1851  007BAB  52                 	db	82	;'R'
  1852  007BAC  75                 	db	117	;'u'
  1853  007BAD  6E                 	db	110	;'n'
  1854  007BAE  20                 	db	32
  1855  007BAF  50                 	db	80	;'P'
  1856  007BB0  77                 	db	119	;'w'
  1857  007BB1  72                 	db	114	;'r'
  1858  007BB2  54                 	db	84	;'T'
  1859  007BB3  73                 	db	115	;'s'
  1860  007BB4  74                 	db	116	;'t'
  1861  007BB5  3C                 	db	60	;'<'
  1862  007BB6  53                 	db	83	;'S'
  1863  007BB7  32                 	db	50	;'2'
  1864  007BB8  3E                 	db	62	;'>'
  1865  007BB9  00                 	db	0
  1866  007BBA                     STR_94:
  1867  007BBA  44                 	db	68	;'D'
  1868  007BBB  61                 	db	97	;'a'
  1869  007BBC  74                 	db	116	;'t'
  1870  007BBD  61                 	db	97	;'a'
  1871  007BBE  20                 	db	32
  1872  007BBF  54                 	db	84	;'T'
  1873  007BC0  72                 	db	114	;'r'
  1874  007BC1  61                 	db	97	;'a'
  1875  007BC2  6E                 	db	110	;'n'
  1876  007BC3  73                 	db	115	;'s'
  1877  007BC4  6D                 	db	109	;'m'
  1878  007BC5  69                 	db	105	;'i'
  1879  007BC6  74                 	db	116	;'t'
  1880  007BC7  74                 	db	116	;'t'
  1881  007BC8  65                 	db	101	;'e'
  1882  007BC9  64                 	db	100	;'d'
  1883  007BCA  00                 	db	0
  1884  007BCB                     STR_151:
  1885  007BCB  45                 	db	69	;'E'
  1886  007BCC  6E                 	db	110	;'n'
  1887  007BCD  74                 	db	116	;'t'
  1888  007BCE  65                 	db	101	;'e'
  1889  007BCF  72                 	db	114	;'r'
  1890  007BD0  20                 	db	32
  1891  007BD1  53                 	db	83	;'S'
  1892  007BD2  6C                 	db	108	;'l'
  1893  007BD3  65                 	db	101	;'e'
  1894  007BD4  65                 	db	101	;'e'
  1895  007BD5  70                 	db	112	;'p'
  1896  007BD6  20                 	db	32
  1897  007BD7  4D                 	db	77	;'M'
  1898  007BD8  6F                 	db	111	;'o'
  1899  007BD9  64                 	db	100	;'d'
  1900  007BDA  65                 	db	101	;'e'
  1901  007BDB  00                 	db	0
  1902  007BDC                     STR_81:
  1903  007BDC  55                 	db	85	;'U'
  1904  007BDD  70                 	db	112	;'p'
  1905  007BDE  6C                 	db	108	;'l'
  1906  007BDF  69                 	db	105	;'i'
  1907  007BE0  6E                 	db	110	;'n'
  1908  007BE1  6B                 	db	107	;'k'
  1909  007BE2  20                 	db	32
  1910  007BE3  50                 	db	80	;'P'
  1911  007BE4  63                 	db	99	;'c'
  1912  007BE5  6B                 	db	107	;'k'
  1913  007BE6  74                 	db	116	;'t'
  1914  007BE7  20                 	db	32
  1915  007BE8  54                 	db	84	;'T'
  1916  007BE9  79                 	db	121	;'y'
  1917  007BEA  70                 	db	112	;'p'
  1918  007BEB  65                 	db	101	;'e'
  1919  007BEC  00                 	db	0
  1920  007BED                     STR_135:
  1921  007BED  53                 	db	83	;'S'
  1922  007BEE  65                 	db	101	;'e'
  1923  007BEF  6C                 	db	108	;'l'
  1924  007BF0  65                 	db	101	;'e'
  1925  007BF1  63                 	db	99	;'c'
  1926  007BF2  74                 	db	116	;'t'
  1927  007BF3  20                 	db	32
  1928  007BF4  44                 	db	68	;'D'
  1929  007BF5  61                 	db	97	;'a'
  1930  007BF6  74                 	db	116	;'t'
  1931  007BF7  61                 	db	97	;'a'
  1932  007BF8  20                 	db	32
  1933  007BF9  52                 	db	82	;'R'
  1934  007BFA  61                 	db	97	;'a'
  1935  007BFB  74                 	db	116	;'t'
  1936  007BFC  65                 	db	101	;'e'
  1937  007BFD  00                 	db	0
  1938  007BFE                     STR_27:
  1939  007BFE  4D                 	db	77	;'M'
  1940  007BFF  6F                 	db	111	;'o'
  1941  007C00  62                 	db	98	;'b'
  1942  007C01  69                 	db	105	;'i'
  1943  007C02  6C                 	db	108	;'l'
  1944  007C03  65                 	db	101	;'e'
  1945  007C04  20                 	db	32
  1946  007C05  4D                 	db	77	;'M'
  1947  007C06  6F                 	db	111	;'o'
  1948  007C07  74                 	db	116	;'t'
  1949  007C08  65                 	db	101	;'e'
  1950  007C09  20                 	db	32
  1951  007C0A  2D                 	db	45
  1952  007C0B  41                 	db	65	;'A'
  1953  007C0C  70                 	db	112	;'p'
  1954  007C0D  70                 	db	112	;'p'
  1955  007C0E  00                 	db	0
  1956  007C0F                     STR_28:
  1957  007C0F  4E                 	db	78	;'N'
  1958  007C10  61                 	db	97	;'a'
  1959  007C11  76                 	db	118	;'v'
  1960  007C12  69                 	db	105	;'i'
  1961  007C13  67                 	db	103	;'g'
  1962  007C14  61                 	db	97	;'a'
  1963  007C15  74                 	db	116	;'t'
  1964  007C16  65                 	db	101	;'e'
  1965  007C17  20                 	db	32
  1966  007C18  20                 	db	32
  1967  007C19  53                 	db	83	;'S'
  1968  007C1A  65                 	db	101	;'e'
  1969  007C1B  6C                 	db	108	;'l'
  1970  007C1C  65                 	db	101	;'e'
  1971  007C1D  63                 	db	99	;'c'
  1972  007C1E  74                 	db	116	;'t'
  1973  007C1F  00                 	db	0
  1974  007C20                     STR_111:
  1975  007C20  4D                 	db	77	;'M'
  1976  007C21  65                 	db	101	;'e'
  1977  007C22  6E                 	db	110	;'n'
  1978  007C23  75                 	db	117	;'u'
  1979  007C24  20                 	db	32
  1980  007C25  48                 	db	72	;'H'
  1981  007C26  61                 	db	97	;'a'
  1982  007C27  73                 	db	115	;'s'
  1983  007C28  20                 	db	32
  1984  007C29  54                 	db	84	;'T'
  1985  007C2A  69                 	db	105	;'i'
  1986  007C2B  6D                 	db	109	;'m'
  1987  007C2C  65                 	db	101	;'e'
  1988  007C2D  6F                 	db	111	;'o'
  1989  007C2E  75                 	db	117	;'u'
  1990  007C2F  74                 	db	116	;'t'
  1991  007C30  00                 	db	0
  1992  007C31                     STR_71:
  1993  007C31  53                 	db	83	;'S'
  1994  007C32  65                 	db	101	;'e'
  1995  007C33  6E                 	db	110	;'n'
  1996  007C34  64                 	db	100	;'d'
  1997  007C35  20                 	db	32
  1998  007C36  50                 	db	80	;'P'
  1999  007C37  65                 	db	101	;'e'
  2000  007C38  72                 	db	114	;'r'
  2001  007C39  69                 	db	105	;'i'
  2002  007C3A  6F                 	db	111	;'o'
  2003  007C3B  64                 	db	100	;'d'
  2004  007C3C  69                 	db	105	;'i'
  2005  007C3D  63                 	db	99	;'c'
  2006  007C3E  20                 	db	32
  2007  007C3F  54                 	db	84	;'T'
  2008  007C40  78                 	db	120	;'x'
  2009  007C41  00                 	db	0
  2010  007C42                     STR_105:
  2011  007C42  44                 	db	68	;'D'
  2012  007C43  6F                 	db	111	;'o'
  2013  007C44  77                 	db	119	;'w'
  2014  007C45  6E                 	db	110	;'n'
  2015  007C46  6C                 	db	108	;'l'
  2016  007C47  69                 	db	105	;'i'
  2017  007C48  6E                 	db	110	;'n'
  2018  007C49  6B                 	db	107	;'k'
  2019  007C4A  20                 	db	32
  2020  007C4B  44                 	db	68	;'D'
  2021  007C4C  69                 	db	105	;'i'
  2022  007C4D  73                 	db	115	;'s'
  2023  007C4E  70                 	db	112	;'p'
  2024  007C4F  6C                 	db	108	;'l'
  2025  007C50  61                 	db	97	;'a'
  2026  007C51  79                 	db	121	;'y'
  2027  007C52  00                 	db	0
  2028  007C53                     STR_103:
  2029  007C53  20                 	db	32
  2030  007C54  20                 	db	32
  2031  007C55  20                 	db	32
  2032  007C56  20                 	db	32
  2033  007C57  44                 	db	68	;'D'
  2034  007C58  69                 	db	105	;'i'
  2035  007C59  73                 	db	115	;'s'
  2036  007C5A  70                 	db	112	;'p'
  2037  007C5B  6C                 	db	108	;'l'
  2038  007C5C  61                 	db	97	;'a'
  2039  007C5D  79                 	db	121	;'y'
  2040  007C5E  20                 	db	32
  2041  007C5F  20                 	db	32
  2042  007C60  20                 	db	32
  2043  007C61  20                 	db	32
  2044  007C62  00                 	db	0
  2045  007C63                     STR_102:
  2046  007C63  20                 	db	32
  2047  007C64  20                 	db	32
  2048  007C65  53                 	db	83	;'S'
  2049  007C66  65                 	db	101	;'e'
  2050  007C67  6E                 	db	110	;'n'
  2051  007C68  73                 	db	115	;'s'
  2052  007C69  6F                 	db	111	;'o'
  2053  007C6A  72                 	db	114	;'r'
  2054  007C6B  20                 	db	32
  2055  007C6C  44                 	db	68	;'D'
  2056  007C6D  61                 	db	97	;'a'
  2057  007C6E  74                 	db	116	;'t'
  2058  007C6F  61                 	db	97	;'a'
  2059  007C70  20                 	db	32
  2060  007C71  20                 	db	32
  2061  007C72  00                 	db	0
  2062  007C73                     STR_114:
  2063  007C73  28                 	db	40
  2064  007C74  4E                 	db	78	;'N'
  2065  007C75  41                 	db	65	;'A'
  2066  007C76  56                 	db	86	;'V'
  2067  007C77  29                 	db	41
  2068  007C78  20                 	db	32
  2069  007C79  20                 	db	32
  2070  007C7A  20                 	db	32
  2071  007C7B  20                 	db	32
  2072  007C7C  28                 	db	40
  2073  007C7D  43                 	db	67	;'C'
  2074  007C7E  4E                 	db	78	;'N'
  2075  007C7F  47                 	db	71	;'G'
  2076  007C80  29                 	db	41
  2077  007C81  20                 	db	32
  2078  007C82  00                 	db	0
  2079  007C83                     STR_77:
  2080  007C83  28                 	db	40
  2081  007C84  4E                 	db	78	;'N'
  2082  007C85  41                 	db	65	;'A'
  2083  007C86  56                 	db	86	;'V'
  2084  007C87  29                 	db	41
  2085  007C88  20                 	db	32
  2086  007C89  20                 	db	32
  2087  007C8A  20                 	db	32
  2088  007C8B  20                 	db	32
  2089  007C8C  28                 	db	40
  2090  007C8D  53                 	db	83	;'S'
  2091  007C8E  45                 	db	69	;'E'
  2092  007C8F  4C                 	db	76	;'L'
  2093  007C90  29                 	db	41
  2094  007C91  20                 	db	32
  2095  007C92  00                 	db	0
  2096  007C93                     STR_152:
  2097  007C93  28                 	db	40
  2098  007C94  4E                 	db	78	;'N'
  2099  007C95  41                 	db	65	;'A'
  2100  007C96  56                 	db	86	;'V'
  2101  007C97  29                 	db	41
  2102  007C98  20                 	db	32
  2103  007C99  20                 	db	32
  2104  007C9A  20                 	db	32
  2105  007C9B  20                 	db	32
  2106  007C9C  28                 	db	40
  2107  007C9D  53                 	db	83	;'S'
  2108  007C9E  4C                 	db	76	;'L'
  2109  007C9F  50                 	db	80	;'P'
  2110  007CA0  29                 	db	41
  2111  007CA1  20                 	db	32
  2112  007CA2  00                 	db	0
  2113  007CA3                     STR_163:
  2114  007CA3  6D                 	db	109	;'m'
  2115  007CA4  61                 	db	97	;'a'
  2116  007CA5  63                 	db	99	;'c'
  2117  007CA6  20                 	db	32
  2118  007CA7  73                 	db	115	;'s'
  2119  007CA8  65                 	db	101	;'e'
  2120  007CA9  74                 	db	116	;'t'
  2121  007CAA  20                 	db	32
  2122  007CAB  61                 	db	97	;'a'
  2123  007CAC  64                 	db	100	;'d'
  2124  007CAD  72                 	db	114	;'r'
  2125  007CAE  20                 	db	32
  2126  007CAF  6F                 	db	111	;'o'
  2127  007CB0  66                 	db	102	;'f'
  2128  007CB1  66                 	db	102	;'f'
  2129  007CB2  00                 	db	0
  2130  007CB3                     STR_98:
  2131  007CB3  4E                 	db	78	;'N'
  2132  007CB4  6F                 	db	111	;'o'
  2133  007CB5  20                 	db	32
  2134  007CB6  46                 	db	70	;'F'
  2135  007CB7  72                 	db	114	;'r'
  2136  007CB8  65                 	db	101	;'e'
  2137  007CB9  65                 	db	101	;'e'
  2138  007CBA  20                 	db	32
  2139  007CBB  43                 	db	67	;'C'
  2140  007CBC  68                 	db	104	;'h'
  2141  007CBD  61                 	db	97	;'a'
  2142  007CBE  6E                 	db	110	;'n'
  2143  007CBF  6E                 	db	110	;'n'
  2144  007CC0  65                 	db	101	;'e'
  2145  007CC1  6C                 	db	108	;'l'
  2146  007CC2  00                 	db	0
  2147  007CC3                     STR_7:
  2148  007CC3  42                 	db	66	;'B'
  2149  007CC4  75                 	db	117	;'u'
  2150  007CC5  69                 	db	105	;'i'
  2151  007CC6  6C                 	db	108	;'l'
  2152  007CC7  64                 	db	100	;'d'
  2153  007CC8  20                 	db	32
  2154  007CC9  44                 	db	68	;'D'
  2155  007CCA  61                 	db	97	;'a'
  2156  007CCB  74                 	db	116	;'t'
  2157  007CCC  65                 	db	101	;'e'
  2158  007CCD  2F                 	db	47
  2159  007CCE  54                 	db	84	;'T'
  2160  007CCF  69                 	db	105	;'i'
  2161  007CD0  6D                 	db	109	;'m'
  2162  007CD1  65                 	db	101	;'e'
  2163  007CD2  00                 	db	0
  2164  007CD3                     STR_112:
  2165  007CD3  20                 	db	32
  2166  007CD4  20                 	db	32
  2167  007CD5  20                 	db	32
  2168  007CD6  20                 	db	32
  2169  007CD7  45                 	db	69	;'E'
  2170  007CD8  6E                 	db	110	;'n'
  2171  007CD9  61                 	db	97	;'a'
  2172  007CDA  62                 	db	98	;'b'
  2173  007CDB  6C                 	db	108	;'l'
  2174  007CDC  65                 	db	101	;'e'
  2175  007CDD  64                 	db	100	;'d'
  2176  007CDE  20                 	db	32
  2177  007CDF  20                 	db	32
  2178  007CE0  20                 	db	32
  2179  007CE1  00                 	db	0
  2180  007CE2                     STR_113:
  2181  007CE2  20                 	db	32
  2182  007CE3  20                 	db	32
  2183  007CE4  20                 	db	32
  2184  007CE5  20                 	db	32
  2185  007CE6  44                 	db	68	;'D'
  2186  007CE7  69                 	db	105	;'i'
  2187  007CE8  73                 	db	115	;'s'
  2188  007CE9  61                 	db	97	;'a'
  2189  007CEA  62                 	db	98	;'b'
  2190  007CEB  6C                 	db	108	;'l'
  2191  007CEC  65                 	db	101	;'e'
  2192  007CED  64                 	db	100	;'d'
  2193  007CEE  20                 	db	32
  2194  007CEF  20                 	db	32
  2195  007CF0  00                 	db	0
  2196  007CF1                     STR_172:
  2197  007CF1  6D                 	db	109	;'m'
  2198  007CF2  61                 	db	97	;'a'
  2199  007CF3  63                 	db	99	;'c'
  2200  007CF4  20                 	db	32
  2201  007CF5  73                 	db	115	;'s'
  2202  007CF6  65                 	db	101	;'e'
  2203  007CF7  74                 	db	116	;'t'
  2204  007CF8  20                 	db	32
  2205  007CF9  61                 	db	97	;'a'
  2206  007CFA  64                 	db	100	;'d'
  2207  007CFB  72                 	db	114	;'r'
  2208  007CFC  20                 	db	32
  2209  007CFD  6F                 	db	111	;'o'
  2210  007CFE  6E                 	db	110	;'n'
  2211  007CFF  00                 	db	0
  2212  007D00                     STR_2:
  2213  007D00  20                 	db	32
  2214  007D01  20                 	db	32
  2215  007D02  20                 	db	32
  2216  007D03  4C                 	db	76	;'L'
  2217  007D04  6F                 	db	111	;'o'
  2218  007D05  52                 	db	82	;'R'
  2219  007D06  61                 	db	97	;'a'
  2220  007D07  20                 	db	32
  2221  007D08  44                 	db	68	;'D'
  2222  007D09  65                 	db	101	;'e'
  2223  007D0A  6D                 	db	109	;'m'
  2224  007D0B  6F                 	db	111	;'o'
  2225  007D0C  20                 	db	32
  2226  007D0D  20                 	db	32
  2227  007D0E  00                 	db	0
  2228  007D0F                     STR_3:
  2229  007D0F  20                 	db	32
  2230  007D10  56                 	db	86	;'V'
  2231  007D11  20                 	db	32
  2232  007D12  31                 	db	49	;'1'
  2233  007D13  2E                 	db	46
  2234  007D14  30                 	db	48	;'0'
  2235  007D15  2E                 	db	46
  2236  007D16  31                 	db	49	;'1'
  2237  007D17  20                 	db	32
  2238  007D18  43                 	db	67	;'C'
  2239  007D19  6F                 	db	111	;'o'
  2240  007D1A  64                 	db	100	;'d'
  2241  007D1B  65                 	db	101	;'e'
  2242  007D1C  20                 	db	32
  2243  007D1D  00                 	db	0
  2244  007D1E                     STR_1:
  2245  007D1E  4D                 	db	77	;'M'
  2246  007D1F  69                 	db	105	;'i'
  2247  007D20  63                 	db	99	;'c'
  2248  007D21  72                 	db	114	;'r'
  2249  007D22  6F                 	db	111	;'o'
  2250  007D23  63                 	db	99	;'c'
  2251  007D24  68                 	db	104	;'h'
  2252  007D25  69                 	db	105	;'i'
  2253  007D26  70                 	db	112	;'p'
  2254  007D27  20                 	db	32
  2255  007D28  4D                 	db	77	;'M'
  2256  007D29  6F                 	db	111	;'o'
  2257  007D2A  74                 	db	116	;'t'
  2258  007D2B  65                 	db	101	;'e'
  2259  007D2C  00                 	db	0
  2260  007D2D                     STR_74:
  2261  007D2D  6D                 	db	109	;'m'
  2262  007D2E  61                 	db	97	;'a'
  2263  007D2F  63                 	db	99	;'c'
  2264  007D30  20                 	db	32
  2265  007D31  74                 	db	116	;'t'
  2266  007D32  78                 	db	120	;'x'
  2267  007D33  20                 	db	32
  2268  007D34  75                 	db	117	;'u'
  2269  007D35  6E                 	db	110	;'n'
  2270  007D36  63                 	db	99	;'c'
  2271  007D37  6E                 	db	110	;'n'
  2272  007D38  66                 	db	102	;'f'
  2273  007D39  20                 	db	32
  2274  007D3A  00                 	db	0
  2275  007D3B                     STR_43:
  2276  007D3B  6D                 	db	109	;'m'
  2277  007D3C  61                 	db	97	;'a'
  2278  007D3D  63                 	db	99	;'c'
  2279  007D3E  20                 	db	32
  2280  007D3F  6A                 	db	106	;'j'
  2281  007D40  6F                 	db	111	;'o'
  2282  007D41  69                 	db	105	;'i'
  2283  007D42  6E                 	db	110	;'n'
  2284  007D43  20                 	db	32
  2285  007D44  6F                 	db	111	;'o'
  2286  007D45  74                 	db	116	;'t'
  2287  007D46  61                 	db	97	;'a'
  2288  007D47  61                 	db	97	;'a'
  2289  007D48  00                 	db	0
  2290  007D49                     STR_57:
  2291  007D49  69                 	db	105	;'i'
  2292  007D4A  6E                 	db	110	;'n'
  2293  007D4B  76                 	db	118	;'v'
  2294  007D4C  61                 	db	97	;'a'
  2295  007D4D  6C                 	db	108	;'l'
  2296  007D4E  69                 	db	105	;'i'
  2297  007D4F  64                 	db	100	;'d'
  2298  007D50  5F                 	db	95	;'_'
  2299  007D51  70                 	db	112	;'p'
  2300  007D52  61                 	db	97	;'a'
  2301  007D53  72                 	db	114	;'r'
  2302  007D54  61                 	db	97	;'a'
  2303  007D55  6D                 	db	109	;'m'
  2304  007D56  00                 	db	0
  2305  007D57                     STR_45:
  2306  007D57  6B                 	db	107	;'k'
  2307  007D58  65                 	db	101	;'e'
  2308  007D59  79                 	db	121	;'y'
  2309  007D5A  73                 	db	115	;'s'
  2310  007D5B  5F                 	db	95	;'_'
  2311  007D5C  6E                 	db	110	;'n'
  2312  007D5D  6F                 	db	111	;'o'
  2313  007D5E  74                 	db	116	;'t'
  2314  007D5F  5F                 	db	95	;'_'
  2315  007D60  69                 	db	105	;'i'
  2316  007D61  6E                 	db	110	;'n'
  2317  007D62  69                 	db	105	;'i'
  2318  007D63  74                 	db	116	;'t'
  2319  007D64  00                 	db	0
  2320  007D65                     STR_82:
  2321  007D65  54                 	db	84	;'T'
  2322  007D66  68                 	db	104	;'h'
  2323  007D67  72                 	db	114	;'r'
  2324  007D68  6F                 	db	111	;'o'
  2325  007D69  75                 	db	117	;'u'
  2326  007D6A  20                 	db	32
  2327  007D6B  50                 	db	80	;'P'
  2328  007D6C  6F                 	db	111	;'o'
  2329  007D6D  72                 	db	114	;'r'
  2330  007D6E  74                 	db	116	;'t'
  2331  007D6F  23                 	db	35
  2332  007D70  20                 	db	32
  2333  007D71  00                 	db	0
  2334  007D72                     STR_73:
  2335  007D72  4C                 	db	76	;'L'
  2336  007D73  3A                 	db	58	;':'
  2337  007D74  20                 	db	32
  2338  007D75  20                 	db	32
  2339  007D76  20                 	db	32
  2340  007D77  20                 	db	32
  2341  007D78  20                 	db	32
  2342  007D79  20                 	db	32
  2343  007D7A  20                 	db	32
  2344  007D7B  54                 	db	84	;'T'
  2345  007D7C  3A                 	db	58	;':'
  2346  007D7D  20                 	db	32
  2347  007D7E  00                 	db	0
  2348  007D7F                     STR_164:
  2349  007D7F  6D                 	db	109	;'m'
  2350  007D80  61                 	db	97	;'a'
  2351  007D81  63                 	db	99	;'c'
  2352  007D82  20                 	db	32
  2353  007D83  73                 	db	115	;'s'
  2354  007D84  65                 	db	101	;'e'
  2355  007D85  74                 	db	116	;'t'
  2356  007D86  20                 	db	32
  2357  007D87  64                 	db	100	;'d'
  2358  007D88  72                 	db	114	;'r'
  2359  007D89  20                 	db	32
  2360  007D8A  30                 	db	48	;'0'
  2361  007D8B  00                 	db	0
  2362  007D8C                     STR_165:
  2363  007D8C  6D                 	db	109	;'m'
  2364  007D8D  61                 	db	97	;'a'
  2365  007D8E  63                 	db	99	;'c'
  2366  007D8F  20                 	db	32
  2367  007D90  73                 	db	115	;'s'
  2368  007D91  65                 	db	101	;'e'
  2369  007D92  74                 	db	116	;'t'
  2370  007D93  20                 	db	32
  2371  007D94  64                 	db	100	;'d'
  2372  007D95  72                 	db	114	;'r'
  2373  007D96  20                 	db	32
  2374  007D97  31                 	db	49	;'1'
  2375  007D98  00                 	db	0
  2376  007D99                     STR_166:
  2377  007D99  6D                 	db	109	;'m'
  2378  007D9A  61                 	db	97	;'a'
  2379  007D9B  63                 	db	99	;'c'
  2380  007D9C  20                 	db	32
  2381  007D9D  73                 	db	115	;'s'
  2382  007D9E  65                 	db	101	;'e'
  2383  007D9F  74                 	db	116	;'t'
  2384  007DA0  20                 	db	32
  2385  007DA1  64                 	db	100	;'d'
  2386  007DA2  72                 	db	114	;'r'
  2387  007DA3  20                 	db	32
  2388  007DA4  32                 	db	50	;'2'
  2389  007DA5  00                 	db	0
  2390  007DA6                     STR_167:
  2391  007DA6  6D                 	db	109	;'m'
  2392  007DA7  61                 	db	97	;'a'
  2393  007DA8  63                 	db	99	;'c'
  2394  007DA9  20                 	db	32
  2395  007DAA  73                 	db	115	;'s'
  2396  007DAB  65                 	db	101	;'e'
  2397  007DAC  74                 	db	116	;'t'
  2398  007DAD  20                 	db	32
  2399  007DAE  64                 	db	100	;'d'
  2400  007DAF  72                 	db	114	;'r'
  2401  007DB0  20                 	db	32
  2402  007DB1  33                 	db	51	;'3'
  2403  007DB2  00                 	db	0
  2404  007DB3                     STR_168:
  2405  007DB3  6D                 	db	109	;'m'
  2406  007DB4  61                 	db	97	;'a'
  2407  007DB5  63                 	db	99	;'c'
  2408  007DB6  20                 	db	32
  2409  007DB7  73                 	db	115	;'s'
  2410  007DB8  65                 	db	101	;'e'
  2411  007DB9  74                 	db	116	;'t'
  2412  007DBA  20                 	db	32
  2413  007DBB  64                 	db	100	;'d'
  2414  007DBC  72                 	db	114	;'r'
  2415  007DBD  20                 	db	32
  2416  007DBE  34                 	db	52	;'4'
  2417  007DBF  00                 	db	0
  2418  007DC0                     STR_169:
  2419  007DC0  6D                 	db	109	;'m'
  2420  007DC1  61                 	db	97	;'a'
  2421  007DC2  63                 	db	99	;'c'
  2422  007DC3  20                 	db	32
  2423  007DC4  73                 	db	115	;'s'
  2424  007DC5  65                 	db	101	;'e'
  2425  007DC6  74                 	db	116	;'t'
  2426  007DC7  20                 	db	32
  2427  007DC8  64                 	db	100	;'d'
  2428  007DC9  72                 	db	114	;'r'
  2429  007DCA  20                 	db	32
  2430  007DCB  35                 	db	53	;'5'
  2431  007DCC  00                 	db	0
  2432  007DCD                     STR_170:
  2433  007DCD  6D                 	db	109	;'m'
  2434  007DCE  61                 	db	97	;'a'
  2435  007DCF  63                 	db	99	;'c'
  2436  007DD0  20                 	db	32
  2437  007DD1  73                 	db	115	;'s'
  2438  007DD2  65                 	db	101	;'e'
  2439  007DD3  74                 	db	116	;'t'
  2440  007DD4  20                 	db	32
  2441  007DD5  64                 	db	100	;'d'
  2442  007DD6  72                 	db	114	;'r'
  2443  007DD7  20                 	db	32
  2444  007DD8  36                 	db	54	;'6'
  2445  007DD9  00                 	db	0
  2446  007DDA                     STR_171:
  2447  007DDA  6D                 	db	109	;'m'
  2448  007DDB  61                 	db	97	;'a'
  2449  007DDC  63                 	db	99	;'c'
  2450  007DDD  20                 	db	32
  2451  007DDE  73                 	db	115	;'s'
  2452  007DDF  65                 	db	101	;'e'
  2453  007DE0  74                 	db	116	;'t'
  2454  007DE1  20                 	db	32
  2455  007DE2  64                 	db	100	;'d'
  2456  007DE3  72                 	db	114	;'r'
  2457  007DE4  20                 	db	32
  2458  007DE5  37                 	db	55	;'7'
  2459  007DE6  00                 	db	0
  2460  007DE7                     STR_41:
  2461  007DE7  6D                 	db	109	;'m'
  2462  007DE8  61                 	db	97	;'a'
  2463  007DE9  63                 	db	99	;'c'
  2464  007DEA  20                 	db	32
  2465  007DEB  6A                 	db	106	;'j'
  2466  007DEC  6F                 	db	111	;'o'
  2467  007DED  69                 	db	105	;'i'
  2468  007DEE  6E                 	db	110	;'n'
  2469  007DEF  20                 	db	32
  2470  007DF0  61                 	db	97	;'a'
  2471  007DF1  62                 	db	98	;'b'
  2472  007DF2  70                 	db	112	;'p'
  2473  007DF3  00                 	db	0
  2474  007DF4                     STR_10:
  2475  007DF4  42                 	db	66	;'B'
  2476  007DF5  75                 	db	117	;'u'
  2477  007DF6  74                 	db	116	;'t'
  2478  007DF7  74                 	db	116	;'t'
  2479  007DF8  6F                 	db	111	;'o'
  2480  007DF9  6E                 	db	110	;'n'
  2481  007DFA  20                 	db	32
  2482  007DFB  54                 	db	84	;'T'
  2483  007DFC  65                 	db	101	;'e'
  2484  007DFD  73                 	db	115	;'s'
  2485  007DFE  74                 	db	116	;'t'
  2486  007DFF  3A                 	db	58	;':'
  2487  007E00  00                 	db	0
  2488  007E01                     STR_13:
  2489  007E01  42                 	db	66	;'B'
  2490  007E02  75                 	db	117	;'u'
  2491  007E03  74                 	db	116	;'t'
  2492  007E04  74                 	db	116	;'t'
  2493  007E05  6F                 	db	111	;'o'
  2494  007E06  6E                 	db	110	;'n'
  2495  007E07  31                 	db	49	;'1'
  2496  007E08  20                 	db	32
  2497  007E09  50                 	db	80	;'P'
  2498  007E0A  41                 	db	65	;'A'
  2499  007E0B  53                 	db	83	;'S'
  2500  007E0C  53                 	db	83	;'S'
  2501  007E0D  00                 	db	0
  2502  007E0E                     STR_14:
  2503  007E0E  42                 	db	66	;'B'
  2504  007E0F  75                 	db	117	;'u'
  2505  007E10  74                 	db	116	;'t'
  2506  007E11  74                 	db	116	;'t'
  2507  007E12  6F                 	db	111	;'o'
  2508  007E13  6E                 	db	110	;'n'
  2509  007E14  32                 	db	50	;'2'
  2510  007E15  20                 	db	32
  2511  007E16  50                 	db	80	;'P'
  2512  007E17  41                 	db	65	;'A'
  2513  007E18  53                 	db	83	;'S'
  2514  007E19  53                 	db	83	;'S'
  2515  007E1A  00                 	db	0
  2516  007E1B                     STR_12:
  2517  007E1B  50                 	db	80	;'P'
  2518  007E1C  72                 	db	114	;'r'
  2519  007E1D  65                 	db	101	;'e'
  2520  007E1E  73                 	db	115	;'s'
  2521  007E1F  73                 	db	115	;'s'
  2522  007E20  20                 	db	32
  2523  007E21  42                 	db	66	;'B'
  2524  007E22  75                 	db	117	;'u'
  2525  007E23  74                 	db	116	;'t'
  2526  007E24  74                 	db	116	;'t'
  2527  007E25  6F                 	db	111	;'o'
  2528  007E26  6E                 	db	110	;'n'
  2529  007E27  00                 	db	0
  2530  007E28                     STR_189:
  2531  007E28  55                 	db	85	;'U'
  2532  007E29  53                 	db	83	;'S'
  2533  007E2A  42                 	db	66	;'B'
  2534  007E2B  20                 	db	32
  2535  007E2C  48                 	db	72	;'H'
  2536  007E2D  61                 	db	97	;'a'
  2537  007E2E  6E                 	db	110	;'n'
  2538  007E2F  64                 	db	100	;'d'
  2539  007E30  6C                 	db	108	;'l'
  2540  007E31  65                 	db	101	;'e'
  2541  007E32  72                 	db	114	;'r'
  2542  007E33  00                 	db	0
  2543  007E34                     STR_72:
  2544  007E34  4F                 	db	79	;'O'
  2545  007E35  6E                 	db	110	;'n'
  2546  007E36  20                 	db	32
  2547  007E37  50                 	db	80	;'P'
  2548  007E38  6F                 	db	111	;'o'
  2549  007E39  72                 	db	114	;'r'
  2550  007E3A  74                 	db	116	;'t'
  2551  007E3B  20                 	db	32
  2552  007E3C  23                 	db	35
  2553  007E3D  3A                 	db	58	;':'
  2554  007E3E  20                 	db	32
  2555  007E3F  00                 	db	0
  2556  007E40                     STR_87:
  2557  007E40  54                 	db	84	;'T'
  2558  007E41  78                 	db	120	;'x'
  2559  007E42  20                 	db	32
  2560  007E43  50                 	db	80	;'P'
  2561  007E44  6F                 	db	111	;'o'
  2562  007E45  72                 	db	114	;'r'
  2563  007E46  74                 	db	116	;'t'
  2564  007E47  20                 	db	32
  2565  007E48  23                 	db	35
  2566  007E49  3A                 	db	58	;':'
  2567  007E4A  20                 	db	32
  2568  007E4B  00                 	db	0
  2569  007E4C                     STR_86:
  2570  007E4C  53                 	db	83	;'S'
  2571  007E4D  65                 	db	101	;'e'
  2572  007E4E  6E                 	db	110	;'n'
  2573  007E4F  74                 	db	116	;'t'
  2574  007E50  20                 	db	32
  2575  007E51  44                 	db	68	;'D'
  2576  007E52  61                 	db	97	;'a'
  2577  007E53  74                 	db	116	;'t'
  2578  007E54  61                 	db	97	;'a'
  2579  007E55  3A                 	db	58	;':'
  2580  007E56  20                 	db	32
  2581  007E57  00                 	db	0
  2582  007E58                     STR_136:
  2583  007E58  44                 	db	68	;'D'
  2584  007E59  61                 	db	97	;'a'
  2585  007E5A  74                 	db	116	;'t'
  2586  007E5B  61                 	db	97	;'a'
  2587  007E5C  20                 	db	32
  2588  007E5D  52                 	db	82	;'R'
  2589  007E5E  61                 	db	97	;'a'
  2590  007E5F  74                 	db	116	;'t'
  2591  007E60  65                 	db	101	;'e'
  2592  007E61  3A                 	db	58	;':'
  2593  007E62  20                 	db	32
  2594  007E63  00                 	db	0
  2595  007E64                     STR_85:
  2596  007E64  6D                 	db	109	;'m'
  2597  007E65  61                 	db	97	;'a'
  2598  007E66  63                 	db	99	;'c'
  2599  007E67  20                 	db	32
  2600  007E68  74                 	db	116	;'t'
  2601  007E69  78                 	db	120	;'x'
  2602  007E6A  20                 	db	32
  2603  007E6B  63                 	db	99	;'c'
  2604  007E6C  6E                 	db	110	;'n'
  2605  007E6D  66                 	db	102	;'f'
  2606  007E6E  20                 	db	32
  2607  007E6F  00                 	db	0
  2608  007E70                     STR_8:
  2609  007E70  4D                 	db	77	;'M'
  2610  007E71  61                 	db	97	;'a'
  2611  007E72  72                 	db	114	;'r'
  2612  007E73  20                 	db	32
  2613  007E74  33                 	db	51	;'3'
  2614  007E75  30                 	db	48	;'0'
  2615  007E76  20                 	db	32
  2616  007E77  32                 	db	50	;'2'
  2617  007E78  30                 	db	48	;'0'
  2618  007E79  31                 	db	49	;'1'
  2619  007E7A  38                 	db	56	;'8'
  2620  007E7B  00                 	db	0
  2621  007E7C                     STR_11:
  2622  007E7C  42                 	db	66	;'B'
  2623  007E7D  75                 	db	117	;'u'
  2624  007E7E  74                 	db	116	;'t'
  2625  007E7F  74                 	db	116	;'t'
  2626  007E80  6F                 	db	111	;'o'
  2627  007E81  6E                 	db	110	;'n'
  2628  007E82  20                 	db	32
  2629  007E83  46                 	db	70	;'F'
  2630  007E84  41                 	db	65	;'A'
  2631  007E85  49                 	db	73	;'I'
  2632  007E86  4C                 	db	76	;'L'
  2633  007E87  00                 	db	0
  2634  007E88                     STR_61:
  2635  007E88  4F                 	db	79	;'O'
  2636  007E89  54                 	db	84	;'T'
  2637  007E8A  41                 	db	65	;'A'
  2638  007E8B  41                 	db	65	;'A'
  2639  007E8C  20                 	db	32
  2640  007E8D  4A                 	db	74	;'J'
  2641  007E8E  6F                 	db	111	;'o'
  2642  007E8F  69                 	db	105	;'i'
  2643  007E90  6E                 	db	110	;'n'
  2644  007E91  20                 	db	32
  2645  007E92  00                 	db	0
  2646  007E93                     STR_59:
  2647  007E93  6E                 	db	110	;'n'
  2648  007E94  6F                 	db	111	;'o'
  2649  007E95  5F                 	db	95	;'_'
  2650  007E96  66                 	db	102	;'f'
  2651  007E97  72                 	db	114	;'r'
  2652  007E98  65                 	db	101	;'e'
  2653  007E99  65                 	db	101	;'e'
  2654  007E9A  5F                 	db	95	;'_'
  2655  007E9B  63                 	db	99	;'c'
  2656  007E9C  68                 	db	104	;'h'
  2657  007E9D  00                 	db	0
  2658  007E9E                     STR_51:
  2659  007E9E  53                 	db	83	;'S'
  2660  007E9F  75                 	db	117	;'u'
  2661  007EA0  63                 	db	99	;'c'
  2662  007EA1  63                 	db	99	;'c'
  2663  007EA2  65                 	db	101	;'e'
  2664  007EA3  73                 	db	115	;'s'
  2665  007EA4  73                 	db	115	;'s'
  2666  007EA5  66                 	db	102	;'f'
  2667  007EA6  75                 	db	117	;'u'
  2668  007EA7  6C                 	db	108	;'l'
  2669  007EA8  00                 	db	0
  2670  007EA9                     STR_68:
  2671  007EA9  6D                 	db	109	;'m'
  2672  007EAA  61                 	db	97	;'a'
  2673  007EAB  63                 	db	99	;'c'
  2674  007EAC  20                 	db	32
  2675  007EAD  67                 	db	103	;'g'
  2676  007EAE  65                 	db	101	;'e'
  2677  007EAF  74                 	db	116	;'t'
  2678  007EB0  20                 	db	32
  2679  007EB1  64                 	db	100	;'d'
  2680  007EB2  72                 	db	114	;'r'
  2681  007EB3  00                 	db	0
  2682  007EB4                     STR_46:
  2683  007EB4  56                 	db	86	;'V'
  2684  007EB5  61                 	db	97	;'a'
  2685  007EB6  6C                 	db	108	;'l'
  2686  007EB7  69                 	db	105	;'i'
  2687  007EB8  64                 	db	100	;'d'
  2688  007EB9  20                 	db	32
  2689  007EBA  4B                 	db	75	;'K'
  2690  007EBB  65                 	db	101	;'e'
  2691  007EBC  79                 	db	121	;'y'
  2692  007EBD  73                 	db	115	;'s'
  2693  007EBE  00                 	db	0
  2694  007EBF                     STR_15:
  2695  007EBF  43                 	db	67	;'C'
  2696  007EC0  6F                 	db	111	;'o'
  2697  007EC1  6D                 	db	109	;'m'
  2698  007EC2  6D                 	db	109	;'m'
  2699  007EC3  20                 	db	32
  2700  007EC4  54                 	db	84	;'T'
  2701  007EC5  65                 	db	101	;'e'
  2702  007EC6  73                 	db	115	;'s'
  2703  007EC7  74                 	db	116	;'t'
  2704  007EC8  3A                 	db	58	;':'
  2705  007EC9  00                 	db	0
  2706  007ECA                     STR_106:
  2707  007ECA  52                 	db	82	;'R'
  2708  007ECB  78                 	db	120	;'x'
  2709  007ECC  20                 	db	32
  2710  007ECD  50                 	db	80	;'P'
  2711  007ECE  6F                 	db	111	;'o'
  2712  007ECF  72                 	db	114	;'r'
  2713  007ED0  74                 	db	116	;'t'
  2714  007ED1  23                 	db	35
  2715  007ED2  20                 	db	32
  2716  007ED3  00                 	db	0
  2717  007ED4                     STR_50:
  2718  007ED4  41                 	db	65	;'A'
  2719  007ED5  42                 	db	66	;'B'
  2720  007ED6  50                 	db	80	;'P'
  2721  007ED7  20                 	db	32
  2722  007ED8  4A                 	db	74	;'J'
  2723  007ED9  6F                 	db	111	;'o'
  2724  007EDA  69                 	db	105	;'i'
  2725  007EDB  6E                 	db	110	;'n'
  2726  007EDC  20                 	db	32
  2727  007EDD  00                 	db	0
  2728  007EDE                     STR_24:
  2729  007EDE  4D                 	db	77	;'M'
  2730  007EDF  4F                 	db	79	;'O'
  2731  007EE0  54                 	db	84	;'T'
  2732  007EE1  45                 	db	69	;'E'
  2733  007EE2  20                 	db	32
  2734  007EE3  4D                 	db	77	;'M'
  2735  007EE4  6F                 	db	111	;'o'
  2736  007EE5  64                 	db	100	;'d'
  2737  007EE6  65                 	db	101	;'e'
  2738  007EE7  00                 	db	0
  2739  007EE8                     STR_64:
  2740  007EE8  4F                 	db	79	;'O'
  2741  007EE9  54                 	db	84	;'T'
  2742  007EEA  41                 	db	65	;'A'
  2743  007EEB  41                 	db	65	;'A'
  2744  007EEC  20                 	db	32
  2745  007EED  4A                 	db	74	;'J'
  2746  007EEE  6F                 	db	111	;'o'
  2747  007EEF  69                 	db	105	;'i'
  2748  007EF0  6E                 	db	110	;'n'
  2749  007EF1  00                 	db	0
  2750  007EF2                     STR_52:
  2751  007EF2  6D                 	db	109	;'m'
  2752  007EF3  61                 	db	97	;'a'
  2753  007EF4  63                 	db	99	;'c'
  2754  007EF5  20                 	db	32
  2755  007EF6  72                 	db	114	;'r'
  2756  007EF7  65                 	db	101	;'e'
  2757  007EF8  73                 	db	115	;'s'
  2758  007EF9  65                 	db	101	;'e'
  2759  007EFA  74                 	db	116	;'t'
  2760  007EFB  00                 	db	0
  2761  007EFC                     STR_30:
  2762  007EFC  73                 	db	115	;'s'
  2763  007EFD  79                 	db	121	;'y'
  2764  007EFE  73                 	db	115	;'s'
  2765  007EFF  20                 	db	32
  2766  007F00  72                 	db	114	;'r'
  2767  007F01  65                 	db	101	;'e'
  2768  007F02  73                 	db	115	;'s'
  2769  007F03  65                 	db	101	;'e'
  2770  007F04  74                 	db	116	;'t'
  2771  007F05  00                 	db	0
  2772  007F06                     STR_16:
  2773  007F06  4C                 	db	76	;'L'
  2774  007F07  45                 	db	69	;'E'
  2775  007F08  44                 	db	68	;'D'
  2776  007F09  20                 	db	32
  2777  007F0A  54                 	db	84	;'T'
  2778  007F0B  65                 	db	101	;'e'
  2779  007F0C  73                 	db	115	;'s'
  2780  007F0D  74                 	db	116	;'t'
  2781  007F0E  3A                 	db	58	;':'
  2782  007F0F  00                 	db	0
  2783  007F10                     STR_187:
  2784  007F10  43                 	db	67	;'C'
  2785  007F11  44                 	db	68	;'D'
  2786  007F12  43                 	db	67	;'C'
  2787  007F13  20                 	db	32
  2788  007F14  4D                 	db	77	;'M'
  2789  007F15  6F                 	db	111	;'o'
  2790  007F16  64                 	db	100	;'d'
  2791  007F17  65                 	db	101	;'e'
  2792  007F18  00                 	db	0
  2793  007F19                     STR_47:
  2794  007F19  52                 	db	82	;'R'
  2795  007F1A  65                 	db	101	;'e'
  2796  007F1B  71                 	db	113	;'q'
  2797  007F1C  75                 	db	117	;'u'
  2798  007F1D  69                 	db	105	;'i'
  2799  007F1E  72                 	db	114	;'r'
  2800  007F1F  65                 	db	101	;'e'
  2801  007F20  64                 	db	100	;'d'
  2802  007F21  00                 	db	0
  2803  007F22                     STR_49:
  2804  007F22  61                 	db	97	;'a'
  2805  007F23  63                 	db	99	;'c'
  2806  007F24  63                 	db	99	;'c'
  2807  007F25  65                 	db	101	;'e'
  2808  007F26  70                 	db	112	;'p'
  2809  007F27  74                 	db	116	;'t'
  2810  007F28  65                 	db	101	;'e'
  2811  007F29  64                 	db	100	;'d'
  2812  007F2A  00                 	db	0
  2813  007F2B                     STR_173:
  2814  007F2B  6D                 	db	109	;'m'
  2815  007F2C  61                 	db	97	;'a'
  2816  007F2D  63                 	db	99	;'c'
  2817  007F2E  20                 	db	32
  2818  007F2F  73                 	db	115	;'s'
  2819  007F30  61                 	db	97	;'a'
  2820  007F31  76                 	db	118	;'v'
  2821  007F32  65                 	db	101	;'e'
  2822  007F33  00                 	db	0
  2823  007F34                     STR_25:
  2824  007F34  53                 	db	83	;'S'
  2825  007F35  74                 	db	116	;'t'
  2826  007F36  61                 	db	97	;'a'
  2827  007F37  72                 	db	114	;'r'
  2828  007F38  74                 	db	116	;'t'
  2829  007F39  69                 	db	105	;'i'
  2830  007F3A  6E                 	db	110	;'n'
  2831  007F3B  67                 	db	103	;'g'
  2832  007F3C  00                 	db	0
  2833  007F3D                     STR_4:
  2834  007F3D  4D                 	db	77	;'M'
  2835  007F3E  6F                 	db	111	;'o'
  2836  007F3F  54                 	db	84	;'T'
  2837  007F40  65                 	db	101	;'e'
  2838  007F41  20                 	db	32
  2839  007F42  76                 	db	118	;'v'
  2840  007F43  20                 	db	32
  2841  007F44  2E                 	db	46
  2842  007F45  00                 	db	0
  2843  007F46                     STR_9:
  2844  007F46  31                 	db	49	;'1'
  2845  007F47  37                 	db	55	;'7'
  2846  007F48  3A                 	db	58	;':'
  2847  007F49  31                 	db	49	;'1'
  2848  007F4A  37                 	db	55	;'7'
  2849  007F4B  3A                 	db	58	;':'
  2850  007F4C  33                 	db	51	;'3'
  2851  007F4D  38                 	db	56	;'8'
  2852  007F4E  00                 	db	0
  2853  007F4F  52                 	db	82	;'R'
  2854  007F50  46                 	db	70	;'F'
  2855  007F51  20                 	db	32
  2856  007F52  54                 	db	84	;'T'
  2857  007F53  65                 	db	101	;'e'
  2858  007F54  73                 	db	115	;'s'
  2859  007F55  74                 	db	116	;'t'
  2860  007F56  3A                 	db	58	;':'
  2861  007F57  00                 	db	0
  2862  007F58                     STR_17:
  2863  007F58  41                 	db	65	;'A'
  2864  007F59  44                 	db	68	;'D'
  2865  007F5A  43                 	db	67	;'C'
  2866  007F5B  20                 	db	32
  2867  007F5C  54                 	db	84	;'T'
  2868  007F5D  65                 	db	101	;'e'
  2869  007F5E  73                 	db	115	;'s'
  2870  007F5F  74                 	db	116	;'t'
  2871  007F60  00                 	db	0
  2872  007F61                     STR_188:
  2873  007F61  43                 	db	67	;'C'
  2874  007F62  6F                 	db	111	;'o'
  2875  007F63  6D                 	db	109	;'m'
  2876  007F64  6D                 	db	109	;'m'
  2877  007F65  61                 	db	97	;'a'
  2878  007F66  6E                 	db	110	;'n'
  2879  007F67  64                 	db	100	;'d'
  2880  007F68  00                 	db	0
  2881  007F69                     STR_18:
  2882  007F69  54                 	db	84	;'T'
  2883  007F6A  65                 	db	101	;'e'
  2884  007F6B  6D                 	db	109	;'m'
  2885  007F6C  70                 	db	112	;'p'
  2886  007F6D  20                 	db	32
  2887  007F6E  20                 	db	32
  2888  007F6F  3D                 	db	61	;'='
  2889  007F70  00                 	db	0
  2890  007F71                     STR_19:
  2891  007F71  4C                 	db	76	;'L'
  2892  007F72  69                 	db	105	;'i'
  2893  007F73  67                 	db	103	;'g'
  2894  007F74  68                 	db	104	;'h'
  2895  007F75  74                 	db	116	;'t'
  2896  007F76  20                 	db	32
  2897  007F77  3D                 	db	61	;'='
  2898  007F78  00                 	db	0
  2899  007F79                     STR_117:
  2900  007F79  54                 	db	84	;'T'
  2901  007F7A  65                 	db	101	;'e'
  2902  007F7B  6D                 	db	109	;'m'
  2903  007F7C  70                 	db	112	;'p'
  2904  007F7D  20                 	db	32
  2905  007F7E  3A                 	db	58	;':'
  2906  007F7F  00                 	db	0
  2907  007F80                     STR_116:
  2908  007F80  4C                 	db	76	;'L'
  2909  007F81  69                 	db	105	;'i'
  2910  007F82  67                 	db	103	;'g'
  2911  007F83  68                 	db	104	;'h'
  2912  007F84  74                 	db	116	;'t'
  2913  007F85  3A                 	db	58	;':'
  2914  007F86  00                 	db	0
  2915  007F87                     STR_121:
  2916  007F87  45                 	db	69	;'E'
  2917  007F88  76                 	db	118	;'v'
  2918  007F89  65                 	db	101	;'e'
  2919  007F8A  72                 	db	114	;'r'
  2920  007F8B  79                 	db	121	;'y'
  2921  007F8C  3A                 	db	58	;':'
  2922  007F8D  00                 	db	0
  2923  007F8E                     STR_65:
  2924  007F8E  44                 	db	68	;'D'
  2925  007F8F  65                 	db	101	;'e'
  2926  007F90  6E                 	db	110	;'n'
  2927  007F91  69                 	db	105	;'i'
  2928  007F92  65                 	db	101	;'e'
  2929  007F93  64                 	db	100	;'d'
  2930  007F94  00                 	db	0
  2931  007F95                     STR_63:
  2932  007F95  64                 	db	100	;'d'
  2933  007F96  65                 	db	101	;'e'
  2934  007F97  6E                 	db	110	;'n'
  2935  007F98  69                 	db	105	;'i'
  2936  007F99  65                 	db	101	;'e'
  2937  007F9A  64                 	db	100	;'d'
  2938  007F9B  00                 	db	0
  2939  007F9C                     STR_97:
  2940  007F9C  6E                 	db	110	;'n'
  2941  007F9D  6F                 	db	111	;'o'
  2942  007F9E  5F                 	db	95	;'_'
  2943  007F9F  66                 	db	102	;'f'
  2944  007FA0  72                 	db	114	;'r'
  2945  007FA1  65                 	db	101	;'e'
  2946  007FA2  00                 	db	0
  2947  007FA3                     STR_95:
  2948  007FA3  6D                 	db	109	;'m'
  2949  007FA4  61                 	db	97	;'a'
  2950  007FA5  63                 	db	99	;'c'
  2951  007FA6  5F                 	db	95	;'_'
  2952  007FA7  65                 	db	101	;'e'
  2953  007FA8  72                 	db	114	;'r'
  2954  007FA9  00                 	db	0
  2955  007FAA                     STR_90:
  2956  007FAA  6D                 	db	109	;'m'
  2957  007FAB  61                 	db	97	;'a'
  2958  007FAC  63                 	db	99	;'c'
  2959  007FAD  5F                 	db	95	;'_'
  2960  007FAE  72                 	db	114	;'r'
  2961  007FAF  78                 	db	120	;'x'
  2962  007FB0  00                 	db	0
  2963  007FB1                     STR_93:
  2964  007FB1  6D                 	db	109	;'m'
  2965  007FB2  61                 	db	97	;'a'
  2966  007FB3  63                 	db	99	;'c'
  2967  007FB4  5F                 	db	95	;'_'
  2968  007FB5  74                 	db	116	;'t'
  2969  007FB6  78                 	db	120	;'x'
  2970  007FB7  00                 	db	0
  2971  007FB8                     STR_31:
  2972  007FB8  52                 	db	82	;'R'
  2973  007FB9  4E                 	db	78	;'N'
  2974  007FBA  32                 	db	50	;'2'
  2975  007FBB  34                 	db	52	;'4'
  2976  007FBC  00                 	db	0
  2977  007FBD                     STR_35:
  2978  007FBD  52                 	db	82	;'R'
  2979  007FBE  4E                 	db	78	;'N'
  2980  007FBF  32                 	db	50	;'2'
  2981  007FC0  39                 	db	57	;'9'
  2982  007FC1  00                 	db	0
  2983  007FC2                     STR_122:
  2984  007FC2  4D                 	db	77	;'M'
  2985  007FC3  69                 	db	105	;'i'
  2986  007FC4  6E                 	db	110	;'n'
  2987  007FC5  73                 	db	115	;'s'
  2988  007FC6  00                 	db	0
  2989  007FC7                     STR_138:
  2990  007FC7  20                 	db	32
  2991  007FC8  30                 	db	48	;'0'
  2992  007FC9  20                 	db	32
  2993  007FCA  00                 	db	0
  2994  007FCB                     STR_139:
  2995  007FCB  20                 	db	32
  2996  007FCC  31                 	db	49	;'1'
  2997  007FCD  20                 	db	32
  2998  007FCE  00                 	db	0
  2999  007FCF                     STR_140:
  3000  007FCF  20                 	db	32
  3001  007FD0  32                 	db	50	;'2'
  3002  007FD1  20                 	db	32
  3003  007FD2  00                 	db	0
  3004  007FD3                     STR_141:
  3005  007FD3  20                 	db	32
  3006  007FD4  33                 	db	51	;'3'
  3007  007FD5  20                 	db	32
  3008  007FD6  00                 	db	0
  3009  007FD7                     STR_142:
  3010  007FD7  20                 	db	32
  3011  007FD8  34                 	db	52	;'4'
  3012  007FD9  20                 	db	32
  3013  007FDA  00                 	db	0
  3014  007FDB                     STR_143:
  3015  007FDB  20                 	db	32
  3016  007FDC  35                 	db	53	;'5'
  3017  007FDD  20                 	db	32
  3018  007FDE  00                 	db	0
  3019  007FDF                     STR_146:
  3020  007FDF  20                 	db	32
  3021  007FE0  31                 	db	49	;'1'
  3022  007FE1  30                 	db	48	;'0'
  3023  007FE2  00                 	db	0
  3024  007FE3                     STR_148:
  3025  007FE3  20                 	db	32
  3026  007FE4  33                 	db	51	;'3'
  3027  007FE5  30                 	db	48	;'0'
  3028  007FE6  00                 	db	0
  3029  007FE7                     STR_149:
  3030  007FE7  20                 	db	32
  3031  007FE8  36                 	db	54	;'6'
  3032  007FE9  30                 	db	48	;'0'
  3033  007FEA  00                 	db	0
  3034  007FEB                     STR_147:
  3035  007FEB  20                 	db	32
  3036  007FEC  31                 	db	49	;'1'
  3037  007FED  35                 	db	53	;'5'
  3038  007FEE  00                 	db	0
  3039  007FEF                     STR_128:
  3040  007FEF  4F                 	db	79	;'O'
  3041  007FF0  46                 	db	70	;'F'
  3042  007FF1  46                 	db	70	;'F'
  3043  007FF2  00                 	db	0
  3044  007FF3                     STR_144:
  3045  007FF3  41                 	db	65	;'A'
  3046  007FF4  44                 	db	68	;'D'
  3047  007FF5  52                 	db	82	;'R'
  3048  007FF6  00                 	db	0
  3049  007FF7                     STR_44:
  3050  007FF7  6F                 	db	111	;'o'
  3051  007FF8  6B                 	db	107	;'k'
  3052  007FF9  00                 	db	0
  3053  007FFA                     STR_118:
  3054  007FFA  43                 	db	67	;'C'
  3055  007FFB  00                 	db	0
  3056  007FFC                     STR_21:
  3057  007FFC  7A                 	db	122	;'z'
  3058  007FFD  00                 	db	0
  3059  0000                     
  3060                           ; #config settings
  3061  007FFE  00                 	db	0	; dummy byte at the end
  3062  0000                     
  3063                           	psect	cinit
  3064  0043A4                     __pcinit:
  3065                           	opt stack 0
  3066  0043A4                     start_initialization:
  3067                           	opt stack 0
  3068  0043A4                     __initialization:
  3069                           	opt stack 0
  3070                           
  3071                           ; Initialize objects allocated to BANK1 (3 bytes)
  3072                           ; load TBLPTR registers with __pidataBANK1
  3073  0043A4  0E98               	movlw	low __pidataBANK1
  3074  0043A6  6EF6               	movwf	tblptrl,c
  3075  0043A8  0E5B               	movlw	high __pidataBANK1
  3076  0043AA  6EF7               	movwf	tblptrh,c
  3077  0043AC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3078  0043AE  6EF8               	movwf	tblptru,c
  3079  0043B0  0009               	tblrd		*+	;fetch initializer
  3080  0043B2  CFF5 F1FA          	movff	tablat,__pdataBANK1
  3081  0043B6  0009               	tblrd		*+	;fetch initializer
  3082  0043B8  CFF5 F1FB          	movff	tablat,__pdataBANK1+1
  3083  0043BC  0009               	tblrd		*+	;fetch initializer
  3084  0043BE  CFF5 F1FC          	movff	tablat,__pdataBANK1+2
  3085                           
  3086                           ; Initialize objects allocated to BANK0 (7 bytes)
  3087                           ; load TBLPTR registers with __pidataBANK0
  3088  0043C2  0E48               	movlw	low __pidataBANK0
  3089  0043C4  6EF6               	movwf	tblptrl,c
  3090  0043C6  0E5B               	movlw	high __pidataBANK0
  3091  0043C8  6EF7               	movwf	tblptrh,c
  3092  0043CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3093  0043CC  6EF8               	movwf	tblptru,c
  3094  0043CE  EE00  F0F9         	lfsr	0,__pdataBANK0
  3095  0043D2  EE10 F007          	lfsr	1,7
  3096  0043D6                     copy_data0:
  3097  0043D6  0009               	tblrd		*+
  3098  0043D8  CFF5 FFEE          	movff	tablat,postinc0
  3099  0043DC  50E5               	movf	postdec1,w,c
  3100  0043DE  50E1               	movf	fsr1l,w,c
  3101  0043E0  E1FA               	bnz	copy_data0
  3102                           
  3103                           ; Initialize objects allocated to COMRAM (1 bytes)
  3104                           ; load TBLPTR registers with __pidataCOMRAM
  3105  0043E2  0E9B               	movlw	low __pidataCOMRAM
  3106  0043E4  6EF6               	movwf	tblptrl,c
  3107  0043E6  0E5B               	movlw	high __pidataCOMRAM
  3108  0043E8  6EF7               	movwf	tblptrh,c
  3109  0043EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3110  0043EC  6EF8               	movwf	tblptru,c
  3111  0043EE  0009               	tblrd		*+	;fetch initializer
  3112  0043F0  CFF5 F05D          	movff	tablat,__pdataCOMRAM
  3113                           
  3114                           ; Clear objects allocated to BANK3 (128 bytes)
  3115  0043F4  EE03  F000         	lfsr	0,__pbssBANK3
  3116  0043F8  0E80               	movlw	128
  3117  0043FA                     clear_0:
  3118  0043FA  6AEE               	clrf	postinc0,c
  3119  0043FC  06E8               	decf	wreg,f,c
  3120  0043FE  E1FD               	bnz	clear_0
  3121                           
  3122                           ; Clear objects allocated to BANK2 (192 bytes)
  3123  004400  EE02  F000         	lfsr	0,__pbssBANK2
  3124  004404  0EC0               	movlw	192
  3125  004406                     clear_1:
  3126  004406  6AEE               	clrf	postinc0,c
  3127  004408  06E8               	decf	wreg,f,c
  3128  00440A  E1FD               	bnz	clear_1
  3129                           
  3130                           ; Clear objects allocated to BANK1 (250 bytes)
  3131  00440C  EE01  F000         	lfsr	0,__pbssBANK1
  3132  004410  0EFA               	movlw	250
  3133  004412                     clear_2:
  3134  004412  6AEE               	clrf	postinc0,c
  3135  004414  06E8               	decf	wreg,f,c
  3136  004416  E1FD               	bnz	clear_2
  3137                           
  3138                           ; Clear objects allocated to BANK0 (61 bytes)
  3139  004418  EE00  F0BC         	lfsr	0,__pbssBANK0
  3140  00441C  0E3D               	movlw	61
  3141  00441E                     clear_3:
  3142  00441E  6AEE               	clrf	postinc0,c
  3143  004420  06E8               	decf	wreg,f,c
  3144  004422  E1FD               	bnz	clear_3
  3145                           
  3146                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3147  004424  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3148                           
  3149                           ; Clear objects allocated to COMRAM (41 bytes)
  3150  004426  EE00  F033         	lfsr	0,__pbssCOMRAM
  3151  00442A  0E29               	movlw	41
  3152  00442C                     clear_4:
  3153  00442C  6AEE               	clrf	postinc0,c
  3154  00442E  06E8               	decf	wreg,f,c
  3155  004430  E1FD               	bnz	clear_4
  3156  004432                     end_of_initialization:
  3157                           	opt stack 0
  3158  004432                     __end_of__initialization:
  3159                           	opt stack 0
  3160  004432  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3161  004434  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3162  004436  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3163  004438  6EF8               	movwf	tblptru,c
  3164  00443A  0100               	movlb	0
  3165  00443C  EF72  F016         	goto	_main	;jump to C main() function
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           postdec1	equ	0xFE5
  3173                           fsr1l	equ	0xFE1
  3174                           
  3175                           	psect	bitbssCOMRAM
  3176  0002E0                     __pbitbssCOMRAM:
  3177                           	opt stack 0
  3178  0002E0                     _log:
  3179                           	opt stack 0
  3180  0002E0                     	ds	1
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1l	equ	0xFE1
  3189                           
  3190                           	psect	bssCOMRAM
  3191  000033                     __pbssCOMRAM:
  3192                           	opt stack 0
  3193  000033                     _CDCDataInHandle:
  3194                           	opt stack 0
  3195  000033                     	ds	2
  3196  000035                     _pBDTEntryEP0OutNext:
  3197                           	opt stack 0
  3198  000035                     	ds	2
  3199  000037                     _pBDTEntryEP0OutCurrent:
  3200                           	opt stack 0
  3201  000037                     	ds	2
  3202  000039                     _timer3ReloadVal:
  3203                           	opt stack 0
  3204  000039                     	ds	2
  3205  00003B                     _timer1ReloadVal:
  3206                           	opt stack 0
  3207  00003B                     	ds	2
  3208  00003D                     _timerMinTickCount:
  3209                           	opt stack 0
  3210  00003D                     	ds	2
  3211  00003F                     USBapp_LEDUpdateStatus@ledCount:
  3212                           	opt stack 0
  3213  00003F                     	ds	2
  3214  000041                     _USBDeferOUTDataStagePackets:
  3215                           	opt stack 0
  3216  000041                     	ds	1
  3217  000042                     _USBDeferINDataStagePackets:
  3218                           	opt stack 0
  3219  000042                     	ds	1
  3220  000043                     _USBStatusStageEnabledFlag2:
  3221                           	opt stack 0
  3222  000043                     	ds	1
  3223  000044                     _USBStatusStageEnabledFlag1:
  3224                           	opt stack 0
  3225  000044                     	ds	1
  3226  000045                     _USBDeferStatusStagePacket:
  3227                           	opt stack 0
  3228  000045                     	ds	1
  3229  000046                     _USBStatusStageTimeoutCounter:
  3230                           	opt stack 0
  3231  000046                     	ds	1
  3232  000047                     _BothEP0OutUOWNsSet:
  3233                           	opt stack 0
  3234  000047                     	ds	1
  3235  000048                     _endpoint_number:
  3236                           	opt stack 0
  3237  000048                     	ds	1
  3238  000049                     _RemoteWakeup:
  3239                           	opt stack 0
  3240  000049                     	ds	1
  3241  00004A                     _controlTransferState:
  3242                           	opt stack 0
  3243  00004A                     	ds	1
  3244  00004B                     _shortPacketStatus:
  3245                           	opt stack 0
  3246  00004B                     	ds	1
  3247  00004C                     _countBitsSilent:
  3248                           	opt stack 0
  3249  00004C                     	ds	1
  3250  00004D                     _countRX:
  3251                           	opt stack 0
  3252  00004D                     	ds	1
  3253  00004E                     _rx_data:
  3254                           	opt stack 0
  3255  00004E                     	ds	1
  3256  00004F                     _status:
  3257                           	opt stack 0
  3258  00004F                     	ds	1
  3259  000050                     	ds	1
  3260  000051                     	ds	1
  3261  000052                     _responseReady:
  3262                           	opt stack 0
  3263  000052                     	ds	1
  3264  000053                     	ds	1
  3265  000054                     _moteModeState:
  3266                           	opt stack 0
  3267  000054                     	ds	1
  3268  000055                     _appState:
  3269                           	opt stack 0
  3270  000055                     	ds	1
  3271  000056                     _mainState:
  3272                           	opt stack 0
  3273  000056                     	ds	1
  3274  000057                     _USBAlternateInterface:
  3275                           	opt stack 0
  3276  000057                     	ds	2
  3277  000059                     _USTATcopy:
  3278                           	opt stack 0
  3279  000059                     	ds	1
  3280  00005A                     _USBActiveConfiguration:
  3281                           	opt stack 0
  3282  00005A                     	ds	1
  3283  00005B                     _n_bit:
  3284                           	opt stack 0
  3285  00005B                     	ds	1
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           
  3295                           	psect	dataCOMRAM
  3296  00005D                     __pdataCOMRAM:
  3297                           	opt stack 0
  3298  00005D                     _Contrast_level:
  3299                           	opt stack 0
  3300  00005D                     	ds	1
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1l	equ	0xFE1
  3309                           
  3310                           	psect	bssBANK0
  3311  0000BC                     __pbssBANK0:
  3312                           	opt stack 0
  3313  0000BC                     _outPipes:
  3314                           	opt stack 0
  3315  0000BC                     	ds	8
  3316  0000C4                     _inPipes:
  3317                           	opt stack 0
  3318  0000C4                     	ds	6
  3319  0000CA                     _pBDTEntryIn:
  3320                           	opt stack 0
  3321  0000CA                     	ds	6
  3322  0000D0                     _ep_data_out:
  3323                           	opt stack 0
  3324  0000D0                     	ds	3
  3325  0000D3                     _ep_data_in:
  3326                           	opt stack 0
  3327  0000D3                     	ds	3
  3328  0000D6                     _CDCDataOutHandle:
  3329                           	opt stack 0
  3330  0000D6                     	ds	2
  3331  0000D8                     _timerMsTickCount:
  3332                           	opt stack 0
  3333  0000D8                     	ds	2
  3334  0000DA                     _temperature:
  3335                           	opt stack 0
  3336  0000DA                     	ds	2
  3337  0000DC                     _cdc_mem_type:
  3338                           	opt stack 0
  3339  0000DC                     	ds	1
  3340  0000DD                     _cdc_tx_len:
  3341                           	opt stack 0
  3342  0000DD                     	ds	1
  3343  0000DE                     _cdc_rx_len:
  3344                           	opt stack 0
  3345  0000DE                     	ds	1
  3346  0000DF                     _eusartRxTail:
  3347                           	opt stack 0
  3348  0000DF                     	ds	1
  3349  0000E0                     _eusartRxHead:
  3350                           	opt stack 0
  3351  0000E0                     	ds	1
  3352  0000E1                     _eusartTxBufferRemaining:
  3353                           	opt stack 0
  3354  0000E1                     	ds	1
  3355  0000E2                     _eusartTxTail:
  3356                           	opt stack 0
  3357  0000E2                     	ds	1
  3358  0000E3                     _eusartTxHead:
  3359                           	opt stack 0
  3360  0000E3                     	ds	1
  3361  0000E4                     service_pushbutton@Release_Timer:
  3362                           	opt stack 0
  3363  0000E4                     	ds	1
  3364  0000E5                     _RS232cp:
  3365                           	opt stack 0
  3366  0000E5                     	ds	1
  3367  0000E6                     _LastRS232Out:
  3368                           	opt stack 0
  3369  0000E6                     	ds	1
  3370  0000E7                     _RS232_Out_Data_Rdy:
  3371                           	opt stack 0
  3372  0000E7                     	ds	1
  3373  0000E8                     _NextUSBOut:
  3374                           	opt stack 0
  3375  0000E8                     	ds	1
  3376  0000E9                     _rxByteFlag:
  3377                           	opt stack 0
  3378  0000E9                     	ds	1
  3379  0000EA                     _usbState:
  3380                           	opt stack 0
  3381  0000EA                     	ds	1
  3382  0000EB                     _cdc_trf_state:
  3383                           	opt stack 0
  3384  0000EB                     	ds	1
  3385  0000EC                     _USBDeviceState:
  3386                           	opt stack 0
  3387  0000EC                     	ds	1
  3388  0000ED                     _lightStringSize:
  3389                           	opt stack 0
  3390  0000ED                     	ds	1
  3391  0000EE                     _rnModule:
  3392                           	opt stack 0
  3393  0000EE                     	ds	1
  3394  0000EF                     _sleepTicker:
  3395                           	opt stack 0
  3396  0000EF                     	ds	1
  3397  0000F0                     _secTicker:
  3398                           	opt stack 0
  3399  0000F0                     	ds	1
  3400  0000F1                     _randomPortNum:
  3401                           	opt stack 0
  3402  0000F1                     	ds	1
  3403  0000F2                     _moduleBufferIndex:
  3404                           	opt stack 0
  3405  0000F2                     	ds	1
  3406  0000F3                     _runningState:
  3407                           	opt stack 0
  3408  0000F3                     	ds	1
  3409  0000F4                     _activeState:
  3410                           	opt stack 0
  3411  0000F4                     	ds	1
  3412  0000F5                     _eusartRxCount:
  3413                           	opt stack 0
  3414  0000F5                     	ds	1
  3415  0000F6                     _powerOnStatus:
  3416                           	opt stack 0
  3417  0000F6                     	ds	1
  3418  0000F7                     _operationType:
  3419                           	opt stack 0
  3420  0000F7                     	ds	1
  3421  0000F8                     _appTimer:
  3422                           	opt stack 0
  3423  0000F8                     	ds	1
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           postinc0	equ	0xFEE
  3429                           wreg	equ	0xFE8
  3430                           postdec1	equ	0xFE5
  3431                           fsr1l	equ	0xFE1
  3432                           
  3433                           	psect	dataBANK0
  3434  0000F9                     __pdataBANK0:
  3435                           	opt stack 0
  3436  0000F9                     _exitUSB:
  3437                           	opt stack 0
  3438  0000F9                     	ds	1
  3439  0000FA                     _periodicState:
  3440                           	opt stack 0
  3441  0000FA                     	ds	1
  3442  0000FB                     _menuTimeout:
  3443                           	opt stack 0
  3444  0000FB                     	ds	1
  3445  0000FC                     _dataRateValue:
  3446                           	opt stack 0
  3447  0000FC                     	ds	1
  3448  0000FD                     _periodicTimerValue:
  3449                           	opt stack 0
  3450  0000FD                     	ds	1
  3451  0000FE                     _periodicUpValue:
  3452                           	opt stack 0
  3453  0000FE                     	ds	1
  3454  0000FF                     _moteState:
  3455                           	opt stack 0
  3456  0000FF                     	ds	1
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           postdec1	equ	0xFE5
  3464                           fsr1l	equ	0xFE1
  3465                           
  3466                           	psect	bssBANK1
  3467  000100                     __pbssBANK1:
  3468                           	opt stack 0
  3469  000100                     	ds	32
  3470  000120                     	ds	16
  3471  000130                     _responseId:
  3472                           	opt stack 0
  3473  000130                     	ds	16
  3474  000140                     _pBDTEntryOut:
  3475                           	opt stack 0
  3476  000140                     	ds	6
  3477  000146                     _BaudRateGen:
  3478                           	opt stack 0
  3479  000146                     	ds	4
  3480  00014A                     service_pushbutton@PB_Timer:
  3481                           	opt stack 0
  3482  00014A                     	ds	4
  3483  00014E                     _pCDCDst:
  3484                           	opt stack 0
  3485  00014E                     	ds	3
  3486  000151                     _pCDCSrc:
  3487                           	opt stack 0
  3488  000151                     	ds	3
  3489  000154                     _pDst:
  3490                           	opt stack 0
  3491  000154                     	ds	2
  3492  000156                     _timer0ReloadVal:
  3493                           	opt stack 0
  3494  000156                     	ds	2
  3495  000158                     _m10SecTicker:
  3496                           	opt stack 0
  3497  000158                     	ds	2
  3498  00015A                     _light:
  3499                           	opt stack 0
  3500  00015A                     	ds	2
  3501  00015C                     _control_signal_bitmap:
  3502                           	opt stack 0
  3503  00015C                     	ds	1
  3504  00015D                     _USBBusIsSuspended:
  3505                           	opt stack 0
  3506  00015D                     	ds	1
  3507  00015E                     _cs:
  3508                           	opt stack 0
  3509  00015E                     	ds	1
  3510  00015F                     _stops:
  3511                           	opt stack 0
  3512  00015F                     	ds	1
  3513  000160                     _parity:
  3514                           	opt stack 0
  3515  000160                     	ds	1
  3516  000161                     	ds	1
  3517  000162                     	ds	1
  3518  000163                     _minTicker:
  3519                           	opt stack 0
  3520  000163                     	ds	1
  3521  000164                     _moduleResonseBuffer:
  3522                           	opt stack 0
  3523  000164                     	ds	64
  3524  0001A4                     _responseData:
  3525                           	opt stack 0
  3526  0001A4                     	ds	32
  3527  0001C4                     _dataBuffer:
  3528                           	opt stack 0
  3529  0001C4                     	ds	16
  3530  0001D4                     _cdc_notice:
  3531                           	opt stack 0
  3532  0001D4                     	ds	10
  3533  0001DE                     _dummy_encapsulated_cmd_response:
  3534                           	opt stack 0
  3535  0001DE                     	ds	8
  3536  0001E6                     _line_coding:
  3537                           	opt stack 0
  3538  0001E6                     	ds	7
  3539  0001ED                     _clearLight:
  3540                           	opt stack 0
  3541  0001ED                     	ds	5
  3542  0001F2                     _storedLight:
  3543                           	opt stack 0
  3544  0001F2                     	ds	5
  3545  0001F7                     _responsePortNum:
  3546                           	opt stack 0
  3547  0001F7                     	ds	3
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           postinc0	equ	0xFEE
  3553                           wreg	equ	0xFE8
  3554                           postdec1	equ	0xFE5
  3555                           fsr1l	equ	0xFE1
  3556                           
  3557                           	psect	dataBANK1
  3558  0001FA                     __pdataBANK1:
  3559                           	opt stack 0
  3560  0001FA                     _selectedFont:
  3561                           	opt stack 0
  3562  0001FA                     	ds	2
  3563  0001FC                     	ds	1
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           postdec1	equ	0xFE5
  3571                           fsr1l	equ	0xFE1
  3572                           
  3573                           	psect	bssBANK2
  3574  000200                     __pbssBANK2:
  3575                           	opt stack 0
  3576  000200                     _eusartRxBuffer:
  3577                           	opt stack 0
  3578  000200                     	ds	64
  3579  000240                     _eusartTxBuffer:
  3580                           	opt stack 0
  3581  000240                     	ds	64
  3582  000280                     _USB_Buffer:
  3583                           	opt stack 0
  3584  000280                     	ds	64
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           postdec1	equ	0xFE5
  3592                           fsr1l	equ	0xFE1
  3593                           
  3594                           	psect	bssBANK3
  3595  000300                     __pbssBANK3:
  3596                           	opt stack 0
  3597  000300                     _buffer_rx:
  3598                           	opt stack 0
  3599  000300                     	ds	128
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           
  3609                           	psect	cstackBANK0
  3610  000060                     __pcstackBANK0:
  3611                           	opt stack 0
  3612  000060                     ??_TMR1_Initialize:
  3613  000060                     ?_strncmp:
  3614                           	opt stack 0
  3615  000060                     ?_strcmp:
  3616                           	opt stack 0
  3617  000060                     ?_moteApp_getLightString:
  3618                           	opt stack 0
  3619  000060                     ?_USBTransferOnePacket:
  3620                           	opt stack 0
  3621  000060                     ?___wmul:
  3622                           	opt stack 0
  3623  000060                     ?___awmod:
  3624                           	opt stack 0
  3625  000060                     ?___lwmod:
  3626                           	opt stack 0
  3627  000060                     ?___fladd:
  3628                           	opt stack 0
  3629  000060                     ?___almod:
  3630                           	opt stack 0
  3631  000060                     ?___fltol:
  3632                           	opt stack 0
  3633  000060                     ?___xxtofl:
  3634                           	opt stack 0
  3635  000060                     MOTEapp_handlerState@state:
  3636                           	opt stack 0
  3637  000060                     MOTEapp_TimerBasedTask@timerTask:
  3638                           	opt stack 0
  3639  000060                     hexToStr@character:
  3640                           	opt stack 0
  3641  000060                     moteApp_clearBuffers@counter:
  3642                           	opt stack 0
  3643  000060                     USBapp_handlerState@state:
  3644                           	opt stack 0
  3645  000060                     USBapp_exitCDCState@usbState:
  3646                           	opt stack 0
  3647  000060                     service_pushbutton@bs:
  3648                           	opt stack 0
  3649  000060                     oled_writeCommand@command:
  3650                           	opt stack 0
  3651  000060                     oled_writeData@data:
  3652                           	opt stack 0
  3653  000060                     EUSART_Read@readValue:
  3654                           	opt stack 0
  3655  000060                     EUSART_Write@txData:
  3656                           	opt stack 0
  3657  000060                     EUSART_FlushBuffer@index:
  3658                           	opt stack 0
  3659  000060                     DATAEE_WriteByte@bData:
  3660                           	opt stack 0
  3661  000060                     DATAEE_ReadByte@bAdd:
  3662                           	opt stack 0
  3663  000060                     TMR2_ReadTimer@readVal:
  3664                           	opt stack 0
  3665  000060                     USBTransferOnePacket@dir:
  3666                           	opt stack 0
  3667  000060                     ___lbdiv@divisor:
  3668                           	opt stack 0
  3669  000060                     delayms@t:
  3670                           	opt stack 0
  3671  000060                     moteApp_delayms@length:
  3672                           	opt stack 0
  3673  000060                     oled_setFont@font:
  3674                           	opt stack 0
  3675  000060                     putUSBUSART@data:
  3676                           	opt stack 0
  3677  000060                     ___wmul@multiplier:
  3678                           	opt stack 0
  3679  000060                     ___awmod@dividend:
  3680                           	opt stack 0
  3681  000060                     ___lwmod@dividend:
  3682                           	opt stack 0
  3683  000060                     memcpy@d1:
  3684                           	opt stack 0
  3685  000060                     memset@p1:
  3686                           	opt stack 0
  3687  000060                     strcmp@s1:
  3688                           	opt stack 0
  3689  000060                     strncmp@s1:
  3690                           	opt stack 0
  3691  000060                     ___almod@dividend:
  3692                           	opt stack 0
  3693  000060                     ___fltol@f1:
  3694                           	opt stack 0
  3695  000060                     ___fladd@b:
  3696                           	opt stack 0
  3697  000060                     ___xxtofl@val:
  3698                           	opt stack 0
  3699                           
  3700                           ; 4 bytes @ 0x0
  3701  000060                     	ds	1
  3702  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3703                           	opt stack 0
  3704  000061                     moteApp_clearBuffers@counter_1714:
  3705                           	opt stack 0
  3706  000061                     Set_Page_Address@address:
  3707                           	opt stack 0
  3708  000061                     Set_Column_Address@address:
  3709                           	opt stack 0
  3710  000061                     oled_setDisplay@displayType:
  3711                           	opt stack 0
  3712  000061                     oled_setContrastControlRegister@mod:
  3713                           	opt stack 0
  3714  000061                     oled_initialDispayLine@line:
  3715                           	opt stack 0
  3716  000061                     oled_powerControl@vol:
  3717                           	opt stack 0
  3718  000061                     oled_regulorResistorSelect@r:
  3719                           	opt stack 0
  3720  000061                     DATAEE_WriteByte@bAdd:
  3721                           	opt stack 0
  3722  000061                     ___lbdiv@dividend:
  3723                           	opt stack 0
  3724  000061                     sendCommand@string:
  3725                           	opt stack 0
  3726  000061                     sendDataCommand@string:
  3727                           	opt stack 0
  3728  000061                     USBTransferOnePacket@data:
  3729                           	opt stack 0
  3730                           
  3731                           ; 2 bytes @ 0x1
  3732  000061                     	ds	1
  3733  000062                     ??_moteApp_delayms:
  3734  000062                     ??_oled_devInit:
  3735  000062                     ??_delayms:
  3736  000062                     MOTEapp_getModuleResponse@bufferByte:
  3737                           	opt stack 0
  3738  000062                     moteApp_clearBuffers@counter_1715:
  3739                           	opt stack 0
  3740  000062                     oled_putChar@station_dot:
  3741                           	opt stack 0
  3742  000062                     DATAEE_WriteByte@GIEBitValue:
  3743                           	opt stack 0
  3744  000062                     putUSBUSART@length:
  3745                           	opt stack 0
  3746  000062                     ___lbdiv@counter:
  3747                           	opt stack 0
  3748  000062                     ___wmul@multiplicand:
  3749                           	opt stack 0
  3750  000062                     ___awmod@divisor:
  3751                           	opt stack 0
  3752  000062                     ___lwmod@divisor:
  3753                           	opt stack 0
  3754  000062                     memcpy@s1:
  3755                           	opt stack 0
  3756  000062                     memset@c:
  3757                           	opt stack 0
  3758  000062                     strcmp@s2:
  3759                           	opt stack 0
  3760  000062                     strncmp@s2:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x2
  3764  000062                     	ds	1
  3765  000063                     ??_moteApp_toggleLeds:
  3766  000063                     ??_MOTEapp_SetDataRateSetting:
  3767  000063                     ??_moduleSleep:
  3768  000063                     ?_moteApp_getTempValue:
  3769                           	opt stack 0
  3770  000063                     moteApp_clearBuffers@counter_1716:
  3771                           	opt stack 0
  3772  000063                     oled_putChar@start_page:
  3773                           	opt stack 0
  3774  000063                     USBTransferOnePacket@len:
  3775                           	opt stack 0
  3776  000063                     ___lbdiv@quotient:
  3777                           	opt stack 0
  3778  000063                     delayms@i:
  3779                           	opt stack 0
  3780  000063                     moteApp_delayms@counter:
  3781                           	opt stack 0
  3782  000063                     sendDataCommand@appData:
  3783                           	opt stack 0
  3784                           
  3785                           ; 2 bytes @ 0x3
  3786  000063                     	ds	1
  3787  000064                     ??_oled_putChar:
  3788  000064                     ??_strcmp:
  3789  000064                     ??___fltol:
  3790  000064                     ??___xxtofl:
  3791  000064                     MOTEapp_SetDataRateSetting@dr:
  3792                           	opt stack 0
  3793  000064                     moteApp_toggleLeds@state:
  3794                           	opt stack 0
  3795  000064                     USBTransferOnePacket@ep:
  3796                           	opt stack 0
  3797  000064                     ___awmod@counter:
  3798                           	opt stack 0
  3799  000064                     ___lwmod@counter:
  3800                           	opt stack 0
  3801  000064                     ___wmul@product:
  3802                           	opt stack 0
  3803  000064                     memcpy@n:
  3804                           	opt stack 0
  3805  000064                     memset@n:
  3806                           	opt stack 0
  3807  000064                     strncmp@len:
  3808                           	opt stack 0
  3809  000064                     ___almod@divisor:
  3810                           	opt stack 0
  3811  000064                     ___fladd@a:
  3812                           	opt stack 0
  3813                           
  3814                           ; 4 bytes @ 0x4
  3815  000064                     	ds	1
  3816  000065                     sendDataCommand@dataLength:
  3817                           	opt stack 0
  3818  000065                     ___awmod@sign:
  3819                           	opt stack 0
  3820  000065                     strcmp@r:
  3821                           	opt stack 0
  3822  000065                     moduleResync@escapeCounter:
  3823                           	opt stack 0
  3824  000065                     moteApp_setSensorsInput@escapeCounter:
  3825                           	opt stack 0
  3826  000065                     moteApp_getTempValue@escapeCounter:
  3827                           	opt stack 0
  3828  000065                     USBTransferOnePacket@handle:
  3829                           	opt stack 0
  3830                           
  3831                           ; 2 bytes @ 0x5
  3832  000065                     	ds	1
  3833  000066                     ??_strncmp:
  3834  000066                     ??_sendDataCommand:
  3835  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3836                           	opt stack 0
  3837  000066                     memcpy@d:
  3838                           	opt stack 0
  3839  000066                     memset@p:
  3840                           	opt stack 0
  3841                           
  3842                           ; 2 bytes @ 0x6
  3843  000066                     	ds	1
  3844  000067                     ??_moteApp_add8bToDataBuffer:
  3845  000067                     ??_CDCTxService:
  3846  000067                     moduleResync@escapeEvent:
  3847                           	opt stack 0
  3848  000067                     sendDataCommand@byteCount:
  3849                           	opt stack 0
  3850  000067                     getsUSBUSART@buffer:
  3851                           	opt stack 0
  3852                           
  3853                           ; 2 bytes @ 0x7
  3854  000067                     	ds	1
  3855  000068                     ??___fladd:
  3856  000068                     sendDataCommand@byteCount_1627:
  3857                           	opt stack 0
  3858  000068                     USBDeviceInit@i:
  3859                           	opt stack 0
  3860  000068                     ___almod@counter:
  3861                           	opt stack 0
  3862  000068                     ___fltol@sign1:
  3863                           	opt stack 0
  3864  000068                     ___xxtofl@sign:
  3865                           	opt stack 0
  3866  000068                     _CDCTxService$6702:
  3867                           	opt stack 0
  3868  000068                     memcpy@s:
  3869                           	opt stack 0
  3870                           
  3871                           ; 2 bytes @ 0x8
  3872  000068                     	ds	1
  3873  000069                     moteApp_add8bToDataBuffer@number:
  3874                           	opt stack 0
  3875  000069                     getsUSBUSART@len:
  3876                           	opt stack 0
  3877  000069                     ___almod@sign:
  3878                           	opt stack 0
  3879  000069                     ___fltol@exp1:
  3880                           	opt stack 0
  3881  000069                     ___xxtofl@exp:
  3882                           	opt stack 0
  3883                           
  3884                           ; 1 bytes @ 0x9
  3885  000069                     	ds	1
  3886  00006A                     ??_getsUSBUSART:
  3887  00006A                     oled_putChar@k:
  3888                           	opt stack 0
  3889  00006A                     CDCTxService@i:
  3890                           	opt stack 0
  3891  00006A                     memcpy@tmp:
  3892                           	opt stack 0
  3893  00006A                     ___xxtofl@arg:
  3894                           	opt stack 0
  3895                           
  3896                           ; 4 bytes @ 0xA
  3897  00006A                     	ds	1
  3898  00006B                     oled_putChar@index:
  3899                           	opt stack 0
  3900  00006B                     CDCTxService@byte_to_send:
  3901                           	opt stack 0
  3902  00006B                     moteApp_setLightString@lightString:
  3903                           	opt stack 0
  3904  00006B                     _getsUSBUSART$6654:
  3905                           	opt stack 0
  3906                           
  3907                           ; 2 bytes @ 0xB
  3908  00006B                     	ds	1
  3909  00006C                     oled_clearRow@page:
  3910                           	opt stack 0
  3911                           
  3912                           ; 1 bytes @ 0xC
  3913  00006C                     	ds	1
  3914  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3915  00006D                     moteApp_setLightString@stingPos:
  3916                           	opt stack 0
  3917  00006D                     oled_clearRow@index:
  3918                           	opt stack 0
  3919                           
  3920                           ; 1 bytes @ 0xD
  3921  00006D                     	ds	1
  3922  00006E                     ?_moteApp_getLightValue:
  3923                           	opt stack 0
  3924  00006E                     moteApp_GoToSleep@status:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0xE
  3928  00006E                     	ds	2
  3929  000070                     ___fladd@signs:
  3930                           	opt stack 0
  3931  000070                     moteApp_getLightValue@escapeCounter:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x10
  3935  000070                     	ds	1
  3936  000071                     ___fladd@aexp:
  3937                           	opt stack 0
  3938                           
  3939                           ; 1 bytes @ 0x11
  3940  000071                     	ds	1
  3941  000072                     ?_moteApp_convertSensorValue:
  3942                           	opt stack 0
  3943  000072                     ___fladd@bexp:
  3944                           	opt stack 0
  3945  000072                     moteApp_addToDataBuffer@string:
  3946                           	opt stack 0
  3947  000072                     moteApp_convertSensorValue@string:
  3948                           	opt stack 0
  3949  000072                     oled_putString@string:
  3950                           	opt stack 0
  3951                           
  3952                           ; 2 bytes @ 0x12
  3953  000072                     	ds	1
  3954  000073                     ___fladd@grs:
  3955                           	opt stack 0
  3956                           
  3957                           ; 1 bytes @ 0x13
  3958  000073                     	ds	1
  3959  000074                     ??_moteApp_convertSensorValue:
  3960  000074                     ?___flmul:
  3961                           	opt stack 0
  3962  000074                     moteApp_addToDataBuffer@bufferLocation:
  3963                           	opt stack 0
  3964  000074                     oled_putString@station_dot:
  3965                           	opt stack 0
  3966  000074                     ___flmul@b:
  3967                           	opt stack 0
  3968                           
  3969                           ; 4 bytes @ 0x14
  3970  000074                     	ds	1
  3971  000075                     moteApp_addToDataBuffer@index:
  3972                           	opt stack 0
  3973  000075                     oled_putString@start_page:
  3974                           	opt stack 0
  3975                           
  3976                           ; 1 bytes @ 0x15
  3977  000075                     	ds	1
  3978  000076                     oled_putString@index:
  3979                           	opt stack 0
  3980                           
  3981                           ; 1 bytes @ 0x16
  3982  000076                     	ds	1
  3983  000077                     ??_test_switch:
  3984  000077                     moteJoiningProcess@changeStates:
  3985                           	opt stack 0
  3986  000077                     USBapp_Handler@buttonPress:
  3987                           	opt stack 0
  3988  000077                     oled_putUint8@station_dot:
  3989                           	opt stack 0
  3990  000077                     oled_putint8@station_dot:
  3991                           	opt stack 0
  3992  000077                     moteApp_convertSensorValue@convertedValue:
  3993                           	opt stack 0
  3994                           
  3995                           ; 2 bytes @ 0x17
  3996  000077                     	ds	1
  3997  000078                     moteJoiningProcess@selectButton:
  3998                           	opt stack 0
  3999  000078                     oled_putUint8@start_page:
  4000                           	opt stack 0
  4001  000078                     oled_putint8@start_page:
  4002                           	opt stack 0
  4003  000078                     test_switch@timeout:
  4004                           	opt stack 0
  4005  000078                     ___flmul@a:
  4006                           	opt stack 0
  4007                           
  4008                           ; 4 bytes @ 0x18
  4009  000078                     	ds	1
  4010  000079                     ??_moteJoiningProcess:
  4011  000079                     moteApp_convertSensorValue@index:
  4012                           	opt stack 0
  4013  000079                     oled_putUint8@number:
  4014                           	opt stack 0
  4015  000079                     oled_putint8@negative:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x19
  4019  000079                     	ds	1
  4020  00007A                     test_switch@buttonCheck:
  4021                           	opt stack 0
  4022  00007A                     moteJoiningProcess@readDataRate:
  4023                           	opt stack 0
  4024  00007A                     oled_putUint8@numData:
  4025                           	opt stack 0
  4026  00007A                     oled_putint8@numData:
  4027                           	opt stack 0
  4028                           
  4029                           ; 6 bytes @ 0x1A
  4030  00007A                     	ds	1
  4031  00007B                     moteJoiningProcess@joiningComplete:
  4032                           	opt stack 0
  4033                           
  4034                           ; 1 bytes @ 0x1B
  4035  00007B                     	ds	1
  4036  00007C                     ??___flmul:
  4037  00007C                     moteJoiningProcess@messageReady:
  4038                           	opt stack 0
  4039                           
  4040                           ; 1 bytes @ 0x1C
  4041  00007C                     	ds	4
  4042  000080                     oled_putint8@number:
  4043                           	opt stack 0
  4044  000080                     ___flmul@sign:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x20
  4048  000080                     	ds	1
  4049  000081                     ___flmul@grs:
  4050                           	opt stack 0
  4051                           
  4052                           ; 4 bytes @ 0x21
  4053  000081                     	ds	4
  4054  000085                     ___flmul@aexp:
  4055                           	opt stack 0
  4056                           
  4057                           ; 1 bytes @ 0x25
  4058  000085                     	ds	1
  4059  000086                     ___flmul@bexp:
  4060                           	opt stack 0
  4061                           
  4062                           ; 1 bytes @ 0x26
  4063  000086                     	ds	1
  4064  000087                     ___flmul@prod:
  4065                           	opt stack 0
  4066                           
  4067                           ; 4 bytes @ 0x27
  4068  000087                     	ds	4
  4069  00008B                     ___flmul@temp:
  4070                           	opt stack 0
  4071                           
  4072                           ; 2 bytes @ 0x2B
  4073  00008B                     	ds	2
  4074  00008D                     ?___fldiv:
  4075                           	opt stack 0
  4076  00008D                     ___fldiv@b:
  4077                           	opt stack 0
  4078                           
  4079                           ; 4 bytes @ 0x2D
  4080  00008D                     	ds	4
  4081  000091                     ___fldiv@a:
  4082                           	opt stack 0
  4083                           
  4084                           ; 4 bytes @ 0x31
  4085  000091                     	ds	4
  4086  000095                     ??___fldiv:
  4087                           
  4088                           ; 1 bytes @ 0x35
  4089  000095                     	ds	4
  4090  000099                     ___fldiv@sign:
  4091                           	opt stack 0
  4092                           
  4093                           ; 1 bytes @ 0x39
  4094  000099                     	ds	1
  4095  00009A                     ___fldiv@rem:
  4096                           	opt stack 0
  4097                           
  4098                           ; 4 bytes @ 0x3A
  4099  00009A                     	ds	4
  4100  00009E                     ___fldiv@new_exp:
  4101                           	opt stack 0
  4102                           
  4103                           ; 2 bytes @ 0x3E
  4104  00009E                     	ds	2
  4105  0000A0                     ___fldiv@grs:
  4106                           	opt stack 0
  4107                           
  4108                           ; 4 bytes @ 0x40
  4109  0000A0                     	ds	4
  4110  0000A4                     ___fldiv@bexp:
  4111                           	opt stack 0
  4112                           
  4113                           ; 1 bytes @ 0x44
  4114  0000A4                     	ds	1
  4115  0000A5                     ___fldiv@aexp:
  4116                           	opt stack 0
  4117                           
  4118                           ; 1 bytes @ 0x45
  4119  0000A5                     	ds	1
  4120  0000A6                     ADC_TempConversion@tempRaw:
  4121                           	opt stack 0
  4122                           
  4123                           ; 1 bytes @ 0x46
  4124  0000A6                     	ds	1
  4125  0000A7                     ADC_TempConversion@temp:
  4126                           	opt stack 0
  4127                           
  4128                           ; 1 bytes @ 0x47
  4129  0000A7                     	ds	1
  4130  0000A8                     ADC_TempConversion@val:
  4131                           	opt stack 0
  4132                           
  4133                           ; 4 bytes @ 0x48
  4134  0000A8                     	ds	4
  4135  0000AC                     ??_moteApp_testSensors:
  4136  0000AC                     moteRunningProcess@selectButton:
  4137                           	opt stack 0
  4138                           
  4139                           ; 1 bytes @ 0x4C
  4140  0000AC                     	ds	1
  4141  0000AD                     moteRunningProcess@messageReady:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0x4D
  4145  0000AD                     	ds	1
  4146  0000AE                     moteRunningProcess@sleepEvent:
  4147                           	opt stack 0
  4148                           
  4149                           ; 1 bytes @ 0x4E
  4150  0000AE                     	ds	1
  4151  0000AF                     ??_moteRunningProcess:
  4152                           
  4153                           ; 1 bytes @ 0x4F
  4154  0000AF                     	ds	1
  4155  0000B0                     moteRunningProcess@readByte:
  4156                           	opt stack 0
  4157                           
  4158                           ; 1 bytes @ 0x50
  4159  0000B0                     	ds	1
  4160  0000B1                     moteRunningProcess@sizeOfUpdate:
  4161                           	opt stack 0
  4162                           
  4163                           ; 1 bytes @ 0x51
  4164  0000B1                     	ds	1
  4165  0000B2                     moteRunningProcess@sizeOfUpdate_1497:
  4166                           	opt stack 0
  4167                           
  4168                           ; 1 bytes @ 0x52
  4169  0000B2                     	ds	1
  4170  0000B3                     moteRunningProcess@counter:
  4171                           	opt stack 0
  4172                           
  4173                           ; 1 bytes @ 0x53
  4174  0000B3                     	ds	1
  4175  0000B4                     moteRunningProcess@bufferReadPos:
  4176                           	opt stack 0
  4177                           
  4178                           ; 1 bytes @ 0x54
  4179  0000B4                     	ds	1
  4180  0000B5                     moteRunningProcess@changeStates:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x55
  4184  0000B5                     	ds	1
  4185  0000B6                     ??_moteHandler:
  4186                           
  4187                           ; 1 bytes @ 0x56
  4188  0000B6                     	ds	1
  4189  0000B7                     moteHandler@gotoSleep:
  4190                           	opt stack 0
  4191                           
  4192                           ; 1 bytes @ 0x57
  4193  0000B7                     	ds	1
  4194  0000B8                     moteHandler@gotoNextState:
  4195                           	opt stack 0
  4196                           
  4197                           ; 1 bytes @ 0x58
  4198  0000B8                     	ds	1
  4199  0000B9                     moteHandler@s2Button:
  4200                           	opt stack 0
  4201                           
  4202                           ; 1 bytes @ 0x59
  4203  0000B9                     	ds	1
  4204  0000BA                     moteHandler@buttonPress:
  4205                           	opt stack 0
  4206                           
  4207                           ; 1 bytes @ 0x5A
  4208  0000BA                     	ds	1
  4209  0000BB                     moteHandler@readMessage:
  4210                           	opt stack 0
  4211                           
  4212                           ; 1 bytes @ 0x5B
  4213  0000BB                     	ds	1
  4214  0000BC                     tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           postinc0	equ	0xFEE
  4219                           wreg	equ	0xFE8
  4220                           postdec1	equ	0xFE5
  4221                           fsr1l	equ	0xFE1
  4222                           
  4223                           ; 1 bytes @ 0x5C
  4224                           
  4225                           	psect	cstackCOMRAM
  4226  000001                     __pcstackCOMRAM:
  4227                           	opt stack 0
  4228  000001                     ??_USBStdGetDscHandler:
  4229  000001                     ??_USBStdGetStatusHandler:
  4230  000001                     ?i2_USBTransferOnePacket:
  4231                           	opt stack 0
  4232  000001                     ?___lldiv:
  4233                           	opt stack 0
  4234  000001                     reloadTimer@setTimerValue:
  4235                           	opt stack 0
  4236  000001                     clearInterruptPinRX@tClearPin:
  4237                           	opt stack 0
  4238  000001                     USBConfigureEndpoint@direction:
  4239                           	opt stack 0
  4240  000001                     USBCtrlTrfTxService@byteToSend:
  4241                           	opt stack 0
  4242  000001                     i2oled_writeCommand@command:
  4243                           	opt stack 0
  4244  000001                     i2oled_writeData@data:
  4245                           	opt stack 0
  4246  000001                     i2USBTransferOnePacket@dir:
  4247                           	opt stack 0
  4248  000001                     i2memset@p1:
  4249                           	opt stack 0
  4250  000001                     ___lldiv@dividend:
  4251                           	opt stack 0
  4252                           
  4253                           ; 4 bytes @ 0x0
  4254  000001                     	ds	1
  4255  000002                     ??_USBConfigureEndpoint:
  4256  000002                     i2Set_Page_Address@address:
  4257                           	opt stack 0
  4258  000002                     i2Set_Column_Address@address:
  4259                           	opt stack 0
  4260  000002                     USBStdGetStatusHandler@p:
  4261                           	opt stack 0
  4262  000002                     i2USBTransferOnePacket@data:
  4263                           	opt stack 0
  4264                           
  4265                           ; 2 bytes @ 0x1
  4266  000002                     	ds	1
  4267  000003                     i2oled_putChar@station_dot:
  4268                           	opt stack 0
  4269  000003                     i2memset@c:
  4270                           	opt stack 0
  4271                           
  4272                           ; 2 bytes @ 0x2
  4273  000003                     	ds	1
  4274  000004                     i2oled_putChar@start_page:
  4275                           	opt stack 0
  4276  000004                     i2USBTransferOnePacket@len:
  4277                           	opt stack 0
  4278                           
  4279                           ; 1 bytes @ 0x3
  4280  000004                     	ds	1
  4281  000005                     ??i2_oled_putChar:
  4282  000005                     i2USBTransferOnePacket@ep:
  4283                           	opt stack 0
  4284  000005                     i2memset@n:
  4285                           	opt stack 0
  4286  000005                     ___lldiv@divisor:
  4287                           	opt stack 0
  4288                           
  4289                           ; 4 bytes @ 0x4
  4290  000005                     	ds	1
  4291  000006                     USBConfigureEndpoint@EPNum:
  4292                           	opt stack 0
  4293  000006                     i2USBTransferOnePacket@handle:
  4294                           	opt stack 0
  4295                           
  4296                           ; 2 bytes @ 0x5
  4297  000006                     	ds	1
  4298  000007                     USBConfigureEndpoint@handle:
  4299                           	opt stack 0
  4300  000007                     i2memset@p:
  4301                           	opt stack 0
  4302                           
  4303                           ; 2 bytes @ 0x6
  4304  000007                     	ds	2
  4305  000009                     USBEnableEndpoint@options:
  4306                           	opt stack 0
  4307  000009                     i2USBDeviceInit@i:
  4308                           	opt stack 0
  4309  000009                     ___lldiv@quotient:
  4310                           	opt stack 0
  4311                           
  4312                           ; 4 bytes @ 0x8
  4313  000009                     	ds	1
  4314  00000A                     USBEnableEndpoint@p:
  4315                           	opt stack 0
  4316                           
  4317                           ; 2 bytes @ 0x9
  4318  00000A                     	ds	1
  4319  00000B                     i2oled_putChar@k:
  4320                           	opt stack 0
  4321                           
  4322                           ; 1 bytes @ 0xA
  4323  00000B                     	ds	1
  4324  00000C                     USBEnableEndpoint@ep:
  4325                           	opt stack 0
  4326  00000C                     i2oled_putChar@index:
  4327                           	opt stack 0
  4328                           
  4329                           ; 1 bytes @ 0xB
  4330  00000C                     	ds	1
  4331  00000D                     USBapp_CdcEmulatorInitialize@i:
  4332                           	opt stack 0
  4333  00000D                     ___lldiv@counter:
  4334                           	opt stack 0
  4335  00000D                     i2oled_clearRow@page:
  4336                           	opt stack 0
  4337  00000D                     i2oled_putString@string:
  4338                           	opt stack 0
  4339                           
  4340                           ; 2 bytes @ 0xC
  4341  00000D                     	ds	1
  4342  00000E                     i2oled_clearRow@index:
  4343                           	opt stack 0
  4344  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4345                           	opt stack 0
  4346  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4347                           	opt stack 0
  4348                           
  4349                           ; 4 bytes @ 0xD
  4350  00000E                     	ds	1
  4351  00000F                     i2oled_putString@station_dot:
  4352                           	opt stack 0
  4353                           
  4354                           ; 1 bytes @ 0xE
  4355  00000F                     	ds	1
  4356  000010                     i2oled_putString@start_page:
  4357                           	opt stack 0
  4358  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4359                           	opt stack 0
  4360                           
  4361                           ; 2 bytes @ 0xF
  4362  000010                     	ds	1
  4363  000011                     i2oled_putString@index:
  4364                           	opt stack 0
  4365                           
  4366                           ; 1 bytes @ 0x10
  4367  000011                     	ds	1
  4368  000012                     USBCtrlTrfRxService@i:
  4369                           	opt stack 0
  4370  000012                     USBCtrlTrfInHandler@lastDTS:
  4371                           	opt stack 0
  4372  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4373                           	opt stack 0
  4374  000012                     printfOled@buffer_rx:
  4375                           	opt stack 0
  4376                           
  4377                           ; 2 bytes @ 0x11
  4378  000012                     	ds	1
  4379  000013                     USBCtrlTrfRxService@byteToRead:
  4380                           	opt stack 0
  4381                           
  4382                           ; 1 bytes @ 0x12
  4383  000013                     	ds	1
  4384  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4385  000014                     printfOled@numBytes:
  4386                           	opt stack 0
  4387                           
  4388                           ; 1 bytes @ 0x13
  4389  000014                     	ds	1
  4390  000015                     ??_InterruptTimerUART:
  4391                           
  4392                           ; 1 bytes @ 0x14
  4393  000015                     	ds	1
  4394  000016                     ??_USBStdFeatureReqHandler:
  4395  000016                     USBStdSetCfgHandler@i:
  4396                           	opt stack 0
  4397                           
  4398                           ; 1 bytes @ 0x15
  4399  000016                     	ds	1
  4400  000017                     InterruptTimerUART@mask:
  4401                           	opt stack 0
  4402  000017                     USBStdFeatureReqHandler@pUEP:
  4403                           	opt stack 0
  4404                           
  4405                           ; 2 bytes @ 0x16
  4406  000017                     	ds	2
  4407  000019                     USBStdFeatureReqHandler@current_ep_data:
  4408                           	opt stack 0
  4409                           
  4410                           ; 1 bytes @ 0x18
  4411  000019                     	ds	1
  4412  00001A                     USBStdFeatureReqHandler@p:
  4413                           	opt stack 0
  4414                           
  4415                           ; 2 bytes @ 0x19
  4416  00001A                     	ds	2
  4417  00001C                     ??_USBCtrlEPService:
  4418  00001C                     
  4419                           ; 1 bytes @ 0x1B
  4420  00001C                     	ds	2
  4421  00001E                     USBCtrlEPService@setup_cnt:
  4422                           	opt stack 0
  4423                           
  4424                           ; 1 bytes @ 0x1D
  4425  00001E                     	ds	1
  4426  00001F                     USBDeviceTasks@i:
  4427                           	opt stack 0
  4428                           
  4429                           ; 1 bytes @ 0x1E
  4430  00001F                     	ds	1
  4431  000020                     ??_INTERRUPT_InterruptManager:
  4432                           
  4433                           ; 1 bytes @ 0x1F
  4434  000020                     	ds	18
  4435  000032                     INTERRUPT_InterruptManager@tClearPin:
  4436                           	opt stack 0
  4437                           
  4438                           ; 1 bytes @ 0x31
  4439  000032                     	ds	1
  4440                           tblptru	equ	0xFF8
  4441                           tblptrh	equ	0xFF7
  4442                           tblptrl	equ	0xFF6
  4443                           tablat	equ	0xFF5
  4444                           postinc0	equ	0xFEE
  4445                           wreg	equ	0xFE8
  4446                           postdec1	equ	0xFE5
  4447                           fsr1l	equ	0xFE1
  4448                           
  4449 ;;
  4450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4451 ;;
  4452 ;; *************** function _main *****************
  4453 ;; Defined at:
  4454 ;;		line 70 in file "main.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels required when called:   20
  4474 ;; This function calls:
  4475 ;;		_DATAEE_ReadByte
  4476 ;;		_DATAEE_WriteByte
  4477 ;;		_MOTEapp_handlerState
  4478 ;;		_SYSTEM_Initialize
  4479 ;;		_USBDeviceAttach
  4480 ;;		_USBDeviceInit
  4481 ;;		_USBapp_Handler
  4482 ;;		_USBapp_handlerState
  4483 ;;		_moduleResync
  4484 ;;		_moteApp_clearCommand
  4485 ;;		_moteApp_delayms
  4486 ;;		_moteHandler
  4487 ;;		_oled_clear
  4488 ;;		_oled_init
  4489 ;;		_oled_putString
  4490 ;;		_test_powerup
  4491 ;; This function is called by:
  4492 ;;		Startup code after reset
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text0
  4497  002CE4                     __ptext0:
  4498                           	opt stack 0
  4499  002CE4                     _main:
  4500                           	opt stack 11
  4501                           
  4502                           ;main.c: 73: SYSTEM_Initialize();
  4503                           
  4504                           ;incstack = 0
  4505  002CE4  EC99  F02B         	call	_SYSTEM_Initialize	;wreg free
  4506                           
  4507                           ;main.c: 75: oled_init();
  4508  002CE8  ECC5  F02A         	call	_oled_init	;wreg free
  4509                           
  4510                           ;main.c: 76: USBDeviceInit();
  4511  002CEC  ECAC  F014         	call	_USBDeviceInit	;wreg free
  4512                           
  4513                           ;main.c: 78: USBDeviceAttach();
  4514  002CF0  EC60  F02A         	call	_USBDeviceAttach	;wreg free
  4515                           
  4516                           ;main.c: 80: LATBbits.LATB5 = 1;
  4517  002CF4  8A8A               	bsf	3978,5,c	;volatile
  4518                           
  4519                           ;main.c: 81: moteApp_delayms(50);
  4520  002CF6  0E00               	movlw	0
  4521  002CF8  0100               	movlb	0	; () banked
  4522  002CFA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4523  002CFC  0E32               	movlw	50
  4524  002CFE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4525  002D00  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4526                           
  4527                           ;main.c: 82: LATBbits.LATB5 = 0;
  4528  002D04  9A8A               	bcf	3978,5,c	;volatile
  4529                           
  4530                           ;main.c: 83: moteApp_delayms(500);
  4531  002D06  0E01               	movlw	1
  4532  002D08  0100               	movlb	0	; () banked
  4533  002D0A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4534  002D0C  0EF4               	movlw	244
  4535  002D0E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4536  002D10  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4537                           
  4538                           ;main.c: 85: PEIE = 1;
  4539  002D14  8CF2               	bsf	intcon,6,c	;volatile
  4540                           
  4541                           ;main.c: 86: GIE = 1;
  4542  002D16  8EF2               	bsf	intcon,7,c	;volatile
  4543                           
  4544                           ;main.c: 88: moduleResync();
  4545  002D18  EC81  F023         	call	_moduleResync	;wreg free
  4546                           
  4547                           ;main.c: 89: moteApp_delayms(20);
  4548  002D1C  0E00               	movlw	0
  4549  002D1E  0100               	movlb	0	; () banked
  4550  002D20  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4551  002D22  0E14               	movlw	20
  4552  002D24  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4553  002D26  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4554                           
  4555                           ;main.c: 90: moteApp_clearCommand();
  4556  002D2A  EC56  F02D         	call	_moteApp_clearCommand	;wreg free
  4557                           
  4558                           ;main.c: 91: moteApp_delayms(20);
  4559  002D2E  0E00               	movlw	0
  4560  002D30  0100               	movlb	0	; () banked
  4561  002D32  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4562  002D34  0E14               	movlw	20
  4563  002D36  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4564  002D38  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4565                           
  4566                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4567  002D3C  0E00               	movlw	0
  4568  002D3E  ECE3  F02C         	call	_DATAEE_ReadByte
  4569  002D42  0100               	movlb	0	; () banked
  4570  002D44  6FF6               	movwf	_powerOnStatus& (0+255),b
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4574  002D46  0E55               	movlw	85
  4575  002D48  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4576  002D4A  B4D8               	btfsc	status,2,c
  4577  002D4C  D008               	goto	l57
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;main.c: 95: {
  4581                           ;main.c: 96: test_powerup();
  4582  002D4E  EC7E  F025         	call	_test_powerup	;wreg free
  4583                           
  4584                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4585  002D52  0E55               	movlw	85
  4586  002D54  0100               	movlb	0	; () banked
  4587  002D56  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4588  002D58  0E00               	movlw	0
  4589  002D5A  ECCF  F029         	call	_DATAEE_WriteByte
  4590  002D5E                     l57:
  4591                           
  4592                           ;main.c: 98: }
  4593                           ;main.c: 101: operationType = USB;
  4594  002D5E  0E00               	movlw	0
  4595  002D60  0100               	movlb	0	; () banked
  4596  002D62  6FF7               	movwf	_operationType& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4600  002D64  0E00               	movlw	0
  4601  002D66  EC89  F02D         	call	_USBapp_handlerState
  4602                           
  4603                           ;main.c: 104: oled_clear();
  4604  002D6A  EC8E  F02C         	call	_oled_clear	;wreg free
  4605                           
  4606                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4607  002D6E  0E1E               	movlw	low STR_1
  4608  002D70  0100               	movlb	0	; () banked
  4609  002D72  6F72               	movwf	oled_putString@string& (0+255),b
  4610  002D74  0E7D               	movlw	high STR_1
  4611  002D76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4612  002D78  0E00               	movlw	0
  4613  002D7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4614  002D7C  0E00               	movlw	0
  4615  002D7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  4616  002D80  EC27  F026         	call	_oled_putString	;wreg free
  4617                           
  4618                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4619  002D84  0E00               	movlw	low STR_2
  4620  002D86  0100               	movlb	0	; () banked
  4621  002D88  6F72               	movwf	oled_putString@string& (0+255),b
  4622  002D8A  0E7D               	movlw	high STR_2
  4623  002D8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4624  002D8E  0E00               	movlw	0
  4625  002D90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4626  002D92  0E01               	movlw	1
  4627  002D94  6F75               	movwf	oled_putString@start_page& (0+255),b
  4628  002D96  EC27  F026         	call	_oled_putString	;wreg free
  4629                           
  4630                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4631  002D9A  0E0F               	movlw	low STR_3
  4632  002D9C  0100               	movlb	0	; () banked
  4633  002D9E  6F72               	movwf	oled_putString@string& (0+255),b
  4634  002DA0  0E7D               	movlw	high STR_3
  4635  002DA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4636  002DA4  0E00               	movlw	0
  4637  002DA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4638  002DA8  0E03               	movlw	3
  4639  002DAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  4640  002DAC  EC27  F026         	call	_oled_putString	;wreg free
  4641                           
  4642                           ;main.c: 108: moteApp_delayms(1000);
  4643  002DB0  0E03               	movlw	3
  4644  002DB2  0100               	movlb	0	; () banked
  4645  002DB4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4646  002DB6  0EE8               	movlw	232
  4647  002DB8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4648  002DBA  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4649                           
  4650                           ;main.c: 112: {
  4651                           ;main.c: 114: switch (operationType)
  4652                           
  4653                           ;main.c: 111: while(1)
  4654  002DBE  D015               	goto	l67
  4655  002DC0                     
  4656                           ;main.c: 117: while(1);
  4657  002DC0  D7FF               	goto	l60
  4658  002DC2                     
  4659                           ;main.c: 120: USBapp_Handler();
  4660  002DC2  ECD3  F01F         	call	_USBapp_Handler	;wreg free
  4661                           
  4662                           ;main.c: 122: operationType = MOTE;
  4663  002DC6  0E01               	movlw	1
  4664  002DC8  0100               	movlb	0	; () banked
  4665  002DCA  6FF7               	movwf	_operationType& (0+255),b
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4669  002DCC  0E01               	movlw	1
  4670  002DCE  EC8E  F02D         	call	_MOTEapp_handlerState
  4671                           
  4672                           ;main.c: 124: break;
  4673  002DD2  D00B               	goto	l67
  4674  002DD4                     
  4675                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4676  002DD4  EC6F  F010         	call	_moteHandler	;wreg free
  4677  002DD8  0A04               	xorlw	4
  4678  002DDA  A4D8               	btfss	status,2,c
  4679  002DDC  D006               	goto	l67
  4680                           
  4681                           ;main.c: 127: {
  4682                           ;main.c: 129: operationType = USB;
  4683  002DDE  0E00               	movlw	0
  4684  002DE0  0100               	movlb	0	; () banked
  4685  002DE2  6FF7               	movwf	_operationType& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4689  002DE4  0E00               	movlw	0
  4690  002DE6  EC89  F02D         	call	_USBapp_handlerState
  4691  002DEA                     l67:
  4692                           
  4693                           ;main.c: 133: }
  4694                           
  4695                           ;main.c: 131: }
  4696                           ;main.c: 132: break;
  4697  002DEA  0100               	movlb	0	; () banked
  4698  002DEC  51F7               	movf	_operationType& (0+255),w,b
  4699                           
  4700                           ; Switch size 1, requested type "space"
  4701                           ; Number of cases is 2, Range of values is 0 to 1
  4702                           ; switch strategies available:
  4703                           ; Name         Instructions Cycles
  4704                           ; simple_byte            7     4 (average)
  4705                           ;	Chosen strategy is simple_byte
  4706  002DEE  0A00               	xorlw	0	; case 0
  4707  002DF0  B4D8               	btfsc	status,2,c
  4708  002DF2  D7E7               	goto	l65
  4709  002DF4  0A01               	xorlw	1	; case 1
  4710  002DF6  B4D8               	btfsc	status,2,c
  4711  002DF8  D7ED               	goto	l66
  4712  002DFA  D7E2               	goto	l60
  4713  002DFC                     __end_of_main:
  4714                           	opt stack 0
  4715                           tblptru	equ	0xFF8
  4716                           tblptrh	equ	0xFF7
  4717                           tblptrl	equ	0xFF6
  4718                           tablat	equ	0xFF5
  4719                           intcon	equ	0xFF2
  4720                           postinc0	equ	0xFEE
  4721                           wreg	equ	0xFE8
  4722                           postdec1	equ	0xFE5
  4723                           fsr1l	equ	0xFE1
  4724                           status	equ	0xFD8
  4725                           
  4726 ;; *************** function _test_powerup *****************
  4727 ;; Defined at:
  4728 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:   17
  4749 ;; This function calls:
  4750 ;;		_EUSART_FlushBuffer
  4751 ;;		_moteApp_delayms
  4752 ;;		_moteApp_testSensors
  4753 ;;		_oled_clear
  4754 ;;		_test_comms
  4755 ;;		_test_leds
  4756 ;;		_test_oled
  4757 ;;		_test_switch
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text1
  4764  004AFC                     __ptext1:
  4765                           	opt stack 0
  4766  004AFC                     _test_powerup:
  4767                           	opt stack 13
  4768                           
  4769                           ;poweruptest.c: 65: test_oled();
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;incstack = 0
  4773  004AFC  ECB3  F022         	call	_test_oled	;wreg free
  4774                           
  4775                           ;poweruptest.c: 66: moteApp_delayms(20);
  4776  004B00  0E00               	movlw	0
  4777  004B02  0100               	movlb	0	; () banked
  4778  004B04  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4779  004B06  0E14               	movlw	20
  4780  004B08  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4781  004B0A  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4782                           
  4783                           ;poweruptest.c: 68: test_switch();
  4784  004B0E  ECD6  F01C         	call	_test_switch	;wreg free
  4785                           
  4786                           ;poweruptest.c: 70: oled_clear();
  4787  004B12  EC8E  F02C         	call	_oled_clear	;wreg free
  4788                           
  4789                           ;poweruptest.c: 71: moteApp_delayms(20);
  4790  004B16  0E00               	movlw	0
  4791  004B18  0100               	movlb	0	; () banked
  4792  004B1A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4793  004B1C  0E14               	movlw	20
  4794  004B1E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4795  004B20  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4796                           
  4797                           ;poweruptest.c: 72: test_comms();
  4798  004B24  EC92  F026         	call	_test_comms	;wreg free
  4799                           
  4800                           ;poweruptest.c: 73: moteApp_delayms(20);
  4801  004B28  0E00               	movlw	0
  4802  004B2A  0100               	movlb	0	; () banked
  4803  004B2C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4804  004B2E  0E14               	movlw	20
  4805  004B30  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4806  004B32  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4807                           
  4808                           ;poweruptest.c: 75: test_leds();
  4809  004B36  EC5F  F027         	call	_test_leds	;wreg free
  4810                           
  4811                           ;poweruptest.c: 78: moteApp_delayms(20);
  4812  004B3A  0E00               	movlw	0
  4813  004B3C  0100               	movlb	0	; () banked
  4814  004B3E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4815  004B40  0E14               	movlw	20
  4816  004B42  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4817  004B44  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4818                           
  4819                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4820  004B48  EC2F  F029         	call	_EUSART_FlushBuffer	;wreg free
  4821                           
  4822                           ;poweruptest.c: 80: moteApp_delayms(20);
  4823  004B4C  0E00               	movlw	0
  4824  004B4E  0100               	movlb	0	; () banked
  4825  004B50  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4826  004B52  0E14               	movlw	20
  4827  004B54  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4828  004B56  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4829                           
  4830                           ;poweruptest.c: 81: moteApp_testSensors();
  4831  004B5A  EC3C  F01D         	call	_moteApp_testSensors	;wreg free
  4832                           
  4833                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4834  004B5E  0E0B               	movlw	11
  4835  004B60  0100               	movlb	0	; () banked
  4836  004B62  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4837  004B64  0EB8               	movlw	184
  4838  004B66  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4839  004B68  EC93  F02A         	call	_moteApp_delayms	;wreg free
  4840  004B6C  0012               	return		;funcret
  4841  004B6E                     __end_of_test_powerup:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           postdec1	equ	0xFE5
  4851                           fsr1l	equ	0xFE1
  4852                           status	equ	0xFD8
  4853                           
  4854 ;; *************** function _test_switch *****************
  4855 ;; Defined at:
  4856 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  timeout         2   24[BANK0 ] unsigned int 
  4861 ;;  buttonCheck     1   26[BANK0 ] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0
  4872 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4874 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4875 ;;Total ram usage:        4 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:   16
  4878 ;; This function calls:
  4879 ;;		_oled_clear
  4880 ;;		_oled_putString
  4881 ;; This function is called by:
  4882 ;;		_test_powerup
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text2
  4887  0039AC                     __ptext2:
  4888                           	opt stack 0
  4889  0039AC                     _test_switch:
  4890                           	opt stack 13
  4891                           
  4892                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4893                           
  4894                           ;incstack = 0
  4895  0039AC  0E01               	movlw	1
  4896  0039AE  0100               	movlb	0	; () banked
  4897  0039B0  6F79               	movwf	(test_switch@timeout+1)& (0+255),b
  4898  0039B2  0EF4               	movlw	244
  4899  0039B4  6F78               	movwf	test_switch@timeout& (0+255),b
  4900                           
  4901                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4902  0039B6  0E00               	movlw	0
  4903  0039B8  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;poweruptest.c: 103: oled_clear();
  4907  0039BA  EC8E  F02C         	call	_oled_clear	;wreg free
  4908                           
  4909                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4910  0039BE  0EF4               	movlw	low STR_10
  4911  0039C0  0100               	movlb	0	; () banked
  4912  0039C2  6F72               	movwf	oled_putString@string& (0+255),b
  4913  0039C4  0E7D               	movlw	high STR_10
  4914  0039C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4915  0039C8  0E00               	movlw	0
  4916  0039CA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4917  0039CC  0E00               	movlw	0
  4918  0039CE  6F75               	movwf	oled_putString@start_page& (0+255),b
  4919  0039D0  EC27  F026         	call	_oled_putString	;wreg free
  4920                           
  4921                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4922  0039D4  A281               	btfss	3969,1,c	;volatile
  4923  0039D6  D002               	goto	u8740
  4924  0039D8  B081               	btfsc	3969,0,c	;volatile
  4925  0039DA  D00C               	goto	l123
  4926  0039DC                     u8740:
  4927                           
  4928                           ;poweruptest.c: 107: {
  4929                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4930  0039DC  0E7C               	movlw	low STR_11
  4931  0039DE  0100               	movlb	0	; () banked
  4932  0039E0  6F72               	movwf	oled_putString@string& (0+255),b
  4933  0039E2  0E7E               	movlw	high STR_11
  4934  0039E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4935  0039E6  0E00               	movlw	0
  4936  0039E8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4937  0039EA  0E03               	movlw	3
  4938  0039EC  6F75               	movwf	oled_putString@start_page& (0+255),b
  4939  0039EE  EC27  F026         	call	_oled_putString	;wreg free
  4940                           
  4941                           ;poweruptest.c: 109: }
  4942  0039F2  D038               	goto	l127
  4943  0039F4                     l123:
  4944                           
  4945                           ;poweruptest.c: 110: else
  4946                           ;poweruptest.c: 111: {
  4947                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4948  0039F4  0E1B               	movlw	low STR_12
  4949  0039F6  0100               	movlb	0	; () banked
  4950  0039F8  6F72               	movwf	oled_putString@string& (0+255),b
  4951  0039FA  0E7E               	movlw	high STR_12
  4952  0039FC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4953  0039FE  0E00               	movlw	0
  4954  003A00  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4955  003A02  0E01               	movlw	1
  4956  003A04  6F75               	movwf	oled_putString@start_page& (0+255),b
  4957  003A06  EC27  F026         	call	_oled_putString	;wreg free
  4958                           
  4959                           ;poweruptest.c: 113: }
  4960                           ;poweruptest.c: 114: while(timeout--)
  4961  003A0A  D02C               	goto	l127
  4962  003A0C                     l128:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;poweruptest.c: 115: {
  4966                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4967  003A0C  B281               	btfsc	3969,1,c	;volatile
  4968  003A0E  D00E               	goto	l129
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;poweruptest.c: 117: {
  4972                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4973  003A10  0E01               	movlw	low STR_13
  4974  003A12  6F72               	movwf	oled_putString@string& (0+255),b
  4975  003A14  0E7E               	movlw	high STR_13
  4976  003A16  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4977  003A18  0E00               	movlw	0
  4978  003A1A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4979  003A1C  0E02               	movlw	2
  4980  003A1E  6F75               	movwf	oled_putString@start_page& (0+255),b
  4981  003A20  EC27  F026         	call	_oled_putString	;wreg free
  4982                           
  4983                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4984  003A24  0100               	movlb	0	; () banked
  4985  003A26  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  4986  003A28  0F08               	addlw	8
  4987  003A2A  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4988  003A2C                     l129:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;poweruptest.c: 120: }
  4992                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4993                           
  4994                           ; BSR set to: 0
  4995  003A2C  B081               	btfsc	3969,0,c	;volatile
  4996  003A2E  D00E               	goto	l130
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;poweruptest.c: 122: {
  5000                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  5001  003A30  0E0E               	movlw	low STR_14
  5002  003A32  6F72               	movwf	oled_putString@string& (0+255),b
  5003  003A34  0E7E               	movlw	high STR_14
  5004  003A36  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5005  003A38  0E00               	movlw	0
  5006  003A3A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5007  003A3C  0E03               	movlw	3
  5008  003A3E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5009  003A40  EC27  F026         	call	_oled_putString	;wreg free
  5010                           
  5011                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  5012  003A44  0100               	movlb	0	; () banked
  5013  003A46  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  5014  003A48  0F80               	addlw	128
  5015  003A4A  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  5016  003A4C                     l130:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;poweruptest.c: 125: }
  5020                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  5021                           
  5022                           ; BSR set to: 0
  5023  003A4C  0E88               	movlw	136
  5024  003A4E  197A               	xorwf	test_switch@buttonCheck& (0+255),w,b
  5025  003A50  B4D8               	btfsc	status,2,c
  5026  003A52  0012               	return	
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;poweruptest.c: 129: }
  5030                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  5031                           
  5032                           ; BSR set to: 0
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;poweruptest.c: 127: {
  5036                           ;poweruptest.c: 128: break;
  5037  003A54  0E9C               	movlw	156
  5038  003A56  0100               	movlb	0	; () banked
  5039  003A58  6F77               	movwf	??_test_switch& (0+255),b
  5040  003A5A  0ED7               	movlw	215
  5041  003A5C                     u11007:
  5042  003A5C  2EE8               	decfsz	wreg,f,c
  5043  003A5E  D7FE               	bra	u11007
  5044  003A60  2F77               	decfsz	??_test_switch& (0+255),f,b
  5045  003A62  D7FC               	bra	u11007
  5046  003A64                     l127:
  5047  003A64  0100               	movlb	0	; () banked
  5048  003A66  0778               	decf	test_switch@timeout& (0+255),f,b
  5049  003A68  A0D8               	btfss	status,0,c
  5050  003A6A  0779               	decf	(test_switch@timeout+1)& (0+255),f,b
  5051  003A6C  2978               	incf	test_switch@timeout& (0+255),w,b
  5052  003A6E  E1CE               	bnz	l128
  5053  003A70  2979               	incf	(test_switch@timeout+1)& (0+255),w,b
  5054  003A72  B4D8               	btfsc	status,2,c
  5055  003A74  0012               	return	
  5056  003A76  D7CA               	goto	l128
  5057  003A78                     __end_of_test_switch:
  5058                           	opt stack 0
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           intcon	equ	0xFF2
  5064                           postinc0	equ	0xFEE
  5065                           wreg	equ	0xFE8
  5066                           postdec1	equ	0xFE5
  5067                           fsr1l	equ	0xFE1
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _test_oled *****************
  5071 ;; Defined at:
  5072 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5086 ;;      Params:         0       0       0       0       0       0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5090 ;;Total ram usage:        0 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:   16
  5093 ;; This function calls:
  5094 ;;		_oled_clear
  5095 ;;		_oled_putString
  5096 ;; This function is called by:
  5097 ;;		_test_powerup
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text3
  5102  004566                     __ptext3:
  5103                           	opt stack 0
  5104  004566                     _test_oled:
  5105                           	opt stack 13
  5106                           
  5107                           ;poweruptest.c: 88: oled_clear();
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;incstack = 0
  5111  004566  EC8E  F02C         	call	_oled_clear	;wreg free
  5112                           
  5113                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5114  00456A  0E3D               	movlw	low STR_4
  5115  00456C  0100               	movlb	0	; () banked
  5116  00456E  6F72               	movwf	oled_putString@string& (0+255),b
  5117  004570  0E7F               	movlw	high STR_4
  5118  004572  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5119  004574  0E00               	movlw	0
  5120  004576  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5121  004578  0E00               	movlw	0
  5122  00457A  6F75               	movwf	oled_putString@start_page& (0+255),b
  5123  00457C  EC27  F026         	call	_oled_putString	;wreg free
  5124                           
  5125                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5126  004580  0E8A               	movlw	low (STR_164+11)
  5127  004582  0100               	movlb	0	; () banked
  5128  004584  6F72               	movwf	oled_putString@string& (0+255),b
  5129  004586  0E7D               	movlw	high (STR_164+11)
  5130  004588  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5131  00458A  0E00               	movlw	0
  5132  00458C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5133  00458E  0E06               	movlw	6
  5134  004590  6F75               	movwf	oled_putString@start_page& (0+255),b
  5135  004592  EC27  F026         	call	_oled_putString	;wreg free
  5136                           
  5137                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5138  004596  0E97               	movlw	low (STR_165+11)
  5139  004598  0100               	movlb	0	; () banked
  5140  00459A  6F72               	movwf	oled_putString@string& (0+255),b
  5141  00459C  0E7D               	movlw	high (STR_165+11)
  5142  00459E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5143  0045A0  0E00               	movlw	0
  5144  0045A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5145  0045A4  0E08               	movlw	8
  5146  0045A6  6F75               	movwf	oled_putString@start_page& (0+255),b
  5147  0045A8  EC27  F026         	call	_oled_putString	;wreg free
  5148                           
  5149                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5150  0045AC  0EC3               	movlw	low STR_7
  5151  0045AE  0100               	movlb	0	; () banked
  5152  0045B0  6F72               	movwf	oled_putString@string& (0+255),b
  5153  0045B2  0E7C               	movlw	high STR_7
  5154  0045B4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5155  0045B6  0E00               	movlw	0
  5156  0045B8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5157  0045BA  0E01               	movlw	1
  5158  0045BC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5159  0045BE  EC27  F026         	call	_oled_putString	;wreg free
  5160                           
  5161                           ;poweruptest.c: 94: oled_putString("Mar 30 2018",0,2);
  5162  0045C2  0E70               	movlw	low STR_8
  5163  0045C4  0100               	movlb	0	; () banked
  5164  0045C6  6F72               	movwf	oled_putString@string& (0+255),b
  5165  0045C8  0E7E               	movlw	high STR_8
  5166  0045CA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5167  0045CC  0E00               	movlw	0
  5168  0045CE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5169  0045D0  0E02               	movlw	2
  5170  0045D2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5171  0045D4  EC27  F026         	call	_oled_putString	;wreg free
  5172                           
  5173                           ;poweruptest.c: 95: oled_putString("17:17:38",0,3);
  5174  0045D8  0E46               	movlw	low STR_9
  5175  0045DA  0100               	movlb	0	; () banked
  5176  0045DC  6F72               	movwf	oled_putString@string& (0+255),b
  5177  0045DE  0E7F               	movlw	high STR_9
  5178  0045E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5179  0045E2  0E00               	movlw	0
  5180  0045E4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5181  0045E6  0E03               	movlw	3
  5182  0045E8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5183  0045EA  EC27  F026         	call	_oled_putString	;wreg free
  5184  0045EE  0012               	return		;funcret
  5185  0045F0                     __end_of_test_oled:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           intcon	equ	0xFF2
  5192                           postinc0	equ	0xFEE
  5193                           wreg	equ	0xFE8
  5194                           postdec1	equ	0xFE5
  5195                           fsr1l	equ	0xFE1
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function _test_leds *****************
  5199 ;; Defined at:
  5200 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   15
  5221 ;; This function calls:
  5222 ;;		_delayms
  5223 ;;		_oled_putString
  5224 ;; This function is called by:
  5225 ;;		_test_powerup
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text4
  5230  004EBE                     __ptext4:
  5231                           	opt stack 0
  5232  004EBE                     _test_leds:
  5233                           	opt stack 14
  5234                           
  5235                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5236                           
  5237                           ;incstack = 0
  5238  004EBE  0E06               	movlw	low STR_16
  5239  004EC0  0100               	movlb	0	; () banked
  5240  004EC2  6F72               	movwf	oled_putString@string& (0+255),b
  5241  004EC4  0E7F               	movlw	high STR_16
  5242  004EC6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5243  004EC8  0E00               	movlw	0
  5244  004ECA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5245  004ECC  0E01               	movlw	1
  5246  004ECE  6F75               	movwf	oled_putString@start_page& (0+255),b
  5247  004ED0  EC27  F026         	call	_oled_putString	;wreg free
  5248                           
  5249                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5250  004ED4  8C89               	bsf	3977,6,c	;volatile
  5251                           
  5252                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5253  004ED6  8E89               	bsf	3977,7,c	;volatile
  5254                           
  5255                           ;poweruptest.c: 153: delayms(500);
  5256  004ED8  0E01               	movlw	1
  5257  004EDA  0100               	movlb	0	; () banked
  5258  004EDC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5259  004EDE  0EF4               	movlw	244
  5260  004EE0  6F60               	movwf	delayms@t& (0+255),b
  5261  004EE2  EC7A  F02A         	call	_delayms	;wreg free
  5262                           
  5263                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5264  004EE6  9C89               	bcf	3977,6,c	;volatile
  5265                           
  5266                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5267  004EE8  9E89               	bcf	3977,7,c	;volatile
  5268                           
  5269                           ;poweruptest.c: 156: delayms(500);
  5270  004EEA  0E01               	movlw	1
  5271  004EEC  0100               	movlb	0	; () banked
  5272  004EEE  6F61               	movwf	(delayms@t+1)& (0+255),b
  5273  004EF0  0EF4               	movlw	244
  5274  004EF2  6F60               	movwf	delayms@t& (0+255),b
  5275  004EF4  EC7A  F02A         	call	_delayms	;wreg free
  5276                           
  5277                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5278  004EF8  8C89               	bsf	3977,6,c	;volatile
  5279                           
  5280                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5281  004EFA  8E89               	bsf	3977,7,c	;volatile
  5282                           
  5283                           ;poweruptest.c: 159: delayms(500);
  5284  004EFC  0E01               	movlw	1
  5285  004EFE  0100               	movlb	0	; () banked
  5286  004F00  6F61               	movwf	(delayms@t+1)& (0+255),b
  5287  004F02  0EF4               	movlw	244
  5288  004F04  6F60               	movwf	delayms@t& (0+255),b
  5289  004F06  EC7A  F02A         	call	_delayms	;wreg free
  5290                           
  5291                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5292  004F0A  9C89               	bcf	3977,6,c	;volatile
  5293                           
  5294                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5295  004F0C  9E89               	bcf	3977,7,c	;volatile
  5296                           
  5297                           ;poweruptest.c: 162: delayms(500);
  5298  004F0E  0E01               	movlw	1
  5299  004F10  0100               	movlb	0	; () banked
  5300  004F12  6F61               	movwf	(delayms@t+1)& (0+255),b
  5301  004F14  0EF4               	movlw	244
  5302  004F16  6F60               	movwf	delayms@t& (0+255),b
  5303  004F18  EC7A  F02A         	call	_delayms	;wreg free
  5304  004F1C  0012               	return		;funcret
  5305  004F1E                     __end_of_test_leds:
  5306                           	opt stack 0
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           intcon	equ	0xFF2
  5312                           postinc0	equ	0xFEE
  5313                           wreg	equ	0xFE8
  5314                           postdec1	equ	0xFE5
  5315                           fsr1l	equ	0xFE1
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _test_comms *****************
  5319 ;; Defined at:
  5320 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5334 ;;      Params:         0       0       0       0       0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5338 ;;Total ram usage:        0 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:   15
  5341 ;; This function calls:
  5342 ;;		_delayms
  5343 ;;		_moteApp_toggleLeds
  5344 ;;		_oled_putString
  5345 ;; This function is called by:
  5346 ;;		_test_powerup
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text5
  5351  004D24                     __ptext5:
  5352                           	opt stack 0
  5353  004D24                     _test_comms:
  5354                           	opt stack 14
  5355                           
  5356                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5357                           
  5358                           ;incstack = 0
  5359  004D24  0EBF               	movlw	low STR_15
  5360  004D26  0100               	movlb	0	; () banked
  5361  004D28  6F72               	movwf	oled_putString@string& (0+255),b
  5362  004D2A  0E7E               	movlw	high STR_15
  5363  004D2C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5364  004D2E  0E00               	movlw	0
  5365  004D30  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5366  004D32  0E00               	movlw	0
  5367  004D34  6F75               	movwf	oled_putString@start_page& (0+255),b
  5368  004D36  EC27  F026         	call	_oled_putString	;wreg free
  5369                           
  5370                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5371  004D3A  0E01               	movlw	1
  5372  004D3C  ECF5  F018         	call	_moteApp_toggleLeds
  5373                           
  5374                           ;poweruptest.c: 138: delayms(500);
  5375  004D40  0E01               	movlw	1
  5376  004D42  0100               	movlb	0	; () banked
  5377  004D44  6F61               	movwf	(delayms@t+1)& (0+255),b
  5378  004D46  0EF4               	movlw	244
  5379  004D48  6F60               	movwf	delayms@t& (0+255),b
  5380  004D4A  EC7A  F02A         	call	_delayms	;wreg free
  5381                           
  5382                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5383  004D4E  0E00               	movlw	0
  5384  004D50  ECF5  F018         	call	_moteApp_toggleLeds
  5385                           
  5386                           ;poweruptest.c: 140: delayms(500);
  5387  004D54  0E01               	movlw	1
  5388  004D56  0100               	movlb	0	; () banked
  5389  004D58  6F61               	movwf	(delayms@t+1)& (0+255),b
  5390  004D5A  0EF4               	movlw	244
  5391  004D5C  6F60               	movwf	delayms@t& (0+255),b
  5392  004D5E  EC7A  F02A         	call	_delayms	;wreg free
  5393                           
  5394                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5395  004D62  0E01               	movlw	1
  5396  004D64  ECF5  F018         	call	_moteApp_toggleLeds
  5397                           
  5398                           ;poweruptest.c: 142: delayms(500);
  5399  004D68  0E01               	movlw	1
  5400  004D6A  0100               	movlb	0	; () banked
  5401  004D6C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5402  004D6E  0EF4               	movlw	244
  5403  004D70  6F60               	movwf	delayms@t& (0+255),b
  5404  004D72  EC7A  F02A         	call	_delayms	;wreg free
  5405                           
  5406                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5407  004D76  0E00               	movlw	0
  5408  004D78  ECF5  F018         	call	_moteApp_toggleLeds
  5409                           
  5410                           ;poweruptest.c: 144: delayms(500);
  5411  004D7C  0E01               	movlw	1
  5412  004D7E  0100               	movlb	0	; () banked
  5413  004D80  6F61               	movwf	(delayms@t+1)& (0+255),b
  5414  004D82  0EF4               	movlw	244
  5415  004D84  6F60               	movwf	delayms@t& (0+255),b
  5416  004D86  EC7A  F02A         	call	_delayms	;wreg free
  5417  004D8A  0012               	return		;funcret
  5418  004D8C                     __end_of_test_comms:
  5419                           	opt stack 0
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           intcon	equ	0xFF2
  5425                           postinc0	equ	0xFEE
  5426                           wreg	equ	0xFE8
  5427                           postdec1	equ	0xFE5
  5428                           fsr1l	equ	0xFE1
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _moteApp_toggleLeds *****************
  5432 ;; Defined at:
  5433 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  state           1    wreg     unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  state           1    4[BANK0 ] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0
  5448 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5449 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5450 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5451 ;;Total ram usage:        2 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:   14
  5454 ;; This function calls:
  5455 ;;		_sendCommand
  5456 ;; This function is called by:
  5457 ;;		_test_comms
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text6
  5462  0031EA                     __ptext6:
  5463                           	opt stack 0
  5464  0031EA                     _moteApp_toggleLeds:
  5465                           	opt stack 14
  5466                           
  5467                           ;incstack = 0
  5468                           ;moteApp_toggleLeds@state stored from wreg
  5469  0031EA  0100               	movlb	0	; () banked
  5470  0031EC  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5471                           
  5472                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5473  0031EE  0EFA               	movlw	250
  5474  0031F0  0100               	movlb	0	; () banked
  5475  0031F2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5476  0031F4  0E58               	movlw	88
  5477  0031F6                     u11017:
  5478  0031F6  2EE8               	decfsz	wreg,f,c
  5479  0031F8  D7FE               	bra	u11017
  5480  0031FA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5481  0031FC  D7FC               	bra	u11017
  5482  0031FE  F000               	nop	
  5483                           
  5484                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5485  003200  0EFA               	movlw	250
  5486  003202  0100               	movlb	0	; () banked
  5487  003204  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5488  003206  0E58               	movlw	88
  5489  003208                     u11027:
  5490  003208  2EE8               	decfsz	wreg,f,c
  5491  00320A  D7FE               	bra	u11027
  5492  00320C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5493  00320E  D7FC               	bra	u11027
  5494  003210  F000               	nop	
  5495                           
  5496                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5497  003212  0EFA               	movlw	250
  5498  003214  0100               	movlb	0	; () banked
  5499  003216  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5500  003218  0E58               	movlw	88
  5501  00321A                     u11037:
  5502  00321A  2EE8               	decfsz	wreg,f,c
  5503  00321C  D7FE               	bra	u11037
  5504  00321E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5505  003220  D7FC               	bra	u11037
  5506  003222  F000               	nop	
  5507                           
  5508                           ;MOTEapp.c: 1269: if (state)
  5509  003224  0100               	movlb	0	; () banked
  5510  003226  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5511  003228  B4D8               	btfsc	status,2,c
  5512  00322A  D029               	goto	l679
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;MOTEapp.c: 1270: {
  5516                           ;MOTEapp.c: 1271: sendCommand("sys set pindig GPIO10 1\r\n");
  5517  00322C  0E22               	movlw	low STR_175
  5518  00322E  6F61               	movwf	sendCommand@string& (0+255),b
  5519  003230  0E7A               	movlw	high STR_175
  5520  003232  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5521  003234  ECDD  F02A         	call	_sendCommand	;wreg free
  5522                           
  5523                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5524  003238  0EFA               	movlw	250
  5525  00323A  0100               	movlb	0	; () banked
  5526  00323C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5527  00323E  0E58               	movlw	88
  5528  003240                     u11047:
  5529  003240  2EE8               	decfsz	wreg,f,c
  5530  003242  D7FE               	bra	u11047
  5531  003244  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5532  003246  D7FC               	bra	u11047
  5533  003248  F000               	nop	
  5534                           
  5535                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5536  00324A  0EFA               	movlw	250
  5537  00324C  0100               	movlb	0	; () banked
  5538  00324E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5539  003250  0E58               	movlw	88
  5540  003252                     u11057:
  5541  003252  2EE8               	decfsz	wreg,f,c
  5542  003254  D7FE               	bra	u11057
  5543  003256  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5544  003258  D7FC               	bra	u11057
  5545  00325A  F000               	nop	
  5546                           
  5547                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5548  00325C  0EFA               	movlw	250
  5549  00325E  0100               	movlb	0	; () banked
  5550  003260  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5551  003262  0E58               	movlw	88
  5552  003264                     u11067:
  5553  003264  2EE8               	decfsz	wreg,f,c
  5554  003266  D7FE               	bra	u11067
  5555  003268  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5556  00326A  D7FC               	bra	u11067
  5557  00326C  F000               	nop	
  5558                           
  5559                           ;MOTEapp.c: 1275: sendCommand("sys set pindig GPIO11 1\r\n");
  5560  00326E  0E3C               	movlw	low STR_176
  5561  003270  0100               	movlb	0	; () banked
  5562  003272  6F61               	movwf	sendCommand@string& (0+255),b
  5563  003274  0E7A               	movlw	high STR_176
  5564  003276  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5565  003278  ECDD  F02A         	call	_sendCommand	;wreg free
  5566                           
  5567                           ;MOTEapp.c: 1276: }
  5568  00327C  0012               	return	
  5569  00327E                     l679:
  5570                           
  5571                           ;MOTEapp.c: 1277: else
  5572                           ;MOTEapp.c: 1278: {
  5573                           ;MOTEapp.c: 1279: sendCommand("sys set pindig GPIO10 0\r\n");
  5574  00327E  0EEE               	movlw	low STR_177
  5575  003280  0100               	movlb	0	; () banked
  5576  003282  6F61               	movwf	sendCommand@string& (0+255),b
  5577  003284  0E79               	movlw	high STR_177
  5578  003286  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5579  003288  ECDD  F02A         	call	_sendCommand	;wreg free
  5580                           
  5581                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5582  00328C  0EFA               	movlw	250
  5583  00328E  0100               	movlb	0	; () banked
  5584  003290  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5585  003292  0E58               	movlw	88
  5586  003294                     u11077:
  5587  003294  2EE8               	decfsz	wreg,f,c
  5588  003296  D7FE               	bra	u11077
  5589  003298  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5590  00329A  D7FC               	bra	u11077
  5591  00329C  F000               	nop	
  5592                           
  5593                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5594  00329E  0EFA               	movlw	250
  5595  0032A0  0100               	movlb	0	; () banked
  5596  0032A2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5597  0032A4  0E58               	movlw	88
  5598  0032A6                     u11087:
  5599  0032A6  2EE8               	decfsz	wreg,f,c
  5600  0032A8  D7FE               	bra	u11087
  5601  0032AA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5602  0032AC  D7FC               	bra	u11087
  5603  0032AE  F000               	nop	
  5604                           
  5605                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5606  0032B0  0EFA               	movlw	250
  5607  0032B2  0100               	movlb	0	; () banked
  5608  0032B4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5609  0032B6  0E58               	movlw	88
  5610  0032B8                     u11097:
  5611  0032B8  2EE8               	decfsz	wreg,f,c
  5612  0032BA  D7FE               	bra	u11097
  5613  0032BC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5614  0032BE  D7FC               	bra	u11097
  5615  0032C0  F000               	nop	
  5616                           
  5617                           ;MOTEapp.c: 1283: sendCommand("sys set pindig GPIO11 0\r\n");
  5618  0032C2  0E08               	movlw	low STR_178
  5619  0032C4  0100               	movlb	0	; () banked
  5620  0032C6  6F61               	movwf	sendCommand@string& (0+255),b
  5621  0032C8  0E7A               	movlw	high STR_178
  5622  0032CA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5623  0032CC  ECDD  F02A         	call	_sendCommand	;wreg free
  5624  0032D0  0012               	return	
  5625  0032D2                     __end_of_moteApp_toggleLeds:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           postdec1	equ	0xFE5
  5635                           fsr1l	equ	0xFE1
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _delayms *****************
  5639 ;; Defined at:
  5640 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  t               2    0[BANK0 ] unsigned int 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  i               2    3[BANK0 ] unsigned int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5654 ;;      Params:         0       2       0       0       0       0       0       0       0
  5655 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5656 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5657 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5658 ;;Total ram usage:        5 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:   11
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_test_comms
  5665 ;;		_test_leds
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text7
  5670  0054F4                     __ptext7:
  5671                           	opt stack 0
  5672  0054F4                     _delayms:
  5673                           	opt stack 17
  5674                           
  5675                           ;poweruptest.c: 56: uint16_t i;
  5676                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5677                           
  5678                           ;incstack = 0
  5679  0054F4  0E00               	movlw	0
  5680  0054F6  0100               	movlb	0	; () banked
  5681  0054F8  6F64               	movwf	(delayms@i+1)& (0+255),b
  5682  0054FA  0E00               	movlw	0
  5683  0054FC  6F63               	movwf	delayms@i& (0+255),b
  5684  0054FE  D00C               	goto	l111
  5685  005500                     
  5686                           ; BSR set to: 0
  5687                           ;poweruptest.c: 58: {
  5688                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5689                           
  5690                           ; BSR set to: 0
  5691  005500  0E10               	movlw	16
  5692  005502  0100               	movlb	0	; () banked
  5693  005504  6F62               	movwf	??_delayms& (0+255),b
  5694  005506  0E94               	movlw	148
  5695  005508                     u11107:
  5696  005508  2EE8               	decfsz	wreg,f,c
  5697  00550A  D7FE               	bra	u11107
  5698  00550C  2F62               	decfsz	??_delayms& (0+255),f,b
  5699  00550E  D7FC               	bra	u11107
  5700  005510  F000               	nop	
  5701  005512  0100               	movlb	0	; () banked
  5702  005514  4B63               	infsnz	delayms@i& (0+255),f,b
  5703  005516  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5704  005518                     l111:
  5705                           
  5706                           ; BSR set to: 0
  5707  005518  5160               	movf	delayms@t& (0+255),w,b
  5708  00551A  5D63               	subwf	delayms@i& (0+255),w,b
  5709  00551C  5161               	movf	(delayms@t+1)& (0+255),w,b
  5710  00551E  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5711  005520  B0D8               	btfsc	status,0,c
  5712  005522  0012               	return	
  5713  005524  D7ED               	goto	l112
  5714  005526                     __end_of_delayms:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           intcon	equ	0xFF2
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           postdec1	equ	0xFE5
  5724                           fsr1l	equ	0xFE1
  5725                           status	equ	0xFD8
  5726                           
  5727 ;; *************** function _moteApp_testSensors *****************
  5728 ;; Defined at:
  5729 ;;		line 1368 in file "../Includes/Board/MOTEapp.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  dummyValue      2    0        unsigned int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5746 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5747 ;;Total ram usage:        1 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   16
  5750 ;; This function calls:
  5751 ;;		_ADC_TempConversion
  5752 ;;		_moteApp_convertSensorValue
  5753 ;;		_moteApp_getLightValue
  5754 ;;		_moteApp_getTempValue
  5755 ;;		_moteApp_setSensorsInput
  5756 ;;		_oled_clear
  5757 ;;		_oled_putChar
  5758 ;;		_oled_putString
  5759 ;;		_oled_putint8
  5760 ;; This function is called by:
  5761 ;;		_test_powerup
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text8
  5766  003A78                     __ptext8:
  5767                           	opt stack 0
  5768  003A78                     _moteApp_testSensors:
  5769                           	opt stack 13
  5770                           
  5771                           ;MOTEapp.c: 1371: moteApp_setSensorsInput();
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;incstack = 0
  5775  003A78  EC06  F025         	call	_moteApp_setSensorsInput	;wreg free
  5776                           
  5777                           ;MOTEapp.c: 1373: uint16_t dummyValue;
  5778                           ;MOTEapp.c: 1374: oled_clear();
  5779  003A7C  EC8E  F02C         	call	_oled_clear	;wreg free
  5780                           
  5781                           ;MOTEapp.c: 1375: oled_putString("ADC Test",0,0);
  5782  003A80  0E58               	movlw	low STR_17
  5783  003A82  0100               	movlb	0	; () banked
  5784  003A84  6F72               	movwf	oled_putString@string& (0+255),b
  5785  003A86  0E7F               	movlw	high STR_17
  5786  003A88  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5787  003A8A  0E00               	movlw	0
  5788  003A8C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5789  003A8E  0E00               	movlw	0
  5790  003A90  6F75               	movwf	oled_putString@start_page& (0+255),b
  5791  003A92  EC27  F026         	call	_oled_putString	;wreg free
  5792                           
  5793                           ;MOTEapp.c: 1376: oled_putString("Light =",0,1);
  5794  003A96  0E71               	movlw	low STR_19
  5795  003A98  0100               	movlb	0	; () banked
  5796  003A9A  6F72               	movwf	oled_putString@string& (0+255),b
  5797  003A9C  0E7F               	movlw	high STR_19
  5798  003A9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5799  003AA0  0E00               	movlw	0
  5800  003AA2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5801  003AA4  0E01               	movlw	1
  5802  003AA6  6F75               	movwf	oled_putString@start_page& (0+255),b
  5803  003AA8  EC27  F026         	call	_oled_putString	;wreg free
  5804                           
  5805                           ;MOTEapp.c: 1377: oled_putString("Temp  =",0,2);
  5806  003AAC  0E69               	movlw	low STR_18
  5807  003AAE  0100               	movlb	0	; () banked
  5808  003AB0  6F72               	movwf	oled_putString@string& (0+255),b
  5809  003AB2  0E7F               	movlw	high STR_18
  5810  003AB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5811  003AB6  0E00               	movlw	0
  5812  003AB8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5813  003ABA  0E02               	movlw	2
  5814  003ABC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5815  003ABE  EC27  F026         	call	_oled_putString	;wreg free
  5816                           
  5817                           ;MOTEapp.c: 1378: oled_putChar('C',14,2);
  5818  003AC2  0E0E               	movlw	14
  5819  003AC4  0100               	movlb	0	; () banked
  5820  003AC6  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5821  003AC8  0E02               	movlw	2
  5822  003ACA  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5823  003ACC  0E43               	movlw	67
  5824  003ACE  EC05  F024         	call	_oled_putChar
  5825                           
  5826                           ;MOTEapp.c: 1379: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5827  003AD2  EC71  F029         	call	_moteApp_getTempValue	;wreg free
  5828  003AD6  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5829  003ADA  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5830  003ADE  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  5831  003AE2  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5832  003AE6  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5833                           
  5834                           ;MOTEapp.c: 1380: temperature = ADC_TempConversion(temperature);
  5835  003AEA  0100               	movlb	0	; () banked
  5836  003AEC  51DA               	movf	_temperature& (0+255),w,b
  5837  003AEE  EC80  F018         	call	_ADC_TempConversion
  5838  003AF2  0100               	movlb	0	; () banked
  5839  003AF4  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5840  003AF6  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5841  003AF8  6FDA               	movwf	_temperature& (0+255),b
  5842  003AFA  6BDB               	clrf	(_temperature+1)& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;MOTEapp.c: 1381: oled_putint8(temperature, 10, 2);
  5846  003AFC  0E0A               	movlw	10
  5847  003AFE  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5848  003B00  0E02               	movlw	2
  5849  003B02  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5850  003B04  51DA               	movf	_temperature& (0+255),w,b
  5851  003B06  EC30  F021         	call	_oled_putint8
  5852                           
  5853                           ;MOTEapp.c: 1382: __nop();
  5854  003B0A  F000               	nop	
  5855                           
  5856                           ;MOTEapp.c: 1383: oled_putString("    ", 10, 1);
  5857  003B0C  0EC7               	movlw	low (STR_40+12)
  5858  003B0E  0100               	movlb	0	; () banked
  5859  003B10  6F72               	movwf	oled_putString@string& (0+255),b
  5860  003B12  0E7A               	movlw	high (STR_40+12)
  5861  003B14  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5862  003B16  0E0A               	movlw	10
  5863  003B18  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5864  003B1A  0E01               	movlw	1
  5865  003B1C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5866  003B1E  EC27  F026         	call	_oled_putString	;wreg free
  5867                           
  5868                           ;MOTEapp.c: 1384: oled_putString(moteApp_getLightValue(), 10, 1);
  5869  003B22  EC9C  F028         	call	_moteApp_getLightValue	;wreg free
  5870  003B26  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  5871  003B2A  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5872  003B2E  0E0A               	movlw	10
  5873  003B30  0100               	movlb	0	; () banked
  5874  003B32  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5875  003B34  0E01               	movlw	1
  5876  003B36  6F75               	movwf	oled_putString@start_page& (0+255),b
  5877  003B38  EC27  F026         	call	_oled_putString	;wreg free
  5878  003B3C  0012               	return		;funcret
  5879  003B3E                     __end_of_moteApp_testSensors:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           intcon	equ	0xFF2
  5886                           postinc0	equ	0xFEE
  5887                           wreg	equ	0xFE8
  5888                           postdec1	equ	0xFE5
  5889                           fsr1l	equ	0xFE1
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _moteHandler *****************
  5893 ;; Defined at:
  5894 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  readMessage     1   91[BANK0 ] unsigned char 
  5899 ;;  buttonPress     1   90[BANK0 ] enum E5836
  5900 ;;  s2Button        1   89[BANK0 ] unsigned char 
  5901 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  5902 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      enum E6869
  5905 ;; Registers used:
  5906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0
  5913 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5914 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5915 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5916 ;;Total ram usage:        6 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:   19
  5919 ;; This function calls:
  5920 ;;		_ADC_TempConversion
  5921 ;;		_MOTEapp_TimerBasedTask
  5922 ;;		_MOTEapp_getModuleResponse
  5923 ;;		_TMRapp_ClearBitFlags
  5924 ;;		_TMRapp_Handler
  5925 ;;		_USBapp_exitCDC
  5926 ;;		_USBapp_exitCDCState
  5927 ;;		_moteApp_convertSensorValue
  5928 ;;		_moteApp_getLightValue
  5929 ;;		_moteApp_getTempValue
  5930 ;;		_moteJoiningProcess
  5931 ;;		_moteRunningProcess
  5932 ;;		_oled_clear
  5933 ;;		_oled_putString
  5934 ;;		_oled_putint8
  5935 ;;		_service_pushbutton
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text9
  5942  0020DE                     __ptext9:
  5943                           	opt stack 0
  5944  0020DE                     _moteHandler:
  5945                           	opt stack 11
  5946                           
  5947                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  5948                           
  5949                           ;incstack = 0
  5950  0020DE  0E00               	movlw	0
  5951  0020E0  0100               	movlb	0	; () banked
  5952  0020E2  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  5953                           
  5954                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  5955  0020E4  0E00               	movlw	0
  5956  0020E6  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5957                           
  5958                           ;MOTEapp.c: 192: bool s2Button = 0;
  5959  0020E8  0E00               	movlw	0
  5960  0020EA  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  5961                           
  5962                           ;MOTEapp.c: 193: bool readMessage = 0;
  5963  0020EC  0E00               	movlw	0
  5964  0020EE  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  5965                           
  5966                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  5967  0020F0  0E03               	movlw	3
  5968  0020F2  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  5972  0020F4  A080               	btfss	3968,0,c	;volatile
  5973  0020F6  D009               	goto	l363
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;MOTEapp.c: 198: {
  5977                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  5978  0020F8  ECAB  F02D         	call	_USBapp_exitCDC	;wreg free
  5979  0020FC  0900               	iorlw	0
  5980  0020FE  A4D8               	btfss	status,2,c
  5981  002100  D007               	goto	l365
  5982                           
  5983                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  5984  002102  0E04               	movlw	4
  5985  002104  0100               	movlb	0	; () banked
  5986  002106  6FFF               	movwf	_moteState& (0+255),b
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;MOTEapp.c: 201: } else {
  5990  002108  D003               	goto	l365
  5991  00210A                     l363:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  5995                           
  5996                           ; BSR set to: 0
  5997  00210A  0E00               	movlw	0
  5998  00210C  EC84  F02D         	call	_USBapp_exitCDCState
  5999  002110                     l365:
  6000                           
  6001                           ;MOTEapp.c: 203: }
  6002                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  6003  002110  0100               	movlb	0	; () banked
  6004  002112  A1F8               	btfss	_appTimer& (0+255),0,b
  6005  002114  D008               	goto	l366
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;MOTEapp.c: 207: {
  6009                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  6010  002116  EC9C  F02D         	call	_TMRapp_ClearBitFlags	;wreg free
  6011                           
  6012                           ;MOTEapp.c: 211: TMRapp_Handler();
  6013  00211A  ECFE  F016         	call	_TMRapp_Handler	;wreg free
  6014                           
  6015                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  6016  00211E  0100               	movlb	0	; () banked
  6017  002120  51F8               	movf	_appTimer& (0+255),w,b
  6018  002122  EC33  F02C         	call	_MOTEapp_TimerBasedTask
  6019  002126                     l366:
  6020                           
  6021                           ;MOTEapp.c: 213: }
  6022                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  6023  002126  ECF0  F025         	call	_service_pushbutton	;wreg free
  6024  00212A  0100               	movlb	0	; () banked
  6025  00212C  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  6029  00212E  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  6030  002130  A4D8               	btfss	status,2,c
  6031  002132  D005               	goto	l367
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;MOTEapp.c: 218: {
  6035                           ;MOTEapp.c: 219: secTicker = 0;
  6036  002134  0E00               	movlw	0
  6037  002136  6FF0               	movwf	_secTicker& (0+255),b
  6038                           
  6039                           ;MOTEapp.c: 220: gotoNextState = 1;
  6040  002138  0E01               	movlw	1
  6041  00213A  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6042                           
  6043                           ;MOTEapp.c: 221: }
  6044  00213C  D008               	goto	l369
  6045  00213E                     l367:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  6049                           
  6050                           ; BSR set to: 0
  6051  00213E  0E02               	movlw	2
  6052  002140  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6053  002142  A4D8               	btfss	status,2,c
  6054  002144  D004               	goto	l369
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;MOTEapp.c: 223: {
  6058                           ;MOTEapp.c: 224: secTicker = 0;
  6059  002146  0E00               	movlw	0
  6060  002148  6FF0               	movwf	_secTicker& (0+255),b
  6061                           
  6062                           ;MOTEapp.c: 225: s2Button = 1;
  6063  00214A  0E01               	movlw	1
  6064  00214C  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6065  00214E                     l369:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;MOTEapp.c: 226: }
  6069                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  6070                           
  6071                           ; BSR set to: 0
  6072                           
  6073                           ; BSR set to: 0
  6074  00214E  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  6075  002152  0900               	iorlw	0
  6076  002154  B4D8               	btfsc	status,2,c
  6077  002156  D002               	goto	l370
  6078                           
  6079                           ;MOTEapp.c: 230: readMessage = 1;
  6080  002158  0E01               	movlw	1
  6081  00215A  D001               	goto	L1
  6082  00215C                     l370:
  6083                           
  6084                           ;MOTEapp.c: 231: else
  6085                           ;MOTEapp.c: 232: readMessage = 0;
  6086                           
  6087                           ; BSR set to: 0
  6088  00215C  0E00               	movlw	0
  6089  00215E                     L1:
  6090  00215E  0100               	movlb	0	; () banked
  6091  002160  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  6095                           
  6096                           ; BSR set to: 0
  6097  002162  0E02               	movlw	2
  6098  002164  19F3               	xorwf	_runningState& (0+255),w,b
  6099  002166  A4D8               	btfss	status,2,c
  6100  002168  D041               	goto	l373
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;MOTEapp.c: 236: {
  6104                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  6105  00216A  0101               	movlb	1	; () banked
  6106  00216C  5159               	movf	(_m10SecTicker+1)& (0+255),w,b
  6107  00216E  E104               	bnz	u10180
  6108  002170  0E64               	movlw	100
  6109  002172  5D58               	subwf	_m10SecTicker& (0+255),w,b
  6110  002174  A0D8               	btfss	status,0,c
  6111  002176  D03A               	goto	l373
  6112  002178                     u10180:
  6113                           
  6114                           ; BSR set to: 1
  6115                           ;MOTEapp.c: 239: {
  6116                           ;MOTEapp.c: 240: __nop();
  6117  002178  F000               	nop	
  6118                           
  6119                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  6120  00217A  0EC7               	movlw	low (STR_40+12)
  6121  00217C  0100               	movlb	0	; () banked
  6122  00217E  6F72               	movwf	oled_putString@string& (0+255),b
  6123  002180  0E7A               	movlw	high (STR_40+12)
  6124  002182  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6125  002184  0E06               	movlw	6
  6126  002186  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6127  002188  0E01               	movlw	1
  6128  00218A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6129  00218C  EC27  F026         	call	_oled_putString	;wreg free
  6130                           
  6131                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  6132  002190  EC9C  F028         	call	_moteApp_getLightValue	;wreg free
  6133  002194  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6134  002198  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6135  00219C  0E06               	movlw	6
  6136  00219E  0100               	movlb	0	; () banked
  6137  0021A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6138  0021A2  0E01               	movlw	1
  6139  0021A4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6140  0021A6  EC27  F026         	call	_oled_putString	;wreg free
  6141                           
  6142                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6143  0021AA  EC71  F029         	call	_moteApp_getTempValue	;wreg free
  6144  0021AE  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6145  0021B2  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6146  0021B6  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  6147  0021BA  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6148  0021BE  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6149                           
  6150                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  6151  0021C2  0100               	movlb	0	; () banked
  6152  0021C4  51DA               	movf	_temperature& (0+255),w,b
  6153  0021C6  EC80  F018         	call	_ADC_TempConversion
  6154  0021CA  0100               	movlb	0	; () banked
  6155  0021CC  6FB6               	movwf	??_moteHandler& (0+255),b
  6156  0021CE  51B6               	movf	??_moteHandler& (0+255),w,b
  6157  0021D0  6FDA               	movwf	_temperature& (0+255),b
  6158  0021D2  6BDB               	clrf	(_temperature+1)& (0+255),b
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  6162  0021D4  0E06               	movlw	6
  6163  0021D6  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6164  0021D8  0E02               	movlw	2
  6165  0021DA  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6166  0021DC  51DA               	movf	_temperature& (0+255),w,b
  6167  0021DE  EC30  F021         	call	_oled_putint8
  6168                           
  6169                           ;MOTEapp.c: 246: m10SecTicker = 0;
  6170  0021E2  0E00               	movlw	0
  6171  0021E4  0101               	movlb	1	; () banked
  6172  0021E6  6F59               	movwf	(_m10SecTicker+1)& (0+255),b
  6173  0021E8  0E00               	movlw	0
  6174  0021EA  6F58               	movwf	_m10SecTicker& (0+255),b
  6175  0021EC                     l373:
  6176                           
  6177                           ;MOTEapp.c: 247: }
  6178                           ;MOTEapp.c: 248: }
  6179                           ;MOTEapp.c: 250: if(secTicker)
  6180                           
  6181                           ; BSR set to: 1
  6182                           
  6183                           ; BSR set to: 1
  6184  0021EC  0100               	movlb	0	; () banked
  6185  0021EE  51F0               	movf	_secTicker& (0+255),w,b
  6186  0021F0  B4D8               	btfsc	status,2,c
  6187  0021F2  D071               	goto	l376
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;MOTEapp.c: 251: {
  6191                           ;MOTEapp.c: 252: if ((secTicker >= 10) && (menuTimeout))
  6192  0021F4  0E09               	movlw	9
  6193  0021F6  65F0               	cpfsgt	_secTicker& (0+255),b
  6194  0021F8  D06E               	goto	l376
  6195                           
  6196                           ; BSR set to: 0
  6197  0021FA  51FB               	movf	_menuTimeout& (0+255),w,b
  6198  0021FC  B4D8               	btfsc	status,2,c
  6199  0021FE  D06B               	goto	l376
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;MOTEapp.c: 253: {
  6203                           ;MOTEapp.c: 254: gotoSleep = 1;
  6204  002200  0E01               	movlw	1
  6205  002202  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6206                           
  6207                           ;MOTEapp.c: 255: secTicker = 0;
  6208  002204  0E00               	movlw	0
  6209  002206  6FF0               	movwf	_secTicker& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;MOTEapp.c: 256: }
  6213                           ;MOTEapp.c: 257: }
  6214                           ;MOTEapp.c: 259: switch(moteState)
  6215                           
  6216                           ; BSR set to: 0
  6217  002208  D066               	goto	l376
  6218  00220A                     
  6219                           ; BSR set to: 0
  6220                           ;MOTEapp.c: 262: while(1);
  6221  00220A  D7FF               	goto	l377
  6222  00220C                     
  6223                           ;MOTEapp.c: 265: oled_clear();
  6224  00220C  EC8E  F02C         	call	_oled_clear	;wreg free
  6225                           
  6226                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6227  002210  0EDE               	movlw	low STR_24
  6228  002212  0100               	movlb	0	; () banked
  6229  002214  6F72               	movwf	oled_putString@string& (0+255),b
  6230  002216  0E7E               	movlw	high STR_24
  6231  002218  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6232  00221A  0E01               	movlw	1
  6233  00221C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6234  00221E  0E00               	movlw	0
  6235  002220  6F75               	movwf	oled_putString@start_page& (0+255),b
  6236  002222  EC27  F026         	call	_oled_putString	;wreg free
  6237                           
  6238                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6239  002226  0E34               	movlw	low STR_25
  6240  002228  0100               	movlb	0	; () banked
  6241  00222A  6F72               	movwf	oled_putString@string& (0+255),b
  6242  00222C  0E7F               	movlw	high STR_25
  6243  00222E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6244  002230  0E02               	movlw	2
  6245  002232  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6246  002234  0E01               	movlw	1
  6247  002236  6F75               	movwf	oled_putString@start_page& (0+255),b
  6248  002238  EC27  F026         	call	_oled_putString	;wreg free
  6249                           
  6250                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6251  00223C  0EA9               	movlw	low STR_26
  6252  00223E  0100               	movlb	0	; () banked
  6253  002240  6F72               	movwf	oled_putString@string& (0+255),b
  6254  002242  0E7B               	movlw	high STR_26
  6255  002244  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6256  002246  0E00               	movlw	0
  6257  002248  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6258  00224A  0E03               	movlw	3
  6259  00224C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6260  00224E  EC27  F026         	call	_oled_putString	;wreg free
  6261                           
  6262                           ;MOTEapp.c: 269: activeState = moteStartup;
  6263  002252  0E00               	movlw	0
  6264  002254  0100               	movlb	0	; () banked
  6265  002256  6FF4               	movwf	_activeState& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6269  002258  0E02               	movlw	2
  6270  00225A  D031               	goto	L2
  6271  00225C                     
  6272                           ; BSR set to: 0
  6273                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6274                           
  6275                           ; BSR set to: 0
  6276  00225C  C0B8  F077         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6277  002260  C0B9  F078         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6278  002264  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6279  002266  EC07  F008         	call	_moteJoiningProcess
  6280  00226A  0900               	iorlw	0
  6281  00226C  B4D8               	btfsc	status,2,c
  6282  00226E  D041               	goto	l381
  6283                           
  6284                           ;MOTEapp.c: 274: {
  6285                           ;MOTEapp.c: 275: oled_clear();
  6286  002270  EC8E  F02C         	call	_oled_clear	;wreg free
  6287                           
  6288                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6289  002274  0EFE               	movlw	low STR_27
  6290  002276  0100               	movlb	0	; () banked
  6291  002278  6F72               	movwf	oled_putString@string& (0+255),b
  6292  00227A  0E7B               	movlw	high STR_27
  6293  00227C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6294  00227E  0E00               	movlw	0
  6295  002280  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6296  002282  0E00               	movlw	0
  6297  002284  6F75               	movwf	oled_putString@start_page& (0+255),b
  6298  002286  EC27  F026         	call	_oled_putString	;wreg free
  6299                           
  6300                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6301  00228A  0E0F               	movlw	low STR_28
  6302  00228C  0100               	movlb	0	; () banked
  6303  00228E  6F72               	movwf	oled_putString@string& (0+255),b
  6304  002290  0E7C               	movlw	high STR_28
  6305  002292  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6306  002294  0E00               	movlw	0
  6307  002296  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6308  002298  0E02               	movlw	2
  6309  00229A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6310  00229C  EC27  F026         	call	_oled_putString	;wreg free
  6311                           
  6312                           ;MOTEapp.c: 278: oled_putString(" (S2)      (S3) ", 0,3);
  6313  0022A0  0E32               	movlw	low STR_29
  6314  0022A2  0100               	movlb	0	; () banked
  6315  0022A4  6F72               	movwf	oled_putString@string& (0+255),b
  6316  0022A6  0E7B               	movlw	high STR_29
  6317  0022A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6318  0022AA  0E00               	movlw	0
  6319  0022AC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6320  0022AE  0E03               	movlw	3
  6321  0022B0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6322  0022B2  EC27  F026         	call	_oled_putString	;wreg free
  6323                           
  6324                           ;MOTEapp.c: 279: runningState = runningEnter;
  6325  0022B6  0E00               	movlw	0
  6326  0022B8  0100               	movlb	0	; () banked
  6327  0022BA  6FF3               	movwf	_runningState& (0+255),b
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6331  0022BC  0E03               	movlw	3
  6332  0022BE                     L2:
  6333  0022BE  6FFF               	movwf	_moteState& (0+255),b
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;MOTEapp.c: 281: }
  6337                           ;MOTEapp.c: 282: break;
  6338  0022C0  D018               	goto	l381
  6339  0022C2                     
  6340                           ; BSR set to: 0
  6341                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6342                           
  6343                           ; BSR set to: 0
  6344  0022C2  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6345  0022C6  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6346  0022CA  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6347  0022CE  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6348  0022D0  EC86  F000         	call	_moteRunningProcess
  6349                           
  6350                           ;MOTEapp.c: 289: }
  6351                           
  6352                           ;MOTEapp.c: 288: break;
  6353                           
  6354                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6355                           
  6356                           ;MOTEapp.c: 285: break;
  6357  0022D4  D00E               	goto	l381
  6358  0022D6                     l376:
  6359  0022D6  0100               	movlb	0	; () banked
  6360  0022D8  51FF               	movf	_moteState& (0+255),w,b
  6361                           
  6362                           ; Switch size 1, requested type "space"
  6363                           ; Number of cases is 4, Range of values is 1 to 4
  6364                           ; switch strategies available:
  6365                           ; Name         Instructions Cycles
  6366                           ; simple_byte           13     7 (average)
  6367                           ;	Chosen strategy is simple_byte
  6368  0022DA  0A01               	xorlw	1	; case 1
  6369  0022DC  B4D8               	btfsc	status,2,c
  6370  0022DE  D796               	goto	l382
  6371  0022E0  0A03               	xorlw	3	; case 2
  6372  0022E2  B4D8               	btfsc	status,2,c
  6373  0022E4  D7BB               	goto	l383
  6374  0022E6  0A01               	xorlw	1	; case 3
  6375  0022E8  B4D8               	btfsc	status,2,c
  6376  0022EA  D7EB               	goto	l385
  6377  0022EC  0A07               	xorlw	7	; case 4
  6378  0022EE  A4D8               	btfss	status,2,c
  6379  0022F0  D78C               	goto	l377
  6380  0022F2                     l381:
  6381                           
  6382                           ;MOTEapp.c: 290: return moteState;
  6383                           
  6384                           ; BSR set to: 0
  6385  0022F2  0100               	movlb	0	; () banked
  6386  0022F4  51FF               	movf	_moteState& (0+255),w,b
  6387  0022F6  0012               	return	
  6388  0022F8                     __end_of_moteHandler:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           intcon	equ	0xFF2
  6395                           postinc0	equ	0xFEE
  6396                           wreg	equ	0xFE8
  6397                           postdec1	equ	0xFE5
  6398                           fsr1l	equ	0xFE1
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function _moteRunningProcess *****************
  6402 ;; Defined at:
  6403 ;;		line 489 in file "../Includes/Board/MOTEapp.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  changeStates    1    wreg     unsigned char 
  6406 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6407 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6408 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6411 ;;  counter         1   83[BANK0 ] unsigned char 
  6412 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6413 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6414 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6415 ;;  readByte        1   80[BANK0 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      enum E6175
  6418 ;; Registers used:
  6419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6425 ;;      Params:         0       3       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6428 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6429 ;;Total ram usage:       10 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:   18
  6432 ;; This function calls:
  6433 ;;		_ADC_TempConversion
  6434 ;;		_MOTEapp_SetDataRateSetting
  6435 ;;		_TMR2_ReadTimer
  6436 ;;		_moteApp_GoToSleep
  6437 ;;		_moteApp_add8bToDataBuffer
  6438 ;;		_moteApp_addToDataBuffer
  6439 ;;		_moteApp_clearBuffers
  6440 ;;		_moteApp_convertSensorValue
  6441 ;;		_moteApp_delayms
  6442 ;;		_moteApp_getLightString
  6443 ;;		_moteApp_getLightValue
  6444 ;;		_moteApp_getTempValue
  6445 ;;		_moteApp_lightStringSize
  6446 ;;		_moteApp_setSensorsInput
  6447 ;;		_oled_clear
  6448 ;;		_oled_putString
  6449 ;;		_oled_putUint8
  6450 ;;		_oled_putint8
  6451 ;;		_sendDataCommand
  6452 ;;		_strcmp
  6453 ;;		_strncmp
  6454 ;; This function is called by:
  6455 ;;		_moteHandler
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text10
  6460  00010C                     __ptext10:
  6461                           	opt stack 0
  6462  00010C                     _moteRunningProcess:
  6463                           	opt stack 11
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;incstack = 0
  6467                           ;moteRunningProcess@changeStates stored from wreg
  6468  00010C  0100               	movlb	0	; () banked
  6469  00010E  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6470                           
  6471                           ;MOTEapp.c: 491: uint8_t readByte = 0;
  6472  000110  0E00               	movlw	0
  6473  000112  0100               	movlb	0	; () banked
  6474  000114  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;MOTEapp.c: 493: if ((sleepEvent) && (periodicState))
  6478  000116  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6479  000118  B4D8               	btfsc	status,2,c
  6480  00011A  EFDC  F007         	goto	l466
  6481                           
  6482                           ; BSR set to: 0
  6483  00011E  51FA               	movf	_periodicState& (0+255),w,b
  6484  000120  B4D8               	btfsc	status,2,c
  6485  000122  EFDC  F007         	goto	l466
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;MOTEapp.c: 494: {
  6489                           ;MOTEapp.c: 495: if (sleepTicker >= periodicTimerValue)
  6490  000126  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6491  000128  5DEF               	subwf	_sleepTicker& (0+255),w,b
  6492  00012A  A0D8               	btfss	status,0,c
  6493  00012C  D0C4               	goto	l459
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;MOTEapp.c: 496: {
  6497                           ;MOTEapp.c: 498: moteApp_clearBuffers();
  6498  00012E  EC6A  F022         	call	_moteApp_clearBuffers	;wreg free
  6499                           
  6500                           ;MOTEapp.c: 501: light = 0;
  6501  000132  0E00               	movlw	0
  6502  000134  0101               	movlb	1	; () banked
  6503  000136  6F5B               	movwf	(_light+1)& (0+255),b
  6504  000138  0E00               	movlw	0
  6505  00013A  6F5A               	movwf	_light& (0+255),b
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;MOTEapp.c: 502: temperature = 0;
  6509  00013C  0E00               	movlw	0
  6510  00013E  0100               	movlb	0	; () banked
  6511  000140  6FDB               	movwf	(_temperature+1)& (0+255),b
  6512  000142  0E00               	movlw	0
  6513  000144  6FDA               	movwf	_temperature& (0+255),b
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;MOTEapp.c: 503: __nop();
  6517  000146  F000               	nop	
  6518                           
  6519                           ;MOTEapp.c: 505: moteApp_setSensorsInput();
  6520  000148  EC06  F025         	call	_moteApp_setSensorsInput	;wreg free
  6521                           
  6522                           ;MOTEapp.c: 506: uint8_t sizeOfUpdate = 0;
  6523  00014C  0E00               	movlw	0
  6524  00014E  0100               	movlb	0	; () banked
  6525  000150  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;MOTEapp.c: 507: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6529  000152  EC9C  F028         	call	_moteApp_getLightValue	;wreg free
  6530  000156  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6531  00015A  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6532  00015E  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  6533  000162  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  6534  000166  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  6535                           
  6536                           ;MOTEapp.c: 508: oled_putString(moteApp_getLightString(), 6, 1);
  6537  00016A  EC6D  F02D         	call	_moteApp_getLightString	;wreg free
  6538  00016E  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6539  000172  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6540  000176  0E06               	movlw	6
  6541  000178  0100               	movlb	0	; () banked
  6542  00017A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6543  00017C  0E01               	movlw	1
  6544  00017E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6545  000180  EC27  F026         	call	_oled_putString	;wreg free
  6546                           
  6547                           ;MOTEapp.c: 509: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6548  000184  EC6D  F02D         	call	_moteApp_getLightString	;wreg free
  6549  000188  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6550  00018C  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6551  000190  0E04               	movlw	4
  6552  000192  0100               	movlb	0	; () banked
  6553  000194  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6554  000196  EC8F  F027         	call	_moteApp_addToDataBuffer	;wreg free
  6555  00019A  0100               	movlb	0	; () banked
  6556  00019C  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;MOTEapp.c: 511: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6560  00019E  EC71  F029         	call	_moteApp_getTempValue	;wreg free
  6561  0001A2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6562  0001A6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6563  0001AA  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  6564  0001AE  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6565  0001B2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6566                           
  6567                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(temperature);
  6568  0001B6  0100               	movlb	0	; () banked
  6569  0001B8  51DA               	movf	_temperature& (0+255),w,b
  6570  0001BA  EC80  F018         	call	_ADC_TempConversion
  6571  0001BE  0100               	movlb	0	; () banked
  6572  0001C0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6573  0001C2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6574  0001C4  6FDA               	movwf	_temperature& (0+255),b
  6575  0001C6  6BDB               	clrf	(_temperature+1)& (0+255),b
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;MOTEapp.c: 513: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6579  0001C8  ECA8  F02D         	call	_moteApp_lightStringSize	;wreg free
  6580  0001CC  0F05               	addlw	5
  6581  0001CE  0100               	movlb	0	; () banked
  6582  0001D0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6583  0001D2  51DA               	movf	_temperature& (0+255),w,b
  6584  0001D4  EC78  F01F         	call	_moteApp_add8bToDataBuffer
  6585                           
  6586                           ;MOTEapp.c: 516: sleepTicker = 0;
  6587  0001D8  0E00               	movlw	0
  6588  0001DA  0100               	movlb	0	; () banked
  6589  0001DC  6FEF               	movwf	_sleepTicker& (0+255),b
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;MOTEapp.c: 517: oled_clear();
  6593  0001DE  EC8E  F02C         	call	_oled_clear	;wreg free
  6594                           
  6595                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6596  0001E2  0E31               	movlw	low STR_71
  6597  0001E4  0100               	movlb	0	; () banked
  6598  0001E6  6F72               	movwf	oled_putString@string& (0+255),b
  6599  0001E8  0E7C               	movlw	high STR_71
  6600  0001EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6601  0001EC  0E00               	movlw	0
  6602  0001EE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6603  0001F0  0E00               	movlw	0
  6604  0001F2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6605  0001F4  EC27  F026         	call	_oled_putString	;wreg free
  6606                           
  6607                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6608  0001F8  0E34               	movlw	low STR_72
  6609  0001FA  0100               	movlb	0	; () banked
  6610  0001FC  6F72               	movwf	oled_putString@string& (0+255),b
  6611  0001FE  0E7E               	movlw	high STR_72
  6612  000200  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6613  000202  0E00               	movlw	0
  6614  000204  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6615  000206  0E01               	movlw	1
  6616  000208  6F75               	movwf	oled_putString@start_page& (0+255),b
  6617  00020A  EC27  F026         	call	_oled_putString	;wreg free
  6618                           
  6619                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6620  00020E  0E72               	movlw	low STR_73
  6621  000210  0100               	movlb	0	; () banked
  6622  000212  6F72               	movwf	oled_putString@string& (0+255),b
  6623  000214  0E7D               	movlw	high STR_73
  6624  000216  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6625  000218  0E00               	movlw	0
  6626  00021A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6627  00021C  0E02               	movlw	2
  6628  00021E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6629  000220  EC27  F026         	call	_oled_putString	;wreg free
  6630                           
  6631                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6632  000224  EC6D  F02D         	call	_moteApp_getLightString	;wreg free
  6633  000228  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6634  00022C  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6635  000230  0E03               	movlw	3
  6636  000232  0100               	movlb	0	; () banked
  6637  000234  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6638  000236  0E02               	movlw	2
  6639  000238  6F75               	movwf	oled_putString@start_page& (0+255),b
  6640  00023A  EC27  F026         	call	_oled_putString	;wreg free
  6641                           
  6642                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6643  00023E  0E0B               	movlw	11
  6644  000240  0100               	movlb	0	; () banked
  6645  000242  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6646  000244  0E02               	movlw	2
  6647  000246  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6648  000248  51DA               	movf	_temperature& (0+255),w,b
  6649  00024A  EC30  F021         	call	_oled_putint8
  6650                           
  6651                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6652  00024E  EC7F  F02D         	call	_TMR2_ReadTimer	;wreg free
  6653  000252  0100               	movlb	0	; () banked
  6654  000254  6FF1               	movwf	_randomPortNum& (0+255),b
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;MOTEapp.c: 526: if (!randomPortNum)
  6658  000256  51F1               	movf	_randomPortNum& (0+255),w,b
  6659  000258  A4D8               	btfss	status,2,c
  6660  00025A  D002               	goto	l460
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;MOTEapp.c: 527: randomPortNum = 5;
  6664  00025C  0E05               	movlw	5
  6665  00025E  D005               	goto	L3
  6666  000260                     l460:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6670                           
  6671                           ; BSR set to: 0
  6672  000260  0EDF               	movlw	223
  6673  000262  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6674  000264  D003               	goto	l462
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6678  000266  51F1               	movf	_randomPortNum& (0+255),w,b
  6679  000268  0FCE               	addlw	206
  6680  00026A                     L3:
  6681  00026A  6FF1               	movwf	_randomPortNum& (0+255),b
  6682  00026C                     l462:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6686                           
  6687                           ; BSR set to: 0
  6688                           
  6689                           ; BSR set to: 0
  6690  00026C  0E0A               	movlw	10
  6691  00026E  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6692  000270  0E01               	movlw	1
  6693  000272  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6694  000274  51F1               	movf	_randomPortNum& (0+255),w,b
  6695  000276  ECF8  F022         	call	_oled_putUint8
  6696                           
  6697                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6698  00027A  0E00               	movlw	0
  6699  00027C  0100               	movlb	0	; () banked
  6700  00027E  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6701  000280  51F1               	movf	_randomPortNum& (0+255),w,b
  6702  000282  EC78  F01F         	call	_moteApp_add8bToDataBuffer
  6703                           
  6704                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6705  000286  0E20               	movlw	32
  6706  000288  0101               	movlb	1	; () banked
  6707  00028A  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;MOTEapp.c: 535: __nop();
  6711  00028C  F000               	nop	
  6712                           
  6713                           ;MOTEapp.c: 536: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6714  00028E  0E2D               	movlw	low STR_74
  6715  000290  0100               	movlb	0	; () banked
  6716  000292  6F61               	movwf	sendDataCommand@string& (0+255),b
  6717  000294  0E7D               	movlw	high STR_74
  6718  000296  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6719  000298  0EC4               	movlw	low _dataBuffer
  6720  00029A  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6721  00029C  0E01               	movlw	high _dataBuffer
  6722  00029E  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6723  0002A0  0E0C               	movlw	12
  6724  0002A2  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6725  0002A4  EC01  F01E         	call	_sendDataCommand	;wreg free
  6726                           
  6727                           ;MOTEapp.c: 537: secTicker = 10 - (10 / 3);
  6728  0002A8  0E07               	movlw	7
  6729  0002AA  0100               	movlb	0	; () banked
  6730  0002AC  6FF0               	movwf	_secTicker& (0+255),b
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;MOTEapp.c: 538: runningState = runningUplinkTransmit;
  6734  0002AE  0E08               	movlw	8
  6735  0002B0  6FF3               	movwf	_runningState& (0+255),b
  6736                           
  6737                           ;MOTEapp.c: 539: }
  6738  0002B2  EFDC  F007         	goto	l466
  6739  0002B6                     l459:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;MOTEapp.c: 540: else
  6743                           ;MOTEapp.c: 541: {
  6744                           ;MOTEapp.c: 542: if (menuTimeout)
  6745                           
  6746                           ; BSR set to: 0
  6747  0002B6  51FB               	movf	_menuTimeout& (0+255),w,b
  6748  0002B8  B4D8               	btfsc	status,2,c
  6749  0002BA  D007               	goto	l464
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;MOTEapp.c: 543: {
  6753                           ;MOTEapp.c: 544: sleepTicker++;
  6754  0002BC  2BEF               	incf	_sleepTicker& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;MOTEapp.c: 545: runningState = runningSleep;
  6758  0002BE  0E0F               	movlw	15
  6759  0002C0  6FF3               	movwf	_runningState& (0+255),b
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;MOTEapp.c: 546: selectButton = 1;
  6763  0002C2  0E01               	movlw	1
  6764  0002C4  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6765                           
  6766                           ;MOTEapp.c: 547: } else {
  6767  0002C6  EFDC  F007         	goto	l466
  6768  0002CA                     l464:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;MOTEapp.c: 548: sleepTicker = 0;
  6772                           
  6773                           ; BSR set to: 0
  6774  0002CA  0E00               	movlw	0
  6775  0002CC  6FEF               	movwf	_sleepTicker& (0+255),b
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;MOTEapp.c: 549: }
  6779                           ;MOTEapp.c: 550: }
  6780                           ;MOTEapp.c: 551: }
  6781                           ;MOTEapp.c: 554: switch(runningState)
  6782                           
  6783                           ; BSR set to: 0
  6784                           
  6785                           ; BSR set to: 0
  6786  0002CE  EFDC  F007         	goto	l466
  6787  0002D2                     
  6788                           ; BSR set to: 0
  6789                           ;MOTEapp.c: 557: while(1);
  6790  0002D2  D7FF               	goto	l467
  6791  0002D4                     
  6792                           ;MOTEapp.c: 560: if ( (changeStates) || (selectButton) )
  6793  0002D4  0100               	movlb	0	; () banked
  6794  0002D6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6795  0002D8  A4D8               	btfss	status,2,c
  6796  0002DA  D003               	goto	u9260
  6797                           
  6798                           ; BSR set to: 0
  6799  0002DC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6800  0002DE  B4D8               	btfsc	status,2,c
  6801  0002E0  0012               	return	
  6802  0002E2                     u9260:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;MOTEapp.c: 561: {
  6806                           ;MOTEapp.c: 562: oled_clear();
  6807                           
  6808                           ; BSR set to: 0
  6809  0002E2  EC8E  F02C         	call	_oled_clear	;wreg free
  6810                           
  6811                           ;MOTEapp.c: 563: oled_putString("  Issue Uplink  ",0,0);
  6812  0002E6  0E21               	movlw	low STR_75
  6813  0002E8  0100               	movlb	0	; () banked
  6814  0002EA  6F72               	movwf	oled_putString@string& (0+255),b
  6815  0002EC  0E7B               	movlw	high STR_75
  6816  0002EE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6817  0002F0  0E00               	movlw	0
  6818  0002F2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6819  0002F4  0E00               	movlw	0
  6820  0002F6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6821  0002F8  EC27  F026         	call	_oled_putString	;wreg free
  6822                           
  6823                           ;MOTEapp.c: 564: oled_putString(" LoRaWAN Packet ",0,1);
  6824  0002FC  0E87               	movlw	low STR_76
  6825  0002FE  0100               	movlb	0	; () banked
  6826  000300  6F72               	movwf	oled_putString@string& (0+255),b
  6827  000302  0E7B               	movlw	high STR_76
  6828  000304  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6829  000306  0E00               	movlw	0
  6830  000308  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6831  00030A  0E01               	movlw	1
  6832  00030C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6833  00030E  EC27  F026         	call	_oled_putString	;wreg free
  6834                           
  6835                           ;MOTEapp.c: 565: oled_putString("(NAV)    (SEL) ",0,3);
  6836  000312  0E83               	movlw	low STR_77
  6837  000314  0100               	movlb	0	; () banked
  6838  000316  6F72               	movwf	oled_putString@string& (0+255),b
  6839  000318  0E7C               	movlw	high STR_77
  6840  00031A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6841  00031C  0E00               	movlw	0
  6842  00031E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6843  000320  0E03               	movlw	3
  6844  000322  6F75               	movwf	oled_putString@start_page& (0+255),b
  6845  000324  EC27  F026         	call	_oled_putString	;wreg free
  6846                           
  6847                           ;MOTEapp.c: 566: runningState = runningUplink;
  6848  000328  0E06               	movlw	6
  6849  00032A  0100               	movlb	0	; () banked
  6850  00032C  6FF3               	movwf	_runningState& (0+255),b
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;MOTEapp.c: 567: }
  6854                           ;MOTEapp.c: 568: break;
  6855  00032E  0012               	return	
  6856  000330                     
  6857                           ; BSR set to: 0
  6858                           ;MOTEapp.c: 570: if (changeStates)
  6859                           
  6860                           ; BSR set to: 0
  6861  000330  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6862  000332  B4D8               	btfsc	status,2,c
  6863  000334  D027               	goto	l477
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;MOTEapp.c: 571: {
  6867                           ;MOTEapp.c: 572: oled_clear();
  6868  000336  EC8E  F02C         	call	_oled_clear	;wreg free
  6869                           
  6870                           ;MOTEapp.c: 573: oled_putString(" View Downlink  ",0,0);
  6871  00033A  0E10               	movlw	low STR_78
  6872  00033C  0100               	movlb	0	; () banked
  6873  00033E  6F72               	movwf	oled_putString@string& (0+255),b
  6874  000340  0E7B               	movlw	high STR_78
  6875  000342  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6876  000344  0E00               	movlw	0
  6877  000346  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6878  000348  0E00               	movlw	0
  6879  00034A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6880  00034C  EC27  F026         	call	_oled_putString	;wreg free
  6881                           
  6882                           ;MOTEapp.c: 574: oled_putString("  Last Message  ",0,1);
  6883  000350  0EFF               	movlw	low STR_79
  6884  000352  0100               	movlb	0	; () banked
  6885  000354  6F72               	movwf	oled_putString@string& (0+255),b
  6886  000356  0E7A               	movlw	high STR_79
  6887  000358  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6888  00035A  0E00               	movlw	0
  6889  00035C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6890  00035E  0E01               	movlw	1
  6891  000360  6F75               	movwf	oled_putString@start_page& (0+255),b
  6892  000362  EC27  F026         	call	_oled_putString	;wreg free
  6893                           
  6894                           ;MOTEapp.c: 575: oled_putString("(NAV)    (SEL) ",0,3);
  6895  000366  0E83               	movlw	low STR_77
  6896  000368  0100               	movlb	0	; () banked
  6897  00036A  6F72               	movwf	oled_putString@string& (0+255),b
  6898  00036C  0E7C               	movlw	high STR_77
  6899  00036E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6900  000370  0E00               	movlw	0
  6901  000372  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6902  000374  0E03               	movlw	3
  6903  000376  6F75               	movwf	oled_putString@start_page& (0+255),b
  6904  000378  EC27  F026         	call	_oled_putString	;wreg free
  6905                           
  6906                           ;MOTEapp.c: 576: runningState = runningDownlink;
  6907  00037C  0E0A               	movlw	10
  6908  00037E  0100               	movlb	0	; () banked
  6909  000380  6FF3               	movwf	_runningState& (0+255),b
  6910                           
  6911                           ;MOTEapp.c: 577: }
  6912  000382  0012               	return	
  6913  000384                     l477:
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;MOTEapp.c: 578: else if (selectButton)
  6917                           
  6918                           ; BSR set to: 0
  6919  000384  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6920  000386  B4D8               	btfsc	status,2,c
  6921  000388  0012               	return	
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;MOTEapp.c: 579: {
  6925                           ;MOTEapp.c: 580: sleepTicker = 0;
  6926  00038A  0E00               	movlw	0
  6927  00038C  6FEF               	movwf	_sleepTicker& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;MOTEapp.c: 582: oled_clear();
  6931  00038E  EC8E  F02C         	call	_oled_clear	;wreg free
  6932                           
  6933                           ;MOTEapp.c: 583: oled_putString("Uplink Pckt Type",0,0);
  6934  000392  0EDC               	movlw	low STR_81
  6935  000394  0100               	movlb	0	; () banked
  6936  000396  6F72               	movwf	oled_putString@string& (0+255),b
  6937  000398  0E7B               	movlw	high STR_81
  6938  00039A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6939  00039C  0E00               	movlw	0
  6940  00039E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6941  0003A0  0E00               	movlw	0
  6942  0003A2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6943  0003A4  EC27  F026         	call	_oled_putString	;wreg free
  6944                           
  6945                           ;MOTEapp.c: 584: oled_putString("Throu Port# ",0,1);
  6946  0003A8  0E65               	movlw	low STR_82
  6947  0003AA  0100               	movlb	0	; () banked
  6948  0003AC  6F72               	movwf	oled_putString@string& (0+255),b
  6949  0003AE  0E7D               	movlw	high STR_82
  6950  0003B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6951  0003B2  0E00               	movlw	0
  6952  0003B4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6953  0003B6  0E01               	movlw	1
  6954  0003B8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6955  0003BA  EC27  F026         	call	_oled_putString	;wreg free
  6956                           
  6957                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  6958  0003BE  0EA9               	movlw	low STR_83
  6959  0003C0  0100               	movlb	0	; () banked
  6960  0003C2  6F72               	movwf	oled_putString@string& (0+255),b
  6961  0003C4  0E7A               	movlw	high STR_83
  6962  0003C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6963  0003C8  0E00               	movlw	0
  6964  0003CA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6965  0003CC  0E03               	movlw	3
  6966  0003CE  6F75               	movwf	oled_putString@start_page& (0+255),b
  6967  0003D0  EC27  F026         	call	_oled_putString	;wreg free
  6968                           
  6969                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  6970  0003D4  EC6A  F022         	call	_moteApp_clearBuffers	;wreg free
  6971                           
  6972                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  6973  0003D8  EC7F  F02D         	call	_TMR2_ReadTimer	;wreg free
  6974  0003DC  0100               	movlb	0	; () banked
  6975  0003DE  6FF1               	movwf	_randomPortNum& (0+255),b
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;MOTEapp.c: 591: if (!randomPortNum)
  6979  0003E0  51F1               	movf	_randomPortNum& (0+255),w,b
  6980  0003E2  A4D8               	btfss	status,2,c
  6981  0003E4  D002               	goto	l480
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;MOTEapp.c: 592: randomPortNum = 5;
  6985  0003E6  0E05               	movlw	5
  6986  0003E8  D005               	goto	L4
  6987  0003EA                     l480:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  6991                           
  6992                           ; BSR set to: 0
  6993  0003EA  0EDF               	movlw	223
  6994  0003EC  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6995  0003EE  D003               	goto	l482
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  6999  0003F0  51F1               	movf	_randomPortNum& (0+255),w,b
  7000  0003F2  0FCE               	addlw	206
  7001  0003F4                     L4:
  7002  0003F4  6FF1               	movwf	_randomPortNum& (0+255),b
  7003  0003F6                     l482:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  7007                           
  7008                           ; BSR set to: 0
  7009                           
  7010                           ; BSR set to: 0
  7011  0003F6  0E0C               	movlw	12
  7012  0003F8  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7013  0003FA  0E01               	movlw	1
  7014  0003FC  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7015  0003FE  51F1               	movf	_randomPortNum& (0+255),w,b
  7016  000400  ECF8  F022         	call	_oled_putUint8
  7017                           
  7018                           ;MOTEapp.c: 596: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7019  000404  0E00               	movlw	0
  7020  000406  0100               	movlb	0	; () banked
  7021  000408  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7022  00040A  51F1               	movf	_randomPortNum& (0+255),w,b
  7023  00040C  EC78  F01F         	call	_moteApp_add8bToDataBuffer
  7024                           
  7025                           ;MOTEapp.c: 597: dataBuffer[3] = 0x20;
  7026  000410  0E20               	movlw	32
  7027  000412  0101               	movlb	1	; () banked
  7028  000414  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  7029                           
  7030                           ; BSR set to: 1
  7031                           ;MOTEapp.c: 599: light = 0;
  7032  000416  0E00               	movlw	0
  7033  000418  6F5B               	movwf	(_light+1)& (0+255),b
  7034  00041A  0E00               	movlw	0
  7035  00041C  6F5A               	movwf	_light& (0+255),b
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;MOTEapp.c: 600: temperature = 0;
  7039  00041E  0E00               	movlw	0
  7040  000420  0100               	movlb	0	; () banked
  7041  000422  6FDB               	movwf	(_temperature+1)& (0+255),b
  7042  000424  0E00               	movlw	0
  7043  000426  6FDA               	movwf	_temperature& (0+255),b
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;MOTEapp.c: 601: __nop();
  7047  000428  F000               	nop	
  7048                           
  7049                           ;MOTEapp.c: 602: moteApp_setSensorsInput();
  7050  00042A  EC06  F025         	call	_moteApp_setSensorsInput	;wreg free
  7051                           
  7052                           ;MOTEapp.c: 603: moteApp_delayms(500);
  7053  00042E  0E01               	movlw	1
  7054  000430  0100               	movlb	0	; () banked
  7055  000432  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7056  000434  0EF4               	movlw	244
  7057  000436  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7058  000438  EC93  F02A         	call	_moteApp_delayms	;wreg free
  7059                           
  7060                           ;MOTEapp.c: 604: uint8_t sizeOfUpdate = 0;
  7061  00043C  0E00               	movlw	0
  7062  00043E  0100               	movlb	0	; () banked
  7063  000440  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;MOTEapp.c: 605: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7067  000442  EC9C  F028         	call	_moteApp_getLightValue	;wreg free
  7068  000446  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7069  00044A  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7070  00044E  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  7071  000452  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  7072  000456  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  7073                           
  7074                           ;MOTEapp.c: 606: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7075  00045A  EC9C  F028         	call	_moteApp_getLightValue	;wreg free
  7076  00045E  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7077  000462  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7078  000466  0E04               	movlw	4
  7079  000468  0100               	movlb	0	; () banked
  7080  00046A  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7081  00046C  EC8F  F027         	call	_moteApp_addToDataBuffer	;wreg free
  7082  000470  0100               	movlb	0	; () banked
  7083  000472  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;MOTEapp.c: 607: __nop();
  7087  000474  F000               	nop	
  7088                           
  7089                           ;MOTEapp.c: 608: __nop();
  7090  000476  F000               	nop	
  7091                           
  7092                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7093  000478  EC71  F029         	call	_moteApp_getTempValue	;wreg free
  7094  00047C  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7095  000480  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7096  000484  ECC7  F024         	call	_moteApp_convertSensorValue	;wreg free
  7097  000488  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7098  00048C  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7099                           
  7100                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7101  000490  0100               	movlb	0	; () banked
  7102  000492  51DA               	movf	_temperature& (0+255),w,b
  7103  000494  EC80  F018         	call	_ADC_TempConversion
  7104  000498  0100               	movlb	0	; () banked
  7105  00049A  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7106  00049C  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7107  00049E  6FDA               	movwf	_temperature& (0+255),b
  7108  0004A0  6BDB               	clrf	(_temperature+1)& (0+255),b
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7112  0004A2  ECA8  F02D         	call	_moteApp_lightStringSize	;wreg free
  7113  0004A6  0F05               	addlw	5
  7114  0004A8  0100               	movlb	0	; () banked
  7115  0004AA  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7116  0004AC  51DA               	movf	_temperature& (0+255),w,b
  7117  0004AE  EC78  F01F         	call	_moteApp_add8bToDataBuffer
  7118                           
  7119                           ;MOTEapp.c: 612: __nop();
  7120  0004B2  F000               	nop	
  7121                           
  7122                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7123  0004B4  0E07               	movlw	7
  7124  0004B6  0100               	movlb	0	; () banked
  7125  0004B8  6FF3               	movwf	_runningState& (0+255),b
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;MOTEapp.c: 615: }
  7129                           ;MOTEapp.c: 616: break;
  7130                           
  7131                           ; BSR set to: 0
  7132  0004BA  0012               	return	
  7133  0004BC                     
  7134                           ; BSR set to: 0
  7135                           ;MOTEapp.c: 618: if (changeStates)
  7136                           
  7137                           ; BSR set to: 0
  7138  0004BC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7139  0004BE  B4D8               	btfsc	status,2,c
  7140  0004C0  D00C               	goto	l484
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;MOTEapp.c: 619: {
  7144                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7145  0004C2  0E2D               	movlw	low STR_74
  7146  0004C4  6F61               	movwf	sendDataCommand@string& (0+255),b
  7147  0004C6  0E7D               	movlw	high STR_74
  7148  0004C8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7149  0004CA  0EC4               	movlw	low _dataBuffer
  7150  0004CC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7151  0004CE  0E01               	movlw	high _dataBuffer
  7152  0004D0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7153  0004D2  0E0C               	movlw	12
  7154  0004D4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7155  0004D6  EC01  F01E         	call	_sendDataCommand	;wreg free
  7156  0004DA                     l484:
  7157                           
  7158                           ;MOTEapp.c: 622: }
  7159                           ;MOTEapp.c: 623: if (selectButton)
  7160  0004DA  0100               	movlb	0	; () banked
  7161  0004DC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7162  0004DE  B4D8               	btfsc	status,2,c
  7163  0004E0  D00C               	goto	l485
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;MOTEapp.c: 624: {
  7167                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7168  0004E2  0E64               	movlw	low STR_85
  7169  0004E4  6F61               	movwf	sendDataCommand@string& (0+255),b
  7170  0004E6  0E7E               	movlw	high STR_85
  7171  0004E8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7172  0004EA  0EC4               	movlw	low _dataBuffer
  7173  0004EC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7174  0004EE  0E01               	movlw	high _dataBuffer
  7175  0004F0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7176  0004F2  0E0C               	movlw	12
  7177  0004F4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7178  0004F6  EC01  F01E         	call	_sendDataCommand	;wreg free
  7179  0004FA                     l485:
  7180                           
  7181                           ;MOTEapp.c: 626: }
  7182                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7183  0004FA  0100               	movlb	0	; () banked
  7184  0004FC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7185  0004FE  A4D8               	btfss	status,2,c
  7186  000500  D003               	goto	u9340
  7187                           
  7188                           ; BSR set to: 0
  7189  000502  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7190  000504  B4D8               	btfsc	status,2,c
  7191  000506  0012               	return	
  7192  000508                     u9340:
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;MOTEapp.c: 629: {
  7196                           ;MOTEapp.c: 630: oled_clear();
  7197                           
  7198                           ; BSR set to: 0
  7199  000508  EC8E  F02C         	call	_oled_clear	;wreg free
  7200                           
  7201                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7202  00050C  0E4C               	movlw	low STR_86
  7203  00050E  0100               	movlb	0	; () banked
  7204  000510  6F72               	movwf	oled_putString@string& (0+255),b
  7205  000512  0E7E               	movlw	high STR_86
  7206  000514  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7207  000516  0E00               	movlw	0
  7208  000518  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7209  00051A  0E00               	movlw	0
  7210  00051C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7211  00051E  EC27  F026         	call	_oled_putString	;wreg free
  7212                           
  7213                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7214  000522  0E40               	movlw	low STR_87
  7215  000524  0100               	movlb	0	; () banked
  7216  000526  6F72               	movwf	oled_putString@string& (0+255),b
  7217  000528  0E7E               	movlw	high STR_87
  7218  00052A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7219  00052C  0E00               	movlw	0
  7220  00052E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7221  000530  0E01               	movlw	1
  7222  000532  6F75               	movwf	oled_putString@start_page& (0+255),b
  7223  000534  EC27  F026         	call	_oled_putString	;wreg free
  7224                           
  7225                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7226  000538  0E0C               	movlw	12
  7227  00053A  0100               	movlb	0	; () banked
  7228  00053C  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7229  00053E  0E01               	movlw	1
  7230  000540  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7231  000542  51F1               	movf	_randomPortNum& (0+255),w,b
  7232  000544  ECF8  F022         	call	_oled_putUint8
  7233                           
  7234                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7235  000548  0E72               	movlw	low STR_73
  7236  00054A  0100               	movlb	0	; () banked
  7237  00054C  6F72               	movwf	oled_putString@string& (0+255),b
  7238  00054E  0E7D               	movlw	high STR_73
  7239  000550  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7240  000552  0E00               	movlw	0
  7241  000554  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7242  000556  0E02               	movlw	2
  7243  000558  6F75               	movwf	oled_putString@start_page& (0+255),b
  7244  00055A  EC27  F026         	call	_oled_putString	;wreg free
  7245                           
  7246                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7247  00055E  EC6D  F02D         	call	_moteApp_getLightString	;wreg free
  7248  000562  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7249  000566  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7250  00056A  0E03               	movlw	3
  7251  00056C  0100               	movlb	0	; () banked
  7252  00056E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7253  000570  0E02               	movlw	2
  7254  000572  6F75               	movwf	oled_putString@start_page& (0+255),b
  7255  000574  EC27  F026         	call	_oled_putString	;wreg free
  7256                           
  7257                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7258  000578  0E0B               	movlw	11
  7259  00057A  0100               	movlb	0	; () banked
  7260  00057C  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  7261  00057E  0E02               	movlw	2
  7262  000580  6F78               	movwf	oled_putint8@start_page& (0+255),b
  7263  000582  51DA               	movf	_temperature& (0+255),w,b
  7264  000584  EC30  F021         	call	_oled_putint8
  7265                           
  7266                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7267  000588  9C89               	bcf	3977,6,c	;volatile
  7268                           
  7269                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7270  00058A  0E08               	movlw	8
  7271  00058C  0100               	movlb	0	; () banked
  7272  00058E  6FF3               	movwf	_runningState& (0+255),b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;MOTEapp.c: 639: }
  7276                           ;MOTEapp.c: 640: break;
  7277  000590  0012               	return	
  7278  000592                     
  7279                           ; BSR set to: 0
  7280                           ;MOTEapp.c: 642: if ( messageReady )
  7281                           
  7282                           ; BSR set to: 0
  7283  000592  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7284  000594  B4D8               	btfsc	status,2,c
  7285  000596  D103               	goto	l490
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;MOTEapp.c: 643: {
  7289                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7290  000598  0E64               	movlw	low _moduleResonseBuffer
  7291  00059A  6F60               	movwf	strcmp@s1& (0+255),b
  7292  00059C  0E01               	movlw	high _moduleResonseBuffer
  7293  00059E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7294  0005A0  0EF7               	movlw	low STR_44
  7295  0005A2  6F62               	movwf	strcmp@s2& (0+255),b
  7296  0005A4  0E7F               	movlw	high STR_44
  7297  0005A6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7298  0005A8  ECC3  F028         	call	_strcmp	;wreg free
  7299  0005AC  0100               	movlb	0	; () banked
  7300  0005AE  5160               	movf	?_strcmp& (0+255),w,b
  7301  0005B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7302  0005B2  A4D8               	btfss	status,2,c
  7303  0005B4  D003               	goto	l491
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;MOTEapp.c: 645: {
  7307                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7308  0005B6  8C89               	bsf	3977,6,c	;volatile
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7312  0005B8  0E08               	movlw	8
  7313  0005BA  6FF3               	movwf	_runningState& (0+255),b
  7314  0005BC                     l491:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;MOTEapp.c: 648: }
  7318                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7319                           
  7320                           ; BSR set to: 0
  7321  0005BC  0E64               	movlw	low _moduleResonseBuffer
  7322  0005BE  6F60               	movwf	strncmp@s1& (0+255),b
  7323  0005C0  0E01               	movlw	high _moduleResonseBuffer
  7324  0005C2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7325  0005C4  0EAA               	movlw	low STR_90
  7326  0005C6  6F62               	movwf	strncmp@s2& (0+255),b
  7327  0005C8  0E7F               	movlw	high STR_90
  7328  0005CA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7329  0005CC  0E00               	movlw	0
  7330  0005CE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7331  0005D0  0E06               	movlw	6
  7332  0005D2  6F64               	movwf	strncmp@len& (0+255),b
  7333  0005D4  EC3D  F023         	call	_strncmp	;wreg free
  7334  0005D8  0100               	movlb	0	; () banked
  7335  0005DA  5160               	movf	?_strncmp& (0+255),w,b
  7336  0005DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7337  0005DE  A4D8               	btfss	status,2,c
  7338  0005E0  D078               	goto	l492
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;MOTEapp.c: 650: {
  7342                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7343  0005E2  0E07               	movlw	7
  7344  0005E4  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7348  0005E6  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7349  0005E8  0D01               	mullw	1
  7350  0005EA  0E64               	movlw	low _moduleResonseBuffer
  7351  0005EC  24F3               	addwf	prodl,w,c
  7352  0005EE  6ED9               	movwf	fsr2l,c
  7353  0005F0  0E01               	movlw	high _moduleResonseBuffer
  7354  0005F2  20F4               	addwfc	prodh,w,c
  7355  0005F4  6EDA               	movwf	fsr2h,c
  7356  0005F6  50DF               	movf	indf2,w,c
  7357  0005F8  0101               	movlb	1	; () banked
  7358  0005FA  6FF7               	movwf	_responsePortNum& (0+255),b
  7359                           
  7360                           ; BSR set to: 1
  7361  0005FC  0100               	movlb	0	; () banked
  7362  0005FE  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7366  000600  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7367  000602  0D01               	mullw	1
  7368  000604  0E64               	movlw	low _moduleResonseBuffer
  7369  000606  24F3               	addwf	prodl,w,c
  7370  000608  6ED9               	movwf	fsr2l,c
  7371  00060A  0E01               	movlw	high _moduleResonseBuffer
  7372  00060C  20F4               	addwfc	prodh,w,c
  7373  00060E  6EDA               	movwf	fsr2h,c
  7374  000610  50DF               	movf	indf2,w,c
  7375  000612  0101               	movlb	1	; () banked
  7376  000614  6FF8               	movwf	(_responsePortNum+1)& (0+255),b
  7377                           
  7378                           ; BSR set to: 1
  7379  000616  0100               	movlb	0	; () banked
  7380  000618  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7384  00061A  0E20               	movlw	32
  7385  00061C  0101               	movlb	1	; () banked
  7386  00061E  19F8               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7387  000620  B4D8               	btfsc	status,2,c
  7388  000622  D015               	goto	l494
  7389                           
  7390                           ; BSR set to: 1
  7391                           ;MOTEapp.c: 658: {
  7392                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7393  000624  0100               	movlb	0	; () banked
  7394  000626  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7395  000628  0D01               	mullw	1
  7396  00062A  0E64               	movlw	low _moduleResonseBuffer
  7397  00062C  24F3               	addwf	prodl,w,c
  7398  00062E  6ED9               	movwf	fsr2l,c
  7399  000630  0E01               	movlw	high _moduleResonseBuffer
  7400  000632  20F4               	addwfc	prodh,w,c
  7401  000634  6EDA               	movwf	fsr2h,c
  7402  000636  50DF               	movf	indf2,w,c
  7403  000638  0101               	movlb	1	; () banked
  7404  00063A  6FF9               	movwf	(_responsePortNum+2)& (0+255),b
  7405                           
  7406                           ; BSR set to: 1
  7407  00063C  0100               	movlb	0	; () banked
  7408  00063E  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7412  000640  0E20               	movlw	32
  7413  000642  0101               	movlb	1	; () banked
  7414  000644  19F9               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7415  000646  B4D8               	btfsc	status,2,c
  7416  000648  D002               	goto	l494
  7417                           
  7418                           ; BSR set to: 1
  7419                           ;MOTEapp.c: 661: {
  7420                           ;MOTEapp.c: 662: bufferReadPos++;
  7421  00064A  0100               	movlb	0	; () banked
  7422  00064C  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7423  00064E                     l494:
  7424                           
  7425                           ;MOTEapp.c: 663: }
  7426                           ;MOTEapp.c: 664: }
  7427                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ; BSR set to: 0
  7432  00064E  0E00               	movlw	0
  7433  000650  0100               	movlb	0	; () banked
  7434  000652  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7435  000654                     l10790:
  7436                           
  7437                           ; BSR set to: 0
  7438  000654  0E3F               	movlw	63
  7439  000656  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7440  000658  D001               	goto	l495
  7441  00065A  D023               	goto	u9420
  7442  00065C                     l495:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;MOTEapp.c: 667: {
  7446                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7447                           
  7448                           ; BSR set to: 0
  7449  00065C  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7450  00065E  0D01               	mullw	1
  7451  000660  0E64               	movlw	low _moduleResonseBuffer
  7452  000662  24F3               	addwf	prodl,w,c
  7453  000664  6ED9               	movwf	fsr2l,c
  7454  000666  0E01               	movlw	high _moduleResonseBuffer
  7455  000668  20F4               	addwfc	prodh,w,c
  7456  00066A  6EDA               	movwf	fsr2h,c
  7457  00066C  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7458  00066E  0D01               	mullw	1
  7459  000670  0EA4               	movlw	low _responseData
  7460  000672  24F3               	addwf	prodl,w,c
  7461  000674  6EE1               	movwf	fsr1l,c
  7462  000676  0E01               	movlw	high _responseData
  7463  000678  20F4               	addwfc	prodh,w,c
  7464  00067A  6EE2               	movwf	fsr1h,c
  7465  00067C  CFDF FFE7          	movff	indf2,indf1
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7469  000680  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7470  000682  0D01               	mullw	1
  7471  000684  0EA4               	movlw	low _responseData
  7472  000686  24F3               	addwf	prodl,w,c
  7473  000688  6ED9               	movwf	fsr2l,c
  7474  00068A  0E01               	movlw	high _responseData
  7475  00068C  20F4               	addwfc	prodh,w,c
  7476  00068E  6EDA               	movwf	fsr2h,c
  7477  000690  50DF               	movf	indf2,w,c
  7478  000692  B4D8               	btfsc	status,2,c
  7479  000694  D002               	goto	l497
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;MOTEapp.c: 671: {
  7483                           ;MOTEapp.c: 672: bufferReadPos++;
  7484  000696  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7485                           
  7486                           ;MOTEapp.c: 673: } else {
  7487  000698  D002               	goto	l498
  7488  00069A                     l497:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7492                           
  7493                           ; BSR set to: 0
  7494  00069A  0E40               	movlw	64
  7495  00069C  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7496  00069E                     l498:
  7497                           
  7498                           ; BSR set to: 0
  7499                           
  7500                           ; BSR set to: 0
  7501  00069E  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7502  0006A0  D7D9               	goto	l10790
  7503  0006A2                     u9420:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;MOTEapp.c: 675: }
  7507                           ;MOTEapp.c: 676: }
  7508                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7509  0006A2  8E89               	bsf	3977,7,c	;volatile
  7510                           
  7511                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7512  0006A4  9C89               	bcf	3977,6,c	;volatile
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7516  0006A6  0E54               	movlw	low STR_91
  7517  0006A8  6F72               	movwf	oled_putString@string& (0+255),b
  7518  0006AA  0E7B               	movlw	high STR_91
  7519  0006AC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7520  0006AE  0E00               	movlw	0
  7521  0006B0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7522  0006B2  0E02               	movlw	2
  7523  0006B4  6F75               	movwf	oled_putString@start_page& (0+255),b
  7524  0006B6  EC27  F026         	call	_oled_putString	;wreg free
  7525                           
  7526                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7527  0006BA  0ECC               	movlw	low STR_92
  7528  0006BC  0100               	movlb	0	; () banked
  7529  0006BE  6F72               	movwf	oled_putString@string& (0+255),b
  7530  0006C0  0E7A               	movlw	high STR_92
  7531  0006C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7532  0006C4  0E00               	movlw	0
  7533  0006C6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7534  0006C8  0E03               	movlw	3
  7535  0006CA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7536  0006CC  EC27  F026         	call	_oled_putString	;wreg free
  7537                           
  7538                           ;MOTEapp.c: 683: }
  7539  0006D0  D05D               	goto	l504
  7540  0006D2                     l492:
  7541                           
  7542                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7543  0006D2  0E64               	movlw	low _moduleResonseBuffer
  7544  0006D4  0100               	movlb	0	; () banked
  7545  0006D6  6F60               	movwf	strncmp@s1& (0+255),b
  7546  0006D8  0E01               	movlw	high _moduleResonseBuffer
  7547  0006DA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7548  0006DC  0EB1               	movlw	low STR_93
  7549  0006DE  6F62               	movwf	strncmp@s2& (0+255),b
  7550  0006E0  0E7F               	movlw	high STR_93
  7551  0006E2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7552  0006E4  0E00               	movlw	0
  7553  0006E6  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7554  0006E8  0E06               	movlw	6
  7555  0006EA  6F64               	movwf	strncmp@len& (0+255),b
  7556  0006EC  EC3D  F023         	call	_strncmp	;wreg free
  7557  0006F0  0100               	movlb	0	; () banked
  7558  0006F2  5160               	movf	?_strncmp& (0+255),w,b
  7559  0006F4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7560  0006F6  A4D8               	btfss	status,2,c
  7561  0006F8  D00C               	goto	l500
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;MOTEapp.c: 685: {
  7565                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7566  0006FA  9C89               	bcf	3977,6,c	;volatile
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7570  0006FC  0EBA               	movlw	low STR_94
  7571  0006FE  6F72               	movwf	oled_putString@string& (0+255),b
  7572  000700  0E7B               	movlw	high STR_94
  7573  000702  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7574  000704  0E00               	movlw	0
  7575  000706  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7576  000708  0E03               	movlw	3
  7577  00070A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7578  00070C  EC27  F026         	call	_oled_putString	;wreg free
  7579                           
  7580                           ;MOTEapp.c: 688: }
  7581  000710  D03D               	goto	l504
  7582  000712                     l500:
  7583                           
  7584                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7585  000712  0E64               	movlw	low _moduleResonseBuffer
  7586  000714  0100               	movlb	0	; () banked
  7587  000716  6F60               	movwf	strncmp@s1& (0+255),b
  7588  000718  0E01               	movlw	high _moduleResonseBuffer
  7589  00071A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7590  00071C  0EA3               	movlw	low STR_95
  7591  00071E  6F62               	movwf	strncmp@s2& (0+255),b
  7592  000720  0E7F               	movlw	high STR_95
  7593  000722  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7594  000724  0E00               	movlw	0
  7595  000726  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7596  000728  0E06               	movlw	6
  7597  00072A  6F64               	movwf	strncmp@len& (0+255),b
  7598  00072C  EC3D  F023         	call	_strncmp	;wreg free
  7599  000730  0100               	movlb	0	; () banked
  7600  000732  5160               	movf	?_strncmp& (0+255),w,b
  7601  000734  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7602  000736  A4D8               	btfss	status,2,c
  7603  000738  D00B               	goto	l502
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;MOTEapp.c: 690: {
  7607                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7608  00073A  0E96               	movlw	low STR_96
  7609  00073C  6F72               	movwf	oled_putString@string& (0+255),b
  7610  00073E  0E7A               	movlw	high STR_96
  7611  000740  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7612  000742  0E00               	movlw	0
  7613  000744  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7614  000746  0E03               	movlw	3
  7615  000748  6F75               	movwf	oled_putString@start_page& (0+255),b
  7616  00074A  EC27  F026         	call	_oled_putString	;wreg free
  7617                           
  7618                           ;MOTEapp.c: 692: }
  7619  00074E  D01E               	goto	l504
  7620  000750                     l502:
  7621                           
  7622                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7623  000750  0E64               	movlw	low _moduleResonseBuffer
  7624  000752  0100               	movlb	0	; () banked
  7625  000754  6F60               	movwf	strncmp@s1& (0+255),b
  7626  000756  0E01               	movlw	high _moduleResonseBuffer
  7627  000758  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7628  00075A  0E9C               	movlw	low STR_97
  7629  00075C  6F62               	movwf	strncmp@s2& (0+255),b
  7630  00075E  0E7F               	movlw	high STR_97
  7631  000760  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7632  000762  0E00               	movlw	0
  7633  000764  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7634  000766  0E06               	movlw	6
  7635  000768  6F64               	movwf	strncmp@len& (0+255),b
  7636  00076A  EC3D  F023         	call	_strncmp	;wreg free
  7637  00076E  0100               	movlb	0	; () banked
  7638  000770  5160               	movf	?_strncmp& (0+255),w,b
  7639  000772  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7640  000774  A4D8               	btfss	status,2,c
  7641  000776  D00A               	goto	l504
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;MOTEapp.c: 694: {
  7645                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7646  000778  0EB3               	movlw	low STR_98
  7647  00077A  6F72               	movwf	oled_putString@string& (0+255),b
  7648  00077C  0E7C               	movlw	high STR_98
  7649  00077E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7650  000780  0E00               	movlw	0
  7651  000782  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7652  000784  0E03               	movlw	3
  7653  000786  6F75               	movwf	oled_putString@start_page& (0+255),b
  7654  000788  EC27  F026         	call	_oled_putString	;wreg free
  7655  00078C                     l504:
  7656                           
  7657                           ;MOTEapp.c: 696: }
  7658                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7659  00078C  0EFA               	movlw	250
  7660  00078E  0100               	movlb	0	; () banked
  7661  000790  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7662  000792  0E58               	movlw	88
  7663  000794                     u11117:
  7664  000794  2EE8               	decfsz	wreg,f,c
  7665  000796  D7FE               	bra	u11117
  7666  000798  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7667  00079A  D7FC               	bra	u11117
  7668  00079C  F000               	nop	
  7669  00079E                     l490:
  7670                           
  7671                           ;MOTEapp.c: 698: }
  7672                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7673  00079E  0100               	movlb	0	; () banked
  7674  0007A0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7675  0007A2  A4D8               	btfss	status,2,c
  7676  0007A4  D003               	goto	u9470
  7677                           
  7678                           ; BSR set to: 0
  7679  0007A6  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7680  0007A8  B4D8               	btfsc	status,2,c
  7681  0007AA  0012               	return	
  7682  0007AC                     u9470:
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;MOTEapp.c: 700: {
  7686                           ;MOTEapp.c: 701: oled_clear();
  7687                           
  7688                           ; BSR set to: 0
  7689  0007AC  EC8E  F02C         	call	_oled_clear	;wreg free
  7690                           
  7691                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7692  0007B0  0E21               	movlw	low STR_75
  7693  0007B2  0100               	movlb	0	; () banked
  7694  0007B4  6F72               	movwf	oled_putString@string& (0+255),b
  7695  0007B6  0E7B               	movlw	high STR_75
  7696  0007B8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7697  0007BA  0E00               	movlw	0
  7698  0007BC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7699  0007BE  0E00               	movlw	0
  7700  0007C0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7701  0007C2  EC27  F026         	call	_oled_putString	;wreg free
  7702                           
  7703                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  7704  0007C6  0E87               	movlw	low STR_76
  7705  0007C8  0100               	movlb	0	; () banked
  7706  0007CA  6F72               	movwf	oled_putString@string& (0+255),b
  7707  0007CC  0E7B               	movlw	high STR_76
  7708  0007CE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7709  0007D0  0E00               	movlw	0
  7710  0007D2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7711  0007D4  0E01               	movlw	1
  7712  0007D6  6F75               	movwf	oled_putString@start_page& (0+255),b
  7713  0007D8  EC27  F026         	call	_oled_putString	;wreg free
  7714                           
  7715                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  7716  0007DC  0E83               	movlw	low STR_77
  7717  0007DE  0100               	movlb	0	; () banked
  7718  0007E0  6F72               	movwf	oled_putString@string& (0+255),b
  7719  0007E2  0E7C               	movlw	high STR_77
  7720  0007E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7721  0007E6  0E00               	movlw	0
  7722  0007E8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7723  0007EA  0E03               	movlw	3
  7724  0007EC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7725  0007EE  EC27  F026         	call	_oled_putString	;wreg free
  7726                           
  7727                           ;MOTEapp.c: 705: runningState = runningUplink;
  7728  0007F2  0E06               	movlw	6
  7729  0007F4  0100               	movlb	0	; () banked
  7730  0007F6  6FF3               	movwf	_runningState& (0+255),b
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;MOTEapp.c: 706: }
  7734                           ;MOTEapp.c: 707: break;
  7735  0007F8  0012               	return	
  7736  0007FA                     
  7737                           ; BSR set to: 0
  7738                           ;MOTEapp.c: 709: if (changeStates)
  7739                           
  7740                           ; BSR set to: 0
  7741  0007FA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7742  0007FC  B4D8               	btfsc	status,2,c
  7743  0007FE  D027               	goto	l509
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;MOTEapp.c: 710: {
  7747                           ;MOTEapp.c: 711: oled_clear();
  7748  000800  EC8E  F02C         	call	_oled_clear	;wreg free
  7749                           
  7750                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  7751  000804  0E63               	movlw	low STR_102
  7752  000806  0100               	movlb	0	; () banked
  7753  000808  6F72               	movwf	oled_putString@string& (0+255),b
  7754  00080A  0E7C               	movlw	high STR_102
  7755  00080C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7756  00080E  0E00               	movlw	0
  7757  000810  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7758  000812  0E00               	movlw	0
  7759  000814  6F75               	movwf	oled_putString@start_page& (0+255),b
  7760  000816  EC27  F026         	call	_oled_putString	;wreg free
  7761                           
  7762                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  7763  00081A  0E53               	movlw	low STR_103
  7764  00081C  0100               	movlb	0	; () banked
  7765  00081E  6F72               	movwf	oled_putString@string& (0+255),b
  7766  000820  0E7C               	movlw	high STR_103
  7767  000822  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7768  000824  0E00               	movlw	0
  7769  000826  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7770  000828  0E01               	movlw	1
  7771  00082A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7772  00082C  EC27  F026         	call	_oled_putString	;wreg free
  7773                           
  7774                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  7775  000830  0E83               	movlw	low STR_77
  7776  000832  0100               	movlb	0	; () banked
  7777  000834  6F72               	movwf	oled_putString@string& (0+255),b
  7778  000836  0E7C               	movlw	high STR_77
  7779  000838  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7780  00083A  0E00               	movlw	0
  7781  00083C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7782  00083E  0E03               	movlw	3
  7783  000840  6F75               	movwf	oled_putString@start_page& (0+255),b
  7784  000842  EC27  F026         	call	_oled_putString	;wreg free
  7785                           
  7786                           ;MOTEapp.c: 715: runningState = runningSensor;
  7787  000846  0E01               	movlw	1
  7788  000848  0100               	movlb	0	; () banked
  7789  00084A  6FF3               	movwf	_runningState& (0+255),b
  7790                           
  7791                           ;MOTEapp.c: 716: }
  7792  00084C  0012               	return	
  7793  00084E                     l509:
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;MOTEapp.c: 717: else if (selectButton)
  7797                           
  7798                           ; BSR set to: 0
  7799  00084E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7800  000850  B4D8               	btfsc	status,2,c
  7801  000852  0012               	return	
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;MOTEapp.c: 718: {
  7805                           ;MOTEapp.c: 720: oled_clear();
  7806  000854  EC8E  F02C         	call	_oled_clear	;wreg free
  7807                           
  7808                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  7809  000858  9E89               	bcf	3977,7,c	;volatile
  7810                           
  7811                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  7812  00085A  0E42               	movlw	low STR_105
  7813  00085C  0100               	movlb	0	; () banked
  7814  00085E  6F72               	movwf	oled_putString@string& (0+255),b
  7815  000860  0E7C               	movlw	high STR_105
  7816  000862  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7817  000864  0E00               	movlw	0
  7818  000866  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7819  000868  0E00               	movlw	0
  7820  00086A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7821  00086C  EC27  F026         	call	_oled_putString	;wreg free
  7822                           
  7823                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  7824  000870  0ECA               	movlw	low STR_106
  7825  000872  0100               	movlb	0	; () banked
  7826  000874  6F72               	movwf	oled_putString@string& (0+255),b
  7827  000876  0E7E               	movlw	high STR_106
  7828  000878  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7829  00087A  0E00               	movlw	0
  7830  00087C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7831  00087E  0E01               	movlw	1
  7832  000880  6F75               	movwf	oled_putString@start_page& (0+255),b
  7833  000882  EC27  F026         	call	_oled_putString	;wreg free
  7834                           
  7835                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  7836  000886  0EF7               	movlw	low _responsePortNum
  7837  000888  0100               	movlb	0	; () banked
  7838  00088A  6F72               	movwf	oled_putString@string& (0+255),b
  7839  00088C  0E01               	movlw	high _responsePortNum
  7840  00088E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7841  000890  0E09               	movlw	9
  7842  000892  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7843  000894  0E01               	movlw	1
  7844  000896  6F75               	movwf	oled_putString@start_page& (0+255),b
  7845  000898  EC27  F026         	call	_oled_putString	;wreg free
  7846                           
  7847                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  7848  00089C  0E51               	movlw	low (STR_86+5)
  7849  00089E  0100               	movlb	0	; () banked
  7850  0008A0  6F72               	movwf	oled_putString@string& (0+255),b
  7851  0008A2  0E7E               	movlw	high (STR_86+5)
  7852  0008A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7853  0008A6  0E00               	movlw	0
  7854  0008A8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7855  0008AA  0E02               	movlw	2
  7856  0008AC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7857  0008AE  EC27  F026         	call	_oled_putString	;wreg free
  7858                           
  7859                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  7860  0008B2  0EA4               	movlw	low _responseData
  7861  0008B4  0100               	movlb	0	; () banked
  7862  0008B6  6F72               	movwf	oled_putString@string& (0+255),b
  7863  0008B8  0E01               	movlw	high _responseData
  7864  0008BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7865  0008BC  0E06               	movlw	6
  7866  0008BE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7867  0008C0  0E02               	movlw	2
  7868  0008C2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7869  0008C4  EC27  F026         	call	_oled_putString	;wreg free
  7870                           
  7871                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  7872  0008C8  0EAE               	movlw	low (_responseData+10)
  7873  0008CA  0100               	movlb	0	; () banked
  7874  0008CC  6F72               	movwf	oled_putString@string& (0+255),b
  7875  0008CE  0E01               	movlw	high (_responseData+10)
  7876  0008D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7877  0008D2  0E00               	movlw	0
  7878  0008D4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7879  0008D6  0E03               	movlw	3
  7880  0008D8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7881  0008DA  EC27  F026         	call	_oled_putString	;wreg free
  7882                           
  7883                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  7884  0008DE  0E0B               	movlw	11
  7885  0008E0  0100               	movlb	0	; () banked
  7886  0008E2  6FF3               	movwf	_runningState& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 735: }
  7890                           ;MOTEapp.c: 736: break;
  7891                           
  7892                           ; BSR set to: 0
  7893  0008E4  0012               	return	
  7894  0008E6                     
  7895                           ; BSR set to: 0
  7896                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  7897                           
  7898                           ; BSR set to: 0
  7899  0008E6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7900  0008E8  A4D8               	btfss	status,2,c
  7901  0008EA  D003               	goto	u9510
  7902                           
  7903                           ; BSR set to: 0
  7904  0008EC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7905  0008EE  B4D8               	btfsc	status,2,c
  7906  0008F0  0012               	return	
  7907  0008F2                     u9510:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;MOTEapp.c: 739: {
  7911                           ;MOTEapp.c: 740: oled_clear();
  7912                           
  7913                           ; BSR set to: 0
  7914  0008F2  EC8E  F02C         	call	_oled_clear	;wreg free
  7915                           
  7916                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  7917  0008F6  0E10               	movlw	low STR_78
  7918  0008F8  0100               	movlb	0	; () banked
  7919  0008FA  6F72               	movwf	oled_putString@string& (0+255),b
  7920  0008FC  0E7B               	movlw	high STR_78
  7921  0008FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7922  000900  0E00               	movlw	0
  7923  000902  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7924  000904  0E00               	movlw	0
  7925  000906  6F75               	movwf	oled_putString@start_page& (0+255),b
  7926  000908  EC27  F026         	call	_oled_putString	;wreg free
  7927                           
  7928                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  7929  00090C  0EFF               	movlw	low STR_79
  7930  00090E  0100               	movlb	0	; () banked
  7931  000910  6F72               	movwf	oled_putString@string& (0+255),b
  7932  000912  0E7A               	movlw	high STR_79
  7933  000914  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7934  000916  0E00               	movlw	0
  7935  000918  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7936  00091A  0E01               	movlw	1
  7937  00091C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7938  00091E  EC27  F026         	call	_oled_putString	;wreg free
  7939                           
  7940                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  7941  000922  0E83               	movlw	low STR_77
  7942  000924  0100               	movlb	0	; () banked
  7943  000926  6F72               	movwf	oled_putString@string& (0+255),b
  7944  000928  0E7C               	movlw	high STR_77
  7945  00092A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7946  00092C  0E00               	movlw	0
  7947  00092E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7948  000930  0E03               	movlw	3
  7949  000932  6F75               	movwf	oled_putString@start_page& (0+255),b
  7950  000934  EC27  F026         	call	_oled_putString	;wreg free
  7951                           
  7952                           ;MOTEapp.c: 744: runningState = runningDownlink;
  7953  000938  0E0A               	movlw	10
  7954  00093A  0100               	movlb	0	; () banked
  7955  00093C  6FF3               	movwf	_runningState& (0+255),b
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;MOTEapp.c: 745: }
  7959                           ;MOTEapp.c: 746: break;
  7960  00093E  0012               	return	
  7961  000940                     
  7962                           ; BSR set to: 0
  7963                           ;MOTEapp.c: 748: if (changeStates)
  7964                           
  7965                           ; BSR set to: 0
  7966  000940  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7967  000942  B4D8               	btfsc	status,2,c
  7968  000944  D036               	goto	l517
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;MOTEapp.c: 749: {
  7972                           ;MOTEapp.c: 750: oled_clear();
  7973  000946  EC8E  F02C         	call	_oled_clear	;wreg free
  7974                           
  7975                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  7976  00094A  0E20               	movlw	low STR_111
  7977  00094C  0100               	movlb	0	; () banked
  7978  00094E  6F72               	movwf	oled_putString@string& (0+255),b
  7979  000950  0E7C               	movlw	high STR_111
  7980  000952  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7981  000954  0E00               	movlw	0
  7982  000956  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7983  000958  0E00               	movlw	0
  7984  00095A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7985  00095C  EC27  F026         	call	_oled_putString	;wreg free
  7986                           
  7987                           ;MOTEapp.c: 752: if (menuTimeout)
  7988  000960  0100               	movlb	0	; () banked
  7989  000962  51FB               	movf	_menuTimeout& (0+255),w,b
  7990  000964  B4D8               	btfsc	status,2,c
  7991  000966  D00B               	goto	l518
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  7995  000968  0ED3               	movlw	low STR_112
  7996  00096A  6F72               	movwf	oled_putString@string& (0+255),b
  7997  00096C  0E7C               	movlw	high STR_112
  7998  00096E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7999  000970  0E00               	movlw	0
  8000  000972  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8001  000974  0E02               	movlw	2
  8002  000976  6F75               	movwf	oled_putString@start_page& (0+255),b
  8003  000978  EC27  F026         	call	_oled_putString	;wreg free
  8004  00097C  D00B               	goto	l519
  8005  00097E                     l518:
  8006                           
  8007                           ;MOTEapp.c: 754: else
  8008                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  8009  00097E  0EE2               	movlw	low STR_113
  8010  000980  0100               	movlb	0	; () banked
  8011  000982  6F72               	movwf	oled_putString@string& (0+255),b
  8012  000984  0E7C               	movlw	high STR_113
  8013  000986  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8014  000988  0E00               	movlw	0
  8015  00098A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8016  00098C  0E02               	movlw	2
  8017  00098E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8018  000990  EC27  F026         	call	_oled_putString	;wreg free
  8019  000994                     l519:
  8020                           
  8021                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  8022  000994  0E73               	movlw	low STR_114
  8023  000996  0100               	movlb	0	; () banked
  8024  000998  6F72               	movwf	oled_putString@string& (0+255),b
  8025  00099A  0E7C               	movlw	high STR_114
  8026  00099C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8027  00099E  0E00               	movlw	0
  8028  0009A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8029  0009A2  0E03               	movlw	3
  8030  0009A4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8031  0009A6  EC27  F026         	call	_oled_putString	;wreg free
  8032                           
  8033                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  8034  0009AA  0E0C               	movlw	12
  8035  0009AC  0100               	movlb	0	; () banked
  8036  0009AE  6FF3               	movwf	_runningState& (0+255),b
  8037                           
  8038                           ;MOTEapp.c: 758: }
  8039  0009B0  0012               	return	
  8040  0009B2                     l517:
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;MOTEapp.c: 759: else if (selectButton)
  8044                           
  8045                           ; BSR set to: 0
  8046  0009B2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8047  0009B4  B4D8               	btfsc	status,2,c
  8048  0009B6  0012               	return	
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;MOTEapp.c: 760: {
  8052                           ;MOTEapp.c: 761: oled_clear();
  8053  0009B8  EC8E  F02C         	call	_oled_clear	;wreg free
  8054                           
  8055                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  8056  0009BC  0E63               	movlw	low STR_102
  8057  0009BE  0100               	movlb	0	; () banked
  8058  0009C0  6F72               	movwf	oled_putString@string& (0+255),b
  8059  0009C2  0E7C               	movlw	high STR_102
  8060  0009C4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8061  0009C6  0E00               	movlw	0
  8062  0009C8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8063  0009CA  0E00               	movlw	0
  8064  0009CC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8065  0009CE  EC27  F026         	call	_oled_putString	;wreg free
  8066                           
  8067                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  8068  0009D2  0E80               	movlw	low STR_116
  8069  0009D4  0100               	movlb	0	; () banked
  8070  0009D6  6F72               	movwf	oled_putString@string& (0+255),b
  8071  0009D8  0E7F               	movlw	high STR_116
  8072  0009DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8073  0009DC  0E00               	movlw	0
  8074  0009DE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8075  0009E0  0E01               	movlw	1
  8076  0009E2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8077  0009E4  EC27  F026         	call	_oled_putString	;wreg free
  8078                           
  8079                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8080  0009E8  0E79               	movlw	low STR_117
  8081  0009EA  0100               	movlb	0	; () banked
  8082  0009EC  6F72               	movwf	oled_putString@string& (0+255),b
  8083  0009EE  0E7F               	movlw	high STR_117
  8084  0009F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8085  0009F2  0E00               	movlw	0
  8086  0009F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8087  0009F6  0E02               	movlw	2
  8088  0009F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8089  0009FA  EC27  F026         	call	_oled_putString	;wreg free
  8090                           
  8091                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8092  0009FE  0EFA               	movlw	low STR_118
  8093  000A00  0100               	movlb	0	; () banked
  8094  000A02  6F72               	movwf	oled_putString@string& (0+255),b
  8095  000A04  0E7F               	movlw	high STR_118
  8096  000A06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8097  000A08  0E0A               	movlw	10
  8098  000A0A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8099  000A0C  0E02               	movlw	2
  8100  000A0E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8101  000A10  EC27  F026         	call	_oled_putString	;wreg free
  8102                           
  8103                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8104  000A14  EC06  F025         	call	_moteApp_setSensorsInput	;wreg free
  8105                           
  8106                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8107  000A18  0E02               	movlw	2
  8108  000A1A  0100               	movlb	0	; () banked
  8109  000A1C  6FF3               	movwf	_runningState& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;MOTEapp.c: 769: }
  8113                           ;MOTEapp.c: 770: break;
  8114                           
  8115                           ; BSR set to: 0
  8116  000A1E  0012               	return	
  8117  000A20                     
  8118                           ; BSR set to: 0
  8119                           ;MOTEapp.c: 772: if (changeStates)
  8120                           
  8121                           ; BSR set to: 0
  8122  000A20  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8123  000A22  B4D8               	btfsc	status,2,c
  8124  000A24  D09B               	goto	l523
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;MOTEapp.c: 773: {
  8128                           ;MOTEapp.c: 774: oled_clear();
  8129  000A26  EC8E  F02C         	call	_oled_clear	;wreg free
  8130                           
  8131                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8132  000A2A  0E76               	movlw	low STR_119
  8133  000A2C  0100               	movlb	0	; () banked
  8134  000A2E  6F72               	movwf	oled_putString@string& (0+255),b
  8135  000A30  0E7B               	movlw	high STR_119
  8136  000A32  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8137  000A34  0E00               	movlw	0
  8138  000A36  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8139  000A38  0E00               	movlw	0
  8140  000A3A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8141  000A3C  EC27  F026         	call	_oled_putString	;wreg free
  8142                           
  8143                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8144  000A40  0E65               	movlw	low STR_120
  8145  000A42  0100               	movlb	0	; () banked
  8146  000A44  6F72               	movwf	oled_putString@string& (0+255),b
  8147  000A46  0E7B               	movlw	high STR_120
  8148  000A48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8149  000A4A  0E00               	movlw	0
  8150  000A4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8151  000A4E  0E01               	movlw	1
  8152  000A50  6F75               	movwf	oled_putString@start_page& (0+255),b
  8153  000A52  EC27  F026         	call	_oled_putString	;wreg free
  8154                           
  8155                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8156  000A56  0E87               	movlw	low STR_121
  8157  000A58  0100               	movlb	0	; () banked
  8158  000A5A  6F72               	movwf	oled_putString@string& (0+255),b
  8159  000A5C  0E7F               	movlw	high STR_121
  8160  000A5E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8161  000A60  0E00               	movlw	0
  8162  000A62  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8163  000A64  0E02               	movlw	2
  8164  000A66  6F75               	movwf	oled_putString@start_page& (0+255),b
  8165  000A68  EC27  F026         	call	_oled_putString	;wreg free
  8166                           
  8167                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8168  000A6C  0EC2               	movlw	low STR_122
  8169  000A6E  0100               	movlb	0	; () banked
  8170  000A70  6F72               	movwf	oled_putString@string& (0+255),b
  8171  000A72  0E7F               	movlw	high STR_122
  8172  000A74  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8173  000A76  0E0C               	movlw	12
  8174  000A78  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8175  000A7A  0E02               	movlw	2
  8176  000A7C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8177  000A7E  EC27  F026         	call	_oled_putString	;wreg free
  8178                           
  8179                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8180  000A82  D048               	goto	l524
  8181  000A84                     
  8182                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8183                           
  8184                           ;MOTEapp.c: 783: case 0:
  8185  000A84  0ECB               	movlw	low (STR_169+11)
  8186  000A86  0100               	movlb	0	; () banked
  8187  000A88  6F72               	movwf	oled_putString@string& (0+255),b
  8188  000A8A  0E7D               	movlw	high (STR_169+11)
  8189  000A8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8190  000A8E  0E07               	movlw	7
  8191  000A90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8192  000A92  0E02               	movlw	2
  8193  000A94  6F75               	movwf	oled_putString@start_page& (0+255),b
  8194  000A96  EC27  F026         	call	_oled_putString	;wreg free
  8195                           
  8196                           ;MOTEapp.c: 785: break;
  8197  000A9A  D051               	goto	l527
  8198  000A9C                     
  8199                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8200  000A9C  0EE0               	movlw	low (STR_146+1)
  8201  000A9E  0100               	movlb	0	; () banked
  8202  000AA0  6F72               	movwf	oled_putString@string& (0+255),b
  8203  000AA2  0E7F               	movlw	high (STR_146+1)
  8204  000AA4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8205  000AA6  0E07               	movlw	7
  8206  000AA8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8207  000AAA  0E02               	movlw	2
  8208  000AAC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8209  000AAE  EC27  F026         	call	_oled_putString	;wreg free
  8210                           
  8211                           ;MOTEapp.c: 788: break;
  8212  000AB2  D045               	goto	l527
  8213  000AB4                     
  8214                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8215  000AB4  0EEC               	movlw	low (STR_147+1)
  8216  000AB6  0100               	movlb	0	; () banked
  8217  000AB8  6F72               	movwf	oled_putString@string& (0+255),b
  8218  000ABA  0E7F               	movlw	high (STR_147+1)
  8219  000ABC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8220  000ABE  0E07               	movlw	7
  8221  000AC0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8222  000AC2  0E02               	movlw	2
  8223  000AC4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8224  000AC6  EC27  F026         	call	_oled_putString	;wreg free
  8225                           
  8226                           ;MOTEapp.c: 791: break;
  8227  000ACA  D039               	goto	l527
  8228  000ACC                     
  8229                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8230  000ACC  0EE4               	movlw	low (STR_148+1)
  8231  000ACE  0100               	movlb	0	; () banked
  8232  000AD0  6F72               	movwf	oled_putString@string& (0+255),b
  8233  000AD2  0E7F               	movlw	high (STR_148+1)
  8234  000AD4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8235  000AD6  0E07               	movlw	7
  8236  000AD8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8237  000ADA  0E02               	movlw	2
  8238  000ADC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8239  000ADE  EC27  F026         	call	_oled_putString	;wreg free
  8240                           
  8241                           ;MOTEapp.c: 794: break;
  8242  000AE2  D02D               	goto	l527
  8243  000AE4                     
  8244                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8245  000AE4  0EE8               	movlw	low (STR_149+1)
  8246  000AE6  0100               	movlb	0	; () banked
  8247  000AE8  6F72               	movwf	oled_putString@string& (0+255),b
  8248  000AEA  0E7F               	movlw	high (STR_149+1)
  8249  000AEC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8250  000AEE  0E07               	movlw	7
  8251  000AF0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8252  000AF2  0E02               	movlw	2
  8253  000AF4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8254  000AF6  EC27  F026         	call	_oled_putString	;wreg free
  8255                           
  8256                           ;MOTEapp.c: 797: break;
  8257  000AFA  D021               	goto	l527
  8258  000AFC                     
  8259                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8260  000AFC  0EEF               	movlw	low STR_128
  8261  000AFE  0100               	movlb	0	; () banked
  8262  000B00  6F72               	movwf	oled_putString@string& (0+255),b
  8263  000B02  0E7F               	movlw	high STR_128
  8264  000B04  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8265  000B06  0E07               	movlw	7
  8266  000B08  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8267  000B0A  0E02               	movlw	2
  8268  000B0C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8269  000B0E  EC27  F026         	call	_oled_putString	;wreg free
  8270                           
  8271                           ;MOTEapp.c: 801: }
  8272                           
  8273                           ;MOTEapp.c: 800: break;
  8274  000B12  D015               	goto	l527
  8275  000B14                     l524:
  8276  000B14  0100               	movlb	0	; () banked
  8277  000B16  51FE               	movf	_periodicUpValue& (0+255),w,b
  8278                           
  8279                           ; Switch size 1, requested type "space"
  8280                           ; Number of cases is 6, Range of values is 0 to 5
  8281                           ; switch strategies available:
  8282                           ; Name         Instructions Cycles
  8283                           ; simple_byte           19    10 (average)
  8284                           ;	Chosen strategy is simple_byte
  8285  000B18  0A00               	xorlw	0	; case 0
  8286  000B1A  B4D8               	btfsc	status,2,c
  8287  000B1C  D7B3               	goto	l525
  8288  000B1E  0A01               	xorlw	1	; case 1
  8289  000B20  B4D8               	btfsc	status,2,c
  8290  000B22  D7BC               	goto	l528
  8291  000B24  0A03               	xorlw	3	; case 2
  8292  000B26  B4D8               	btfsc	status,2,c
  8293  000B28  D7C5               	goto	l529
  8294  000B2A  0A01               	xorlw	1	; case 3
  8295  000B2C  B4D8               	btfsc	status,2,c
  8296  000B2E  D7CE               	goto	l530
  8297  000B30  0A07               	xorlw	7	; case 4
  8298  000B32  B4D8               	btfsc	status,2,c
  8299  000B34  D7D7               	goto	l531
  8300  000B36  0A01               	xorlw	1	; case 5
  8301  000B38  B4D8               	btfsc	status,2,c
  8302  000B3A  D7E0               	goto	l532
  8303  000B3C  D7A3               	goto	l525
  8304  000B3E                     l527:
  8305                           
  8306                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8307                           
  8308                           ; BSR set to: 0
  8309  000B3E  0E73               	movlw	low STR_114
  8310  000B40  0100               	movlb	0	; () banked
  8311  000B42  6F72               	movwf	oled_putString@string& (0+255),b
  8312  000B44  0E7C               	movlw	high STR_114
  8313  000B46  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8314  000B48  0E00               	movlw	0
  8315  000B4A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8316  000B4C  0E03               	movlw	3
  8317  000B4E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8318  000B50  EC27  F026         	call	_oled_putString	;wreg free
  8319                           
  8320                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8321  000B54  0E0D               	movlw	13
  8322  000B56  0100               	movlb	0	; () banked
  8323  000B58  6FF3               	movwf	_runningState& (0+255),b
  8324                           
  8325                           ;MOTEapp.c: 804: }
  8326  000B5A  0012               	return	
  8327  000B5C                     l523:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;MOTEapp.c: 805: else if (selectButton)
  8331                           
  8332                           ; BSR set to: 0
  8333  000B5C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8334  000B5E  B4D8               	btfsc	status,2,c
  8335  000B60  0012               	return	
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;MOTEapp.c: 806: {
  8339                           ;MOTEapp.c: 807: if (menuTimeout)
  8340  000B62  51FB               	movf	_menuTimeout& (0+255),w,b
  8341  000B64  B4D8               	btfsc	status,2,c
  8342  000B66  D00D               	goto	l535
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;MOTEapp.c: 808: {
  8346                           ;MOTEapp.c: 809: menuTimeout = 0;
  8347  000B68  0E00               	movlw	0
  8348  000B6A  6FFB               	movwf	_menuTimeout& (0+255),b
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8352  000B6C  0EE2               	movlw	low STR_113
  8353  000B6E  6F72               	movwf	oled_putString@string& (0+255),b
  8354  000B70  0E7C               	movlw	high STR_113
  8355  000B72  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8356  000B74  0E00               	movlw	0
  8357  000B76  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8358  000B78  0E02               	movlw	2
  8359  000B7A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8360  000B7C  EC27  F026         	call	_oled_putString	;wreg free
  8361                           
  8362                           ;MOTEapp.c: 811: }
  8363  000B80  0012               	return	
  8364  000B82                     l535:
  8365                           
  8366                           ;MOTEapp.c: 812: else
  8367                           ;MOTEapp.c: 813: {
  8368                           ;MOTEapp.c: 814: menuTimeout = 1;
  8369  000B82  0E01               	movlw	1
  8370  000B84  0100               	movlb	0	; () banked
  8371  000B86  6FFB               	movwf	_menuTimeout& (0+255),b
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8375  000B88  0ED3               	movlw	low STR_112
  8376  000B8A  6F72               	movwf	oled_putString@string& (0+255),b
  8377  000B8C  0E7C               	movlw	high STR_112
  8378  000B8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8379  000B90  0E00               	movlw	0
  8380  000B92  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8381  000B94  0E02               	movlw	2
  8382  000B96  6F75               	movwf	oled_putString@start_page& (0+255),b
  8383  000B98  EC27  F026         	call	_oled_putString	;wreg free
  8384                           
  8385                           ;MOTEapp.c: 816: }
  8386                           ;MOTEapp.c: 817: }
  8387                           ;MOTEapp.c: 818: break;
  8388  000B9C  0012               	return	
  8389  000B9E                     
  8390                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8391  000B9E  0100               	movlb	0	; () banked
  8392  000BA0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8393  000BA2  A4D8               	btfss	status,2,c
  8394  000BA4  D003               	goto	u9590
  8395                           
  8396                           ; BSR set to: 0
  8397  000BA6  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8398  000BA8  B4D8               	btfsc	status,2,c
  8399  000BAA  0012               	return	
  8400  000BAC                     u9590:
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;MOTEapp.c: 822: {
  8404                           ;MOTEapp.c: 823: oled_clear();
  8405                           
  8406                           ; BSR set to: 0
  8407  000BAC  EC8E  F02C         	call	_oled_clear	;wreg free
  8408                           
  8409                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8410  000BB0  0E63               	movlw	low STR_102
  8411  000BB2  0100               	movlb	0	; () banked
  8412  000BB4  6F72               	movwf	oled_putString@string& (0+255),b
  8413  000BB6  0E7C               	movlw	high STR_102
  8414  000BB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8415  000BBA  0E00               	movlw	0
  8416  000BBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8417  000BBE  0E00               	movlw	0
  8418  000BC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  8419  000BC2  EC27  F026         	call	_oled_putString	;wreg free
  8420                           
  8421                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8422  000BC6  0E53               	movlw	low STR_103
  8423  000BC8  0100               	movlb	0	; () banked
  8424  000BCA  6F72               	movwf	oled_putString@string& (0+255),b
  8425  000BCC  0E7C               	movlw	high STR_103
  8426  000BCE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8427  000BD0  0E00               	movlw	0
  8428  000BD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8429  000BD4  0E01               	movlw	1
  8430  000BD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8431  000BD8  EC27  F026         	call	_oled_putString	;wreg free
  8432                           
  8433                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8434  000BDC  0E83               	movlw	low STR_77
  8435  000BDE  0100               	movlb	0	; () banked
  8436  000BE0  6F72               	movwf	oled_putString@string& (0+255),b
  8437  000BE2  0E7C               	movlw	high STR_77
  8438  000BE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8439  000BE6  0E00               	movlw	0
  8440  000BE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8441  000BEA  0E03               	movlw	3
  8442  000BEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8443  000BEE  EC27  F026         	call	_oled_putString	;wreg free
  8444                           
  8445                           ;MOTEapp.c: 827: runningState = runningSensor;
  8446  000BF2  0E01               	movlw	1
  8447  000BF4  0100               	movlb	0	; () banked
  8448  000BF6  6FF3               	movwf	_runningState& (0+255),b
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;MOTEapp.c: 828: }
  8452                           ;MOTEapp.c: 829: break;
  8453  000BF8  0012               	return	
  8454  000BFA                     
  8455                           ; BSR set to: 0
  8456                           ;MOTEapp.c: 831: if (changeStates)
  8457                           
  8458                           ; BSR set to: 0
  8459  000BFA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8460  000BFC  B4D8               	btfsc	status,2,c
  8461  000BFE  D092               	goto	l546
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;MOTEapp.c: 832: {
  8465                           ;MOTEapp.c: 833: oled_clear();
  8466  000C00  EC8E  F02C         	call	_oled_clear	;wreg free
  8467                           
  8468                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8469  000C04  0EED               	movlw	low STR_135
  8470  000C06  0100               	movlb	0	; () banked
  8471  000C08  6F72               	movwf	oled_putString@string& (0+255),b
  8472  000C0A  0E7B               	movlw	high STR_135
  8473  000C0C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8474  000C0E  0E00               	movlw	0
  8475  000C10  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8476  000C12  0E00               	movlw	0
  8477  000C14  6F75               	movwf	oled_putString@start_page& (0+255),b
  8478  000C16  EC27  F026         	call	_oled_putString	;wreg free
  8479                           
  8480                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8481  000C1A  0E58               	movlw	low STR_136
  8482  000C1C  0100               	movlb	0	; () banked
  8483  000C1E  6F72               	movwf	oled_putString@string& (0+255),b
  8484  000C20  0E7E               	movlw	high STR_136
  8485  000C22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8486  000C24  0E00               	movlw	0
  8487  000C26  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8488  000C28  0E02               	movlw	2
  8489  000C2A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8490  000C2C  EC27  F026         	call	_oled_putString	;wreg free
  8491                           
  8492                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8493  000C30  0E73               	movlw	low STR_114
  8494  000C32  0100               	movlb	0	; () banked
  8495  000C34  6F72               	movwf	oled_putString@string& (0+255),b
  8496  000C36  0E7C               	movlw	high STR_114
  8497  000C38  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8498  000C3A  0E00               	movlw	0
  8499  000C3C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8500  000C3E  0E03               	movlw	3
  8501  000C40  6F75               	movwf	oled_putString@start_page& (0+255),b
  8502  000C42  EC27  F026         	call	_oled_putString	;wreg free
  8503                           
  8504                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  8505  000C46  0E03               	movlw	3
  8506  000C48  0100               	movlb	0	; () banked
  8507  000C4A  6FF3               	movwf	_runningState& (0+255),b
  8508                           
  8509                           ;MOTEapp.c: 840: switch (dataRateValue)
  8510  000C4C  D053               	goto	l543
  8511  000C4E                     
  8512                           ; BSR set to: 0
  8513                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  8514                           
  8515                           ; BSR set to: 0
  8516                           
  8517                           ;MOTEapp.c: 843: case 0:
  8518                           
  8519                           ; BSR set to: 0
  8520  000C4E  0EC7               	movlw	low STR_138
  8521  000C50  6F72               	movwf	oled_putString@string& (0+255),b
  8522  000C52  0E7F               	movlw	high STR_138
  8523  000C54  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8524  000C56  0E0A               	movlw	10
  8525  000C58  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8526  000C5A  0E02               	movlw	2
  8527  000C5C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8528  000C5E  EC27  F026         	call	_oled_putString	;wreg free
  8529                           
  8530                           ;MOTEapp.c: 845: break;
  8531  000C62  D060               	goto	l546
  8532  000C64                     
  8533                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  8534  000C64  0ECB               	movlw	low STR_139
  8535  000C66  0100               	movlb	0	; () banked
  8536  000C68  6F72               	movwf	oled_putString@string& (0+255),b
  8537  000C6A  0E7F               	movlw	high STR_139
  8538  000C6C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8539  000C6E  0E0A               	movlw	10
  8540  000C70  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8541  000C72  0E02               	movlw	2
  8542  000C74  6F75               	movwf	oled_putString@start_page& (0+255),b
  8543  000C76  EC27  F026         	call	_oled_putString	;wreg free
  8544                           
  8545                           ;MOTEapp.c: 848: break;
  8546  000C7A  D054               	goto	l546
  8547  000C7C                     
  8548                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  8549  000C7C  0ECF               	movlw	low STR_140
  8550  000C7E  0100               	movlb	0	; () banked
  8551  000C80  6F72               	movwf	oled_putString@string& (0+255),b
  8552  000C82  0E7F               	movlw	high STR_140
  8553  000C84  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8554  000C86  0E0A               	movlw	10
  8555  000C88  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8556  000C8A  0E02               	movlw	2
  8557  000C8C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8558  000C8E  EC27  F026         	call	_oled_putString	;wreg free
  8559                           
  8560                           ;MOTEapp.c: 851: break;
  8561  000C92  D048               	goto	l546
  8562  000C94                     
  8563                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  8564  000C94  0ED3               	movlw	low STR_141
  8565  000C96  0100               	movlb	0	; () banked
  8566  000C98  6F72               	movwf	oled_putString@string& (0+255),b
  8567  000C9A  0E7F               	movlw	high STR_141
  8568  000C9C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8569  000C9E  0E0A               	movlw	10
  8570  000CA0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8571  000CA2  0E02               	movlw	2
  8572  000CA4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8573  000CA6  EC27  F026         	call	_oled_putString	;wreg free
  8574                           
  8575                           ;MOTEapp.c: 854: break;
  8576  000CAA  D03C               	goto	l546
  8577  000CAC                     
  8578                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  8579  000CAC  0ED7               	movlw	low STR_142
  8580  000CAE  0100               	movlb	0	; () banked
  8581  000CB0  6F72               	movwf	oled_putString@string& (0+255),b
  8582  000CB2  0E7F               	movlw	high STR_142
  8583  000CB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8584  000CB6  0E0A               	movlw	10
  8585  000CB8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8586  000CBA  0E02               	movlw	2
  8587  000CBC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8588  000CBE  EC27  F026         	call	_oled_putString	;wreg free
  8589                           
  8590                           ;MOTEapp.c: 857: break;
  8591  000CC2  D030               	goto	l546
  8592  000CC4                     
  8593                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  8594  000CC4  0EDB               	movlw	low STR_143
  8595  000CC6  0100               	movlb	0	; () banked
  8596  000CC8  6F72               	movwf	oled_putString@string& (0+255),b
  8597  000CCA  0E7F               	movlw	high STR_143
  8598  000CCC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8599  000CCE  0E0A               	movlw	10
  8600  000CD0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8601  000CD2  0E02               	movlw	2
  8602  000CD4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8603  000CD6  EC27  F026         	call	_oled_putString	;wreg free
  8604                           
  8605                           ;MOTEapp.c: 860: break;
  8606  000CDA  D024               	goto	l546
  8607  000CDC                     
  8608                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  8609  000CDC  0EF3               	movlw	low STR_144
  8610  000CDE  0100               	movlb	0	; () banked
  8611  000CE0  6F72               	movwf	oled_putString@string& (0+255),b
  8612  000CE2  0E7F               	movlw	high STR_144
  8613  000CE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8614  000CE6  0E0A               	movlw	10
  8615  000CE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8616  000CEA  0E02               	movlw	2
  8617  000CEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8618  000CEE  EC27  F026         	call	_oled_putString	;wreg free
  8619                           
  8620                           ;MOTEapp.c: 864: }
  8621                           
  8622                           ;MOTEapp.c: 863: break;
  8623  000CF2  D018               	goto	l546
  8624  000CF4                     l543:
  8625  000CF4  0100               	movlb	0	; () banked
  8626  000CF6  51FC               	movf	_dataRateValue& (0+255),w,b
  8627                           
  8628                           ; Switch size 1, requested type "space"
  8629                           ; Number of cases is 7, Range of values is 0 to 6
  8630                           ; switch strategies available:
  8631                           ; Name         Instructions Cycles
  8632                           ; simple_byte           22    12 (average)
  8633                           ;	Chosen strategy is simple_byte
  8634  000CF8  0A00               	xorlw	0	; case 0
  8635  000CFA  B4D8               	btfsc	status,2,c
  8636  000CFC  D7A8               	goto	l544
  8637  000CFE  0A01               	xorlw	1	; case 1
  8638  000D00  B4D8               	btfsc	status,2,c
  8639  000D02  D7B0               	goto	l547
  8640  000D04  0A03               	xorlw	3	; case 2
  8641  000D06  B4D8               	btfsc	status,2,c
  8642  000D08  D7B9               	goto	l548
  8643  000D0A  0A01               	xorlw	1	; case 3
  8644  000D0C  B4D8               	btfsc	status,2,c
  8645  000D0E  D7C2               	goto	l549
  8646  000D10  0A07               	xorlw	7	; case 4
  8647  000D12  B4D8               	btfsc	status,2,c
  8648  000D14  D7CB               	goto	l550
  8649  000D16  0A01               	xorlw	1	; case 5
  8650  000D18  B4D8               	btfsc	status,2,c
  8651  000D1A  D7D4               	goto	l551
  8652  000D1C  0A03               	xorlw	3	; case 6
  8653  000D1E  B4D8               	btfsc	status,2,c
  8654  000D20  D7DD               	goto	l552
  8655  000D22  D795               	goto	l544
  8656  000D24                     l546:
  8657                           
  8658                           ;MOTEapp.c: 865: }
  8659                           ;MOTEapp.c: 866: if (selectButton)
  8660                           
  8661                           ; BSR set to: 0
  8662                           
  8663                           ; BSR set to: 0
  8664  000D24  0100               	movlb	0	; () banked
  8665  000D26  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8666  000D28  B4D8               	btfsc	status,2,c
  8667  000D2A  0012               	return	
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;MOTEapp.c: 867: {
  8671                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  8672  000D2C  0E05               	movlw	5
  8673  000D2E  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8674  000D30  D002               	goto	l554
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;MOTEapp.c: 869: {
  8678                           ;MOTEapp.c: 870: periodicUpValue++;
  8679  000D32  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8680                           
  8681                           ;MOTEapp.c: 871: } else {
  8682  000D34  D054               	goto	l556
  8683  000D36                     l554:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;MOTEapp.c: 872: periodicUpValue = 0;
  8687                           
  8688                           ; BSR set to: 0
  8689  000D36  0E00               	movlw	0
  8690  000D38  6FFE               	movwf	_periodicUpValue& (0+255),b
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;MOTEapp.c: 873: }
  8694                           ;MOTEapp.c: 875: switch (periodicUpValue)
  8695  000D3A  D051               	goto	l556
  8696  000D3C                     
  8697                           ; BSR set to: 0
  8698                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  8699                           
  8700                           ; BSR set to: 0
  8701                           
  8702                           ;MOTEapp.c: 878: case 0:
  8703                           
  8704                           ; BSR set to: 0
  8705  000D3C  0E09               	movlw	9
  8706  000D3E  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  8710  000D40  0EDB               	movlw	low STR_143
  8711  000D42  6F72               	movwf	oled_putString@string& (0+255),b
  8712  000D44  0E7F               	movlw	high STR_143
  8713  000D46  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8714  000D48  0E07               	movlw	7
  8715  000D4A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8716  000D4C  0E02               	movlw	2
  8717  000D4E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8718  000D50  EC27  F026         	call	_oled_putString	;wreg free
  8719                           
  8720                           ;MOTEapp.c: 881: break;
  8721  000D54  0012               	return	
  8722  000D56                     
  8723                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  8724  000D56  0E12               	movlw	18
  8725  000D58  0100               	movlb	0	; () banked
  8726  000D5A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  8730  000D5C  0EDF               	movlw	low STR_146
  8731  000D5E  6F72               	movwf	oled_putString@string& (0+255),b
  8732  000D60  0E7F               	movlw	high STR_146
  8733  000D62  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8734  000D64  0E07               	movlw	7
  8735  000D66  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8736  000D68  0E02               	movlw	2
  8737  000D6A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8738  000D6C  EC27  F026         	call	_oled_putString	;wreg free
  8739                           
  8740                           ;MOTEapp.c: 885: break;
  8741  000D70  0012               	return	
  8742  000D72                     
  8743                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  8744  000D72  0E1B               	movlw	27
  8745  000D74  0100               	movlb	0	; () banked
  8746  000D76  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  8750  000D78  0EEB               	movlw	low STR_147
  8751  000D7A  6F72               	movwf	oled_putString@string& (0+255),b
  8752  000D7C  0E7F               	movlw	high STR_147
  8753  000D7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8754  000D80  0E07               	movlw	7
  8755  000D82  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8756  000D84  0E02               	movlw	2
  8757  000D86  6F75               	movwf	oled_putString@start_page& (0+255),b
  8758  000D88  EC27  F026         	call	_oled_putString	;wreg free
  8759                           
  8760                           ;MOTEapp.c: 889: break;
  8761  000D8C  0012               	return	
  8762  000D8E                     
  8763                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  8764  000D8E  0E36               	movlw	54
  8765  000D90  0100               	movlb	0	; () banked
  8766  000D92  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  8770  000D94  0EE3               	movlw	low STR_148
  8771  000D96  6F72               	movwf	oled_putString@string& (0+255),b
  8772  000D98  0E7F               	movlw	high STR_148
  8773  000D9A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8774  000D9C  0E07               	movlw	7
  8775  000D9E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8776  000DA0  0E02               	movlw	2
  8777  000DA2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8778  000DA4  EC27  F026         	call	_oled_putString	;wreg free
  8779                           
  8780                           ;MOTEapp.c: 893: break;
  8781  000DA8  0012               	return	
  8782  000DAA                     
  8783                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  8784  000DAA  0E6C               	movlw	108
  8785  000DAC  0100               	movlb	0	; () banked
  8786  000DAE  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  8790  000DB0  0EE7               	movlw	low STR_149
  8791  000DB2  6F72               	movwf	oled_putString@string& (0+255),b
  8792  000DB4  0E7F               	movlw	high STR_149
  8793  000DB6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8794  000DB8  0E07               	movlw	7
  8795  000DBA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8796  000DBC  0E02               	movlw	2
  8797  000DBE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8798  000DC0  EC27  F026         	call	_oled_putString	;wreg free
  8799                           
  8800                           ;MOTEapp.c: 897: break;
  8801  000DC4  0012               	return	
  8802  000DC6                     l564:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  8806  000DC6  69FD               	setf	_periodicTimerValue& (0+255),b
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  8810  000DC8  0EEF               	movlw	low STR_128
  8811  000DCA  6F72               	movwf	oled_putString@string& (0+255),b
  8812  000DCC  0E7F               	movlw	high STR_128
  8813  000DCE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8814  000DD0  0E07               	movlw	7
  8815  000DD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8816  000DD4  0E02               	movlw	2
  8817  000DD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8818  000DD8  EC27  F026         	call	_oled_putString	;wreg free
  8819                           
  8820                           ;MOTEapp.c: 902: }
  8821                           
  8822                           ;MOTEapp.c: 901: break;
  8823  000DDC  0012               	return	
  8824  000DDE                     l556:
  8825  000DDE  0100               	movlb	0	; () banked
  8826  000DE0  51FE               	movf	_periodicUpValue& (0+255),w,b
  8827                           
  8828                           ; Switch size 1, requested type "space"
  8829                           ; Number of cases is 6, Range of values is 0 to 5
  8830                           ; switch strategies available:
  8831                           ; Name         Instructions Cycles
  8832                           ; simple_byte           19    10 (average)
  8833                           ;	Chosen strategy is simple_byte
  8834  000DE2  0A00               	xorlw	0	; case 0
  8835  000DE4  B4D8               	btfsc	status,2,c
  8836  000DE6  D7AA               	goto	l557
  8837  000DE8  0A01               	xorlw	1	; case 1
  8838  000DEA  B4D8               	btfsc	status,2,c
  8839  000DEC  D7B4               	goto	l560
  8840  000DEE  0A03               	xorlw	3	; case 2
  8841  000DF0  B4D8               	btfsc	status,2,c
  8842  000DF2  D7BF               	goto	l561
  8843  000DF4  0A01               	xorlw	1	; case 3
  8844  000DF6  B4D8               	btfsc	status,2,c
  8845  000DF8  D7CA               	goto	l562
  8846  000DFA  0A07               	xorlw	7	; case 4
  8847  000DFC  B4D8               	btfsc	status,2,c
  8848  000DFE  D7D5               	goto	l563
  8849  000E00  0A01               	xorlw	1	; case 5
  8850  000E02  B4D8               	btfsc	status,2,c
  8851  000E04  D7E0               	goto	l564
  8852  000E06  D79A               	goto	l557
  8853  000E08                     
  8854                           ; BSR set to: 0
  8855                           ;MOTEapp.c: 906: if (changeStates)
  8856                           
  8857                           ; BSR set to: 0
  8858  000E08  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8859  000E0A  B4D8               	btfsc	status,2,c
  8860  000E0C  D01E               	goto	l566
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;MOTEapp.c: 907: {
  8864                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  8865  000E0E  51FC               	movf	_dataRateValue& (0+255),w,b
  8866  000E10  EC7C  F011         	call	_MOTEapp_SetDataRateSetting
  8867                           
  8868                           ;MOTEapp.c: 911: oled_clear();
  8869  000E14  EC8E  F02C         	call	_oled_clear	;wreg free
  8870                           
  8871                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  8872  000E18  0ECB               	movlw	low STR_151
  8873  000E1A  0100               	movlb	0	; () banked
  8874  000E1C  6F72               	movwf	oled_putString@string& (0+255),b
  8875  000E1E  0E7B               	movlw	high STR_151
  8876  000E20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8877  000E22  0E00               	movlw	0
  8878  000E24  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8879  000E26  0E00               	movlw	0
  8880  000E28  6F75               	movwf	oled_putString@start_page& (0+255),b
  8881  000E2A  EC27  F026         	call	_oled_putString	;wreg free
  8882                           
  8883                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  8884  000E2E  0E93               	movlw	low STR_152
  8885  000E30  0100               	movlb	0	; () banked
  8886  000E32  6F72               	movwf	oled_putString@string& (0+255),b
  8887  000E34  0E7C               	movlw	high STR_152
  8888  000E36  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8889  000E38  0E00               	movlw	0
  8890  000E3A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8891  000E3C  0E03               	movlw	3
  8892  000E3E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8893  000E40  EC27  F026         	call	_oled_putString	;wreg free
  8894                           
  8895                           ;MOTEapp.c: 914: runningState = runningSleep;
  8896  000E44  0E0F               	movlw	15
  8897  000E46  0100               	movlb	0	; () banked
  8898  000E48  6FF3               	movwf	_runningState& (0+255),b
  8899  000E4A                     l566:
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;MOTEapp.c: 915: }
  8903                           ;MOTEapp.c: 916: if (selectButton)
  8904                           
  8905                           ; BSR set to: 0
  8906  000E4A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8907  000E4C  B4D8               	btfsc	status,2,c
  8908  000E4E  0012               	return	
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;MOTEapp.c: 917: {
  8912                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  8913  000E50  0E06               	movlw	6
  8914  000E52  61FC               	cpfslt	_dataRateValue& (0+255),b
  8915  000E54  D00A               	goto	l568
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;MOTEapp.c: 919: {
  8919                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  8920  000E56  05EE               	decf	_rnModule& (0+255),w,b
  8921  000E58  A4D8               	btfss	status,2,c
  8922  000E5A  D005               	goto	l569
  8923                           
  8924                           ; BSR set to: 0
  8925  000E5C  0E03               	movlw	3
  8926  000E5E  65FC               	cpfsgt	_dataRateValue& (0+255),b
  8927  000E60  D002               	goto	l569
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;MOTEapp.c: 921: dataRateValue = 6;
  8931  000E62  0E06               	movlw	6
  8932  000E64  D003               	goto	L5
  8933  000E66                     l569:
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;MOTEapp.c: 922: else
  8937                           ;MOTEapp.c: 923: dataRateValue++;
  8938                           
  8939                           ; BSR set to: 0
  8940  000E66  2BFC               	incf	_dataRateValue& (0+255),f,b
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;MOTEapp.c: 924: }
  8944  000E68  D056               	goto	l572
  8945  000E6A                     l568:
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;MOTEapp.c: 925: else {
  8949                           ;MOTEapp.c: 926: dataRateValue = 0;
  8950                           
  8951                           ; BSR set to: 0
  8952  000E6A  0E00               	movlw	0
  8953  000E6C                     L5:
  8954  000E6C  6FFC               	movwf	_dataRateValue& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;MOTEapp.c: 927: }
  8958                           ;MOTEapp.c: 929: switch (dataRateValue)
  8959  000E6E  D053               	goto	l572
  8960  000E70                     
  8961                           ; BSR set to: 0
  8962                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  8963                           
  8964                           ; BSR set to: 0
  8965                           
  8966                           ;MOTEapp.c: 932: case 0:
  8967                           
  8968                           ; BSR set to: 0
  8969  000E70  0EC7               	movlw	low STR_138
  8970  000E72  6F72               	movwf	oled_putString@string& (0+255),b
  8971  000E74  0E7F               	movlw	high STR_138
  8972  000E76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8973  000E78  0E0A               	movlw	10
  8974  000E7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8975  000E7C  0E02               	movlw	2
  8976  000E7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8977  000E80  EC27  F026         	call	_oled_putString	;wreg free
  8978                           
  8979                           ;MOTEapp.c: 934: break;
  8980  000E84  0012               	return	
  8981  000E86                     
  8982                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  8983  000E86  0ECB               	movlw	low STR_139
  8984  000E88  0100               	movlb	0	; () banked
  8985  000E8A  6F72               	movwf	oled_putString@string& (0+255),b
  8986  000E8C  0E7F               	movlw	high STR_139
  8987  000E8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8988  000E90  0E0A               	movlw	10
  8989  000E92  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8990  000E94  0E02               	movlw	2
  8991  000E96  6F75               	movwf	oled_putString@start_page& (0+255),b
  8992  000E98  EC27  F026         	call	_oled_putString	;wreg free
  8993                           
  8994                           ;MOTEapp.c: 937: break;
  8995  000E9C  0012               	return	
  8996  000E9E                     
  8997                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  8998  000E9E  0ECF               	movlw	low STR_140
  8999  000EA0  0100               	movlb	0	; () banked
  9000  000EA2  6F72               	movwf	oled_putString@string& (0+255),b
  9001  000EA4  0E7F               	movlw	high STR_140
  9002  000EA6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9003  000EA8  0E0A               	movlw	10
  9004  000EAA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9005  000EAC  0E02               	movlw	2
  9006  000EAE  6F75               	movwf	oled_putString@start_page& (0+255),b
  9007  000EB0  EC27  F026         	call	_oled_putString	;wreg free
  9008                           
  9009                           ;MOTEapp.c: 940: break;
  9010  000EB4  0012               	return	
  9011  000EB6                     
  9012                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  9013  000EB6  0ED3               	movlw	low STR_141
  9014  000EB8  0100               	movlb	0	; () banked
  9015  000EBA  6F72               	movwf	oled_putString@string& (0+255),b
  9016  000EBC  0E7F               	movlw	high STR_141
  9017  000EBE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9018  000EC0  0E0A               	movlw	10
  9019  000EC2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9020  000EC4  0E02               	movlw	2
  9021  000EC6  6F75               	movwf	oled_putString@start_page& (0+255),b
  9022  000EC8  EC27  F026         	call	_oled_putString	;wreg free
  9023                           
  9024                           ;MOTEapp.c: 943: break;
  9025  000ECC  0012               	return	
  9026  000ECE                     
  9027                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  9028  000ECE  0ED7               	movlw	low STR_142
  9029  000ED0  0100               	movlb	0	; () banked
  9030  000ED2  6F72               	movwf	oled_putString@string& (0+255),b
  9031  000ED4  0E7F               	movlw	high STR_142
  9032  000ED6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9033  000ED8  0E0A               	movlw	10
  9034  000EDA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9035  000EDC  0E02               	movlw	2
  9036  000EDE  6F75               	movwf	oled_putString@start_page& (0+255),b
  9037  000EE0  EC27  F026         	call	_oled_putString	;wreg free
  9038                           
  9039                           ;MOTEapp.c: 946: break;
  9040  000EE4  0012               	return	
  9041  000EE6                     
  9042                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  9043  000EE6  0EDB               	movlw	low STR_143
  9044  000EE8  0100               	movlb	0	; () banked
  9045  000EEA  6F72               	movwf	oled_putString@string& (0+255),b
  9046  000EEC  0E7F               	movlw	high STR_143
  9047  000EEE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9048  000EF0  0E0A               	movlw	10
  9049  000EF2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9050  000EF4  0E02               	movlw	2
  9051  000EF6  6F75               	movwf	oled_putString@start_page& (0+255),b
  9052  000EF8  EC27  F026         	call	_oled_putString	;wreg free
  9053                           
  9054                           ;MOTEapp.c: 949: break;
  9055  000EFC  0012               	return	
  9056  000EFE                     
  9057                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  9058  000EFE  0EF3               	movlw	low STR_144
  9059  000F00  0100               	movlb	0	; () banked
  9060  000F02  6F72               	movwf	oled_putString@string& (0+255),b
  9061  000F04  0E7F               	movlw	high STR_144
  9062  000F06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9063  000F08  0E0A               	movlw	10
  9064  000F0A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9065  000F0C  0E02               	movlw	2
  9066  000F0E  6F75               	movwf	oled_putString@start_page& (0+255),b
  9067  000F10  EC27  F026         	call	_oled_putString	;wreg free
  9068                           
  9069                           ;MOTEapp.c: 953: }
  9070                           
  9071                           ;MOTEapp.c: 952: break;
  9072  000F14  0012               	return	
  9073  000F16                     l572:
  9074  000F16  0100               	movlb	0	; () banked
  9075  000F18  51FC               	movf	_dataRateValue& (0+255),w,b
  9076                           
  9077                           ; Switch size 1, requested type "space"
  9078                           ; Number of cases is 7, Range of values is 0 to 6
  9079                           ; switch strategies available:
  9080                           ; Name         Instructions Cycles
  9081                           ; simple_byte           22    12 (average)
  9082                           ;	Chosen strategy is simple_byte
  9083  000F1A  0A00               	xorlw	0	; case 0
  9084  000F1C  B4D8               	btfsc	status,2,c
  9085  000F1E  D7A8               	goto	l573
  9086  000F20  0A01               	xorlw	1	; case 1
  9087  000F22  B4D8               	btfsc	status,2,c
  9088  000F24  D7B0               	goto	l576
  9089  000F26  0A03               	xorlw	3	; case 2
  9090  000F28  B4D8               	btfsc	status,2,c
  9091  000F2A  D7B9               	goto	l577
  9092  000F2C  0A01               	xorlw	1	; case 3
  9093  000F2E  B4D8               	btfsc	status,2,c
  9094  000F30  D7C2               	goto	l578
  9095  000F32  0A07               	xorlw	7	; case 4
  9096  000F34  B4D8               	btfsc	status,2,c
  9097  000F36  D7CB               	goto	l579
  9098  000F38  0A01               	xorlw	1	; case 5
  9099  000F3A  B4D8               	btfsc	status,2,c
  9100  000F3C  D7D4               	goto	l580
  9101  000F3E  0A03               	xorlw	3	; case 6
  9102  000F40  B4D8               	btfsc	status,2,c
  9103  000F42  D7DD               	goto	l581
  9104  000F44  D795               	goto	l573
  9105  000F46                     
  9106                           ; BSR set to: 0
  9107                           ;MOTEapp.c: 957: if (selectButton)
  9108                           
  9109                           ; BSR set to: 0
  9110  000F46  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9111  000F48  B4D8               	btfsc	status,2,c
  9112  000F4A  D00C               	goto	l585
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;MOTEapp.c: 958: {
  9116                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9117  000F4C  EC9B  F01B         	call	_moteApp_GoToSleep	;wreg free
  9118  000F50  0900               	iorlw	0
  9119  000F52  B4D8               	btfsc	status,2,c
  9120  000F54  D004               	goto	l584
  9121                           
  9122                           ;MOTEapp.c: 960: {
  9123                           ;MOTEapp.c: 961: changeStates = 1;
  9124  000F56  0E01               	movlw	1
  9125  000F58  0100               	movlb	0	; () banked
  9126  000F5A  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9127                           
  9128                           ;MOTEapp.c: 962: }
  9129  000F5C  D003               	goto	l585
  9130  000F5E                     l584:
  9131                           
  9132                           ;MOTEapp.c: 963: else
  9133                           ;MOTEapp.c: 964: {
  9134                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9135                           
  9136                           ; BSR set to: 0
  9137  000F5E  0E09               	movlw	9
  9138  000F60  0100               	movlb	0	; () banked
  9139  000F62  6FF0               	movwf	_secTicker& (0+255),b
  9140  000F64                     l585:
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;MOTEapp.c: 966: }
  9144                           ;MOTEapp.c: 967: }
  9145                           ;MOTEapp.c: 968: if (changeStates)
  9146                           
  9147                           ; BSR set to: 0
  9148  000F64  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9149  000F66  B4D8               	btfsc	status,2,c
  9150  000F68  0012               	return	
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;MOTEapp.c: 969: {
  9154                           ;MOTEapp.c: 970: oled_clear();
  9155  000F6A  EC8E  F02C         	call	_oled_clear	;wreg free
  9156                           
  9157                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9158  000F6E  0E21               	movlw	low STR_75
  9159  000F70  0100               	movlb	0	; () banked
  9160  000F72  6F72               	movwf	oled_putString@string& (0+255),b
  9161  000F74  0E7B               	movlw	high STR_75
  9162  000F76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9163  000F78  0E00               	movlw	0
  9164  000F7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9165  000F7C  0E00               	movlw	0
  9166  000F7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  9167  000F80  EC27  F026         	call	_oled_putString	;wreg free
  9168                           
  9169                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9170  000F84  0E87               	movlw	low STR_76
  9171  000F86  0100               	movlb	0	; () banked
  9172  000F88  6F72               	movwf	oled_putString@string& (0+255),b
  9173  000F8A  0E7B               	movlw	high STR_76
  9174  000F8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9175  000F8E  0E00               	movlw	0
  9176  000F90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9177  000F92  0E01               	movlw	1
  9178  000F94  6F75               	movwf	oled_putString@start_page& (0+255),b
  9179  000F96  EC27  F026         	call	_oled_putString	;wreg free
  9180                           
  9181                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9182  000F9A  0E83               	movlw	low STR_77
  9183  000F9C  0100               	movlb	0	; () banked
  9184  000F9E  6F72               	movwf	oled_putString@string& (0+255),b
  9185  000FA0  0E7C               	movlw	high STR_77
  9186  000FA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9187  000FA4  0E00               	movlw	0
  9188  000FA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9189  000FA8  0E03               	movlw	3
  9190  000FAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  9191  000FAC  EC27  F026         	call	_oled_putString	;wreg free
  9192                           
  9193                           ;MOTEapp.c: 974: runningState = runningUplink;
  9194  000FB0  0E06               	movlw	6
  9195  000FB2  0100               	movlb	0	; () banked
  9196  000FB4  6FF3               	movwf	_runningState& (0+255),b
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;MOTEapp.c: 977: }
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;MOTEapp.c: 975: }
  9203                           ;MOTEapp.c: 976: break;
  9204  000FB6  0012               	return	
  9205  000FB8                     l466:
  9206                           
  9207                           ; BSR set to: 0
  9208                           
  9209                           ; BSR set to: 0
  9210  000FB8  51F3               	movf	_runningState& (0+255),w,b
  9211                           
  9212                           ; Switch size 1, requested type "space"
  9213                           ; Number of cases is 12, Range of values is 0 to 15
  9214                           ; switch strategies available:
  9215                           ; Name         Instructions Cycles
  9216                           ; simple_byte           37    19 (average)
  9217                           ;	Chosen strategy is simple_byte
  9218  000FBA  0A00               	xorlw	0	; case 0
  9219  000FBC  B4D8               	btfsc	status,2,c
  9220  000FBE  EF6A  F001         	goto	l472
  9221  000FC2  0A01               	xorlw	1	; case 1
  9222  000FC4  B4D8               	btfsc	status,2,c
  9223  000FC6  D4BC               	goto	l516
  9224  000FC8  0A03               	xorlw	3	; case 2
  9225  000FCA  B4D8               	btfsc	status,2,c
  9226  000FCC  D5E8               	goto	l537
  9227  000FCE  0A01               	xorlw	1	; case 3
  9228  000FD0  B4D8               	btfsc	status,2,c
  9229  000FD2  D71A               	goto	l565
  9230  000FD4  0A05               	xorlw	5	; case 6
  9231  000FD6  B4D8               	btfsc	status,2,c
  9232  000FD8  EF98  F001         	goto	l476
  9233  000FDC  0A01               	xorlw	1	; case 7
  9234  000FDE  B4D8               	btfsc	status,2,c
  9235  000FE0  EF5E  F002         	goto	l483
  9236  000FE4  0A0F               	xorlw	15	; case 8
  9237  000FE6  B4D8               	btfsc	status,2,c
  9238  000FE8  EFC9  F002         	goto	l489
  9239  000FEC  0A02               	xorlw	2	; case 10
  9240  000FEE  B4D8               	btfsc	status,2,c
  9241  000FF0  D404               	goto	l508
  9242  000FF2  0A01               	xorlw	1	; case 11
  9243  000FF4  B4D8               	btfsc	status,2,c
  9244  000FF6  D477               	goto	l512
  9245  000FF8  0A07               	xorlw	7	; case 12
  9246  000FFA  B4D8               	btfsc	status,2,c
  9247  000FFC  D511               	goto	l522
  9248  000FFE  0A01               	xorlw	1	; case 13
  9249  001000  B4D8               	btfsc	status,2,c
  9250  001002  D5FB               	goto	l541
  9251  001004  0A02               	xorlw	2	; case 15
  9252  001006  B4D8               	btfsc	status,2,c
  9253  001008  D79E               	goto	l582
  9254  00100A  EF69  F001         	goto	l467
  9255  00100E                     __end_of_moteRunningProcess:
  9256                           	opt stack 0
  9257                           tblptru	equ	0xFF8
  9258                           tblptrh	equ	0xFF7
  9259                           tblptrl	equ	0xFF6
  9260                           tablat	equ	0xFF5
  9261                           prodh	equ	0xFF4
  9262                           prodl	equ	0xFF3
  9263                           intcon	equ	0xFF2
  9264                           postinc0	equ	0xFEE
  9265                           wreg	equ	0xFE8
  9266                           indf1	equ	0xFE7
  9267                           postdec1	equ	0xFE5
  9268                           fsr1h	equ	0xFE2
  9269                           fsr1l	equ	0xFE1
  9270                           indf2	equ	0xFDF
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275 ;; *************** function _sendDataCommand *****************
  9276 ;; Defined at:
  9277 ;;		line 1124 in file "../Includes/Board/MOTEapp.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9280 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9281 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9282 ;;		 -> dataBuffer(16), 
  9283 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9286 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9296 ;;      Params:         0       5       0       0       0       0       0       0       0
  9297 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9298 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9299 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9300 ;;Total ram usage:        8 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:   13
  9303 ;; This function calls:
  9304 ;;		_EUSART_Write
  9305 ;;		_EndLine
  9306 ;;		_hexToStr
  9307 ;; This function is called by:
  9308 ;;		_moteRunningProcess
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text11
  9313  003C02                     __ptext11:
  9314                           	opt stack 0
  9315  003C02                     _sendDataCommand:
  9316                           	opt stack 15
  9317                           
  9318                           ;MOTEapp.c: 1127: while (*string)
  9319                           
  9320                           ;incstack = 0
  9321  003C02  D00B               	goto	l642
  9322  003C04                     
  9323                           ;MOTEapp.c: 1128: {
  9324                           ;MOTEapp.c: 1129: EUSART_Write(*string++);
  9325  003C04  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9326  003C08  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9327  003C0C                     	if	0	;tblptru may be non-zero
  9328  003C0C                     	endif
  9329  003C0C                     	if	0	;tblptru may be non-zero
  9330  003C0C                     	endif
  9331  003C0C  0008               	tblrd		*
  9332  003C0E  50F5               	movf	tablat,w,c
  9333  003C10  ECB0  F029         	call	_EUSART_Write
  9334  003C14  0100               	movlb	0	; () banked
  9335  003C16  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9336  003C18  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9337  003C1A                     l642:
  9338                           
  9339                           ; BSR set to: 0
  9340  003C1A  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9341  003C1E  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9342  003C22                     	if	0	;tblptru may be non-zero
  9343  003C22                     	endif
  9344  003C22                     	if	0	;tblptru may be non-zero
  9345  003C22                     	endif
  9346  003C22  0008               	tblrd		*
  9347  003C24  50F5               	movf	tablat,w,c
  9348  003C26  0900               	iorlw	0
  9349  003C28  A4D8               	btfss	status,2,c
  9350  003C2A  D7EC               	goto	l643
  9351                           
  9352                           ;MOTEapp.c: 1130: }
  9353                           ;MOTEapp.c: 1132: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9354  003C2C  0E00               	movlw	0
  9355  003C2E  0100               	movlb	0	; () banked
  9356  003C30  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9357  003C32                     l9736:
  9358                           
  9359                           ; BSR set to: 0
  9360  003C32  0E02               	movlw	2
  9361  003C34  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9362  003C36  D001               	goto	l645
  9363  003C38  D00E               	goto	u8220
  9364  003C3A                     l645:
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;MOTEapp.c: 1133: {
  9368                           ;MOTEapp.c: 1134: EUSART_Write(appData[byteCount]);
  9369                           
  9370                           ; BSR set to: 0
  9371  003C3A  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9372  003C3C  0D01               	mullw	1
  9373  003C3E  50F3               	movf	prodl,w,c
  9374  003C40  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9375  003C42  6ED9               	movwf	fsr2l,c
  9376  003C44  50F4               	movf	prodh,w,c
  9377  003C46  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9378  003C48  6EDA               	movwf	fsr2h,c
  9379  003C4A  50DF               	movf	indf2,w,c
  9380  003C4C  ECB0  F029         	call	_EUSART_Write
  9381  003C50  0100               	movlb	0	; () banked
  9382  003C52  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9383  003C54  D7EE               	goto	l9736
  9384  003C56                     u8220:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;MOTEapp.c: 1135: }
  9388                           ;MOTEapp.c: 1137: EUSART_Write(appData[3]);
  9389                           
  9390                           ; BSR set to: 0
  9391  003C56  EE20 F003          	lfsr	2,3
  9392  003C5A  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9393  003C5C  26D9               	addwf	fsr2l,f,c
  9394  003C5E  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9395  003C60  22DA               	addwfc	fsr2h,f,c
  9396  003C62  50DF               	movf	indf2,w,c
  9397  003C64  ECB0  F029         	call	_EUSART_Write
  9398                           
  9399                           ;MOTEapp.c: 1139: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9400  003C68  0E04               	movlw	4
  9401  003C6A  0100               	movlb	0	; () banked
  9402  003C6C  6F68               	movwf	sendDataCommand@byteCount_1627& (0+255),b
  9403  003C6E  D021               	goto	l647
  9404  003C70                     
  9405                           ; BSR set to: 0
  9406                           ;MOTEapp.c: 1140: {
  9407                           ;MOTEapp.c: 1141: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9408                           
  9409                           ; BSR set to: 0
  9410  003C70  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9411  003C72  0D01               	mullw	1
  9412  003C74  50F3               	movf	prodl,w,c
  9413  003C76  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9414  003C78  6ED9               	movwf	fsr2l,c
  9415  003C7A  50F4               	movf	prodh,w,c
  9416  003C7C  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9417  003C7E  6EDA               	movwf	fsr2h,c
  9418  003C80  50DF               	movf	indf2,w,c
  9419  003C82  6F66               	movwf	??_sendDataCommand& (0+255),b
  9420  003C84  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9421  003C86  0B0F               	andlw	15
  9422  003C88  EC55  F02B         	call	_hexToStr
  9423  003C8C  ECB0  F029         	call	_EUSART_Write
  9424                           
  9425                           ;MOTEapp.c: 1142: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9426  003C90  0100               	movlb	0	; () banked
  9427  003C92  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9428  003C94  0D01               	mullw	1
  9429  003C96  50F3               	movf	prodl,w,c
  9430  003C98  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9431  003C9A  6ED9               	movwf	fsr2l,c
  9432  003C9C  50F4               	movf	prodh,w,c
  9433  003C9E  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9434  003CA0  6EDA               	movwf	fsr2h,c
  9435  003CA2  50DF               	movf	indf2,w,c
  9436  003CA4  0B0F               	andlw	15
  9437  003CA6  EC55  F02B         	call	_hexToStr
  9438  003CAA  ECB0  F029         	call	_EUSART_Write
  9439  003CAE  0100               	movlb	0	; () banked
  9440  003CB0  2B68               	incf	sendDataCommand@byteCount_1627& (0+255),f,b
  9441  003CB2                     l647:
  9442                           
  9443                           ; BSR set to: 0
  9444                           
  9445                           ; BSR set to: 0
  9446  003CB2  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9447  003CB4  5D68               	subwf	sendDataCommand@byteCount_1627& (0+255),w,b
  9448  003CB6  A0D8               	btfss	status,0,c
  9449  003CB8  D7DB               	goto	l648
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;MOTEapp.c: 1143: }
  9453                           ;MOTEapp.c: 1144: EndLine();
  9454                           
  9455                           ; BSR set to: 0
  9456  003CBA  EC66  F02D         	call	_EndLine	;wreg free
  9457  003CBE  0012               	return		;funcret
  9458  003CC0                     __end_of_sendDataCommand:
  9459                           	opt stack 0
  9460                           tblptru	equ	0xFF8
  9461                           tblptrh	equ	0xFF7
  9462                           tblptrl	equ	0xFF6
  9463                           tablat	equ	0xFF5
  9464                           prodh	equ	0xFF4
  9465                           prodl	equ	0xFF3
  9466                           intcon	equ	0xFF2
  9467                           postinc0	equ	0xFEE
  9468                           wreg	equ	0xFE8
  9469                           indf1	equ	0xFE7
  9470                           postdec1	equ	0xFE5
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           indf2	equ	0xFDF
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _hexToStr *****************
  9479 ;; Defined at:
  9480 ;;		line 1156 in file "../Includes/Board/MOTEapp.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  character       1    wreg     unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  character       1    0[BANK0 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      unsigned char 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0
  9495 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9497 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9498 ;;Total ram usage:        1 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:   11
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_sendDataCommand
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text12
  9509  0056AA                     __ptext12:
  9510                           	opt stack 0
  9511  0056AA                     _hexToStr:
  9512                           	opt stack 16
  9513                           
  9514                           ;incstack = 0
  9515                           ;hexToStr@character stored from wreg
  9516  0056AA  0100               	movlb	0	; () banked
  9517  0056AC  6F60               	movwf	hexToStr@character& (0+255),b
  9518                           
  9519                           ;MOTEapp.c: 1159: character = character & 0x0F;
  9520  0056AE  0100               	movlb	0	; () banked
  9521  0056B0  5160               	movf	hexToStr@character& (0+255),w,b
  9522  0056B2  0B0F               	andlw	15
  9523  0056B4  6F60               	movwf	hexToStr@character& (0+255),b
  9524                           
  9525                           ;MOTEapp.c: 1161: if (character < 0x0A)
  9526  0056B6  0E0A               	movlw	10
  9527  0056B8  6160               	cpfslt	hexToStr@character& (0+255),b
  9528  0056BA  D003               	goto	l658
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;MOTEapp.c: 1162: {
  9532                           ;MOTEapp.c: 1163: return character + '0';
  9533  0056BC  5160               	movf	hexToStr@character& (0+255),w,b
  9534  0056BE  0F30               	addlw	48
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;MOTEapp.c: 1164: }
  9538                           
  9539                           ; BSR set to: 0
  9540  0056C0  0012               	return	
  9541  0056C2                     l658:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;MOTEapp.c: 1165: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9545                           
  9546                           ; BSR set to: 0
  9547  0056C2  0E09               	movlw	9
  9548  0056C4  6560               	cpfsgt	hexToStr@character& (0+255),b
  9549  0056C6  D006               	goto	l661
  9550                           
  9551                           ; BSR set to: 0
  9552  0056C8  0E10               	movlw	16
  9553  0056CA  6160               	cpfslt	hexToStr@character& (0+255),b
  9554  0056CC  D003               	goto	l661
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;MOTEapp.c: 1166: {
  9558                           ;MOTEapp.c: 1167: return character + '0' + 7;
  9559  0056CE  5160               	movf	hexToStr@character& (0+255),w,b
  9560  0056D0  0F37               	addlw	55
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;MOTEapp.c: 1168: }
  9564                           
  9565                           ; BSR set to: 0
  9566  0056D2  0012               	return	
  9567  0056D4                     l661:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;MOTEapp.c: 1169: else
  9571                           ;MOTEapp.c: 1170: {
  9572                           ;MOTEapp.c: 1171: return 0;
  9573                           
  9574                           ; BSR set to: 0
  9575  0056D4  0E00               	movlw	0
  9576                           
  9577                           ; BSR set to: 0
  9578                           
  9579                           ; BSR set to: 0
  9580  0056D6  0012               	return	
  9581  0056D8                     __end_of_hexToStr:
  9582                           	opt stack 0
  9583                           tblptru	equ	0xFF8
  9584                           tblptrh	equ	0xFF7
  9585                           tblptrl	equ	0xFF6
  9586                           tablat	equ	0xFF5
  9587                           prodh	equ	0xFF4
  9588                           prodl	equ	0xFF3
  9589                           intcon	equ	0xFF2
  9590                           postinc0	equ	0xFEE
  9591                           wreg	equ	0xFE8
  9592                           indf1	equ	0xFE7
  9593                           postdec1	equ	0xFE5
  9594                           fsr1h	equ	0xFE2
  9595                           fsr1l	equ	0xFE1
  9596                           indf2	equ	0xFDF
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8
  9600                           
  9601 ;; *************** function _oled_putint8 *****************
  9602 ;; Defined at:
  9603 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  number          1    wreg     unsigned char 
  9606 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9607 ;;  start_page      1   24[BANK0 ] unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  number          1   32[BANK0 ] unsigned char 
  9610 ;;  numData         6   26[BANK0 ] struct .
  9611 ;;  negative        1   25[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9621 ;;      Params:         0       2       0       0       0       0       0       0       0
  9622 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9624 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9625 ;;Total ram usage:       10 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:   15
  9628 ;; This function calls:
  9629 ;;		___awmod
  9630 ;;		___lbdiv
  9631 ;;		_oled_putString
  9632 ;; This function is called by:
  9633 ;;		_moteHandler
  9634 ;;		_moteRunningProcess
  9635 ;;		_moteApp_testSensors
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text13
  9640  004260                     __ptext13:
  9641                           	opt stack 0
  9642  004260                     _oled_putint8:
  9643                           	opt stack 13
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;incstack = 0
  9647                           ;oled_putint8@number stored from wreg
  9648  004260  0100               	movlb	0	; () banked
  9649  004262  6F80               	movwf	oled_putint8@number& (0+255),b
  9650                           
  9651                           ;SSD1306oLED.c: 280: display_data_t numData;
  9652                           ;SSD1306oLED.c: 281: bool negative = 0;
  9653  004264  0E00               	movlw	0
  9654  004266  0100               	movlb	0	; () banked
  9655  004268  6F79               	movwf	oled_putint8@negative& (0+255),b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;SSD1306oLED.c: 283: if(number & 0x80)
  9659  00426A  AF80               	btfss	oled_putint8@number& (0+255),7,b
  9660  00426C  D002               	goto	l1032
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;SSD1306oLED.c: 284: negative = 1;
  9664  00426E  0E01               	movlw	1
  9665  004270  6F79               	movwf	oled_putint8@negative& (0+255),b
  9666  004272                     l1032:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
  9670                           
  9671                           ; BSR set to: 0
  9672  004272  5180               	movf	oled_putint8@number& (0+255),w,b
  9673  004274  0B7F               	andlw	127
  9674  004276  6F80               	movwf	oled_putint8@number& (0+255),b
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
  9678  004278  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9679  00427C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9680  00427E  0E00               	movlw	0
  9681  004280  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9682  004282  0E0A               	movlw	10
  9683  004284  6F62               	movwf	___awmod@divisor& (0+255),b
  9684  004286  ECB7  F025         	call	___awmod	;wreg free
  9685  00428A  0100               	movlb	0	; () banked
  9686  00428C  5160               	movf	?___awmod& (0+255),w,b
  9687  00428E  0F30               	addlw	48
  9688  004290  6F7C               	movwf	(oled_putint8@numData+2)& (0+255),b
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;SSD1306oLED.c: 288: number /= 10;
  9692  004292  0E0A               	movlw	10
  9693  004294  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9694  004296  5180               	movf	oled_putint8@number& (0+255),w,b
  9695  004298  EC91  F029         	call	___lbdiv
  9696  00429C  0100               	movlb	0	; () banked
  9697  00429E  6F80               	movwf	oled_putint8@number& (0+255),b
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
  9701  0042A0  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9702  0042A4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9703  0042A6  0E00               	movlw	0
  9704  0042A8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9705  0042AA  0E0A               	movlw	10
  9706  0042AC  6F62               	movwf	___awmod@divisor& (0+255),b
  9707  0042AE  ECB7  F025         	call	___awmod	;wreg free
  9708  0042B2  0100               	movlb	0	; () banked
  9709  0042B4  5160               	movf	?___awmod& (0+255),w,b
  9710  0042B6  0F30               	addlw	48
  9711  0042B8  6F7B               	movwf	(oled_putint8@numData+1)& (0+255),b
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;SSD1306oLED.c: 290: number /= 10;
  9715  0042BA  0E0A               	movlw	10
  9716  0042BC  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9717  0042BE  5180               	movf	oled_putint8@number& (0+255),w,b
  9718  0042C0  EC91  F029         	call	___lbdiv
  9719  0042C4  0100               	movlb	0	; () banked
  9720  0042C6  6F80               	movwf	oled_putint8@number& (0+255),b
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
  9724  0042C8  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9725  0042CC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9726  0042CE  0E00               	movlw	0
  9727  0042D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9728  0042D2  0E0A               	movlw	10
  9729  0042D4  6F62               	movwf	___awmod@divisor& (0+255),b
  9730  0042D6  ECB7  F025         	call	___awmod	;wreg free
  9731  0042DA  0100               	movlb	0	; () banked
  9732  0042DC  5160               	movf	?___awmod& (0+255),w,b
  9733  0042DE  0F30               	addlw	48
  9734  0042E0  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;SSD1306oLED.c: 292: if(negative)
  9738  0042E2  5179               	movf	oled_putint8@negative& (0+255),w,b
  9739  0042E4  B4D8               	btfsc	status,2,c
  9740  0042E6  D002               	goto	l1033
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;SSD1306oLED.c: 293: numData.d0 = '-';
  9744  0042E8  0E2D               	movlw	45
  9745  0042EA  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9746  0042EC                     l1033:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;SSD1306oLED.c: 295: numData.b[3]=0;
  9750  0042EC  0E00               	movlw	0
  9751  0042EE  6F7D               	movwf	(oled_putint8@numData+3)& (0+255),b
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
  9755  0042F0  0E7A               	movlw	low oled_putint8@numData
  9756  0042F2  6F72               	movwf	oled_putString@string& (0+255),b
  9757  0042F4  0E00               	movlw	high oled_putint8@numData
  9758  0042F6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9759  0042F8  C077  F074         	movff	oled_putint8@station_dot,oled_putString@station_dot
  9760  0042FC  C078  F075         	movff	oled_putint8@start_page,oled_putString@start_page
  9761  004300  EC27  F026         	call	_oled_putString	;wreg free
  9762  004304  0012               	return		;funcret
  9763  004306                     __end_of_oled_putint8:
  9764                           	opt stack 0
  9765                           tblptru	equ	0xFF8
  9766                           tblptrh	equ	0xFF7
  9767                           tblptrl	equ	0xFF6
  9768                           tablat	equ	0xFF5
  9769                           prodh	equ	0xFF4
  9770                           prodl	equ	0xFF3
  9771                           intcon	equ	0xFF2
  9772                           postinc0	equ	0xFEE
  9773                           wreg	equ	0xFE8
  9774                           indf1	equ	0xFE7
  9775                           postdec1	equ	0xFE5
  9776                           fsr1h	equ	0xFE2
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8
  9782                           
  9783 ;; *************** function _oled_putUint8 *****************
  9784 ;; Defined at:
  9785 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  number          1    wreg     unsigned char 
  9788 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9789 ;;  start_page      1   24[BANK0 ] unsigned char 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  number          1   25[BANK0 ] unsigned char 
  9792 ;;  numData         6   26[BANK0 ] struct .
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9802 ;;      Params:         0       2       0       0       0       0       0       0       0
  9803 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9805 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9806 ;;Total ram usage:        9 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:   15
  9809 ;; This function calls:
  9810 ;;		___awmod
  9811 ;;		___lbdiv
  9812 ;;		_oled_putString
  9813 ;; This function is called by:
  9814 ;;		_moteRunningProcess
  9815 ;;		_test_adc
  9816 ;;		_ReadyByteFrame
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text14
  9821  0045F0                     __ptext14:
  9822                           	opt stack 0
  9823  0045F0                     _oled_putUint8:
  9824                           	opt stack 13
  9825                           
  9826                           ;incstack = 0
  9827                           ;oled_putUint8@number stored from wreg
  9828  0045F0  0100               	movlb	0	; () banked
  9829  0045F2  6F79               	movwf	oled_putUint8@number& (0+255),b
  9830                           
  9831                           ;SSD1306oLED.c: 266: display_data_t numData;
  9832                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  9833  0045F4  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9834  0045F8  0100               	movlb	0	; () banked
  9835  0045FA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9836  0045FC  0E00               	movlw	0
  9837  0045FE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9838  004600  0E0A               	movlw	10
  9839  004602  6F62               	movwf	___awmod@divisor& (0+255),b
  9840  004604  ECB7  F025         	call	___awmod	;wreg free
  9841  004608  0100               	movlb	0	; () banked
  9842  00460A  5160               	movf	?___awmod& (0+255),w,b
  9843  00460C  0F30               	addlw	48
  9844  00460E  6F7C               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9845                           
  9846                           ;SSD1306oLED.c: 268: number /= 10;
  9847  004610  0E0A               	movlw	10
  9848  004612  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9849  004614  5179               	movf	oled_putUint8@number& (0+255),w,b
  9850  004616  EC91  F029         	call	___lbdiv
  9851  00461A  0100               	movlb	0	; () banked
  9852  00461C  6F79               	movwf	oled_putUint8@number& (0+255),b
  9853                           
  9854                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  9855  00461E  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9856  004622  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9857  004624  0E00               	movlw	0
  9858  004626  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9859  004628  0E0A               	movlw	10
  9860  00462A  6F62               	movwf	___awmod@divisor& (0+255),b
  9861  00462C  ECB7  F025         	call	___awmod	;wreg free
  9862  004630  0100               	movlb	0	; () banked
  9863  004632  5160               	movf	?___awmod& (0+255),w,b
  9864  004634  0F30               	addlw	48
  9865  004636  6F7B               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9866                           
  9867                           ;SSD1306oLED.c: 270: number /= 10;
  9868  004638  0E0A               	movlw	10
  9869  00463A  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9870  00463C  5179               	movf	oled_putUint8@number& (0+255),w,b
  9871  00463E  EC91  F029         	call	___lbdiv
  9872  004642  0100               	movlb	0	; () banked
  9873  004644  6F79               	movwf	oled_putUint8@number& (0+255),b
  9874                           
  9875                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  9876  004646  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9877  00464A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9878  00464C  0E00               	movlw	0
  9879  00464E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9880  004650  0E0A               	movlw	10
  9881  004652  6F62               	movwf	___awmod@divisor& (0+255),b
  9882  004654  ECB7  F025         	call	___awmod	;wreg free
  9883  004658  0100               	movlb	0	; () banked
  9884  00465A  5160               	movf	?___awmod& (0+255),w,b
  9885  00465C  0F30               	addlw	48
  9886  00465E  6F7A               	movwf	oled_putUint8@numData& (0+255),b
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  9890  004660  0E00               	movlw	0
  9891  004662  6F7D               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  9895  004664  0E7A               	movlw	low oled_putUint8@numData
  9896  004666  6F72               	movwf	oled_putString@string& (0+255),b
  9897  004668  0E00               	movlw	high oled_putUint8@numData
  9898  00466A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9899  00466C  C077  F074         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9900  004670  C078  F075         	movff	oled_putUint8@start_page,oled_putString@start_page
  9901  004674  EC27  F026         	call	_oled_putString	;wreg free
  9902  004678  0012               	return		;funcret
  9903  00467A                     __end_of_oled_putUint8:
  9904                           	opt stack 0
  9905                           tblptru	equ	0xFF8
  9906                           tblptrh	equ	0xFF7
  9907                           tblptrl	equ	0xFF6
  9908                           tablat	equ	0xFF5
  9909                           prodh	equ	0xFF4
  9910                           prodl	equ	0xFF3
  9911                           intcon	equ	0xFF2
  9912                           postinc0	equ	0xFEE
  9913                           wreg	equ	0xFE8
  9914                           indf1	equ	0xFE7
  9915                           postdec1	equ	0xFE5
  9916                           fsr1h	equ	0xFE2
  9917                           fsr1l	equ	0xFE1
  9918                           indf2	equ	0xFDF
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8
  9922                           
  9923 ;; *************** function _moteApp_setSensorsInput *****************
  9924 ;; Defined at:
  9925 ;;		line 1387 in file "../Includes/Board/MOTEapp.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0
  9940 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9942 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9943 ;;Total ram usage:        2 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:   14
  9946 ;; This function calls:
  9947 ;;		_MOTEapp_getModuleResponse
  9948 ;;		_moteApp_delayms
  9949 ;;		_sendCommand
  9950 ;; This function is called by:
  9951 ;;		_moteRunningProcess
  9952 ;;		_moteApp_testSensors
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text15
  9957  004A0C                     __ptext15:
  9958                           	opt stack 0
  9959  004A0C                     _moteApp_setSensorsInput:
  9960                           	opt stack 14
  9961                           
  9962                           ;MOTEapp.c: 1389: uint16_t escapeCounter = 0;
  9963                           
  9964                           ;incstack = 0
  9965  004A0C  0E00               	movlw	0
  9966  004A0E  0100               	movlb	0	; () banked
  9967  004A10  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9968  004A12  0E00               	movlw	0
  9969  004A14  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;MOTEapp.c: 1390: sendCommand("sys set pinmode GPIO13 ana");
  9973  004A16  0ED3               	movlw	low STR_183
  9974  004A18  6F61               	movwf	sendCommand@string& (0+255),b
  9975  004A1A  0E79               	movlw	high STR_183
  9976  004A1C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9977  004A1E  ECDD  F02A         	call	_sendCommand	;wreg free
  9978                           
  9979                           ;MOTEapp.c: 1391: while ( !MOTEapp_getModuleResponse() )
  9980  004A22  D009               	goto	l721
  9981  004A24                     
  9982                           ;MOTEapp.c: 1392: {
  9983                           ;MOTEapp.c: 1393: if (++escapeCounter > 50000)
  9984  004A24  0100               	movlb	0	; () banked
  9985  004A26  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
  9986  004A28  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
  9987  004A2A  0E51               	movlw	81
  9988  004A2C  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
  9989  004A2E  0EC3               	movlw	195
  9990  004A30  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
  9991  004A32  B0D8               	btfsc	status,0,c
  9992  004A34  D005               	goto	u8140
  9993  004A36                     l721:
  9994                           
  9995                           ; BSR set to: 0
  9996                           
  9997                           ; BSR set to: 0
  9998  004A36  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  9999  004A3A  0900               	iorlw	0
 10000  004A3C  B4D8               	btfsc	status,2,c
 10001  004A3E  D7F2               	goto	l720
 10002  004A40                     u8140:
 10003                           
 10004                           ;MOTEapp.c: 1395: }
 10005                           ;MOTEapp.c: 1396: escapeCounter = 0;
 10006  004A40  0E00               	movlw	0
 10007  004A42  0100               	movlb	0	; () banked
 10008  004A44  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10009  004A46  0E00               	movlw	0
 10010  004A48  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;MOTEapp.c: 1397: sendCommand("sys set pinmode GPIO12 ana");
 10014  004A4A  0EB8               	movlw	low STR_184
 10015  004A4C  6F61               	movwf	sendCommand@string& (0+255),b
 10016  004A4E  0E79               	movlw	high STR_184
 10017  004A50  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10018  004A52  ECDD  F02A         	call	_sendCommand	;wreg free
 10019                           
 10020                           ;MOTEapp.c: 1398: while ( !MOTEapp_getModuleResponse() )
 10021  004A56  D009               	goto	l725
 10022  004A58                     
 10023                           ;MOTEapp.c: 1399: {
 10024                           ;MOTEapp.c: 1400: if (++escapeCounter > 50000)
 10025  004A58  0100               	movlb	0	; () banked
 10026  004A5A  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10027  004A5C  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10028  004A5E  0E51               	movlw	81
 10029  004A60  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10030  004A62  0EC3               	movlw	195
 10031  004A64  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10032  004A66  B0D8               	btfsc	status,0,c
 10033  004A68  D005               	goto	u8160
 10034  004A6A                     l725:
 10035                           
 10036                           ; BSR set to: 0
 10037                           
 10038                           ; BSR set to: 0
 10039  004A6A  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10040  004A6E  0900               	iorlw	0
 10041  004A70  B4D8               	btfsc	status,2,c
 10042  004A72  D7F2               	goto	l724
 10043  004A74                     u8160:
 10044                           
 10045                           ;MOTEapp.c: 1402: }
 10046                           ;MOTEapp.c: 1403: moteApp_delayms(100);
 10047  004A74  0E00               	movlw	0
 10048  004A76  0100               	movlb	0	; () banked
 10049  004A78  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10050  004A7A  0E64               	movlw	100
 10051  004A7C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10052  004A7E  EC93  F02A         	call	_moteApp_delayms	;wreg free
 10053  004A82  0012               	return		;funcret
 10054  004A84                     __end_of_moteApp_setSensorsInput:
 10055                           	opt stack 0
 10056                           tblptru	equ	0xFF8
 10057                           tblptrh	equ	0xFF7
 10058                           tblptrl	equ	0xFF6
 10059                           tablat	equ	0xFF5
 10060                           prodh	equ	0xFF4
 10061                           prodl	equ	0xFF3
 10062                           intcon	equ	0xFF2
 10063                           postinc0	equ	0xFEE
 10064                           wreg	equ	0xFE8
 10065                           indf1	equ	0xFE7
 10066                           postdec1	equ	0xFE5
 10067                           fsr1h	equ	0xFE2
 10068                           fsr1l	equ	0xFE1
 10069                           indf2	equ	0xFDF
 10070                           fsr2h	equ	0xFDA
 10071                           fsr2l	equ	0xFD9
 10072                           status	equ	0xFD8
 10073                           
 10074 ;; *************** function _moteApp_lightStringSize *****************
 10075 ;; Defined at:
 10076 ;;		line 1452 in file "../Includes/Board/MOTEapp.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      unsigned char 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10090 ;;      Params:         0       0       0       0       0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10093 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10094 ;;Total ram usage:        0 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:   11
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_moteRunningProcess
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text16
 10105  005B50                     __ptext16:
 10106                           	opt stack 0
 10107  005B50                     _moteApp_lightStringSize:
 10108                           	opt stack 17
 10109                           
 10110                           ;MOTEapp.c: 1454: return lightStringSize;
 10111                           
 10112                           ;incstack = 0
 10113  005B50  0100               	movlb	0	; () banked
 10114  005B52  51ED               	movf	_lightStringSize& (0+255),w,b
 10115  005B54  0012               	return	
 10116  005B56                     __end_of_moteApp_lightStringSize:
 10117                           	opt stack 0
 10118                           tblptru	equ	0xFF8
 10119                           tblptrh	equ	0xFF7
 10120                           tblptrl	equ	0xFF6
 10121                           tablat	equ	0xFF5
 10122                           prodh	equ	0xFF4
 10123                           prodl	equ	0xFF3
 10124                           intcon	equ	0xFF2
 10125                           postinc0	equ	0xFEE
 10126                           wreg	equ	0xFE8
 10127                           indf1	equ	0xFE7
 10128                           postdec1	equ	0xFE5
 10129                           fsr1h	equ	0xFE2
 10130                           fsr1l	equ	0xFE1
 10131                           indf2	equ	0xFDF
 10132                           fsr2h	equ	0xFDA
 10133                           fsr2l	equ	0xFD9
 10134                           status	equ	0xFD8
 10135                           
 10136 ;; *************** function _moteApp_getTempValue *****************
 10137 ;; Defined at:
 10138 ;;		line 1405 in file "../Includes/Board/MOTEapp.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  2    3[BANK0 ] PTR unsigned char 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10152 ;;      Params:         0       2       0       0       0       0       0       0       0
 10153 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10155 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10156 ;;Total ram usage:        4 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:   14
 10159 ;; This function calls:
 10160 ;;		_MOTEapp_getModuleResponse
 10161 ;;		_sendCommand
 10162 ;; This function is called by:
 10163 ;;		_moteHandler
 10164 ;;		_moteRunningProcess
 10165 ;;		_moteApp_testSensors
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text17
 10170  0052E2                     __ptext17:
 10171                           	opt stack 0
 10172  0052E2                     _moteApp_getTempValue:
 10173                           	opt stack 14
 10174                           
 10175                           ;MOTEapp.c: 1407: uint16_t escapeCounter = 0;
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;incstack = 0
 10179  0052E2  0E00               	movlw	0
 10180  0052E4  0100               	movlb	0	; () banked
 10181  0052E6  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10182  0052E8  0E00               	movlw	0
 10183  0052EA  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;MOTEapp.c: 1409: sendCommand("sys get pinana GPIO12");
 10187  0052EC  0E56               	movlw	low STR_185
 10188  0052EE  6F61               	movwf	sendCommand@string& (0+255),b
 10189  0052F0  0E7A               	movlw	high STR_185
 10190  0052F2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10191  0052F4  ECDD  F02A         	call	_sendCommand	;wreg free
 10192                           
 10193                           ;MOTEapp.c: 1410: while ( !MOTEapp_getModuleResponse() )
 10194  0052F8  D009               	goto	l732
 10195  0052FA                     
 10196                           ;MOTEapp.c: 1411: {
 10197                           ;MOTEapp.c: 1412: if (++escapeCounter > 50000)
 10198  0052FA  0100               	movlb	0	; () banked
 10199  0052FC  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10200  0052FE  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10201  005300  0E51               	movlw	81
 10202  005302  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10203  005304  0EC3               	movlw	195
 10204  005306  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10205  005308  B0D8               	btfsc	status,0,c
 10206  00530A  D005               	goto	u7930
 10207  00530C                     l732:
 10208                           
 10209                           ; BSR set to: 0
 10210                           
 10211                           ; BSR set to: 0
 10212  00530C  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10213  005310  0900               	iorlw	0
 10214  005312  B4D8               	btfsc	status,2,c
 10215  005314  D7F2               	goto	l731
 10216  005316                     u7930:
 10217                           
 10218                           ;MOTEapp.c: 1414: }
 10219                           ;MOTEapp.c: 1416: return &moduleResonseBuffer;
 10220  005316  0E64               	movlw	low _moduleResonseBuffer
 10221  005318  0100               	movlb	0	; () banked
 10222  00531A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10223  00531C  0E01               	movlw	high _moduleResonseBuffer
 10224  00531E  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10225  005320  0012               	return	
 10226  005322                     __end_of_moteApp_getTempValue:
 10227                           	opt stack 0
 10228                           tblptru	equ	0xFF8
 10229                           tblptrh	equ	0xFF7
 10230                           tblptrl	equ	0xFF6
 10231                           tablat	equ	0xFF5
 10232                           prodh	equ	0xFF4
 10233                           prodl	equ	0xFF3
 10234                           intcon	equ	0xFF2
 10235                           postinc0	equ	0xFEE
 10236                           wreg	equ	0xFE8
 10237                           indf1	equ	0xFE7
 10238                           postdec1	equ	0xFE5
 10239                           fsr1h	equ	0xFE2
 10240                           fsr1l	equ	0xFE1
 10241                           indf2	equ	0xFDF
 10242                           fsr2h	equ	0xFDA
 10243                           fsr2l	equ	0xFD9
 10244                           status	equ	0xFD8
 10245                           
 10246 ;; *************** function _moteApp_getLightValue *****************
 10247 ;; Defined at:
 10248 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;		None
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  2   14[BANK0 ] PTR unsigned char 
 10255 ;; Registers used:
 10256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10262 ;;      Params:         0       2       0       0       0       0       0       0       0
 10263 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10264 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10265 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10266 ;;Total ram usage:        4 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:   14
 10269 ;; This function calls:
 10270 ;;		_MOTEapp_getModuleResponse
 10271 ;;		_moteApp_setLightString
 10272 ;;		_sendCommand
 10273 ;; This function is called by:
 10274 ;;		_moteHandler
 10275 ;;		_moteRunningProcess
 10276 ;;		_moteApp_testSensors
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text18
 10281  005138                     __ptext18:
 10282                           	opt stack 0
 10283  005138                     _moteApp_getLightValue:
 10284                           	opt stack 14
 10285                           
 10286                           ;MOTEapp.c: 1421: uint16_t escapeCounter = 0;
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;incstack = 0
 10290  005138  0E00               	movlw	0
 10291  00513A  0100               	movlb	0	; () banked
 10292  00513C  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10293  00513E  0E00               	movlw	0
 10294  005140  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;MOTEapp.c: 1423: sendCommand("sys get pinana GPIO13");
 10298  005142  0E6C               	movlw	low STR_186
 10299  005144  6F61               	movwf	sendCommand@string& (0+255),b
 10300  005146  0E7A               	movlw	high STR_186
 10301  005148  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10302  00514A  ECDD  F02A         	call	_sendCommand	;wreg free
 10303                           
 10304                           ;MOTEapp.c: 1424: while ( !MOTEapp_getModuleResponse() )
 10305  00514E  D009               	goto	l739
 10306  005150                     
 10307                           ;MOTEapp.c: 1425: {
 10308                           ;MOTEapp.c: 1426: if (++escapeCounter > 50000)
 10309  005150  0100               	movlb	0	; () banked
 10310  005152  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10311  005154  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10312  005156  0E51               	movlw	81
 10313  005158  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10314  00515A  0EC3               	movlw	195
 10315  00515C  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10316  00515E  B0D8               	btfsc	status,0,c
 10317  005160  D005               	goto	u7910
 10318  005162                     l739:
 10319                           
 10320                           ; BSR set to: 0
 10321                           
 10322                           ; BSR set to: 0
 10323  005162  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10324  005166  0900               	iorlw	0
 10325  005168  B4D8               	btfsc	status,2,c
 10326  00516A  D7F2               	goto	l738
 10327  00516C                     u7910:
 10328                           
 10329                           ;MOTEapp.c: 1428: }
 10330                           ;MOTEapp.c: 1429: moteApp_setLightString(moduleResonseBuffer);
 10331  00516C  0E64               	movlw	low _moduleResonseBuffer
 10332  00516E  0100               	movlb	0	; () banked
 10333  005170  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10334  005172  0E01               	movlw	high _moduleResonseBuffer
 10335  005174  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10336  005176  EC5D  F026         	call	_moteApp_setLightString	;wreg free
 10337                           
 10338                           ;MOTEapp.c: 1430: return &moduleResonseBuffer;
 10339  00517A  0E64               	movlw	low _moduleResonseBuffer
 10340  00517C  0100               	movlb	0	; () banked
 10341  00517E  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10342  005180  0E01               	movlw	high _moduleResonseBuffer
 10343  005182  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10344  005184  0012               	return	
 10345  005186                     __end_of_moteApp_getLightValue:
 10346                           	opt stack 0
 10347                           tblptru	equ	0xFF8
 10348                           tblptrh	equ	0xFF7
 10349                           tblptrl	equ	0xFF6
 10350                           tablat	equ	0xFF5
 10351                           prodh	equ	0xFF4
 10352                           prodl	equ	0xFF3
 10353                           intcon	equ	0xFF2
 10354                           postinc0	equ	0xFEE
 10355                           wreg	equ	0xFE8
 10356                           indf1	equ	0xFE7
 10357                           postdec1	equ	0xFE5
 10358                           fsr1h	equ	0xFE2
 10359                           fsr1l	equ	0xFE1
 10360                           indf2	equ	0xFDF
 10361                           fsr2h	equ	0xFDA
 10362                           fsr2l	equ	0xFD9
 10363                           status	equ	0xFD8
 10364                           
 10365 ;; *************** function _moteApp_setLightString *****************
 10366 ;; Defined at:
 10367 ;;		line 1437 in file "../Includes/Board/MOTEapp.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 10370 ;;		 -> moduleResonseBuffer(64), 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  stingPos        1   13[BANK0 ] unsigned char 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      void 
 10375 ;; Registers used:
 10376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10382 ;;      Params:         0       2       0       0       0       0       0       0       0
 10383 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10385 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10386 ;;Total ram usage:        3 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:   12
 10389 ;; This function calls:
 10390 ;;		_memcpy
 10391 ;; This function is called by:
 10392 ;;		_moteApp_getLightValue
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text19
 10397  004CBA                     __ptext19:
 10398                           	opt stack 0
 10399  004CBA                     _moteApp_setLightString:
 10400                           	opt stack 15
 10401                           
 10402                           ;MOTEapp.c: 1439: memcpy(storedLight, clearLight, sizeof(storedLight));
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;incstack = 0
 10406  004CBA  0EF2               	movlw	low _storedLight
 10407  004CBC  0100               	movlb	0	; () banked
 10408  004CBE  6F60               	movwf	memcpy@d1& (0+255),b
 10409  004CC0  0E01               	movlw	high _storedLight
 10410  004CC2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10411  004CC4  0EED               	movlw	low _clearLight
 10412  004CC6  6F62               	movwf	memcpy@s1& (0+255),b
 10413  004CC8  0E01               	movlw	high _clearLight
 10414  004CCA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10415  004CCC  0E00               	movlw	0
 10416  004CCE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10417  004CD0  0E05               	movlw	5
 10418  004CD2  6F64               	movwf	memcpy@n& (0+255),b
 10419  004CD4  ECE9  F028         	call	_memcpy	;wreg free
 10420                           
 10421                           ;MOTEapp.c: 1440: memcpy(storedLight, lightString, sizeof(storedLight));
 10422  004CD8  0EF2               	movlw	low _storedLight
 10423  004CDA  0100               	movlb	0	; () banked
 10424  004CDC  6F60               	movwf	memcpy@d1& (0+255),b
 10425  004CDE  0E01               	movlw	high _storedLight
 10426  004CE0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10427  004CE2  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10428  004CE6  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10429  004CEA  0E00               	movlw	0
 10430  004CEC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10431  004CEE  0E05               	movlw	5
 10432  004CF0  6F64               	movwf	memcpy@n& (0+255),b
 10433  004CF2  ECE9  F028         	call	_memcpy	;wreg free
 10434                           
 10435                           ;MOTEapp.c: 1442: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10436  004CF6  0E00               	movlw	0
 10437  004CF8  0100               	movlb	0	; () banked
 10438  004CFA  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10439  004CFC                     l8630:
 10440                           
 10441                           ; BSR set to: 0
 10442  004CFC  0E04               	movlw	4
 10443  004CFE  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10444  004D00  D001               	goto	l750
 10445  004D02  D00E               	goto	u6580
 10446  004D04                     l750:
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;MOTEapp.c: 1443: {
 10450                           ;MOTEapp.c: 1444: if (storedLight[stingPos] == 0x00)
 10451                           
 10452                           ; BSR set to: 0
 10453  004D04  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10454  004D06  0D01               	mullw	1
 10455  004D08  0EF2               	movlw	low _storedLight
 10456  004D0A  24F3               	addwf	prodl,w,c
 10457  004D0C  6ED9               	movwf	fsr2l,c
 10458  004D0E  0E01               	movlw	high _storedLight
 10459  004D10  20F4               	addwfc	prodh,w,c
 10460  004D12  6EDA               	movwf	fsr2h,c
 10461  004D14  50DF               	movf	indf2,w,c
 10462  004D16  B4D8               	btfsc	status,2,c
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;MOTEapp.c: 1445: {
 10466                           ;MOTEapp.c: 1446: lightStringSize = stingPos;
 10467  004D18  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10468                           
 10469                           ; BSR set to: 0
 10470                           
 10471                           ; BSR set to: 0
 10472  004D1C  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10473  004D1E  D7EE               	goto	l8630
 10474  004D20                     u6580:
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;MOTEapp.c: 1447: }
 10478                           ;MOTEapp.c: 1448: }
 10479                           ;MOTEapp.c: 1449: __nop();
 10480  004D20  F000               	nop	
 10481  004D22  0012               	return		;funcret
 10482  004D24                     __end_of_moteApp_setLightString:
 10483                           	opt stack 0
 10484                           tblptru	equ	0xFF8
 10485                           tblptrh	equ	0xFF7
 10486                           tblptrl	equ	0xFF6
 10487                           tablat	equ	0xFF5
 10488                           prodh	equ	0xFF4
 10489                           prodl	equ	0xFF3
 10490                           intcon	equ	0xFF2
 10491                           postinc0	equ	0xFEE
 10492                           wreg	equ	0xFE8
 10493                           indf1	equ	0xFE7
 10494                           postdec1	equ	0xFE5
 10495                           fsr1h	equ	0xFE2
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           fsr2h	equ	0xFDA
 10499                           fsr2l	equ	0xFD9
 10500                           status	equ	0xFD8
 10501                           
 10502 ;; *************** function _memcpy *****************
 10503 ;; Defined at:
 10504 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  d1              2    0[BANK0 ] PTR void 
 10507 ;;		 -> storedLight(5), 
 10508 ;;  s1              2    2[BANK0 ] PTR const void 
 10509 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10510 ;;  n               2    4[BANK0 ] unsigned int 
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10513 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10514 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10515 ;;		 -> storedLight(5), 
 10516 ;;  tmp             1   10[BANK0 ] unsigned char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  2    0[BANK0 ] PTR void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10526 ;;      Params:         0       6       0       0       0       0       0       0       0
 10527 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10529 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10530 ;;Total ram usage:       11 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:   11
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_moteApp_setLightString
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text20
 10541  0051D2                     __ptext20:
 10542                           	opt stack 0
 10543  0051D2                     _memcpy:
 10544                           	opt stack 15
 10545                           
 10546                           ;incstack = 0
 10547  0051D2  C062  F068         	movff	memcpy@s1,memcpy@s
 10548  0051D6  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10549  0051DA  C060  F066         	movff	memcpy@d1,memcpy@d
 10550  0051DE  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10551  0051E2  D011               	goto	l2673
 10552  0051E4                     l8182:
 10553  0051E4  C068  FFD9         	movff	memcpy@s,fsr2l
 10554  0051E8  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10555  0051EC  50DF               	movf	indf2,w,c
 10556  0051EE  0100               	movlb	0	; () banked
 10557  0051F0  6F6A               	movwf	memcpy@tmp& (0+255),b
 10558                           
 10559                           ; BSR set to: 0
 10560  0051F2  4B68               	infsnz	memcpy@s& (0+255),f,b
 10561  0051F4  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10562                           
 10563                           ; BSR set to: 0
 10564  0051F6  C066  FFD9         	movff	memcpy@d,fsr2l
 10565  0051FA  C067  FFDA         	movff	memcpy@d+1,fsr2h
 10566  0051FE  C06A  FFDF         	movff	memcpy@tmp,indf2
 10567                           
 10568                           ; BSR set to: 0
 10569  005202  4B66               	infsnz	memcpy@d& (0+255),f,b
 10570  005204  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10571  005206                     l2673:
 10572                           
 10573                           ; BSR set to: 0
 10574  005206  0100               	movlb	0	; () banked
 10575  005208  0764               	decf	memcpy@n& (0+255),f,b
 10576  00520A  A0D8               	btfss	status,0,c
 10577  00520C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10578  00520E  2964               	incf	memcpy@n& (0+255),w,b
 10579  005210  E1E9               	bnz	l8182
 10580  005212  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10581  005214  B4D8               	btfsc	status,2,c
 10582  005216  0012               	return	
 10583  005218  D7E5               	goto	l2674
 10584  00521A                     __end_of_memcpy:
 10585                           	opt stack 0
 10586                           tblptru	equ	0xFF8
 10587                           tblptrh	equ	0xFF7
 10588                           tblptrl	equ	0xFF6
 10589                           tablat	equ	0xFF5
 10590                           prodh	equ	0xFF4
 10591                           prodl	equ	0xFF3
 10592                           intcon	equ	0xFF2
 10593                           postinc0	equ	0xFEE
 10594                           wreg	equ	0xFE8
 10595                           indf1	equ	0xFE7
 10596                           postdec1	equ	0xFE5
 10597                           fsr1h	equ	0xFE2
 10598                           fsr1l	equ	0xFE1
 10599                           indf2	equ	0xFDF
 10600                           fsr2h	equ	0xFDA
 10601                           fsr2l	equ	0xFD9
 10602                           status	equ	0xFD8
 10603                           
 10604 ;; *************** function _moteApp_getLightString *****************
 10605 ;; Defined at:
 10606 ;;		line 1456 in file "../Includes/Board/MOTEapp.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;		None
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;		None
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  2    0[BANK0 ] PTR unsigned char 
 10613 ;; Registers used:
 10614 ;;		wreg, status,2, status,0
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10620 ;;      Params:         0       2       0       0       0       0       0       0       0
 10621 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10623 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10624 ;;Total ram usage:        2 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:   11
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_moteRunningProcess
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text21
 10635  005ADA                     __ptext21:
 10636                           	opt stack 0
 10637  005ADA                     _moteApp_getLightString:
 10638                           	opt stack 17
 10639                           
 10640                           ;MOTEapp.c: 1458: return &storedLight;
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;incstack = 0
 10644  005ADA  0EF2               	movlw	low _storedLight
 10645  005ADC  0100               	movlb	0	; () banked
 10646  005ADE  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 10647  005AE0  0E01               	movlw	high _storedLight
 10648  005AE2  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 10649  005AE4  0012               	return	
 10650  005AE6                     __end_of_moteApp_getLightString:
 10651                           	opt stack 0
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           postinc0	equ	0xFEE
 10660                           wreg	equ	0xFE8
 10661                           indf1	equ	0xFE7
 10662                           postdec1	equ	0xFE5
 10663                           fsr1h	equ	0xFE2
 10664                           fsr1l	equ	0xFE1
 10665                           indf2	equ	0xFDF
 10666                           fsr2h	equ	0xFDA
 10667                           fsr2l	equ	0xFD9
 10668                           status	equ	0xFD8
 10669                           
 10670 ;; *************** function _moteApp_convertSensorValue *****************
 10671 ;; Defined at:
 10672 ;;		line 1347 in file "../Includes/Board/MOTEapp.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 10675 ;;		 -> moduleResonseBuffer(64), 
 10676 ;; Auto vars:     Size  Location     Type
 10677 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 10678 ;;  index           1   25[BANK0 ] unsigned char 
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  2   18[BANK0 ] unsigned int 
 10681 ;; Registers used:
 10682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10688 ;;      Params:         0       2       0       0       0       0       0       0       0
 10689 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10690 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10691 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10692 ;;Total ram usage:        8 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:   12
 10695 ;; This function calls:
 10696 ;;		___wmul
 10697 ;; This function is called by:
 10698 ;;		_moteHandler
 10699 ;;		_moteRunningProcess
 10700 ;;		_moteApp_testSensors
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text22
 10705  00498E                     __ptext22:
 10706                           	opt stack 0
 10707  00498E                     _moteApp_convertSensorValue:
 10708                           	opt stack 16
 10709                           
 10710                           ;MOTEapp.c: 1349: uint8_t index;
 10711                           ;MOTEapp.c: 1350: uint16_t convertedValue = 0;
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;incstack = 0
 10715  00498E  0E00               	movlw	0
 10716  004990  0100               	movlb	0	; () banked
 10717  004992  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10718  004994  0E00               	movlw	0
 10719  004996  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10720                           
 10721                           ;MOTEapp.c: 1351: for(index = 0; index < 4; index++)
 10722  004998  0E00               	movlw	0
 10723  00499A  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 10724  00499C                     l9538:
 10725                           
 10726                           ; BSR set to: 0
 10727  00499C  0E03               	movlw	3
 10728  00499E  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 10729  0049A0  D001               	goto	l708
 10730  0049A2  D02F               	goto	u7970
 10731  0049A4                     l708:
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;MOTEapp.c: 1352: {
 10735                           ;MOTEapp.c: 1353: if (*string != 0)
 10736                           
 10737                           ; BSR set to: 0
 10738  0049A4  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10739  0049A8  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10740  0049AC  50DF               	movf	indf2,w,c
 10741  0049AE  B4D8               	btfsc	status,2,c
 10742  0049B0  D028               	goto	u7970
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;MOTEapp.c: 1354: {
 10746                           ;MOTEapp.c: 1355: if (index != 0)
 10747  0049B2  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 10748  0049B4  B4D8               	btfsc	status,2,c
 10749  0049B6  D00E               	goto	l711
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;MOTEapp.c: 1356: convertedValue = convertedValue * 10;
 10753  0049B8  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 10754  0049BC  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 10755  0049C0  0E00               	movlw	0
 10756  0049C2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10757  0049C4  0E0A               	movlw	10
 10758  0049C6  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10759  0049C8  ECC3  F02B         	call	___wmul	;wreg free
 10760  0049CC  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 10761  0049D0  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 10762  0049D4                     l711:
 10763                           
 10764                           ;MOTEapp.c: 1358: convertedValue = (*string++ - '0') + convertedValue;
 10765  0049D4  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10766  0049D8  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10767  0049DC  50DF               	movf	indf2,w,c
 10768  0049DE  0100               	movlb	0	; () banked
 10769  0049E0  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 10770  0049E2  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 10771  0049E4  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 10772  0049E6  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 10773  0049E8  0E00               	movlw	0
 10774  0049EA  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 10775  0049EC  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 10776  0049EE  0ED0               	movlw	208
 10777  0049F0  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 10778  0049F2  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10779  0049F4  0EFF               	movlw	255
 10780  0049F6  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 10781  0049F8  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10782                           
 10783                           ; BSR set to: 0
 10784  0049FA  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 10785  0049FC  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 10786                           
 10787                           ; BSR set to: 0
 10788                           
 10789                           ; BSR set to: 0
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;MOTEapp.c: 1360: else
 10793                           ;MOTEapp.c: 1361: {
 10794                           ;MOTEapp.c: 1362: break;
 10795                           
 10796                           ;MOTEapp.c: 1359: }
 10797  0049FE  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 10798  004A00  D7CD               	goto	l9538
 10799  004A02                     u7970:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;MOTEapp.c: 1363: }
 10803                           ;MOTEapp.c: 1364: }
 10804                           ;MOTEapp.c: 1365: return convertedValue;
 10805  004A02  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 10806  004A06  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 10807                           
 10808                           ; BSR set to: 0
 10809  004A0A  0012               	return		;funcret
 10810  004A0C                     __end_of_moteApp_convertSensorValue:
 10811                           	opt stack 0
 10812                           tblptru	equ	0xFF8
 10813                           tblptrh	equ	0xFF7
 10814                           tblptrl	equ	0xFF6
 10815                           tablat	equ	0xFF5
 10816                           prodh	equ	0xFF4
 10817                           prodl	equ	0xFF3
 10818                           intcon	equ	0xFF2
 10819                           postinc0	equ	0xFEE
 10820                           wreg	equ	0xFE8
 10821                           indf1	equ	0xFE7
 10822                           postdec1	equ	0xFE5
 10823                           fsr1h	equ	0xFE2
 10824                           fsr1l	equ	0xFE1
 10825                           indf2	equ	0xFDF
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function ___wmul *****************
 10831 ;; Defined at:
 10832 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10835 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;  product         2    4[BANK0 ] unsigned int 
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  2    0[BANK0 ] unsigned int 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, prodl, prodh
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10847 ;;      Params:         0       4       0       0       0       0       0       0       0
 10848 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10850 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10851 ;;Total ram usage:        6 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:   11
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		_moteApp_convertSensorValue
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text23
 10862  005786                     __ptext23:
 10863                           	opt stack 0
 10864  005786                     ___wmul:
 10865                           	opt stack 16
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;incstack = 0
 10869  005786  0100               	movlb	0	; () banked
 10870  005788  5160               	movf	___wmul@multiplier& (0+255),w,b
 10871  00578A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10872  00578C  CFF3 F064          	movff	prodl,___wmul@product
 10873  005790  CFF4 F065          	movff	prodh,___wmul@product+1
 10874  005794  5160               	movf	___wmul@multiplier& (0+255),w,b
 10875  005796  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10876  005798  50F3               	movf	prodl,w,c
 10877  00579A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10878  00579C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10879  00579E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10880  0057A0  50F3               	movf	prodl,w,c
 10881  0057A2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10882                           
 10883                           ; BSR set to: 0
 10884  0057A4  C064  F060         	movff	___wmul@product,?___wmul
 10885  0057A8  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10886  0057AC  0012               	return	
 10887  0057AE                     __end_of___wmul:
 10888                           	opt stack 0
 10889                           tblptru	equ	0xFF8
 10890                           tblptrh	equ	0xFF7
 10891                           tblptrl	equ	0xFF6
 10892                           tablat	equ	0xFF5
 10893                           prodh	equ	0xFF4
 10894                           prodl	equ	0xFF3
 10895                           intcon	equ	0xFF2
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           indf1	equ	0xFE7
 10899                           postdec1	equ	0xFE5
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           fsr2h	equ	0xFDA
 10904                           fsr2l	equ	0xFD9
 10905                           status	equ	0xFD8
 10906                           
 10907 ;; *************** function _moteApp_clearBuffers *****************
 10908 ;; Defined at:
 10909 ;;		line 1287 in file "../Includes/Board/MOTEapp.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  counter         1    3[BANK0 ] unsigned char 
 10914 ;;  counter         1    2[BANK0 ] unsigned char 
 10915 ;;  counter         1    1[BANK0 ] unsigned char 
 10916 ;;  counter         1    0[BANK0 ] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0
 10927 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10929 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10930 ;;Total ram usage:        4 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:   11
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_moteRunningProcess
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text24
 10941  0044D4                     __ptext24:
 10942                           	opt stack 0
 10943  0044D4                     _moteApp_clearBuffers:
 10944                           	opt stack 17
 10945                           
 10946                           ;MOTEapp.c: 1289: for (uint8_t counter = 0; counter < 3; counter++)
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;incstack = 0
 10950  0044D4  0E00               	movlw	0
 10951  0044D6  0100               	movlb	0	; () banked
 10952  0044D8  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 10953  0044DA                     l9612:
 10954                           
 10955                           ; BSR set to: 0
 10956  0044DA  0E02               	movlw	2
 10957  0044DC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 10958  0044DE  D001               	goto	l684
 10959  0044E0  D00C               	goto	u8060
 10960  0044E2                     l684:
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;MOTEapp.c: 1290: {
 10964                           ;MOTEapp.c: 1291: responsePortNum[counter] = 0;
 10965                           
 10966                           ; BSR set to: 0
 10967  0044E2  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 10968  0044E4  0D01               	mullw	1
 10969  0044E6  0EF7               	movlw	low _responsePortNum
 10970  0044E8  24F3               	addwf	prodl,w,c
 10971  0044EA  6ED9               	movwf	fsr2l,c
 10972  0044EC  0E01               	movlw	high _responsePortNum
 10973  0044EE  20F4               	addwfc	prodh,w,c
 10974  0044F0  6EDA               	movwf	fsr2h,c
 10975  0044F2  0E00               	movlw	0
 10976  0044F4  6EDF               	movwf	indf2,c
 10977                           
 10978                           ; BSR set to: 0
 10979  0044F6  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 10980  0044F8  D7F0               	goto	l9612
 10981  0044FA                     u8060:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;MOTEapp.c: 1292: }
 10985                           ;MOTEapp.c: 1293: for (uint8_t counter = 0; counter < 34; counter++)
 10986                           
 10987                           ; BSR set to: 0
 10988  0044FA  0E00               	movlw	0
 10989  0044FC  6F61               	movwf	moteApp_clearBuffers@counter_1714& (0+255),b
 10990  0044FE                     l9624:
 10991                           
 10992                           ; BSR set to: 0
 10993  0044FE  0E21               	movlw	33
 10994  004500  6561               	cpfsgt	moteApp_clearBuffers@counter_1714& (0+255),b
 10995  004502  D001               	goto	l686
 10996  004504  D00C               	goto	u8080
 10997  004506                     l686:
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;MOTEapp.c: 1294: {
 11001                           ;MOTEapp.c: 1295: responseId[counter] = 0;
 11002                           
 11003                           ; BSR set to: 0
 11004  004506  5161               	movf	moteApp_clearBuffers@counter_1714& (0+255),w,b
 11005  004508  0D01               	mullw	1
 11006  00450A  0E30               	movlw	low _responseId
 11007  00450C  24F3               	addwf	prodl,w,c
 11008  00450E  6ED9               	movwf	fsr2l,c
 11009  004510  0E01               	movlw	high _responseId
 11010  004512  20F4               	addwfc	prodh,w,c
 11011  004514  6EDA               	movwf	fsr2h,c
 11012  004516  0E00               	movlw	0
 11013  004518  6EDF               	movwf	indf2,c
 11014                           
 11015                           ; BSR set to: 0
 11016  00451A  2B61               	incf	moteApp_clearBuffers@counter_1714& (0+255),f,b
 11017  00451C  D7F0               	goto	l9624
 11018  00451E                     u8080:
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;MOTEapp.c: 1296: }
 11022                           ;MOTEapp.c: 1297: for (uint8_t counter = 0; counter < 32; counter++)
 11023                           
 11024                           ; BSR set to: 0
 11025  00451E  0E00               	movlw	0
 11026  004520  6F62               	movwf	moteApp_clearBuffers@counter_1715& (0+255),b
 11027  004522                     l9636:
 11028                           
 11029                           ; BSR set to: 0
 11030  004522  0E1F               	movlw	31
 11031  004524  6562               	cpfsgt	moteApp_clearBuffers@counter_1715& (0+255),b
 11032  004526  D001               	goto	l688
 11033  004528  D00C               	goto	u8100
 11034  00452A                     l688:
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;MOTEapp.c: 1298: {
 11038                           ;MOTEapp.c: 1299: responseData[counter] = 0;
 11039                           
 11040                           ; BSR set to: 0
 11041  00452A  5162               	movf	moteApp_clearBuffers@counter_1715& (0+255),w,b
 11042  00452C  0D01               	mullw	1
 11043  00452E  0EA4               	movlw	low _responseData
 11044  004530  24F3               	addwf	prodl,w,c
 11045  004532  6ED9               	movwf	fsr2l,c
 11046  004534  0E01               	movlw	high _responseData
 11047  004536  20F4               	addwfc	prodh,w,c
 11048  004538  6EDA               	movwf	fsr2h,c
 11049  00453A  0E00               	movlw	0
 11050  00453C  6EDF               	movwf	indf2,c
 11051                           
 11052                           ; BSR set to: 0
 11053  00453E  2B62               	incf	moteApp_clearBuffers@counter_1715& (0+255),f,b
 11054  004540  D7F0               	goto	l9636
 11055  004542                     u8100:
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;MOTEapp.c: 1300: }
 11059                           ;MOTEapp.c: 1301: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11060                           
 11061                           ; BSR set to: 0
 11062  004542  0E00               	movlw	0
 11063  004544  6F63               	movwf	moteApp_clearBuffers@counter_1716& (0+255),b
 11064  004546                     l9648:
 11065                           
 11066                           ; BSR set to: 0
 11067  004546  0E0F               	movlw	15
 11068  004548  6563               	cpfsgt	moteApp_clearBuffers@counter_1716& (0+255),b
 11069  00454A  D001               	goto	l690
 11070  00454C  0012               	return	
 11071  00454E                     l690:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;MOTEapp.c: 1302: {
 11075                           ;MOTEapp.c: 1303: dataBuffer[counter] = 0;
 11076                           
 11077                           ; BSR set to: 0
 11078  00454E  5163               	movf	moteApp_clearBuffers@counter_1716& (0+255),w,b
 11079  004550  0D01               	mullw	1
 11080  004552  0EC4               	movlw	low _dataBuffer
 11081  004554  24F3               	addwf	prodl,w,c
 11082  004556  6ED9               	movwf	fsr2l,c
 11083  004558  0E01               	movlw	high _dataBuffer
 11084  00455A  20F4               	addwfc	prodh,w,c
 11085  00455C  6EDA               	movwf	fsr2h,c
 11086  00455E  0E00               	movlw	0
 11087  004560  6EDF               	movwf	indf2,c
 11088                           
 11089                           ; BSR set to: 0
 11090  004562  2B63               	incf	moteApp_clearBuffers@counter_1716& (0+255),f,b
 11091  004564  D7F0               	goto	l9648
 11092  004566                     __end_of_moteApp_clearBuffers:
 11093                           	opt stack 0
 11094                           tblptru	equ	0xFF8
 11095                           tblptrh	equ	0xFF7
 11096                           tblptrl	equ	0xFF6
 11097                           tablat	equ	0xFF5
 11098                           prodh	equ	0xFF4
 11099                           prodl	equ	0xFF3
 11100                           intcon	equ	0xFF2
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           indf1	equ	0xFE7
 11104                           postdec1	equ	0xFE5
 11105                           fsr1h	equ	0xFE2
 11106                           fsr1l	equ	0xFE1
 11107                           indf2	equ	0xFDF
 11108                           fsr2h	equ	0xFDA
 11109                           fsr2l	equ	0xFD9
 11110                           status	equ	0xFD8
 11111                           
 11112 ;; *************** function _moteApp_addToDataBuffer *****************
 11113 ;; Defined at:
 11114 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11117 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11118 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;  index           1   21[BANK0 ] unsigned char 
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      unsigned char 
 11123 ;; Registers used:
 11124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11130 ;;      Params:         0       3       0       0       0       0       0       0       0
 11131 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11133 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11134 ;;Total ram usage:        4 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:   11
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_moteRunningProcess
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text25
 11145  004F1E                     __ptext25:
 11146                           	opt stack 0
 11147  004F1E                     _moteApp_addToDataBuffer:
 11148                           	opt stack 17
 11149                           
 11150                           ;MOTEapp.c: 1331: uint8_t index;
 11151                           ;MOTEapp.c: 1332: for(index = 0; index < 6; index++)
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;incstack = 0
 11155  004F1E  0E00               	movlw	0
 11156  004F20  0100               	movlb	0	; () banked
 11157  004F22  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11158  004F24                     l9686:
 11159                           
 11160                           ; BSR set to: 0
 11161  004F24  0E05               	movlw	5
 11162  004F26  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11163  004F28  D001               	goto	l701
 11164  004F2A  D026               	goto	u8190
 11165  004F2C                     l701:
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;MOTEapp.c: 1333: {
 11169                           ;MOTEapp.c: 1334: if (*string != 0)
 11170                           
 11171                           ; BSR set to: 0
 11172  004F2C  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11173  004F30  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11174  004F34  50DF               	movf	indf2,w,c
 11175  004F36  B4D8               	btfsc	status,2,c
 11176  004F38  D012               	goto	l703
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;MOTEapp.c: 1335: {
 11180                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation++] = *string++;
 11181  004F3A  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11182  004F3E  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11183  004F42  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11184  004F44  0D01               	mullw	1
 11185  004F46  0EC4               	movlw	low _dataBuffer
 11186  004F48  24F3               	addwf	prodl,w,c
 11187  004F4A  6EE1               	movwf	fsr1l,c
 11188  004F4C  0E01               	movlw	high _dataBuffer
 11189  004F4E  20F4               	addwfc	prodh,w,c
 11190  004F50  6EE2               	movwf	fsr1h,c
 11191  004F52  CFDF FFE7          	movff	indf2,indf1
 11192                           
 11193                           ; BSR set to: 0
 11194  004F56  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11195  004F58  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11196                           
 11197                           ; BSR set to: 0
 11198  004F5A  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11199                           
 11200                           ;MOTEapp.c: 1337: }
 11201  004F5C  D00B               	goto	l704
 11202  004F5E                     l703:
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;MOTEapp.c: 1338: else
 11206                           ;MOTEapp.c: 1339: {
 11207                           ;MOTEapp.c: 1340: dataBuffer[bufferLocation] = 0x20;
 11208                           
 11209                           ; BSR set to: 0
 11210  004F5E  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11211  004F60  0D01               	mullw	1
 11212  004F62  0EC4               	movlw	low _dataBuffer
 11213  004F64  24F3               	addwf	prodl,w,c
 11214  004F66  6ED9               	movwf	fsr2l,c
 11215  004F68  0E01               	movlw	high _dataBuffer
 11216  004F6A  20F4               	addwfc	prodh,w,c
 11217  004F6C  6EDA               	movwf	fsr2h,c
 11218  004F6E  0E20               	movlw	32
 11219  004F70  6EDF               	movwf	indf2,c
 11220                           
 11221                           ;MOTEapp.c: 1341: break;
 11222  004F72  D002               	goto	u8190
 11223  004F74                     l704:
 11224                           
 11225                           ; BSR set to: 0
 11226                           
 11227                           ; BSR set to: 0
 11228  004F74  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11229  004F76  D7D6               	goto	l9686
 11230  004F78                     u8190:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;MOTEapp.c: 1342: }
 11234                           ;MOTEapp.c: 1343: }
 11235                           ;MOTEapp.c: 1344: return index;
 11236                           
 11237                           ; BSR set to: 0
 11238  004F78  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11239  004F7A  0012               	return	
 11240  004F7C                     __end_of_moteApp_addToDataBuffer:
 11241                           	opt stack 0
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           intcon	equ	0xFF2
 11249                           postinc0	equ	0xFEE
 11250                           wreg	equ	0xFE8
 11251                           indf1	equ	0xFE7
 11252                           postdec1	equ	0xFE5
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           fsr2h	equ	0xFDA
 11257                           fsr2l	equ	0xFD9
 11258                           status	equ	0xFD8
 11259                           
 11260 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11261 ;; Defined at:
 11262 ;;		line 1307 in file "../Includes/Board/MOTEapp.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;  number          1    wreg     unsigned char 
 11265 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  number          1    9[BANK0 ] unsigned char 
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11277 ;;      Params:         0       1       0       0       0       0       0       0       0
 11278 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11279 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11280 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11281 ;;Total ram usage:        4 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:   12
 11284 ;; This function calls:
 11285 ;;		___awmod
 11286 ;;		___lbdiv
 11287 ;; This function is called by:
 11288 ;;		_moteRunningProcess
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text26
 11293  003EF0                     __ptext26:
 11294                           	opt stack 0
 11295  003EF0                     _moteApp_add8bToDataBuffer:
 11296                           	opt stack 16
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;incstack = 0
 11300                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11301  003EF0  0100               	movlb	0	; () banked
 11302  003EF2  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11303                           
 11304                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11305  003EF4  0100               	movlb	0	; () banked
 11306  003EF6  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11307  003EF8  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11308  003EFA  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11309  003EFC  0E02               	movlw	2
 11310  003EFE  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11311  003F00  0E00               	movlw	0
 11312  003F02  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11313  003F04  0EC4               	movlw	low _dataBuffer
 11314  003F06  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11315  003F08  6ED9               	movwf	fsr2l,c
 11316  003F0A  0E01               	movlw	high _dataBuffer
 11317  003F0C  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11318  003F0E  6EDA               	movwf	fsr2h,c
 11319  003F10  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11320  003F14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11321  003F16  0E00               	movlw	0
 11322  003F18  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11323  003F1A  0E0A               	movlw	10
 11324  003F1C  6F62               	movwf	___awmod@divisor& (0+255),b
 11325  003F1E  ECB7  F025         	call	___awmod	;wreg free
 11326  003F22  0100               	movlb	0	; () banked
 11327  003F24  5160               	movf	?___awmod& (0+255),w,b
 11328  003F26  0F30               	addlw	48
 11329  003F28  6EDF               	movwf	indf2,c
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;MOTEapp.c: 1310: number /= 10;
 11333  003F2A  0E0A               	movlw	10
 11334  003F2C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11335  003F2E  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11336  003F30  EC91  F029         	call	___lbdiv
 11337  003F34  0100               	movlb	0	; () banked
 11338  003F36  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11342  003F38  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11343  003F3A  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11344  003F3C  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11345  003F3E  0E01               	movlw	1
 11346  003F40  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11347  003F42  0E00               	movlw	0
 11348  003F44  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11349  003F46  0EC4               	movlw	low _dataBuffer
 11350  003F48  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11351  003F4A  6ED9               	movwf	fsr2l,c
 11352  003F4C  0E01               	movlw	high _dataBuffer
 11353  003F4E  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11354  003F50  6EDA               	movwf	fsr2h,c
 11355  003F52  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11356  003F56  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11357  003F58  0E00               	movlw	0
 11358  003F5A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11359  003F5C  0E0A               	movlw	10
 11360  003F5E  6F62               	movwf	___awmod@divisor& (0+255),b
 11361  003F60  ECB7  F025         	call	___awmod	;wreg free
 11362  003F64  0100               	movlb	0	; () banked
 11363  003F66  5160               	movf	?___awmod& (0+255),w,b
 11364  003F68  0F30               	addlw	48
 11365  003F6A  6EDF               	movwf	indf2,c
 11366                           
 11367                           ;MOTEapp.c: 1312: number /= 10;
 11368  003F6C  0E0A               	movlw	10
 11369  003F6E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11370  003F70  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11371  003F72  EC91  F029         	call	___lbdiv
 11372  003F76  0100               	movlb	0	; () banked
 11373  003F78  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;MOTEapp.c: 1313: dataBuffer[bufferLocation] = '0' + (number % 10);
 11377  003F7A  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11378  003F7C  0D01               	mullw	1
 11379  003F7E  0EC4               	movlw	low _dataBuffer
 11380  003F80  24F3               	addwf	prodl,w,c
 11381  003F82  6ED9               	movwf	fsr2l,c
 11382  003F84  0E01               	movlw	high _dataBuffer
 11383  003F86  20F4               	addwfc	prodh,w,c
 11384  003F88  6EDA               	movwf	fsr2h,c
 11385  003F8A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11386  003F8E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11387  003F90  0E00               	movlw	0
 11388  003F92  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11389  003F94  0E0A               	movlw	10
 11390  003F96  6F62               	movwf	___awmod@divisor& (0+255),b
 11391  003F98  ECB7  F025         	call	___awmod	;wreg free
 11392  003F9C  0100               	movlb	0	; () banked
 11393  003F9E  5160               	movf	?___awmod& (0+255),w,b
 11394  003FA0  0F30               	addlw	48
 11395  003FA2  6EDF               	movwf	indf2,c
 11396                           
 11397                           ; BSR set to: 0
 11398  003FA4  0012               	return		;funcret
 11399  003FA6                     __end_of_moteApp_add8bToDataBuffer:
 11400                           	opt stack 0
 11401                           tblptru	equ	0xFF8
 11402                           tblptrh	equ	0xFF7
 11403                           tblptrl	equ	0xFF6
 11404                           tablat	equ	0xFF5
 11405                           prodh	equ	0xFF4
 11406                           prodl	equ	0xFF3
 11407                           intcon	equ	0xFF2
 11408                           postinc0	equ	0xFEE
 11409                           wreg	equ	0xFE8
 11410                           indf1	equ	0xFE7
 11411                           postdec1	equ	0xFE5
 11412                           fsr1h	equ	0xFE2
 11413                           fsr1l	equ	0xFE1
 11414                           indf2	equ	0xFDF
 11415                           fsr2h	equ	0xFDA
 11416                           fsr2l	equ	0xFD9
 11417                           status	equ	0xFD8
 11418                           
 11419 ;; *************** function ___lbdiv *****************
 11420 ;; Defined at:
 11421 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  dividend        1    wreg     unsigned char 
 11424 ;;  divisor         1    0[BANK0 ] unsigned char 
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  dividend        1    1[BANK0 ] unsigned char 
 11427 ;;  quotient        1    3[BANK0 ] unsigned char 
 11428 ;;  counter         1    2[BANK0 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      unsigned char 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11438 ;;      Params:         0       1       0       0       0       0       0       0       0
 11439 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11440 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11441 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11442 ;;Total ram usage:        4 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:   11
 11445 ;; This function calls:
 11446 ;;		Nothing
 11447 ;; This function is called by:
 11448 ;;		_moteApp_add8bToDataBuffer
 11449 ;;		_oled_putUint8
 11450 ;;		_oled_putint8
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text27
 11455  005322                     __ptext27:
 11456                           	opt stack 0
 11457  005322                     ___lbdiv:
 11458                           	opt stack 16
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;incstack = 0
 11462                           ;___lbdiv@dividend stored from wreg
 11463  005322  0100               	movlb	0	; () banked
 11464  005324  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11465  005326  0E00               	movlw	0
 11466  005328  0100               	movlb	0	; () banked
 11467  00532A  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11468                           
 11469                           ; BSR set to: 0
 11470  00532C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11471  00532E  B4D8               	btfsc	status,2,c
 11472  005330  D015               	goto	l2580
 11473                           
 11474                           ; BSR set to: 0
 11475  005332  0E01               	movlw	1
 11476  005334  6F62               	movwf	___lbdiv@counter& (0+255),b
 11477  005336  D003               	goto	l2575
 11478  005338                     
 11479                           ; BSR set to: 0
 11480                           
 11481                           ; BSR set to: 0
 11482  005338  90D8               	bcf	status,0,c
 11483  00533A  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11484                           
 11485                           ; BSR set to: 0
 11486  00533C  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11487  00533E                     l2575:
 11488                           
 11489                           ; BSR set to: 0
 11490                           
 11491                           ; BSR set to: 0
 11492  00533E  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11493  005340  D7FB               	goto	l2576
 11494  005342                     u7720:
 11495                           
 11496                           ; BSR set to: 0
 11497                           
 11498                           ; BSR set to: 0
 11499                           
 11500                           ; BSR set to: 0
 11501  005342  90D8               	bcf	status,0,c
 11502  005344  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11503  005346  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11504  005348  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11505  00534A  A0D8               	btfss	status,0,c
 11506  00534C  D003               	goto	l2579
 11507                           
 11508                           ; BSR set to: 0
 11509  00534E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11510  005350  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513  005352  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11514  005354                     l2579:
 11515                           
 11516                           ; BSR set to: 0
 11517                           
 11518                           ; BSR set to: 0
 11519  005354  90D8               	bcf	status,0,c
 11520  005356  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11521                           
 11522                           ; BSR set to: 0
 11523  005358  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11524  00535A  D7F3               	goto	u7720
 11525  00535C                     l2580:
 11526                           
 11527                           ; BSR set to: 0
 11528                           
 11529                           ; BSR set to: 0
 11530                           
 11531                           ; BSR set to: 0
 11532  00535C  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11533  00535E  0012               	return	
 11534  005360                     __end_of___lbdiv:
 11535                           	opt stack 0
 11536                           tblptru	equ	0xFF8
 11537                           tblptrh	equ	0xFF7
 11538                           tblptrl	equ	0xFF6
 11539                           tablat	equ	0xFF5
 11540                           prodh	equ	0xFF4
 11541                           prodl	equ	0xFF3
 11542                           intcon	equ	0xFF2
 11543                           postinc0	equ	0xFEE
 11544                           wreg	equ	0xFE8
 11545                           indf1	equ	0xFE7
 11546                           postdec1	equ	0xFE5
 11547                           fsr1h	equ	0xFE2
 11548                           fsr1l	equ	0xFE1
 11549                           indf2	equ	0xFDF
 11550                           fsr2h	equ	0xFDA
 11551                           fsr2l	equ	0xFD9
 11552                           status	equ	0xFD8
 11553                           
 11554 ;; *************** function ___awmod *****************
 11555 ;; Defined at:
 11556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  dividend        2    0[BANK0 ] int 
 11559 ;;  divisor         2    2[BANK0 ] int 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  sign            1    5[BANK0 ] unsigned char 
 11562 ;;  counter         1    4[BANK0 ] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  2    0[BANK0 ] int 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11572 ;;      Params:         0       4       0       0       0       0       0       0       0
 11573 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11575 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11576 ;;Total ram usage:        6 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:   11
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_moteApp_add8bToDataBuffer
 11583 ;;		_oled_putUint8
 11584 ;;		_oled_putint8
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text28
 11589  004B6E                     __ptext28:
 11590                           	opt stack 0
 11591  004B6E                     ___awmod:
 11592                           	opt stack 16
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;incstack = 0
 11596  004B6E  0E00               	movlw	0
 11597  004B70  0100               	movlb	0	; () banked
 11598  004B72  6F65               	movwf	___awmod@sign& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601  004B74  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11602  004B76  D006               	goto	l2426
 11603                           
 11604                           ; BSR set to: 0
 11605  004B78  6D60               	negf	___awmod@dividend& (0+255),b
 11606  004B7A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11607  004B7C  B0D8               	btfsc	status,0,c
 11608  004B7E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11609                           
 11610                           ; BSR set to: 0
 11611  004B80  0E01               	movlw	1
 11612  004B82  6F65               	movwf	___awmod@sign& (0+255),b
 11613  004B84                     l2426:
 11614                           
 11615                           ; BSR set to: 0
 11616                           
 11617                           ; BSR set to: 0
 11618  004B84  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11619  004B86  D004               	goto	l2427
 11620                           
 11621                           ; BSR set to: 0
 11622  004B88  6D62               	negf	___awmod@divisor& (0+255),b
 11623  004B8A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11624  004B8C  B0D8               	btfsc	status,0,c
 11625  004B8E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11626  004B90                     l2427:
 11627                           
 11628                           ; BSR set to: 0
 11629                           
 11630                           ; BSR set to: 0
 11631  004B90  5162               	movf	___awmod@divisor& (0+255),w,b
 11632  004B92  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11633  004B94  B4D8               	btfsc	status,2,c
 11634  004B96  D018               	goto	l2434
 11635                           
 11636                           ; BSR set to: 0
 11637  004B98  0E01               	movlw	1
 11638  004B9A  6F64               	movwf	___awmod@counter& (0+255),b
 11639  004B9C  D004               	goto	l2429
 11640  004B9E                     
 11641                           ; BSR set to: 0
 11642                           
 11643                           ; BSR set to: 0
 11644  004B9E  90D8               	bcf	status,0,c
 11645  004BA0  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11646  004BA2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11647  004BA4  2B64               	incf	___awmod@counter& (0+255),f,b
 11648  004BA6                     l2429:
 11649                           
 11650                           ; BSR set to: 0
 11651                           
 11652                           ; BSR set to: 0
 11653  004BA6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11654  004BA8  D7FA               	goto	l2430
 11655  004BAA                     u7610:
 11656                           
 11657                           ; BSR set to: 0
 11658                           
 11659                           ; BSR set to: 0
 11660                           
 11661                           ; BSR set to: 0
 11662  004BAA  5162               	movf	___awmod@divisor& (0+255),w,b
 11663  004BAC  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11664  004BAE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11665  004BB0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11666  004BB2  A0D8               	btfss	status,0,c
 11667  004BB4  D004               	goto	l2433
 11668                           
 11669                           ; BSR set to: 0
 11670  004BB6  5162               	movf	___awmod@divisor& (0+255),w,b
 11671  004BB8  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11672  004BBA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11673  004BBC  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11674  004BBE                     l2433:
 11675                           
 11676                           ; BSR set to: 0
 11677                           
 11678                           ; BSR set to: 0
 11679  004BBE  90D8               	bcf	status,0,c
 11680  004BC0  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11681  004BC2  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11682                           
 11683                           ; BSR set to: 0
 11684  004BC4  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11685  004BC6  D7F1               	goto	u7610
 11686  004BC8                     l2434:
 11687                           
 11688                           ; BSR set to: 0
 11689                           
 11690                           ; BSR set to: 0
 11691                           
 11692                           ; BSR set to: 0
 11693  004BC8  5165               	movf	___awmod@sign& (0+255),w,b
 11694  004BCA  B4D8               	btfsc	status,2,c
 11695  004BCC  D004               	goto	l2435
 11696                           
 11697                           ; BSR set to: 0
 11698  004BCE  6D60               	negf	___awmod@dividend& (0+255),b
 11699  004BD0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11700  004BD2  B0D8               	btfsc	status,0,c
 11701  004BD4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11702  004BD6                     l2435:
 11703                           
 11704                           ; BSR set to: 0
 11705                           
 11706                           ; BSR set to: 0
 11707  004BD6  C060  F060         	movff	___awmod@dividend,?___awmod
 11708  004BDA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11709  004BDE  0012               	return	
 11710  004BE0                     __end_of___awmod:
 11711                           	opt stack 0
 11712                           tblptru	equ	0xFF8
 11713                           tblptrh	equ	0xFF7
 11714                           tblptrl	equ	0xFF6
 11715                           tablat	equ	0xFF5
 11716                           prodh	equ	0xFF4
 11717                           prodl	equ	0xFF3
 11718                           intcon	equ	0xFF2
 11719                           postinc0	equ	0xFEE
 11720                           wreg	equ	0xFE8
 11721                           indf1	equ	0xFE7
 11722                           postdec1	equ	0xFE5
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           fsr2h	equ	0xFDA
 11727                           fsr2l	equ	0xFD9
 11728                           status	equ	0xFD8
 11729                           
 11730 ;; *************** function _moteApp_GoToSleep *****************
 11731 ;; Defined at:
 11732 ;;		line 1175 in file "../Includes/Board/MOTEapp.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;  status          1   14[BANK0 ] unsigned char 
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      unsigned char 
 11739 ;; Registers used:
 11740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11746 ;;      Params:         0       0       0       0       0       0       0       0       0
 11747 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11749 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11750 ;;Total ram usage:        1 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:   17
 11753 ;; This function calls:
 11754 ;;		_EUSART_FlushBuffer
 11755 ;;		_PIN_MANAGER_Initialize
 11756 ;;		_moduleResync
 11757 ;;		_moduleSleep
 11758 ;;		_moteApp_delayms
 11759 ;;		_oled_displayOff
 11760 ;;		_oled_init
 11761 ;; This function is called by:
 11762 ;;		_moteRunningProcess
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           	psect	text29
 11767  003736                     __ptext29:
 11768                           	opt stack 0
 11769  003736                     _moteApp_GoToSleep:
 11770                           	opt stack 11
 11771                           
 11772                           ;MOTEapp.c: 1177: uint8_t status = 0;
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;incstack = 0
 11776  003736  0E00               	movlw	0
 11777  003738  0100               	movlb	0	; () banked
 11778  00373A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11779  00373C                     
 11780                           ; BSR set to: 0
 11781  00373C  A081               	btfss	3969,0,c	;volatile
 11782  00373E  D7FE               	goto	l666
 11783                           
 11784                           ;MOTEapp.c: 1179: moduleSleep();
 11785  003740  ECEB  F02B         	call	_moduleSleep	;wreg free
 11786                           
 11787                           ;MOTEapp.c: 1180: oled_displayOff(1);
 11788  003744  0E01               	movlw	1
 11789  003746  EC98  F02D         	call	_oled_displayOff
 11790                           
 11791                           ;MOTEapp.c: 1181: ADCON0bits.ADON = 0;
 11792  00374A  90C2               	bcf	4034,0,c	;volatile
 11793                           
 11794                           ;MOTEapp.c: 1182: INTCONbits.GIE = 0;
 11795  00374C  9EF2               	bcf	intcon,7,c	;volatile
 11796                           
 11797                           ;MOTEapp.c: 1183: GIE = 0;
 11798  00374E  9EF2               	bcf	intcon,7,c	;volatile
 11799                           
 11800                           ;MOTEapp.c: 1184: PEIE = 0;
 11801  003750  9CF2               	bcf	intcon,6,c	;volatile
 11802                           
 11803                           ;MOTEapp.c: 1186: LATEbits.LATE2 = 0;
 11804  003752  948D               	bcf	3981,2,c	;volatile
 11805                           
 11806                           ;MOTEapp.c: 1187: PIE2bits.TMR3IE = 0;
 11807  003754  92A0               	bcf	4000,1,c	;volatile
 11808                           
 11809                           ;MOTEapp.c: 1189: ANSELAbits.ANSA0 = 1;
 11810  003756  010F               	movlb	15	; () banked
 11811  003758  815B               	bsf	91,0,b	;volatile
 11812                           
 11813                           ; BSR set to: 15
 11814                           ;MOTEapp.c: 1191: PIE2bits.C1IE = 1;
 11815  00375A  8CA0               	bsf	4000,6,c	;volatile
 11816                           
 11817                           ; BSR set to: 15
 11818                           ;MOTEapp.c: 1192: INTCON3bits.INT1IE = 1;
 11819  00375C  86F0               	bsf	intcon3,3,c	;volatile
 11820                           
 11821                           ; BSR set to: 15
 11822                           ;MOTEapp.c: 1193: INTCONbits.INT0IE = 1;
 11823  00375E  88F2               	bsf	intcon,4,c	;volatile
 11824                           
 11825                           ; BSR set to: 15
 11826                           ;MOTEapp.c: 1194: IOCCbits.IOCC2 = 1;
 11827  003760  8487               	bsf	3975,2,c	;volatile
 11828                           
 11829                           ; BSR set to: 15
 11830                           ;MOTEapp.c: 1197: status = PORTBbits.RB1;
 11831  003762  0E00               	movlw	0
 11832  003764  B281               	btfsc	3969,1,c	;volatile
 11833  003766  0E01               	movlw	1
 11834  003768  0100               	movlb	0	; () banked
 11835  00376A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;MOTEapp.c: 1198: status = PORTBbits.RB0;
 11839  00376C  0E00               	movlw	0
 11840  00376E  B081               	btfsc	3969,0,c	;volatile
 11841  003770  0E01               	movlw	1
 11842  003772  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;MOTEapp.c: 1199: status = PORTCbits.RC2;
 11846  003774  0E00               	movlw	0
 11847  003776  B482               	btfsc	3970,2,c	;volatile
 11848  003778  0E01               	movlw	1
 11849  00377A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;MOTEapp.c: 1201: if (periodicState)
 11853  00377C  51FA               	movf	_periodicState& (0+255),w,b
 11854  00377E  A4D8               	btfss	status,2,c
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;MOTEapp.c: 1202: {
 11858                           ;MOTEapp.c: 1203: WDTCONbits.SWDTEN = 1;
 11859  003780  80D1               	bsf	4049,0,c	;volatile
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;MOTEapp.c: 1204: }
 11863                           ;MOTEapp.c: 1207: INTCONbits.INT0IF = 0;
 11864  003782  92F2               	bcf	intcon,1,c	;volatile
 11865                           
 11866                           ;MOTEapp.c: 1208: INTCON3bits.INT1IF = 0;
 11867  003784  90F0               	bcf	intcon3,0,c	;volatile
 11868                           
 11869                           ;MOTEapp.c: 1209: PIR2bits.C1IF = 0;
 11870  003786  9CA1               	bcf	4001,6,c	;volatile
 11871                           
 11872                           ;MOTEapp.c: 1210: __nop();
 11873  003788  F000               	nop	
 11874  00378A  0003               	sleep		;# 
 11875                           
 11876                           ;MOTEapp.c: 1212: __nop();
 11877  00378C  F000               	nop	
 11878                           
 11879                           ;MOTEapp.c: 1214: WDTCONbits.SWDTEN = 0;
 11880  00378E  90D1               	bcf	4049,0,c	;volatile
 11881                           
 11882                           ;MOTEapp.c: 1215: EUSART_FlushBuffer();
 11883  003790  EC2F  F029         	call	_EUSART_FlushBuffer	;wreg free
 11884                           
 11885                           ;MOTEapp.c: 1218: INTCON3bits.INT1IE = 0;
 11886  003794  96F0               	bcf	intcon3,3,c	;volatile
 11887                           
 11888                           ;MOTEapp.c: 1219: INTCONbits.INT0IE = 0;
 11889  003796  98F2               	bcf	intcon,4,c	;volatile
 11890                           
 11891                           ;MOTEapp.c: 1220: IOCCbits.IOCC2 = 0;
 11892  003798  9487               	bcf	3975,2,c	;volatile
 11893                           
 11894                           ;MOTEapp.c: 1221: PIE2bits.C1IE = 0;
 11895  00379A  9CA0               	bcf	4000,6,c	;volatile
 11896                           
 11897                           ;MOTEapp.c: 1222: GIE = 1;
 11898  00379C  8EF2               	bsf	intcon,7,c	;volatile
 11899                           
 11900                           ;MOTEapp.c: 1224: PIN_MANAGER_Initialize();
 11901  00379E  EC72  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 11902                           
 11903                           ;MOTEapp.c: 1226: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 11904  0037A2  A2F2               	btfss	intcon,1,c	;volatile
 11905  0037A4  B0F0               	btfsc	intcon3,0,c	;volatile
 11906  0037A6  D002               	goto	u8290
 11907  0037A8  ACA1               	btfss	4001,6,c	;volatile
 11908  0037AA  D011               	goto	l669
 11909  0037AC                     u8290:
 11910                           
 11911                           ;MOTEapp.c: 1227: {
 11912                           ;MOTEapp.c: 1229: INTCONbits.INT0IF = 0;
 11913  0037AC  92F2               	bcf	intcon,1,c	;volatile
 11914                           
 11915                           ;MOTEapp.c: 1230: INTCON3bits.INT1IF = 0;
 11916  0037AE  90F0               	bcf	intcon3,0,c	;volatile
 11917                           
 11918                           ;MOTEapp.c: 1231: status = 1;
 11919  0037B0  0E01               	movlw	1
 11920  0037B2  0100               	movlb	0	; () banked
 11921  0037B4  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;MOTEapp.c: 1234: oled_displayOff(0);
 11925  0037B6  0E00               	movlw	0
 11926  0037B8  EC98  F02D         	call	_oled_displayOff
 11927                           
 11928                           ;MOTEapp.c: 1235: oled_init();
 11929  0037BC  ECC5  F02A         	call	_oled_init	;wreg free
 11930                           
 11931                           ;MOTEapp.c: 1237: LATEbits.LATE2 = 1;
 11932  0037C0  848D               	bsf	3981,2,c	;volatile
 11933                           
 11934                           ;MOTEapp.c: 1238: TMR3H = 0xFB;
 11935  0037C2  0EFB               	movlw	251
 11936  0037C4  6EB3               	movwf	4019,c	;volatile
 11937                           
 11938                           ;MOTEapp.c: 1239: TMR3L = 0x50;
 11939  0037C6  0E50               	movlw	80
 11940  0037C8  6EB2               	movwf	4018,c	;volatile
 11941                           
 11942                           ;MOTEapp.c: 1240: PIE2bits.TMR3IE = 1;
 11943  0037CA  82A0               	bsf	4000,1,c	;volatile
 11944                           
 11945                           ;MOTEapp.c: 1241: }
 11946  0037CC  D007               	goto	l672
 11947  0037CE                     l669:
 11948                           
 11949                           ;MOTEapp.c: 1242: else
 11950                           ;MOTEapp.c: 1243: {
 11951                           ;MOTEapp.c: 1244: secTicker = 10;
 11952  0037CE  0E0A               	movlw	10
 11953  0037D0  0100               	movlb	0	; () banked
 11954  0037D2  6FF0               	movwf	_secTicker& (0+255),b
 11955                           
 11956                           ;MOTEapp.c: 1245: status = 0;
 11957  0037D4  0E00               	movlw	0
 11958  0037D6  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;MOTEapp.c: 1247: LATEbits.LATE2 = 0;
 11962  0037D8  948D               	bcf	3981,2,c	;volatile
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;MOTEapp.c: 1248: PIE2bits.TMR3IE = 0;
 11966  0037DA  92A0               	bcf	4000,1,c	;volatile
 11967  0037DC                     l672:
 11968                           
 11969                           ;MOTEapp.c: 1249: }
 11970                           ;MOTEapp.c: 1250: ANSELAbits.ANSA0 = 0;
 11971                           
 11972                           ; BSR set to: 0
 11973  0037DC  010F               	movlb	15	; () banked
 11974  0037DE  915B               	bcf	91,0,b	;volatile
 11975                           
 11976                           ; BSR set to: 15
 11977                           ;MOTEapp.c: 1252: moduleResync();
 11978  0037E0  EC81  F023         	call	_moduleResync	;wreg free
 11979                           
 11980                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 11981  0037E4  0E00               	movlw	0
 11982  0037E6  0100               	movlb	0	; () banked
 11983  0037E8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11984  0037EA  0E28               	movlw	40
 11985  0037EC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11986  0037EE  EC93  F02A         	call	_moteApp_delayms	;wreg free
 11987                           
 11988                           ;MOTEapp.c: 1254: moduleResync();
 11989  0037F2  EC81  F023         	call	_moduleResync	;wreg free
 11990                           
 11991                           ;MOTEapp.c: 1255: moteApp_delayms(40);
 11992  0037F6  0E00               	movlw	0
 11993  0037F8  0100               	movlb	0	; () banked
 11994  0037FA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11995  0037FC  0E28               	movlw	40
 11996  0037FE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11997  003800  EC93  F02A         	call	_moteApp_delayms	;wreg free
 11998                           
 11999                           ;MOTEapp.c: 1256: return status;
 12000  003804  0100               	movlb	0	; () banked
 12001  003806  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12002  003808  0012               	return	
 12003  00380A                     __end_of_moteApp_GoToSleep:
 12004                           	opt stack 0
 12005                           tblptru	equ	0xFF8
 12006                           tblptrh	equ	0xFF7
 12007                           tblptrl	equ	0xFF6
 12008                           tablat	equ	0xFF5
 12009                           prodh	equ	0xFF4
 12010                           prodl	equ	0xFF3
 12011                           intcon	equ	0xFF2
 12012                           intcon3	equ	0xFF0
 12013                           postinc0	equ	0xFEE
 12014                           wreg	equ	0xFE8
 12015                           indf1	equ	0xFE7
 12016                           postdec1	equ	0xFE5
 12017                           fsr1h	equ	0xFE2
 12018                           fsr1l	equ	0xFE1
 12019                           indf2	equ	0xFDF
 12020                           fsr2h	equ	0xFDA
 12021                           fsr2l	equ	0xFD9
 12022                           status	equ	0xFD8
 12023                           
 12024 ;; *************** function _oled_init *****************
 12025 ;; Defined at:
 12026 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;		None
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;		None
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0
 12041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12043 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12044 ;;Total ram usage:        0 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; Hardware stack levels required when called:   16
 12047 ;; This function calls:
 12048 ;;		_oled_clear
 12049 ;;		_oled_devInit
 12050 ;;		_oled_setDisplay
 12051 ;;		_oled_setFont
 12052 ;; This function is called by:
 12053 ;;		_main
 12054 ;;		_moteApp_GoToSleep
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text30
 12059  00558A                     __ptext30:
 12060                           	opt stack 0
 12061  00558A                     _oled_init:
 12062                           	opt stack 14
 12063                           
 12064                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;incstack = 0
 12068  00558A  9496               	bcf	3990,2,c	;volatile
 12069                           
 12070                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12071  00558C  848D               	bsf	3981,2,c	;volatile
 12072                           
 12073                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12074  00558E  9493               	bcf	3987,2,c	;volatile
 12075                           
 12076                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12077  005590  9693               	bcf	3987,3,c	;volatile
 12078                           
 12079                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12080  005592  9893               	bcf	3987,4,c	;volatile
 12081                           
 12082                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12083  005594  9094               	bcf	3988,0,c	;volatile
 12084                           
 12085                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12086  005596  9294               	bcf	3988,1,c	;volatile
 12087                           
 12088                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12089  005598  868A               	bsf	3978,3,c	;volatile
 12090                           
 12091                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12092  00559A  988A               	bcf	3978,4,c	;volatile
 12093                           
 12094                           ;SSD1306oLED.c: 381: oled_devInit();
 12095  00559C  EC87  F024         	call	_oled_devInit	;wreg free
 12096                           
 12097                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12098  0055A0  0E01               	movlw	1
 12099  0055A2  ECD7  F02B         	call	_oled_setDisplay
 12100                           
 12101                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12102  0055A6  0EF7               	movlw	low _OledFont0
 12103  0055A8  0100               	movlb	0	; () banked
 12104  0055AA  6F60               	movwf	oled_setFont@font& (0+255),b
 12105  0055AC  0E75               	movlw	high _OledFont0
 12106  0055AE  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12107  0055B0  ECF9  F02C         	call	_oled_setFont	;wreg free
 12108                           
 12109                           ;SSD1306oLED.c: 385: oled_clear();
 12110  0055B4  EC8E  F02C         	call	_oled_clear	;wreg free
 12111  0055B8  0012               	return		;funcret
 12112  0055BA                     __end_of_oled_init:
 12113                           	opt stack 0
 12114                           tblptru	equ	0xFF8
 12115                           tblptrh	equ	0xFF7
 12116                           tblptrl	equ	0xFF6
 12117                           tablat	equ	0xFF5
 12118                           prodh	equ	0xFF4
 12119                           prodl	equ	0xFF3
 12120                           intcon	equ	0xFF2
 12121                           intcon3	equ	0xFF0
 12122                           postinc0	equ	0xFEE
 12123                           wreg	equ	0xFE8
 12124                           indf1	equ	0xFE7
 12125                           postdec1	equ	0xFE5
 12126                           fsr1h	equ	0xFE2
 12127                           fsr1l	equ	0xFE1
 12128                           indf2	equ	0xFDF
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function _oled_setFont *****************
 12134 ;; Defined at:
 12135 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12138 ;;		 -> OledFont0(768), 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12150 ;;      Params:         0       2       0       0       0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12153 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12154 ;;Total ram usage:        2 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:   11
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_oled_init
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text31
 12165  0059F2                     __ptext31:
 12166                           	opt stack 0
 12167  0059F2                     _oled_setFont:
 12168                           	opt stack 18
 12169                           
 12170                           ;SSD1306oLED.c: 258: if(font!=0)
 12171                           
 12172                           ;incstack = 0
 12173  0059F2  0100               	movlb	0	; () banked
 12174  0059F4  5160               	movf	oled_setFont@font& (0+255),w,b
 12175  0059F6  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12176  0059F8  B4D8               	btfsc	status,2,c
 12177  0059FA  0012               	return	
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;SSD1306oLED.c: 259: {
 12181                           ;SSD1306oLED.c: 260: selectedFont=font;
 12182  0059FC  C060  F1FA         	movff	oled_setFont@font,_selectedFont
 12183  005A00  C061  F1FB         	movff	oled_setFont@font+1,_selectedFont+1
 12184  005A04  0012               	return	
 12185  005A06                     __end_of_oled_setFont:
 12186                           	opt stack 0
 12187                           tblptru	equ	0xFF8
 12188                           tblptrh	equ	0xFF7
 12189                           tblptrl	equ	0xFF6
 12190                           tablat	equ	0xFF5
 12191                           prodh	equ	0xFF4
 12192                           prodl	equ	0xFF3
 12193                           intcon	equ	0xFF2
 12194                           intcon3	equ	0xFF0
 12195                           postinc0	equ	0xFEE
 12196                           wreg	equ	0xFE8
 12197                           indf1	equ	0xFE7
 12198                           postdec1	equ	0xFE5
 12199                           fsr1h	equ	0xFE2
 12200                           fsr1l	equ	0xFE1
 12201                           indf2	equ	0xFDF
 12202                           fsr2h	equ	0xFDA
 12203                           fsr2l	equ	0xFD9
 12204                           status	equ	0xFD8
 12205                           
 12206 ;; *************** function _oled_setDisplay *****************
 12207 ;; Defined at:
 12208 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;  displayType     1    wreg     enum E5868
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  displayType     1    1[BANK0 ] enum E5868
 12213 ;; Return value:  Size  Location     Type
 12214 ;;                  1    wreg      void 
 12215 ;; Registers used:
 12216 ;;		wreg, status,2, cstack
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12222 ;;      Params:         0       0       0       0       0       0       0       0       0
 12223 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12225 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12226 ;;Total ram usage:        1 bytes
 12227 ;; Hardware stack levels used:    1
 12228 ;; Hardware stack levels required when called:   12
 12229 ;; This function calls:
 12230 ;;		_oled_writeCommand
 12231 ;; This function is called by:
 12232 ;;		_oled_init
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text32
 12237  0057AE                     __ptext32:
 12238                           	opt stack 0
 12239  0057AE                     _oled_setDisplay:
 12240                           	opt stack 17
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;incstack = 0
 12244                           ;oled_setDisplay@displayType stored from wreg
 12245  0057AE  0100               	movlb	0	; () banked
 12246  0057B0  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12247                           
 12248                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12249  0057B2  0100               	movlb	0	; () banked
 12250  0057B4  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12251  0057B6  A4D8               	btfss	status,2,c
 12252  0057B8  D007               	goto	l1066
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;SSD1306oLED.c: 414: {
 12256                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12257  0057BA  0EA0               	movlw	160
 12258  0057BC  ECCD  F02C         	call	_oled_writeCommand
 12259                           
 12260                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12261  0057C0  0EC8               	movlw	200
 12262  0057C2  ECCD  F02C         	call	_oled_writeCommand
 12263                           
 12264                           ;SSD1306oLED.c: 417: }
 12265  0057C6  0012               	return	
 12266  0057C8                     l1066:
 12267                           
 12268                           ;SSD1306oLED.c: 418: else
 12269                           ;SSD1306oLED.c: 419: {
 12270                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12271  0057C8  0EA1               	movlw	161
 12272  0057CA  ECCD  F02C         	call	_oled_writeCommand
 12273                           
 12274                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12275  0057CE  0EC0               	movlw	192
 12276  0057D0  ECCD  F02C         	call	_oled_writeCommand
 12277  0057D4  0012               	return	
 12278  0057D6                     __end_of_oled_setDisplay:
 12279                           	opt stack 0
 12280                           tblptru	equ	0xFF8
 12281                           tblptrh	equ	0xFF7
 12282                           tblptrl	equ	0xFF6
 12283                           tablat	equ	0xFF5
 12284                           prodh	equ	0xFF4
 12285                           prodl	equ	0xFF3
 12286                           intcon	equ	0xFF2
 12287                           intcon3	equ	0xFF0
 12288                           postinc0	equ	0xFEE
 12289                           wreg	equ	0xFE8
 12290                           indf1	equ	0xFE7
 12291                           postdec1	equ	0xFE5
 12292                           fsr1h	equ	0xFE2
 12293                           fsr1l	equ	0xFE1
 12294                           indf2	equ	0xFDF
 12295                           fsr2h	equ	0xFDA
 12296                           fsr2l	equ	0xFD9
 12297                           status	equ	0xFD8
 12298                           
 12299 ;; *************** function _oled_devInit *****************
 12300 ;; Defined at:
 12301 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12317 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12318 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12319 ;;Total ram usage:        1 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:   13
 12322 ;; This function calls:
 12323 ;;		_oled_initialDispayLine
 12324 ;;		_oled_powerControl
 12325 ;;		_oled_regulorResistorSelect
 12326 ;;		_oled_setContrastControlRegister
 12327 ;;		_oled_writeCommand
 12328 ;; This function is called by:
 12329 ;;		_oled_init
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333                           	psect	text33
 12334  00490E                     __ptext33:
 12335                           	opt stack 0
 12336  00490E                     _oled_devInit:
 12337                           	opt stack 16
 12338                           
 12339                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12340                           
 12341                           ;incstack = 0
 12342  00490E  0EE2               	movlw	226
 12343  004910  ECCD  F02C         	call	_oled_writeCommand
 12344                           
 12345                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12346  004914  848A               	bsf	3978,2,c	;volatile
 12347                           
 12348                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12349  004916  0E04               	movlw	4
 12350  004918  0100               	movlb	0	; () banked
 12351  00491A  6F62               	movwf	??_oled_devInit& (0+255),b
 12352  00491C  0E1C               	movlw	28
 12353  00491E                     u11127:
 12354  00491E  2EE8               	decfsz	wreg,f,c
 12355  004920  D7FE               	bra	u11127
 12356  004922  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12357  004924  D7FC               	bra	u11127
 12358  004926  F000               	nop	
 12359                           
 12360                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12361  004928  948A               	bcf	3978,2,c	;volatile
 12362                           
 12363                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12364  00492A  0E20               	movlw	32
 12365  00492C  0100               	movlb	0	; () banked
 12366  00492E  6F62               	movwf	??_oled_devInit& (0+255),b
 12367  004930  0E29               	movlw	41
 12368  004932                     u11137:
 12369  004932  2EE8               	decfsz	wreg,f,c
 12370  004934  D7FE               	bra	u11137
 12371  004936  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12372  004938  D7FC               	bra	u11137
 12373  00493A  D000               	nop2	
 12374                           
 12375                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12376  00493C  848A               	bsf	3978,2,c	;volatile
 12377                           
 12378                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12379  00493E  0E10               	movlw	16
 12380  004940  0100               	movlb	0	; () banked
 12381  004942  6F62               	movwf	??_oled_devInit& (0+255),b
 12382  004944  0E94               	movlw	148
 12383  004946                     u11147:
 12384  004946  2EE8               	decfsz	wreg,f,c
 12385  004948  D7FE               	bra	u11147
 12386  00494A  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12387  00494C  D7FC               	bra	u11147
 12388  00494E  F000               	nop	
 12389                           
 12390                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 12391  004950  0EA1               	movlw	161
 12392  004952  ECCD  F02C         	call	_oled_writeCommand
 12393                           
 12394                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 12395  004956  0EC0               	movlw	192
 12396  004958  ECCD  F02C         	call	_oled_writeCommand
 12397                           
 12398                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 12399  00495C  0EA3               	movlw	163
 12400  00495E  ECCD  F02C         	call	_oled_writeCommand
 12401                           
 12402                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 12403  004962  0E07               	movlw	7
 12404  004964  EC46  F02D         	call	_oled_powerControl
 12405                           
 12406                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 12407  004968  0E05               	movlw	5
 12408  00496A  EC3E  F02D         	call	_oled_regulorResistorSelect
 12409                           
 12410                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 12411  00496E  505D               	movf	_Contrast_level,w,c
 12412  004970  EC03  F02D         	call	_oled_setContrastControlRegister
 12413                           
 12414                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 12415  004974  0E00               	movlw	0
 12416  004976  EC4E  F02D         	call	_oled_initialDispayLine
 12417                           
 12418                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 12419  00497A  0EF8               	movlw	248
 12420  00497C  ECCD  F02C         	call	_oled_writeCommand
 12421                           
 12422                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 12423  004980  0E00               	movlw	0
 12424  004982  ECCD  F02C         	call	_oled_writeCommand
 12425                           
 12426                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 12427  004986  0EAF               	movlw	175
 12428  004988  ECCD  F02C         	call	_oled_writeCommand
 12429  00498C  0012               	return		;funcret
 12430  00498E                     __end_of_oled_devInit:
 12431                           	opt stack 0
 12432                           tblptru	equ	0xFF8
 12433                           tblptrh	equ	0xFF7
 12434                           tblptrl	equ	0xFF6
 12435                           tablat	equ	0xFF5
 12436                           prodh	equ	0xFF4
 12437                           prodl	equ	0xFF3
 12438                           intcon	equ	0xFF2
 12439                           intcon3	equ	0xFF0
 12440                           postinc0	equ	0xFEE
 12441                           wreg	equ	0xFE8
 12442                           indf1	equ	0xFE7
 12443                           postdec1	equ	0xFE5
 12444                           fsr1h	equ	0xFE2
 12445                           fsr1l	equ	0xFE1
 12446                           indf2	equ	0xFDF
 12447                           fsr2h	equ	0xFDA
 12448                           fsr2l	equ	0xFD9
 12449                           status	equ	0xFD8
 12450                           
 12451 ;; *************** function _oled_setContrastControlRegister *****************
 12452 ;; Defined at:
 12453 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;  mod             1    wreg     unsigned char 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;  mod             1    1[BANK0 ] unsigned char 
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0
 12468 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12470 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12471 ;;Total ram usage:        1 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; Hardware stack levels required when called:   12
 12474 ;; This function calls:
 12475 ;;		_oled_writeCommand
 12476 ;; This function is called by:
 12477 ;;		_oled_devInit
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text34
 12482  005A06                     __ptext34:
 12483                           	opt stack 0
 12484  005A06                     _oled_setContrastControlRegister:
 12485                           	opt stack 16
 12486                           
 12487                           ;incstack = 0
 12488                           ;oled_setContrastControlRegister@mod stored from wreg
 12489  005A06  0100               	movlb	0	; () banked
 12490  005A08  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12491                           
 12492                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 12493  005A0A  0E81               	movlw	129
 12494  005A0C  ECCD  F02C         	call	_oled_writeCommand
 12495                           
 12496                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 12497  005A10  0100               	movlb	0	; () banked
 12498  005A12  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12499  005A14  ECCD  F02C         	call	_oled_writeCommand
 12500  005A18  0012               	return	
 12501  005A1A                     __end_of_oled_setContrastControlRegister:
 12502                           	opt stack 0
 12503                           tblptru	equ	0xFF8
 12504                           tblptrh	equ	0xFF7
 12505                           tblptrl	equ	0xFF6
 12506                           tablat	equ	0xFF5
 12507                           prodh	equ	0xFF4
 12508                           prodl	equ	0xFF3
 12509                           intcon	equ	0xFF2
 12510                           intcon3	equ	0xFF0
 12511                           postinc0	equ	0xFEE
 12512                           wreg	equ	0xFE8
 12513                           indf1	equ	0xFE7
 12514                           postdec1	equ	0xFE5
 12515                           fsr1h	equ	0xFE2
 12516                           fsr1l	equ	0xFE1
 12517                           indf2	equ	0xFDF
 12518                           fsr2h	equ	0xFDA
 12519                           fsr2l	equ	0xFD9
 12520                           status	equ	0xFD8
 12521                           
 12522 ;; *************** function _oled_regulorResistorSelect *****************
 12523 ;; Defined at:
 12524 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;  r               1    wreg     unsigned char 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  r               1    1[BANK0 ] unsigned char 
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1    wreg      void 
 12531 ;; Registers used:
 12532 ;;		wreg, status,2, status,0, cstack
 12533 ;; Tracked objects:
 12534 ;;		On entry : 0/0
 12535 ;;		On exit  : 0/0
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12538 ;;      Params:         0       0       0       0       0       0       0       0       0
 12539 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12541 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12542 ;;Total ram usage:        1 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:   12
 12545 ;; This function calls:
 12546 ;;		_oled_writeCommand
 12547 ;; This function is called by:
 12548 ;;		_oled_devInit
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text35
 12553  005A7C                     __ptext35:
 12554                           	opt stack 0
 12555  005A7C                     _oled_regulorResistorSelect:
 12556                           	opt stack 16
 12557                           
 12558                           ;incstack = 0
 12559                           ;oled_regulorResistorSelect@r stored from wreg
 12560  005A7C  0100               	movlb	0	; () banked
 12561  005A7E  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12562                           
 12563                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 12564  005A80  0100               	movlb	0	; () banked
 12565  005A82  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12566  005A84  0920               	iorlw	32
 12567  005A86  ECCD  F02C         	call	_oled_writeCommand
 12568  005A8A  0012               	return	
 12569  005A8C                     __end_of_oled_regulorResistorSelect:
 12570                           	opt stack 0
 12571                           tblptru	equ	0xFF8
 12572                           tblptrh	equ	0xFF7
 12573                           tblptrl	equ	0xFF6
 12574                           tablat	equ	0xFF5
 12575                           prodh	equ	0xFF4
 12576                           prodl	equ	0xFF3
 12577                           intcon	equ	0xFF2
 12578                           intcon3	equ	0xFF0
 12579                           postinc0	equ	0xFEE
 12580                           wreg	equ	0xFE8
 12581                           indf1	equ	0xFE7
 12582                           postdec1	equ	0xFE5
 12583                           fsr1h	equ	0xFE2
 12584                           fsr1l	equ	0xFE1
 12585                           indf2	equ	0xFDF
 12586                           fsr2h	equ	0xFDA
 12587                           fsr2l	equ	0xFD9
 12588                           status	equ	0xFD8
 12589                           
 12590 ;; *************** function _oled_powerControl *****************
 12591 ;; Defined at:
 12592 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;  vol             1    wreg     unsigned char 
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;  vol             1    1[BANK0 ] unsigned char 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;                  1    wreg      void 
 12599 ;; Registers used:
 12600 ;;		wreg, status,2, status,0, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12606 ;;      Params:         0       0       0       0       0       0       0       0       0
 12607 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12609 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12610 ;;Total ram usage:        1 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:   12
 12613 ;; This function calls:
 12614 ;;		_oled_writeCommand
 12615 ;; This function is called by:
 12616 ;;		_oled_devInit
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           	psect	text36
 12621  005A8C                     __ptext36:
 12622                           	opt stack 0
 12623  005A8C                     _oled_powerControl:
 12624                           	opt stack 16
 12625                           
 12626                           ;incstack = 0
 12627                           ;oled_powerControl@vol stored from wreg
 12628  005A8C  0100               	movlb	0	; () banked
 12629  005A8E  6F61               	movwf	oled_powerControl@vol& (0+255),b
 12630                           
 12631                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 12632  005A90  0100               	movlb	0	; () banked
 12633  005A92  5161               	movf	oled_powerControl@vol& (0+255),w,b
 12634  005A94  0928               	iorlw	40
 12635  005A96  ECCD  F02C         	call	_oled_writeCommand
 12636  005A9A  0012               	return	
 12637  005A9C                     __end_of_oled_powerControl:
 12638                           	opt stack 0
 12639                           tblptru	equ	0xFF8
 12640                           tblptrh	equ	0xFF7
 12641                           tblptrl	equ	0xFF6
 12642                           tablat	equ	0xFF5
 12643                           prodh	equ	0xFF4
 12644                           prodl	equ	0xFF3
 12645                           intcon	equ	0xFF2
 12646                           intcon3	equ	0xFF0
 12647                           postinc0	equ	0xFEE
 12648                           wreg	equ	0xFE8
 12649                           indf1	equ	0xFE7
 12650                           postdec1	equ	0xFE5
 12651                           fsr1h	equ	0xFE2
 12652                           fsr1l	equ	0xFE1
 12653                           indf2	equ	0xFDF
 12654                           fsr2h	equ	0xFDA
 12655                           fsr2l	equ	0xFD9
 12656                           status	equ	0xFD8
 12657                           
 12658 ;; *************** function _oled_initialDispayLine *****************
 12659 ;; Defined at:
 12660 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  line            1    wreg     unsigned char 
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;  line            1    1[BANK0 ] unsigned char 
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0
 12675 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12677 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12678 ;;Total ram usage:        1 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:   12
 12681 ;; This function calls:
 12682 ;;		_oled_writeCommand
 12683 ;; This function is called by:
 12684 ;;		_oled_devInit
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text37
 12689  005A9C                     __ptext37:
 12690                           	opt stack 0
 12691  005A9C                     _oled_initialDispayLine:
 12692                           	opt stack 16
 12693                           
 12694                           ;incstack = 0
 12695                           ;oled_initialDispayLine@line stored from wreg
 12696  005A9C  0100               	movlb	0	; () banked
 12697  005A9E  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 12698                           
 12699                           ;SSD1306oLED.c: 464: line|=0x40;
 12700  005AA0  0100               	movlb	0	; () banked
 12701  005AA2  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 12705  005AA4  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 12706  005AA6  ECCD  F02C         	call	_oled_writeCommand
 12707  005AAA  0012               	return	
 12708  005AAC                     __end_of_oled_initialDispayLine:
 12709                           	opt stack 0
 12710                           tblptru	equ	0xFF8
 12711                           tblptrh	equ	0xFF7
 12712                           tblptrl	equ	0xFF6
 12713                           tablat	equ	0xFF5
 12714                           prodh	equ	0xFF4
 12715                           prodl	equ	0xFF3
 12716                           intcon	equ	0xFF2
 12717                           intcon3	equ	0xFF0
 12718                           postinc0	equ	0xFEE
 12719                           wreg	equ	0xFE8
 12720                           indf1	equ	0xFE7
 12721                           postdec1	equ	0xFE5
 12722                           fsr1h	equ	0xFE2
 12723                           fsr1l	equ	0xFE1
 12724                           indf2	equ	0xFDF
 12725                           fsr2h	equ	0xFDA
 12726                           fsr2l	equ	0xFD9
 12727                           status	equ	0xFD8
 12728                           
 12729 ;; *************** function _oled_displayOff *****************
 12730 ;; Defined at:
 12731 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;  state           1    wreg     unsigned char 
 12734 ;; Auto vars:     Size  Location     Type
 12735 ;;  state           1    0[COMRAM] unsigned char 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      void 
 12738 ;; Registers used:
 12739 ;;		wreg, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0
 12746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12748 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12749 ;;Total ram usage:        0 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:   12
 12752 ;; This function calls:
 12753 ;;		_oled_writeCommand
 12754 ;; This function is called by:
 12755 ;;		_moteApp_GoToSleep
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           	psect	text38
 12760  005B30                     __ptext38:
 12761                           	opt stack 0
 12762  005B30                     _oled_displayOff:
 12763                           	opt stack 15
 12764                           
 12765                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 12766                           
 12767                           ;incstack = 0
 12768  005B30  0EAE               	movlw	174
 12769  005B32  ECCD  F02C         	call	_oled_writeCommand
 12770  005B36  0012               	return		;funcret
 12771  005B38                     __end_of_oled_displayOff:
 12772                           	opt stack 0
 12773                           tblptru	equ	0xFF8
 12774                           tblptrh	equ	0xFF7
 12775                           tblptrl	equ	0xFF6
 12776                           tablat	equ	0xFF5
 12777                           prodh	equ	0xFF4
 12778                           prodl	equ	0xFF3
 12779                           intcon	equ	0xFF2
 12780                           intcon3	equ	0xFF0
 12781                           postinc0	equ	0xFEE
 12782                           wreg	equ	0xFE8
 12783                           indf1	equ	0xFE7
 12784                           postdec1	equ	0xFE5
 12785                           fsr1h	equ	0xFE2
 12786                           fsr1l	equ	0xFE1
 12787                           indf2	equ	0xFDF
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8
 12791                           
 12792 ;; *************** function _moduleSleep *****************
 12793 ;; Defined at:
 12794 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;		None
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12808 ;;      Params:         0       0       0       0       0       0       0       0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12810 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12811 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12812 ;;Total ram usage:        1 bytes
 12813 ;; Hardware stack levels used:    1
 12814 ;; Hardware stack levels required when called:   14
 12815 ;; This function calls:
 12816 ;;		_sendCommand
 12817 ;; This function is called by:
 12818 ;;		_moteApp_GoToSleep
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text39
 12823  0057D6                     __ptext39:
 12824                           	opt stack 0
 12825  0057D6                     _moduleSleep:
 12826                           	opt stack 13
 12827                           
 12828                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 12829                           
 12830                           ;incstack = 0
 12831  0057D6  0E82               	movlw	low STR_22
 12832  0057D8  0100               	movlb	0	; () banked
 12833  0057DA  6F61               	movwf	sendCommand@string& (0+255),b
 12834  0057DC  0E7A               	movlw	high STR_22
 12835  0057DE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12836  0057E0  ECDD  F02A         	call	_sendCommand	;wreg free
 12837  0057E4                     
 12838                           ;MOTEapp.c: 179: ;
 12839  0057E4  B89D               	btfsc	3997,4,c	;volatile
 12840  0057E6  D7FE               	goto	l355
 12841                           
 12842                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 12843  0057E8  0EFA               	movlw	250
 12844  0057EA  0100               	movlb	0	; () banked
 12845  0057EC  6F63               	movwf	??_moduleSleep& (0+255),b
 12846  0057EE  0E58               	movlw	88
 12847  0057F0                     u11157:
 12848  0057F0  2EE8               	decfsz	wreg,f,c
 12849  0057F2  D7FE               	bra	u11157
 12850  0057F4  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 12851  0057F6  D7FC               	bra	u11157
 12852  0057F8  F000               	nop	
 12853  0057FA  0012               	return		;funcret
 12854  0057FC                     __end_of_moduleSleep:
 12855                           	opt stack 0
 12856                           tblptru	equ	0xFF8
 12857                           tblptrh	equ	0xFF7
 12858                           tblptrl	equ	0xFF6
 12859                           tablat	equ	0xFF5
 12860                           prodh	equ	0xFF4
 12861                           prodl	equ	0xFF3
 12862                           intcon	equ	0xFF2
 12863                           intcon3	equ	0xFF0
 12864                           postinc0	equ	0xFEE
 12865                           wreg	equ	0xFE8
 12866                           indf1	equ	0xFE7
 12867                           postdec1	equ	0xFE5
 12868                           fsr1h	equ	0xFE2
 12869                           fsr1l	equ	0xFE1
 12870                           indf2	equ	0xFDF
 12871                           fsr2h	equ	0xFDA
 12872                           fsr2l	equ	0xFD9
 12873                           status	equ	0xFD8
 12874                           
 12875 ;; *************** function _moduleResync *****************
 12876 ;; Defined at:
 12877 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 12882 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  1    wreg      void 
 12885 ;; Registers used:
 12886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12892 ;;      Params:         0       0       0       0       0       0       0       0       0
 12893 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12894 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12895 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12896 ;;Total ram usage:        3 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:   14
 12899 ;; This function calls:
 12900 ;;		_MOTEapp_getModuleResponse
 12901 ;;		_moteApp_delayms
 12902 ;;		_sendCommand
 12903 ;; This function is called by:
 12904 ;;		_main
 12905 ;;		_moteApp_GoToSleep
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           	psect	text40
 12910  004702                     __ptext40:
 12911                           	opt stack 0
 12912  004702                     _moduleResync:
 12913                           	opt stack 13
 12914                           
 12915                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 12916                           
 12917                           ;incstack = 0
 12918  004702  0E00               	movlw	0
 12919  004704  0100               	movlb	0	; () banked
 12920  004706  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12921                           
 12922                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 12923  004708  0E00               	movlw	0
 12924  00470A  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 12925  00470C  0E00               	movlw	0
 12926  00470E  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 12930  004710  9AAC               	bcf	4012,5,c	;volatile
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 12934  004712  9C8B               	bcf	3979,6,c	;volatile
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;MOTEapp.c: 147: moteApp_delayms(10);
 12938  004714  0E00               	movlw	0
 12939  004716  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12940  004718  0E0A               	movlw	10
 12941  00471A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12942  00471C  EC93  F02A         	call	_moteApp_delayms	;wreg free
 12943                           
 12944                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 12945  004720  8AAC               	bsf	4012,5,c	;volatile
 12946                           
 12947                           ;MOTEapp.c: 149: moteApp_delayms(5);
 12948  004722  0E00               	movlw	0
 12949  004724  0100               	movlb	0	; () banked
 12950  004726  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12951  004728  0E05               	movlw	5
 12952  00472A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12953  00472C  EC93  F02A         	call	_moteApp_delayms	;wreg free
 12954                           
 12955                           ;MOTEapp.c: 151: TXREG = 0x55;
 12956  004730  0E55               	movlw	85
 12957  004732  6EAD               	movwf	4013,c	;volatile
 12958  004734                     
 12959                           ;MOTEapp.c: 153: {};
 12960  004734  A2AC               	btfss	4012,1,c	;volatile
 12961  004736  D7FE               	goto	l337
 12962                           
 12963                           ;MOTEapp.c: 155: sendCommand("z");
 12964  004738  0EFC               	movlw	low STR_21
 12965  00473A  0100               	movlb	0	; () banked
 12966  00473C  6F61               	movwf	sendCommand@string& (0+255),b
 12967  00473E  0E7F               	movlw	high STR_21
 12968  004740  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12969  004742  ECDD  F02A         	call	_sendCommand	;wreg free
 12970                           
 12971                           ;MOTEapp.c: 157: moteApp_delayms(40);
 12972  004746  0E00               	movlw	0
 12973  004748  0100               	movlb	0	; () banked
 12974  00474A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12975  00474C  0E28               	movlw	40
 12976  00474E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12977  004750  EC93  F02A         	call	_moteApp_delayms	;wreg free
 12978                           
 12979                           ;MOTEapp.c: 158: while (escapeEvent)
 12980  004754  D013               	goto	l343
 12981  004756                     
 12982                           ;MOTEapp.c: 159: {
 12983                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 12984  004756  ECC6  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 12985  00475A  0900               	iorlw	0
 12986  00475C  B4D8               	btfsc	status,2,c
 12987  00475E  D003               	goto	l341
 12988                           
 12989                           ;MOTEapp.c: 161: escapeEvent = 1;
 12990  004760  0E01               	movlw	1
 12991  004762  0100               	movlb	0	; () banked
 12992  004764  D00A               	goto	L6
 12993  004766                     l341:
 12994                           
 12995                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 12996                           
 12997                           ; BSR set to: 0
 12998  004766  0100               	movlb	0	; () banked
 12999  004768  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13000  00476A  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13001  00476C  0E89               	movlw	137
 13002  00476E  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13003  004770  0E13               	movlw	19
 13004  004772  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13005  004774  A0D8               	btfss	status,0,c
 13006  004776  D002               	goto	l343
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;MOTEapp.c: 163: escapeEvent = 1;
 13010  004778  0E01               	movlw	1
 13011  00477A                     L6:
 13012  00477A  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13013  00477C                     l343:
 13014                           
 13015                           ; BSR set to: 0
 13016                           
 13017                           ; BSR set to: 0
 13018  00477C  0100               	movlb	0	; () banked
 13019  00477E  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13020  004780  B4D8               	btfsc	status,2,c
 13021  004782  0012               	return	
 13022  004784  D7E8               	goto	l340
 13023  004786                     __end_of_moduleResync:
 13024                           	opt stack 0
 13025                           tblptru	equ	0xFF8
 13026                           tblptrh	equ	0xFF7
 13027                           tblptrl	equ	0xFF6
 13028                           tablat	equ	0xFF5
 13029                           prodh	equ	0xFF4
 13030                           prodl	equ	0xFF3
 13031                           intcon	equ	0xFF2
 13032                           intcon3	equ	0xFF0
 13033                           postinc0	equ	0xFEE
 13034                           wreg	equ	0xFE8
 13035                           indf1	equ	0xFE7
 13036                           postdec1	equ	0xFE5
 13037                           fsr1h	equ	0xFE2
 13038                           fsr1l	equ	0xFE1
 13039                           indf2	equ	0xFDF
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _MOTEapp_getModuleResponse *****************
 13045 ;; Defined at:
 13046 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13051 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13052 ;; Return value:  Size  Location     Type
 13053 ;;                  1    wreg      unsigned char 
 13054 ;; Registers used:
 13055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13061 ;;      Params:         0       0       0       0       0       0       0       0       0
 13062 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13064 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13065 ;;Total ram usage:        2 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; Hardware stack levels required when called:   12
 13068 ;; This function calls:
 13069 ;;		_EUSART_Read
 13070 ;; This function is called by:
 13071 ;;		_moduleResync
 13072 ;;		_moteHandler
 13073 ;;		_moteApp_setSensorsInput
 13074 ;;		_moteApp_getTempValue
 13075 ;;		_moteApp_getLightValue
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text41
 13080  004D8C                     __ptext41:
 13081                           	opt stack 0
 13082  004D8C                     _MOTEapp_getModuleResponse:
 13083                           	opt stack 15
 13084                           
 13085                           ;MOTEapp.c: 1076: bool terminatorReceived = 0;
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;incstack = 0
 13089  004D8C  0E00               	movlw	0
 13090  004D8E  0100               	movlb	0	; () banked
 13091  004D90  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13092                           
 13093                           ;MOTEapp.c: 1078: if ((eusartRxCount))
 13094  004D92  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13095  004D94  B4D8               	btfsc	status,2,c
 13096  004D96  D02B               	goto	l626
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;MOTEapp.c: 1079: {
 13100                           ;MOTEapp.c: 1080: uint8_t bufferByte = 0;
 13101  004D98  0E00               	movlw	0
 13102  004D9A  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;MOTEapp.c: 1081: bufferByte = EUSART_Read();
 13106  004D9C  EC0B  F02A         	call	_EUSART_Read	;wreg free
 13107  004DA0  0100               	movlb	0	; () banked
 13108  004DA2  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13109                           
 13110                           ; BSR set to: 0
 13111                           ;MOTEapp.c: 1083: if (bufferByte == 0x0D)
 13112  004DA4  0E0D               	movlw	13
 13113  004DA6  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13114  004DA8  A4D8               	btfss	status,2,c
 13115  004DAA  D00F               	goto	l621
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;MOTEapp.c: 1084: {
 13119                           ;MOTEapp.c: 1085: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13120  004DAC  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13121  004DAE  0D01               	mullw	1
 13122  004DB0  0E64               	movlw	low _moduleResonseBuffer
 13123  004DB2  24F3               	addwf	prodl,w,c
 13124  004DB4  6ED9               	movwf	fsr2l,c
 13125  004DB6  0E01               	movlw	high _moduleResonseBuffer
 13126  004DB8  20F4               	addwfc	prodh,w,c
 13127  004DBA  6EDA               	movwf	fsr2h,c
 13128  004DBC  0E00               	movlw	0
 13129  004DBE  6EDF               	movwf	indf2,c
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;MOTEapp.c: 1086: terminatorReceived = 1;
 13133  004DC0  0E01               	movlw	1
 13134  004DC2  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;MOTEapp.c: 1087: moduleBufferIndex = 0;
 13138  004DC4  0E00               	movlw	0
 13139  004DC6  6FF2               	movwf	_moduleBufferIndex& (0+255),b
 13140                           
 13141                           ;MOTEapp.c: 1088: }
 13142  004DC8  D012               	goto	l626
 13143  004DCA                     l621:
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;MOTEapp.c: 1089: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13147                           
 13148                           ; BSR set to: 0
 13149  004DCA  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13150  004DCC  B4D8               	btfsc	status,2,c
 13151  004DCE  D00F               	goto	l626
 13152                           
 13153                           ; BSR set to: 0
 13154  004DD0  0E0A               	movlw	10
 13155  004DD2  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13156  004DD4  B4D8               	btfsc	status,2,c
 13157  004DD6  D00B               	goto	l626
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;MOTEapp.c: 1093: else
 13161                           ;MOTEapp.c: 1094: {
 13162                           ;MOTEapp.c: 1095: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13163                           
 13164                           ; BSR set to: 0
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;MOTEapp.c: 1090: {
 13168                           ;MOTEapp.c: 1092: }
 13169  004DD8  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13170  004DDA  0D01               	mullw	1
 13171  004DDC  0E64               	movlw	low _moduleResonseBuffer
 13172  004DDE  24F3               	addwf	prodl,w,c
 13173  004DE0  6ED9               	movwf	fsr2l,c
 13174  004DE2  0E01               	movlw	high _moduleResonseBuffer
 13175  004DE4  20F4               	addwfc	prodh,w,c
 13176  004DE6  6EDA               	movwf	fsr2h,c
 13177  004DE8  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;MOTEapp.c: 1097: moduleBufferIndex++;
 13181  004DEC  2BF2               	incf	_moduleBufferIndex& (0+255),f,b
 13182  004DEE                     l626:
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;MOTEapp.c: 1098: }
 13186                           ;MOTEapp.c: 1099: }
 13187                           ;MOTEapp.c: 1100: return terminatorReceived;
 13188                           
 13189                           ; BSR set to: 0
 13190                           
 13191                           ; BSR set to: 0
 13192                           
 13193                           ; BSR set to: 0
 13194  004DEE  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13195  004DF0  0012               	return	
 13196  004DF2                     __end_of_MOTEapp_getModuleResponse:
 13197                           	opt stack 0
 13198                           tblptru	equ	0xFF8
 13199                           tblptrh	equ	0xFF7
 13200                           tblptrl	equ	0xFF6
 13201                           tablat	equ	0xFF5
 13202                           prodh	equ	0xFF4
 13203                           prodl	equ	0xFF3
 13204                           intcon	equ	0xFF2
 13205                           intcon3	equ	0xFF0
 13206                           postinc0	equ	0xFEE
 13207                           wreg	equ	0xFE8
 13208                           indf1	equ	0xFE7
 13209                           postdec1	equ	0xFE5
 13210                           fsr1h	equ	0xFE2
 13211                           fsr1l	equ	0xFE1
 13212                           indf2	equ	0xFDF
 13213                           fsr2h	equ	0xFDA
 13214                           fsr2l	equ	0xFD9
 13215                           status	equ	0xFD8
 13216                           
 13217 ;; *************** function _EUSART_FlushBuffer *****************
 13218 ;; Defined at:
 13219 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;		None
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;  index           1    0[BANK0 ] unsigned char 
 13224 ;; Return value:  Size  Location     Type
 13225 ;;                  1    wreg      void 
 13226 ;; Registers used:
 13227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13233 ;;      Params:         0       0       0       0       0       0       0       0       0
 13234 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13236 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13237 ;;Total ram usage:        1 bytes
 13238 ;; Hardware stack levels used:    1
 13239 ;; Hardware stack levels required when called:   11
 13240 ;; This function calls:
 13241 ;;		Nothing
 13242 ;; This function is called by:
 13243 ;;		_test_powerup
 13244 ;;		_moteApp_GoToSleep
 13245 ;; This function uses a non-reentrant model
 13246 ;;
 13247                           
 13248                           	psect	text42
 13249  00525E                     __ptext42:
 13250                           	opt stack 0
 13251  00525E                     _EUSART_FlushBuffer:
 13252                           	opt stack 18
 13253                           
 13254                           ;eusart.c: 204: uint8_t index;
 13255                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;incstack = 0
 13259  00525E  0E00               	movlw	0
 13260  005260  0100               	movlb	0	; () banked
 13261  005262  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13262  005264                     l8552:
 13263                           
 13264                           ; BSR set to: 0
 13265  005264  0E3F               	movlw	63
 13266  005266  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13267  005268  D001               	goto	l1240
 13268  00526A  D00C               	goto	u6510
 13269  00526C                     l1240:
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;eusart.c: 206: {
 13273                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13274                           
 13275                           ; BSR set to: 0
 13276  00526C  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13277  00526E  0D01               	mullw	1
 13278  005270  0E00               	movlw	low _eusartRxBuffer
 13279  005272  24F3               	addwf	prodl,w,c
 13280  005274  6ED9               	movwf	fsr2l,c
 13281  005276  0E02               	movlw	high _eusartRxBuffer
 13282  005278  20F4               	addwfc	prodh,w,c
 13283  00527A  6EDA               	movwf	fsr2h,c
 13284  00527C  0E00               	movlw	0
 13285  00527E  6EDF               	movwf	indf2,c
 13286                           
 13287                           ; BSR set to: 0
 13288  005280  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13289  005282  D7F0               	goto	l8552
 13290  005284                     u6510:
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;eusart.c: 208: }
 13294                           ;eusart.c: 209: eusartRxHead = 0;
 13295                           
 13296                           ; BSR set to: 0
 13297  005284  0E00               	movlw	0
 13298  005286  6FE0               	movwf	_eusartRxHead& (0+255),b
 13299                           
 13300                           ;eusart.c: 210: eusartRxTail = 0;
 13301  005288  0E00               	movlw	0
 13302  00528A  6FDF               	movwf	_eusartRxTail& (0+255),b
 13303                           
 13304                           ;eusart.c: 211: eusartRxCount = 0;
 13305  00528C  0E00               	movlw	0
 13306  00528E  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13310  005290  989D               	bcf	3997,4,c	;volatile
 13311                           
 13312                           ;eusart.c: 214: eusartTxHead = 0;
 13313  005292  0E00               	movlw	0
 13314  005294  6FE3               	movwf	_eusartTxHead& (0+255),b
 13315                           
 13316                           ;eusart.c: 215: eusartTxTail = 0;
 13317  005296  0E00               	movlw	0
 13318  005298  6FE2               	movwf	_eusartTxTail& (0+255),b
 13319                           
 13320                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13321  00529A  0E40               	movlw	64
 13322  00529C  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13323                           
 13324                           ; BSR set to: 0
 13325  00529E  0012               	return		;funcret
 13326  0052A0                     __end_of_EUSART_FlushBuffer:
 13327                           	opt stack 0
 13328                           tblptru	equ	0xFF8
 13329                           tblptrh	equ	0xFF7
 13330                           tblptrl	equ	0xFF6
 13331                           tablat	equ	0xFF5
 13332                           prodh	equ	0xFF4
 13333                           prodl	equ	0xFF3
 13334                           intcon	equ	0xFF2
 13335                           intcon3	equ	0xFF0
 13336                           postinc0	equ	0xFEE
 13337                           wreg	equ	0xFE8
 13338                           indf1	equ	0xFE7
 13339                           postdec1	equ	0xFE5
 13340                           fsr1h	equ	0xFE2
 13341                           fsr1l	equ	0xFE1
 13342                           indf2	equ	0xFDF
 13343                           fsr2h	equ	0xFDA
 13344                           fsr2l	equ	0xFD9
 13345                           status	equ	0xFD8
 13346                           
 13347 ;; *************** function _TMR2_ReadTimer *****************
 13348 ;; Defined at:
 13349 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;		None
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;  readVal         1    0[BANK0 ] unsigned char 
 13354 ;; Return value:  Size  Location     Type
 13355 ;;                  1    wreg      unsigned char 
 13356 ;; Registers used:
 13357 ;;		wreg, status,2
 13358 ;; Tracked objects:
 13359 ;;		On entry : 0/0
 13360 ;;		On exit  : 0/0
 13361 ;;		Unchanged: 0/0
 13362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13363 ;;      Params:         0       0       0       0       0       0       0       0       0
 13364 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13366 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13367 ;;Total ram usage:        1 bytes
 13368 ;; Hardware stack levels used:    1
 13369 ;; Hardware stack levels required when called:   11
 13370 ;; This function calls:
 13371 ;;		Nothing
 13372 ;; This function is called by:
 13373 ;;		_moteRunningProcess
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377                           	psect	text43
 13378  005AFE                     __ptext43:
 13379                           	opt stack 0
 13380  005AFE                     _TMR2_ReadTimer:
 13381                           	opt stack 17
 13382                           
 13383                           ;tmr2.c: 88: uint8_t readVal;
 13384                           ;tmr2.c: 90: readVal = TMR2;
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;incstack = 0
 13388  005AFE  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13389                           
 13390                           ;tmr2.c: 92: return readVal;
 13391  005B02  0100               	movlb	0	; () banked
 13392  005B04  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13393  005B06  0012               	return	
 13394  005B08                     __end_of_TMR2_ReadTimer:
 13395                           	opt stack 0
 13396                           tblptru	equ	0xFF8
 13397                           tblptrh	equ	0xFF7
 13398                           tblptrl	equ	0xFF6
 13399                           tablat	equ	0xFF5
 13400                           prodh	equ	0xFF4
 13401                           prodl	equ	0xFF3
 13402                           intcon	equ	0xFF2
 13403                           intcon3	equ	0xFF0
 13404                           postinc0	equ	0xFEE
 13405                           wreg	equ	0xFE8
 13406                           indf1	equ	0xFE7
 13407                           postdec1	equ	0xFE5
 13408                           fsr1h	equ	0xFE2
 13409                           fsr1l	equ	0xFE1
 13410                           indf2	equ	0xFDF
 13411                           fsr2h	equ	0xFDA
 13412                           fsr2l	equ	0xFD9
 13413                           status	equ	0xFD8
 13414                           
 13415 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13416 ;; Defined at:
 13417 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  dr              1    wreg     unsigned char 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  dr              1    4[BANK0 ] unsigned char 
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0
 13432 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13433 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13434 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13435 ;;Total ram usage:        2 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; Hardware stack levels required when called:   14
 13438 ;; This function calls:
 13439 ;;		_sendCommand
 13440 ;; This function is called by:
 13441 ;;		_moteRunningProcess
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           	psect	text44
 13446  0022F8                     __ptext44:
 13447                           	opt stack 0
 13448  0022F8                     _MOTEapp_SetDataRateSetting:
 13449                           	opt stack 14
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;incstack = 0
 13453                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13454  0022F8  0100               	movlb	0	; () banked
 13455  0022FA  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13456                           
 13457                           ;MOTEapp.c: 983: if (dr != 8)
 13458  0022FC  0E08               	movlw	8
 13459  0022FE  0100               	movlb	0	; () banked
 13460  002300  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13461  002302  B4D8               	btfsc	status,2,c
 13462  002304  D06A               	goto	l591
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;MOTEapp.c: 984: {
 13466                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 13467  002306  0EA3               	movlw	low STR_163
 13468  002308  6F61               	movwf	sendCommand@string& (0+255),b
 13469  00230A  0E7C               	movlw	high STR_163
 13470  00230C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13471  00230E  ECDD  F02A         	call	_sendCommand	;wreg free
 13472                           
 13473                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 13474  002312  0EFA               	movlw	250
 13475  002314  0100               	movlb	0	; () banked
 13476  002316  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13477  002318  0E58               	movlw	88
 13478  00231A                     u11167:
 13479  00231A  2EE8               	decfsz	wreg,f,c
 13480  00231C  D7FE               	bra	u11167
 13481  00231E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13482  002320  D7FC               	bra	u11167
 13483  002322  F000               	nop	
 13484                           
 13485                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 13486  002324  0EFA               	movlw	250
 13487  002326  0100               	movlb	0	; () banked
 13488  002328  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13489  00232A  0E58               	movlw	88
 13490  00232C                     u11177:
 13491  00232C  2EE8               	decfsz	wreg,f,c
 13492  00232E  D7FE               	bra	u11177
 13493  002330  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13494  002332  D7FC               	bra	u11177
 13495  002334  F000               	nop	
 13496                           
 13497                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 13498  002336  0EFA               	movlw	250
 13499  002338  0100               	movlb	0	; () banked
 13500  00233A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13501  00233C  0E58               	movlw	88
 13502  00233E                     u11187:
 13503  00233E  2EE8               	decfsz	wreg,f,c
 13504  002340  D7FE               	bra	u11187
 13505  002342  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13506  002344  D7FC               	bra	u11187
 13507  002346  F000               	nop	
 13508                           
 13509                           ;MOTEapp.c: 989: }
 13510                           ;MOTEapp.c: 991: switch (dr)
 13511  002348  D048               	goto	l591
 13512  00234A                     
 13513                           ;MOTEapp.c: 994: sendCommand("mac set dr 0");
 13514  00234A  0E7F               	movlw	low STR_164
 13515  00234C  0100               	movlb	0	; () banked
 13516  00234E  6F61               	movwf	sendCommand@string& (0+255),b
 13517  002350  0E7D               	movlw	high STR_164
 13518  002352  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13519  002354  ECDD  F02A         	call	_sendCommand	;wreg free
 13520                           
 13521                           ;MOTEapp.c: 995: break;
 13522  002358  D05D               	goto	l593
 13523  00235A                     
 13524                           ;MOTEapp.c: 997: sendCommand("mac set dr 1");
 13525  00235A  0E8C               	movlw	low STR_165
 13526  00235C  0100               	movlb	0	; () banked
 13527  00235E  6F61               	movwf	sendCommand@string& (0+255),b
 13528  002360  0E7D               	movlw	high STR_165
 13529  002362  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13530  002364  ECDD  F02A         	call	_sendCommand	;wreg free
 13531                           
 13532                           ;MOTEapp.c: 998: break;
 13533  002368  D055               	goto	l593
 13534  00236A                     
 13535                           ;MOTEapp.c: 1000: sendCommand("mac set dr 2");
 13536  00236A  0E99               	movlw	low STR_166
 13537  00236C  0100               	movlb	0	; () banked
 13538  00236E  6F61               	movwf	sendCommand@string& (0+255),b
 13539  002370  0E7D               	movlw	high STR_166
 13540  002372  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13541  002374  ECDD  F02A         	call	_sendCommand	;wreg free
 13542                           
 13543                           ;MOTEapp.c: 1001: break;
 13544  002378  D04D               	goto	l593
 13545  00237A                     
 13546                           ;MOTEapp.c: 1003: sendCommand("mac set dr 3");
 13547  00237A  0EA6               	movlw	low STR_167
 13548  00237C  0100               	movlb	0	; () banked
 13549  00237E  6F61               	movwf	sendCommand@string& (0+255),b
 13550  002380  0E7D               	movlw	high STR_167
 13551  002382  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13552  002384  ECDD  F02A         	call	_sendCommand	;wreg free
 13553                           
 13554                           ;MOTEapp.c: 1004: break;
 13555  002388  D045               	goto	l593
 13556  00238A                     
 13557                           ;MOTEapp.c: 1006: sendCommand("mac set dr 4");
 13558  00238A  0EB3               	movlw	low STR_168
 13559  00238C  0100               	movlb	0	; () banked
 13560  00238E  6F61               	movwf	sendCommand@string& (0+255),b
 13561  002390  0E7D               	movlw	high STR_168
 13562  002392  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13563  002394  ECDD  F02A         	call	_sendCommand	;wreg free
 13564                           
 13565                           ;MOTEapp.c: 1007: break;
 13566  002398  D03D               	goto	l593
 13567  00239A                     
 13568                           ;MOTEapp.c: 1009: sendCommand("mac set dr 5");
 13569  00239A  0EC0               	movlw	low STR_169
 13570  00239C  0100               	movlb	0	; () banked
 13571  00239E  6F61               	movwf	sendCommand@string& (0+255),b
 13572  0023A0  0E7D               	movlw	high STR_169
 13573  0023A2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13574  0023A4  ECDD  F02A         	call	_sendCommand	;wreg free
 13575                           
 13576                           ;MOTEapp.c: 1010: break;
 13577  0023A8  D035               	goto	l593
 13578  0023AA                     
 13579                           ;MOTEapp.c: 1012: sendCommand("mac set dr 6");
 13580  0023AA  0ECD               	movlw	low STR_170
 13581  0023AC  0100               	movlb	0	; () banked
 13582  0023AE  6F61               	movwf	sendCommand@string& (0+255),b
 13583  0023B0  0E7D               	movlw	high STR_170
 13584  0023B2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13585  0023B4  ECDD  F02A         	call	_sendCommand	;wreg free
 13586                           
 13587                           ;MOTEapp.c: 1013: break;
 13588  0023B8  D02D               	goto	l593
 13589  0023BA                     
 13590                           ;MOTEapp.c: 1015: sendCommand("mac set dr 7");
 13591  0023BA  0EDA               	movlw	low STR_171
 13592  0023BC  0100               	movlb	0	; () banked
 13593  0023BE  6F61               	movwf	sendCommand@string& (0+255),b
 13594  0023C0  0E7D               	movlw	high STR_171
 13595  0023C2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13596  0023C4  ECDD  F02A         	call	_sendCommand	;wreg free
 13597                           
 13598                           ;MOTEapp.c: 1016: break;
 13599  0023C8  D025               	goto	l593
 13600  0023CA                     
 13601                           ;MOTEapp.c: 1018: sendCommand("mac set adr on");
 13602  0023CA  0EF1               	movlw	low STR_172
 13603  0023CC  0100               	movlb	0	; () banked
 13604  0023CE  6F61               	movwf	sendCommand@string& (0+255),b
 13605  0023D0  0E7C               	movlw	high STR_172
 13606  0023D2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13607  0023D4  ECDD  F02A         	call	_sendCommand	;wreg free
 13608                           
 13609                           ;MOTEapp.c: 1020: }
 13610                           
 13611                           ;MOTEapp.c: 1019: break;
 13612  0023D8  D01D               	goto	l593
 13613  0023DA                     l591:
 13614  0023DA  0100               	movlb	0	; () banked
 13615  0023DC  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13616                           
 13617                           ; Switch size 1, requested type "space"
 13618                           ; Number of cases is 9, Range of values is 0 to 8
 13619                           ; switch strategies available:
 13620                           ; Name         Instructions Cycles
 13621                           ; simple_byte           28    15 (average)
 13622                           ;	Chosen strategy is simple_byte
 13623  0023DE  0A00               	xorlw	0	; case 0
 13624  0023E0  B4D8               	btfsc	status,2,c
 13625  0023E2  D7B3               	goto	l592
 13626  0023E4  0A01               	xorlw	1	; case 1
 13627  0023E6  B4D8               	btfsc	status,2,c
 13628  0023E8  D7B8               	goto	l594
 13629  0023EA  0A03               	xorlw	3	; case 2
 13630  0023EC  B4D8               	btfsc	status,2,c
 13631  0023EE  D7BD               	goto	l595
 13632  0023F0  0A01               	xorlw	1	; case 3
 13633  0023F2  B4D8               	btfsc	status,2,c
 13634  0023F4  D7C2               	goto	l596
 13635  0023F6  0A07               	xorlw	7	; case 4
 13636  0023F8  B4D8               	btfsc	status,2,c
 13637  0023FA  D7C7               	goto	l597
 13638  0023FC  0A01               	xorlw	1	; case 5
 13639  0023FE  B4D8               	btfsc	status,2,c
 13640  002400  D7CC               	goto	l598
 13641  002402  0A03               	xorlw	3	; case 6
 13642  002404  B4D8               	btfsc	status,2,c
 13643  002406  D7D1               	goto	l599
 13644  002408  0A01               	xorlw	1	; case 7
 13645  00240A  B4D8               	btfsc	status,2,c
 13646  00240C  D7D6               	goto	l600
 13647  00240E  0A0F               	xorlw	15	; case 8
 13648  002410  B4D8               	btfsc	status,2,c
 13649  002412  D7DB               	goto	l601
 13650  002414                     l593:
 13651                           
 13652                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 13653                           
 13654                           ; BSR set to: 0
 13655  002414  0EFA               	movlw	250
 13656  002416  0100               	movlb	0	; () banked
 13657  002418  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13658  00241A  0E58               	movlw	88
 13659  00241C                     u11197:
 13660  00241C  2EE8               	decfsz	wreg,f,c
 13661  00241E  D7FE               	bra	u11197
 13662  002420  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13663  002422  D7FC               	bra	u11197
 13664  002424  F000               	nop	
 13665                           
 13666                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 13667  002426  0EFA               	movlw	250
 13668  002428  0100               	movlb	0	; () banked
 13669  00242A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13670  00242C  0E58               	movlw	88
 13671  00242E                     u11207:
 13672  00242E  2EE8               	decfsz	wreg,f,c
 13673  002430  D7FE               	bra	u11207
 13674  002432  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13675  002434  D7FC               	bra	u11207
 13676  002436  F000               	nop	
 13677                           
 13678                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 13679  002438  0EFA               	movlw	250
 13680  00243A  0100               	movlb	0	; () banked
 13681  00243C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13682  00243E  0E58               	movlw	88
 13683  002440                     u11217:
 13684  002440  2EE8               	decfsz	wreg,f,c
 13685  002442  D7FE               	bra	u11217
 13686  002444  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13687  002446  D7FC               	bra	u11217
 13688  002448  F000               	nop	
 13689                           
 13690                           ;MOTEapp.c: 1024: sendCommand("mac save");
 13691  00244A  0E2B               	movlw	low STR_173
 13692  00244C  0100               	movlb	0	; () banked
 13693  00244E  6F61               	movwf	sendCommand@string& (0+255),b
 13694  002450  0E7F               	movlw	high STR_173
 13695  002452  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13696  002454  ECDD  F02A         	call	_sendCommand	;wreg free
 13697  002458  0012               	return		;funcret
 13698  00245A                     __end_of_MOTEapp_SetDataRateSetting:
 13699                           	opt stack 0
 13700                           tblptru	equ	0xFF8
 13701                           tblptrh	equ	0xFF7
 13702                           tblptrl	equ	0xFF6
 13703                           tablat	equ	0xFF5
 13704                           prodh	equ	0xFF4
 13705                           prodl	equ	0xFF3
 13706                           intcon	equ	0xFF2
 13707                           intcon3	equ	0xFF0
 13708                           postinc0	equ	0xFEE
 13709                           wreg	equ	0xFE8
 13710                           indf1	equ	0xFE7
 13711                           postdec1	equ	0xFE5
 13712                           fsr1h	equ	0xFE2
 13713                           fsr1l	equ	0xFE1
 13714                           indf2	equ	0xFDF
 13715                           fsr2h	equ	0xFDA
 13716                           fsr2l	equ	0xFD9
 13717                           status	equ	0xFD8
 13718                           
 13719 ;; *************** function _ADC_TempConversion *****************
 13720 ;; Defined at:
 13721 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  tempRaw         1    wreg     enum E5749
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;  tempRaw         1   70[BANK0 ] enum E5749
 13726 ;;  val             4   72[BANK0 ] enum E5749
 13727 ;;  temp            1   71[BANK0 ] unsigned char 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  1    wreg      unsigned char 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13737 ;;      Params:         0       0       0       0       0       0       0       0       0
 13738 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13740 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13741 ;;Total ram usage:        6 bytes
 13742 ;; Hardware stack levels used:    1
 13743 ;; Hardware stack levels required when called:   12
 13744 ;; This function calls:
 13745 ;;		___fladd
 13746 ;;		___fldiv
 13747 ;;		___flmul
 13748 ;;		___fltol
 13749 ;;		___xxtofl
 13750 ;; This function is called by:
 13751 ;;		_moteHandler
 13752 ;;		_moteRunningProcess
 13753 ;;		_moteApp_testSensors
 13754 ;;		_test_adc
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           	psect	text45
 13759  003100                     __ptext45:
 13760                           	opt stack 0
 13761  003100                     _ADC_TempConversion:
 13762                           	opt stack 16
 13763                           
 13764                           ;incstack = 0
 13765                           ;ADC_TempConversion@tempRaw stored from wreg
 13766  003100  0100               	movlb	0	; () banked
 13767  003102  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13768                           
 13769                           ;adc.c: 138: uint8_t temp;
 13770                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 13771  003104  0ECD               	movlw	205
 13772  003106  0100               	movlb	0	; () banked
 13773  003108  6F78               	movwf	___flmul@a& (0+255),b
 13774  00310A  0ECC               	movlw	204
 13775  00310C  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13776  00310E  0E4C               	movlw	76
 13777  003110  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13778  003112  0E40               	movlw	64
 13779  003114  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13780  003116  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 13781  003118  6F60               	movwf	___xxtofl@val& (0+255),b
 13782  00311A  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13783  00311C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13784  00311E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13785  003120  0E00               	movlw	0
 13786  003122  EC2D  F012         	call	___xxtofl
 13787  003126  C060  F074         	movff	?___xxtofl,___flmul@b
 13788  00312A  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 13789  00312E  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 13790  003132  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 13791  003136  EC9A  F00A         	call	___flmul	;wreg free
 13792  00313A  C074  F08D         	movff	?___flmul,___fldiv@b
 13793  00313E  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 13794  003142  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 13795  003146  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 13796  00314A  0E00               	movlw	0
 13797  00314C  0100               	movlb	0	; () banked
 13798  00314E  6F91               	movwf	___fldiv@a& (0+255),b
 13799  003150  0E00               	movlw	0
 13800  003152  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 13801  003154  0E80               	movlw	128
 13802  003156  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 13803  003158  0E44               	movlw	68
 13804  00315A  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 13805  00315C  ECE2  F00D         	call	___fldiv	;wreg free
 13806  003160  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 13807  003164  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 13808  003168  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 13809  00316C  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 13810                           
 13811                           ;adc.c: 141: val = ((val - 0.5)*100);
 13812  003170  0E00               	movlw	0
 13813  003172  0100               	movlb	0	; () banked
 13814  003174  6F64               	movwf	___fladd@a& (0+255),b
 13815  003176  0E00               	movlw	0
 13816  003178  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13817  00317A  0E00               	movlw	0
 13818  00317C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13819  00317E  0EBF               	movlw	191
 13820  003180  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13821  003182  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 13822  003186  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 13823  00318A  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 13824  00318E  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 13825  003192  EC43  F00C         	call	___fladd	;wreg free
 13826  003196  C060  F074         	movff	?___fladd,___flmul@b
 13827  00319A  C061  F075         	movff	?___fladd+1,___flmul@b+1
 13828  00319E  C062  F076         	movff	?___fladd+2,___flmul@b+2
 13829  0031A2  C063  F077         	movff	?___fladd+3,___flmul@b+3
 13830  0031A6  0E00               	movlw	0
 13831  0031A8  0100               	movlb	0	; () banked
 13832  0031AA  6F78               	movwf	___flmul@a& (0+255),b
 13833  0031AC  0E00               	movlw	0
 13834  0031AE  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13835  0031B0  0EC8               	movlw	200
 13836  0031B2  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13837  0031B4  0E42               	movlw	66
 13838  0031B6  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13839  0031B8  EC9A  F00A         	call	___flmul	;wreg free
 13840  0031BC  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 13841  0031C0  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 13842  0031C4  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 13843  0031C8  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 13844                           
 13845                           ;adc.c: 142: temp = (uint8_t) val;
 13846  0031CC  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 13847  0031D0  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 13848  0031D4  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 13849  0031D8  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 13850  0031DC  EC2C  F01B         	call	___fltol	;wreg free
 13851  0031E0  0100               	movlb	0	; () banked
 13852  0031E2  5160               	movf	?___fltol& (0+255),w,b
 13853  0031E4  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;adc.c: 144: return temp;
 13857  0031E6  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 13858  0031E8  0012               	return	
 13859  0031EA                     __end_of_ADC_TempConversion:
 13860                           	opt stack 0
 13861                           tblptru	equ	0xFF8
 13862                           tblptrh	equ	0xFF7
 13863                           tblptrl	equ	0xFF6
 13864                           tablat	equ	0xFF5
 13865                           prodh	equ	0xFF4
 13866                           prodl	equ	0xFF3
 13867                           intcon	equ	0xFF2
 13868                           intcon3	equ	0xFF0
 13869                           postinc0	equ	0xFEE
 13870                           wreg	equ	0xFE8
 13871                           indf1	equ	0xFE7
 13872                           postdec1	equ	0xFE5
 13873                           fsr1h	equ	0xFE2
 13874                           fsr1l	equ	0xFE1
 13875                           indf2	equ	0xFDF
 13876                           fsr2h	equ	0xFDA
 13877                           fsr2l	equ	0xFD9
 13878                           status	equ	0xFD8
 13879                           
 13880 ;; *************** function ___xxtofl *****************
 13881 ;; Defined at:
 13882 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  sign            1    wreg     unsigned char 
 13885 ;;  val             4    0[BANK0 ] long 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;  sign            1    8[BANK0 ] unsigned char 
 13888 ;;  arg             4   10[BANK0 ] unsigned long 
 13889 ;;  exp             1    9[BANK0 ] unsigned char 
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  4    0[BANK0 ] unsigned char 
 13892 ;; Registers used:
 13893 ;;		wreg, status,2, status,0
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13899 ;;      Params:         0       4       0       0       0       0       0       0       0
 13900 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13901 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13902 ;;      Totals:         0      14       0       0       0       0       0       0       0
 13903 ;;Total ram usage:       14 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:   11
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_ADC_TempConversion
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text46
 13914  00245A                     __ptext46:
 13915                           	opt stack 0
 13916  00245A                     ___xxtofl:
 13917                           	opt stack 16
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;incstack = 0
 13921                           ;___xxtofl@sign stored from wreg
 13922  00245A  0100               	movlb	0	; () banked
 13923  00245C  6F68               	movwf	___xxtofl@sign& (0+255),b
 13924  00245E  0100               	movlb	0	; () banked
 13925  002460  5168               	movf	___xxtofl@sign& (0+255),w,b
 13926  002462  A4D8               	btfss	status,2,c
 13927                           
 13928                           ; BSR set to: 0
 13929  002464  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 13930  002466  D01A               	goto	l2822
 13931                           
 13932                           ; BSR set to: 0
 13933  002468  C060  F064         	movff	___xxtofl@val,??___xxtofl
 13934  00246C  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 13935  002470  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 13936  002474  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 13937  002478  1F64               	comf	??___xxtofl& (0+255),f,b
 13938  00247A  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 13939  00247C  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 13940  00247E  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 13941  002480  2B64               	incf	??___xxtofl& (0+255),f,b
 13942  002482  0E00               	movlw	0
 13943  002484  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 13944  002486  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 13945  002488  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 13946  00248A  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 13947  00248E  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 13948  002492  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 13949  002496  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 13950  00249A  D008               	goto	l2823
 13951  00249C                     l2822:
 13952                           
 13953                           ; BSR set to: 0
 13954  00249C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 13955  0024A0  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13956  0024A4  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13957  0024A8  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13958  0024AC                     l2823:
 13959                           
 13960                           ; BSR set to: 0
 13961                           
 13962                           ; BSR set to: 0
 13963  0024AC  5160               	movf	___xxtofl@val& (0+255),w,b
 13964  0024AE  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 13965  0024B0  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 13966  0024B2  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 13967  0024B4  A4D8               	btfss	status,2,c
 13968  0024B6  D009               	goto	l2824
 13969                           
 13970                           ; BSR set to: 0
 13971  0024B8  0E00               	movlw	0
 13972  0024BA  6F60               	movwf	?___xxtofl& (0+255),b
 13973  0024BC  0E00               	movlw	0
 13974  0024BE  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 13975  0024C0  0E00               	movlw	0
 13976  0024C2  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 13977  0024C4  0E00               	movlw	0
 13978  0024C6  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 13979                           
 13980                           ; BSR set to: 0
 13981  0024C8  0012               	return	
 13982  0024CA                     l2824:
 13983                           
 13984                           ; BSR set to: 0
 13985                           
 13986                           ; BSR set to: 0
 13987  0024CA  0E96               	movlw	150
 13988  0024CC  6F69               	movwf	___xxtofl@exp& (0+255),b
 13989  0024CE  D006               	goto	l2826
 13990  0024D0                     
 13991                           ; BSR set to: 0
 13992                           
 13993                           ; BSR set to: 0
 13994  0024D0  2B69               	incf	___xxtofl@exp& (0+255),f,b
 13995  0024D2  90D8               	bcf	status,0,c
 13996  0024D4  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 13997  0024D6  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 13998  0024D8  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 13999  0024DA  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14000  0024DC                     l2826:
 14001                           
 14002                           ; BSR set to: 0
 14003                           
 14004                           ; BSR set to: 0
 14005  0024DC  0E00               	movlw	0
 14006  0024DE  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14007  0024E0  6F64               	movwf	??___xxtofl& (0+255),b
 14008  0024E2  0E00               	movlw	0
 14009  0024E4  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14010  0024E6  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14011  0024E8  0E00               	movlw	0
 14012  0024EA  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14013  0024EC  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14014  0024EE  0EFE               	movlw	254
 14015  0024F0  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14016  0024F2  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14017  0024F4  5164               	movf	??___xxtofl& (0+255),w,b
 14018  0024F6  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14019  0024F8  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14020  0024FA  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14021  0024FC  B4D8               	btfsc	status,2,c
 14022  0024FE  D00D               	goto	l2829
 14023  002500  D7E7               	goto	l2827
 14024  002502                     
 14025                           ; BSR set to: 0
 14026                           
 14027                           ; BSR set to: 0
 14028  002502  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14029                           
 14030                           ; BSR set to: 0
 14031  002504  0E01               	movlw	1
 14032  002506  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14033  002508  0E00               	movlw	0
 14034  00250A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14035  00250C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14036  00250E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14037                           
 14038                           ; BSR set to: 0
 14039  002510  90D8               	bcf	status,0,c
 14040  002512  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14041  002514  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14042  002516  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14043  002518  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14044  00251A                     l2829:
 14045                           
 14046                           ; BSR set to: 0
 14047  00251A  0E00               	movlw	0
 14048  00251C  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14049  00251E  6F64               	movwf	??___xxtofl& (0+255),b
 14050  002520  0E00               	movlw	0
 14051  002522  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14052  002524  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14053  002526  0E00               	movlw	0
 14054  002528  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14055  00252A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14056  00252C  0EFF               	movlw	255
 14057  00252E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14058  002530  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14059  002532  5164               	movf	??___xxtofl& (0+255),w,b
 14060  002534  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14061  002536  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14062  002538  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14063  00253A  B4D8               	btfsc	status,2,c
 14064  00253C  D007               	goto	l2832
 14065  00253E  D7E1               	goto	l2830
 14066  002540                     
 14067                           ; BSR set to: 0
 14068                           
 14069                           ; BSR set to: 0
 14070  002540  0769               	decf	___xxtofl@exp& (0+255),f,b
 14071  002542  90D8               	bcf	status,0,c
 14072  002544  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14073  002546  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14074  002548  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14075  00254A  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14076  00254C                     l2832:
 14077                           
 14078                           ; BSR set to: 0
 14079                           
 14080                           ; BSR set to: 0
 14081  00254C  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14082  00254E  D003               	goto	u7800
 14083                           
 14084                           ; BSR set to: 0
 14085  002550  0E02               	movlw	2
 14086  002552  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14087  002554  D7F5               	goto	l2833
 14088  002556                     u7800:
 14089                           
 14090                           ; BSR set to: 0
 14091                           
 14092                           ; BSR set to: 0
 14093  002556  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14094  002558  D008               	goto	l2837
 14095                           
 14096                           ; BSR set to: 0
 14097  00255A  0EFF               	movlw	255
 14098  00255C  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14099  00255E  0EFF               	movlw	255
 14100  002560  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14101  002562  0E7F               	movlw	127
 14102  002564  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14103  002566  0EFF               	movlw	255
 14104  002568  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14105  00256A                     l2837:
 14106                           
 14107                           ; BSR set to: 0
 14108  00256A  90D8               	bcf	status,0,c
 14109  00256C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14110  00256E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14111  002572  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14112  002574  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14113  002576  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14114  002578  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14115  00257C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14116  00257E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14117  002580  6B64               	clrf	??___xxtofl& (0+255),b
 14118  002582  5164               	movf	??___xxtofl& (0+255),w,b
 14119  002584  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14120  002586  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14121  002588  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14122  00258A  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14123  00258C  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14124  00258E  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14125  002590  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14126                           
 14127                           ; BSR set to: 0
 14128  002592  5168               	movf	___xxtofl@sign& (0+255),w,b
 14129  002594  A4D8               	btfss	status,2,c
 14130                           
 14131                           ; BSR set to: 0
 14132  002596  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14133  002598  D001               	goto	l2838
 14134                           
 14135                           ; BSR set to: 0
 14136  00259A  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14137  00259C                     l2838:
 14138                           
 14139                           ; BSR set to: 0
 14140                           
 14141                           ; BSR set to: 0
 14142  00259C  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14143  0025A0  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14144  0025A4  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14145  0025A8  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14146  0025AC  0012               	return	
 14147  0025AE                     __end_of___xxtofl:
 14148                           	opt stack 0
 14149                           tblptru	equ	0xFF8
 14150                           tblptrh	equ	0xFF7
 14151                           tblptrl	equ	0xFF6
 14152                           tablat	equ	0xFF5
 14153                           prodh	equ	0xFF4
 14154                           prodl	equ	0xFF3
 14155                           intcon	equ	0xFF2
 14156                           intcon3	equ	0xFF0
 14157                           postinc0	equ	0xFEE
 14158                           wreg	equ	0xFE8
 14159                           indf1	equ	0xFE7
 14160                           postdec1	equ	0xFE5
 14161                           fsr1h	equ	0xFE2
 14162                           fsr1l	equ	0xFE1
 14163                           indf2	equ	0xFDF
 14164                           fsr2h	equ	0xFDA
 14165                           fsr2l	equ	0xFD9
 14166                           status	equ	0xFD8
 14167                           
 14168 ;; *************** function ___fltol *****************
 14169 ;; Defined at:
 14170 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;  f1              4    0[BANK0 ] unsigned char 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  exp1            1    9[BANK0 ] unsigned char 
 14175 ;;  sign1           1    8[BANK0 ] unsigned char 
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  4    0[BANK0 ] long 
 14178 ;; Registers used:
 14179 ;;		wreg, status,2, status,0
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/0
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14185 ;;      Params:         0       4       0       0       0       0       0       0       0
 14186 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14187 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14188 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14189 ;;Total ram usage:       10 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:   11
 14192 ;; This function calls:
 14193 ;;		Nothing
 14194 ;; This function is called by:
 14195 ;;		_ADC_TempConversion
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text47
 14200  003658                     __ptext47:
 14201                           	opt stack 0
 14202  003658                     ___fltol:
 14203                           	opt stack 16
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;incstack = 0
 14207  003658  0100               	movlb	0	; () banked
 14208  00365A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14209  00365C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14210  00365E  6F69               	movwf	___fltol@exp1& (0+255),b
 14211  003660  5169               	movf	___fltol@exp1& (0+255),w,b
 14212  003662  A4D8               	btfss	status,2,c
 14213  003664  D009               	goto	l2475
 14214                           
 14215                           ; BSR set to: 0
 14216  003666  0E00               	movlw	0
 14217  003668  6F60               	movwf	?___fltol& (0+255),b
 14218  00366A  0E00               	movlw	0
 14219  00366C  6F61               	movwf	(?___fltol+1)& (0+255),b
 14220  00366E  0E00               	movlw	0
 14221  003670  6F62               	movwf	(?___fltol+2)& (0+255),b
 14222  003672  0E00               	movlw	0
 14223  003674  6F63               	movwf	(?___fltol+3)& (0+255),b
 14224                           
 14225                           ; BSR set to: 0
 14226  003676  0012               	return	
 14227  003678                     l2475:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  003678  C060  F064         	movff	___fltol@f1,??___fltol
 14233  00367C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14234  003680  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14235  003684  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14236  003688  0E20               	movlw	32
 14237  00368A  D005               	goto	u7650
 14238  00368C                     u7655:
 14239  00368C  90D8               	bcf	status,0,c
 14240  00368E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14241  003690  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14242  003692  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14243  003694  3364               	rrcf	??___fltol& (0+255),f,b
 14244  003696                     u7650:
 14245  003696  2EE8               	decfsz	wreg,f,c
 14246  003698  D7F9               	goto	u7655
 14247  00369A  5164               	movf	??___fltol& (0+255),w,b
 14248  00369C  6F68               	movwf	___fltol@sign1& (0+255),b
 14249                           
 14250                           ; BSR set to: 0
 14251  00369E  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14252                           
 14253                           ; BSR set to: 0
 14254  0036A0  0EFF               	movlw	255
 14255  0036A2  1760               	andwf	___fltol@f1& (0+255),f,b
 14256  0036A4  0EFF               	movlw	255
 14257  0036A6  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14258  0036A8  0EFF               	movlw	255
 14259  0036AA  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14260  0036AC  0E00               	movlw	0
 14261  0036AE  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14262                           
 14263                           ; BSR set to: 0
 14264  0036B0  0E96               	movlw	150
 14265  0036B2  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14266                           
 14267                           ; BSR set to: 0
 14268  0036B4  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14269  0036B6  D016               	goto	l2477
 14270                           
 14271                           ; BSR set to: 0
 14272  0036B8  5169               	movf	___fltol@exp1& (0+255),w,b
 14273  0036BA  0A80               	xorlw	128
 14274  0036BC  0F97               	addlw	151
 14275  0036BE  B0D8               	btfsc	status,0,c
 14276  0036C0  D009               	goto	l2478
 14277                           
 14278                           ; BSR set to: 0
 14279  0036C2  0E00               	movlw	0
 14280  0036C4  6F60               	movwf	?___fltol& (0+255),b
 14281  0036C6  0E00               	movlw	0
 14282  0036C8  6F61               	movwf	(?___fltol+1)& (0+255),b
 14283  0036CA  0E00               	movlw	0
 14284  0036CC  6F62               	movwf	(?___fltol+2)& (0+255),b
 14285  0036CE  0E00               	movlw	0
 14286  0036D0  6F63               	movwf	(?___fltol+3)& (0+255),b
 14287                           
 14288                           ; BSR set to: 0
 14289  0036D2  0012               	return	
 14290  0036D4                     l2478:
 14291                           
 14292                           ; BSR set to: 0
 14293                           
 14294                           ; BSR set to: 0
 14295                           
 14296                           ; BSR set to: 0
 14297  0036D4  90D8               	bcf	status,0,c
 14298  0036D6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14299  0036D8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14300  0036DA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14301  0036DC  3360               	rrcf	___fltol@f1& (0+255),f,b
 14302                           
 14303                           ; BSR set to: 0
 14304  0036DE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14305  0036E0  D7F9               	goto	l2478
 14306                           
 14307                           ; BSR set to: 0
 14308  0036E2  D015               	goto	u7690
 14309  0036E4                     l2477:
 14310                           
 14311                           ; BSR set to: 0
 14312                           
 14313                           ; BSR set to: 0
 14314  0036E4  0E1F               	movlw	31
 14315  0036E6  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14316  0036E8  D00F               	goto	l2483
 14317                           
 14318                           ; BSR set to: 0
 14319  0036EA  0E00               	movlw	0
 14320  0036EC  6F60               	movwf	?___fltol& (0+255),b
 14321  0036EE  0E00               	movlw	0
 14322  0036F0  6F61               	movwf	(?___fltol+1)& (0+255),b
 14323  0036F2  0E00               	movlw	0
 14324  0036F4  6F62               	movwf	(?___fltol+2)& (0+255),b
 14325  0036F6  0E00               	movlw	0
 14326  0036F8  6F63               	movwf	(?___fltol+3)& (0+255),b
 14327                           
 14328                           ; BSR set to: 0
 14329  0036FA  0012               	return	
 14330  0036FC                     
 14331                           ; BSR set to: 0
 14332                           
 14333                           ; BSR set to: 0
 14334  0036FC  90D8               	bcf	status,0,c
 14335  0036FE  3760               	rlcf	___fltol@f1& (0+255),f,b
 14336  003700  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14337  003702  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14338  003704  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14339  003706  0769               	decf	___fltol@exp1& (0+255),f,b
 14340  003708                     l2483:
 14341                           
 14342                           ; BSR set to: 0
 14343                           
 14344                           ; BSR set to: 0
 14345  003708  5169               	movf	___fltol@exp1& (0+255),w,b
 14346  00370A  A4D8               	btfss	status,2,c
 14347  00370C  D7F7               	goto	l2484
 14348  00370E                     u7690:
 14349                           
 14350                           ; BSR set to: 0
 14351                           
 14352                           ; BSR set to: 0
 14353                           
 14354                           ; BSR set to: 0
 14355  00370E  5168               	movf	___fltol@sign1& (0+255),w,b
 14356  003710  B4D8               	btfsc	status,2,c
 14357  003712  D008               	goto	l2486
 14358                           
 14359                           ; BSR set to: 0
 14360  003714  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14361  003716  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14362  003718  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14363  00371A  6D60               	negf	___fltol@f1& (0+255),b
 14364  00371C  0E00               	movlw	0
 14365  00371E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14366  003720  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14367  003722  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14368  003724                     l2486:
 14369                           
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373  003724  C060  F060         	movff	___fltol@f1,?___fltol
 14374  003728  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14375  00372C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14376  003730  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14377  003734  0012               	return	
 14378  003736                     __end_of___fltol:
 14379                           	opt stack 0
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           intcon	equ	0xFF2
 14387                           intcon3	equ	0xFF0
 14388                           postinc0	equ	0xFEE
 14389                           wreg	equ	0xFE8
 14390                           indf1	equ	0xFE7
 14391                           postdec1	equ	0xFE5
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           fsr2h	equ	0xFDA
 14396                           fsr2l	equ	0xFD9
 14397                           status	equ	0xFD8
 14398                           
 14399 ;; *************** function ___flmul *****************
 14400 ;; Defined at:
 14401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;  b               4   20[BANK0 ] long 
 14404 ;;  a               4   24[BANK0 ] long 
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  prod            4   39[BANK0 ] struct .
 14407 ;;  grs             4   33[BANK0 ] unsigned long 
 14408 ;;  temp            2   43[BANK0 ] struct .
 14409 ;;  bexp            1   38[BANK0 ] unsigned char 
 14410 ;;  aexp            1   37[BANK0 ] unsigned char 
 14411 ;;  sign            1   32[BANK0 ] unsigned char 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  4   20[BANK0 ] unsigned char 
 14414 ;; Registers used:
 14415 ;;		wreg, status,2, status,0, prodl, prodh
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14421 ;;      Params:         0       8       0       0       0       0       0       0       0
 14422 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14423 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14424 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14425 ;;Total ram usage:       25 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:   11
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		_ADC_TempConversion
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text48
 14436  001534                     __ptext48:
 14437                           	opt stack 0
 14438  001534                     ___flmul:
 14439                           	opt stack 16
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;incstack = 0
 14443  001534  0100               	movlb	0	; () banked
 14444  001536  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14445  001538  0B80               	andlw	128
 14446  00153A  6F80               	movwf	___flmul@sign& (0+255),b
 14447  00153C  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14448  00153E  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14449  001540  6F86               	movwf	___flmul@bexp& (0+255),b
 14450                           
 14451                           ; BSR set to: 0
 14452  001542  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14453                           
 14454                           ; BSR set to: 0
 14455  001544  8186               	bsf	___flmul@bexp& (0+255),0,b
 14456                           
 14457                           ; BSR set to: 0
 14458                           
 14459                           ; BSR set to: 0
 14460  001546  5186               	movf	___flmul@bexp& (0+255),w,b
 14461  001548  B4D8               	btfsc	status,2,c
 14462  00154A  D00D               	goto	l2777
 14463                           
 14464                           ; BSR set to: 0
 14465  00154C  2986               	incf	___flmul@bexp& (0+255),w,b
 14466  00154E  A4D8               	btfss	status,2,c
 14467  001550  D008               	goto	l2778
 14468                           
 14469                           ; BSR set to: 0
 14470  001552  0E00               	movlw	0
 14471  001554  6F74               	movwf	___flmul@b& (0+255),b
 14472  001556  0E00               	movlw	0
 14473  001558  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14474  00155A  0E00               	movlw	0
 14475  00155C  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14476  00155E  0E00               	movlw	0
 14477  001560  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14478  001562                     l2778:
 14479                           
 14480                           ; BSR set to: 0
 14481                           
 14482                           ; BSR set to: 0
 14483  001562  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 14484  001564  D008               	goto	l2779
 14485  001566                     l2777:
 14486                           
 14487                           ; BSR set to: 0
 14488                           
 14489                           ; BSR set to: 0
 14490  001566  0E00               	movlw	0
 14491  001568  6F74               	movwf	___flmul@b& (0+255),b
 14492  00156A  0E00               	movlw	0
 14493  00156C  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14494  00156E  0E00               	movlw	0
 14495  001570  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14496  001572  0E00               	movlw	0
 14497  001574  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14498  001576                     l2779:
 14499                           
 14500                           ; BSR set to: 0
 14501                           
 14502                           ; BSR set to: 0
 14503  001576  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14504  001578  0B80               	andlw	128
 14505  00157A  1B80               	xorwf	___flmul@sign& (0+255),f,b
 14506                           
 14507                           ; BSR set to: 0
 14508  00157C  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14509  00157E  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 14510  001580  6F85               	movwf	___flmul@aexp& (0+255),b
 14511                           
 14512                           ; BSR set to: 0
 14513  001582  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 14514                           
 14515                           ; BSR set to: 0
 14516  001584  8185               	bsf	___flmul@aexp& (0+255),0,b
 14517                           
 14518                           ; BSR set to: 0
 14519                           
 14520                           ; BSR set to: 0
 14521  001586  5185               	movf	___flmul@aexp& (0+255),w,b
 14522  001588  B4D8               	btfsc	status,2,c
 14523  00158A  D00D               	goto	l2781
 14524                           
 14525                           ; BSR set to: 0
 14526  00158C  2985               	incf	___flmul@aexp& (0+255),w,b
 14527  00158E  A4D8               	btfss	status,2,c
 14528  001590  D008               	goto	l2782
 14529                           
 14530                           ; BSR set to: 0
 14531  001592  0E00               	movlw	0
 14532  001594  6F78               	movwf	___flmul@a& (0+255),b
 14533  001596  0E00               	movlw	0
 14534  001598  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14535  00159A  0E00               	movlw	0
 14536  00159C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14537  00159E  0E00               	movlw	0
 14538  0015A0  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14539  0015A2                     l2782:
 14540                           
 14541                           ; BSR set to: 0
 14542                           
 14543                           ; BSR set to: 0
 14544  0015A2  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 14545  0015A4  D008               	goto	l2783
 14546  0015A6                     l2781:
 14547                           
 14548                           ; BSR set to: 0
 14549                           
 14550                           ; BSR set to: 0
 14551  0015A6  0E00               	movlw	0
 14552  0015A8  6F78               	movwf	___flmul@a& (0+255),b
 14553  0015AA  0E00               	movlw	0
 14554  0015AC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14555  0015AE  0E00               	movlw	0
 14556  0015B0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14557  0015B2  0E00               	movlw	0
 14558  0015B4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14559  0015B6                     l2783:
 14560                           
 14561                           ; BSR set to: 0
 14562  0015B6  5185               	movf	___flmul@aexp& (0+255),w,b
 14563  0015B8  B4D8               	btfsc	status,2,c
 14564  0015BA  D003               	goto	u7460
 14565                           
 14566                           ; BSR set to: 0
 14567  0015BC  5186               	movf	___flmul@bexp& (0+255),w,b
 14568  0015BE  A4D8               	btfss	status,2,c
 14569  0015C0  D009               	goto	l2784
 14570  0015C2                     u7460:
 14571                           
 14572                           ; BSR set to: 0
 14573                           
 14574                           ; BSR set to: 0
 14575  0015C2  0E00               	movlw	0
 14576  0015C4  6F74               	movwf	?___flmul& (0+255),b
 14577  0015C6  0E00               	movlw	0
 14578  0015C8  6F75               	movwf	(?___flmul+1)& (0+255),b
 14579  0015CA  0E00               	movlw	0
 14580  0015CC  6F76               	movwf	(?___flmul+2)& (0+255),b
 14581  0015CE  0E00               	movlw	0
 14582  0015D0  6F77               	movwf	(?___flmul+3)& (0+255),b
 14583                           
 14584                           ; BSR set to: 0
 14585  0015D2  0012               	return	
 14586  0015D4                     l2784:
 14587                           
 14588                           ; BSR set to: 0
 14589                           
 14590                           ; BSR set to: 0
 14591  0015D4  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14592  0015D6  0374               	mulwf	___flmul@b& (0+255),b
 14593  0015D8  CFF3 F08B          	movff	prodl,___flmul@temp
 14594  0015DC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14595                           
 14596                           ; BSR set to: 0
 14597  0015E0  518B               	movf	___flmul@temp& (0+255),w,b
 14598  0015E2  6F81               	movwf	___flmul@grs& (0+255),b
 14599  0015E4  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 14600  0015E6  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 14601  0015E8  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 14602                           
 14603                           ; BSR set to: 0
 14604  0015EA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14605  0015EC  6F87               	movwf	___flmul@prod& (0+255),b
 14606  0015EE  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 14607  0015F0  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 14608  0015F2  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 14609  0015F4  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14610  0015F6  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14611  0015F8  CFF3 F08B          	movff	prodl,___flmul@temp
 14612  0015FC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14613                           
 14614                           ; BSR set to: 0
 14615  001600  518B               	movf	___flmul@temp& (0+255),w,b
 14616  001602  2781               	addwf	___flmul@grs& (0+255),f,b
 14617  001604  0E00               	movlw	0
 14618  001606  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14619  001608  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14620  00160A  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14621                           
 14622                           ; BSR set to: 0
 14623  00160C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14624  00160E  2787               	addwf	___flmul@prod& (0+255),f,b
 14625  001610  0E00               	movlw	0
 14626  001612  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14627  001614  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14628  001616  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14629  001618  5178               	movf	___flmul@a& (0+255),w,b
 14630  00161A  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14631  00161C  CFF3 F08B          	movff	prodl,___flmul@temp
 14632  001620  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14633                           
 14634                           ; BSR set to: 0
 14635  001624  518B               	movf	___flmul@temp& (0+255),w,b
 14636  001626  2781               	addwf	___flmul@grs& (0+255),f,b
 14637  001628  0E00               	movlw	0
 14638  00162A  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14639  00162C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14640  00162E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14641                           
 14642                           ; BSR set to: 0
 14643  001630  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14644  001632  2787               	addwf	___flmul@prod& (0+255),f,b
 14645  001634  0E00               	movlw	0
 14646  001636  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14647  001638  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14648  00163A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14649                           
 14650                           ; BSR set to: 0
 14651  00163C  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14652  001640  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14653  001644  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14654  001648  6B81               	clrf	___flmul@grs& (0+255),b
 14655                           
 14656                           ; BSR set to: 0
 14657  00164A  5178               	movf	___flmul@a& (0+255),w,b
 14658  00164C  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14659  00164E  CFF3 F08B          	movff	prodl,___flmul@temp
 14660  001652  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14661                           
 14662                           ; BSR set to: 0
 14663  001656  518B               	movf	___flmul@temp& (0+255),w,b
 14664  001658  2781               	addwf	___flmul@grs& (0+255),f,b
 14665  00165A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14666  00165C  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14667  00165E  0E00               	movlw	0
 14668  001660  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14669  001662  0E00               	movlw	0
 14670  001664  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14671                           
 14672                           ; BSR set to: 0
 14673  001666  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14674  001668  0374               	mulwf	___flmul@b& (0+255),b
 14675  00166A  CFF3 F08B          	movff	prodl,___flmul@temp
 14676  00166E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14677                           
 14678                           ; BSR set to: 0
 14679  001672  518B               	movf	___flmul@temp& (0+255),w,b
 14680  001674  2781               	addwf	___flmul@grs& (0+255),f,b
 14681  001676  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14682  001678  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14683  00167A  0E00               	movlw	0
 14684  00167C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14685  00167E  0E00               	movlw	0
 14686  001680  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14687                           
 14688                           ; BSR set to: 0
 14689  001682  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14690  001686  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14691  00168A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14692  00168E  6B81               	clrf	___flmul@grs& (0+255),b
 14693  001690  5178               	movf	___flmul@a& (0+255),w,b
 14694  001692  0374               	mulwf	___flmul@b& (0+255),b
 14695  001694  CFF3 F08B          	movff	prodl,___flmul@temp
 14696  001698  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14697                           
 14698                           ; BSR set to: 0
 14699  00169C  518B               	movf	___flmul@temp& (0+255),w,b
 14700  00169E  2781               	addwf	___flmul@grs& (0+255),f,b
 14701  0016A0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14702  0016A2  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14703  0016A4  0E00               	movlw	0
 14704  0016A6  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14705  0016A8  0E00               	movlw	0
 14706  0016AA  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14707                           
 14708                           ; BSR set to: 0
 14709  0016AC  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14710  0016AE  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14711  0016B0  CFF3 F08B          	movff	prodl,___flmul@temp
 14712  0016B4  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14713  0016B8  518B               	movf	___flmul@temp& (0+255),w,b
 14714  0016BA  2787               	addwf	___flmul@prod& (0+255),f,b
 14715  0016BC  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14716  0016BE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14717  0016C0  0E00               	movlw	0
 14718  0016C2  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14719  0016C4  0E00               	movlw	0
 14720  0016C6  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14721                           
 14722                           ; BSR set to: 0
 14723  0016C8  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14724  0016CA  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14725  0016CC  CFF3 F08B          	movff	prodl,___flmul@temp
 14726  0016D0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14727                           
 14728                           ; BSR set to: 0
 14729  0016D4  518B               	movf	___flmul@temp& (0+255),w,b
 14730  0016D6  2787               	addwf	___flmul@prod& (0+255),f,b
 14731  0016D8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14732  0016DA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14733  0016DC  0E00               	movlw	0
 14734  0016DE  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14735  0016E0  0E00               	movlw	0
 14736  0016E2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14737  0016E4  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14738  0016E6  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14739  0016E8  CFF3 F08B          	movff	prodl,___flmul@temp
 14740  0016EC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14741                           
 14742                           ; BSR set to: 0
 14743  0016F0  518B               	movf	___flmul@temp& (0+255),w,b
 14744  0016F2  6F7C               	movwf	??___flmul& (0+255),b
 14745  0016F4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14746  0016F6  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14747  0016F8  6B7E               	clrf	(??___flmul+2)& (0+255),b
 14748  0016FA  6B7F               	clrf	(??___flmul+3)& (0+255),b
 14749  0016FC  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 14750  001700  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 14751  001704  C07C  F07D         	movff	??___flmul,??___flmul+1
 14752  001708  6B7C               	clrf	??___flmul& (0+255),b
 14753  00170A  517C               	movf	??___flmul& (0+255),w,b
 14754  00170C  2787               	addwf	___flmul@prod& (0+255),f,b
 14755  00170E  517D               	movf	(??___flmul+1)& (0+255),w,b
 14756  001710  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14757  001712  517E               	movf	(??___flmul+2)& (0+255),w,b
 14758  001714  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14759  001716  517F               	movf	(??___flmul+3)& (0+255),w,b
 14760  001718  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14761                           
 14762                           ; BSR set to: 0
 14763  00171A  C081  F07C         	movff	___flmul@grs,??___flmul
 14764  00171E  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 14765  001722  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 14766  001726  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 14767  00172A  0E19               	movlw	25
 14768  00172C  D005               	goto	u7470
 14769  00172E                     u7475:
 14770  00172E  90D8               	bcf	status,0,c
 14771  001730  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14772  001732  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14773  001734  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14774  001736  337C               	rrcf	??___flmul& (0+255),f,b
 14775  001738                     u7470:
 14776  001738  2EE8               	decfsz	wreg,f,c
 14777  00173A  D7F9               	goto	u7475
 14778  00173C  517C               	movf	??___flmul& (0+255),w,b
 14779  00173E  2787               	addwf	___flmul@prod& (0+255),f,b
 14780  001740  517D               	movf	(??___flmul+1)& (0+255),w,b
 14781  001742  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14782  001744  517E               	movf	(??___flmul+2)& (0+255),w,b
 14783  001746  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14784  001748  517F               	movf	(??___flmul+3)& (0+255),w,b
 14785  00174A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14786                           
 14787                           ; BSR set to: 0
 14788  00174C  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14789  001750  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14790  001754  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14791  001758  6B81               	clrf	___flmul@grs& (0+255),b
 14792                           
 14793                           ; BSR set to: 0
 14794  00175A  5185               	movf	___flmul@aexp& (0+255),w,b
 14795  00175C  C086  F07C         	movff	___flmul@bexp,??___flmul
 14796  001760  6B7D               	clrf	(??___flmul+1)& (0+255),b
 14797  001762  277C               	addwf	??___flmul& (0+255),f,b
 14798  001764  0E00               	movlw	0
 14799  001766  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 14800  001768  0E82               	movlw	130
 14801  00176A  257C               	addwf	??___flmul& (0+255),w,b
 14802  00176C  6F8B               	movwf	___flmul@temp& (0+255),b
 14803  00176E  0EFF               	movlw	255
 14804  001770  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 14805  001772  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 14806  001774  D00F               	goto	l2788
 14807  001776                     
 14808                           ; BSR set to: 0
 14809                           
 14810                           ; BSR set to: 0
 14811  001776  90D8               	bcf	status,0,c
 14812  001778  3787               	rlcf	___flmul@prod& (0+255),f,b
 14813  00177A  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14814  00177C  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14815  00177E  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14816                           
 14817                           ; BSR set to: 0
 14818  001780  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14819                           
 14820                           ; BSR set to: 0
 14821  001782  8187               	bsf	___flmul@prod& (0+255),0,b
 14822                           
 14823                           ; BSR set to: 0
 14824  001784  90D8               	bcf	status,0,c
 14825  001786  3781               	rlcf	___flmul@grs& (0+255),f,b
 14826  001788  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14827  00178A  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14828  00178C  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14829  00178E  078B               	decf	___flmul@temp& (0+255),f,b
 14830  001790  A0D8               	btfss	status,0,c
 14831  001792  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 14832  001794                     l2788:
 14833                           
 14834                           ; BSR set to: 0
 14835                           
 14836                           ; BSR set to: 0
 14837  001794  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 14838  001796  D7EF               	goto	l2789
 14839                           
 14840                           ; BSR set to: 0
 14841                           
 14842                           ; BSR set to: 0
 14843  001798  0E00               	movlw	0
 14844  00179A  6F85               	movwf	___flmul@aexp& (0+255),b
 14845                           
 14846                           ; BSR set to: 0
 14847  00179C  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 14848  00179E  D016               	goto	l2795
 14849                           
 14850                           ; BSR set to: 0
 14851  0017A0  0EFF               	movlw	255
 14852  0017A2  1581               	andwf	___flmul@grs& (0+255),w,b
 14853  0017A4  6F7C               	movwf	??___flmul& (0+255),b
 14854  0017A6  0EFF               	movlw	255
 14855  0017A8  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 14856  0017AA  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14857  0017AC  0EFF               	movlw	255
 14858  0017AE  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 14859  0017B0  6F7E               	movwf	(??___flmul+2)& (0+255),b
 14860  0017B2  0E7F               	movlw	127
 14861  0017B4  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 14862  0017B6  6F7F               	movwf	(??___flmul+3)& (0+255),b
 14863  0017B8  517C               	movf	??___flmul& (0+255),w,b
 14864  0017BA  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 14865  0017BC  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 14866  0017BE  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 14867  0017C0  A4D8               	btfss	status,2,c
 14868  0017C2  D002               	goto	u7520
 14869                           
 14870                           ; BSR set to: 0
 14871                           
 14872                           ; BSR set to: 0
 14873  0017C4  A187               	btfss	___flmul@prod& (0+255),0,b
 14874  0017C6  D002               	goto	l2795
 14875  0017C8                     u7520:
 14876                           
 14877                           ; BSR set to: 0
 14878  0017C8  0E01               	movlw	1
 14879  0017CA  6F85               	movwf	___flmul@aexp& (0+255),b
 14880  0017CC                     l2795:
 14881                           
 14882                           ; BSR set to: 0
 14883                           
 14884                           ; BSR set to: 0
 14885                           
 14886                           ; BSR set to: 0
 14887  0017CC  5185               	movf	___flmul@aexp& (0+255),w,b
 14888  0017CE  B4D8               	btfsc	status,2,c
 14889  0017D0  D01F               	goto	l2797
 14890                           
 14891                           ; BSR set to: 0
 14892  0017D2  0E01               	movlw	1
 14893  0017D4  2787               	addwf	___flmul@prod& (0+255),f,b
 14894  0017D6  0E00               	movlw	0
 14895  0017D8  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14896  0017DA  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14897  0017DC  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14898                           
 14899                           ; BSR set to: 0
 14900  0017DE  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 14901  0017E0  D017               	goto	l2797
 14902                           
 14903                           ; BSR set to: 0
 14904  0017E2  C087  F07C         	movff	___flmul@prod,??___flmul
 14905  0017E6  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 14906  0017EA  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 14907  0017EE  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 14908  0017F2  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 14909  0017F4  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14910  0017F6  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14911  0017F8  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14912  0017FA  337C               	rrcf	??___flmul& (0+255),f,b
 14913  0017FC  C07C  F087         	movff	??___flmul,___flmul@prod
 14914  001800  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 14915  001804  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 14916  001808  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 14917                           
 14918                           ; BSR set to: 0
 14919  00180C  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 14920  00180E  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 14921  001810                     l2797:
 14922                           
 14923                           ; BSR set to: 0
 14924                           
 14925                           ; BSR set to: 0
 14926                           
 14927                           ; BSR set to: 0
 14928  001810  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14929  001812  D00D               	goto	l2798
 14930  001814  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14931  001816  E103               	bnz	u7550
 14932  001818  298B               	incf	___flmul@temp& (0+255),w,b
 14933  00181A  A0D8               	btfss	status,0,c
 14934  00181C  D008               	goto	l2798
 14935  00181E                     u7550:
 14936                           
 14937                           ; BSR set to: 0
 14938  00181E  0E00               	movlw	0
 14939  001820  6F87               	movwf	___flmul@prod& (0+255),b
 14940  001822  0E00               	movlw	0
 14941  001824  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14942  001826  0E80               	movlw	128
 14943  001828  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14944  00182A  0E7F               	movlw	127
 14945  00182C  D020               	goto	L7
 14946  00182E                     l2798:
 14947                           
 14948                           ; BSR set to: 0
 14949                           
 14950                           ; BSR set to: 0
 14951  00182E  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14952  001830  D005               	goto	u7560
 14953  001832  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14954  001834  E10E               	bnz	l2800
 14955  001836  058B               	decf	___flmul@temp& (0+255),w,b
 14956  001838  B0D8               	btfsc	status,0,c
 14957  00183A  D00B               	goto	l2800
 14958  00183C                     u7560:
 14959                           
 14960                           ; BSR set to: 0
 14961  00183C  0E00               	movlw	0
 14962  00183E  6F87               	movwf	___flmul@prod& (0+255),b
 14963  001840  0E00               	movlw	0
 14964  001842  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14965  001844  0E00               	movlw	0
 14966  001846  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14967  001848  0E00               	movlw	0
 14968  00184A  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14969  00184C  0E00               	movlw	0
 14970  00184E  6F80               	movwf	___flmul@sign& (0+255),b
 14971  001850  D00F               	goto	l2801
 14972  001852                     l2800:
 14973                           
 14974                           ; BSR set to: 0
 14975  001852  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 14976                           
 14977                           ; BSR set to: 0
 14978  001856  0EFF               	movlw	255
 14979  001858  1787               	andwf	___flmul@prod& (0+255),f,b
 14980  00185A  0EFF               	movlw	255
 14981  00185C  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 14982  00185E  0E7F               	movlw	127
 14983  001860  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 14984  001862  0E00               	movlw	0
 14985  001864  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 14986                           
 14987                           ; BSR set to: 0
 14988  001866  B186               	btfsc	___flmul@bexp& (0+255),0,b
 14989                           
 14990                           ; BSR set to: 0
 14991  001868  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 14992                           
 14993                           ; BSR set to: 0
 14994                           
 14995                           ; BSR set to: 0
 14996  00186A  90D8               	bcf	status,0,c
 14997  00186C  3186               	rrcf	___flmul@bexp& (0+255),w,b
 14998  00186E                     L7:
 14999  00186E  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15000  001870                     l2801:
 15001                           
 15002                           ; BSR set to: 0
 15003                           
 15004                           ; BSR set to: 0
 15005                           
 15006                           ; BSR set to: 0
 15007  001870  5180               	movf	___flmul@sign& (0+255),w,b
 15008  001872  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15009                           
 15010                           ; BSR set to: 0
 15011  001874  C087  F074         	movff	___flmul@prod,?___flmul
 15012  001878  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 15013  00187C  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 15014  001880  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 15015  001884  0012               	return	
 15016  001886                     __end_of___flmul:
 15017                           	opt stack 0
 15018                           tblptru	equ	0xFF8
 15019                           tblptrh	equ	0xFF7
 15020                           tblptrl	equ	0xFF6
 15021                           tablat	equ	0xFF5
 15022                           prodh	equ	0xFF4
 15023                           prodl	equ	0xFF3
 15024                           intcon	equ	0xFF2
 15025                           intcon3	equ	0xFF0
 15026                           postinc0	equ	0xFEE
 15027                           wreg	equ	0xFE8
 15028                           indf1	equ	0xFE7
 15029                           postdec1	equ	0xFE5
 15030                           fsr1h	equ	0xFE2
 15031                           fsr1l	equ	0xFE1
 15032                           indf2	equ	0xFDF
 15033                           fsr2h	equ	0xFDA
 15034                           fsr2l	equ	0xFD9
 15035                           status	equ	0xFD8
 15036                           
 15037 ;; *************** function ___fldiv *****************
 15038 ;; Defined at:
 15039 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;  b               4   45[BANK0 ] unsigned char 
 15042 ;;  a               4   49[BANK0 ] unsigned char 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;  grs             4   64[BANK0 ] unsigned long 
 15045 ;;  rem             4   58[BANK0 ] unsigned long 
 15046 ;;  new_exp         2   62[BANK0 ] int 
 15047 ;;  aexp            1   69[BANK0 ] unsigned char 
 15048 ;;  bexp            1   68[BANK0 ] unsigned char 
 15049 ;;  sign            1   57[BANK0 ] unsigned char 
 15050 ;; Return value:  Size  Location     Type
 15051 ;;                  4   45[BANK0 ] unsigned char 
 15052 ;; Registers used:
 15053 ;;		wreg, status,2, status,0
 15054 ;; Tracked objects:
 15055 ;;		On entry : 0/0
 15056 ;;		On exit  : 0/0
 15057 ;;		Unchanged: 0/0
 15058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15059 ;;      Params:         0       8       0       0       0       0       0       0       0
 15060 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15061 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15062 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15063 ;;Total ram usage:       25 bytes
 15064 ;; Hardware stack levels used:    1
 15065 ;; Hardware stack levels required when called:   11
 15066 ;; This function calls:
 15067 ;;		Nothing
 15068 ;; This function is called by:
 15069 ;;		_ADC_TempConversion
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           	psect	text49
 15074  001BC4                     __ptext49:
 15075                           	opt stack 0
 15076  001BC4                     ___fldiv:
 15077                           	opt stack 16
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;incstack = 0
 15081  001BC4  0100               	movlb	0	; () banked
 15082  001BC6  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15083  001BC8  0B80               	andlw	128
 15084  001BCA  6F99               	movwf	___fldiv@sign& (0+255),b
 15085  001BCC  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15086  001BCE  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15087  001BD0  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15088                           
 15089                           ; BSR set to: 0
 15090  001BD2  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15091                           
 15092                           ; BSR set to: 0
 15093  001BD4  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15094                           
 15095                           ; BSR set to: 0
 15096                           
 15097                           ; BSR set to: 0
 15098  001BD6  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15099  001BD8  B4D8               	btfsc	status,2,c
 15100  001BDA  D00D               	goto	l2743
 15101                           
 15102                           ; BSR set to: 0
 15103  001BDC  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15104  001BDE  A4D8               	btfss	status,2,c
 15105  001BE0  D008               	goto	l2744
 15106                           
 15107                           ; BSR set to: 0
 15108  001BE2  0E00               	movlw	0
 15109  001BE4  6F8D               	movwf	___fldiv@b& (0+255),b
 15110  001BE6  0E00               	movlw	0
 15111  001BE8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15112  001BEA  0E00               	movlw	0
 15113  001BEC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15114  001BEE  0E00               	movlw	0
 15115  001BF0  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15116  001BF2                     l2744:
 15117                           
 15118                           ; BSR set to: 0
 15119                           
 15120                           ; BSR set to: 0
 15121  001BF2  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15122  001BF4  D006               	goto	L8
 15123  001BF6                     l2743:
 15124                           
 15125                           ; BSR set to: 0
 15126                           
 15127                           ; BSR set to: 0
 15128  001BF6  0E00               	movlw	0
 15129  001BF8  6F8D               	movwf	___fldiv@b& (0+255),b
 15130  001BFA  0E00               	movlw	0
 15131  001BFC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15132  001BFE  0E00               	movlw	0
 15133  001C00  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15134  001C02                     L8:
 15135  001C02  0E00               	movlw	0
 15136  001C04  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15137                           
 15138                           ; BSR set to: 0
 15139                           
 15140                           ; BSR set to: 0
 15141  001C06  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15142  001C08  0B80               	andlw	128
 15143  001C0A  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15144                           
 15145                           ; BSR set to: 0
 15146  001C0C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15147  001C0E  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15148  001C10  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151  001C12  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15152                           
 15153                           ; BSR set to: 0
 15154  001C14  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15155                           
 15156                           ; BSR set to: 0
 15157                           
 15158                           ; BSR set to: 0
 15159  001C16  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15160  001C18  B4D8               	btfsc	status,2,c
 15161  001C1A  D00D               	goto	l2747
 15162                           
 15163                           ; BSR set to: 0
 15164  001C1C  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15165  001C1E  A4D8               	btfss	status,2,c
 15166  001C20  D008               	goto	l2748
 15167                           
 15168                           ; BSR set to: 0
 15169  001C22  0E00               	movlw	0
 15170  001C24  6F91               	movwf	___fldiv@a& (0+255),b
 15171  001C26  0E00               	movlw	0
 15172  001C28  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15173  001C2A  0E00               	movlw	0
 15174  001C2C  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15175  001C2E  0E00               	movlw	0
 15176  001C30  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15177  001C32                     l2748:
 15178                           
 15179                           ; BSR set to: 0
 15180                           
 15181                           ; BSR set to: 0
 15182  001C32  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15183  001C34  D006               	goto	L9
 15184  001C36                     l2747:
 15185                           
 15186                           ; BSR set to: 0
 15187                           
 15188                           ; BSR set to: 0
 15189  001C36  0E00               	movlw	0
 15190  001C38  6F91               	movwf	___fldiv@a& (0+255),b
 15191  001C3A  0E00               	movlw	0
 15192  001C3C  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15193  001C3E  0E00               	movlw	0
 15194  001C40  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15195  001C42                     L9:
 15196  001C42  0E00               	movlw	0
 15197  001C44  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15198                           
 15199                           ; BSR set to: 0
 15200                           
 15201                           ; BSR set to: 0
 15202  001C46  5191               	movf	___fldiv@a& (0+255),w,b
 15203  001C48  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15204  001C4A  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15205  001C4C  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15206  001C4E  A4D8               	btfss	status,2,c
 15207  001C50  D015               	goto	l2750
 15208                           
 15209                           ; BSR set to: 0
 15210  001C52  0E00               	movlw	0
 15211  001C54  6F8D               	movwf	___fldiv@b& (0+255),b
 15212  001C56  0E00               	movlw	0
 15213  001C58  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15214  001C5A  0E00               	movlw	0
 15215  001C5C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15216  001C5E  0E00               	movlw	0
 15217  001C60  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15218                           
 15219                           ; BSR set to: 0
 15220  001C62  0E80               	movlw	128
 15221  001C64  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15222  001C66  0E7F               	movlw	127
 15223  001C68  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15224                           
 15225                           ; BSR set to: 0
 15226  001C6A  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15227  001C6E  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15228  001C72  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15229  001C76  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15230                           
 15231                           ; BSR set to: 0
 15232  001C7A  0012               	return	
 15233  001C7C                     l2750:
 15234                           
 15235                           ; BSR set to: 0
 15236                           
 15237                           ; BSR set to: 0
 15238  001C7C  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15239  001C7E  A4D8               	btfss	status,2,c
 15240  001C80  D011               	goto	l2752
 15241                           
 15242                           ; BSR set to: 0
 15243  001C82  0E00               	movlw	0
 15244  001C84  6F8D               	movwf	___fldiv@b& (0+255),b
 15245  001C86  0E00               	movlw	0
 15246  001C88  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15247  001C8A  0E00               	movlw	0
 15248  001C8C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15249  001C8E  0E00               	movlw	0
 15250  001C90  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15251                           
 15252                           ; BSR set to: 0
 15253  001C92  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15254  001C96  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15255  001C9A  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15256  001C9E  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15257                           
 15258                           ; BSR set to: 0
 15259  001CA2  0012               	return	
 15260  001CA4                     l2752:
 15261                           
 15262                           ; BSR set to: 0
 15263                           
 15264                           ; BSR set to: 0
 15265  001CA4  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15266  001CA6  6F95               	movwf	??___fldiv& (0+255),b
 15267  001CA8  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15268  001CAA  1F95               	comf	??___fldiv& (0+255),f,b
 15269  001CAC  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15270  001CAE  4B95               	infsnz	??___fldiv& (0+255),f,b
 15271  001CB0  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15272  001CB2  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15273  001CB4  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15274  001CB6  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15275  001CB8  5195               	movf	??___fldiv& (0+255),w,b
 15276  001CBA  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15277  001CBC  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15278  001CBE  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15279  001CC0  0E7F               	movlw	127
 15280  001CC2  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15281  001CC4  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15282  001CC6  0E00               	movlw	0
 15283  001CC8  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15284  001CCA  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15285                           
 15286                           ; BSR set to: 0
 15287  001CCC  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15288  001CD0  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15289  001CD4  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15290  001CD8  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15291                           
 15292                           ; BSR set to: 0
 15293  001CDC  0E00               	movlw	0
 15294  001CDE  6F8D               	movwf	___fldiv@b& (0+255),b
 15295  001CE0  0E00               	movlw	0
 15296  001CE2  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15297  001CE4  0E00               	movlw	0
 15298  001CE6  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15299  001CE8  0E00               	movlw	0
 15300  001CEA  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15301                           
 15302                           ; BSR set to: 0
 15303  001CEC  0E00               	movlw	0
 15304  001CEE  6FA0               	movwf	___fldiv@grs& (0+255),b
 15305  001CF0  0E00               	movlw	0
 15306  001CF2  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15307  001CF4  0E00               	movlw	0
 15308  001CF6  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15309  001CF8  0E00               	movlw	0
 15310  001CFA  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15311                           
 15312                           ; BSR set to: 0
 15313  001CFC  0E00               	movlw	0
 15314  001CFE  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15315  001D00  D028               	goto	l2753
 15316  001D02                     
 15317                           ; BSR set to: 0
 15318                           
 15319                           ; BSR set to: 0
 15320  001D02  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15321  001D04  B4D8               	btfsc	status,2,c
 15322  001D06  D011               	goto	l2755
 15323                           
 15324                           ; BSR set to: 0
 15325  001D08  90D8               	bcf	status,0,c
 15326  001D0A  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15327  001D0C  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15328  001D0E  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15329  001D10  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15330  001D12  90D8               	bcf	status,0,c
 15331  001D14  378D               	rlcf	___fldiv@b& (0+255),f,b
 15332  001D16  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15333  001D18  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15334  001D1A  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15335                           
 15336                           ; BSR set to: 0
 15337  001D1C  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15338                           
 15339                           ; BSR set to: 0
 15340  001D1E  818D               	bsf	___fldiv@b& (0+255),0,b
 15341                           
 15342                           ; BSR set to: 0
 15343  001D20  90D8               	bcf	status,0,c
 15344  001D22  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15345  001D24  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15346  001D26  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15347  001D28  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15348  001D2A                     l2755:
 15349                           
 15350                           ; BSR set to: 0
 15351                           
 15352                           ; BSR set to: 0
 15353  001D2A  5191               	movf	___fldiv@a& (0+255),w,b
 15354  001D2C  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15355  001D2E  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15356  001D30  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15357  001D32  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15358  001D34  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15359  001D36  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15360  001D38  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15361  001D3A  A0D8               	btfss	status,0,c
 15362  001D3C  D009               	goto	l2757
 15363                           
 15364                           ; BSR set to: 0
 15365  001D3E  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15366                           
 15367                           ; BSR set to: 0
 15368  001D40  5191               	movf	___fldiv@a& (0+255),w,b
 15369  001D42  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15370  001D44  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15371  001D46  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15372  001D48  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15373  001D4A  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15374  001D4C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15375  001D4E  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15376  001D50                     l2757:
 15377                           
 15378                           ; BSR set to: 0
 15379                           
 15380                           ; BSR set to: 0
 15381  001D50  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15382  001D52                     l2753:
 15383                           
 15384                           ; BSR set to: 0
 15385  001D52  0E19               	movlw	25
 15386  001D54  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15387  001D56  D7D5               	goto	l2754
 15388                           
 15389                           ; BSR set to: 0
 15390                           
 15391                           ; BSR set to: 0
 15392  001D58  519A               	movf	___fldiv@rem& (0+255),w,b
 15393  001D5A  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15394  001D5C  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15395  001D5E  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15396  001D60  B4D8               	btfsc	status,2,c
 15397  001D62  D011               	goto	l2760
 15398                           
 15399                           ; BSR set to: 0
 15400  001D64  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15401                           
 15402                           ; BSR set to: 0
 15403  001D66  D00F               	goto	l2760
 15404  001D68                     
 15405                           ; BSR set to: 0
 15406                           
 15407                           ; BSR set to: 0
 15408  001D68  90D8               	bcf	status,0,c
 15409  001D6A  378D               	rlcf	___fldiv@b& (0+255),f,b
 15410  001D6C  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15411  001D6E  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15412  001D70  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15413                           
 15414                           ; BSR set to: 0
 15415  001D72  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15416                           
 15417                           ; BSR set to: 0
 15418  001D74  818D               	bsf	___fldiv@b& (0+255),0,b
 15419                           
 15420                           ; BSR set to: 0
 15421  001D76  90D8               	bcf	status,0,c
 15422  001D78  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15423  001D7A  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15424  001D7C  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15425  001D7E  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15426  001D80  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15427  001D82  A0D8               	btfss	status,0,c
 15428  001D84  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15429  001D86                     l2760:
 15430                           
 15431                           ; BSR set to: 0
 15432                           
 15433                           ; BSR set to: 0
 15434  001D86  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15435  001D88  D7EF               	goto	l2761
 15436                           
 15437                           ; BSR set to: 0
 15438                           
 15439                           ; BSR set to: 0
 15440  001D8A  0E00               	movlw	0
 15441  001D8C  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15442                           
 15443                           ; BSR set to: 0
 15444  001D8E  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15445  001D90  D016               	goto	l2767
 15446                           
 15447                           ; BSR set to: 0
 15448  001D92  0EFF               	movlw	255
 15449  001D94  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15450  001D96  6F95               	movwf	??___fldiv& (0+255),b
 15451  001D98  0EFF               	movlw	255
 15452  001D9A  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15453  001D9C  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15454  001D9E  0EFF               	movlw	255
 15455  001DA0  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15456  001DA2  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15457  001DA4  0E7F               	movlw	127
 15458  001DA6  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15459  001DA8  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15460  001DAA  5195               	movf	??___fldiv& (0+255),w,b
 15461  001DAC  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15462  001DAE  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15463  001DB0  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15464  001DB2  A4D8               	btfss	status,2,c
 15465  001DB4  D002               	goto	u7330
 15466                           
 15467                           ; BSR set to: 0
 15468                           
 15469                           ; BSR set to: 0
 15470  001DB6  A18D               	btfss	___fldiv@b& (0+255),0,b
 15471  001DB8  D002               	goto	l2767
 15472  001DBA                     u7330:
 15473                           
 15474                           ; BSR set to: 0
 15475  001DBA  0E01               	movlw	1
 15476  001DBC  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15477  001DBE                     l2767:
 15478                           
 15479                           ; BSR set to: 0
 15480                           
 15481                           ; BSR set to: 0
 15482                           
 15483                           ; BSR set to: 0
 15484  001DBE  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15485  001DC0  B4D8               	btfsc	status,2,c
 15486  001DC2  D01F               	goto	l2769
 15487                           
 15488                           ; BSR set to: 0
 15489  001DC4  0E01               	movlw	1
 15490  001DC6  278D               	addwf	___fldiv@b& (0+255),f,b
 15491  001DC8  0E00               	movlw	0
 15492  001DCA  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15493  001DCC  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15494  001DCE  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15495                           
 15496                           ; BSR set to: 0
 15497  001DD0  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 15498  001DD2  D017               	goto	l2769
 15499                           
 15500                           ; BSR set to: 0
 15501  001DD4  C08D  F095         	movff	___fldiv@b,??___fldiv
 15502  001DD8  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 15503  001DDC  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 15504  001DE0  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 15505  001DE4  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 15506  001DE6  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 15507  001DE8  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 15508  001DEA  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 15509  001DEC  3395               	rrcf	??___fldiv& (0+255),f,b
 15510  001DEE  C095  F08D         	movff	??___fldiv,___fldiv@b
 15511  001DF2  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 15512  001DF6  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 15513  001DFA  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 15514                           
 15515                           ; BSR set to: 0
 15516  001DFE  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15517  001E00  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15518  001E02                     l2769:
 15519                           
 15520                           ; BSR set to: 0
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525  001E02  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15526  001E04  D010               	goto	l2770
 15527  001E06  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15528  001E08  E103               	bnz	u7360
 15529  001E0A  299E               	incf	___fldiv@new_exp& (0+255),w,b
 15530  001E0C  A0D8               	btfss	status,0,c
 15531  001E0E  D00B               	goto	l2770
 15532  001E10                     u7360:
 15533                           
 15534                           ; BSR set to: 0
 15535  001E10  0E00               	movlw	0
 15536  001E12  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15537  001E14  699E               	setf	___fldiv@new_exp& (0+255),b
 15538  001E16  0E00               	movlw	0
 15539  001E18  6F8D               	movwf	___fldiv@b& (0+255),b
 15540  001E1A  0E00               	movlw	0
 15541  001E1C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15542  001E1E  0E00               	movlw	0
 15543  001E20  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15544  001E22  0E00               	movlw	0
 15545  001E24  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15546  001E26                     l2770:
 15547                           
 15548                           ; BSR set to: 0
 15549                           
 15550                           ; BSR set to: 0
 15551  001E26  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15552  001E28  D005               	goto	u7370
 15553  001E2A  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15554  001E2C  E111               	bnz	l9136
 15555  001E2E  059E               	decf	___fldiv@new_exp& (0+255),w,b
 15556  001E30  B0D8               	btfsc	status,0,c
 15557  001E32  D00E               	goto	l2771
 15558  001E34                     u7370:
 15559                           
 15560                           ; BSR set to: 0
 15561  001E34  0E00               	movlw	0
 15562  001E36  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15563  001E38  0E00               	movlw	0
 15564  001E3A  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15565  001E3C  0E00               	movlw	0
 15566  001E3E  6F8D               	movwf	___fldiv@b& (0+255),b
 15567  001E40  0E00               	movlw	0
 15568  001E42  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15569  001E44  0E00               	movlw	0
 15570  001E46  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15571  001E48  0E00               	movlw	0
 15572  001E4A  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15573  001E4C  0E00               	movlw	0
 15574  001E4E  6F99               	movwf	___fldiv@sign& (0+255),b
 15575  001E50                     l2771:
 15576  001E50                     l9136:
 15577                           
 15578                           ; BSR set to: 0
 15579  001E50  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 15580                           
 15581                           ; BSR set to: 0
 15582  001E54  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 15583  001E56  D002               	goto	l2772
 15584                           
 15585                           ; BSR set to: 0
 15586  001E58  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15587  001E5A  D001               	goto	l2773
 15588  001E5C                     l2772:
 15589                           
 15590                           ; BSR set to: 0
 15591                           
 15592                           ; BSR set to: 0
 15593  001E5C  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 15594  001E5E                     l2773:
 15595                           
 15596                           ; BSR set to: 0
 15597                           
 15598                           ; BSR set to: 0
 15599  001E5E  90D8               	bcf	status,0,c
 15600  001E60  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 15601  001E62  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15602                           
 15603                           ; BSR set to: 0
 15604  001E64  5199               	movf	___fldiv@sign& (0+255),w,b
 15605  001E66  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15606                           
 15607                           ; BSR set to: 0
 15608  001E68  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15609  001E6C  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15610  001E70  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15611  001E74  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15612  001E78  0012               	return	
 15613  001E7A                     __end_of___fldiv:
 15614                           	opt stack 0
 15615                           tblptru	equ	0xFF8
 15616                           tblptrh	equ	0xFF7
 15617                           tblptrl	equ	0xFF6
 15618                           tablat	equ	0xFF5
 15619                           prodh	equ	0xFF4
 15620                           prodl	equ	0xFF3
 15621                           intcon	equ	0xFF2
 15622                           intcon3	equ	0xFF0
 15623                           postinc0	equ	0xFEE
 15624                           wreg	equ	0xFE8
 15625                           indf1	equ	0xFE7
 15626                           postdec1	equ	0xFE5
 15627                           fsr1h	equ	0xFE2
 15628                           fsr1l	equ	0xFE1
 15629                           indf2	equ	0xFDF
 15630                           fsr2h	equ	0xFDA
 15631                           fsr2l	equ	0xFD9
 15632                           status	equ	0xFD8
 15633                           
 15634 ;; *************** function ___fladd *****************
 15635 ;; Defined at:
 15636 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;  b               4    0[BANK0 ] unsigned char 
 15639 ;;  a               4    4[BANK0 ] unsigned char 
 15640 ;; Auto vars:     Size  Location     Type
 15641 ;;  grs             1   19[BANK0 ] unsigned char 
 15642 ;;  bexp            1   18[BANK0 ] unsigned char 
 15643 ;;  aexp            1   17[BANK0 ] unsigned char 
 15644 ;;  signs           1   16[BANK0 ] unsigned char 
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  4    0[BANK0 ] unsigned char 
 15647 ;; Registers used:
 15648 ;;		wreg, status,2, status,0
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/0
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15654 ;;      Params:         0       8       0       0       0       0       0       0       0
 15655 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15656 ;;      Temps:          0       8       0       0       0       0       0       0       0
 15657 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15658 ;;Total ram usage:       20 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; Hardware stack levels required when called:   11
 15661 ;; This function calls:
 15662 ;;		Nothing
 15663 ;; This function is called by:
 15664 ;;		_ADC_TempConversion
 15665 ;; This function uses a non-reentrant model
 15666 ;;
 15667                           
 15668                           	psect	text50
 15669  001886                     __ptext50:
 15670                           	opt stack 0
 15671  001886                     ___fladd:
 15672                           	opt stack 16
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;incstack = 0
 15676  001886  0100               	movlb	0	; () banked
 15677  001888  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15678  00188A  0B80               	andlw	128
 15679  00188C  6F70               	movwf	___fladd@signs& (0+255),b
 15680  00188E  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15681  001890  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 15682  001892  6F72               	movwf	___fladd@bexp& (0+255),b
 15683                           
 15684                           ; BSR set to: 0
 15685  001894  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 15686                           
 15687                           ; BSR set to: 0
 15688  001896  8172               	bsf	___fladd@bexp& (0+255),0,b
 15689                           
 15690                           ; BSR set to: 0
 15691                           
 15692                           ; BSR set to: 0
 15693  001898  5172               	movf	___fladd@bexp& (0+255),w,b
 15694  00189A  B4D8               	btfsc	status,2,c
 15695  00189C  D00D               	goto	l2686
 15696                           
 15697                           ; BSR set to: 0
 15698  00189E  2972               	incf	___fladd@bexp& (0+255),w,b
 15699  0018A0  A4D8               	btfss	status,2,c
 15700  0018A2  D008               	goto	l2687
 15701                           
 15702                           ; BSR set to: 0
 15703  0018A4  0E00               	movlw	0
 15704  0018A6  6F60               	movwf	___fladd@b& (0+255),b
 15705  0018A8  0E00               	movlw	0
 15706  0018AA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15707  0018AC  0E00               	movlw	0
 15708  0018AE  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15709  0018B0  0E00               	movlw	0
 15710  0018B2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15711  0018B4                     l2687:
 15712                           
 15713                           ; BSR set to: 0
 15714                           
 15715                           ; BSR set to: 0
 15716  0018B4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15717  0018B6  D006               	goto	L10
 15718  0018B8                     l2686:
 15719                           
 15720                           ; BSR set to: 0
 15721                           
 15722                           ; BSR set to: 0
 15723  0018B8  0E00               	movlw	0
 15724  0018BA  6F60               	movwf	___fladd@b& (0+255),b
 15725  0018BC  0E00               	movlw	0
 15726  0018BE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15727  0018C0  0E00               	movlw	0
 15728  0018C2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15729  0018C4                     L10:
 15730  0018C4  0E00               	movlw	0
 15731  0018C6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15732                           
 15733                           ; BSR set to: 0
 15734                           
 15735                           ; BSR set to: 0
 15736  0018C8  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15737  0018CA  0B80               	andlw	128
 15738  0018CC  6F71               	movwf	___fladd@aexp& (0+255),b
 15739                           
 15740                           ; BSR set to: 0
 15741  0018CE  5170               	movf	___fladd@signs& (0+255),w,b
 15742  0018D0  1971               	xorwf	___fladd@aexp& (0+255),w,b
 15743  0018D2  A4D8               	btfss	status,2,c
 15744                           
 15745                           ; BSR set to: 0
 15746  0018D4  8D70               	bsf	___fladd@signs& (0+255),6,b
 15747                           
 15748                           ; BSR set to: 0
 15749                           
 15750                           ; BSR set to: 0
 15751  0018D6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15752  0018D8  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 15753  0018DA  6F71               	movwf	___fladd@aexp& (0+255),b
 15754                           
 15755                           ; BSR set to: 0
 15756  0018DC  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 15757                           
 15758                           ; BSR set to: 0
 15759  0018DE  8171               	bsf	___fladd@aexp& (0+255),0,b
 15760                           
 15761                           ; BSR set to: 0
 15762                           
 15763                           ; BSR set to: 0
 15764  0018E0  5171               	movf	___fladd@aexp& (0+255),w,b
 15765  0018E2  B4D8               	btfsc	status,2,c
 15766  0018E4  D00D               	goto	l2691
 15767                           
 15768                           ; BSR set to: 0
 15769  0018E6  2971               	incf	___fladd@aexp& (0+255),w,b
 15770  0018E8  A4D8               	btfss	status,2,c
 15771  0018EA  D008               	goto	l2692
 15772                           
 15773                           ; BSR set to: 0
 15774  0018EC  0E00               	movlw	0
 15775  0018EE  6F64               	movwf	___fladd@a& (0+255),b
 15776  0018F0  0E00               	movlw	0
 15777  0018F2  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15778  0018F4  0E00               	movlw	0
 15779  0018F6  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15780  0018F8  0E00               	movlw	0
 15781  0018FA  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15782  0018FC                     l2692:
 15783                           
 15784                           ; BSR set to: 0
 15785                           
 15786                           ; BSR set to: 0
 15787  0018FC  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 15788  0018FE  D006               	goto	L11
 15789  001900                     l2691:
 15790                           
 15791                           ; BSR set to: 0
 15792                           
 15793                           ; BSR set to: 0
 15794  001900  0E00               	movlw	0
 15795  001902  6F64               	movwf	___fladd@a& (0+255),b
 15796  001904  0E00               	movlw	0
 15797  001906  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15798  001908  0E00               	movlw	0
 15799  00190A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15800  00190C                     L11:
 15801  00190C  0E00               	movlw	0
 15802  00190E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15803                           
 15804                           ; BSR set to: 0
 15805                           
 15806                           ; BSR set to: 0
 15807  001910  5172               	movf	___fladd@bexp& (0+255),w,b
 15808  001912  5D71               	subwf	___fladd@aexp& (0+255),w,b
 15809  001914  B0D8               	btfsc	status,0,c
 15810  001916  D022               	goto	l2694
 15811                           
 15812                           ; BSR set to: 0
 15813  001918  AD70               	btfss	___fladd@signs& (0+255),6,b
 15814  00191A  D002               	goto	l2695
 15815                           
 15816                           ; BSR set to: 0
 15817  00191C  0E80               	movlw	128
 15818  00191E  1B70               	xorwf	___fladd@signs& (0+255),f,b
 15819  001920                     l2695:
 15820                           
 15821                           ; BSR set to: 0
 15822                           
 15823                           ; BSR set to: 0
 15824  001920  C072  F073         	movff	___fladd@bexp,___fladd@grs
 15825                           
 15826                           ; BSR set to: 0
 15827  001924  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15828                           
 15829                           ; BSR set to: 0
 15830  001928  C073  F071         	movff	___fladd@grs,___fladd@aexp
 15831                           
 15832                           ; BSR set to: 0
 15833  00192C  C060  F073         	movff	___fladd@b,___fladd@grs
 15834                           
 15835                           ; BSR set to: 0
 15836  001930  C064  F060         	movff	___fladd@a,___fladd@b
 15837                           
 15838                           ; BSR set to: 0
 15839  001934  C073  F064         	movff	___fladd@grs,___fladd@a
 15840                           
 15841                           ; BSR set to: 0
 15842  001938  C061  F073         	movff	___fladd@b+1,___fladd@grs
 15843                           
 15844                           ; BSR set to: 0
 15845  00193C  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 15846                           
 15847                           ; BSR set to: 0
 15848  001940  C073  F065         	movff	___fladd@grs,___fladd@a+1
 15849                           
 15850                           ; BSR set to: 0
 15851  001944  C062  F073         	movff	___fladd@b+2,___fladd@grs
 15852                           
 15853                           ; BSR set to: 0
 15854  001948  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 15855                           
 15856                           ; BSR set to: 0
 15857  00194C  C073  F066         	movff	___fladd@grs,___fladd@a+2
 15858                           
 15859                           ; BSR set to: 0
 15860  001950  C063  F073         	movff	___fladd@b+3,___fladd@grs
 15861                           
 15862                           ; BSR set to: 0
 15863  001954  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 15864                           
 15865                           ; BSR set to: 0
 15866  001958  C073  F067         	movff	___fladd@grs,___fladd@a+3
 15867  00195C                     l2694:
 15868                           
 15869                           ; BSR set to: 0
 15870                           
 15871                           ; BSR set to: 0
 15872  00195C  0E00               	movlw	0
 15873  00195E  6F73               	movwf	___fladd@grs& (0+255),b
 15874                           
 15875                           ; BSR set to: 0
 15876  001960  5172               	movf	___fladd@bexp& (0+255),w,b
 15877  001962  6F68               	movwf	??___fladd& (0+255),b
 15878  001964  6B69               	clrf	(??___fladd+1)& (0+255),b
 15879  001966  1F68               	comf	??___fladd& (0+255),f,b
 15880  001968  1F69               	comf	(??___fladd+1)& (0+255),f,b
 15881  00196A  4B68               	infsnz	??___fladd& (0+255),f,b
 15882  00196C  2B69               	incf	(??___fladd+1)& (0+255),f,b
 15883  00196E  5171               	movf	___fladd@aexp& (0+255),w,b
 15884  001970  6F6A               	movwf	(??___fladd+2)& (0+255),b
 15885  001972  6B6B               	clrf	(??___fladd+3)& (0+255),b
 15886  001974  5168               	movf	??___fladd& (0+255),w,b
 15887  001976  276A               	addwf	(??___fladd+2)& (0+255),f,b
 15888  001978  5169               	movf	(??___fladd+1)& (0+255),w,b
 15889  00197A  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 15890  00197C  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 15891  00197E  D02C               	goto	l2698
 15892  001980  516B               	movf	(??___fladd+3)& (0+255),w,b
 15893  001982  E104               	bnz	u6860
 15894  001984  0E1A               	movlw	26
 15895  001986  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 15896  001988  A0D8               	btfss	status,0,c
 15897  00198A  D026               	goto	l2698
 15898  00198C                     u6860:
 15899                           
 15900                           ; BSR set to: 0
 15901  00198C  5160               	movf	___fladd@b& (0+255),w,b
 15902  00198E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 15903  001990  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 15904  001992  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 15905  001994  B4D8               	btfsc	status,2,c
 15906  001996  D002               	goto	u6870
 15907  001998  0E01               	movlw	1
 15908  00199A  D001               	goto	u6880
 15909  00199C                     u6870:
 15910  00199C  0E00               	movlw	0
 15911  00199E                     u6880:
 15912  00199E  6F73               	movwf	___fladd@grs& (0+255),b
 15913                           
 15914                           ; BSR set to: 0
 15915  0019A0  0E00               	movlw	0
 15916  0019A2  6F60               	movwf	___fladd@b& (0+255),b
 15917  0019A4  0E00               	movlw	0
 15918  0019A6  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15919  0019A8  0E00               	movlw	0
 15920  0019AA  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15921  0019AC  0E00               	movlw	0
 15922  0019AE  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15923                           
 15924                           ; BSR set to: 0
 15925  0019B0  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15926  0019B4  D015               	goto	u6910
 15927  0019B6                     l2699:
 15928                           
 15929                           ; BSR set to: 0
 15930  0019B6  A173               	btfss	___fladd@grs& (0+255),0,b
 15931  0019B8  D005               	goto	l2700
 15932                           
 15933                           ; BSR set to: 0
 15934  0019BA  90D8               	bcf	status,0,c
 15935  0019BC  3173               	rrcf	___fladd@grs& (0+255),w,b
 15936  0019BE  0901               	iorlw	1
 15937  0019C0  6F73               	movwf	___fladd@grs& (0+255),b
 15938  0019C2  D002               	goto	l2701
 15939  0019C4                     l2700:
 15940                           
 15941                           ; BSR set to: 0
 15942                           
 15943                           ; BSR set to: 0
 15944  0019C4  90D8               	bcf	status,0,c
 15945  0019C6  3373               	rrcf	___fladd@grs& (0+255),f,b
 15946  0019C8                     l2701:
 15947                           
 15948                           ; BSR set to: 0
 15949                           
 15950                           ; BSR set to: 0
 15951  0019C8  B160               	btfsc	___fladd@b& (0+255),0,b
 15952                           
 15953                           ; BSR set to: 0
 15954  0019CA  8F73               	bsf	___fladd@grs& (0+255),7,b
 15955                           
 15956                           ; BSR set to: 0
 15957                           
 15958                           ; BSR set to: 0
 15959  0019CC  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15960  0019CE  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15961  0019D0  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15962  0019D2  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15963  0019D4  3360               	rrcf	___fladd@b& (0+255),f,b
 15964                           
 15965                           ; BSR set to: 0
 15966  0019D6  2B72               	incf	___fladd@bexp& (0+255),f,b
 15967  0019D8                     l2698:
 15968                           
 15969                           ; BSR set to: 0
 15970  0019D8  5171               	movf	___fladd@aexp& (0+255),w,b
 15971  0019DA  5D72               	subwf	___fladd@bexp& (0+255),w,b
 15972  0019DC  A0D8               	btfss	status,0,c
 15973  0019DE  D7EB               	goto	l2699
 15974  0019E0                     u6910:
 15975                           
 15976                           ; BSR set to: 0
 15977                           
 15978                           ; BSR set to: 0
 15979  0019E0  BD70               	btfsc	___fladd@signs& (0+255),6,b
 15980  0019E2  D029               	goto	l2704
 15981                           
 15982                           ; BSR set to: 0
 15983  0019E4  5172               	movf	___fladd@bexp& (0+255),w,b
 15984  0019E6  A4D8               	btfss	status,2,c
 15985  0019E8  D009               	goto	l2705
 15986                           
 15987                           ; BSR set to: 0
 15988  0019EA  0E00               	movlw	0
 15989  0019EC  6F60               	movwf	?___fladd& (0+255),b
 15990  0019EE  0E00               	movlw	0
 15991  0019F0  6F61               	movwf	(?___fladd+1)& (0+255),b
 15992  0019F2  0E00               	movlw	0
 15993  0019F4  6F62               	movwf	(?___fladd+2)& (0+255),b
 15994  0019F6  0E00               	movlw	0
 15995  0019F8  6F63               	movwf	(?___fladd+3)& (0+255),b
 15996                           
 15997                           ; BSR set to: 0
 15998  0019FA  0012               	return	
 15999  0019FC                     l2705:
 16000                           
 16001                           ; BSR set to: 0
 16002                           
 16003                           ; BSR set to: 0
 16004  0019FC  5164               	movf	___fladd@a& (0+255),w,b
 16005  0019FE  2760               	addwf	___fladd@b& (0+255),f,b
 16006  001A00  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16007  001A02  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16008  001A04  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16009  001A06  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16010  001A08  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16011  001A0A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16012                           
 16013                           ; BSR set to: 0
 16014  001A0C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16015  001A0E  D083               	goto	u7040
 16016                           
 16017                           ; BSR set to: 0
 16018  001A10  A173               	btfss	___fladd@grs& (0+255),0,b
 16019  001A12  D006               	goto	l2708
 16020                           
 16021                           ; BSR set to: 0
 16022  001A14  90D8               	bcf	status,0,c
 16023  001A16  3373               	rrcf	___fladd@grs& (0+255),f,b
 16024  001A18  5173               	movf	___fladd@grs& (0+255),w,b
 16025  001A1A  0901               	iorlw	1
 16026  001A1C  6F73               	movwf	___fladd@grs& (0+255),b
 16027  001A1E  D002               	goto	l2709
 16028  001A20                     l2708:
 16029                           
 16030                           ; BSR set to: 0
 16031                           
 16032                           ; BSR set to: 0
 16033  001A20  90D8               	bcf	status,0,c
 16034  001A22  3373               	rrcf	___fladd@grs& (0+255),f,b
 16035  001A24                     l2709:
 16036                           
 16037                           ; BSR set to: 0
 16038                           
 16039                           ; BSR set to: 0
 16040  001A24  B160               	btfsc	___fladd@b& (0+255),0,b
 16041                           
 16042                           ; BSR set to: 0
 16043  001A26  8F73               	bsf	___fladd@grs& (0+255),7,b
 16044                           
 16045                           ; BSR set to: 0
 16046                           
 16047                           ; BSR set to: 0
 16048  001A28  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16049  001A2A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16050  001A2C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16051  001A2E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16052  001A30  3360               	rrcf	___fladd@b& (0+255),f,b
 16053                           
 16054                           ; BSR set to: 0
 16055  001A32  2B72               	incf	___fladd@bexp& (0+255),f,b
 16056                           
 16057                           ; BSR set to: 0
 16058  001A34  D070               	goto	u7040
 16059  001A36                     l2704:
 16060                           
 16061                           ; BSR set to: 0
 16062                           
 16063                           ; BSR set to: 0
 16064  001A36  5164               	movf	___fladd@a& (0+255),w,b
 16065  001A38  5D60               	subwf	___fladd@b& (0+255),w,b
 16066  001A3A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16067  001A3C  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16068  001A3E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16069  001A40  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16070  001A42  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16071  001A44  0A80               	xorlw	128
 16072  001A46  6F68               	movwf	??___fladd& (0+255),b
 16073  001A48  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16074  001A4A  0A80               	xorlw	128
 16075  001A4C  5968               	subwfb	??___fladd& (0+255),w,b
 16076  001A4E  B0D8               	btfsc	status,0,c
 16077  001A50  D036               	goto	l2712
 16078                           
 16079                           ; BSR set to: 0
 16080  001A52  C060  F068         	movff	___fladd@b,??___fladd
 16081  001A56  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16082  001A5A  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16083  001A5E  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16084  001A62  1F68               	comf	??___fladd& (0+255),f,b
 16085  001A64  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16086  001A66  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16087  001A68  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16088  001A6A  2B68               	incf	??___fladd& (0+255),f,b
 16089  001A6C  0E00               	movlw	0
 16090  001A6E  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16091  001A70  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16092  001A72  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16093  001A74  5164               	movf	___fladd@a& (0+255),w,b
 16094  001A76  2568               	addwf	??___fladd& (0+255),w,b
 16095  001A78  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16096  001A7A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16097  001A7C  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16098  001A7E  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16099  001A80  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16100  001A82  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16101  001A84  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16102  001A86  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16103  001A88  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16104  001A8A  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16105  001A8C  0EFF               	movlw	255
 16106  001A8E  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16107  001A90  6F60               	movwf	___fladd@b& (0+255),b
 16108  001A92  0EFF               	movlw	255
 16109  001A94  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16110  001A96  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16111  001A98  0EFF               	movlw	255
 16112  001A9A  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16113  001A9C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16114  001A9E  0EFF               	movlw	255
 16115  001AA0  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16116  001AA2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16117  001AA4  0E80               	movlw	128
 16118  001AA6  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16119                           
 16120                           ; BSR set to: 0
 16121  001AA8  6D73               	negf	___fladd@grs& (0+255),b
 16122                           
 16123                           ; BSR set to: 0
 16124  001AAA  5173               	movf	___fladd@grs& (0+255),w,b
 16125  001AAC  A4D8               	btfss	status,2,c
 16126  001AAE  D00F               	goto	l2714
 16127                           
 16128                           ; BSR set to: 0
 16129  001AB0  0E01               	movlw	1
 16130  001AB2  2760               	addwf	___fladd@b& (0+255),f,b
 16131  001AB4  0E00               	movlw	0
 16132  001AB6  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16133  001AB8  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16134  001ABA  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16135                           
 16136                           ; BSR set to: 0
 16137  001ABC  D008               	goto	l2714
 16138  001ABE                     l2712:
 16139                           
 16140                           ; BSR set to: 0
 16141                           
 16142                           ; BSR set to: 0
 16143  001ABE  5164               	movf	___fladd@a& (0+255),w,b
 16144  001AC0  5F60               	subwf	___fladd@b& (0+255),f,b
 16145  001AC2  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16146  001AC4  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16147  001AC6  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16148  001AC8  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16149  001ACA  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16150  001ACC  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16151  001ACE                     l2714:
 16152                           
 16153                           ; BSR set to: 0
 16154  001ACE  5160               	movf	___fladd@b& (0+255),w,b
 16155  001AD0  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16156  001AD2  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16157  001AD4  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16158  001AD6  A4D8               	btfss	status,2,c
 16159  001AD8  D01C               	goto	l2721
 16160                           
 16161                           ; BSR set to: 0
 16162  001ADA  5173               	movf	___fladd@grs& (0+255),w,b
 16163  001ADC  A4D8               	btfss	status,2,c
 16164  001ADE  D019               	goto	l2721
 16165                           
 16166                           ; BSR set to: 0
 16167  001AE0  0E00               	movlw	0
 16168  001AE2  6F60               	movwf	?___fladd& (0+255),b
 16169  001AE4  0E00               	movlw	0
 16170  001AE6  6F61               	movwf	(?___fladd+1)& (0+255),b
 16171  001AE8  0E00               	movlw	0
 16172  001AEA  6F62               	movwf	(?___fladd+2)& (0+255),b
 16173  001AEC  0E00               	movlw	0
 16174  001AEE  6F63               	movwf	(?___fladd+3)& (0+255),b
 16175                           
 16176                           ; BSR set to: 0
 16177  001AF0  0012               	return	
 16178  001AF2                     
 16179                           ; BSR set to: 0
 16180                           
 16181                           ; BSR set to: 0
 16182  001AF2  90D8               	bcf	status,0,c
 16183  001AF4  3760               	rlcf	___fladd@b& (0+255),f,b
 16184  001AF6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16185  001AF8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16186  001AFA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16187                           
 16188                           ; BSR set to: 0
 16189  001AFC  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16190                           
 16191                           ; BSR set to: 0
 16192  001AFE  8160               	bsf	___fladd@b& (0+255),0,b
 16193                           
 16194                           ; BSR set to: 0
 16195                           
 16196                           ; BSR set to: 0
 16197  001B00  A173               	btfss	___fladd@grs& (0+255),0,b
 16198  001B02  D002               	goto	l2719
 16199                           
 16200                           ; BSR set to: 0
 16201  001B04  80D8               	bsf	status,0,c
 16202  001B06  D001               	goto	L12
 16203  001B08                     l2719:
 16204                           
 16205                           ; BSR set to: 0
 16206                           
 16207                           ; BSR set to: 0
 16208  001B08  90D8               	bcf	status,0,c
 16209  001B0A                     L12:
 16210  001B0A  3773               	rlcf	___fladd@grs& (0+255),f,b
 16211                           
 16212                           ; BSR set to: 0
 16213                           
 16214                           ; BSR set to: 0
 16215  001B0C  5172               	movf	___fladd@bexp& (0+255),w,b
 16216  001B0E  A4D8               	btfss	status,2,c
 16217                           
 16218                           ; BSR set to: 0
 16219  001B10  0772               	decf	___fladd@bexp& (0+255),f,b
 16220  001B12                     l2721:
 16221                           
 16222                           ; BSR set to: 0
 16223                           
 16224                           ; BSR set to: 0
 16225                           
 16226                           ; BSR set to: 0
 16227  001B12  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16228  001B14  D7EE               	goto	l2717
 16229  001B16                     u7040:
 16230                           
 16231                           ; BSR set to: 0
 16232                           
 16233                           ; BSR set to: 0
 16234                           
 16235                           ; BSR set to: 0
 16236  001B16  0E00               	movlw	0
 16237  001B18  6F71               	movwf	___fladd@aexp& (0+255),b
 16238                           
 16239                           ; BSR set to: 0
 16240  001B1A  AF73               	btfss	___fladd@grs& (0+255),7,b
 16241  001B1C  D00A               	goto	l2726
 16242                           
 16243                           ; BSR set to: 0
 16244  001B1E  C073  F068         	movff	___fladd@grs,??___fladd
 16245  001B22  0E7F               	movlw	127
 16246  001B24  1768               	andwf	??___fladd& (0+255),f,b
 16247  001B26  A4D8               	btfss	status,2,c
 16248  001B28  D002               	goto	u7070
 16249                           
 16250                           ; BSR set to: 0
 16251                           
 16252                           ; BSR set to: 0
 16253  001B2A  A160               	btfss	___fladd@b& (0+255),0,b
 16254  001B2C  D002               	goto	l2726
 16255  001B2E                     u7070:
 16256                           
 16257                           ; BSR set to: 0
 16258  001B2E  0E01               	movlw	1
 16259  001B30  6F71               	movwf	___fladd@aexp& (0+255),b
 16260  001B32                     l2726:
 16261                           
 16262                           ; BSR set to: 0
 16263                           
 16264                           ; BSR set to: 0
 16265                           
 16266                           ; BSR set to: 0
 16267  001B32  5171               	movf	___fladd@aexp& (0+255),w,b
 16268  001B34  B4D8               	btfsc	status,2,c
 16269  001B36  D020               	goto	l2729
 16270                           
 16271                           ; BSR set to: 0
 16272  001B38  0E01               	movlw	1
 16273  001B3A  2760               	addwf	___fladd@b& (0+255),f,b
 16274  001B3C  0E00               	movlw	0
 16275  001B3E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16276  001B40  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16277  001B42  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16278                           
 16279                           ; BSR set to: 0
 16280  001B44  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16281  001B46  D018               	goto	l2729
 16282                           
 16283                           ; BSR set to: 0
 16284  001B48  C060  F068         	movff	___fladd@b,??___fladd
 16285  001B4C  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16286  001B50  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16287  001B54  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16288  001B58  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16289  001B5A  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16290  001B5C  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16291  001B5E  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16292  001B60  3368               	rrcf	??___fladd& (0+255),f,b
 16293  001B62  C068  F060         	movff	??___fladd,___fladd@b
 16294  001B66  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16295  001B6A  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16296  001B6E  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16297  001B72  2972               	incf	___fladd@bexp& (0+255),w,b
 16298  001B74  A4D8               	btfss	status,2,c
 16299                           
 16300                           ; BSR set to: 0
 16301  001B76  2B72               	incf	___fladd@bexp& (0+255),f,b
 16302  001B78                     l2729:
 16303                           
 16304                           ; BSR set to: 0
 16305                           
 16306                           ; BSR set to: 0
 16307                           
 16308                           ; BSR set to: 0
 16309                           
 16310                           ; BSR set to: 0
 16311  001B78  2972               	incf	___fladd@bexp& (0+255),w,b
 16312  001B7A  B4D8               	btfsc	status,2,c
 16313  001B7C  D003               	goto	u7120
 16314                           
 16315                           ; BSR set to: 0
 16316  001B7E  5172               	movf	___fladd@bexp& (0+255),w,b
 16317  001B80  A4D8               	btfss	status,2,c
 16318  001B82  D00D               	goto	l2733
 16319  001B84                     u7120:
 16320                           
 16321                           ; BSR set to: 0
 16322                           
 16323                           ; BSR set to: 0
 16324  001B84  0E00               	movlw	0
 16325  001B86  6F60               	movwf	___fladd@b& (0+255),b
 16326  001B88  0E00               	movlw	0
 16327  001B8A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16328  001B8C  0E00               	movlw	0
 16329  001B8E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16330  001B90  0E00               	movlw	0
 16331  001B92  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16332  001B94  5172               	movf	___fladd@bexp& (0+255),w,b
 16333  001B96  A4D8               	btfss	status,2,c
 16334  001B98  D002               	goto	l2733
 16335                           
 16336                           ; BSR set to: 0
 16337  001B9A  0E00               	movlw	0
 16338  001B9C  6F70               	movwf	___fladd@signs& (0+255),b
 16339  001B9E                     l2733:
 16340                           
 16341                           ; BSR set to: 0
 16342                           
 16343                           ; BSR set to: 0
 16344                           
 16345                           ; BSR set to: 0
 16346  001B9E  A172               	btfss	___fladd@bexp& (0+255),0,b
 16347  001BA0  D002               	goto	l2734
 16348                           
 16349                           ; BSR set to: 0
 16350  001BA2  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16351  001BA4  D001               	goto	l2735
 16352  001BA6                     l2734:
 16353                           
 16354                           ; BSR set to: 0
 16355                           
 16356                           ; BSR set to: 0
 16357  001BA6  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16358  001BA8                     l2735:
 16359                           
 16360                           ; BSR set to: 0
 16361                           
 16362                           ; BSR set to: 0
 16363  001BA8  90D8               	bcf	status,0,c
 16364  001BAA  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16365  001BAC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16366                           
 16367                           ; BSR set to: 0
 16368  001BAE  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16369                           
 16370                           ; BSR set to: 0
 16371  001BB0  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16372                           
 16373                           ; BSR set to: 0
 16374                           
 16375                           ; BSR set to: 0
 16376  001BB2  C060  F060         	movff	___fladd@b,?___fladd
 16377  001BB6  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16378  001BBA  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16379  001BBE  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16380  001BC2  0012               	return	
 16381  001BC4                     __end_of___fladd:
 16382                           	opt stack 0
 16383                           tblptru	equ	0xFF8
 16384                           tblptrh	equ	0xFF7
 16385                           tblptrl	equ	0xFF6
 16386                           tablat	equ	0xFF5
 16387                           prodh	equ	0xFF4
 16388                           prodl	equ	0xFF3
 16389                           intcon	equ	0xFF2
 16390                           intcon3	equ	0xFF0
 16391                           postinc0	equ	0xFEE
 16392                           wreg	equ	0xFE8
 16393                           indf1	equ	0xFE7
 16394                           postdec1	equ	0xFE5
 16395                           fsr1h	equ	0xFE2
 16396                           fsr1l	equ	0xFE1
 16397                           indf2	equ	0xFDF
 16398                           fsr2h	equ	0xFDA
 16399                           fsr2l	equ	0xFD9
 16400                           status	equ	0xFD8
 16401                           
 16402 ;; *************** function _moteJoiningProcess *****************
 16403 ;; Defined at:
 16404 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  messageReady    1    wreg     unsigned char 
 16407 ;;  changeStates    1   23[BANK0 ] unsigned char 
 16408 ;;  selectButton    1   24[BANK0 ] unsigned char 
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;  messageReady    1   28[BANK0 ] unsigned char 
 16411 ;;  readDataRate    1   26[BANK0 ] unsigned char 
 16412 ;;  joiningCompl    1   27[BANK0 ] unsigned char 
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  1    wreg      enum E6155
 16415 ;; Registers used:
 16416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16417 ;; Tracked objects:
 16418 ;;		On entry : 0/0
 16419 ;;		On exit  : 0/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16422 ;;      Params:         0       2       0       0       0       0       0       0       0
 16423 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16424 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16425 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16426 ;;Total ram usage:        6 bytes
 16427 ;; Hardware stack levels used:    1
 16428 ;; Hardware stack levels required when called:   16
 16429 ;; This function calls:
 16430 ;;		_DATAEE_WriteByte
 16431 ;;		_moteApp_delayms
 16432 ;;		_oled_clear
 16433 ;;		_oled_putString
 16434 ;;		_sendCommand
 16435 ;;		_strcmp
 16436 ;;		_strncmp
 16437 ;; This function is called by:
 16438 ;;		_moteHandler
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text51
 16443  00100E                     __ptext51:
 16444                           	opt stack 0
 16445  00100E                     _moteJoiningProcess:
 16446                           	opt stack 13
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;incstack = 0
 16450                           ;moteJoiningProcess@messageReady stored from wreg
 16451  00100E  0100               	movlb	0	; () banked
 16452  001010  6F7C               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16453                           
 16454                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 16455  001012  0E00               	movlw	0
 16456  001014  0100               	movlb	0	; () banked
 16457  001016  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16458                           
 16459                           ;MOTEapp.c: 297: switch (activeState)
 16460  001018  D266               	goto	l390
 16461  00101A                     
 16462                           ; BSR set to: 0
 16463                           ;MOTEapp.c: 300: while(1);
 16464  00101A  D7FF               	goto	l391
 16465  00101C                     
 16466                           ;MOTEapp.c: 303: sendCommand("sys reset");
 16467  00101C  0EFC               	movlw	low STR_30
 16468  00101E  0100               	movlb	0	; () banked
 16469  001020  6F61               	movwf	sendCommand@string& (0+255),b
 16470  001022  0E7E               	movlw	high STR_30
 16471  001024  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16472  001026  ECDD  F02A         	call	_sendCommand	;wreg free
 16473  00102A  D13A               	goto	l10470
 16474  00102C                     
 16475                           ; BSR set to: 0
 16476                           ;MOTEapp.c: 307: if (selectButton)
 16477                           
 16478                           ; BSR set to: 0
 16479  00102C  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16480  00102E  B4D8               	btfsc	status,2,c
 16481  001030  D002               	goto	l398
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;MOTEapp.c: 308: {
 16485                           ;MOTEapp.c: 309: activeState = moteComFailure;
 16486  001032  0E0A               	movlw	10
 16487  001034  6FF4               	movwf	_activeState& (0+255),b
 16488  001036                     l398:
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;MOTEapp.c: 310: }
 16492                           ;MOTEapp.c: 311: if ( messageReady )
 16493  001036  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16494  001038  B4D8               	btfsc	status,2,c
 16495  00103A  D279               	goto	l395
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;MOTEapp.c: 312: {
 16499                           ;MOTEapp.c: 313: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16500  00103C  0E64               	movlw	low _moduleResonseBuffer
 16501  00103E  6F60               	movwf	strncmp@s1& (0+255),b
 16502  001040  0E01               	movlw	high _moduleResonseBuffer
 16503  001042  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16504  001044  0EB8               	movlw	low STR_31
 16505  001046  6F62               	movwf	strncmp@s2& (0+255),b
 16506  001048  0E7F               	movlw	high STR_31
 16507  00104A  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16508  00104C  0E00               	movlw	0
 16509  00104E  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16510  001050  0E04               	movlw	4
 16511  001052  6F64               	movwf	strncmp@len& (0+255),b
 16512  001054  EC3D  F023         	call	_strncmp	;wreg free
 16513  001058  0100               	movlb	0	; () banked
 16514  00105A  5160               	movf	?_strncmp& (0+255),w,b
 16515  00105C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16516  00105E  A4D8               	btfss	status,2,c
 16517  001060  D029               	goto	l400
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;MOTEapp.c: 314: {
 16521                           ;MOTEapp.c: 315: rnModule = rn2483;
 16522  001062  0E00               	movlw	0
 16523  001064  6FEE               	movwf	_rnModule& (0+255),b
 16524                           
 16525                           ; BSR set to: 0
 16526                           ;MOTEapp.c: 316: oled_clear();
 16527  001066  EC8E  F02C         	call	_oled_clear	;wreg free
 16528                           
 16529                           ;MOTEapp.c: 317: oled_putString(" Joining Method ",0,0);
 16530  00106A  0E43               	movlw	low STR_32
 16531  00106C  0100               	movlb	0	; () banked
 16532  00106E  6F72               	movwf	oled_putString@string& (0+255),b
 16533  001070  0E7B               	movlw	high STR_32
 16534  001072  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16535  001074  0E00               	movlw	0
 16536  001076  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16537  001078  0E00               	movlw	0
 16538  00107A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16539  00107C  EC27  F026         	call	_oled_putString	;wreg free
 16540                           
 16541                           ;MOTEapp.c: 318: oled_putString("<- ABP   OTAA ->", 0,2);
 16542  001080  0E98               	movlw	low STR_33
 16543  001082  0100               	movlb	0	; () banked
 16544  001084  6F72               	movwf	oled_putString@string& (0+255),b
 16545  001086  0E7B               	movlw	high STR_33
 16546  001088  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16547  00108A  0E00               	movlw	0
 16548  00108C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16549  00108E  0E02               	movlw	2
 16550  001090  6F75               	movwf	oled_putString@start_page& (0+255),b
 16551  001092  EC27  F026         	call	_oled_putString	;wreg free
 16552                           
 16553                           ;MOTEapp.c: 319: oled_putString("  (S2)   (S3)   ", 0,3);
 16554  001096  0EEE               	movlw	low STR_34
 16555  001098  0100               	movlb	0	; () banked
 16556  00109A  6F72               	movwf	oled_putString@string& (0+255),b
 16557  00109C  0E7A               	movlw	high STR_34
 16558  00109E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16559  0010A0  0E00               	movlw	0
 16560  0010A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16561  0010A4  0E03               	movlw	3
 16562  0010A6  6F75               	movwf	oled_putString@start_page& (0+255),b
 16563  0010A8  EC27  F026         	call	_oled_putString	;wreg free
 16564  0010AC  D03B               	goto	l10408
 16565  0010AE                     L13:
 16566  0010AE  0100               	movlb	0	; () banked
 16567  0010B0                     L14:
 16568  0010B0  6FF4               	movwf	_activeState& (0+255),b
 16569                           
 16570                           ;MOTEapp.c: 321: }
 16571  0010B2  D23D               	goto	l395
 16572  0010B4                     l400:
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;MOTEapp.c: 322: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16576                           
 16577                           ; BSR set to: 0
 16578  0010B4  0E64               	movlw	low _moduleResonseBuffer
 16579  0010B6  6F60               	movwf	strncmp@s1& (0+255),b
 16580  0010B8  0E01               	movlw	high _moduleResonseBuffer
 16581  0010BA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16582  0010BC  0EBD               	movlw	low STR_35
 16583  0010BE  6F62               	movwf	strncmp@s2& (0+255),b
 16584  0010C0  0E7F               	movlw	high STR_35
 16585  0010C2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16586  0010C4  0E00               	movlw	0
 16587  0010C6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16588  0010C8  0E04               	movlw	4
 16589  0010CA  6F64               	movwf	strncmp@len& (0+255),b
 16590  0010CC  EC3D  F023         	call	_strncmp	;wreg free
 16591  0010D0  0100               	movlb	0	; () banked
 16592  0010D2  5160               	movf	?_strncmp& (0+255),w,b
 16593  0010D4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16594  0010D6  A4D8               	btfss	status,2,c
 16595  0010D8  D027               	goto	l402
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;MOTEapp.c: 323: {
 16599                           ;MOTEapp.c: 324: rnModule = rn2903;
 16600  0010DA  0E01               	movlw	1
 16601  0010DC  6FEE               	movwf	_rnModule& (0+255),b
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;MOTEapp.c: 325: oled_clear();
 16605  0010DE  EC8E  F02C         	call	_oled_clear	;wreg free
 16606                           
 16607                           ;MOTEapp.c: 326: oled_putString(" Joining Method ",0,0);
 16608  0010E2  0E43               	movlw	low STR_32
 16609  0010E4  0100               	movlb	0	; () banked
 16610  0010E6  6F72               	movwf	oled_putString@string& (0+255),b
 16611  0010E8  0E7B               	movlw	high STR_32
 16612  0010EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16613  0010EC  0E00               	movlw	0
 16614  0010EE  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16615  0010F0  0E00               	movlw	0
 16616  0010F2  6F75               	movwf	oled_putString@start_page& (0+255),b
 16617  0010F4  EC27  F026         	call	_oled_putString	;wreg free
 16618                           
 16619                           ;MOTEapp.c: 327: oled_putString("<- ABP   OTAA ->", 0,2);
 16620  0010F8  0E98               	movlw	low STR_33
 16621  0010FA  0100               	movlb	0	; () banked
 16622  0010FC  6F72               	movwf	oled_putString@string& (0+255),b
 16623  0010FE  0E7B               	movlw	high STR_33
 16624  001100  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16625  001102  0E00               	movlw	0
 16626  001104  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16627  001106  0E02               	movlw	2
 16628  001108  6F75               	movwf	oled_putString@start_page& (0+255),b
 16629  00110A  EC27  F026         	call	_oled_putString	;wreg free
 16630                           
 16631                           ;MOTEapp.c: 328: oled_putString("  (S2)   (S3)   ", 0,3);
 16632  00110E  0EEE               	movlw	low STR_34
 16633  001110  0100               	movlb	0	; () banked
 16634  001112  6F72               	movwf	oled_putString@string& (0+255),b
 16635  001114  0E7A               	movlw	high STR_34
 16636  001116  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16637  001118  0E00               	movlw	0
 16638  00111A  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16639  00111C  0E03               	movlw	3
 16640  00111E  6F75               	movwf	oled_putString@start_page& (0+255),b
 16641  001120  EC27  F026         	call	_oled_putString	;wreg free
 16642  001124                     l10408:
 16643                           
 16644                           ;MOTEapp.c: 329: activeState = moteJoinMethod;
 16645  001124  0E02               	movlw	2
 16646  001126  D7C3               	goto	L13
 16647  001128                     l402:
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;MOTEapp.c: 331: else
 16651                           ;MOTEapp.c: 332: {
 16652                           ;MOTEapp.c: 333: sendCommand("sys reset");
 16653                           
 16654                           ; BSR set to: 0
 16655  001128  0EFC               	movlw	low STR_30
 16656  00112A  6F61               	movwf	sendCommand@string& (0+255),b
 16657  00112C  0E7E               	movlw	high STR_30
 16658  00112E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16659  001130  ECDD  F02A         	call	_sendCommand	;wreg free
 16660                           
 16661                           ;MOTEapp.c: 334: moteApp_delayms(25);
 16662  001134  0E00               	movlw	0
 16663  001136  0100               	movlb	0	; () banked
 16664  001138  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16665  00113A  0E19               	movlw	25
 16666  00113C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16667  00113E  EC93  F02A         	call	_moteApp_delayms	;wreg free
 16668                           
 16669                           ;MOTEapp.c: 335: activeState = moteStartup;
 16670  001142  0E00               	movlw	0
 16671  001144  D7B4               	goto	L13
 16672  001146                     
 16673                           ; BSR set to: 0
 16674                           ;MOTEapp.c: 340: if (changeStates)
 16675                           
 16676                           ; BSR set to: 0
 16677  001146  5177               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16678  001148  B4D8               	btfsc	status,2,c
 16679  00114A  D019               	goto	l405
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;MOTEapp.c: 341: {
 16683                           ;MOTEapp.c: 342: oled_putString("  (S2)          ", 0,3);
 16684  00114C  0EBB               	movlw	low STR_40
 16685  00114E  6F72               	movwf	oled_putString@string& (0+255),b
 16686  001150  0E7A               	movlw	high STR_40
 16687  001152  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16688  001154  0E00               	movlw	0
 16689  001156  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16690  001158  0E03               	movlw	3
 16691  00115A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16692  00115C  EC27  F026         	call	_oled_putString	;wreg free
 16693                           
 16694                           ;MOTEapp.c: 343: moteApp_delayms(500);
 16695  001160  0E01               	movlw	1
 16696  001162  0100               	movlb	0	; () banked
 16697  001164  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16698  001166  0EF4               	movlw	244
 16699  001168  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16700  00116A  EC93  F02A         	call	_moteApp_delayms	;wreg free
 16701                           
 16702                           ;MOTEapp.c: 344: sendCommand("mac join abp");
 16703  00116E  0EE7               	movlw	low STR_41
 16704  001170  0100               	movlb	0	; () banked
 16705  001172  6F61               	movwf	sendCommand@string& (0+255),b
 16706  001174  0E7D               	movlw	high STR_41
 16707  001176  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16708  001178  ECDD  F02A         	call	_sendCommand	;wreg free
 16709  00117C  D05E               	goto	l10454
 16710  00117E                     l405:
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;MOTEapp.c: 347: else if (selectButton)
 16714                           
 16715                           ; BSR set to: 0
 16716  00117E  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16717  001180  B4D8               	btfsc	status,2,c
 16718  001182  D1D5               	goto	l395
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;MOTEapp.c: 348: {
 16722                           ;MOTEapp.c: 349: oled_putString("         (S3)   ", 0,3);
 16723  001184  0EDD               	movlw	low STR_42
 16724  001186  6F72               	movwf	oled_putString@string& (0+255),b
 16725  001188  0E7A               	movlw	high STR_42
 16726  00118A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16727  00118C  0E00               	movlw	0
 16728  00118E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16729  001190  0E03               	movlw	3
 16730  001192  6F75               	movwf	oled_putString@start_page& (0+255),b
 16731  001194  EC27  F026         	call	_oled_putString	;wreg free
 16732                           
 16733                           ;MOTEapp.c: 350: moteApp_delayms(500);
 16734  001198  0E01               	movlw	1
 16735  00119A  0100               	movlb	0	; () banked
 16736  00119C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16737  00119E  0EF4               	movlw	244
 16738  0011A0  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16739  0011A2  EC93  F02A         	call	_moteApp_delayms	;wreg free
 16740                           
 16741                           ;MOTEapp.c: 351: sendCommand("mac join otaa");
 16742  0011A6  0E3B               	movlw	low STR_43
 16743  0011A8  0100               	movlb	0	; () banked
 16744  0011AA  6F61               	movwf	sendCommand@string& (0+255),b
 16745  0011AC  0E7D               	movlw	high STR_43
 16746  0011AE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16747  0011B0  ECDD  F02A         	call	_sendCommand	;wreg free
 16748  0011B4  D12F               	goto	l10520
 16749  0011B6                     
 16750                           ; BSR set to: 0
 16751                           ;MOTEapp.c: 356: if ( messageReady )
 16752                           
 16753                           ; BSR set to: 0
 16754  0011B6  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16755  0011B8  B4D8               	btfsc	status,2,c
 16756  0011BA  D1B9               	goto	l395
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;MOTEapp.c: 357: {
 16760                           ;MOTEapp.c: 358: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16761  0011BC  0E64               	movlw	low _moduleResonseBuffer
 16762  0011BE  6F60               	movwf	strcmp@s1& (0+255),b
 16763  0011C0  0E01               	movlw	high _moduleResonseBuffer
 16764  0011C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16765  0011C4  0EF7               	movlw	low STR_44
 16766  0011C6  6F62               	movwf	strcmp@s2& (0+255),b
 16767  0011C8  0E7F               	movlw	high STR_44
 16768  0011CA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16769  0011CC  ECC3  F028         	call	_strcmp	;wreg free
 16770  0011D0  0100               	movlb	0	; () banked
 16771  0011D2  5160               	movf	?_strcmp& (0+255),w,b
 16772  0011D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16773  0011D6  A4D8               	btfss	status,2,c
 16774  0011D8  D002               	goto	l410
 16775                           
 16776                           ; BSR set to: 0
 16777                           ;MOTEapp.c: 359: {
 16778                           ;MOTEapp.c: 360: activeState = moteWaitAbp;
 16779  0011DA  0E04               	movlw	4
 16780  0011DC  D769               	goto	L14
 16781  0011DE                     l410:
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;MOTEapp.c: 362: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16785                           
 16786                           ; BSR set to: 0
 16787  0011DE  0E64               	movlw	low _moduleResonseBuffer
 16788  0011E0  6F60               	movwf	strcmp@s1& (0+255),b
 16789  0011E2  0E01               	movlw	high _moduleResonseBuffer
 16790  0011E4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16791  0011E6  0E57               	movlw	low STR_45
 16792  0011E8  6F62               	movwf	strcmp@s2& (0+255),b
 16793  0011EA  0E7D               	movlw	high STR_45
 16794  0011EC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16795  0011EE  ECC3  F028         	call	_strcmp	;wreg free
 16796  0011F2  0100               	movlb	0	; () banked
 16797  0011F4  5160               	movf	?_strcmp& (0+255),w,b
 16798  0011F6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16799  0011F8  A4D8               	btfss	status,2,c
 16800  0011FA  D019               	goto	l412
 16801                           
 16802                           ; BSR set to: 0
 16803                           ;MOTEapp.c: 363: {
 16804                           ;MOTEapp.c: 364: oled_clear();
 16805  0011FC  EC8E  F02C         	call	_oled_clear	;wreg free
 16806                           
 16807                           ;MOTEapp.c: 365: oled_putString("Valid Keys",0,0);
 16808  001200  0EB4               	movlw	low STR_46
 16809  001202  0100               	movlb	0	; () banked
 16810  001204  6F72               	movwf	oled_putString@string& (0+255),b
 16811  001206  0E7E               	movlw	high STR_46
 16812  001208  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16813  00120A  0E00               	movlw	0
 16814  00120C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16815  00120E  0E00               	movlw	0
 16816  001210  6F75               	movwf	oled_putString@start_page& (0+255),b
 16817  001212  EC27  F026         	call	_oled_putString	;wreg free
 16818                           
 16819                           ;MOTEapp.c: 366: oled_putString("Required",0,1);
 16820  001216  0E19               	movlw	low STR_47
 16821  001218  0100               	movlb	0	; () banked
 16822  00121A  6F72               	movwf	oled_putString@string& (0+255),b
 16823  00121C  0E7F               	movlw	high STR_47
 16824  00121E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16825  001220  0E00               	movlw	0
 16826  001222  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16827  001224  0E01               	movlw	1
 16828  001226  6F75               	movwf	oled_putString@start_page& (0+255),b
 16829  001228  EC27  F026         	call	_oled_putString	;wreg free
 16830  00122C  D076               	goto	l10486
 16831  00122E                     l412:
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;MOTEapp.c: 369: else
 16835                           ;MOTEapp.c: 370: {
 16836                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 16837                           
 16838                           ; BSR set to: 0
 16839  00122E  0EE7               	movlw	low STR_41
 16840  001230  6F61               	movwf	sendCommand@string& (0+255),b
 16841  001232  0E7D               	movlw	high STR_41
 16842  001234  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16843  001236  ECDD  F02A         	call	_sendCommand	;wreg free
 16844  00123A                     l10454:
 16845                           
 16846                           ;MOTEapp.c: 372: activeState = moteCheckAbp;
 16847  00123A  0E03               	movlw	3
 16848  00123C  D738               	goto	L13
 16849  00123E                     
 16850                           ; BSR set to: 0
 16851                           ;MOTEapp.c: 377: if ( messageReady )
 16852                           
 16853                           ; BSR set to: 0
 16854  00123E  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16855  001240  B4D8               	btfsc	status,2,c
 16856  001242  D175               	goto	l395
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;MOTEapp.c: 378: {
 16860                           ;MOTEapp.c: 379: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16861  001244  0E64               	movlw	low _moduleResonseBuffer
 16862  001246  6F60               	movwf	strcmp@s1& (0+255),b
 16863  001248  0E01               	movlw	high _moduleResonseBuffer
 16864  00124A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16865  00124C  0E22               	movlw	low STR_49
 16866  00124E  6F62               	movwf	strcmp@s2& (0+255),b
 16867  001250  0E7F               	movlw	high STR_49
 16868  001252  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16869  001254  ECC3  F028         	call	_strcmp	;wreg free
 16870  001258  0100               	movlb	0	; () banked
 16871  00125A  5160               	movf	?_strcmp& (0+255),w,b
 16872  00125C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16873  00125E  A4D8               	btfss	status,2,c
 16874  001260  D019               	goto	l416
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;MOTEapp.c: 380: {
 16878                           ;MOTEapp.c: 381: oled_clear();
 16879  001262  EC8E  F02C         	call	_oled_clear	;wreg free
 16880                           
 16881                           ;MOTEapp.c: 382: oled_putString("ABP Join ",0,0);
 16882  001266  0ED4               	movlw	low STR_50
 16883  001268  0100               	movlb	0	; () banked
 16884  00126A  6F72               	movwf	oled_putString@string& (0+255),b
 16885  00126C  0E7E               	movlw	high STR_50
 16886  00126E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16887  001270  0E00               	movlw	0
 16888  001272  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16889  001274  0E00               	movlw	0
 16890  001276  6F75               	movwf	oled_putString@start_page& (0+255),b
 16891  001278  EC27  F026         	call	_oled_putString	;wreg free
 16892                           
 16893                           ;MOTEapp.c: 383: oled_putString("Successful",0,1);
 16894  00127C  0E9E               	movlw	low STR_51
 16895  00127E  0100               	movlb	0	; () banked
 16896  001280  6F72               	movwf	oled_putString@string& (0+255),b
 16897  001282  0E7E               	movlw	high STR_51
 16898  001284  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16899  001286  0E00               	movlw	0
 16900  001288  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16901  00128A  0E01               	movlw	1
 16902  00128C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16903  00128E  EC27  F026         	call	_oled_putString	;wreg free
 16904  001292  D090               	goto	l10508
 16905  001294                     l416:
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;MOTEapp.c: 386: else
 16909                           ;MOTEapp.c: 387: {
 16910                           ;MOTEapp.c: 388: sendCommand("mac reset");
 16911                           
 16912                           ; BSR set to: 0
 16913  001294  0EF2               	movlw	low STR_52
 16914  001296  6F61               	movwf	sendCommand@string& (0+255),b
 16915  001298  0E7E               	movlw	high STR_52
 16916  00129A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16917  00129C  ECDD  F02A         	call	_sendCommand	;wreg free
 16918  0012A0                     l10470:
 16919                           
 16920                           ;MOTEapp.c: 389: activeState = moteReset;
 16921  0012A0  0E01               	movlw	1
 16922  0012A2  D705               	goto	L13
 16923  0012A4                     
 16924                           ; BSR set to: 0
 16925                           ;MOTEapp.c: 395: if ( messageReady )
 16926                           
 16927                           ; BSR set to: 0
 16928  0012A4  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16929  0012A6  B4D8               	btfsc	status,2,c
 16930  0012A8  D142               	goto	l395
 16931                           
 16932                           ; BSR set to: 0
 16933                           ;MOTEapp.c: 396: {
 16934                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16935  0012AA  0E64               	movlw	low _moduleResonseBuffer
 16936  0012AC  6F60               	movwf	strcmp@s1& (0+255),b
 16937  0012AE  0E01               	movlw	high _moduleResonseBuffer
 16938  0012B0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16939  0012B2  0EF7               	movlw	low STR_44
 16940  0012B4  6F62               	movwf	strcmp@s2& (0+255),b
 16941  0012B6  0E7F               	movlw	high STR_44
 16942  0012B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16943  0012BA  ECC3  F028         	call	_strcmp	;wreg free
 16944  0012BE  0100               	movlb	0	; () banked
 16945  0012C0  5160               	movf	?_strcmp& (0+255),w,b
 16946  0012C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16947  0012C4  A4D8               	btfss	status,2,c
 16948  0012C6  D002               	goto	l420
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;MOTEapp.c: 398: {
 16952                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 16953  0012C8  0E06               	movlw	6
 16954  0012CA  D6F2               	goto	L14
 16955  0012CC                     l420:
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16959                           
 16960                           ; BSR set to: 0
 16961  0012CC  0E64               	movlw	low _moduleResonseBuffer
 16962  0012CE  6F60               	movwf	strcmp@s1& (0+255),b
 16963  0012D0  0E01               	movlw	high _moduleResonseBuffer
 16964  0012D2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16965  0012D4  0E57               	movlw	low STR_45
 16966  0012D6  6F62               	movwf	strcmp@s2& (0+255),b
 16967  0012D8  0E7D               	movlw	high STR_45
 16968  0012DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16969  0012DC  ECC3  F028         	call	_strcmp	;wreg free
 16970  0012E0  0100               	movlb	0	; () banked
 16971  0012E2  5160               	movf	?_strcmp& (0+255),w,b
 16972  0012E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16973  0012E6  A4D8               	btfss	status,2,c
 16974  0012E8  D01A               	goto	l422
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;MOTEapp.c: 402: {
 16978                           ;MOTEapp.c: 403: oled_clear();
 16979  0012EA  EC8E  F02C         	call	_oled_clear	;wreg free
 16980                           
 16981                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 16982  0012EE  0EB4               	movlw	low STR_46
 16983  0012F0  0100               	movlb	0	; () banked
 16984  0012F2  6F72               	movwf	oled_putString@string& (0+255),b
 16985  0012F4  0E7E               	movlw	high STR_46
 16986  0012F6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16987  0012F8  0E00               	movlw	0
 16988  0012FA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16989  0012FC  0E00               	movlw	0
 16990  0012FE  6F75               	movwf	oled_putString@start_page& (0+255),b
 16991  001300  EC27  F026         	call	_oled_putString	;wreg free
 16992                           
 16993                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 16994  001304  0E19               	movlw	low STR_47
 16995  001306  0100               	movlb	0	; () banked
 16996  001308  6F72               	movwf	oled_putString@string& (0+255),b
 16997  00130A  0E7F               	movlw	high STR_47
 16998  00130C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16999  00130E  0E00               	movlw	0
 17000  001310  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17001  001312  0E01               	movlw	1
 17002  001314  6F75               	movwf	oled_putString@start_page& (0+255),b
 17003  001316  EC27  F026         	call	_oled_putString	;wreg free
 17004  00131A                     l10486:
 17005                           
 17006                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 17007  00131A  0E09               	movlw	9
 17008  00131C  D6C8               	goto	L13
 17009  00131E                     l422:
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17013                           
 17014                           ; BSR set to: 0
 17015  00131E  0E64               	movlw	low _moduleResonseBuffer
 17016  001320  6F60               	movwf	strcmp@s1& (0+255),b
 17017  001322  0E01               	movlw	high _moduleResonseBuffer
 17018  001324  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17019  001326  0E49               	movlw	low STR_57
 17020  001328  6F62               	movwf	strcmp@s2& (0+255),b
 17021  00132A  0E7D               	movlw	high STR_57
 17022  00132C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17023  00132E  ECC3  F028         	call	_strcmp	;wreg free
 17024  001332  0100               	movlb	0	; () banked
 17025  001334  5160               	movf	?_strcmp& (0+255),w,b
 17026  001336  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17027  001338  A4D8               	btfss	status,2,c
 17028  00133A  D007               	goto	l424
 17029                           
 17030                           ; BSR set to: 0
 17031                           ;MOTEapp.c: 409: {
 17032                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 17033  00133C  0E3B               	movlw	low STR_43
 17034  00133E  6F61               	movwf	sendCommand@string& (0+255),b
 17035  001340  0E7D               	movlw	high STR_43
 17036  001342  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17037  001344  ECDD  F02A         	call	_sendCommand	;wreg free
 17038  001348  D065               	goto	l10520
 17039  00134A                     l424:
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17043                           
 17044                           ; BSR set to: 0
 17045  00134A  0E64               	movlw	low _moduleResonseBuffer
 17046  00134C  6F60               	movwf	strcmp@s1& (0+255),b
 17047  00134E  0E01               	movlw	high _moduleResonseBuffer
 17048  001350  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17049  001352  0E93               	movlw	low STR_59
 17050  001354  6F62               	movwf	strcmp@s2& (0+255),b
 17051  001356  0E7E               	movlw	high STR_59
 17052  001358  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17053  00135A  ECC3  F028         	call	_strcmp	;wreg free
 17054  00135E  D066               	goto	L15
 17055  001360                     
 17056                           ; BSR set to: 0
 17057                           ;MOTEapp.c: 420: if ( messageReady )
 17058                           
 17059                           ; BSR set to: 0
 17060  001360  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17061  001362  B4D8               	btfsc	status,2,c
 17062  001364  D0E4               	goto	l395
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;MOTEapp.c: 421: {
 17066                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17067  001366  0E64               	movlw	low _moduleResonseBuffer
 17068  001368  6F60               	movwf	strcmp@s1& (0+255),b
 17069  00136A  0E01               	movlw	high _moduleResonseBuffer
 17070  00136C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17071  00136E  0E22               	movlw	low STR_49
 17072  001370  6F62               	movwf	strcmp@s2& (0+255),b
 17073  001372  0E7F               	movlw	high STR_49
 17074  001374  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17075  001376  ECC3  F028         	call	_strcmp	;wreg free
 17076  00137A  0100               	movlb	0	; () banked
 17077  00137C  5160               	movf	?_strcmp& (0+255),w,b
 17078  00137E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17079  001380  A4D8               	btfss	status,2,c
 17080  001382  D01A               	goto	l429
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;MOTEapp.c: 423: {
 17084                           ;MOTEapp.c: 424: oled_clear();
 17085  001384  EC8E  F02C         	call	_oled_clear	;wreg free
 17086                           
 17087                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 17088  001388  0E88               	movlw	low STR_61
 17089  00138A  0100               	movlb	0	; () banked
 17090  00138C  6F72               	movwf	oled_putString@string& (0+255),b
 17091  00138E  0E7E               	movlw	high STR_61
 17092  001390  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17093  001392  0E00               	movlw	0
 17094  001394  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17095  001396  0E00               	movlw	0
 17096  001398  6F75               	movwf	oled_putString@start_page& (0+255),b
 17097  00139A  EC27  F026         	call	_oled_putString	;wreg free
 17098                           
 17099                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 17100  00139E  0E9E               	movlw	low STR_51
 17101  0013A0  0100               	movlb	0	; () banked
 17102  0013A2  6F72               	movwf	oled_putString@string& (0+255),b
 17103  0013A4  0E7E               	movlw	high STR_51
 17104  0013A6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17105  0013A8  0E00               	movlw	0
 17106  0013AA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17107  0013AC  0E01               	movlw	1
 17108  0013AE  6F75               	movwf	oled_putString@start_page& (0+255),b
 17109  0013B0  EC27  F026         	call	_oled_putString	;wreg free
 17110  0013B4                     l10508:
 17111                           
 17112                           ;MOTEapp.c: 427: activeState = moteJoined;
 17113  0013B4  0E07               	movlw	7
 17114  0013B6  D67B               	goto	L13
 17115  0013B8                     l429:
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17119                           
 17120                           ; BSR set to: 0
 17121  0013B8  0E64               	movlw	low _moduleResonseBuffer
 17122  0013BA  6F60               	movwf	strcmp@s1& (0+255),b
 17123  0013BC  0E01               	movlw	high _moduleResonseBuffer
 17124  0013BE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17125  0013C0  0E95               	movlw	low STR_63
 17126  0013C2  6F62               	movwf	strcmp@s2& (0+255),b
 17127  0013C4  0E7F               	movlw	high STR_63
 17128  0013C6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17129  0013C8  ECC3  F028         	call	_strcmp	;wreg free
 17130  0013CC  0100               	movlb	0	; () banked
 17131  0013CE  5160               	movf	?_strcmp& (0+255),w,b
 17132  0013D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17133  0013D2  A4D8               	btfss	status,2,c
 17134  0013D4  D021               	goto	l431
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;MOTEapp.c: 430: {
 17138                           ;MOTEapp.c: 431: oled_clear();
 17139  0013D6  EC8E  F02C         	call	_oled_clear	;wreg free
 17140                           
 17141                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 17142  0013DA  0EE8               	movlw	low STR_64
 17143  0013DC  0100               	movlb	0	; () banked
 17144  0013DE  6F72               	movwf	oled_putString@string& (0+255),b
 17145  0013E0  0E7E               	movlw	high STR_64
 17146  0013E2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17147  0013E4  0E01               	movlw	1
 17148  0013E6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17149  0013E8  0E00               	movlw	0
 17150  0013EA  6F75               	movwf	oled_putString@start_page& (0+255),b
 17151  0013EC  EC27  F026         	call	_oled_putString	;wreg free
 17152                           
 17153                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 17154  0013F0  0E8E               	movlw	low STR_65
 17155  0013F2  0100               	movlb	0	; () banked
 17156  0013F4  6F72               	movwf	oled_putString@string& (0+255),b
 17157  0013F6  0E7F               	movlw	high STR_65
 17158  0013F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17159  0013FA  0E02               	movlw	2
 17160  0013FC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17161  0013FE  0E01               	movlw	1
 17162  001400  6F75               	movwf	oled_putString@start_page& (0+255),b
 17163  001402  EC27  F026         	call	_oled_putString	;wreg free
 17164                           
 17165                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 17166  001406  0E3B               	movlw	low STR_43
 17167  001408  0100               	movlb	0	; () banked
 17168  00140A  6F61               	movwf	sendCommand@string& (0+255),b
 17169  00140C  0E7D               	movlw	high STR_43
 17170  00140E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17171  001410  ECDD  F02A         	call	_sendCommand	;wreg free
 17172  001414                     l10520:
 17173                           
 17174                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 17175  001414  0E05               	movlw	5
 17176  001416  D64B               	goto	L13
 17177  001418                     l431:
 17178                           
 17179                           ; BSR set to: 0
 17180                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17181                           
 17182                           ; BSR set to: 0
 17183  001418  0E64               	movlw	low _moduleResonseBuffer
 17184  00141A  6F60               	movwf	strcmp@s1& (0+255),b
 17185  00141C  0E01               	movlw	high _moduleResonseBuffer
 17186  00141E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17187  001420  0E93               	movlw	low STR_59
 17188  001422  6F62               	movwf	strcmp@s2& (0+255),b
 17189  001424  0E7E               	movlw	high STR_59
 17190  001426  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17191  001428  ECC3  F028         	call	_strcmp	;wreg free
 17192  00142C                     L15:
 17193  00142C  0100               	movlb	0	; () banked
 17194  00142E  5160               	movf	?_strcmp& (0+255),w,b
 17195  001430  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17196  001432  A4D8               	btfss	status,2,c
 17197  001434  D07C               	goto	l395
 17198                           
 17199                           ; BSR set to: 0
 17200                           ;MOTEapp.c: 438: {
 17201                           ;MOTEapp.c: 439: activeState = moteStartup;
 17202  001436  0E00               	movlw	0
 17203  001438  D63B               	goto	L14
 17204  00143A                     
 17205                           ; BSR set to: 0
 17206                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 17207                           
 17208                           ; BSR set to: 0
 17209  00143A  0EA9               	movlw	low STR_68
 17210  00143C  6F61               	movwf	sendCommand@string& (0+255),b
 17211  00143E  0E7E               	movlw	high STR_68
 17212  001440  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17213  001442  ECDD  F02A         	call	_sendCommand	;wreg free
 17214  001446  D018               	goto	l10536
 17215  001448                     
 17216                           ; BSR set to: 0
 17217                           ;MOTEapp.c: 448: if ( messageReady )
 17218                           
 17219                           ; BSR set to: 0
 17220  001448  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17221  00144A  B4D8               	btfsc	status,2,c
 17222  00144C  D070               	goto	l395
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;MOTEapp.c: 449: {
 17226                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17227  00144E  0E64               	movlw	low _moduleResonseBuffer
 17228  001450  6F60               	movwf	strcmp@s1& (0+255),b
 17229  001452  0E01               	movlw	high _moduleResonseBuffer
 17230  001454  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17231  001456  0E49               	movlw	low STR_57
 17232  001458  6F62               	movwf	strcmp@s2& (0+255),b
 17233  00145A  0E7D               	movlw	high STR_57
 17234  00145C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17235  00145E  ECC3  F028         	call	_strcmp	;wreg free
 17236  001462  0100               	movlb	0	; () banked
 17237  001464  5160               	movf	?_strcmp& (0+255),w,b
 17238  001466  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17239  001468  A4D8               	btfss	status,2,c
 17240  00146A  D008               	goto	l437
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;MOTEapp.c: 451: {
 17244                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 17245  00146C  0EA9               	movlw	low STR_68
 17246  00146E  6F61               	movwf	sendCommand@string& (0+255),b
 17247  001470  0E7E               	movlw	high STR_68
 17248  001472  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17249  001474  ECDD  F02A         	call	_sendCommand	;wreg free
 17250  001478                     l10536:
 17251                           
 17252                           ;MOTEapp.c: 453: activeState = moteGetDr;
 17253  001478  0E08               	movlw	8
 17254  00147A  D619               	goto	L13
 17255  00147C                     l437:
 17256                           
 17257                           ; BSR set to: 0
 17258                           ;MOTEapp.c: 455: else
 17259                           ;MOTEapp.c: 456: {
 17260                           ;MOTEapp.c: 457: uint8_t readDataRate;
 17261                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 17262                           
 17263                           ; BSR set to: 0
 17264  00147C  0101               	movlb	1	; () banked
 17265  00147E  5164               	movf	_moduleResonseBuffer& (0+255),w,b
 17266  001480  0FD0               	addlw	208
 17267  001482  0100               	movlb	0	; () banked
 17268  001484  6F7A               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 17272  001486  C07A  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;MOTEapp.c: 460: joiningComplete = 1;
 17276  00148A  0E01               	movlw	1
 17277  00148C  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;MOTEapp.c: 461: }
 17281                           ;MOTEapp.c: 462: }
 17282                           ;MOTEapp.c: 463: break;
 17283                           
 17284                           ; BSR set to: 0
 17285  00148E  D04F               	goto	l395
 17286  001490                     
 17287                           ; BSR set to: 0
 17288                           ;MOTEapp.c: 465: if (selectButton)
 17289                           
 17290                           ; BSR set to: 0
 17291  001490  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17292  001492  B4D8               	btfsc	status,2,c
 17293  001494  D04C               	goto	l395
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;MOTEapp.c: 466: {
 17297                           ;MOTEapp.c: 467: activeState = moteComFailure;
 17298  001496  0E0A               	movlw	10
 17299  001498  D60B               	goto	L14
 17300  00149A                     
 17301                           ; BSR set to: 0
 17302                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 17303                           
 17304                           ; BSR set to: 0
 17305  00149A  0E00               	movlw	0
 17306  00149C  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17307  00149E  0E00               	movlw	0
 17308  0014A0  ECCF  F029         	call	_DATAEE_WriteByte
 17309  0014A4  B281               	btfsc	3969,1,c	;volatile
 17310  0014A6  D002               	goto	u9180
 17311  0014A8  A081               	btfss	3969,0,c	;volatile
 17312  0014AA  D7FC               	goto	l443
 17313  0014AC                     u9180:
 17314                           
 17315                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 17316  0014AC  0EFA               	movlw	250
 17317  0014AE  0100               	movlb	0	; () banked
 17318  0014B0  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17319  0014B2  0E58               	movlw	88
 17320  0014B4                     u11227:
 17321  0014B4  2EE8               	decfsz	wreg,f,c
 17322  0014B6  D7FE               	bra	u11227
 17323  0014B8  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17324  0014BA  D7FC               	bra	u11227
 17325  0014BC  F000               	nop	
 17326                           
 17327                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 17328  0014BE  0EFA               	movlw	250
 17329  0014C0  0100               	movlb	0	; () banked
 17330  0014C2  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17331  0014C4  0E58               	movlw	88
 17332  0014C6                     u11237:
 17333  0014C6  2EE8               	decfsz	wreg,f,c
 17334  0014C8  D7FE               	bra	u11237
 17335  0014CA  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17336  0014CC  D7FC               	bra	u11237
 17337  0014CE  F000               	nop	
 17338                           
 17339                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 17340  0014D0  0EFA               	movlw	250
 17341  0014D2  0100               	movlb	0	; () banked
 17342  0014D4  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17343  0014D6  0E58               	movlw	88
 17344  0014D8                     u11247:
 17345  0014D8  2EE8               	decfsz	wreg,f,c
 17346  0014DA  D7FE               	bra	u11247
 17347  0014DC  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17348  0014DE  D7FC               	bra	u11247
 17349  0014E0  F000               	nop	
 17350  0014E2  00FF               	reset		;# 
 17351                           
 17352                           ;MOTEapp.c: 480: }
 17353                           
 17354                           ;MOTEapp.c: 479: break;
 17355  0014E4  D024               	goto	l395
 17356  0014E6                     l390:
 17357  0014E6  0100               	movlb	0	; () banked
 17358  0014E8  51F4               	movf	_activeState& (0+255),w,b
 17359                           
 17360                           ; Switch size 1, requested type "space"
 17361                           ; Number of cases is 11, Range of values is 0 to 10
 17362                           ; switch strategies available:
 17363                           ; Name         Instructions Cycles
 17364                           ; simple_byte           34    18 (average)
 17365                           ;	Chosen strategy is simple_byte
 17366  0014EA  0A00               	xorlw	0	; case 0
 17367  0014EC  B4D8               	btfsc	status,2,c
 17368  0014EE  D596               	goto	l396
 17369  0014F0  0A01               	xorlw	1	; case 1
 17370  0014F2  B4D8               	btfsc	status,2,c
 17371  0014F4  D59B               	goto	l397
 17372  0014F6  0A03               	xorlw	3	; case 2
 17373  0014F8  B4D8               	btfsc	status,2,c
 17374  0014FA  D625               	goto	l404
 17375  0014FC  0A01               	xorlw	1	; case 3
 17376  0014FE  B4D8               	btfsc	status,2,c
 17377  001500  D65A               	goto	l408
 17378  001502  0A07               	xorlw	7	; case 4
 17379  001504  B4D8               	btfsc	status,2,c
 17380  001506  D69B               	goto	l414
 17381  001508  0A01               	xorlw	1	; case 5
 17382  00150A  B4D8               	btfsc	status,2,c
 17383  00150C  D6CB               	goto	l418
 17384  00150E  0A03               	xorlw	3	; case 6
 17385  001510  B4D8               	btfsc	status,2,c
 17386  001512  D726               	goto	l427
 17387  001514  0A01               	xorlw	1	; case 7
 17388  001516  B4D8               	btfsc	status,2,c
 17389  001518  D790               	goto	l434
 17390  00151A  0A0F               	xorlw	15	; case 8
 17391  00151C  B4D8               	btfsc	status,2,c
 17392  00151E  D794               	goto	l435
 17393  001520  0A01               	xorlw	1	; case 9
 17394  001522  B4D8               	btfsc	status,2,c
 17395  001524  D7B5               	goto	l439
 17396  001526  0A03               	xorlw	3	; case 10
 17397  001528  B4D8               	btfsc	status,2,c
 17398  00152A  D7B7               	goto	l441
 17399  00152C  D576               	goto	l391
 17400  00152E                     l395:
 17401                           
 17402                           ;MOTEapp.c: 481: return joiningComplete;
 17403                           
 17404                           ; BSR set to: 0
 17405  00152E  0100               	movlb	0	; () banked
 17406  001530  517B               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17407  001532  0012               	return	
 17408  001534                     __end_of_moteJoiningProcess:
 17409                           	opt stack 0
 17410                           tblptru	equ	0xFF8
 17411                           tblptrh	equ	0xFF7
 17412                           tblptrl	equ	0xFF6
 17413                           tablat	equ	0xFF5
 17414                           prodh	equ	0xFF4
 17415                           prodl	equ	0xFF3
 17416                           intcon	equ	0xFF2
 17417                           intcon3	equ	0xFF0
 17418                           postinc0	equ	0xFEE
 17419                           wreg	equ	0xFE8
 17420                           indf1	equ	0xFE7
 17421                           postdec1	equ	0xFE5
 17422                           fsr1h	equ	0xFE2
 17423                           fsr1l	equ	0xFE1
 17424                           indf2	equ	0xFDF
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function _strncmp *****************
 17430 ;; Defined at:
 17431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17434 ;;		 -> moduleResonseBuffer(64), 
 17435 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17436 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17437 ;;		 -> STR_35(5), STR_31(5), 
 17438 ;;  len             2    4[BANK0 ] unsigned int 
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;		None
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  2    0[BANK0 ] int 
 17443 ;; Registers used:
 17444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17445 ;; Tracked objects:
 17446 ;;		On entry : 0/0
 17447 ;;		On exit  : 0/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17450 ;;      Params:         0       6       0       0       0       0       0       0       0
 17451 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17452 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17453 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17454 ;;Total ram usage:        9 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; Hardware stack levels required when called:   11
 17457 ;; This function calls:
 17458 ;;		Nothing
 17459 ;; This function is called by:
 17460 ;;		_moteJoiningProcess
 17461 ;;		_moteRunningProcess
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text52
 17466  00467A                     __ptext52:
 17467                           	opt stack 0
 17468  00467A                     _strncmp:
 17469                           	opt stack 17
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;incstack = 0
 17473  00467A  D035               	goto	l2813
 17474  00467C                     l9582:
 17475  00467C  C060  FFD9         	movff	strncmp@s1,fsr2l
 17476  004680  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17477  004684  50DF               	movf	indf2,w,c
 17478  004686  B4D8               	btfsc	status,2,c
 17479  004688  D010               	goto	u8010
 17480  00468A  C060  FFD9         	movff	strncmp@s1,fsr2l
 17481  00468E  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17482  004692  50DF               	movf	indf2,w,c
 17483  004694  0100               	movlb	0	; () banked
 17484  004696  6F66               	movwf	??_strncmp& (0+255),b
 17485  004698  C062  FFF6         	movff	strncmp@s2,tblptrl
 17486  00469C  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17487  0046A0                     	if	0	;tblptru may be non-zero
 17488  0046A0                     	endif
 17489  0046A0                     	if	0	;tblptru may be non-zero
 17490  0046A0                     	endif
 17491  0046A0  0008               	tblrd		*
 17492  0046A2  50F5               	movf	tablat,w,c
 17493  0046A4  1966               	xorwf	??_strncmp& (0+255),w,b
 17494  0046A6  B4D8               	btfsc	status,2,c
 17495  0046A8  D01A               	goto	l2815
 17496  0046AA                     u8010:
 17497                           
 17498                           ; BSR set to: 0
 17499  0046AA  C062  FFF6         	movff	strncmp@s2,tblptrl
 17500  0046AE  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17501  0046B2                     	if	0	;tblptru may be non-zero
 17502  0046B2                     	endif
 17503  0046B2                     	if	0	;tblptru may be non-zero
 17504  0046B2                     	endif
 17505  0046B2  0008               	tblrd		*
 17506  0046B4  50F5               	movf	tablat,w,c
 17507  0046B6  0100               	movlb	0	; () banked
 17508  0046B8  6F66               	movwf	??_strncmp& (0+255),b
 17509  0046BA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17510  0046BC  1F66               	comf	??_strncmp& (0+255),f,b
 17511  0046BE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17512  0046C0  4B66               	infsnz	??_strncmp& (0+255),f,b
 17513  0046C2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17514  0046C4  C060  FFD9         	movff	strncmp@s1,fsr2l
 17515  0046C8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17516  0046CC  50DF               	movf	indf2,w,c
 17517  0046CE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17518  0046D0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17519  0046D2  2566               	addwf	??_strncmp& (0+255),w,b
 17520  0046D4  6F60               	movwf	?_strncmp& (0+255),b
 17521  0046D6  0E00               	movlw	0
 17522  0046D8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17523  0046DA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17524                           
 17525                           ; BSR set to: 0
 17526  0046DC  0012               	return	
 17527  0046DE                     l2815:
 17528                           
 17529                           ; BSR set to: 0
 17530                           
 17531                           ; BSR set to: 0
 17532  0046DE  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17533  0046E0  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17534  0046E2  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17535  0046E4  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17536  0046E6                     l2813:
 17537                           
 17538                           ; BSR set to: 0
 17539  0046E6  0100               	movlb	0	; () banked
 17540  0046E8  0764               	decf	strncmp@len& (0+255),f,b
 17541  0046EA  A0D8               	btfss	status,0,c
 17542  0046EC  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17543  0046EE  2964               	incf	strncmp@len& (0+255),w,b
 17544  0046F0  E1C5               	bnz	l9582
 17545  0046F2  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17546  0046F4  A4D8               	btfss	status,2,c
 17547  0046F6  D7C2               	goto	l2814
 17548                           
 17549                           ; BSR set to: 0
 17550                           
 17551                           ; BSR set to: 0
 17552  0046F8  0E00               	movlw	0
 17553  0046FA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17554  0046FC  0E00               	movlw	0
 17555  0046FE  6F60               	movwf	?_strncmp& (0+255),b
 17556  004700  0012               	return	
 17557  004702                     __end_of_strncmp:
 17558                           	opt stack 0
 17559                           tblptru	equ	0xFF8
 17560                           tblptrh	equ	0xFF7
 17561                           tblptrl	equ	0xFF6
 17562                           tablat	equ	0xFF5
 17563                           prodh	equ	0xFF4
 17564                           prodl	equ	0xFF3
 17565                           intcon	equ	0xFF2
 17566                           intcon3	equ	0xFF0
 17567                           postinc0	equ	0xFEE
 17568                           wreg	equ	0xFE8
 17569                           indf1	equ	0xFE7
 17570                           postdec1	equ	0xFE5
 17571                           fsr1h	equ	0xFE2
 17572                           fsr1l	equ	0xFE1
 17573                           indf2	equ	0xFDF
 17574                           fsr2h	equ	0xFDA
 17575                           fsr2l	equ	0xFD9
 17576                           status	equ	0xFD8
 17577                           
 17578 ;; *************** function _strcmp *****************
 17579 ;; Defined at:
 17580 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17583 ;;		 -> moduleResonseBuffer(64), 
 17584 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17585 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17586 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17587 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;  r               1    5[BANK0 ] char 
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  2    0[BANK0 ] int 
 17592 ;; Registers used:
 17593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17599 ;;      Params:         0       4       0       0       0       0       0       0       0
 17600 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17601 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17602 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17603 ;;Total ram usage:        6 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:   11
 17606 ;; This function calls:
 17607 ;;		Nothing
 17608 ;; This function is called by:
 17609 ;;		_moteJoiningProcess
 17610 ;;		_moteRunningProcess
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           	psect	text53
 17615  005186                     __ptext53:
 17616                           	opt stack 0
 17617  005186                     _strcmp:
 17618                           	opt stack 17
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;incstack = 0
 17622  005186  D005               	goto	l2805
 17623  005188  0100               	movlb	0	; () banked
 17624  00518A  4B60               	infsnz	strcmp@s1& (0+255),f,b
 17625  00518C  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 17626  00518E  4B62               	infsnz	strcmp@s2& (0+255),f,b
 17627  005190  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 17628  005192                     l2805:
 17629                           
 17630                           ; BSR set to: 0
 17631  005192  C060  FFD9         	movff	strcmp@s1,fsr2l
 17632  005196  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17633  00519A  50DF               	movf	indf2,w,c
 17634  00519C  0100               	movlb	0	; () banked
 17635  00519E  6F64               	movwf	??_strcmp& (0+255),b
 17636  0051A0  C062  FFF6         	movff	strcmp@s2,tblptrl
 17637  0051A4  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 17638  0051A8                     	if	0	;tblptru may be non-zero
 17639  0051A8                     	endif
 17640  0051A8                     	if	0	;tblptru may be non-zero
 17641  0051A8                     	endif
 17642  0051A8  0008               	tblrd		*
 17643  0051AA  50F5               	movf	tablat,w,c
 17644  0051AC  0800               	sublw	0
 17645  0051AE  2564               	addwf	??_strcmp& (0+255),w,b
 17646  0051B0  6F65               	movwf	strcmp@r& (0+255),b
 17647  0051B2  5165               	movf	strcmp@r& (0+255),w,b
 17648  0051B4  A4D8               	btfss	status,2,c
 17649  0051B6  D007               	goto	u8040
 17650                           
 17651                           ; BSR set to: 0
 17652  0051B8  C060  FFD9         	movff	strcmp@s1,fsr2l
 17653  0051BC  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17654  0051C0  50DF               	movf	indf2,w,c
 17655  0051C2  A4D8               	btfss	status,2,c
 17656  0051C4  D7E1               	goto	l2806
 17657  0051C6                     u8040:
 17658                           
 17659                           ; BSR set to: 0
 17660                           
 17661                           ; BSR set to: 0
 17662                           
 17663                           ; BSR set to: 0
 17664  0051C6  5165               	movf	strcmp@r& (0+255),w,b
 17665  0051C8  6F60               	movwf	?_strcmp& (0+255),b
 17666  0051CA  6B61               	clrf	(?_strcmp+1)& (0+255),b
 17667  0051CC  BF60               	btfsc	?_strcmp& (0+255),7,b
 17668  0051CE  0761               	decf	(?_strcmp+1)& (0+255),f,b
 17669  0051D0  0012               	return	
 17670  0051D2                     __end_of_strcmp:
 17671                           	opt stack 0
 17672                           tblptru	equ	0xFF8
 17673                           tblptrh	equ	0xFF7
 17674                           tblptrl	equ	0xFF6
 17675                           tablat	equ	0xFF5
 17676                           prodh	equ	0xFF4
 17677                           prodl	equ	0xFF3
 17678                           intcon	equ	0xFF2
 17679                           intcon3	equ	0xFF0
 17680                           postinc0	equ	0xFEE
 17681                           wreg	equ	0xFE8
 17682                           indf1	equ	0xFE7
 17683                           postdec1	equ	0xFE5
 17684                           fsr1h	equ	0xFE2
 17685                           fsr1l	equ	0xFE1
 17686                           indf2	equ	0xFDF
 17687                           fsr2h	equ	0xFDA
 17688                           fsr2l	equ	0xFD9
 17689                           status	equ	0xFD8
 17690                           
 17691 ;; *************** function _moteApp_delayms *****************
 17692 ;; Defined at:
 17693 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;  length          2    0[BANK0 ] unsigned int 
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;  counter         2    3[BANK0 ] unsigned int 
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      void 
 17700 ;; Registers used:
 17701 ;;		wreg, status,2, status,0
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17707 ;;      Params:         0       2       0       0       0       0       0       0       0
 17708 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17709 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17710 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17711 ;;Total ram usage:        5 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:   11
 17714 ;; This function calls:
 17715 ;;		Nothing
 17716 ;; This function is called by:
 17717 ;;		_main
 17718 ;;		_test_powerup
 17719 ;;		_moduleResync
 17720 ;;		_moteJoiningProcess
 17721 ;;		_moteRunningProcess
 17722 ;;		_moteApp_GoToSleep
 17723 ;;		_moteApp_setSensorsInput
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           	psect	text54
 17728  005526                     __ptext54:
 17729                           	opt stack 0
 17730  005526                     _moteApp_delayms:
 17731                           	opt stack 16
 17732                           
 17733                           ;MOTEapp.c: 169: uint16_t counter;
 17734                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;incstack = 0
 17738  005526  0E00               	movlw	0
 17739  005528  0100               	movlb	0	; () banked
 17740  00552A  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17741  00552C  0E00               	movlw	0
 17742  00552E  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 17743  005530  D00C               	goto	l348
 17744  005532                     
 17745                           ; BSR set to: 0
 17746                           ;MOTEapp.c: 171: {
 17747                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 17748                           
 17749                           ; BSR set to: 0
 17750  005532  0E10               	movlw	16
 17751  005534  0100               	movlb	0	; () banked
 17752  005536  6F62               	movwf	??_moteApp_delayms& (0+255),b
 17753  005538  0E94               	movlw	148
 17754  00553A                     u11257:
 17755  00553A  2EE8               	decfsz	wreg,f,c
 17756  00553C  D7FE               	bra	u11257
 17757  00553E  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 17758  005540  D7FC               	bra	u11257
 17759  005542  F000               	nop	
 17760  005544  0100               	movlb	0	; () banked
 17761  005546  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17762  005548  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17763  00554A                     l348:
 17764                           
 17765                           ; BSR set to: 0
 17766  00554A  5160               	movf	moteApp_delayms@length& (0+255),w,b
 17767  00554C  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 17768  00554E  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17769  005550  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17770  005552  B0D8               	btfsc	status,0,c
 17771  005554  0012               	return	
 17772  005556  D7ED               	goto	l349
 17773  005558                     __end_of_moteApp_delayms:
 17774                           	opt stack 0
 17775                           tblptru	equ	0xFF8
 17776                           tblptrh	equ	0xFF7
 17777                           tblptrl	equ	0xFF6
 17778                           tablat	equ	0xFF5
 17779                           prodh	equ	0xFF4
 17780                           prodl	equ	0xFF3
 17781                           intcon	equ	0xFF2
 17782                           intcon3	equ	0xFF0
 17783                           postinc0	equ	0xFEE
 17784                           wreg	equ	0xFE8
 17785                           indf1	equ	0xFE7
 17786                           postdec1	equ	0xFE5
 17787                           fsr1h	equ	0xFE2
 17788                           fsr1l	equ	0xFE1
 17789                           indf2	equ	0xFDF
 17790                           fsr2h	equ	0xFDA
 17791                           fsr2l	equ	0xFD9
 17792                           status	equ	0xFD8
 17793                           
 17794 ;; *************** function _DATAEE_WriteByte *****************
 17795 ;; Defined at:
 17796 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17797 ;; Parameters:    Size  Location     Type
 17798 ;;  bAdd            1    wreg     unsigned char 
 17799 ;;  bData           1    0[BANK0 ] unsigned char 
 17800 ;; Auto vars:     Size  Location     Type
 17801 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17802 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  1    wreg      void 
 17805 ;; Registers used:
 17806 ;;		wreg, status,2
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17812 ;;      Params:         0       1       0       0       0       0       0       0       0
 17813 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17815 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17816 ;;Total ram usage:        3 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; Hardware stack levels required when called:   11
 17819 ;; This function calls:
 17820 ;;		Nothing
 17821 ;; This function is called by:
 17822 ;;		_main
 17823 ;;		_moteJoiningProcess
 17824 ;; This function uses a non-reentrant model
 17825 ;;
 17826                           
 17827                           	psect	text55
 17828  00539E                     __ptext55:
 17829                           	opt stack 0
 17830  00539E                     _DATAEE_WriteByte:
 17831                           	opt stack 17
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;incstack = 0
 17835                           ;DATAEE_WriteByte@bAdd stored from wreg
 17836  00539E  0100               	movlb	0	; () banked
 17837  0053A0  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17838                           
 17839                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17840  0053A2  0E00               	movlw	0
 17841  0053A4  BEF2               	btfsc	intcon,7,c	;volatile
 17842  0053A6  0E01               	movlw	1
 17843  0053A8  0100               	movlb	0	; () banked
 17844  0053AA  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17848  0053AC  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;memory.c: 171: EEDATA = bData;
 17852  0053B0  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17856  0053B4  9EA6               	bcf	4006,7,c	;volsfr
 17857                           
 17858                           ; BSR set to: 0
 17859                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17860  0053B6  9CA6               	bcf	4006,6,c	;volsfr
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;memory.c: 174: EECON1bits.WREN = 1;
 17864  0053B8  84A6               	bsf	4006,2,c	;volsfr
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;memory.c: 175: INTCONbits.GIE = 0;
 17868  0053BA  9EF2               	bcf	intcon,7,c	;volatile
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;memory.c: 176: EECON2 = 0x55;
 17872  0053BC  0E55               	movlw	85
 17873  0053BE  6EA7               	movwf	4007,c	;volsfr
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;memory.c: 177: EECON2 = 0xAA;
 17877  0053C0  0EAA               	movlw	170
 17878  0053C2  6EA7               	movwf	4007,c	;volsfr
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;memory.c: 178: EECON1bits.WR = 1;
 17882  0053C4  82A6               	bsf	4006,1,c	;volsfr
 17883  0053C6                     
 17884                           ; BSR set to: 0
 17885                           ;memory.c: 181: {
 17886  0053C6  B2A6               	btfsc	4006,1,c	;volsfr
 17887  0053C8  D7FE               	goto	l1550
 17888                           
 17889                           ;memory.c: 182: }
 17890                           ;memory.c: 184: EECON1bits.WREN = 0;
 17891  0053CA  94A6               	bcf	4006,2,c	;volsfr
 17892                           
 17893                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17894  0053CC  0100               	movlb	0	; () banked
 17895  0053CE  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17896  0053D0  D002               	bra	u7875
 17897  0053D2  9EF2               	bcf	intcon,7,c	;volatile
 17898  0053D4  D001               	bra	u7876
 17899  0053D6                     u7875:
 17900  0053D6  8EF2               	bsf	intcon,7,c	;volatile
 17901  0053D8                     u7876:
 17902  0053D8  0012               	return		;funcret
 17903  0053DA                     __end_of_DATAEE_WriteByte:
 17904                           	opt stack 0
 17905                           tblptru	equ	0xFF8
 17906                           tblptrh	equ	0xFF7
 17907                           tblptrl	equ	0xFF6
 17908                           tablat	equ	0xFF5
 17909                           prodh	equ	0xFF4
 17910                           prodl	equ	0xFF3
 17911                           intcon	equ	0xFF2
 17912                           intcon3	equ	0xFF0
 17913                           postinc0	equ	0xFEE
 17914                           wreg	equ	0xFE8
 17915                           indf1	equ	0xFE7
 17916                           postdec1	equ	0xFE5
 17917                           fsr1h	equ	0xFE2
 17918                           fsr1l	equ	0xFE1
 17919                           indf2	equ	0xFDF
 17920                           fsr2h	equ	0xFDA
 17921                           fsr2l	equ	0xFD9
 17922                           status	equ	0xFD8
 17923                           
 17924 ;; *************** function _USBapp_exitCDCState *****************
 17925 ;; Defined at:
 17926 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;  usbState        1    wreg     enum E5838
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;  usbState        1    0[BANK0 ] enum E5838
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  1    wreg      void 
 17933 ;; Registers used:
 17934 ;;		wreg
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/0
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17940 ;;      Params:         0       0       0       0       0       0       0       0       0
 17941 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17943 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17944 ;;Total ram usage:        1 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:   11
 17947 ;; This function calls:
 17948 ;;		Nothing
 17949 ;; This function is called by:
 17950 ;;		_moteHandler
 17951 ;; This function uses a non-reentrant model
 17952 ;;
 17953                           
 17954                           	psect	text56
 17955  005B08                     __ptext56:
 17956                           	opt stack 0
 17957  005B08                     _USBapp_exitCDCState:
 17958                           	opt stack 18
 17959                           
 17960                           ;incstack = 0
 17961                           ;USBapp_exitCDCState@usbState stored from wreg
 17962  005B08  0100               	movlb	0	; () banked
 17963  005B0A  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 17964                           
 17965                           ;USBapp.c: 141: exitUSB = usbState;
 17966  005B0C  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 17967  005B10  0012               	return		;funcret
 17968  005B12                     __end_of_USBapp_exitCDCState:
 17969                           	opt stack 0
 17970                           tblptru	equ	0xFF8
 17971                           tblptrh	equ	0xFF7
 17972                           tblptrl	equ	0xFF6
 17973                           tablat	equ	0xFF5
 17974                           prodh	equ	0xFF4
 17975                           prodl	equ	0xFF3
 17976                           intcon	equ	0xFF2
 17977                           intcon3	equ	0xFF0
 17978                           postinc0	equ	0xFEE
 17979                           wreg	equ	0xFE8
 17980                           indf1	equ	0xFE7
 17981                           postdec1	equ	0xFE5
 17982                           fsr1h	equ	0xFE2
 17983                           fsr1l	equ	0xFE1
 17984                           indf2	equ	0xFDF
 17985                           fsr2h	equ	0xFDA
 17986                           fsr2l	equ	0xFD9
 17987                           status	equ	0xFD8
 17988                           
 17989 ;; *************** function _USBapp_exitCDC *****************
 17990 ;; Defined at:
 17991 ;;		line 134 in file "../Includes/Board/USBapp.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;		None
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;		None
 17996 ;; Return value:  Size  Location     Type
 17997 ;;                  1    wreg      enum E5902
 17998 ;; Registers used:
 17999 ;;		wreg, status,2
 18000 ;; Tracked objects:
 18001 ;;		On entry : 0/0
 18002 ;;		On exit  : 0/0
 18003 ;;		Unchanged: 0/0
 18004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18005 ;;      Params:         0       0       0       0       0       0       0       0       0
 18006 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18008 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18009 ;;Total ram usage:        0 bytes
 18010 ;; Hardware stack levels used:    1
 18011 ;; Hardware stack levels required when called:   11
 18012 ;; This function calls:
 18013 ;;		Nothing
 18014 ;; This function is called by:
 18015 ;;		_moteHandler
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           	psect	text57
 18020  005B56                     __ptext57:
 18021                           	opt stack 0
 18022  005B56                     _USBapp_exitCDC:
 18023                           	opt stack 18
 18024                           
 18025                           ;USBapp.c: 136: return exitUSB;
 18026                           
 18027                           ;incstack = 0
 18028  005B56  0100               	movlb	0	; () banked
 18029  005B58  51F9               	movf	_exitUSB& (0+255),w,b
 18030  005B5A  0012               	return	
 18031  005B5C                     __end_of_USBapp_exitCDC:
 18032                           	opt stack 0
 18033                           tblptru	equ	0xFF8
 18034                           tblptrh	equ	0xFF7
 18035                           tblptrl	equ	0xFF6
 18036                           tablat	equ	0xFF5
 18037                           prodh	equ	0xFF4
 18038                           prodl	equ	0xFF3
 18039                           intcon	equ	0xFF2
 18040                           intcon3	equ	0xFF0
 18041                           postinc0	equ	0xFEE
 18042                           wreg	equ	0xFE8
 18043                           indf1	equ	0xFE7
 18044                           postdec1	equ	0xFE5
 18045                           fsr1h	equ	0xFE2
 18046                           fsr1l	equ	0xFE1
 18047                           indf2	equ	0xFDF
 18048                           fsr2h	equ	0xFDA
 18049                           fsr2l	equ	0xFD9
 18050                           status	equ	0xFD8
 18051                           
 18052 ;; *************** function _TMRapp_Handler *****************
 18053 ;; Defined at:
 18054 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;		None
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;		None
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1    wreg      void 
 18061 ;; Registers used:
 18062 ;;		wreg, status,2, status,0, cstack
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18068 ;;      Params:         0       0       0       0       0       0       0       0       0
 18069 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18070 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18071 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18072 ;;Total ram usage:        0 bytes
 18073 ;; Hardware stack levels used:    1
 18074 ;; Hardware stack levels required when called:   12
 18075 ;; This function calls:
 18076 ;;		___almod
 18077 ;;		___lwmod
 18078 ;; This function is called by:
 18079 ;;		_moteHandler
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text58
 18084  002DFC                     __ptext58:
 18085                           	opt stack 0
 18086  002DFC                     _TMRapp_Handler:
 18087                           	opt stack 17
 18088                           
 18089                           ;TMRapp.c: 60: timerMsTickCount++;
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;incstack = 0
 18093  002DFC  0100               	movlb	0	; () banked
 18094  002DFE  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 18095  002E00  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18096                           
 18097                           ; BSR set to: 0
 18098                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18099  002E02  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18100  002E06  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18101  002E0A  0E00               	movlw	0
 18102  002E0C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18103  002E0E  0E0A               	movlw	10
 18104  002E10  6F62               	movwf	___lwmod@divisor& (0+255),b
 18105  002E12  EC0D  F029         	call	___lwmod	;wreg free
 18106  002E16  0100               	movlb	0	; () banked
 18107  002E18  5160               	movf	?___lwmod& (0+255),w,b
 18108  002E1A  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18109  002E1C  A4D8               	btfss	status,2,c
 18110  002E1E  0012               	return	
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;TMRapp.c: 63: {
 18114                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18115  002E20  83F8               	bsf	_appTimer& (0+255),1,b
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18119  002E22  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18120  002E26  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18121  002E2A  0E00               	movlw	0
 18122  002E2C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18123  002E2E  0E64               	movlw	100
 18124  002E30  6F62               	movwf	___lwmod@divisor& (0+255),b
 18125  002E32  EC0D  F029         	call	___lwmod	;wreg free
 18126  002E36  0100               	movlb	0	; () banked
 18127  002E38  5160               	movf	?___lwmod& (0+255),w,b
 18128  002E3A  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18129  002E3C  A4D8               	btfss	status,2,c
 18130  002E3E  0012               	return	
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;TMRapp.c: 66: {
 18134                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18135  002E40  85F8               	bsf	_appTimer& (0+255),2,b
 18136                           
 18137                           ; BSR set to: 0
 18138                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18139  002E42  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18140  002E46  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18141  002E4A  0E03               	movlw	3
 18142  002E4C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18143  002E4E  0EE8               	movlw	232
 18144  002E50  6F62               	movwf	___lwmod@divisor& (0+255),b
 18145  002E52  EC0D  F029         	call	___lwmod	;wreg free
 18146  002E56  0100               	movlb	0	; () banked
 18147  002E58  5160               	movf	?___lwmod& (0+255),w,b
 18148  002E5A  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18149  002E5C  A4D8               	btfss	status,2,c
 18150  002E5E  0012               	return	
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;TMRapp.c: 69: {
 18154                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18155  002E60  87F8               	bsf	_appTimer& (0+255),3,b
 18156                           
 18157                           ; BSR set to: 0
 18158                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18159  002E62  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 18160  002E66  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 18161  002E6A  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 18162  002E6C  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 18163  002E6E  0E60               	movlw	96
 18164  002E70  6F64               	movwf	___almod@divisor& (0+255),b
 18165  002E72  0EEA               	movlw	234
 18166  002E74  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 18167  002E76  0E00               	movlw	0
 18168  002E78  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 18169  002E7A  0E00               	movlw	0
 18170  002E7C  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 18171  002E7E  EC85  F020         	call	___almod	;wreg free
 18172  002E82  0100               	movlb	0	; () banked
 18173  002E84  5160               	movf	?___almod& (0+255),w,b
 18174  002E86  1161               	iorwf	(?___almod+1)& (0+255),w,b
 18175  002E88  1162               	iorwf	(?___almod+2)& (0+255),w,b
 18176  002E8A  1163               	iorwf	(?___almod+3)& (0+255),w,b
 18177  002E8C  A4D8               	btfss	status,2,c
 18178  002E8E  0012               	return	
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;TMRapp.c: 72: {
 18182                           ;TMRapp.c: 73: timerMinTickCount++;
 18183  002E90  4A3D               	infsnz	_timerMinTickCount,f,c
 18184  002E92  2A3E               	incf	_timerMinTickCount+1,f,c
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18188  002E94  89F8               	bsf	_appTimer& (0+255),4,b
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18192  002E96  C03D  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18193  002E9A  C03E  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18194  002E9E  0E00               	movlw	0
 18195  002EA0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18196  002EA2  0E3C               	movlw	60
 18197  002EA4  6F62               	movwf	___lwmod@divisor& (0+255),b
 18198  002EA6  EC0D  F029         	call	___lwmod	;wreg free
 18199  002EAA  0100               	movlb	0	; () banked
 18200  002EAC  5160               	movf	?___lwmod& (0+255),w,b
 18201  002EAE  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18202  002EB0  A4D8               	btfss	status,2,c
 18203  002EB2  0012               	return	
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;TMRapp.c: 76: {
 18207                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18208  002EB4  8BF8               	bsf	_appTimer& (0+255),5,b
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18212  002EB6  C03D  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18213  002EBA  C03E  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18214  002EBE  0E02               	movlw	2
 18215  002EC0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18216  002EC2  0ED0               	movlw	208
 18217  002EC4  6F62               	movwf	___lwmod@divisor& (0+255),b
 18218  002EC6  EC0D  F029         	call	___lwmod	;wreg free
 18219  002ECA  0100               	movlb	0	; () banked
 18220  002ECC  5160               	movf	?___lwmod& (0+255),w,b
 18221  002ECE  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18222  002ED0  A4D8               	btfss	status,2,c
 18223  002ED2  0012               	return	
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;TMRapp.c: 79: {
 18227                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18228  002ED4  8DF8               	bsf	_appTimer& (0+255),6,b
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18232  002ED6  C03D  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18233  002EDA  C03E  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18234  002EDE  0E05               	movlw	5
 18235  002EE0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18236  002EE2  0EA0               	movlw	160
 18237  002EE4  6F62               	movwf	___lwmod@divisor& (0+255),b
 18238  002EE6  EC0D  F029         	call	___lwmod	;wreg free
 18239  002EEA  0100               	movlb	0	; () banked
 18240  002EEC  5160               	movf	?___lwmod& (0+255),w,b
 18241  002EEE  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18242  002EF0  A4D8               	btfss	status,2,c
 18243  002EF2  0012               	return	
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;TMRapp.c: 82: {
 18247                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18248  002EF4  8FF8               	bsf	_appTimer& (0+255),7,b
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18252  002EF6  0E00               	movlw	0
 18253  002EF8  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 18254  002EFA  0E00               	movlw	0
 18255  002EFC  6FD8               	movwf	_timerMsTickCount& (0+255),b
 18256                           
 18257                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18258  002EFE  0E00               	movlw	0
 18259  002F00  6E3E               	movwf	_timerMinTickCount+1,c
 18260  002F02  0E00               	movlw	0
 18261  002F04  6E3D               	movwf	_timerMinTickCount,c
 18262                           
 18263                           ; BSR set to: 0
 18264                           
 18265                           ; BSR set to: 0
 18266                           
 18267                           ; BSR set to: 0
 18268                           
 18269                           ; BSR set to: 0
 18270                           
 18271                           ; BSR set to: 0
 18272                           
 18273                           ; BSR set to: 0
 18274  002F06  0012               	return	
 18275  002F08                     __end_of_TMRapp_Handler:
 18276                           	opt stack 0
 18277                           tblptru	equ	0xFF8
 18278                           tblptrh	equ	0xFF7
 18279                           tblptrl	equ	0xFF6
 18280                           tablat	equ	0xFF5
 18281                           prodh	equ	0xFF4
 18282                           prodl	equ	0xFF3
 18283                           intcon	equ	0xFF2
 18284                           intcon3	equ	0xFF0
 18285                           postinc0	equ	0xFEE
 18286                           wreg	equ	0xFE8
 18287                           indf1	equ	0xFE7
 18288                           postdec1	equ	0xFE5
 18289                           fsr1h	equ	0xFE2
 18290                           fsr1l	equ	0xFE1
 18291                           indf2	equ	0xFDF
 18292                           fsr2h	equ	0xFDA
 18293                           fsr2l	equ	0xFD9
 18294                           status	equ	0xFD8
 18295                           
 18296 ;; *************** function ___lwmod *****************
 18297 ;; Defined at:
 18298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18299 ;; Parameters:    Size  Location     Type
 18300 ;;  dividend        2    0[BANK0 ] unsigned int 
 18301 ;;  divisor         2    2[BANK0 ] unsigned int 
 18302 ;; Auto vars:     Size  Location     Type
 18303 ;;  counter         1    4[BANK0 ] unsigned char 
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  2    0[BANK0 ] unsigned int 
 18306 ;; Registers used:
 18307 ;;		wreg, status,2, status,0
 18308 ;; Tracked objects:
 18309 ;;		On entry : 0/0
 18310 ;;		On exit  : 0/0
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18313 ;;      Params:         0       4       0       0       0       0       0       0       0
 18314 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18316 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18317 ;;Total ram usage:        5 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:   11
 18320 ;; This function calls:
 18321 ;;		Nothing
 18322 ;; This function is called by:
 18323 ;;		_TMRapp_Handler
 18324 ;;		_moteApp_add16bToDataBuffer
 18325 ;;		_oled_putUint16
 18326 ;; This function uses a non-reentrant model
 18327 ;;
 18328                           
 18329                           	psect	text59
 18330  00521A                     __ptext59:
 18331                           	opt stack 0
 18332  00521A                     ___lwmod:
 18333                           	opt stack 17
 18334                           
 18335                           ; BSR set to: 0
 18336                           ;incstack = 0
 18337  00521A  0100               	movlb	0	; () banked
 18338  00521C  5162               	movf	___lwmod@divisor& (0+255),w,b
 18339  00521E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18340  005220  B4D8               	btfsc	status,2,c
 18341  005222  D018               	goto	l2664
 18342                           
 18343                           ; BSR set to: 0
 18344  005224  0E01               	movlw	1
 18345  005226  6F64               	movwf	___lwmod@counter& (0+255),b
 18346  005228  D004               	goto	l2659
 18347  00522A                     
 18348                           ; BSR set to: 0
 18349                           
 18350                           ; BSR set to: 0
 18351  00522A  90D8               	bcf	status,0,c
 18352  00522C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18353  00522E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18354  005230  2B64               	incf	___lwmod@counter& (0+255),f,b
 18355  005232                     l2659:
 18356                           
 18357                           ; BSR set to: 0
 18358                           
 18359                           ; BSR set to: 0
 18360  005232  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18361  005234  D7FA               	goto	l2660
 18362  005236                     u8660:
 18363                           
 18364                           ; BSR set to: 0
 18365                           
 18366                           ; BSR set to: 0
 18367                           
 18368                           ; BSR set to: 0
 18369  005236  5162               	movf	___lwmod@divisor& (0+255),w,b
 18370  005238  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18371  00523A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18372  00523C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18373  00523E  A0D8               	btfss	status,0,c
 18374  005240  D004               	goto	l2663
 18375                           
 18376                           ; BSR set to: 0
 18377  005242  5162               	movf	___lwmod@divisor& (0+255),w,b
 18378  005244  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18379  005246  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18380  005248  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18381  00524A                     l2663:
 18382                           
 18383                           ; BSR set to: 0
 18384                           
 18385                           ; BSR set to: 0
 18386  00524A  90D8               	bcf	status,0,c
 18387  00524C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18388  00524E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18389                           
 18390                           ; BSR set to: 0
 18391  005250  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18392  005252  D7F1               	goto	u8660
 18393  005254                     l2664:
 18394                           
 18395                           ; BSR set to: 0
 18396                           
 18397                           ; BSR set to: 0
 18398  005254  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18399  005258  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18400                           
 18401                           ; BSR set to: 0
 18402  00525C  0012               	return		;funcret
 18403  00525E                     __end_of___lwmod:
 18404                           	opt stack 0
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           intcon	equ	0xFF2
 18412                           intcon3	equ	0xFF0
 18413                           postinc0	equ	0xFEE
 18414                           wreg	equ	0xFE8
 18415                           indf1	equ	0xFE7
 18416                           postdec1	equ	0xFE5
 18417                           fsr1h	equ	0xFE2
 18418                           fsr1l	equ	0xFE1
 18419                           indf2	equ	0xFDF
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function ___almod *****************
 18425 ;; Defined at:
 18426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  dividend        4    0[BANK0 ] long 
 18429 ;;  divisor         4    4[BANK0 ] long 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  sign            1    9[BANK0 ] unsigned char 
 18432 ;;  counter         1    8[BANK0 ] unsigned char 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  4    0[BANK0 ] long 
 18435 ;; Registers used:
 18436 ;;		wreg, status,2, status,0
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18442 ;;      Params:         0       8       0       0       0       0       0       0       0
 18443 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18445 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18446 ;;Total ram usage:       10 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:   11
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		_TMRapp_Handler
 18453 ;; This function uses a non-reentrant model
 18454 ;;
 18455                           
 18456                           	psect	text60
 18457  00410A                     __ptext60:
 18458                           	opt stack 0
 18459  00410A                     ___almod:
 18460                           	opt stack 17
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;incstack = 0
 18464  00410A  0E00               	movlw	0
 18465  00410C  0100               	movlb	0	; () banked
 18466  00410E  6F69               	movwf	___almod@sign& (0+255),b
 18467                           
 18468                           ; BSR set to: 0
 18469  004110  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18470  004112  D00A               	goto	l2314
 18471                           
 18472                           ; BSR set to: 0
 18473  004114  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18474  004116  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18475  004118  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18476  00411A  6D60               	negf	___almod@dividend& (0+255),b
 18477  00411C  0E00               	movlw	0
 18478  00411E  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18479  004120  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18480  004122  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18481                           
 18482                           ; BSR set to: 0
 18483  004124  0E01               	movlw	1
 18484  004126  6F69               	movwf	___almod@sign& (0+255),b
 18485  004128                     l2314:
 18486                           
 18487                           ; BSR set to: 0
 18488                           
 18489                           ; BSR set to: 0
 18490  004128  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18491  00412A  D008               	goto	l2315
 18492                           
 18493                           ; BSR set to: 0
 18494  00412C  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18495  00412E  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18496  004130  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18497  004132  6D64               	negf	___almod@divisor& (0+255),b
 18498  004134  0E00               	movlw	0
 18499  004136  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18500  004138  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18501  00413A  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18502  00413C                     l2315:
 18503                           
 18504                           ; BSR set to: 0
 18505                           
 18506                           ; BSR set to: 0
 18507  00413C  5164               	movf	___almod@divisor& (0+255),w,b
 18508  00413E  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18509  004140  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18510  004142  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18511  004144  B4D8               	btfsc	status,2,c
 18512  004146  D024               	goto	l2322
 18513                           
 18514                           ; BSR set to: 0
 18515  004148  0E01               	movlw	1
 18516  00414A  6F68               	movwf	___almod@counter& (0+255),b
 18517  00414C  D006               	goto	l2317
 18518  00414E                     
 18519                           ; BSR set to: 0
 18520                           
 18521                           ; BSR set to: 0
 18522  00414E  90D8               	bcf	status,0,c
 18523  004150  3764               	rlcf	___almod@divisor& (0+255),f,b
 18524  004152  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18525  004154  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18526  004156  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18527  004158  2B68               	incf	___almod@counter& (0+255),f,b
 18528  00415A                     l2317:
 18529                           
 18530                           ; BSR set to: 0
 18531                           
 18532                           ; BSR set to: 0
 18533  00415A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18534  00415C  D7F8               	goto	l2318
 18535  00415E                     u8620:
 18536                           
 18537                           ; BSR set to: 0
 18538                           
 18539                           ; BSR set to: 0
 18540                           
 18541                           ; BSR set to: 0
 18542  00415E  5164               	movf	___almod@divisor& (0+255),w,b
 18543  004160  5D60               	subwf	___almod@dividend& (0+255),w,b
 18544  004162  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18545  004164  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18546  004166  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18547  004168  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18548  00416A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18549  00416C  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18550  00416E  A0D8               	btfss	status,0,c
 18551  004170  D008               	goto	l2321
 18552                           
 18553                           ; BSR set to: 0
 18554  004172  5164               	movf	___almod@divisor& (0+255),w,b
 18555  004174  5F60               	subwf	___almod@dividend& (0+255),f,b
 18556  004176  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18557  004178  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18558  00417A  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18559  00417C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18560  00417E  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18561  004180  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18562  004182                     l2321:
 18563                           
 18564                           ; BSR set to: 0
 18565                           
 18566                           ; BSR set to: 0
 18567  004182  90D8               	bcf	status,0,c
 18568  004184  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18569  004186  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18570  004188  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18571  00418A  3364               	rrcf	___almod@divisor& (0+255),f,b
 18572                           
 18573                           ; BSR set to: 0
 18574  00418C  2F68               	decfsz	___almod@counter& (0+255),f,b
 18575  00418E  D7E7               	goto	u8620
 18576  004190                     l2322:
 18577                           
 18578                           ; BSR set to: 0
 18579                           
 18580                           ; BSR set to: 0
 18581                           
 18582                           ; BSR set to: 0
 18583  004190  5169               	movf	___almod@sign& (0+255),w,b
 18584  004192  B4D8               	btfsc	status,2,c
 18585  004194  D008               	goto	l2323
 18586                           
 18587                           ; BSR set to: 0
 18588  004196  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18589  004198  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18590  00419A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18591  00419C  6D60               	negf	___almod@dividend& (0+255),b
 18592  00419E  0E00               	movlw	0
 18593  0041A0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18594  0041A2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18595  0041A4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18596  0041A6                     l2323:
 18597                           
 18598                           ; BSR set to: 0
 18599                           
 18600                           ; BSR set to: 0
 18601  0041A6  C060  F060         	movff	___almod@dividend,?___almod
 18602  0041AA  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18603  0041AE  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18604  0041B2  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18605  0041B6  0012               	return	
 18606  0041B8                     __end_of___almod:
 18607                           	opt stack 0
 18608                           tblptru	equ	0xFF8
 18609                           tblptrh	equ	0xFF7
 18610                           tblptrl	equ	0xFF6
 18611                           tablat	equ	0xFF5
 18612                           prodh	equ	0xFF4
 18613                           prodl	equ	0xFF3
 18614                           intcon	equ	0xFF2
 18615                           intcon3	equ	0xFF0
 18616                           postinc0	equ	0xFEE
 18617                           wreg	equ	0xFE8
 18618                           indf1	equ	0xFE7
 18619                           postdec1	equ	0xFE5
 18620                           fsr1h	equ	0xFE2
 18621                           fsr1l	equ	0xFE1
 18622                           indf2	equ	0xFDF
 18623                           fsr2h	equ	0xFDA
 18624                           fsr2l	equ	0xFD9
 18625                           status	equ	0xFD8
 18626                           
 18627 ;; *************** function _TMRapp_ClearBitFlags *****************
 18628 ;; Defined at:
 18629 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18630 ;; Parameters:    Size  Location     Type
 18631 ;;		None
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;		None
 18634 ;; Return value:  Size  Location     Type
 18635 ;;                  1    wreg      void 
 18636 ;; Registers used:
 18637 ;;		wreg, status,2
 18638 ;; Tracked objects:
 18639 ;;		On entry : 0/0
 18640 ;;		On exit  : 0/0
 18641 ;;		Unchanged: 0/0
 18642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18643 ;;      Params:         0       0       0       0       0       0       0       0       0
 18644 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18645 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18646 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18647 ;;Total ram usage:        0 bytes
 18648 ;; Hardware stack levels used:    1
 18649 ;; Hardware stack levels required when called:   11
 18650 ;; This function calls:
 18651 ;;		Nothing
 18652 ;; This function is called by:
 18653 ;;		_moteHandler
 18654 ;; This function uses a non-reentrant model
 18655 ;;
 18656                           
 18657                           	psect	text61
 18658  005B38                     __ptext61:
 18659                           	opt stack 0
 18660  005B38                     _TMRapp_ClearBitFlags:
 18661                           	opt stack 18
 18662                           
 18663                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;incstack = 0
 18667  005B38  0E00               	movlw	0
 18668  005B3A  0100               	movlb	0	; () banked
 18669  005B3C  6FF8               	movwf	_appTimer& (0+255),b
 18670                           
 18671                           ; BSR set to: 0
 18672  005B3E  0012               	return		;funcret
 18673  005B40                     __end_of_TMRapp_ClearBitFlags:
 18674                           	opt stack 0
 18675                           tblptru	equ	0xFF8
 18676                           tblptrh	equ	0xFF7
 18677                           tblptrl	equ	0xFF6
 18678                           tablat	equ	0xFF5
 18679                           prodh	equ	0xFF4
 18680                           prodl	equ	0xFF3
 18681                           intcon	equ	0xFF2
 18682                           intcon3	equ	0xFF0
 18683                           postinc0	equ	0xFEE
 18684                           wreg	equ	0xFE8
 18685                           indf1	equ	0xFE7
 18686                           postdec1	equ	0xFE5
 18687                           fsr1h	equ	0xFE2
 18688                           fsr1l	equ	0xFE1
 18689                           indf2	equ	0xFDF
 18690                           fsr2h	equ	0xFDA
 18691                           fsr2l	equ	0xFD9
 18692                           status	equ	0xFD8
 18693                           
 18694 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18695 ;; Defined at:
 18696 ;;		line 1027 in file "../Includes/Board/MOTEapp.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  timerTask       1    wreg     struct .
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;  timerTask       1    0[BANK0 ] struct .
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  1    wreg      void 
 18703 ;; Registers used:
 18704 ;;		wreg, status,2, status,0
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18710 ;;      Params:         0       0       0       0       0       0       0       0       0
 18711 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18713 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18714 ;;Total ram usage:        1 bytes
 18715 ;; Hardware stack levels used:    1
 18716 ;; Hardware stack levels required when called:   11
 18717 ;; This function calls:
 18718 ;;		Nothing
 18719 ;; This function is called by:
 18720 ;;		_moteHandler
 18721 ;; This function uses a non-reentrant model
 18722 ;;
 18723                           
 18724                           	psect	text62
 18725  005866                     __ptext62:
 18726                           	opt stack 0
 18727  005866                     _MOTEapp_TimerBasedTask:
 18728                           	opt stack 18
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;incstack = 0
 18732                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18733  005866  0100               	movlb	0	; () banked
 18734  005868  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18735                           
 18736                           ;MOTEapp.c: 1032: if (timerTask.mSecTenTick)
 18737  00586A  0100               	movlb	0	; () banked
 18738  00586C  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18739  00586E  D003               	goto	l605
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;MOTEapp.c: 1033: {
 18743                           ;MOTEapp.c: 1035: m10SecTicker++;
 18744  005870  0101               	movlb	1	; () banked
 18745  005872  4B58               	infsnz	_m10SecTicker& (0+255),f,b
 18746  005874  2B59               	incf	(_m10SecTicker+1)& (0+255),f,b
 18747  005876                     l605:
 18748                           
 18749                           ;MOTEapp.c: 1041: }
 18750                           ;MOTEapp.c: 1042: if (timerTask.SecTick)
 18751                           
 18752                           ; BSR set to: 1
 18753                           
 18754                           ;MOTEapp.c: 1038: {
 18755                           
 18756                           ; BSR set to: 1
 18757                           
 18758                           ; BSR set to: 1
 18759  005876  0100               	movlb	0	; () banked
 18760  005878  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;MOTEapp.c: 1043: {
 18764                           ;MOTEapp.c: 1045: secTicker++;
 18765  00587A  2BF0               	incf	_secTicker& (0+255),f,b
 18766                           
 18767                           ; BSR set to: 0
 18768                           ;MOTEapp.c: 1046: }
 18769                           ;MOTEapp.c: 1047: if (timerTask.MinTick)
 18770                           
 18771                           ; BSR set to: 0
 18772  00587C  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18773  00587E  0012               	return	
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;MOTEapp.c: 1048: {
 18777                           ;MOTEapp.c: 1050: minTicker++;
 18778  005880  0101               	movlb	1	; () banked
 18779  005882  2B63               	incf	_minTicker& (0+255),f,b
 18780                           
 18781                           ; BSR set to: 1
 18782                           
 18783                           ; BSR set to: 1
 18784                           
 18785                           ;MOTEapp.c: 1057: {
 18786                           
 18787                           ; BSR set to: 1
 18788                           
 18789                           ; BSR set to: 1
 18790                           
 18791                           ;MOTEapp.c: 1053: {
 18792                           
 18793                           ; BSR set to: 1
 18794                           
 18795                           ; BSR set to: 1
 18796  005884  0012               	return	
 18797  005886                     __end_of_MOTEapp_TimerBasedTask:
 18798                           	opt stack 0
 18799                           tblptru	equ	0xFF8
 18800                           tblptrh	equ	0xFF7
 18801                           tblptrl	equ	0xFF6
 18802                           tablat	equ	0xFF5
 18803                           prodh	equ	0xFF4
 18804                           prodl	equ	0xFF3
 18805                           intcon	equ	0xFF2
 18806                           intcon3	equ	0xFF0
 18807                           postinc0	equ	0xFEE
 18808                           wreg	equ	0xFE8
 18809                           indf1	equ	0xFE7
 18810                           postdec1	equ	0xFE5
 18811                           fsr1h	equ	0xFE2
 18812                           fsr1l	equ	0xFE1
 18813                           indf2	equ	0xFDF
 18814                           fsr2h	equ	0xFDA
 18815                           fsr2l	equ	0xFD9
 18816                           status	equ	0xFD8
 18817                           
 18818 ;; *************** function _moteApp_clearCommand *****************
 18819 ;; Defined at:
 18820 ;;		line 1259 in file "../Includes/Board/MOTEapp.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;		None
 18823 ;; Auto vars:     Size  Location     Type
 18824 ;;		None
 18825 ;; Return value:  Size  Location     Type
 18826 ;;                  1    wreg      void 
 18827 ;; Registers used:
 18828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18829 ;; Tracked objects:
 18830 ;;		On entry : 0/0
 18831 ;;		On exit  : 0/0
 18832 ;;		Unchanged: 0/0
 18833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18834 ;;      Params:         0       0       0       0       0       0       0       0       0
 18835 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18836 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18837 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18838 ;;Total ram usage:        0 bytes
 18839 ;; Hardware stack levels used:    1
 18840 ;; Hardware stack levels required when called:   14
 18841 ;; This function calls:
 18842 ;;		_sendCommand
 18843 ;; This function is called by:
 18844 ;;		_main
 18845 ;; This function uses a non-reentrant model
 18846 ;;
 18847                           
 18848                           	psect	text63
 18849  005AAC                     __ptext63:
 18850                           	opt stack 0
 18851  005AAC                     _moteApp_clearCommand:
 18852                           	opt stack 16
 18853                           
 18854                           ;MOTEapp.c: 1261: sendCommand("\r\n");
 18855                           
 18856                           ;incstack = 0
 18857  005AAC  0E05               	movlw	low (STR_177+23)
 18858  005AAE  0100               	movlb	0	; () banked
 18859  005AB0  6F61               	movwf	sendCommand@string& (0+255),b
 18860  005AB2  0E7A               	movlw	high (STR_177+23)
 18861  005AB4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18862  005AB6  ECDD  F02A         	call	_sendCommand	;wreg free
 18863  005ABA  0012               	return		;funcret
 18864  005ABC                     __end_of_moteApp_clearCommand:
 18865                           	opt stack 0
 18866                           tblptru	equ	0xFF8
 18867                           tblptrh	equ	0xFF7
 18868                           tblptrl	equ	0xFF6
 18869                           tablat	equ	0xFF5
 18870                           prodh	equ	0xFF4
 18871                           prodl	equ	0xFF3
 18872                           intcon	equ	0xFF2
 18873                           intcon3	equ	0xFF0
 18874                           postinc0	equ	0xFEE
 18875                           wreg	equ	0xFE8
 18876                           indf1	equ	0xFE7
 18877                           postdec1	equ	0xFE5
 18878                           fsr1h	equ	0xFE2
 18879                           fsr1l	equ	0xFE1
 18880                           indf2	equ	0xFDF
 18881                           fsr2h	equ	0xFDA
 18882                           fsr2l	equ	0xFD9
 18883                           status	equ	0xFD8
 18884                           
 18885 ;; *************** function _sendCommand *****************
 18886 ;; Defined at:
 18887 ;;		line 1114 in file "../Includes/Board/MOTEapp.c"
 18888 ;; Parameters:    Size  Location     Type
 18889 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18890 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 18891 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 18892 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 18893 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 18894 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 18895 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 18896 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 18897 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 18898 ;; Auto vars:     Size  Location     Type
 18899 ;;		None
 18900 ;; Return value:  Size  Location     Type
 18901 ;;                  1    wreg      void 
 18902 ;; Registers used:
 18903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18904 ;; Tracked objects:
 18905 ;;		On entry : 0/0
 18906 ;;		On exit  : 0/0
 18907 ;;		Unchanged: 0/0
 18908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18909 ;;      Params:         0       2       0       0       0       0       0       0       0
 18910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18912 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18913 ;;Total ram usage:        2 bytes
 18914 ;; Hardware stack levels used:    1
 18915 ;; Hardware stack levels required when called:   13
 18916 ;; This function calls:
 18917 ;;		_EUSART_Write
 18918 ;;		_EndLine
 18919 ;; This function is called by:
 18920 ;;		_moduleResync
 18921 ;;		_moduleSleep
 18922 ;;		_moteJoiningProcess
 18923 ;;		_MOTEapp_SetDataRateSetting
 18924 ;;		_moteApp_clearCommand
 18925 ;;		_moteApp_toggleLeds
 18926 ;;		_moteApp_setSensorsInput
 18927 ;;		_moteApp_getTempValue
 18928 ;;		_moteApp_getLightValue
 18929 ;; This function uses a non-reentrant model
 18930 ;;
 18931                           
 18932                           	psect	text64
 18933  0055BA                     __ptext64:
 18934                           	opt stack 0
 18935  0055BA                     _sendCommand:
 18936                           	opt stack 14
 18937                           
 18938                           ;MOTEapp.c: 1117: while (*string)
 18939                           
 18940                           ;incstack = 0
 18941  0055BA  D00B               	goto	l636
 18942  0055BC                     
 18943                           ;MOTEapp.c: 1118: {
 18944                           ;MOTEapp.c: 1119: EUSART_Write(*string++);
 18945  0055BC  C061  FFF6         	movff	sendCommand@string,tblptrl
 18946  0055C0  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18947  0055C4                     	if	0	;tblptru may be non-zero
 18948  0055C4                     	endif
 18949  0055C4                     	if	0	;tblptru may be non-zero
 18950  0055C4                     	endif
 18951  0055C4  0008               	tblrd		*
 18952  0055C6  50F5               	movf	tablat,w,c
 18953  0055C8  ECB0  F029         	call	_EUSART_Write
 18954  0055CC  0100               	movlb	0	; () banked
 18955  0055CE  4B61               	infsnz	sendCommand@string& (0+255),f,b
 18956  0055D0  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 18957  0055D2                     l636:
 18958                           
 18959                           ; BSR set to: 0
 18960  0055D2  C061  FFF6         	movff	sendCommand@string,tblptrl
 18961  0055D6  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18962  0055DA                     	if	0	;tblptru may be non-zero
 18963  0055DA                     	endif
 18964  0055DA                     	if	0	;tblptru may be non-zero
 18965  0055DA                     	endif
 18966  0055DA  0008               	tblrd		*
 18967  0055DC  50F5               	movf	tablat,w,c
 18968  0055DE  0900               	iorlw	0
 18969  0055E0  A4D8               	btfss	status,2,c
 18970  0055E2  D7EC               	goto	l637
 18971                           
 18972                           ;MOTEapp.c: 1120: }
 18973                           ;MOTEapp.c: 1121: EndLine();
 18974  0055E4  EC66  F02D         	call	_EndLine	;wreg free
 18975  0055E8  0012               	return		;funcret
 18976  0055EA                     __end_of_sendCommand:
 18977                           	opt stack 0
 18978                           tblptru	equ	0xFF8
 18979                           tblptrh	equ	0xFF7
 18980                           tblptrl	equ	0xFF6
 18981                           tablat	equ	0xFF5
 18982                           prodh	equ	0xFF4
 18983                           prodl	equ	0xFF3
 18984                           intcon	equ	0xFF2
 18985                           intcon3	equ	0xFF0
 18986                           postinc0	equ	0xFEE
 18987                           wreg	equ	0xFE8
 18988                           indf1	equ	0xFE7
 18989                           postdec1	equ	0xFE5
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           indf2	equ	0xFDF
 18993                           fsr2h	equ	0xFDA
 18994                           fsr2l	equ	0xFD9
 18995                           status	equ	0xFD8
 18996                           
 18997 ;; *************** function _EndLine *****************
 18998 ;; Defined at:
 18999 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;		None
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;		None
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19013 ;;      Params:         0       0       0       0       0       0       0       0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19016 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19017 ;;Total ram usage:        0 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:   12
 19020 ;; This function calls:
 19021 ;;		_EUSART_Write
 19022 ;; This function is called by:
 19023 ;;		_sendCommand
 19024 ;;		_sendDataCommand
 19025 ;; This function uses a non-reentrant model
 19026 ;;
 19027                           
 19028                           	psect	text65
 19029  005ACC                     __ptext65:
 19030                           	opt stack 0
 19031  005ACC                     _EndLine:
 19032                           	opt stack 14
 19033                           
 19034                           ;MOTEapp.c: 1110: EUSART_Write(0x0D);
 19035                           
 19036                           ;incstack = 0
 19037  005ACC  0E0D               	movlw	13
 19038  005ACE  ECB0  F029         	call	_EUSART_Write
 19039                           
 19040                           ;MOTEapp.c: 1111: EUSART_Write(0x0A);
 19041  005AD2  0E0A               	movlw	10
 19042  005AD4  ECB0  F029         	call	_EUSART_Write
 19043  005AD8  0012               	return		;funcret
 19044  005ADA                     __end_of_EndLine:
 19045                           	opt stack 0
 19046                           tblptru	equ	0xFF8
 19047                           tblptrh	equ	0xFF7
 19048                           tblptrl	equ	0xFF6
 19049                           tablat	equ	0xFF5
 19050                           prodh	equ	0xFF4
 19051                           prodl	equ	0xFF3
 19052                           intcon	equ	0xFF2
 19053                           intcon3	equ	0xFF0
 19054                           postinc0	equ	0xFEE
 19055                           wreg	equ	0xFE8
 19056                           indf1	equ	0xFE7
 19057                           postdec1	equ	0xFE5
 19058                           fsr1h	equ	0xFE2
 19059                           fsr1l	equ	0xFE1
 19060                           indf2	equ	0xFDF
 19061                           fsr2h	equ	0xFDA
 19062                           fsr2l	equ	0xFD9
 19063                           status	equ	0xFD8
 19064                           
 19065 ;; *************** function _USBapp_handlerState *****************
 19066 ;; Defined at:
 19067 ;;		line 78 in file "../Includes/Board/USBapp.c"
 19068 ;; Parameters:    Size  Location     Type
 19069 ;;  state           1    wreg     enum E5833
 19070 ;; Auto vars:     Size  Location     Type
 19071 ;;  state           1    0[BANK0 ] enum E5833
 19072 ;; Return value:  Size  Location     Type
 19073 ;;                  1    wreg      void 
 19074 ;; Registers used:
 19075 ;;		wreg
 19076 ;; Tracked objects:
 19077 ;;		On entry : 0/0
 19078 ;;		On exit  : 0/0
 19079 ;;		Unchanged: 0/0
 19080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19081 ;;      Params:         0       0       0       0       0       0       0       0       0
 19082 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19084 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19085 ;;Total ram usage:        1 bytes
 19086 ;; Hardware stack levels used:    1
 19087 ;; Hardware stack levels required when called:   11
 19088 ;; This function calls:
 19089 ;;		Nothing
 19090 ;; This function is called by:
 19091 ;;		_main
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           	psect	text66
 19096  005B12                     __ptext66:
 19097                           	opt stack 0
 19098  005B12                     _USBapp_handlerState:
 19099                           	opt stack 19
 19100                           
 19101                           ;incstack = 0
 19102                           ;USBapp_handlerState@state stored from wreg
 19103  005B12  0100               	movlb	0	; () banked
 19104  005B14  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 19105                           
 19106                           ;USBapp.c: 80: usbState = state;
 19107  005B16  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 19108  005B1A  0012               	return		;funcret
 19109  005B1C                     __end_of_USBapp_handlerState:
 19110                           	opt stack 0
 19111                           tblptru	equ	0xFF8
 19112                           tblptrh	equ	0xFF7
 19113                           tblptrl	equ	0xFF6
 19114                           tablat	equ	0xFF5
 19115                           prodh	equ	0xFF4
 19116                           prodl	equ	0xFF3
 19117                           intcon	equ	0xFF2
 19118                           intcon3	equ	0xFF0
 19119                           postinc0	equ	0xFEE
 19120                           wreg	equ	0xFE8
 19121                           indf1	equ	0xFE7
 19122                           postdec1	equ	0xFE5
 19123                           fsr1h	equ	0xFE2
 19124                           fsr1l	equ	0xFE1
 19125                           indf2	equ	0xFDF
 19126                           fsr2h	equ	0xFDA
 19127                           fsr2l	equ	0xFD9
 19128                           status	equ	0xFD8
 19129                           
 19130 ;; *************** function _USBapp_Handler *****************
 19131 ;; Defined at:
 19132 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;		None
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;  buttonPress     1   23[BANK0 ] enum E5867
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  1    wreg      void 
 19139 ;; Registers used:
 19140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19141 ;; Tracked objects:
 19142 ;;		On entry : 0/0
 19143 ;;		On exit  : 0/0
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19146 ;;      Params:         0       0       0       0       0       0       0       0       0
 19147 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19148 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19149 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19150 ;;Total ram usage:        1 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; Hardware stack levels required when called:   16
 19153 ;; This function calls:
 19154 ;;		_USBapp_DeviceCdcEmulatorHandler
 19155 ;;		_oled_clear
 19156 ;;		_oled_putString
 19157 ;;		_service_pushbutton
 19158 ;; This function is called by:
 19159 ;;		_main
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           	psect	text67
 19164  003FA6                     __ptext67:
 19165                           	opt stack 0
 19166  003FA6                     _USBapp_Handler:
 19167                           	opt stack 14
 19168                           
 19169                           ;USBapp.c: 90: {
 19170                           ;USBapp.c: 91: switch(usbState)
 19171                           
 19172                           ;incstack = 0
 19173                           ;USBapp.c: 89: do
 19174  003FA6  D03E               	goto	l845
 19175  003FA8                     
 19176                           ;USBapp.c: 94: while(1);
 19177  003FA8  D7FF               	goto	l846
 19178  003FAA                     
 19179                           ;USBapp.c: 98: oled_clear();
 19180  003FAA  EC8E  F02C         	call	_oled_clear	;wreg free
 19181                           
 19182                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19183  003FAE  0E10               	movlw	low STR_187
 19184  003FB0  0100               	movlb	0	; () banked
 19185  003FB2  6F72               	movwf	oled_putString@string& (0+255),b
 19186  003FB4  0E7F               	movlw	high STR_187
 19187  003FB6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19188  003FB8  0E01               	movlw	1
 19189  003FBA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19190  003FBC  0E00               	movlw	0
 19191  003FBE  6F75               	movwf	oled_putString@start_page& (0+255),b
 19192  003FC0  EC27  F026         	call	_oled_putString	;wreg free
 19193                           
 19194                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19195  003FC4  0E61               	movlw	low STR_188
 19196  003FC6  0100               	movlb	0	; () banked
 19197  003FC8  6F72               	movwf	oled_putString@string& (0+255),b
 19198  003FCA  0E7F               	movlw	high STR_188
 19199  003FCC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19200  003FCE  0E02               	movlw	2
 19201  003FD0  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19202  003FD2  0E01               	movlw	1
 19203  003FD4  6F75               	movwf	oled_putString@start_page& (0+255),b
 19204  003FD6  EC27  F026         	call	_oled_putString	;wreg free
 19205                           
 19206                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19207  003FDA  0E28               	movlw	low STR_189
 19208  003FDC  0100               	movlb	0	; () banked
 19209  003FDE  6F72               	movwf	oled_putString@string& (0+255),b
 19210  003FE0  0E7E               	movlw	high STR_189
 19211  003FE2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19212  003FE4  0E00               	movlw	0
 19213  003FE6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19214  003FE8  0E02               	movlw	2
 19215  003FEA  6F75               	movwf	oled_putString@start_page& (0+255),b
 19216  003FEC  EC27  F026         	call	_oled_putString	;wreg free
 19217                           
 19218                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19219  003FF0  0E01               	movlw	1
 19220  003FF2  0100               	movlb	0	; () banked
 19221  003FF4  D005               	goto	L16
 19222  003FF6                     
 19223                           ; BSR set to: 0
 19224                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19225                           
 19226                           ; BSR set to: 0
 19227  003FF6  0E20               	movlw	32
 19228  003FF8  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19229  003FFA  D001               	goto	l853
 19230  003FFC  D01F               	goto	l850
 19231  003FFE                     l853:
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;USBapp.c: 111: }
 19235                           ;USBapp.c: 112: usbState = USB_CDC;
 19236                           
 19237                           ; BSR set to: 0
 19238  003FFE  0E02               	movlw	2
 19239  004000                     L16:
 19240  004000  6FEA               	movwf	_usbState& (0+255),b
 19241                           
 19242                           ;USBapp.c: 113: break;
 19243  004002  D01C               	goto	l850
 19244  004004                     
 19245                           ; BSR set to: 0
 19246                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19247                           
 19248                           ; BSR set to: 0
 19249  004004  ECBC  F01A         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19250                           
 19251                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19252  004008  0E03               	movlw	3
 19253  00400A  0100               	movlb	0	; () banked
 19254  00400C  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19258  00400E  ECF0  F025         	call	_service_pushbutton	;wreg free
 19259  004012  0100               	movlb	0	; () banked
 19260  004014  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19261                           
 19262                           ; BSR set to: 0
 19263                           ;USBapp.c: 122: if (buttonPress != Released )
 19264  004016  0E03               	movlw	3
 19265  004018  1977               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19266  00401A  B4D8               	btfsc	status,2,c
 19267  00401C  D00F               	goto	l850
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;USBapp.c: 123: {
 19271                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19272  00401E  0E02               	movlw	2
 19273  004020  6FF9               	movwf	_exitUSB& (0+255),b
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;USBapp.c: 127: }
 19277                           
 19278                           ; BSR set to: 0
 19279                           ;USBapp.c: 125: }
 19280                           ;USBapp.c: 126: break;
 19281  004022  D00C               	goto	l850
 19282  004024                     l845:
 19283                           
 19284                           ; BSR set to: 0
 19285  004024  0100               	movlb	0	; () banked
 19286  004026  51EA               	movf	_usbState& (0+255),w,b
 19287                           
 19288                           ; Switch size 1, requested type "space"
 19289                           ; Number of cases is 3, Range of values is 0 to 2
 19290                           ; switch strategies available:
 19291                           ; Name         Instructions Cycles
 19292                           ; simple_byte           10     6 (average)
 19293                           ;	Chosen strategy is simple_byte
 19294  004028  0A00               	xorlw	0	; case 0
 19295  00402A  B4D8               	btfsc	status,2,c
 19296  00402C  D7BE               	goto	l851
 19297  00402E  0A01               	xorlw	1	; case 1
 19298  004030  B4D8               	btfsc	status,2,c
 19299  004032  D7E1               	goto	l852
 19300  004034  0A03               	xorlw	3	; case 2
 19301  004036  B4D8               	btfsc	status,2,c
 19302  004038  D7E5               	goto	l855
 19303  00403A  D7B6               	goto	l846
 19304  00403C                     l850:
 19305                           
 19306                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19307                           
 19308                           ; BSR set to: 0
 19309  00403C  A080               	btfss	3968,0,c	;volatile
 19310  00403E  D004               	goto	u10090
 19311  004040  0100               	movlb	0	; () banked
 19312  004042  51F9               	movf	_exitUSB& (0+255),w,b
 19313  004044  B4D8               	btfsc	status,2,c
 19314  004046  D7EE               	goto	l845
 19315  004048                     u10090:
 19316                           
 19317                           ;USBapp.c: 129: __nop();
 19318                           
 19319                           ; BSR set to: 0
 19320  004048  F000               	nop	
 19321                           
 19322                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19323  00404A  0E02               	movlw	2
 19324  00404C  0100               	movlb	0	; () banked
 19325  00404E  19F9               	xorwf	_exitUSB& (0+255),w,b
 19326  004050  B4D8               	btfsc	status,2,c
 19327  004052  0012               	return	
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;USBapp.c: 131: exitUSB = NO_USB;
 19331  004054  0E00               	movlw	0
 19332  004056  6FF9               	movwf	_exitUSB& (0+255),b
 19333  004058  0012               	return	
 19334  00405A                     __end_of_USBapp_Handler:
 19335                           	opt stack 0
 19336                           tblptru	equ	0xFF8
 19337                           tblptrh	equ	0xFF7
 19338                           tblptrl	equ	0xFF6
 19339                           tablat	equ	0xFF5
 19340                           prodh	equ	0xFF4
 19341                           prodl	equ	0xFF3
 19342                           intcon	equ	0xFF2
 19343                           intcon3	equ	0xFF0
 19344                           postinc0	equ	0xFEE
 19345                           wreg	equ	0xFE8
 19346                           indf1	equ	0xFE7
 19347                           postdec1	equ	0xFE5
 19348                           fsr1h	equ	0xFE2
 19349                           fsr1l	equ	0xFE1
 19350                           indf2	equ	0xFDF
 19351                           fsr2h	equ	0xFDA
 19352                           fsr2l	equ	0xFD9
 19353                           status	equ	0xFD8
 19354                           
 19355 ;; *************** function _service_pushbutton *****************
 19356 ;; Defined at:
 19357 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19358 ;; Parameters:    Size  Location     Type
 19359 ;;		None
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  bs              1    0[BANK0 ] enum E5748
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      enum E5836
 19364 ;; Registers used:
 19365 ;;		wreg, status,2, status,0
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0
 19372 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19374 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19375 ;;Total ram usage:        1 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:   11
 19378 ;; This function calls:
 19379 ;;		Nothing
 19380 ;; This function is called by:
 19381 ;;		_moteHandler
 19382 ;;		_USBapp_Handler
 19383 ;; This function uses a non-reentrant model
 19384 ;;
 19385                           
 19386                           	psect	text68
 19387  004BE0                     __ptext68:
 19388                           	opt stack 0
 19389  004BE0                     _service_pushbutton:
 19390                           	opt stack 18
 19391                           
 19392                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19393                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19394                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;incstack = 0
 19398  004BE0  0E00               	movlw	0
 19399  004BE2  0100               	movlb	0	; () banked
 19400  004BE4  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19401                           
 19402                           ; BSR set to: 0
 19403                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19404  004BE6  A281               	btfss	3969,1,c	;volatile
 19405  004BE8  D002               	goto	u8900
 19406                           
 19407                           ; BSR set to: 0
 19408  004BEA  B081               	btfsc	3969,0,c	;volatile
 19409  004BEC  D01A               	goto	l938
 19410  004BEE                     u8900:
 19411                           
 19412                           ; BSR set to: 0
 19413                           ;buttons.c: 56: {
 19414                           ;buttons.c: 57: ++PB_Timer;
 19415                           
 19416                           ; BSR set to: 0
 19417  004BEE  0E01               	movlw	1
 19418  004BF0  0101               	movlb	1	; () banked
 19419  004BF2  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19420  004BF4  0E00               	movlw	0
 19421  004BF6  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19422  004BF8  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19423  004BFA  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19424                           
 19425                           ;buttons.c: 61: if (PB_Timer == 55)
 19426  004BFC  0E37               	movlw	55
 19427  004BFE  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19428  004C00  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19429  004C02  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19430  004C04  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19431  004C06  A4D8               	btfss	status,2,c
 19432  004C08  D009               	goto	l941
 19433                           
 19434                           ; BSR set to: 1
 19435                           ;buttons.c: 62: {
 19436                           ;buttons.c: 63: Release_Timer = 0;
 19437  004C0A  0E00               	movlw	0
 19438  004C0C  0100               	movlb	0	; () banked
 19439  004C0E  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19443  004C10  B281               	btfsc	3969,1,c	;volatile
 19444  004C12  D002               	goto	l942
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;buttons.c: 66: {
 19448                           ;buttons.c: 67: bs = ShortPress1;
 19449  004C14  0E01               	movlw	1
 19450  004C16  D018               	goto	L19
 19451  004C18                     l942:
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;buttons.c: 69: else
 19455                           ;buttons.c: 70: {
 19456                           ;buttons.c: 71: bs = ShortPress2;
 19457                           
 19458                           ; BSR set to: 0
 19459  004C18  0E02               	movlw	2
 19460  004C1A  D016               	goto	L19
 19461  004C1C                     l941:
 19462                           
 19463                           ;buttons.c: 74: else
 19464                           ;buttons.c: 75: {
 19465                           ;buttons.c: 76: bs = NoButton;
 19466                           
 19467                           ; BSR set to: 0
 19468  004C1C  0E00               	movlw	0
 19469  004C1E  0100               	movlb	0	; () banked
 19470  004C20  D013               	goto	L19
 19471  004C22                     l938:
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;buttons.c: 79: else
 19475                           ;buttons.c: 80: {
 19476                           ;buttons.c: 81: if (Release_Timer == 20)
 19477                           
 19478                           ; BSR set to: 0
 19479  004C22  0E14               	movlw	20
 19480  004C24  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19481  004C26  A4D8               	btfss	status,2,c
 19482  004C28  D00D               	goto	l946
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;buttons.c: 82: {
 19486                           ;buttons.c: 83: PB_Timer = 0;
 19487  004C2A  0E00               	movlw	0
 19488  004C2C  0101               	movlb	1	; () banked
 19489  004C2E  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19490  004C30  0E00               	movlw	0
 19491  004C32  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19492  004C34  0E00               	movlw	0
 19493  004C36  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19494  004C38  0E00               	movlw	0
 19495  004C3A  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19496                           
 19497                           ;buttons.c: 84: Release_Timer = 0;
 19498  004C3C  0E00               	movlw	0
 19499  004C3E  0100               	movlb	0	; () banked
 19500  004C40  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19501                           
 19502                           ;buttons.c: 85: }
 19503  004C42  D001               	goto	l947
 19504  004C44                     l946:
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;buttons.c: 86: else
 19508                           ;buttons.c: 87: {
 19509                           ;buttons.c: 88: Release_Timer++;
 19510                           
 19511                           ; BSR set to: 0
 19512  004C44  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19513  004C46                     l947:
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;buttons.c: 89: }
 19517                           ;buttons.c: 90: bs = Released;
 19518                           
 19519                           ; BSR set to: 0
 19520  004C46  0E03               	movlw	3
 19521  004C48                     L19:
 19522  004C48  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;buttons.c: 91: }
 19526                           ;buttons.c: 93: return bs;
 19527                           
 19528                           ; BSR set to: 0
 19529  004C4A  5160               	movf	service_pushbutton@bs& (0+255),w,b
 19530  004C4C  0012               	return	
 19531  004C4E                     __end_of_service_pushbutton:
 19532                           	opt stack 0
 19533                           tblptru	equ	0xFF8
 19534                           tblptrh	equ	0xFF7
 19535                           tblptrl	equ	0xFF6
 19536                           tablat	equ	0xFF5
 19537                           prodh	equ	0xFF4
 19538                           prodl	equ	0xFF3
 19539                           intcon	equ	0xFF2
 19540                           intcon3	equ	0xFF0
 19541                           postinc0	equ	0xFEE
 19542                           wreg	equ	0xFE8
 19543                           indf1	equ	0xFE7
 19544                           postdec1	equ	0xFE5
 19545                           fsr1h	equ	0xFE2
 19546                           fsr1l	equ	0xFE1
 19547                           indf2	equ	0xFDF
 19548                           fsr2h	equ	0xFDA
 19549                           fsr2l	equ	0xFD9
 19550                           status	equ	0xFD8
 19551                           
 19552 ;; *************** function _oled_putString *****************
 19553 ;; Defined at:
 19554 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19555 ;; Parameters:    Size  Location     Type
 19556 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 19557 ;;		 -> buffer_rx(128), oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), 
 19558 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 19559 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 19560 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 19561 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 19562 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 19563 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 19564 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 19565 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 19566 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 19567 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 19568 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 19569 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 19570 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 19571 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 19572 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 19573 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 19574 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 19575 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 19576 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 19577 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 19578 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 19579 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 19580 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 19581 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 19582 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 19583 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 19584 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 19585 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 19586 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 19587 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 19588 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 19589 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 19590 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 19591 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 19592 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 19593 ;;  station_dot     1   20[BANK0 ] unsigned char 
 19594 ;;  start_page      1   21[BANK0 ] unsigned char 
 19595 ;; Auto vars:     Size  Location     Type
 19596 ;;  index           1   22[BANK0 ] unsigned char 
 19597 ;; Return value:  Size  Location     Type
 19598 ;;                  1    wreg      void 
 19599 ;; Registers used:
 19600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19601 ;; Tracked objects:
 19602 ;;		On entry : 0/0
 19603 ;;		On exit  : 0/0
 19604 ;;		Unchanged: 0/0
 19605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19606 ;;      Params:         0       4       0       0       0       0       0       0       0
 19607 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19609 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19610 ;;Total ram usage:        5 bytes
 19611 ;; Hardware stack levels used:    1
 19612 ;; Hardware stack levels required when called:   14
 19613 ;; This function calls:
 19614 ;;		_oled_putChar
 19615 ;; This function is called by:
 19616 ;;		_main
 19617 ;;		_test_oled
 19618 ;;		_test_switch
 19619 ;;		_test_comms
 19620 ;;		_test_leds
 19621 ;;		_moteHandler
 19622 ;;		_moteJoiningProcess
 19623 ;;		_moteRunningProcess
 19624 ;;		_moteApp_testSensors
 19625 ;;		_USBapp_Handler
 19626 ;;		_oled_putUint8
 19627 ;;		_oled_putint8
 19628 ;;		_test_adc
 19629 ;;		_test_rf
 19630 ;;		_oled_putUint16
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text69
 19635  004C4E                     __ptext69:
 19636                           	opt stack 0
 19637  004C4E                     _oled_putString:
 19638                           	opt stack 14
 19639                           
 19640                           ;SSD1306oLED.c: 333: uint8_t index;
 19641                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19642                           
 19643                           ; BSR set to: 0
 19644                           ;incstack = 0
 19645  004C4E  C074  F076         	movff	oled_putString@station_dot,oled_putString@index
 19646  004C52  0E0F               	movlw	15
 19647  004C54  0100               	movlb	0	; () banked
 19648  004C56  6576               	cpfsgt	oled_putString@index& (0+255),b
 19649  004C58  D001               	goto	l1045
 19650  004C5A  0012               	return	
 19651  004C5C                     l1045:
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;SSD1306oLED.c: 335: {
 19655                           ;SSD1306oLED.c: 336: if (*string != 0)
 19656                           
 19657                           ; BSR set to: 0
 19658  004C5C  C072  FFF6         	movff	oled_putString@string,tblptrl
 19659  004C60  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19660  004C64  6AF8               	clrf	tblptru,c
 19661  004C66  0E07               	movlw	(high __ramtop+-1)
 19662  004C68  64F7               	cpfsgt	tblptrh,c
 19663  004C6A  D003               	bra	u6467
 19664  004C6C  0008               	tblrd		*
 19665  004C6E  50F5               	movf	tablat,w,c
 19666  004C70  D005               	bra	u6460
 19667  004C72                     u6467:
 19668  004C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 19669  004C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 19670  004C7A  50EF               	movf	indf0,w,c
 19671  004C7C                     u6460:
 19672  004C7C  0900               	iorlw	0
 19673  004C7E  B4D8               	btfsc	status,2,c
 19674  004C80  0012               	return	
 19675                           
 19676                           ;SSD1306oLED.c: 337: {
 19677                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19678  004C82  C076  F062         	movff	oled_putString@index,oled_putChar@station_dot
 19679  004C86  C075  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 19680  004C8A  C072  FFF6         	movff	oled_putString@string,tblptrl
 19681  004C8E  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19682  004C92  6AF8               	clrf	tblptru,c
 19683  004C94  0E07               	movlw	(high __ramtop+-1)
 19684  004C96  64F7               	cpfsgt	tblptrh,c
 19685  004C98  D003               	bra	u6487
 19686  004C9A  0008               	tblrd		*
 19687  004C9C  50F5               	movf	tablat,w,c
 19688  004C9E  D005               	bra	u6480
 19689  004CA0                     u6487:
 19690  004CA0  CFF6 FFE9          	movff	tblptrl,fsr0l
 19691  004CA4  CFF7 FFEA          	movff	tblptrh,fsr0h
 19692  004CA8  50EF               	movf	indf0,w,c
 19693  004CAA                     u6480:
 19694  004CAA  EC05  F024         	call	_oled_putChar
 19695                           
 19696                           ;SSD1306oLED.c: 339: *string++;
 19697  004CAE  0100               	movlb	0	; () banked
 19698  004CB0  4B72               	infsnz	oled_putString@string& (0+255),f,b
 19699  004CB2  2B73               	incf	(oled_putString@string+1)& (0+255),f,b
 19700                           
 19701                           ; BSR set to: 0
 19702                           
 19703                           ; BSR set to: 0
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;SSD1306oLED.c: 341: else
 19707                           ;SSD1306oLED.c: 342: {
 19708                           ;SSD1306oLED.c: 343: break;
 19709                           
 19710                           ;SSD1306oLED.c: 340: }
 19711  004CB4  2B76               	incf	oled_putString@index& (0+255),f,b
 19712                           
 19713                           ; BSR set to: 0
 19714  004CB6  0E0F               	movlw	15
 19715  004CB8  D7CE               	goto	L20
 19716  004CBA                     __end_of_oled_putString:
 19717                           	opt stack 0
 19718                           tblptru	equ	0xFF8
 19719                           tblptrh	equ	0xFF7
 19720                           tblptrl	equ	0xFF6
 19721                           tablat	equ	0xFF5
 19722                           prodh	equ	0xFF4
 19723                           prodl	equ	0xFF3
 19724                           intcon	equ	0xFF2
 19725                           intcon3	equ	0xFF0
 19726                           indf0	equ	0xFEF
 19727                           postinc0	equ	0xFEE
 19728                           fsr0h	equ	0xFEA
 19729                           fsr0l	equ	0xFE9
 19730                           wreg	equ	0xFE8
 19731                           indf1	equ	0xFE7
 19732                           postdec1	equ	0xFE5
 19733                           fsr1h	equ	0xFE2
 19734                           fsr1l	equ	0xFE1
 19735                           indf2	equ	0xFDF
 19736                           fsr2h	equ	0xFDA
 19737                           fsr2l	equ	0xFD9
 19738                           status	equ	0xFD8
 19739                           
 19740 ;; *************** function _oled_clear *****************
 19741 ;; Defined at:
 19742 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;                  1    wreg      void 
 19749 ;; Registers used:
 19750 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 0/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19759 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19760 ;;Total ram usage:        0 bytes
 19761 ;; Hardware stack levels used:    1
 19762 ;; Hardware stack levels required when called:   15
 19763 ;; This function calls:
 19764 ;;		_oled_clearRow
 19765 ;; This function is called by:
 19766 ;;		_main
 19767 ;;		_test_powerup
 19768 ;;		_test_oled
 19769 ;;		_test_switch
 19770 ;;		_moteHandler
 19771 ;;		_moteJoiningProcess
 19772 ;;		_moteRunningProcess
 19773 ;;		_moteApp_testSensors
 19774 ;;		_USBapp_Handler
 19775 ;;		_oled_init
 19776 ;;		_test_adc
 19777 ;;		_test_rf
 19778 ;; This function uses a non-reentrant model
 19779 ;;
 19780                           
 19781                           	psect	text70
 19782  00591C                     __ptext70:
 19783                           	opt stack 0
 19784  00591C                     _oled_clear:
 19785                           	opt stack 13
 19786                           
 19787                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19788                           
 19789                           ;incstack = 0
 19790  00591C  0E00               	movlw	0
 19791  00591E  ECFE  F02B         	call	_oled_clearRow
 19792                           
 19793                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19794  005922  0E01               	movlw	1
 19795  005924  ECFE  F02B         	call	_oled_clearRow
 19796                           
 19797                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19798  005928  0E02               	movlw	2
 19799  00592A  ECFE  F02B         	call	_oled_clearRow
 19800                           
 19801                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19802  00592E  0E03               	movlw	3
 19803  005930  ECFE  F02B         	call	_oled_clearRow
 19804  005934  0012               	return		;funcret
 19805  005936                     __end_of_oled_clear:
 19806                           	opt stack 0
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           intcon3	equ	0xFF0
 19815                           indf0	equ	0xFEF
 19816                           postinc0	equ	0xFEE
 19817                           fsr0h	equ	0xFEA
 19818                           fsr0l	equ	0xFE9
 19819                           wreg	equ	0xFE8
 19820                           indf1	equ	0xFE7
 19821                           postdec1	equ	0xFE5
 19822                           fsr1h	equ	0xFE2
 19823                           fsr1l	equ	0xFE1
 19824                           indf2	equ	0xFDF
 19825                           fsr2h	equ	0xFDA
 19826                           fsr2l	equ	0xFD9
 19827                           status	equ	0xFD8
 19828                           
 19829 ;; *************** function _oled_clearRow *****************
 19830 ;; Defined at:
 19831 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 19832 ;; Parameters:    Size  Location     Type
 19833 ;;  page            1    wreg     unsigned char 
 19834 ;; Auto vars:     Size  Location     Type
 19835 ;;  page            1   12[BANK0 ] unsigned char 
 19836 ;;  index           1   13[BANK0 ] unsigned char 
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  1    wreg      void 
 19839 ;; Registers used:
 19840 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0
 19847 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19849 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19850 ;;Total ram usage:        2 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; Hardware stack levels required when called:   14
 19853 ;; This function calls:
 19854 ;;		_oled_putChar
 19855 ;; This function is called by:
 19856 ;;		_oled_clear
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           	psect	text71
 19861  0057FC                     __ptext71:
 19862                           	opt stack 0
 19863  0057FC                     _oled_clearRow:
 19864                           	opt stack 13
 19865                           
 19866                           ;incstack = 0
 19867                           ;oled_clearRow@page stored from wreg
 19868  0057FC  0100               	movlb	0	; () banked
 19869  0057FE  6F6C               	movwf	oled_clearRow@page& (0+255),b
 19870                           
 19871                           ;SSD1306oLED.c: 358: uint8_t index;
 19872                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 19873  005800  0E00               	movlw	0
 19874  005802  0100               	movlb	0	; () banked
 19875  005804  6F6D               	movwf	oled_clearRow@index& (0+255),b
 19876  005806                     l8008:
 19877                           
 19878                           ; BSR set to: 0
 19879  005806  0E0F               	movlw	15
 19880  005808  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 19881  00580A  D001               	goto	l1055
 19882  00580C  0012               	return	
 19883  00580E                     l1055:
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;SSD1306oLED.c: 361: {
 19887                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 19888                           
 19889                           ; BSR set to: 0
 19890  00580E  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 19891  005812  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 19892  005816  0E20               	movlw	32
 19893  005818  EC05  F024         	call	_oled_putChar
 19894  00581C  0100               	movlb	0	; () banked
 19895  00581E  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 19896  005820  D7F2               	goto	l8008
 19897  005822                     __end_of_oled_clearRow:
 19898                           	opt stack 0
 19899                           tblptru	equ	0xFF8
 19900                           tblptrh	equ	0xFF7
 19901                           tblptrl	equ	0xFF6
 19902                           tablat	equ	0xFF5
 19903                           prodh	equ	0xFF4
 19904                           prodl	equ	0xFF3
 19905                           intcon	equ	0xFF2
 19906                           intcon3	equ	0xFF0
 19907                           indf0	equ	0xFEF
 19908                           postinc0	equ	0xFEE
 19909                           fsr0h	equ	0xFEA
 19910                           fsr0l	equ	0xFE9
 19911                           wreg	equ	0xFE8
 19912                           indf1	equ	0xFE7
 19913                           postdec1	equ	0xFE5
 19914                           fsr1h	equ	0xFE2
 19915                           fsr1l	equ	0xFE1
 19916                           indf2	equ	0xFDF
 19917                           fsr2h	equ	0xFDA
 19918                           fsr2l	equ	0xFD9
 19919                           status	equ	0xFD8
 19920                           
 19921 ;; *************** function _oled_putChar *****************
 19922 ;; Defined at:
 19923 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 19924 ;; Parameters:    Size  Location     Type
 19925 ;;  k               1    wreg     unsigned char 
 19926 ;;  station_dot     1    2[BANK0 ] unsigned char 
 19927 ;;  start_page      1    3[BANK0 ] unsigned char 
 19928 ;; Auto vars:     Size  Location     Type
 19929 ;;  k               1   10[BANK0 ] unsigned char 
 19930 ;;  index           1   11[BANK0 ] unsigned char 
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      void 
 19933 ;; Registers used:
 19934 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19940 ;;      Params:         0       2       0       0       0       0       0       0       0
 19941 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19942 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19943 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19944 ;;Total ram usage:       10 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:   13
 19947 ;; This function calls:
 19948 ;;		_Set_Column_Address
 19949 ;;		_Set_Page_Address
 19950 ;;		_oled_writeData
 19951 ;; This function is called by:
 19952 ;;		_moteApp_testSensors
 19953 ;;		_oled_putString
 19954 ;;		_oled_clearRow
 19955 ;;		_test_adc
 19956 ;; This function uses a non-reentrant model
 19957 ;;
 19958                           
 19959                           	psect	text72
 19960  00480A                     __ptext72:
 19961                           	opt stack 0
 19962  00480A                     _oled_putChar:
 19963                           	opt stack 14
 19964                           
 19965                           ; BSR set to: 0
 19966                           ;incstack = 0
 19967                           ;oled_putChar@k stored from wreg
 19968  00480A  0100               	movlb	0	; () banked
 19969  00480C  6F6A               	movwf	oled_putChar@k& (0+255),b
 19970                           
 19971                           ;SSD1306oLED.c: 320: uint8_t index;
 19972                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 19973  00480E  0100               	movlb	0	; () banked
 19974  004810  5163               	movf	oled_putChar@start_page& (0+255),w,b
 19975  004812  EC0D  F02D         	call	_Set_Page_Address
 19976                           
 19977                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 19978  004816  0100               	movlb	0	; () banked
 19979  004818  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 19980  00481A  0D08               	mullw	8
 19981  00481C  50F3               	movf	prodl,w,c
 19982  00481E  0F04               	addlw	4
 19983  004820  EC72  F02C         	call	_Set_Column_Address
 19984                           
 19985                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 19986  004824  0E00               	movlw	0
 19987  004826  0100               	movlb	0	; () banked
 19988  004828  6F6B               	movwf	oled_putChar@index& (0+255),b
 19989  00482A                     l7858:
 19990                           
 19991                           ; BSR set to: 0
 19992  00482A  0E07               	movlw	7
 19993  00482C  656B               	cpfsgt	oled_putChar@index& (0+255),b
 19994  00482E  D001               	goto	l1040
 19995  004830  0012               	return	
 19996  004832                     l1040:
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;SSD1306oLED.c: 326: {
 20000                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 20001                           
 20002                           ; BSR set to: 0
 20003  004832  516B               	movf	oled_putChar@index& (0+255),w,b
 20004  004834  0D01               	mullw	1
 20005  004836  0E00               	movlw	0
 20006  004838  6F64               	movwf	??_oled_putChar& (0+255),b
 20007  00483A  0EFF               	movlw	255
 20008  00483C  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 20009  00483E  516A               	movf	oled_putChar@k& (0+255),w,b
 20010  004840  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 20011  004842  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 20012  004844  90D8               	bcf	status,0,c
 20013  004846  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20014  004848  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20015  00484A  90D8               	bcf	status,0,c
 20016  00484C  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20017  00484E  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20018  004850  90D8               	bcf	status,0,c
 20019  004852  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20020  004854  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20021  004856  5164               	movf	??_oled_putChar& (0+255),w,b
 20022  004858  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 20023  00485A  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 20024  00485C  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 20025  00485E  C1FA  F068         	movff	_selectedFont,??_oled_putChar+4
 20026  004862  C1FB  F069         	movff	_selectedFont+1,??_oled_putChar+5
 20027  004866  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 20028  004868  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20029  00486A  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 20030  00486C  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20031  00486E  50F3               	movf	prodl,w,c
 20032  004870  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20033  004872  50F4               	movf	prodh,w,c
 20034  004874  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20035  004876  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 20036  00487A  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 20037  00487E                     	if	0	;tblptru may be non-zero
 20038  00487E                     	endif
 20039  00487E                     	if	0	;tblptru may be non-zero
 20040  00487E                     	endif
 20041  00487E  0008               	tblrd		*
 20042  004880  50F5               	movf	tablat,w,c
 20043  004882  ECC2  F02C         	call	_oled_writeData
 20044  004886  0100               	movlb	0	; () banked
 20045  004888  2B6B               	incf	oled_putChar@index& (0+255),f,b
 20046  00488A  D7CF               	goto	l7858
 20047  00488C                     __end_of_oled_putChar:
 20048                           	opt stack 0
 20049                           tblptru	equ	0xFF8
 20050                           tblptrh	equ	0xFF7
 20051                           tblptrl	equ	0xFF6
 20052                           tablat	equ	0xFF5
 20053                           prodh	equ	0xFF4
 20054                           prodl	equ	0xFF3
 20055                           intcon	equ	0xFF2
 20056                           intcon3	equ	0xFF0
 20057                           indf0	equ	0xFEF
 20058                           postinc0	equ	0xFEE
 20059                           fsr0h	equ	0xFEA
 20060                           fsr0l	equ	0xFE9
 20061                           wreg	equ	0xFE8
 20062                           indf1	equ	0xFE7
 20063                           postdec1	equ	0xFE5
 20064                           fsr1h	equ	0xFE2
 20065                           fsr1l	equ	0xFE1
 20066                           indf2	equ	0xFDF
 20067                           fsr2h	equ	0xFDA
 20068                           fsr2l	equ	0xFD9
 20069                           status	equ	0xFD8
 20070                           
 20071 ;; *************** function _oled_writeData *****************
 20072 ;; Defined at:
 20073 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20074 ;; Parameters:    Size  Location     Type
 20075 ;;  data            1    wreg     unsigned char 
 20076 ;; Auto vars:     Size  Location     Type
 20077 ;;  data            1    0[BANK0 ] unsigned char 
 20078 ;; Return value:  Size  Location     Type
 20079 ;;                  1    wreg      void 
 20080 ;; Registers used:
 20081 ;;		wreg
 20082 ;; Tracked objects:
 20083 ;;		On entry : 0/0
 20084 ;;		On exit  : 0/0
 20085 ;;		Unchanged: 0/0
 20086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20087 ;;      Params:         0       0       0       0       0       0       0       0       0
 20088 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20089 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20090 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20091 ;;Total ram usage:        1 bytes
 20092 ;; Hardware stack levels used:    1
 20093 ;; Hardware stack levels required when called:   11
 20094 ;; This function calls:
 20095 ;;		Nothing
 20096 ;; This function is called by:
 20097 ;;		_oled_putChar
 20098 ;; This function uses a non-reentrant model
 20099 ;;
 20100                           
 20101                           	psect	text73
 20102  005984                     __ptext73:
 20103                           	opt stack 0
 20104  005984                     _oled_writeData:
 20105                           	opt stack 15
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;incstack = 0
 20109                           ;oled_writeData@data stored from wreg
 20110  005984  0100               	movlb	0	; () banked
 20111  005986  6F60               	movwf	oled_writeData@data& (0+255),b
 20112                           
 20113                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20114  005988  988A               	bcf	3978,4,c	;volatile
 20115                           
 20116                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20117  00598A  808B               	bsf	3979,0,c	;volatile
 20118                           
 20119                           ;SSD1306oLED.c: 446: LATD=data;
 20120  00598C  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 20121                           
 20122                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20123  005990  928B               	bcf	3979,1,c	;volatile
 20124                           
 20125                           ;SSD1306oLED.c: 448: __nop();
 20126  005992  F000               	nop	
 20127                           
 20128                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20129  005994  828B               	bsf	3979,1,c	;volatile
 20130                           
 20131                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20132  005996  888A               	bsf	3978,4,c	;volatile
 20133  005998  0012               	return	
 20134  00599A                     __end_of_oled_writeData:
 20135                           	opt stack 0
 20136                           tblptru	equ	0xFF8
 20137                           tblptrh	equ	0xFF7
 20138                           tblptrl	equ	0xFF6
 20139                           tablat	equ	0xFF5
 20140                           prodh	equ	0xFF4
 20141                           prodl	equ	0xFF3
 20142                           intcon	equ	0xFF2
 20143                           intcon3	equ	0xFF0
 20144                           indf0	equ	0xFEF
 20145                           postinc0	equ	0xFEE
 20146                           fsr0h	equ	0xFEA
 20147                           fsr0l	equ	0xFE9
 20148                           wreg	equ	0xFE8
 20149                           indf1	equ	0xFE7
 20150                           postdec1	equ	0xFE5
 20151                           fsr1h	equ	0xFE2
 20152                           fsr1l	equ	0xFE1
 20153                           indf2	equ	0xFDF
 20154                           fsr2h	equ	0xFDA
 20155                           fsr2l	equ	0xFD9
 20156                           status	equ	0xFD8
 20157                           
 20158 ;; *************** function _Set_Page_Address *****************
 20159 ;; Defined at:
 20160 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;  address         1    wreg     unsigned char 
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;  address         1    1[BANK0 ] unsigned char 
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  1    wreg      void 
 20167 ;; Registers used:
 20168 ;;		wreg, status,2, status,0, cstack
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/0
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20174 ;;      Params:         0       0       0       0       0       0       0       0       0
 20175 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20177 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20178 ;;Total ram usage:        1 bytes
 20179 ;; Hardware stack levels used:    1
 20180 ;; Hardware stack levels required when called:   12
 20181 ;; This function calls:
 20182 ;;		_oled_writeCommand
 20183 ;; This function is called by:
 20184 ;;		_oled_putChar
 20185 ;; This function uses a non-reentrant model
 20186 ;;
 20187                           
 20188                           	psect	text74
 20189  005A1A                     __ptext74:
 20190                           	opt stack 0
 20191  005A1A                     _Set_Page_Address:
 20192                           	opt stack 14
 20193                           
 20194                           ;incstack = 0
 20195                           ;Set_Page_Address@address stored from wreg
 20196  005A1A  0100               	movlb	0	; () banked
 20197  005A1C  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20198                           
 20199                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20200  005A1E  0100               	movlb	0	; () banked
 20201  005A20  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20202  005A22  09B0               	iorlw	176
 20203  005A24  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20207  005A26  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20208  005A28  ECCD  F02C         	call	_oled_writeCommand
 20209  005A2C  0012               	return	
 20210  005A2E                     __end_of_Set_Page_Address:
 20211                           	opt stack 0
 20212                           tblptru	equ	0xFF8
 20213                           tblptrh	equ	0xFF7
 20214                           tblptrl	equ	0xFF6
 20215                           tablat	equ	0xFF5
 20216                           prodh	equ	0xFF4
 20217                           prodl	equ	0xFF3
 20218                           intcon	equ	0xFF2
 20219                           intcon3	equ	0xFF0
 20220                           indf0	equ	0xFEF
 20221                           postinc0	equ	0xFEE
 20222                           fsr0h	equ	0xFEA
 20223                           fsr0l	equ	0xFE9
 20224                           wreg	equ	0xFE8
 20225                           indf1	equ	0xFE7
 20226                           postdec1	equ	0xFE5
 20227                           fsr1h	equ	0xFE2
 20228                           fsr1l	equ	0xFE1
 20229                           indf2	equ	0xFDF
 20230                           fsr2h	equ	0xFDA
 20231                           fsr2l	equ	0xFD9
 20232                           status	equ	0xFD8
 20233                           
 20234 ;; *************** function _Set_Column_Address *****************
 20235 ;; Defined at:
 20236 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;  address         1    wreg     unsigned char 
 20239 ;; Auto vars:     Size  Location     Type
 20240 ;;  address         1    1[BANK0 ] unsigned char 
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  1    wreg      void 
 20243 ;; Registers used:
 20244 ;;		wreg, status,2, status,0, cstack
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20250 ;;      Params:         0       0       0       0       0       0       0       0       0
 20251 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20253 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20254 ;;Total ram usage:        1 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; Hardware stack levels required when called:   12
 20257 ;; This function calls:
 20258 ;;		_oled_writeCommand
 20259 ;; This function is called by:
 20260 ;;		_oled_putChar
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text75
 20265  0058E4                     __ptext75:
 20266                           	opt stack 0
 20267  0058E4                     _Set_Column_Address:
 20268                           	opt stack 14
 20269                           
 20270                           ;incstack = 0
 20271                           ;Set_Column_Address@address stored from wreg
 20272  0058E4  0100               	movlb	0	; () banked
 20273  0058E6  6F61               	movwf	Set_Column_Address@address& (0+255),b
 20274                           
 20275                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20276  0058E8  0100               	movlb	0	; () banked
 20277  0058EA  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 20278  0058EC  0B0F               	andlw	15
 20279  0058EE  0910               	iorlw	16
 20280  0058F0  ECCD  F02C         	call	_oled_writeCommand
 20281                           
 20282                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20283  0058F4  0100               	movlb	0	; () banked
 20284  0058F6  5161               	movf	Set_Column_Address@address& (0+255),w,b
 20285  0058F8  0B0F               	andlw	15
 20286  0058FA  ECCD  F02C         	call	_oled_writeCommand
 20287  0058FE  0012               	return	
 20288  005900                     __end_of_Set_Column_Address:
 20289                           	opt stack 0
 20290                           tblptru	equ	0xFF8
 20291                           tblptrh	equ	0xFF7
 20292                           tblptrl	equ	0xFF6
 20293                           tablat	equ	0xFF5
 20294                           prodh	equ	0xFF4
 20295                           prodl	equ	0xFF3
 20296                           intcon	equ	0xFF2
 20297                           intcon3	equ	0xFF0
 20298                           indf0	equ	0xFEF
 20299                           postinc0	equ	0xFEE
 20300                           fsr0h	equ	0xFEA
 20301                           fsr0l	equ	0xFE9
 20302                           wreg	equ	0xFE8
 20303                           indf1	equ	0xFE7
 20304                           postdec1	equ	0xFE5
 20305                           fsr1h	equ	0xFE2
 20306                           fsr1l	equ	0xFE1
 20307                           indf2	equ	0xFDF
 20308                           fsr2h	equ	0xFDA
 20309                           fsr2l	equ	0xFD9
 20310                           status	equ	0xFD8
 20311                           
 20312 ;; *************** function _oled_writeCommand *****************
 20313 ;; Defined at:
 20314 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20315 ;; Parameters:    Size  Location     Type
 20316 ;;  command         1    wreg     unsigned char 
 20317 ;; Auto vars:     Size  Location     Type
 20318 ;;  command         1    0[BANK0 ] unsigned char 
 20319 ;; Return value:  Size  Location     Type
 20320 ;;                  1    wreg      void 
 20321 ;; Registers used:
 20322 ;;		wreg
 20323 ;; Tracked objects:
 20324 ;;		On entry : 0/0
 20325 ;;		On exit  : 0/0
 20326 ;;		Unchanged: 0/0
 20327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20328 ;;      Params:         0       0       0       0       0       0       0       0       0
 20329 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20331 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20332 ;;Total ram usage:        1 bytes
 20333 ;; Hardware stack levels used:    1
 20334 ;; Hardware stack levels required when called:   11
 20335 ;; This function calls:
 20336 ;;		Nothing
 20337 ;; This function is called by:
 20338 ;;		_Set_Page_Address
 20339 ;;		_Set_Column_Address
 20340 ;;		_oled_devInit
 20341 ;;		_oled_setDisplay
 20342 ;;		_oled_displayOff
 20343 ;;		_oled_setContrastControlRegister
 20344 ;;		_oled_initialDispayLine
 20345 ;;		_oled_powerControl
 20346 ;;		_oled_regulorResistorSelect
 20347 ;; This function uses a non-reentrant model
 20348 ;;
 20349                           
 20350                           	psect	text76
 20351  00599A                     __ptext76:
 20352                           	opt stack 0
 20353  00599A                     _oled_writeCommand:
 20354                           	opt stack 14
 20355                           
 20356                           ;incstack = 0
 20357                           ;oled_writeCommand@command stored from wreg
 20358  00599A  0100               	movlb	0	; () banked
 20359  00599C  6F60               	movwf	oled_writeCommand@command& (0+255),b
 20360                           
 20361                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20362  00599E  988A               	bcf	3978,4,c	;volatile
 20363                           
 20364                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20365  0059A0  908B               	bcf	3979,0,c	;volatile
 20366                           
 20367                           ;SSD1306oLED.c: 434: LATD=command;
 20368  0059A2  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20369                           
 20370                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20371  0059A6  928B               	bcf	3979,1,c	;volatile
 20372                           
 20373                           ;SSD1306oLED.c: 436: __nop();
 20374  0059A8  F000               	nop	
 20375                           
 20376                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20377  0059AA  828B               	bsf	3979,1,c	;volatile
 20378                           
 20379                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20380  0059AC  888A               	bsf	3978,4,c	;volatile
 20381  0059AE  0012               	return	
 20382  0059B0                     __end_of_oled_writeCommand:
 20383                           	opt stack 0
 20384                           tblptru	equ	0xFF8
 20385                           tblptrh	equ	0xFF7
 20386                           tblptrl	equ	0xFF6
 20387                           tablat	equ	0xFF5
 20388                           prodh	equ	0xFF4
 20389                           prodl	equ	0xFF3
 20390                           intcon	equ	0xFF2
 20391                           intcon3	equ	0xFF0
 20392                           indf0	equ	0xFEF
 20393                           postinc0	equ	0xFEE
 20394                           fsr0h	equ	0xFEA
 20395                           fsr0l	equ	0xFE9
 20396                           wreg	equ	0xFE8
 20397                           indf1	equ	0xFE7
 20398                           postdec1	equ	0xFE5
 20399                           fsr1h	equ	0xFE2
 20400                           fsr1l	equ	0xFE1
 20401                           indf2	equ	0xFDF
 20402                           fsr2h	equ	0xFDA
 20403                           fsr2l	equ	0xFD9
 20404                           status	equ	0xFD8
 20405                           
 20406 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20407 ;; Defined at:
 20408 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20409 ;; Parameters:    Size  Location     Type
 20410 ;;		None
 20411 ;; Auto vars:     Size  Location     Type
 20412 ;;		None
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  1    wreg      void 
 20415 ;; Registers used:
 20416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20417 ;; Tracked objects:
 20418 ;;		On entry : 0/0
 20419 ;;		On exit  : 0/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20422 ;;      Params:         0       0       0       0       0       0       0       0       0
 20423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20424 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20425 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20426 ;;Total ram usage:        1 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:   13
 20429 ;; This function calls:
 20430 ;;		_CDCTxService
 20431 ;;		_EUSART_Read
 20432 ;;		_EUSART_Write
 20433 ;;		_MOTEapp_setResponseReady
 20434 ;;		_USBapp_getrxByteFlag
 20435 ;;		_getsUSBUSART
 20436 ;;		_putUSBUSART
 20437 ;; This function is called by:
 20438 ;;		_USBapp_Handler
 20439 ;; This function uses a non-reentrant model
 20440 ;;
 20441                           
 20442                           	psect	text77
 20443  003578                     __ptext77:
 20444                           	opt stack 0
 20445  003578                     _USBapp_DeviceCdcEmulatorHandler:
 20446                           	opt stack 16
 20447                           
 20448                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20449                           
 20450                           ;incstack = 0
 20451  003578  0E1F               	movlw	31
 20452  00357A  0100               	movlb	0	; () banked
 20453  00357C  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20454  00357E  0012               	return	
 20455                           
 20456                           ; BSR set to: 0
 20457  003580  B260               	btfsc	3936,1,c	;volatile
 20458  003582  0012               	return	
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20462                           
 20463                           ; BSR set to: 0
 20464                           
 20465                           ; BSR set to: 0
 20466                           ;USBapp.c: 166: return;
 20467  003584  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20468  003586  A4D8               	btfss	status,2,c
 20469  003588  D011               	goto	l880
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;USBapp.c: 169: {
 20473                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20474  00358A  0E80               	movlw	low _USB_Buffer
 20475  00358C  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20476  00358E  0E02               	movlw	high _USB_Buffer
 20477  003590  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20478  003592  0E40               	movlw	64
 20479  003594  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20480  003596  EC1C  F01F         	call	_getsUSBUSART	;wreg free
 20481  00359A  0100               	movlb	0	; () banked
 20482  00359C  6FE6               	movwf	_LastRS232Out& (0+255),b
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20486  00359E  51E6               	movf	_LastRS232Out& (0+255),w,b
 20487  0035A0  B4D8               	btfsc	status,2,c
 20488  0035A2  D004               	goto	l880
 20489                           
 20490                           ; BSR set to: 0
 20491                           ;USBapp.c: 172: {
 20492                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20493  0035A4  0E01               	movlw	1
 20494  0035A6  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20495                           
 20496                           ;USBapp.c: 174: RS232cp = 0;
 20497  0035A8  0E00               	movlw	0
 20498  0035AA  6FE5               	movwf	_RS232cp& (0+255),b
 20499  0035AC                     l880:
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;USBapp.c: 175: }
 20503                           ;USBapp.c: 176: }
 20504                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20505                           
 20506                           ; BSR set to: 0
 20507  0035AC  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20508  0035AE  A4D8               	btfss	status,2,c
 20509                           
 20510                           ; BSR set to: 0
 20511  0035B0  A2AC               	btfss	4012,1,c	;volatile
 20512  0035B2  D013               	goto	l882
 20513                           
 20514                           ; BSR set to: 0
 20515                           ;USBapp.c: 180: {
 20516                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20517  0035B4  51E5               	movf	_RS232cp& (0+255),w,b
 20518  0035B6  0D01               	mullw	1
 20519  0035B8  0E80               	movlw	low _USB_Buffer
 20520  0035BA  24F3               	addwf	prodl,w,c
 20521  0035BC  6ED9               	movwf	fsr2l,c
 20522  0035BE  0E02               	movlw	high _USB_Buffer
 20523  0035C0  20F4               	addwfc	prodh,w,c
 20524  0035C2  6EDA               	movwf	fsr2h,c
 20525  0035C4  50DF               	movf	indf2,w,c
 20526  0035C6  ECB0  F029         	call	_EUSART_Write
 20527                           
 20528                           ;USBapp.c: 183: ++RS232cp;
 20529  0035CA  0100               	movlb	0	; () banked
 20530  0035CC  2BE5               	incf	_RS232cp& (0+255),f,b
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20534  0035CE  51E6               	movf	_LastRS232Out& (0+255),w,b
 20535  0035D0  19E5               	xorwf	_RS232cp& (0+255),w,b
 20536  0035D2  A4D8               	btfss	status,2,c
 20537  0035D4  D002               	goto	l882
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20541  0035D6  0E00               	movlw	0
 20542  0035D8  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20543  0035DA                     l882:
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;USBapp.c: 186: }
 20547                           ;USBapp.c: 189: if ((eusartRxCount))
 20548                           
 20549                           ; BSR set to: 0
 20550  0035DA  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 20551  0035DC  B4D8               	btfsc	status,2,c
 20552  0035DE  D025               	goto	l884
 20553                           
 20554                           ; BSR set to: 0
 20555                           ;USBapp.c: 190: {
 20556                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20557  0035E0  ECAE  F02D         	call	_USBapp_getrxByteFlag	;wreg free
 20558  0035E4  0900               	iorlw	0
 20559  0035E6  B4D8               	btfsc	status,2,c
 20560  0035E8  D020               	goto	l884
 20561  0035EA  0E3F               	movlw	63
 20562  0035EC  0100               	movlb	0	; () banked
 20563  0035EE  61E8               	cpfslt	_NextUSBOut& (0+255),b
 20564  0035F0  D01C               	goto	l884
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;USBapp.c: 192: {
 20568                           ;USBapp.c: 193: __nop();
 20569  0035F2  F000               	nop	
 20570                           
 20571                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20572  0035F4  EC0B  F02A         	call	_EUSART_Read	;wreg free
 20573  0035F8  0100               	movlb	0	; () banked
 20574  0035FA  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20575  0035FC  51E8               	movf	_NextUSBOut& (0+255),w,b
 20576  0035FE  0D01               	mullw	1
 20577  003600  0E80               	movlw	low _USB_Buffer
 20578  003602  24F3               	addwf	prodl,w,c
 20579  003604  6ED9               	movwf	fsr2l,c
 20580  003606  0E02               	movlw	high _USB_Buffer
 20581  003608  20F4               	addwfc	prodh,w,c
 20582  00360A  6EDA               	movwf	fsr2h,c
 20583  00360C  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;USBapp.c: 195: ++NextUSBOut;
 20587  003610  2BE8               	incf	_NextUSBOut& (0+255),f,b
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20591  003612  51E8               	movf	_NextUSBOut& (0+255),w,b
 20592  003614  0D01               	mullw	1
 20593  003616  0E80               	movlw	low _USB_Buffer
 20594  003618  24F3               	addwf	prodl,w,c
 20595  00361A  6ED9               	movwf	fsr2l,c
 20596  00361C  0E02               	movlw	high _USB_Buffer
 20597  00361E  20F4               	addwfc	prodh,w,c
 20598  003620  6EDA               	movwf	fsr2h,c
 20599  003622  0E00               	movlw	0
 20600  003624  6EDF               	movwf	indf2,c
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;USBapp.c: 197: rxByteFlag = 0;
 20604  003626  0E00               	movlw	0
 20605  003628  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 20606  00362A                     l884:
 20607                           
 20608                           ;USBapp.c: 198: }
 20609                           ;USBapp.c: 199: }
 20610                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20611                           
 20612                           ; BSR set to: 0
 20613                           
 20614                           ; BSR set to: 0
 20615  00362A  0100               	movlb	0	; () banked
 20616  00362C  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20617  00362E  A4D8               	btfss	status,2,c
 20618  003630  D010               	goto	l885
 20619                           
 20620                           ; BSR set to: 0
 20621  003632  51E8               	movf	_NextUSBOut& (0+255),w,b
 20622  003634  B4D8               	btfsc	status,2,c
 20623  003636  D00D               	goto	l885
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;USBapp.c: 204: {
 20627                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20628  003638  0E80               	movlw	low _USB_Buffer
 20629  00363A  6F60               	movwf	putUSBUSART@data& (0+255),b
 20630  00363C  0E02               	movlw	high _USB_Buffer
 20631  00363E  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20632  003640  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 20633  003644  EC11  F02C         	call	_putUSBUSART	;wreg free
 20634                           
 20635                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20636  003648  ECB1  F02D         	call	_MOTEapp_setResponseReady	;wreg free
 20637                           
 20638                           ;USBapp.c: 207: NextUSBOut = 0;
 20639  00364C  0E00               	movlw	0
 20640  00364E  0100               	movlb	0	; () banked
 20641  003650  6FE8               	movwf	_NextUSBOut& (0+255),b
 20642  003652                     l885:
 20643                           
 20644                           ; BSR set to: 0
 20645                           ;USBapp.c: 208: }
 20646                           ;USBapp.c: 210: CDCTxService();
 20647                           
 20648                           ; BSR set to: 0
 20649  003652  ECD7  F012         	call	_CDCTxService	;wreg free
 20650  003656  0012               	return		;funcret
 20651  003658                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20652                           	opt stack 0
 20653                           tblptru	equ	0xFF8
 20654                           tblptrh	equ	0xFF7
 20655                           tblptrl	equ	0xFF6
 20656                           tablat	equ	0xFF5
 20657                           prodh	equ	0xFF4
 20658                           prodl	equ	0xFF3
 20659                           intcon	equ	0xFF2
 20660                           intcon3	equ	0xFF0
 20661                           indf0	equ	0xFEF
 20662                           postinc0	equ	0xFEE
 20663                           fsr0h	equ	0xFEA
 20664                           fsr0l	equ	0xFE9
 20665                           wreg	equ	0xFE8
 20666                           indf1	equ	0xFE7
 20667                           postdec1	equ	0xFE5
 20668                           fsr1h	equ	0xFE2
 20669                           fsr1l	equ	0xFE1
 20670                           indf2	equ	0xFDF
 20671                           fsr2h	equ	0xFDA
 20672                           fsr2l	equ	0xFD9
 20673                           status	equ	0xFD8
 20674                           
 20675 ;; *************** function _putUSBUSART *****************
 20676 ;; Defined at:
 20677 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20680 ;;		 -> USB_Buffer(64), 
 20681 ;;  length          1    2[BANK0 ] unsigned char 
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;		None
 20684 ;; Return value:  Size  Location     Type
 20685 ;;                  1    wreg      void 
 20686 ;; Registers used:
 20687 ;;		wreg, status,2, status,0
 20688 ;; Tracked objects:
 20689 ;;		On entry : 0/0
 20690 ;;		On exit  : 0/0
 20691 ;;		Unchanged: 0/0
 20692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20693 ;;      Params:         0       3       0       0       0       0       0       0       0
 20694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20696 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20697 ;;Total ram usage:        3 bytes
 20698 ;; Hardware stack levels used:    1
 20699 ;; Hardware stack levels required when called:   11
 20700 ;; This function calls:
 20701 ;;		Nothing
 20702 ;; This function is called by:
 20703 ;;		_USBapp_DeviceCdcEmulatorHandler
 20704 ;; This function uses a non-reentrant model
 20705 ;;
 20706                           
 20707                           	psect	text78
 20708  005822                     __ptext78:
 20709                           	opt stack 0
 20710  005822                     _putUSBUSART:
 20711                           	opt stack 17
 20712                           
 20713                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20714                           
 20715                           ;incstack = 0
 20716  005822  94A3               	bcf	4003,2,c	;volatile
 20717                           
 20718                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20719  005824  0100               	movlb	0	; () banked
 20720  005826  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20721  005828  A4D8               	btfss	status,2,c
 20722  00582A  D00A               	goto	l2190
 20723                           
 20724                           ; BSR set to: 0
 20725                           ;usb_device_cdc.c: 530: {
 20726                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20727  00582C  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 20728  005830  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20729                           
 20730                           ; BSR set to: 0
 20731  005834  C062  F0DD         	movff	putUSBUSART@length,_cdc_tx_len
 20732                           
 20733                           ; BSR set to: 0
 20734  005838  0E01               	movlw	1
 20735  00583A  6FDC               	movwf	_cdc_mem_type& (0+255),b
 20736                           
 20737                           ; BSR set to: 0
 20738  00583C  0E01               	movlw	1
 20739  00583E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 20740  005840                     l2190:
 20741                           
 20742                           ; BSR set to: 0
 20743                           ;usb_device_cdc.c: 532: }
 20744                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20745                           
 20746                           ; BSR set to: 0
 20747  005840  84A3               	bsf	4003,2,c	;volatile
 20748                           
 20749                           ; BSR set to: 0
 20750  005842  0012               	return		;funcret
 20751  005844                     __end_of_putUSBUSART:
 20752                           	opt stack 0
 20753                           tblptru	equ	0xFF8
 20754                           tblptrh	equ	0xFF7
 20755                           tblptrl	equ	0xFF6
 20756                           tablat	equ	0xFF5
 20757                           prodh	equ	0xFF4
 20758                           prodl	equ	0xFF3
 20759                           intcon	equ	0xFF2
 20760                           intcon3	equ	0xFF0
 20761                           indf0	equ	0xFEF
 20762                           postinc0	equ	0xFEE
 20763                           fsr0h	equ	0xFEA
 20764                           fsr0l	equ	0xFE9
 20765                           wreg	equ	0xFE8
 20766                           indf1	equ	0xFE7
 20767                           postdec1	equ	0xFE5
 20768                           fsr1h	equ	0xFE2
 20769                           fsr1l	equ	0xFE1
 20770                           indf2	equ	0xFDF
 20771                           fsr2h	equ	0xFDA
 20772                           fsr2l	equ	0xFD9
 20773                           status	equ	0xFD8
 20774                           
 20775 ;; *************** function _getsUSBUSART *****************
 20776 ;; Defined at:
 20777 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20778 ;; Parameters:    Size  Location     Type
 20779 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20780 ;;		 -> USB_Buffer(64), 
 20781 ;;  len             1    9[BANK0 ] unsigned char 
 20782 ;; Auto vars:     Size  Location     Type
 20783 ;;		None
 20784 ;; Return value:  Size  Location     Type
 20785 ;;                  1    wreg      unsigned char 
 20786 ;; Registers used:
 20787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20788 ;; Tracked objects:
 20789 ;;		On entry : 0/0
 20790 ;;		On exit  : 0/0
 20791 ;;		Unchanged: 0/0
 20792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20793 ;;      Params:         0       3       0       0       0       0       0       0       0
 20794 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20795 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20796 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20797 ;;Total ram usage:        6 bytes
 20798 ;; Hardware stack levels used:    1
 20799 ;; Hardware stack levels required when called:   12
 20800 ;; This function calls:
 20801 ;;		_USBTransferOnePacket
 20802 ;; This function is called by:
 20803 ;;		_USBapp_DeviceCdcEmulatorHandler
 20804 ;; This function uses a non-reentrant model
 20805 ;;
 20806                           
 20807                           	psect	text79
 20808  003E38                     __ptext79:
 20809                           	opt stack 0
 20810  003E38                     _getsUSBUSART:
 20811                           	opt stack 16
 20812                           
 20813                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;incstack = 0
 20817  003E38  0E00               	movlw	0
 20818  003E3A  0100               	movlb	0	; () banked
 20819  003E3C  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20820                           
 20821                           ; BSR set to: 0
 20822                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20823  003E3E  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20824  003E40  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 20825  003E42  B4D8               	btfsc	status,2,c
 20826  003E44  D00F               	goto	l2180
 20827                           
 20828                           ; BSR set to: 0
 20829  003E46  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20830  003E4A  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20831  003E4E  AEDF               	btfss	indf2,7,c
 20832  003E50  D003               	goto	u8310
 20833  003E52  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20834  003E54  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20835  003E56  D002               	goto	u8318
 20836  003E58                     u8310:
 20837  003E58  0100               	movlb	0	; () banked
 20838  003E5A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20839  003E5C                     u8318:
 20840  003E5C  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20841  003E5E  6F6B               	movwf	_getsUSBUSART$6654& (0+255),b
 20842  003E60  6B6C               	clrf	(_getsUSBUSART$6654+1)& (0+255),b
 20843  003E62  D004               	goto	l2182
 20844  003E64                     l2180:
 20845                           
 20846                           ; BSR set to: 0
 20847                           
 20848                           ; BSR set to: 0
 20849  003E64  0E00               	movlw	0
 20850  003E66  6F6C               	movwf	(_getsUSBUSART$6654+1)& (0+255),b
 20851  003E68  0E00               	movlw	0
 20852  003E6A  6F6B               	movwf	_getsUSBUSART$6654& (0+255),b
 20853  003E6C                     l2182:
 20854                           
 20855                           ; BSR set to: 0
 20856                           
 20857                           ; BSR set to: 0
 20858  003E6C  516B               	movf	_getsUSBUSART$6654& (0+255),w,b
 20859  003E6E  116C               	iorwf	(_getsUSBUSART$6654+1)& (0+255),w,b
 20860  003E70  A4D8               	btfss	status,2,c
 20861  003E72  D03B               	goto	l2178
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;usb_device_cdc.c: 437: {
 20865                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20866  003E74  EE20 F001          	lfsr	2,1
 20867  003E78  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20868  003E7A  26D9               	addwf	fsr2l,f,c
 20869  003E7C  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20870  003E7E  22DA               	addwfc	fsr2h,f,c
 20871  003E80  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20872  003E82  5CDE               	subwf	postinc2,w,c
 20873  003E84  B0D8               	btfsc	status,0,c
 20874  003E86  D008               	goto	l2183
 20875                           
 20876                           ; BSR set to: 0
 20877                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20878  003E88  EE20 F001          	lfsr	2,1
 20879  003E8C  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20880  003E8E  26D9               	addwf	fsr2l,f,c
 20881  003E90  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20882  003E92  22DA               	addwfc	fsr2h,f,c
 20883  003E94  50DF               	movf	indf2,w,c
 20884  003E96  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20885  003E98                     l2183:
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20889                           
 20890                           ; BSR set to: 0
 20891  003E98  0E00               	movlw	0
 20892  003E9A  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20893  003E9C  D013               	goto	l2184
 20894  003E9E                     
 20895                           ; BSR set to: 0
 20896                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20897                           
 20898                           ; BSR set to: 0
 20899  003E9E  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20900  003EA0  0D01               	mullw	1
 20901  003EA2  0E40               	movlw	64
 20902  003EA4  24F3               	addwf	prodl,w,c
 20903  003EA6  6ED9               	movwf	fsr2l,c
 20904  003EA8  0E05               	movlw	5
 20905  003EAA  20F4               	addwfc	prodh,w,c
 20906  003EAC  6EDA               	movwf	fsr2h,c
 20907  003EAE  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20908  003EB0  0D01               	mullw	1
 20909  003EB2  50F3               	movf	prodl,w,c
 20910  003EB4  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20911  003EB6  6EE1               	movwf	fsr1l,c
 20912  003EB8  50F4               	movf	prodh,w,c
 20913  003EBA  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20914  003EBC  6EE2               	movwf	fsr1h,c
 20915  003EBE  CFDF FFE7          	movff	indf2,indf1
 20916                           
 20917                           ; BSR set to: 0
 20918  003EC2  2BDE               	incf	_cdc_rx_len& (0+255),f,b
 20919  003EC4                     l2184:
 20920                           
 20921                           ; BSR set to: 0
 20922                           
 20923                           ; BSR set to: 0
 20924  003EC4  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20925  003EC6  5DDE               	subwf	_cdc_rx_len& (0+255),w,b
 20926  003EC8  A0D8               	btfss	status,0,c
 20927  003ECA  D7E9               	goto	l2185
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20931                           
 20932                           ; BSR set to: 0
 20933  003ECC  0E00               	movlw	0
 20934  003ECE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20935  003ED0  0E40               	movlw	64
 20936  003ED2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20937  003ED4  0E05               	movlw	5
 20938  003ED6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20939  003ED8  0E40               	movlw	64
 20940  003EDA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20941  003EDC  0E02               	movlw	2
 20942  003EDE  EC60  F01E         	call	_USBTransferOnePacket
 20943  003EE2  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20944  003EE6  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20945  003EEA                     l2178:
 20946                           
 20947                           ;usb_device_cdc.c: 457: }
 20948                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 20949  003EEA  0100               	movlb	0	; () banked
 20950  003EEC  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20951  003EEE  0012               	return	
 20952  003EF0                     __end_of_getsUSBUSART:
 20953                           	opt stack 0
 20954                           tblptru	equ	0xFF8
 20955                           tblptrh	equ	0xFF7
 20956                           tblptrl	equ	0xFF6
 20957                           tablat	equ	0xFF5
 20958                           prodh	equ	0xFF4
 20959                           prodl	equ	0xFF3
 20960                           intcon	equ	0xFF2
 20961                           intcon3	equ	0xFF0
 20962                           indf0	equ	0xFEF
 20963                           postinc0	equ	0xFEE
 20964                           fsr0h	equ	0xFEA
 20965                           fsr0l	equ	0xFE9
 20966                           wreg	equ	0xFE8
 20967                           indf1	equ	0xFE7
 20968                           postdec1	equ	0xFE5
 20969                           fsr1h	equ	0xFE2
 20970                           fsr1l	equ	0xFE1
 20971                           indf2	equ	0xFDF
 20972                           postinc2	equ	0xFDE
 20973                           fsr2h	equ	0xFDA
 20974                           fsr2l	equ	0xFD9
 20975                           status	equ	0xFD8
 20976                           
 20977 ;; *************** function _USBapp_getrxByteFlag *****************
 20978 ;; Defined at:
 20979 ;;		line 268 in file "../Includes/Board/USBapp.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;		None
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;		None
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  1    wreg      unsigned char 
 20986 ;; Registers used:
 20987 ;;		wreg, status,2
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20993 ;;      Params:         0       0       0       0       0       0       0       0       0
 20994 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20996 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20997 ;;Total ram usage:        0 bytes
 20998 ;; Hardware stack levels used:    1
 20999 ;; Hardware stack levels required when called:   11
 21000 ;; This function calls:
 21001 ;;		Nothing
 21002 ;; This function is called by:
 21003 ;;		_USBapp_DeviceCdcEmulatorHandler
 21004 ;; This function uses a non-reentrant model
 21005 ;;
 21006                           
 21007                           	psect	text80
 21008  005B5C                     __ptext80:
 21009                           	opt stack 0
 21010  005B5C                     _USBapp_getrxByteFlag:
 21011                           	opt stack 17
 21012                           
 21013                           ;USBapp.c: 270: return rxByteFlag;
 21014                           
 21015                           ; BSR set to: 0
 21016                           ;incstack = 0
 21017  005B5C  0100               	movlb	0	; () banked
 21018  005B5E  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 21019  005B60  0012               	return	
 21020  005B62                     __end_of_USBapp_getrxByteFlag:
 21021                           	opt stack 0
 21022                           tblptru	equ	0xFF8
 21023                           tblptrh	equ	0xFF7
 21024                           tblptrl	equ	0xFF6
 21025                           tablat	equ	0xFF5
 21026                           prodh	equ	0xFF4
 21027                           prodl	equ	0xFF3
 21028                           intcon	equ	0xFF2
 21029                           intcon3	equ	0xFF0
 21030                           indf0	equ	0xFEF
 21031                           postinc0	equ	0xFEE
 21032                           fsr0h	equ	0xFEA
 21033                           fsr0l	equ	0xFE9
 21034                           wreg	equ	0xFE8
 21035                           indf1	equ	0xFE7
 21036                           postdec1	equ	0xFE5
 21037                           fsr1h	equ	0xFE2
 21038                           fsr1l	equ	0xFE1
 21039                           indf2	equ	0xFDF
 21040                           postinc2	equ	0xFDE
 21041                           fsr2h	equ	0xFDA
 21042                           fsr2l	equ	0xFD9
 21043                           status	equ	0xFD8
 21044                           
 21045 ;; *************** function _MOTEapp_setResponseReady *****************
 21046 ;; Defined at:
 21047 ;;		line 1103 in file "../Includes/Board/MOTEapp.c"
 21048 ;; Parameters:    Size  Location     Type
 21049 ;;		None
 21050 ;; Auto vars:     Size  Location     Type
 21051 ;;		None
 21052 ;; Return value:  Size  Location     Type
 21053 ;;                  1    wreg      void 
 21054 ;; Registers used:
 21055 ;;		wreg, status,2
 21056 ;; Tracked objects:
 21057 ;;		On entry : 0/0
 21058 ;;		On exit  : 0/0
 21059 ;;		Unchanged: 0/0
 21060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21061 ;;      Params:         0       0       0       0       0       0       0       0       0
 21062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21064 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21065 ;;Total ram usage:        0 bytes
 21066 ;; Hardware stack levels used:    1
 21067 ;; Hardware stack levels required when called:   11
 21068 ;; This function calls:
 21069 ;;		Nothing
 21070 ;; This function is called by:
 21071 ;;		_USBapp_DeviceCdcEmulatorHandler
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           	psect	text81
 21076  005B62                     __ptext81:
 21077                           	opt stack 0
 21078  005B62                     _MOTEapp_setResponseReady:
 21079                           	opt stack 17
 21080                           
 21081                           ;MOTEapp.c: 1105: responseReady = 1;
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;incstack = 0
 21085  005B62  0E01               	movlw	1
 21086  005B64  6E52               	movwf	_responseReady,c
 21087  005B66  0012               	return		;funcret
 21088  005B68                     __end_of_MOTEapp_setResponseReady:
 21089                           	opt stack 0
 21090                           tblptru	equ	0xFF8
 21091                           tblptrh	equ	0xFF7
 21092                           tblptrl	equ	0xFF6
 21093                           tablat	equ	0xFF5
 21094                           prodh	equ	0xFF4
 21095                           prodl	equ	0xFF3
 21096                           intcon	equ	0xFF2
 21097                           intcon3	equ	0xFF0
 21098                           indf0	equ	0xFEF
 21099                           postinc0	equ	0xFEE
 21100                           fsr0h	equ	0xFEA
 21101                           fsr0l	equ	0xFE9
 21102                           wreg	equ	0xFE8
 21103                           indf1	equ	0xFE7
 21104                           postdec1	equ	0xFE5
 21105                           fsr1h	equ	0xFE2
 21106                           fsr1l	equ	0xFE1
 21107                           indf2	equ	0xFDF
 21108                           postinc2	equ	0xFDE
 21109                           fsr2h	equ	0xFDA
 21110                           fsr2l	equ	0xFD9
 21111                           status	equ	0xFD8
 21112                           
 21113 ;; *************** function _EUSART_Write *****************
 21114 ;; Defined at:
 21115 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21116 ;; Parameters:    Size  Location     Type
 21117 ;;  txData          1    wreg     unsigned char 
 21118 ;; Auto vars:     Size  Location     Type
 21119 ;;  txData          1    0[BANK0 ] unsigned char 
 21120 ;; Return value:  Size  Location     Type
 21121 ;;                  1    wreg      void 
 21122 ;; Registers used:
 21123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21124 ;; Tracked objects:
 21125 ;;		On entry : 0/0
 21126 ;;		On exit  : 0/0
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21129 ;;      Params:         0       0       0       0       0       0       0       0       0
 21130 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21131 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21132 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21133 ;;Total ram usage:        1 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:   11
 21136 ;; This function calls:
 21137 ;;		Nothing
 21138 ;; This function is called by:
 21139 ;;		_EndLine
 21140 ;;		_sendCommand
 21141 ;;		_sendDataCommand
 21142 ;;		_USBapp_DeviceCdcEmulatorHandler
 21143 ;; This function uses a non-reentrant model
 21144 ;;
 21145                           
 21146                           	psect	text82
 21147  005360                     __ptext82:
 21148                           	opt stack 0
 21149  005360                     _EUSART_Write:
 21150                           	opt stack 14
 21151                           
 21152                           ;incstack = 0
 21153                           ;EUSART_Write@txData stored from wreg
 21154  005360  0100               	movlb	0	; () banked
 21155  005362  6F60               	movwf	EUSART_Write@txData& (0+255),b
 21156  005364                     
 21157                           ;eusart.c: 142: {
 21158                           
 21159                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21160  005364  0100               	movlb	0	; () banked
 21161  005366  51E1               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 21162  005368  B4D8               	btfsc	status,2,c
 21163  00536A  D7FC               	goto	l7868
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;eusart.c: 143: }
 21167                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21168  00536C  B89D               	btfsc	3997,4,c	;volatile
 21169  00536E  D003               	goto	l1222
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;eusart.c: 146: {
 21173                           ;eusart.c: 147: TXREG = txData;
 21174  005370  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21175                           
 21176                           ;eusart.c: 148: }
 21177  005374  D012               	goto	l1223
 21178  005376                     l1222:
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;eusart.c: 149: else
 21182                           ;eusart.c: 150: {
 21183                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21184  005376  989D               	bcf	3997,4,c	;volatile
 21185                           
 21186                           ; BSR set to: 0
 21187                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21188  005378  51E3               	movf	_eusartTxHead& (0+255),w,b
 21189  00537A  0D01               	mullw	1
 21190  00537C  0E40               	movlw	low _eusartTxBuffer
 21191  00537E  24F3               	addwf	prodl,w,c
 21192  005380  6ED9               	movwf	fsr2l,c
 21193  005382  0E02               	movlw	high _eusartTxBuffer
 21194  005384  20F4               	addwfc	prodh,w,c
 21195  005386  6EDA               	movwf	fsr2h,c
 21196  005388  C060  FFDF         	movff	EUSART_Write@txData,indf2
 21197                           
 21198                           ; BSR set to: 0
 21199  00538C  2BE3               	incf	_eusartTxHead& (0+255),f,b
 21200                           
 21201                           ; BSR set to: 0
 21202                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21203  00538E  0E3F               	movlw	63
 21204  005390  65E3               	cpfsgt	_eusartTxHead& (0+255),b
 21205  005392  D002               	goto	l1224
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;eusart.c: 154: {
 21209                           ;eusart.c: 155: eusartTxHead = 0;
 21210  005394  0E00               	movlw	0
 21211  005396  6FE3               	movwf	_eusartTxHead& (0+255),b
 21212  005398                     l1224:
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;eusart.c: 156: }
 21216                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21217                           
 21218                           ; BSR set to: 0
 21219  005398  07E1               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 21220  00539A                     l1223:
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;eusart.c: 158: }
 21224                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21225                           
 21226                           ; BSR set to: 0
 21227  00539A  889D               	bsf	3997,4,c	;volatile
 21228                           
 21229                           ; BSR set to: 0
 21230  00539C  0012               	return		;funcret
 21231  00539E                     __end_of_EUSART_Write:
 21232                           	opt stack 0
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodh	equ	0xFF4
 21238                           prodl	equ	0xFF3
 21239                           intcon	equ	0xFF2
 21240                           intcon3	equ	0xFF0
 21241                           indf0	equ	0xFEF
 21242                           postinc0	equ	0xFEE
 21243                           fsr0h	equ	0xFEA
 21244                           fsr0l	equ	0xFE9
 21245                           wreg	equ	0xFE8
 21246                           indf1	equ	0xFE7
 21247                           postdec1	equ	0xFE5
 21248                           fsr1h	equ	0xFE2
 21249                           fsr1l	equ	0xFE1
 21250                           indf2	equ	0xFDF
 21251                           postinc2	equ	0xFDE
 21252                           fsr2h	equ	0xFDA
 21253                           fsr2l	equ	0xFD9
 21254                           status	equ	0xFD8
 21255                           
 21256 ;; *************** function _EUSART_Read *****************
 21257 ;; Defined at:
 21258 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;		None
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;  readValue       1    0[BANK0 ] unsigned char 
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  1    wreg      unsigned char 
 21265 ;; Registers used:
 21266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21272 ;;      Params:         0       0       0       0       0       0       0       0       0
 21273 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21275 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21276 ;;Total ram usage:        1 bytes
 21277 ;; Hardware stack levels used:    1
 21278 ;; Hardware stack levels required when called:   11
 21279 ;; This function calls:
 21280 ;;		Nothing
 21281 ;; This function is called by:
 21282 ;;		_MOTEapp_getModuleResponse
 21283 ;;		_USBapp_DeviceCdcEmulatorHandler
 21284 ;; This function uses a non-reentrant model
 21285 ;;
 21286                           
 21287                           	psect	text83
 21288  005416                     __ptext83:
 21289                           	opt stack 0
 21290  005416                     _EUSART_Read:
 21291                           	opt stack 15
 21292                           
 21293                           ;eusart.c: 119: uint8_t readValue = 0;
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;incstack = 0
 21297  005416  0E00               	movlw	0
 21298  005418  0100               	movlb	0	; () banked
 21299  00541A  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21300                           
 21301                           ;eusart.c: 121: while(0 == eusartRxCount)
 21302  00541C  D001               	goto	l1212
 21303  00541E                     l1213:
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;eusart.c: 122: {
 21307                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21308  00541E  8E89               	bsf	3977,7,c	;volatile
 21309  005420                     l1212:
 21310                           
 21311                           ; BSR set to: 0
 21312                           
 21313                           ; BSR set to: 0
 21314  005420  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 21315  005422  B4D8               	btfsc	status,2,c
 21316  005424  D7FC               	goto	l1213
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;eusart.c: 124: }
 21320                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21321  005426  9A9D               	bcf	3997,5,c	;volatile
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21325  005428  51DF               	movf	_eusartRxTail& (0+255),w,b
 21326  00542A  0D01               	mullw	1
 21327  00542C  0E00               	movlw	low _eusartRxBuffer
 21328  00542E  24F3               	addwf	prodl,w,c
 21329  005430  6ED9               	movwf	fsr2l,c
 21330  005432  0E02               	movlw	high _eusartRxBuffer
 21331  005434  20F4               	addwfc	prodh,w,c
 21332  005436  6EDA               	movwf	fsr2h,c
 21333  005438  50DF               	movf	indf2,w,c
 21334  00543A  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21335                           
 21336                           ; BSR set to: 0
 21337  00543C  2BDF               	incf	_eusartRxTail& (0+255),f,b
 21338                           
 21339                           ; BSR set to: 0
 21340                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21341  00543E  0E3F               	movlw	63
 21342  005440  65DF               	cpfsgt	_eusartRxTail& (0+255),b
 21343  005442  D002               	goto	l1215
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;eusart.c: 130: {
 21347                           ;eusart.c: 131: eusartRxTail = 0;
 21348  005444  0E00               	movlw	0
 21349  005446  6FDF               	movwf	_eusartRxTail& (0+255),b
 21350  005448                     l1215:
 21351                           
 21352                           ; BSR set to: 0
 21353                           ;eusart.c: 132: }
 21354                           ;eusart.c: 133: eusartRxCount--;
 21355                           
 21356                           ; BSR set to: 0
 21357  005448  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 21358                           
 21359                           ; BSR set to: 0
 21360                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21361  00544A  8A9D               	bsf	3997,5,c	;volatile
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;eusart.c: 136: return readValue;
 21365  00544C  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 21366  00544E  0012               	return	
 21367  005450                     __end_of_EUSART_Read:
 21368                           	opt stack 0
 21369                           tblptru	equ	0xFF8
 21370                           tblptrh	equ	0xFF7
 21371                           tblptrl	equ	0xFF6
 21372                           tablat	equ	0xFF5
 21373                           prodh	equ	0xFF4
 21374                           prodl	equ	0xFF3
 21375                           intcon	equ	0xFF2
 21376                           intcon3	equ	0xFF0
 21377                           indf0	equ	0xFEF
 21378                           postinc0	equ	0xFEE
 21379                           fsr0h	equ	0xFEA
 21380                           fsr0l	equ	0xFE9
 21381                           wreg	equ	0xFE8
 21382                           indf1	equ	0xFE7
 21383                           postdec1	equ	0xFE5
 21384                           fsr1h	equ	0xFE2
 21385                           fsr1l	equ	0xFE1
 21386                           indf2	equ	0xFDF
 21387                           postinc2	equ	0xFDE
 21388                           fsr2h	equ	0xFDA
 21389                           fsr2l	equ	0xFD9
 21390                           status	equ	0xFD8
 21391                           
 21392 ;; *************** function _CDCTxService *****************
 21393 ;; Defined at:
 21394 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21395 ;; Parameters:    Size  Location     Type
 21396 ;;		None
 21397 ;; Auto vars:     Size  Location     Type
 21398 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21399 ;;  i               1   10[BANK0 ] unsigned char 
 21400 ;; Return value:  Size  Location     Type
 21401 ;;                  1    wreg      void 
 21402 ;; Registers used:
 21403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21404 ;; Tracked objects:
 21405 ;;		On entry : 0/0
 21406 ;;		On exit  : 0/0
 21407 ;;		Unchanged: 0/0
 21408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21409 ;;      Params:         0       0       0       0       0       0       0       0       0
 21410 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21411 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21412 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21413 ;;Total ram usage:        5 bytes
 21414 ;; Hardware stack levels used:    1
 21415 ;; Hardware stack levels required when called:   12
 21416 ;; This function calls:
 21417 ;;		_USBTransferOnePacket
 21418 ;; This function is called by:
 21419 ;;		_USBapp_DeviceCdcEmulatorHandler
 21420 ;; This function uses a non-reentrant model
 21421 ;;
 21422                           
 21423                           	psect	text84
 21424  0025AE                     __ptext84:
 21425                           	opt stack 0
 21426  0025AE                     _CDCTxService:
 21427                           	opt stack 16
 21428                           
 21429                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21430                           ;usb_device_cdc.c: 786: uint8_t i;
 21431                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;incstack = 0
 21435  0025AE  94A3               	bcf	4003,2,c	;volatile
 21436                           
 21437                           ;usb_device_cdc.c: 790: {};
 21438                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21439  0025B0  5033               	movf	_CDCDataInHandle,w,c
 21440  0025B2  1034               	iorwf	_CDCDataInHandle+1,w,c
 21441  0025B4  B4D8               	btfsc	status,2,c
 21442  0025B6  D010               	goto	l2210
 21443  0025B8  C033  FFD9         	movff	_CDCDataInHandle,fsr2l
 21444  0025BC  C034  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21445  0025C0  AEDF               	btfss	indf2,7,c
 21446  0025C2  D004               	goto	u8370
 21447  0025C4  0100               	movlb	0	; () banked
 21448  0025C6  6B67               	clrf	??_CDCTxService& (0+255),b
 21449  0025C8  2B67               	incf	??_CDCTxService& (0+255),f,b
 21450  0025CA  D002               	goto	u8378
 21451  0025CC                     u8370:
 21452  0025CC  0100               	movlb	0	; () banked
 21453  0025CE  6B67               	clrf	??_CDCTxService& (0+255),b
 21454  0025D0                     u8378:
 21455  0025D0  5167               	movf	??_CDCTxService& (0+255),w,b
 21456  0025D2  6F68               	movwf	_CDCTxService$6702& (0+255),b
 21457  0025D4  6B69               	clrf	(_CDCTxService$6702+1)& (0+255),b
 21458  0025D6  D005               	goto	l2212
 21459  0025D8                     l2210:
 21460                           
 21461                           ; BSR set to: 0
 21462  0025D8  0E00               	movlw	0
 21463  0025DA  0100               	movlb	0	; () banked
 21464  0025DC  6F69               	movwf	(_CDCTxService$6702+1)& (0+255),b
 21465  0025DE  0E00               	movlw	0
 21466  0025E0  6F68               	movwf	_CDCTxService$6702& (0+255),b
 21467  0025E2                     l2212:
 21468                           
 21469                           ; BSR set to: 0
 21470                           
 21471                           ; BSR set to: 0
 21472  0025E2  5168               	movf	_CDCTxService$6702& (0+255),w,b
 21473  0025E4  1169               	iorwf	(_CDCTxService$6702+1)& (0+255),w,b
 21474  0025E6  B4D8               	btfsc	status,2,c
 21475  0025E8  D002               	goto	l2208
 21476                           
 21477                           ; BSR set to: 0
 21478                           ;usb_device_cdc.c: 793: {
 21479                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21480  0025EA  84A3               	bsf	4003,2,c	;volatile
 21481                           
 21482                           ;usb_device_cdc.c: 795: return;
 21483  0025EC  0012               	return	
 21484  0025EE                     l2208:
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;usb_device_cdc.c: 796: }
 21488                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21489                           
 21490                           ; BSR set to: 0
 21491  0025EE  0E03               	movlw	3
 21492  0025F0  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21493  0025F2  A4D8               	btfss	status,2,c
 21494  0025F4  D002               	goto	l2214
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21498  0025F6  0E00               	movlw	0
 21499  0025F8  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21500  0025FA                     l2214:
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21504  0025FA  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21505  0025FC  A4D8               	btfss	status,2,c
 21506  0025FE  D002               	goto	l2215
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;usb_device_cdc.c: 810: {
 21510                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21511  002600  84A3               	bsf	4003,2,c	;volatile
 21512                           
 21513                           ;usb_device_cdc.c: 812: return;
 21514  002602  0012               	return	
 21515  002604                     l2215:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;usb_device_cdc.c: 813: }
 21519                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21520                           
 21521                           ; BSR set to: 0
 21522  002604  0E02               	movlw	2
 21523  002606  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21524  002608  A4D8               	btfss	status,2,c
 21525  00260A  D013               	goto	l2216
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;usb_device_cdc.c: 819: {
 21529                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21530  00260C  0E01               	movlw	1
 21531  00260E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21532  002610  0E00               	movlw	0
 21533  002612  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21534  002614  0E00               	movlw	0
 21535  002616  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21536  002618  0E00               	movlw	0
 21537  00261A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21538  00261C  0E02               	movlw	2
 21539  00261E  EC60  F01E         	call	_USBTransferOnePacket
 21540  002622  C060  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21541  002626  C061  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21542                           
 21543                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21544  00262A  0E03               	movlw	3
 21545  00262C  0100               	movlb	0	; () banked
 21546  00262E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21547                           
 21548                           ;usb_device_cdc.c: 823: }
 21549  002630  D05E               	goto	l2218
 21550  002632                     l2216:
 21551                           
 21552                           ; BSR set to: 0
 21553                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21554                           
 21555                           ; BSR set to: 0
 21556  002632  05EB               	decf	_cdc_trf_state& (0+255),w,b
 21557  002634  A4D8               	btfss	status,2,c
 21558  002636  D05B               	goto	l2218
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;usb_device_cdc.c: 825: {
 21562                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21563  002638  0E40               	movlw	64
 21564  00263A  65DD               	cpfsgt	_cdc_tx_len& (0+255),b
 21565  00263C  D003               	goto	l2219
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21569  00263E  0E40               	movlw	64
 21570  002640  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21571  002642  D002               	goto	l2220
 21572  002644                     l2219:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;usb_device_cdc.c: 831: else
 21576                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21577  002644  C0DD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21578  002648                     l2220:
 21579                           
 21580                           ; BSR set to: 0
 21581                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21582                           
 21583                           ; BSR set to: 0
 21584  002648  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21585  00264A  0800               	sublw	0
 21586  00264C  25DD               	addwf	_cdc_tx_len& (0+255),w,b
 21587  00264E  6FDD               	movwf	_cdc_tx_len& (0+255),b
 21588                           
 21589                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21590  002650  0E00               	movlw	0
 21591  002652  0101               	movlb	1	; () banked
 21592  002654  6F4E               	movwf	_pCDCDst& (0+255),b
 21593  002656  0E05               	movlw	5
 21594  002658  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21598  00265A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21599                           
 21600                           ; BSR set to: 1
 21601                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21602  00265E  0100               	movlb	0	; () banked
 21603  002660  51DC               	movf	_cdc_mem_type& (0+255),w,b
 21604  002662  B4D8               	btfsc	status,2,c
 21605  002664  D012               	goto	l2222
 21606  002666  D026               	goto	l2226
 21607  002668                     
 21608                           ; BSR set to: 0
 21609                           ;usb_device_cdc.c: 845: {
 21610                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21611                           
 21612                           ; BSR set to: 0
 21613  002668  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21614  00266C  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21615  002670  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21616  002674  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21617  002678  CFDF FFE7          	movff	indf2,indf1
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21621  00267C  0101               	movlb	1	; () banked
 21622  00267E  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21623  002680  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21627  002682  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21628  002684  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21629                           
 21630                           ; BSR set to: 1
 21631                           ;usb_device_cdc.c: 849: i--;
 21632  002686  0100               	movlb	0	; () banked
 21633  002688  076A               	decf	CDCTxService@i& (0+255),f,b
 21634  00268A                     l2222:
 21635                           
 21636                           ; BSR set to: 0
 21637                           
 21638                           ; BSR set to: 0
 21639  00268A  516A               	movf	CDCTxService@i& (0+255),w,b
 21640  00268C  B4D8               	btfsc	status,2,c
 21641  00268E  D015               	goto	u8460
 21642  002690  D7EB               	goto	l2223
 21643  002692                     
 21644                           ; BSR set to: 0
 21645                           ;usb_device_cdc.c: 855: {
 21646                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21647                           
 21648                           ; BSR set to: 0
 21649  002692  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21650  002696  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21651  00269A  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21652  00269E  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21653  0026A2  CFDF FFE7          	movff	indf2,indf1
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21657  0026A6  0101               	movlb	1	; () banked
 21658  0026A8  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21659  0026AA  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21660                           
 21661                           ; BSR set to: 1
 21662                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21663  0026AC  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21664  0026AE  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21665                           
 21666                           ; BSR set to: 1
 21667                           ;usb_device_cdc.c: 859: i--;
 21668  0026B0  0100               	movlb	0	; () banked
 21669  0026B2  076A               	decf	CDCTxService@i& (0+255),f,b
 21670  0026B4                     l2226:
 21671                           
 21672                           ; BSR set to: 0
 21673                           
 21674                           ; BSR set to: 0
 21675  0026B4  516A               	movf	CDCTxService@i& (0+255),w,b
 21676  0026B6  A4D8               	btfss	status,2,c
 21677  0026B8  D7EC               	goto	l2227
 21678  0026BA                     u8460:
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;usb_device_cdc.c: 860: }
 21682                           ;usb_device_cdc.c: 861: }
 21683                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21684                           
 21685                           ; BSR set to: 0
 21686                           
 21687                           ; BSR set to: 0
 21688  0026BA  51DD               	movf	_cdc_tx_len& (0+255),w,b
 21689  0026BC  A4D8               	btfss	status,2,c
 21690  0026BE  D008               	goto	l2231
 21691                           
 21692                           ; BSR set to: 0
 21693                           ;usb_device_cdc.c: 868: {
 21694                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21695  0026C0  0E40               	movlw	64
 21696  0026C2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21697  0026C4  A4D8               	btfss	status,2,c
 21698  0026C6  D002               	goto	l2230
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21702  0026C8  0E02               	movlw	2
 21703  0026CA  D001               	goto	L21
 21704  0026CC                     l2230:
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;usb_device_cdc.c: 871: else
 21708                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21709                           
 21710                           ; BSR set to: 0
 21711  0026CC  0E03               	movlw	3
 21712  0026CE                     L21:
 21713  0026CE  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21714  0026D0                     l2231:
 21715                           
 21716                           ; BSR set to: 0
 21717                           ;usb_device_cdc.c: 873: }
 21718                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21719                           
 21720                           ; BSR set to: 0
 21721                           
 21722                           ; BSR set to: 0
 21723  0026D0  0E01               	movlw	1
 21724  0026D2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21725  0026D4  0E00               	movlw	0
 21726  0026D6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21727  0026D8  0E05               	movlw	5
 21728  0026DA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21729  0026DC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21730  0026E0  0E02               	movlw	2
 21731  0026E2  EC60  F01E         	call	_USBTransferOnePacket
 21732  0026E6  C060  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21733  0026EA  C061  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21734  0026EE                     l2218:
 21735                           
 21736                           ;usb_device_cdc.c: 876: }
 21737                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 21738  0026EE  84A3               	bsf	4003,2,c	;volatile
 21739  0026F0  0012               	return		;funcret
 21740  0026F2                     __end_of_CDCTxService:
 21741                           	opt stack 0
 21742                           tblptru	equ	0xFF8
 21743                           tblptrh	equ	0xFF7
 21744                           tblptrl	equ	0xFF6
 21745                           tablat	equ	0xFF5
 21746                           prodh	equ	0xFF4
 21747                           prodl	equ	0xFF3
 21748                           intcon	equ	0xFF2
 21749                           intcon3	equ	0xFF0
 21750                           indf0	equ	0xFEF
 21751                           postinc0	equ	0xFEE
 21752                           fsr0h	equ	0xFEA
 21753                           fsr0l	equ	0xFE9
 21754                           wreg	equ	0xFE8
 21755                           indf1	equ	0xFE7
 21756                           postdec1	equ	0xFE5
 21757                           fsr1h	equ	0xFE2
 21758                           fsr1l	equ	0xFE1
 21759                           indf2	equ	0xFDF
 21760                           postinc2	equ	0xFDE
 21761                           fsr2h	equ	0xFDA
 21762                           fsr2l	equ	0xFD9
 21763                           status	equ	0xFD8
 21764                           
 21765 ;; *************** function _USBTransferOnePacket *****************
 21766 ;; Defined at:
 21767 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 21768 ;; Parameters:    Size  Location     Type
 21769 ;;  ep              1    wreg     unsigned char 
 21770 ;;  dir             1    0[BANK0 ] unsigned char 
 21771 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21772 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21773 ;;  len             1    3[BANK0 ] unsigned char 
 21774 ;; Auto vars:     Size  Location     Type
 21775 ;;  ep              1    4[BANK0 ] unsigned char 
 21776 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21777 ;;		 -> BDT(48), NULL(0), 
 21778 ;; Return value:  Size  Location     Type
 21779 ;;                  2    0[BANK0 ] PTR void 
 21780 ;; Registers used:
 21781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21782 ;; Tracked objects:
 21783 ;;		On entry : 0/0
 21784 ;;		On exit  : 0/0
 21785 ;;		Unchanged: 0/0
 21786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21787 ;;      Params:         0       4       0       0       0       0       0       0       0
 21788 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21789 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21790 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21791 ;;Total ram usage:        7 bytes
 21792 ;; Hardware stack levels used:    1
 21793 ;; Hardware stack levels required when called:   11
 21794 ;; This function calls:
 21795 ;;		Nothing
 21796 ;; This function is called by:
 21797 ;;		_getsUSBUSART
 21798 ;;		_CDCTxService
 21799 ;;		_USBCDCEventHandler
 21800 ;; This function uses a non-reentrant model
 21801 ;;
 21802                           
 21803                           	psect	text85
 21804  003CC0                     __ptext85:
 21805                           	opt stack 0
 21806  003CC0                     _USBTransferOnePacket:
 21807                           	opt stack 16
 21808                           
 21809                           ;incstack = 0
 21810                           ;USBTransferOnePacket@ep stored from wreg
 21811  003CC0  0100               	movlb	0	; () banked
 21812  003CC2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21813                           
 21814                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 21815                           ;usb_device.c: 762: if(dir != 0)
 21816  003CC4  0100               	movlb	0	; () banked
 21817  003CC6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21818  003CC8  B4D8               	btfsc	status,2,c
 21819  003CCA  D007               	goto	l1893
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;usb_device.c: 763: {
 21823                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 21824  003CCC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21825  003CCE  0D02               	mullw	2
 21826  003CD0  0ECA               	movlw	low _pBDTEntryIn
 21827  003CD2  24F3               	addwf	prodl,w,c
 21828  003CD4  6ED9               	movwf	fsr2l,c
 21829  003CD6  0E00               	movlw	high _pBDTEntryIn
 21830  003CD8  D006               	goto	L22
 21831  003CDA                     l1893:
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;usb_device.c: 767: else
 21835                           ;usb_device.c: 768: {
 21836                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 21837                           
 21838                           ; BSR set to: 0
 21839  003CDA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21840  003CDC  0D02               	mullw	2
 21841  003CDE  0E40               	movlw	low _pBDTEntryOut
 21842  003CE0  24F3               	addwf	prodl,w,c
 21843  003CE2  6ED9               	movwf	fsr2l,c
 21844  003CE4  0E01               	movlw	high _pBDTEntryOut
 21845  003CE6                     L22:
 21846  003CE6  20F4               	addwfc	prodh,w,c
 21847  003CE8  6EDA               	movwf	fsr2h,c
 21848  003CEA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21849  003CEE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21850                           
 21851                           ; BSR set to: 0
 21852                           ;usb_device.c: 771: }
 21853                           ;usb_device.c: 775: if(handle == 0)
 21854                           
 21855                           ; BSR set to: 0
 21856  003CF2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21857  003CF4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21858  003CF6  A4D8               	btfss	status,2,c
 21859  003CF8  D005               	goto	l1895
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;usb_device.c: 776: {
 21863                           ;usb_device.c: 777: return 0;
 21864  003CFA  0E00               	movlw	0
 21865  003CFC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21866  003CFE  0E00               	movlw	0
 21867  003D00  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21868                           
 21869                           ; BSR set to: 0
 21870  003D02  0012               	return	
 21871  003D04                     l1895:
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;usb_device.c: 778: }
 21875                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 21876                           
 21877                           ; BSR set to: 0
 21878  003D04  EE20 F002          	lfsr	2,2
 21879  003D08  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21880  003D0A  26D9               	addwf	fsr2l,f,c
 21881  003D0C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21882  003D0E  22DA               	addwfc	fsr2h,f,c
 21883  003D10  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21884  003D14  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21885                           
 21886                           ;usb_device.c: 781: handle->CNT = len;
 21887  003D18  EE20 F001          	lfsr	2,1
 21888  003D1C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21889  003D1E  26D9               	addwf	fsr2l,f,c
 21890  003D20  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21891  003D22  22DA               	addwfc	fsr2h,f,c
 21892  003D24  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 21896  003D28  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21897  003D2C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21898  003D30  0E40               	movlw	64
 21899  003D32  16DF               	andwf	indf2,f,c
 21900                           
 21901                           ; BSR set to: 0
 21902                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 21903  003D34  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21904  003D38  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21905  003D3C  0E00               	movlw	0
 21906  003D3E  86DB               	bsf	plusw2,3,c
 21907                           
 21908                           ; BSR set to: 0
 21909                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 21910  003D40  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21911  003D44  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21912  003D48  0E00               	movlw	0
 21913  003D4A  8EDB               	bsf	plusw2,7,c
 21914                           
 21915                           ; BSR set to: 0
 21916                           ;usb_device.c: 787: if(dir != 0)
 21917  003D4C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21918  003D4E  B4D8               	btfsc	status,2,c
 21919  003D50  D007               	goto	l1897
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;usb_device.c: 788: {
 21923                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21924  003D52  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21925  003D54  0D02               	mullw	2
 21926  003D56  0ECA               	movlw	low _pBDTEntryIn
 21927  003D58  24F3               	addwf	prodl,w,c
 21928  003D5A  6ED9               	movwf	fsr2l,c
 21929  003D5C  0E00               	movlw	high _pBDTEntryIn
 21930  003D5E  D006               	goto	L23
 21931  003D60                     l1897:
 21932                           
 21933                           ; BSR set to: 0
 21934                           ;usb_device.c: 792: else
 21935                           ;usb_device.c: 793: {
 21936                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21937                           
 21938                           ; BSR set to: 0
 21939  003D60  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21940  003D62  0D02               	mullw	2
 21941  003D64  0E40               	movlw	low _pBDTEntryOut
 21942  003D66  24F3               	addwf	prodl,w,c
 21943  003D68  6ED9               	movwf	fsr2l,c
 21944  003D6A  0E01               	movlw	high _pBDTEntryOut
 21945  003D6C                     L23:
 21946  003D6C  20F4               	addwfc	prodh,w,c
 21947  003D6E  6EDA               	movwf	fsr2h,c
 21948  003D70  0E04               	movlw	4
 21949  003D72  1ADF               	xorwf	indf2,f,c
 21950                           
 21951                           ; BSR set to: 0
 21952                           ;usb_device.c: 796: }
 21953                           ;usb_device.c: 797: return (void*)handle;
 21954                           
 21955                           ; BSR set to: 0
 21956  003D74  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21957  003D78  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21958  003D7C  0012               	return	
 21959  003D7E                     __end_of_USBTransferOnePacket:
 21960                           	opt stack 0
 21961                           tblptru	equ	0xFF8
 21962                           tblptrh	equ	0xFF7
 21963                           tblptrl	equ	0xFF6
 21964                           tablat	equ	0xFF5
 21965                           prodh	equ	0xFF4
 21966                           prodl	equ	0xFF3
 21967                           intcon	equ	0xFF2
 21968                           intcon3	equ	0xFF0
 21969                           indf0	equ	0xFEF
 21970                           postinc0	equ	0xFEE
 21971                           fsr0h	equ	0xFEA
 21972                           fsr0l	equ	0xFE9
 21973                           wreg	equ	0xFE8
 21974                           indf1	equ	0xFE7
 21975                           postdec1	equ	0xFE5
 21976                           fsr1h	equ	0xFE2
 21977                           fsr1l	equ	0xFE1
 21978                           indf2	equ	0xFDF
 21979                           postinc2	equ	0xFDE
 21980                           postdec2	equ	0xFDD
 21981                           plusw2	equ	0xFDB
 21982                           fsr2h	equ	0xFDA
 21983                           fsr2l	equ	0xFD9
 21984                           status	equ	0xFD8
 21985                           
 21986 ;; *************** function _USBDeviceInit *****************
 21987 ;; Defined at:
 21988 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 21989 ;; Parameters:    Size  Location     Type
 21990 ;;		None
 21991 ;; Auto vars:     Size  Location     Type
 21992 ;;  i               1    8[BANK0 ] unsigned char 
 21993 ;; Return value:  Size  Location     Type
 21994 ;;                  1    wreg      void 
 21995 ;; Registers used:
 21996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21997 ;; Tracked objects:
 21998 ;;		On entry : 0/0
 21999 ;;		On exit  : 0/0
 22000 ;;		Unchanged: 0/0
 22001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22002 ;;      Params:         0       0       0       0       0       0       0       0       0
 22003 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22005 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22006 ;;Total ram usage:        1 bytes
 22007 ;; Hardware stack levels used:    1
 22008 ;; Hardware stack levels required when called:   12
 22009 ;; This function calls:
 22010 ;;		_memset
 22011 ;; This function is called by:
 22012 ;;		_main
 22013 ;; This function uses a non-reentrant model
 22014 ;;
 22015                           
 22016                           	psect	text86
 22017  002958                     __ptext86:
 22018                           	opt stack 0
 22019  002958                     _USBDeviceInit:
 22020                           	opt stack 18
 22021                           
 22022                           ;usb_device.c: 239: uint8_t i;
 22023                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 22024                           
 22025                           ; BSR set to: 0
 22026                           ;incstack = 0
 22027  002958  94A3               	bcf	4003,2,c	;volatile
 22028                           
 22029                           ;usb_device.c: 244: {UEIR = 0;};
 22030  00295A  0E00               	movlw	0
 22031  00295C  6E67               	movwf	3943,c	;volatile
 22032                           
 22033                           ;usb_device.c: 247: {UIR = 0;};
 22034  00295E  0E00               	movlw	0
 22035  002960  6E65               	movwf	3941,c	;volatile
 22036                           
 22037                           ;usb_device.c: 250: UEP0 = 0;
 22038  002962  0E00               	movlw	0
 22039  002964  6E6A               	movwf	3946,c	;volatile
 22040                           
 22041                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 22042  002966  0E6B               	movlw	107
 22043  002968  0100               	movlb	0	; () banked
 22044  00296A  6F60               	movwf	memset@p1& (0+255),b
 22045  00296C  0E0F               	movlw	15
 22046  00296E  6F61               	movwf	(memset@p1+1)& (0+255),b
 22047  002970  0E00               	movlw	0
 22048  002972  6F63               	movwf	(memset@c+1)& (0+255),b
 22049  002974  0E00               	movlw	0
 22050  002976  6F62               	movwf	memset@c& (0+255),b
 22051  002978  0E00               	movlw	0
 22052  00297A  6F65               	movwf	(memset@n+1)& (0+255),b
 22053  00297C  0E02               	movlw	2
 22054  00297E  6F64               	movwf	memset@n& (0+255),b
 22055  002980  ECF5  F02A         	call	_memset	;wreg free
 22056                           
 22057                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22058  002984  0E16               	movlw	22
 22059  002986  6E62               	movwf	3938,c	;volatile
 22060  002988  0E9F               	movlw	159
 22061  00298A  6E66               	movwf	3942,c	;volatile
 22062  00298C  0E7B               	movlw	123
 22063  00298E  6E64               	movwf	3940,c	;volatile
 22064                           
 22065                           ;usb_device.c: 257: ;
 22066                           ;usb_device.c: 260: ;
 22067                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22068  002990  0E00               	movlw	0
 22069  002992  0100               	movlb	0	; () banked
 22070  002994  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22071  002996                     l11410:
 22072                           
 22073                           ; BSR set to: 0
 22074  002996  0E0B               	movlw	11
 22075  002998  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22076  00299A  D001               	goto	l1853
 22077  00299C  D00E               	goto	u10000
 22078  00299E                     l1853:
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;usb_device.c: 264: {
 22082                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22083                           
 22084                           ; BSR set to: 0
 22085  00299E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22086  0029A0  0D04               	mullw	4
 22087  0029A2  0E00               	movlw	0
 22088  0029A4  24F3               	addwf	prodl,w,c
 22089  0029A6  6ED9               	movwf	fsr2l,c
 22090  0029A8  0E04               	movlw	4
 22091  0029AA  20F4               	addwfc	prodh,w,c
 22092  0029AC  6EDA               	movwf	fsr2h,c
 22093  0029AE  6ADE               	clrf	postinc2,c
 22094  0029B0  6ADE               	clrf	postinc2,c
 22095  0029B2  6ADE               	clrf	postinc2,c
 22096  0029B4  6ADD               	clrf	postdec2,c
 22097                           
 22098                           ; BSR set to: 0
 22099  0029B6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22100  0029B8  D7EE               	goto	l11410
 22101  0029BA                     u10000:
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;usb_device.c: 266: }
 22105                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22106  0029BA  8C60               	bsf	3936,6,c	;volatile
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;usb_device.c: 272: UADDR = 0x00;
 22110  0029BC  0E00               	movlw	0
 22111  0029BE  6E63               	movwf	3939,c	;volatile
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22115  0029C0  9860               	bcf	3936,4,c	;volatile
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22119  0029C2  9C60               	bcf	3936,6,c	;volatile
 22120                           
 22121                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22122  0029C4  D009               	goto	l1855
 22123  0029C6                     
 22124                           ; BSR set to: 0
 22125                           ;usb_device.c: 282: {
 22126                           ;usb_device.c: 283: (UIR &= 0xF7);
 22127                           
 22128                           ; BSR set to: 0
 22129  0029C6  9665               	bcf	3941,3,c	;volatile
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22133  0029C8  0E00               	movlw	0
 22134  0029CA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22138  0029CC  0E00               	movlw	0
 22139  0029CE  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22140                           
 22141                           ; BSR set to: 0
 22142                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22143  0029D0  0E00               	movlw	0
 22144  0029D2  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22145  0029D4  0E00               	movlw	0
 22146  0029D6  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22147  0029D8                     l1855:
 22148                           
 22149                           ; BSR set to: 0
 22150                           
 22151                           ; BSR set to: 0
 22152  0029D8  B665               	btfsc	3941,3,c	;volatile
 22153  0029DA  D7F5               	goto	l1856
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;usb_device.c: 288: }
 22157                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22158                           
 22159                           ; BSR set to: 0
 22160  0029DC  0E01               	movlw	1
 22161  0029DE  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22162                           
 22163                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22164  0029E0  0E01               	movlw	1
 22165  0029E2  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22166                           
 22167                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22168  0029E4  0E00               	movlw	0
 22169  0029E6  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22170                           
 22171                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22172  0029E8  0E00               	movlw	0
 22173  0029EA  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22174                           
 22175                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22176  0029EC  0E00               	movlw	0
 22177  0029EE  0101               	movlb	1	; () banked
 22178  0029F0  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22179                           
 22180                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22181  0029F2  0E00               	movlw	0
 22182  0029F4  0100               	movlb	0	; () banked
 22183  0029F6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22184  0029F8                     l11438:
 22185                           
 22186                           ; BSR set to: 0
 22187  0029F8  0E02               	movlw	2
 22188  0029FA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22189  0029FC  D001               	goto	l1858
 22190  0029FE  D02E               	goto	u10030
 22191  002A00                     l1858:
 22192                           
 22193                           ; BSR set to: 0
 22194                           ;usb_device.c: 302: {
 22195                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22196                           
 22197                           ; BSR set to: 0
 22198  002A00  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22199  002A02  0D02               	mullw	2
 22200  002A04  0ECA               	movlw	low _pBDTEntryIn
 22201  002A06  24F3               	addwf	prodl,w,c
 22202  002A08  6ED9               	movwf	fsr2l,c
 22203  002A0A  0E00               	movlw	high _pBDTEntryIn
 22204  002A0C  20F4               	addwfc	prodh,w,c
 22205  002A0E  6EDA               	movwf	fsr2h,c
 22206  002A10  0E00               	movlw	0
 22207  002A12  6EDE               	movwf	postinc2,c
 22208  002A14  0E00               	movlw	0
 22209  002A16  6EDD               	movwf	postdec2,c
 22210                           
 22211                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22212  002A18  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22213  002A1A  0D02               	mullw	2
 22214  002A1C  0E40               	movlw	low _pBDTEntryOut
 22215  002A1E  24F3               	addwf	prodl,w,c
 22216  002A20  6ED9               	movwf	fsr2l,c
 22217  002A22  0E01               	movlw	high _pBDTEntryOut
 22218  002A24  20F4               	addwfc	prodh,w,c
 22219  002A26  6EDA               	movwf	fsr2h,c
 22220  002A28  0E00               	movlw	0
 22221  002A2A  6EDE               	movwf	postinc2,c
 22222  002A2C  0E00               	movlw	0
 22223  002A2E  6EDD               	movwf	postdec2,c
 22224                           
 22225                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22226  002A30  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22227  002A32  0D01               	mullw	1
 22228  002A34  0ED3               	movlw	low _ep_data_in
 22229  002A36  24F3               	addwf	prodl,w,c
 22230  002A38  6ED9               	movwf	fsr2l,c
 22231  002A3A  0E00               	movlw	high _ep_data_in
 22232  002A3C  20F4               	addwfc	prodh,w,c
 22233  002A3E  6EDA               	movwf	fsr2h,c
 22234  002A40  0E00               	movlw	0
 22235  002A42  6EDF               	movwf	indf2,c
 22236                           
 22237                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22238  002A44  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22239  002A46  0D01               	mullw	1
 22240  002A48  0ED0               	movlw	low _ep_data_out
 22241  002A4A  24F3               	addwf	prodl,w,c
 22242  002A4C  6ED9               	movwf	fsr2l,c
 22243  002A4E  0E00               	movlw	high _ep_data_out
 22244  002A50  20F4               	addwfc	prodh,w,c
 22245  002A52  6EDA               	movwf	fsr2h,c
 22246  002A54  0E00               	movlw	0
 22247  002A56  6EDF               	movwf	indf2,c
 22248                           
 22249                           ; BSR set to: 0
 22250  002A58  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22251  002A5A  D7CE               	goto	l11438
 22252  002A5C                     u10030:
 22253                           
 22254                           ; BSR set to: 0
 22255                           ;usb_device.c: 307: }
 22256                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22257                           
 22258                           ; BSR set to: 0
 22259  002A5C  0E08               	movlw	8
 22260  002A5E  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 22261  002A60  0E04               	movlw	4
 22262  002A62  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22266  002A64  0E16               	movlw	22
 22267  002A66  6E6A               	movwf	3946,c	;volatile
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22271  002A68  0E04               	movlw	4
 22272  002A6A  0104               	movlb	4	; () banked
 22273  002A6C  6F03               	movwf	3,b	;volatile
 22274  002A6E  0E30               	movlw	48
 22275  002A70  6F02               	movwf	2,b	;volatile
 22276                           
 22277                           ; BSR set to: 4
 22278                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22279  002A72  0E08               	movlw	8
 22280  002A74  6F01               	movwf	1,b	;volatile
 22281                           
 22282                           ; BSR set to: 4
 22283                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22284  002A76  0E04               	movlw	4
 22285  002A78  6F00               	movwf	0,b	;volatile
 22286                           
 22287                           ; BSR set to: 4
 22288                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22289  002A7A  8F00               	bsf	0,7,b	;volatile
 22290                           
 22291                           ; BSR set to: 4
 22292                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22293  002A7C  0E00               	movlw	0
 22294  002A7E  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 22295                           
 22296                           ; BSR set to: 4
 22297                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22298  002A80  0E00               	movlw	0
 22299  002A82  0100               	movlb	0	; () banked
 22300  002A84  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22301                           
 22302                           ; BSR set to: 0
 22303  002A86  0012               	return		;funcret
 22304  002A88                     __end_of_USBDeviceInit:
 22305                           	opt stack 0
 22306                           tblptru	equ	0xFF8
 22307                           tblptrh	equ	0xFF7
 22308                           tblptrl	equ	0xFF6
 22309                           tablat	equ	0xFF5
 22310                           prodh	equ	0xFF4
 22311                           prodl	equ	0xFF3
 22312                           intcon	equ	0xFF2
 22313                           intcon3	equ	0xFF0
 22314                           indf0	equ	0xFEF
 22315                           postinc0	equ	0xFEE
 22316                           fsr0h	equ	0xFEA
 22317                           fsr0l	equ	0xFE9
 22318                           wreg	equ	0xFE8
 22319                           indf1	equ	0xFE7
 22320                           postdec1	equ	0xFE5
 22321                           fsr1h	equ	0xFE2
 22322                           fsr1l	equ	0xFE1
 22323                           indf2	equ	0xFDF
 22324                           postinc2	equ	0xFDE
 22325                           postdec2	equ	0xFDD
 22326                           plusw2	equ	0xFDB
 22327                           fsr2h	equ	0xFDA
 22328                           fsr2l	equ	0xFD9
 22329                           status	equ	0xFD8
 22330                           
 22331 ;; *************** function _memset *****************
 22332 ;; Defined at:
 22333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 22334 ;; Parameters:    Size  Location     Type
 22335 ;;  p1              2    0[BANK0 ] PTR void 
 22336 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22337 ;;  c               2    2[BANK0 ] int 
 22338 ;;  n               2    4[BANK0 ] unsigned int 
 22339 ;; Auto vars:     Size  Location     Type
 22340 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22341 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  2    0[BANK0 ] PTR void 
 22344 ;; Registers used:
 22345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22346 ;; Tracked objects:
 22347 ;;		On entry : 0/0
 22348 ;;		On exit  : 0/0
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22351 ;;      Params:         0       6       0       0       0       0       0       0       0
 22352 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22354 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22355 ;;Total ram usage:        8 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; Hardware stack levels required when called:   11
 22358 ;; This function calls:
 22359 ;;		Nothing
 22360 ;; This function is called by:
 22361 ;;		_USBDeviceInit
 22362 ;; This function uses a non-reentrant model
 22363 ;;
 22364                           
 22365                           	psect	text87
 22366  0055EA                     __ptext87:
 22367                           	opt stack 0
 22368  0055EA                     _memset:
 22369                           	opt stack 18
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;incstack = 0
 22373  0055EA  C060  F066         	movff	memset@p1,memset@p
 22374  0055EE  C061  F067         	movff	memset@p1+1,memset@p+1
 22375  0055F2  D009               	goto	l2679
 22376  0055F4                     l11232:
 22377  0055F4  C066  FFD9         	movff	memset@p,fsr2l
 22378  0055F8  C067  FFDA         	movff	memset@p+1,fsr2h
 22379  0055FC  C062  FFDF         	movff	memset@c,indf2
 22380  005600  0100               	movlb	0	; () banked
 22381  005602  4B66               	infsnz	memset@p& (0+255),f,b
 22382  005604  2B67               	incf	(memset@p+1)& (0+255),f,b
 22383  005606                     l2679:
 22384                           
 22385                           ; BSR set to: 0
 22386  005606  0100               	movlb	0	; () banked
 22387  005608  0764               	decf	memset@n& (0+255),f,b
 22388  00560A  A0D8               	btfss	status,0,c
 22389  00560C  0765               	decf	(memset@n+1)& (0+255),f,b
 22390  00560E  2964               	incf	memset@n& (0+255),w,b
 22391  005610  E1F1               	bnz	l11232
 22392  005612  2965               	incf	(memset@n+1)& (0+255),w,b
 22393  005614  B4D8               	btfsc	status,2,c
 22394  005616  0012               	return	
 22395  005618  D7ED               	goto	l2680
 22396  00561A                     __end_of_memset:
 22397                           	opt stack 0
 22398                           tblptru	equ	0xFF8
 22399                           tblptrh	equ	0xFF7
 22400                           tblptrl	equ	0xFF6
 22401                           tablat	equ	0xFF5
 22402                           prodh	equ	0xFF4
 22403                           prodl	equ	0xFF3
 22404                           intcon	equ	0xFF2
 22405                           intcon3	equ	0xFF0
 22406                           indf0	equ	0xFEF
 22407                           postinc0	equ	0xFEE
 22408                           fsr0h	equ	0xFEA
 22409                           fsr0l	equ	0xFE9
 22410                           wreg	equ	0xFE8
 22411                           indf1	equ	0xFE7
 22412                           postdec1	equ	0xFE5
 22413                           fsr1h	equ	0xFE2
 22414                           fsr1l	equ	0xFE1
 22415                           indf2	equ	0xFDF
 22416                           postinc2	equ	0xFDE
 22417                           postdec2	equ	0xFDD
 22418                           plusw2	equ	0xFDB
 22419                           fsr2h	equ	0xFDA
 22420                           fsr2l	equ	0xFD9
 22421                           status	equ	0xFD8
 22422                           
 22423 ;; *************** function _USBDeviceAttach *****************
 22424 ;; Defined at:
 22425 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22426 ;; Parameters:    Size  Location     Type
 22427 ;;		None
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;		None
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  1    wreg      void 
 22432 ;; Registers used:
 22433 ;;		wreg, status,2
 22434 ;; Tracked objects:
 22435 ;;		On entry : 0/0
 22436 ;;		On exit  : 0/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22439 ;;      Params:         0       0       0       0       0       0       0       0       0
 22440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22442 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22443 ;;Total ram usage:        0 bytes
 22444 ;; Hardware stack levels used:    1
 22445 ;; Hardware stack levels required when called:   11
 22446 ;; This function calls:
 22447 ;;		Nothing
 22448 ;; This function is called by:
 22449 ;;		_main
 22450 ;; This function uses a non-reentrant model
 22451 ;;
 22452                           
 22453                           	psect	text88
 22454  0054C0                     __ptext88:
 22455                           	opt stack 0
 22456  0054C0                     _USBDeviceAttach:
 22457                           	opt stack 19
 22458                           
 22459                           ;usb_device.c: 1050: {
 22460                           ;usb_device.c: 1051: if(1 == 1)
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;incstack = 0
 22464  0054C0  0100               	movlb	0	; () banked
 22465  0054C2  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22466  0054C4  A4D8               	btfss	status,2,c
 22467  0054C6  0012               	return	
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;usb_device.c: 1052: {
 22471                           ;usb_device.c: 1054: UCON = 0;
 22472  0054C8  0E00               	movlw	0
 22473  0054CA  6E60               	movwf	3936,c	;volatile
 22474                           
 22475                           ;usb_device.c: 1057: UIE = 0;
 22476  0054CC  0E00               	movlw	0
 22477  0054CE  6E64               	movwf	3940,c	;volatile
 22478                           
 22479                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22480  0054D0  0E16               	movlw	22
 22481  0054D2  6E62               	movwf	3938,c	;volatile
 22482  0054D4  0E9F               	movlw	159
 22483  0054D6  6E66               	movwf	3942,c	;volatile
 22484  0054D8  0E7B               	movlw	123
 22485  0054DA  6E64               	movwf	3940,c	;volatile
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22489  0054DC  8ED0               	bsf	4048,7,c	;volatile
 22490                           
 22491                           ; BSR set to: 0
 22492  0054DE  84A5               	bsf	4005,2,c	;volatile
 22493                           
 22494                           ; BSR set to: 0
 22495  0054E0  84A3               	bsf	4003,2,c	;volatile
 22496                           
 22497                           ; BSR set to: 0
 22498  0054E2  8EF2               	bsf	intcon,7,c	;volatile
 22499                           
 22500                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22501  0054E4  D001               	goto	l1915
 22502  0054E6                     l1916:
 22503  0054E6  8660               	bsf	3936,3,c	;volatile
 22504  0054E8                     l1915:
 22505  0054E8  A660               	btfss	3936,3,c	;volatile
 22506  0054EA  D7FD               	goto	l1916
 22507                           
 22508                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22509  0054EC  0E01               	movlw	1
 22510  0054EE  0100               	movlb	0	; () banked
 22511  0054F0  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22512                           
 22513                           ; BSR set to: 0
 22514  0054F2  0012               	return	
 22515  0054F4                     __end_of_USBDeviceAttach:
 22516                           	opt stack 0
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon3	equ	0xFF0
 22525                           indf0	equ	0xFEF
 22526                           postinc0	equ	0xFEE
 22527                           fsr0h	equ	0xFEA
 22528                           fsr0l	equ	0xFE9
 22529                           wreg	equ	0xFE8
 22530                           indf1	equ	0xFE7
 22531                           postdec1	equ	0xFE5
 22532                           fsr1h	equ	0xFE2
 22533                           fsr1l	equ	0xFE1
 22534                           indf2	equ	0xFDF
 22535                           postinc2	equ	0xFDE
 22536                           postdec2	equ	0xFDD
 22537                           plusw2	equ	0xFDB
 22538                           fsr2h	equ	0xFDA
 22539                           fsr2l	equ	0xFD9
 22540                           status	equ	0xFD8
 22541                           
 22542 ;; *************** function _SYSTEM_Initialize *****************
 22543 ;; Defined at:
 22544 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;		None
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;		None
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  1    wreg      void 
 22551 ;; Registers used:
 22552 ;;		wreg, status,2, status,0, cstack
 22553 ;; Tracked objects:
 22554 ;;		On entry : 0/0
 22555 ;;		On exit  : 0/0
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22558 ;;      Params:         0       0       0       0       0       0       0       0       0
 22559 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22561 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22562 ;;Total ram usage:        0 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:   13
 22565 ;; This function calls:
 22566 ;;		_ADC_Initialize
 22567 ;;		_CMP1_Initialize
 22568 ;;		_EUSART_Initialize
 22569 ;;		_InitSwUart
 22570 ;;		_OSCILLATOR_Initialize
 22571 ;;		_PIN_MANAGER_Initialize
 22572 ;;		_TMR0_Initialize
 22573 ;;		_TMR1_Initialize
 22574 ;;		_TMR2_Initialize
 22575 ;;		_TMR3_Initialize
 22576 ;; This function is called by:
 22577 ;;		_main
 22578 ;; This function uses a non-reentrant model
 22579 ;;
 22580                           
 22581                           	psect	text89
 22582  005732                     __ptext89:
 22583                           	opt stack 0
 22584  005732                     _SYSTEM_Initialize:
 22585                           	opt stack 17
 22586                           
 22587                           ;mcc.c: 96: OSCILLATOR_Initialize();
 22588                           
 22589                           ; BSR set to: 0
 22590                           ;incstack = 0
 22591  005732  ECD8  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 22592                           
 22593                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 22594  005736  EC72  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 22595                           
 22596                           ;mcc.c: 99: TMR1_Initialize();
 22597  00573A  ECAC  F02A         	call	_TMR1_Initialize	;wreg free
 22598                           
 22599                           ;mcc.c: 100: TMR2_Initialize();
 22600  00573E  EC17  F02D         	call	_TMR2_Initialize	;wreg free
 22601                           
 22602                           ;mcc.c: 101: TMR3_Initialize();
 22603  005742  EC22  F02C         	call	_TMR3_Initialize	;wreg free
 22604                           
 22605                           ;mcc.c: 102: EUSART_Initialize();
 22606  005746  EC28  F02A         	call	_EUSART_Initialize	;wreg free
 22607                           
 22608                           ;mcc.c: 103: TMR0_Initialize();
 22609  00574A  EC43  F02C         	call	_TMR0_Initialize	;wreg free
 22610                           
 22611                           ;mcc.c: 104: ADC_Initialize();
 22612  00574E  EC9B  F02C         	call	_ADC_Initialize	;wreg free
 22613                           
 22614                           ;mcc.c: 105: CMP1_Initialize();
 22615  005752  EC35  F02D         	call	_CMP1_Initialize	;wreg free
 22616                           
 22617                           ;mcc.c: 107: InitSwUart();
 22618  005756  EC80  F02C         	call	_InitSwUart	;wreg free
 22619  00575A  0012               	return		;funcret
 22620  00575C                     __end_of_SYSTEM_Initialize:
 22621                           	opt stack 0
 22622                           tblptru	equ	0xFF8
 22623                           tblptrh	equ	0xFF7
 22624                           tblptrl	equ	0xFF6
 22625                           tablat	equ	0xFF5
 22626                           prodh	equ	0xFF4
 22627                           prodl	equ	0xFF3
 22628                           intcon	equ	0xFF2
 22629                           intcon3	equ	0xFF0
 22630                           indf0	equ	0xFEF
 22631                           postinc0	equ	0xFEE
 22632                           fsr0h	equ	0xFEA
 22633                           fsr0l	equ	0xFE9
 22634                           wreg	equ	0xFE8
 22635                           indf1	equ	0xFE7
 22636                           postdec1	equ	0xFE5
 22637                           fsr1h	equ	0xFE2
 22638                           fsr1l	equ	0xFE1
 22639                           indf2	equ	0xFDF
 22640                           postinc2	equ	0xFDE
 22641                           postdec2	equ	0xFDD
 22642                           plusw2	equ	0xFDB
 22643                           fsr2h	equ	0xFDA
 22644                           fsr2l	equ	0xFD9
 22645                           status	equ	0xFD8
 22646                           
 22647 ;; *************** function _TMR3_Initialize *****************
 22648 ;; Defined at:
 22649 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22650 ;; Parameters:    Size  Location     Type
 22651 ;;		None
 22652 ;; Auto vars:     Size  Location     Type
 22653 ;;		None
 22654 ;; Return value:  Size  Location     Type
 22655 ;;                  1    wreg      void 
 22656 ;; Registers used:
 22657 ;;		wreg, status,2, cstack
 22658 ;; Tracked objects:
 22659 ;;		On entry : 0/0
 22660 ;;		On exit  : 0/0
 22661 ;;		Unchanged: 0/0
 22662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22663 ;;      Params:         0       0       0       0       0       0       0       0       0
 22664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22666 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22667 ;;Total ram usage:        0 bytes
 22668 ;; Hardware stack levels used:    1
 22669 ;; Hardware stack levels required when called:   12
 22670 ;; This function calls:
 22671 ;;		_TMR3_StartTimer
 22672 ;; This function is called by:
 22673 ;;		_SYSTEM_Initialize
 22674 ;; This function uses a non-reentrant model
 22675 ;;
 22676                           
 22677                           	psect	text90
 22678  005844                     __ptext90:
 22679                           	opt stack 0
 22680  005844                     _TMR3_Initialize:
 22681                           	opt stack 17
 22682                           
 22683                           ;tmr3.c: 72: T3CON = 0x04;
 22684                           
 22685                           ;incstack = 0
 22686  005844  0E04               	movlw	4
 22687  005846  6EB1               	movwf	4017,c	;volatile
 22688                           
 22689                           ;tmr3.c: 75: T3GCON = 0x00;
 22690  005848  0E00               	movlw	0
 22691  00584A  6EB4               	movwf	4020,c	;volatile
 22692                           
 22693                           ;tmr3.c: 78: TMR3H = 0xD5;
 22694  00584C  0ED5               	movlw	213
 22695  00584E  6EB3               	movwf	4019,c	;volatile
 22696                           
 22697                           ;tmr3.c: 81: TMR3L = 0xD0;
 22698  005850  0ED0               	movlw	208
 22699  005852  6EB2               	movwf	4018,c	;volatile
 22700                           
 22701                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22702  005854  CFB2 F039          	movff	4018,_timer3ReloadVal	;volatile
 22703  005858  CFB3 F03A          	movff	4019,_timer3ReloadVal+1	;volatile
 22704                           
 22705                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22706  00585C  92A1               	bcf	4001,1,c	;volatile
 22707                           
 22708                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22709  00585E  82A0               	bsf	4000,1,c	;volatile
 22710                           
 22711                           ;tmr3.c: 93: TMR3_StartTimer();
 22712  005860  ECBA  F02D         	call	_TMR3_StartTimer	;wreg free
 22713  005864  0012               	return		;funcret
 22714  005866                     __end_of_TMR3_Initialize:
 22715                           	opt stack 0
 22716                           tblptru	equ	0xFF8
 22717                           tblptrh	equ	0xFF7
 22718                           tblptrl	equ	0xFF6
 22719                           tablat	equ	0xFF5
 22720                           prodh	equ	0xFF4
 22721                           prodl	equ	0xFF3
 22722                           intcon	equ	0xFF2
 22723                           intcon3	equ	0xFF0
 22724                           indf0	equ	0xFEF
 22725                           postinc0	equ	0xFEE
 22726                           fsr0h	equ	0xFEA
 22727                           fsr0l	equ	0xFE9
 22728                           wreg	equ	0xFE8
 22729                           indf1	equ	0xFE7
 22730                           postdec1	equ	0xFE5
 22731                           fsr1h	equ	0xFE2
 22732                           fsr1l	equ	0xFE1
 22733                           indf2	equ	0xFDF
 22734                           postinc2	equ	0xFDE
 22735                           postdec2	equ	0xFDD
 22736                           plusw2	equ	0xFDB
 22737                           fsr2h	equ	0xFDA
 22738                           fsr2l	equ	0xFD9
 22739                           status	equ	0xFD8
 22740                           
 22741 ;; *************** function _TMR3_StartTimer *****************
 22742 ;; Defined at:
 22743 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22744 ;; Parameters:    Size  Location     Type
 22745 ;;		None
 22746 ;; Auto vars:     Size  Location     Type
 22747 ;;		None
 22748 ;; Return value:  Size  Location     Type
 22749 ;;                  1    wreg      void 
 22750 ;; Registers used:
 22751 ;;		None
 22752 ;; Tracked objects:
 22753 ;;		On entry : 0/0
 22754 ;;		On exit  : 0/0
 22755 ;;		Unchanged: 0/0
 22756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22757 ;;      Params:         0       0       0       0       0       0       0       0       0
 22758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22760 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22761 ;;Total ram usage:        0 bytes
 22762 ;; Hardware stack levels used:    1
 22763 ;; Hardware stack levels required when called:   11
 22764 ;; This function calls:
 22765 ;;		Nothing
 22766 ;; This function is called by:
 22767 ;;		_TMR3_Initialize
 22768 ;; This function uses a non-reentrant model
 22769 ;;
 22770                           
 22771                           	psect	text91
 22772  005B74                     __ptext91:
 22773                           	opt stack 0
 22774  005B74                     _TMR3_StartTimer:
 22775                           	opt stack 17
 22776                           
 22777                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22778                           
 22779                           ;incstack = 0
 22780  005B74  80B1               	bsf	4017,0,c	;volatile
 22781  005B76  0012               	return		;funcret
 22782  005B78                     __end_of_TMR3_StartTimer:
 22783                           	opt stack 0
 22784                           tblptru	equ	0xFF8
 22785                           tblptrh	equ	0xFF7
 22786                           tblptrl	equ	0xFF6
 22787                           tablat	equ	0xFF5
 22788                           prodh	equ	0xFF4
 22789                           prodl	equ	0xFF3
 22790                           intcon	equ	0xFF2
 22791                           intcon3	equ	0xFF0
 22792                           indf0	equ	0xFEF
 22793                           postinc0	equ	0xFEE
 22794                           fsr0h	equ	0xFEA
 22795                           fsr0l	equ	0xFE9
 22796                           wreg	equ	0xFE8
 22797                           indf1	equ	0xFE7
 22798                           postdec1	equ	0xFE5
 22799                           fsr1h	equ	0xFE2
 22800                           fsr1l	equ	0xFE1
 22801                           indf2	equ	0xFDF
 22802                           postinc2	equ	0xFDE
 22803                           postdec2	equ	0xFDD
 22804                           plusw2	equ	0xFDB
 22805                           fsr2h	equ	0xFDA
 22806                           fsr2l	equ	0xFD9
 22807                           status	equ	0xFD8
 22808                           
 22809 ;; *************** function _TMR2_Initialize *****************
 22810 ;; Defined at:
 22811 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22812 ;; Parameters:    Size  Location     Type
 22813 ;;		None
 22814 ;; Auto vars:     Size  Location     Type
 22815 ;;		None
 22816 ;; Return value:  Size  Location     Type
 22817 ;;                  1    wreg      void 
 22818 ;; Registers used:
 22819 ;;		wreg, status,2, cstack
 22820 ;; Tracked objects:
 22821 ;;		On entry : 0/0
 22822 ;;		On exit  : 0/0
 22823 ;;		Unchanged: 0/0
 22824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22825 ;;      Params:         0       0       0       0       0       0       0       0       0
 22826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22828 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22829 ;;Total ram usage:        0 bytes
 22830 ;; Hardware stack levels used:    1
 22831 ;; Hardware stack levels required when called:   12
 22832 ;; This function calls:
 22833 ;;		_TMR2_StartTimer
 22834 ;; This function is called by:
 22835 ;;		_SYSTEM_Initialize
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           	psect	text92
 22840  005A2E                     __ptext92:
 22841                           	opt stack 0
 22842  005A2E                     _TMR2_Initialize:
 22843                           	opt stack 17
 22844                           
 22845                           ;tmr2.c: 62: T2CON = 0x7A;
 22846                           
 22847                           ;incstack = 0
 22848  005A2E  0E7A               	movlw	122
 22849  005A30  6EBA               	movwf	4026,c	;volatile
 22850                           
 22851                           ;tmr2.c: 65: PR2 = 0x9B;
 22852  005A32  0E9B               	movlw	155
 22853  005A34  6EBB               	movwf	4027,c	;volatile
 22854                           
 22855                           ;tmr2.c: 68: TMR2 = 0x00;
 22856  005A36  0E00               	movlw	0
 22857  005A38  6EBC               	movwf	4028,c	;volatile
 22858                           
 22859                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22860  005A3A  929E               	bcf	3998,1,c	;volatile
 22861                           
 22862                           ;tmr2.c: 74: TMR2_StartTimer();
 22863  005A3C  ECBC  F02D         	call	_TMR2_StartTimer	;wreg free
 22864  005A40  0012               	return		;funcret
 22865  005A42                     __end_of_TMR2_Initialize:
 22866                           	opt stack 0
 22867                           tblptru	equ	0xFF8
 22868                           tblptrh	equ	0xFF7
 22869                           tblptrl	equ	0xFF6
 22870                           tablat	equ	0xFF5
 22871                           prodh	equ	0xFF4
 22872                           prodl	equ	0xFF3
 22873                           intcon	equ	0xFF2
 22874                           intcon3	equ	0xFF0
 22875                           indf0	equ	0xFEF
 22876                           postinc0	equ	0xFEE
 22877                           fsr0h	equ	0xFEA
 22878                           fsr0l	equ	0xFE9
 22879                           wreg	equ	0xFE8
 22880                           indf1	equ	0xFE7
 22881                           postdec1	equ	0xFE5
 22882                           fsr1h	equ	0xFE2
 22883                           fsr1l	equ	0xFE1
 22884                           indf2	equ	0xFDF
 22885                           postinc2	equ	0xFDE
 22886                           postdec2	equ	0xFDD
 22887                           plusw2	equ	0xFDB
 22888                           fsr2h	equ	0xFDA
 22889                           fsr2l	equ	0xFD9
 22890                           status	equ	0xFD8
 22891                           
 22892 ;; *************** function _TMR2_StartTimer *****************
 22893 ;; Defined at:
 22894 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22895 ;; Parameters:    Size  Location     Type
 22896 ;;		None
 22897 ;; Auto vars:     Size  Location     Type
 22898 ;;		None
 22899 ;; Return value:  Size  Location     Type
 22900 ;;                  1    wreg      void 
 22901 ;; Registers used:
 22902 ;;		None
 22903 ;; Tracked objects:
 22904 ;;		On entry : 0/0
 22905 ;;		On exit  : 0/0
 22906 ;;		Unchanged: 0/0
 22907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22908 ;;      Params:         0       0       0       0       0       0       0       0       0
 22909 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22910 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22911 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22912 ;;Total ram usage:        0 bytes
 22913 ;; Hardware stack levels used:    1
 22914 ;; Hardware stack levels required when called:   11
 22915 ;; This function calls:
 22916 ;;		Nothing
 22917 ;; This function is called by:
 22918 ;;		_TMR2_Initialize
 22919 ;; This function uses a non-reentrant model
 22920 ;;
 22921                           
 22922                           	psect	text93
 22923  005B78                     __ptext93:
 22924                           	opt stack 0
 22925  005B78                     _TMR2_StartTimer:
 22926                           	opt stack 17
 22927                           
 22928                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22929                           
 22930                           ;incstack = 0
 22931  005B78  84BA               	bsf	4026,2,c	;volatile
 22932  005B7A  0012               	return		;funcret
 22933  005B7C                     __end_of_TMR2_StartTimer:
 22934                           	opt stack 0
 22935                           tblptru	equ	0xFF8
 22936                           tblptrh	equ	0xFF7
 22937                           tblptrl	equ	0xFF6
 22938                           tablat	equ	0xFF5
 22939                           prodh	equ	0xFF4
 22940                           prodl	equ	0xFF3
 22941                           intcon	equ	0xFF2
 22942                           intcon3	equ	0xFF0
 22943                           indf0	equ	0xFEF
 22944                           postinc0	equ	0xFEE
 22945                           fsr0h	equ	0xFEA
 22946                           fsr0l	equ	0xFE9
 22947                           wreg	equ	0xFE8
 22948                           indf1	equ	0xFE7
 22949                           postdec1	equ	0xFE5
 22950                           fsr1h	equ	0xFE2
 22951                           fsr1l	equ	0xFE1
 22952                           indf2	equ	0xFDF
 22953                           postinc2	equ	0xFDE
 22954                           postdec2	equ	0xFDD
 22955                           plusw2	equ	0xFDB
 22956                           fsr2h	equ	0xFDA
 22957                           fsr2l	equ	0xFD9
 22958                           status	equ	0xFD8
 22959                           
 22960 ;; *************** function _TMR1_Initialize *****************
 22961 ;; Defined at:
 22962 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;		None
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  1    wreg      void 
 22969 ;; Registers used:
 22970 ;;		wreg, status,2, status,0, cstack
 22971 ;; Tracked objects:
 22972 ;;		On entry : 0/0
 22973 ;;		On exit  : 0/0
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22978 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22979 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22980 ;;Total ram usage:        2 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:   12
 22983 ;; This function calls:
 22984 ;;		_TMR1_StartTimer
 22985 ;; This function is called by:
 22986 ;;		_SYSTEM_Initialize
 22987 ;; This function uses a non-reentrant model
 22988 ;;
 22989                           
 22990                           	psect	text94
 22991  005558                     __ptext94:
 22992                           	opt stack 0
 22993  005558                     _TMR1_Initialize:
 22994                           	opt stack 17
 22995                           
 22996                           ;tmr1.c: 68: T1CON = 0x00;
 22997                           
 22998                           ;incstack = 0
 22999  005558  0E00               	movlw	0
 23000  00555A  6ECD               	movwf	4045,c	;volatile
 23001                           
 23002                           ;tmr1.c: 71: T1GCON = 0x00;
 23003  00555C  0E00               	movlw	0
 23004  00555E  6ECC               	movwf	4044,c	;volatile
 23005                           
 23006                           ;tmr1.c: 74: TMR1H = 0xD0;
 23007  005560  0ED0               	movlw	208
 23008  005562  6ECF               	movwf	4047,c	;volatile
 23009                           
 23010                           ;tmr1.c: 77: TMR1L = 0x20;
 23011  005564  0E20               	movlw	32
 23012  005566  6ECE               	movwf	4046,c	;volatile
 23013                           
 23014                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 23015  005568  50CE               	movf	4046,w,c	;volatile
 23016  00556A  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 23017  00556E  0100               	movlb	0	; () banked
 23018  005570  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 23019  005572  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23020  005576  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 23021  005578  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 23022  00557A  6E3B               	movwf	_timer1ReloadVal,c	;volatile
 23023  00557C  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 23024  00557E  6E3C               	movwf	_timer1ReloadVal+1,c	;volatile
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 23028  005580  909E               	bcf	3998,0,c	;volatile
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 23032  005582  809D               	bsf	3997,0,c	;volatile
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;tmr1.c: 89: TMR1_StartTimer();
 23036  005584  ECBE  F02D         	call	_TMR1_StartTimer	;wreg free
 23037  005588  0012               	return		;funcret
 23038  00558A                     __end_of_TMR1_Initialize:
 23039                           	opt stack 0
 23040                           tblptru	equ	0xFF8
 23041                           tblptrh	equ	0xFF7
 23042                           tblptrl	equ	0xFF6
 23043                           tablat	equ	0xFF5
 23044                           prodh	equ	0xFF4
 23045                           prodl	equ	0xFF3
 23046                           intcon	equ	0xFF2
 23047                           intcon3	equ	0xFF0
 23048                           indf0	equ	0xFEF
 23049                           postinc0	equ	0xFEE
 23050                           fsr0h	equ	0xFEA
 23051                           fsr0l	equ	0xFE9
 23052                           wreg	equ	0xFE8
 23053                           indf1	equ	0xFE7
 23054                           postdec1	equ	0xFE5
 23055                           fsr1h	equ	0xFE2
 23056                           fsr1l	equ	0xFE1
 23057                           indf2	equ	0xFDF
 23058                           postinc2	equ	0xFDE
 23059                           postdec2	equ	0xFDD
 23060                           plusw2	equ	0xFDB
 23061                           fsr2h	equ	0xFDA
 23062                           fsr2l	equ	0xFD9
 23063                           status	equ	0xFD8
 23064                           
 23065 ;; *************** function _TMR1_StartTimer *****************
 23066 ;; Defined at:
 23067 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;		None
 23070 ;; Auto vars:     Size  Location     Type
 23071 ;;		None
 23072 ;; Return value:  Size  Location     Type
 23073 ;;                  1    wreg      void 
 23074 ;; Registers used:
 23075 ;;		None
 23076 ;; Tracked objects:
 23077 ;;		On entry : 0/0
 23078 ;;		On exit  : 0/0
 23079 ;;		Unchanged: 0/0
 23080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23081 ;;      Params:         0       0       0       0       0       0       0       0       0
 23082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23084 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23085 ;;Total ram usage:        0 bytes
 23086 ;; Hardware stack levels used:    1
 23087 ;; Hardware stack levels required when called:   11
 23088 ;; This function calls:
 23089 ;;		Nothing
 23090 ;; This function is called by:
 23091 ;;		_TMR1_Initialize
 23092 ;; This function uses a non-reentrant model
 23093 ;;
 23094                           
 23095                           	psect	text95
 23096  005B7C                     __ptext95:
 23097                           	opt stack 0
 23098  005B7C                     _TMR1_StartTimer:
 23099                           	opt stack 17
 23100                           
 23101                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23102                           
 23103                           ;incstack = 0
 23104  005B7C  80CD               	bsf	4045,0,c	;volatile
 23105  005B7E  0012               	return		;funcret
 23106  005B80                     __end_of_TMR1_StartTimer:
 23107                           	opt stack 0
 23108                           tblptru	equ	0xFF8
 23109                           tblptrh	equ	0xFF7
 23110                           tblptrl	equ	0xFF6
 23111                           tablat	equ	0xFF5
 23112                           prodh	equ	0xFF4
 23113                           prodl	equ	0xFF3
 23114                           intcon	equ	0xFF2
 23115                           intcon3	equ	0xFF0
 23116                           indf0	equ	0xFEF
 23117                           postinc0	equ	0xFEE
 23118                           fsr0h	equ	0xFEA
 23119                           fsr0l	equ	0xFE9
 23120                           wreg	equ	0xFE8
 23121                           indf1	equ	0xFE7
 23122                           postdec1	equ	0xFE5
 23123                           fsr1h	equ	0xFE2
 23124                           fsr1l	equ	0xFE1
 23125                           indf2	equ	0xFDF
 23126                           postinc2	equ	0xFDE
 23127                           postdec2	equ	0xFDD
 23128                           plusw2	equ	0xFDB
 23129                           fsr2h	equ	0xFDA
 23130                           fsr2l	equ	0xFD9
 23131                           status	equ	0xFD8
 23132                           
 23133 ;; *************** function _TMR0_Initialize *****************
 23134 ;; Defined at:
 23135 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 23136 ;; Parameters:    Size  Location     Type
 23137 ;;		None
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;		None
 23140 ;; Return value:  Size  Location     Type
 23141 ;;                  1    wreg      void 
 23142 ;; Registers used:
 23143 ;;		wreg, status,2, cstack
 23144 ;; Tracked objects:
 23145 ;;		On entry : 0/0
 23146 ;;		On exit  : 0/0
 23147 ;;		Unchanged: 0/0
 23148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23149 ;;      Params:         0       0       0       0       0       0       0       0       0
 23150 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23151 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23152 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23153 ;;Total ram usage:        0 bytes
 23154 ;; Hardware stack levels used:    1
 23155 ;; Hardware stack levels required when called:   12
 23156 ;; This function calls:
 23157 ;;		_TMR0_StartTimer
 23158 ;; This function is called by:
 23159 ;;		_SYSTEM_Initialize
 23160 ;; This function uses a non-reentrant model
 23161 ;;
 23162                           
 23163                           	psect	text96
 23164  005886                     __ptext96:
 23165                           	opt stack 0
 23166  005886                     _TMR0_Initialize:
 23167                           	opt stack 17
 23168                           
 23169                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 23170                           
 23171                           ;incstack = 0
 23172  005886  9AD5               	bcf	4053,5,c	;volatile
 23173                           
 23174                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 23175  005888  98D5               	bcf	4053,4,c	;volatile
 23176                           
 23177                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 23178  00588A  96D5               	bcf	4053,3,c	;volatile
 23179                           
 23180                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 23181  00588C  94D5               	bcf	4053,2,c	;volatile
 23182                           
 23183                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 23184  00588E  82D5               	bsf	4053,1,c	;volatile
 23185                           
 23186                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 23187  005890  90D5               	bcf	4053,0,c	;volatile
 23188                           
 23189                           ;tmr0.c: 77: timer0ReloadVal=110;
 23190  005892  0E00               	movlw	0
 23191  005894  0101               	movlb	1	; () banked
 23192  005896  6F57               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 23193  005898  0E6E               	movlw	110
 23194  00589A  6F56               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 23195                           
 23196                           ; BSR set to: 1
 23197                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 23198  00589C  94F2               	bcf	intcon,2,c	;volatile
 23199                           
 23200                           ; BSR set to: 1
 23201                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 23202  00589E  8AF2               	bsf	intcon,5,c	;volatile
 23203                           
 23204                           ; BSR set to: 1
 23205                           ;tmr0.c: 86: TMR0_StartTimer();
 23206  0058A0  ECC0  F02D         	call	_TMR0_StartTimer	;wreg free
 23207  0058A4  0012               	return		;funcret
 23208  0058A6                     __end_of_TMR0_Initialize:
 23209                           	opt stack 0
 23210                           tblptru	equ	0xFF8
 23211                           tblptrh	equ	0xFF7
 23212                           tblptrl	equ	0xFF6
 23213                           tablat	equ	0xFF5
 23214                           prodh	equ	0xFF4
 23215                           prodl	equ	0xFF3
 23216                           intcon	equ	0xFF2
 23217                           intcon3	equ	0xFF0
 23218                           indf0	equ	0xFEF
 23219                           postinc0	equ	0xFEE
 23220                           fsr0h	equ	0xFEA
 23221                           fsr0l	equ	0xFE9
 23222                           wreg	equ	0xFE8
 23223                           indf1	equ	0xFE7
 23224                           postdec1	equ	0xFE5
 23225                           fsr1h	equ	0xFE2
 23226                           fsr1l	equ	0xFE1
 23227                           indf2	equ	0xFDF
 23228                           postinc2	equ	0xFDE
 23229                           postdec2	equ	0xFDD
 23230                           plusw2	equ	0xFDB
 23231                           fsr2h	equ	0xFDA
 23232                           fsr2l	equ	0xFD9
 23233                           status	equ	0xFD8
 23234                           
 23235 ;; *************** function _TMR0_StartTimer *****************
 23236 ;; Defined at:
 23237 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 23238 ;; Parameters:    Size  Location     Type
 23239 ;;		None
 23240 ;; Auto vars:     Size  Location     Type
 23241 ;;		None
 23242 ;; Return value:  Size  Location     Type
 23243 ;;                  1    wreg      void 
 23244 ;; Registers used:
 23245 ;;		None
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23251 ;;      Params:         0       0       0       0       0       0       0       0       0
 23252 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23254 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23255 ;;Total ram usage:        0 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:   11
 23258 ;; This function calls:
 23259 ;;		Nothing
 23260 ;; This function is called by:
 23261 ;;		_TMR0_Initialize
 23262 ;; This function uses a non-reentrant model
 23263 ;;
 23264                           
 23265                           	psect	text97
 23266  005B80                     __ptext97:
 23267                           	opt stack 0
 23268  005B80                     _TMR0_StartTimer:
 23269                           	opt stack 17
 23270                           
 23271                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 23272                           
 23273                           ;incstack = 0
 23274  005B80  8ED5               	bsf	4053,7,c	;volatile
 23275  005B82  0012               	return		;funcret
 23276  005B84                     __end_of_TMR0_StartTimer:
 23277                           	opt stack 0
 23278                           tblptru	equ	0xFF8
 23279                           tblptrh	equ	0xFF7
 23280                           tblptrl	equ	0xFF6
 23281                           tablat	equ	0xFF5
 23282                           prodh	equ	0xFF4
 23283                           prodl	equ	0xFF3
 23284                           intcon	equ	0xFF2
 23285                           intcon3	equ	0xFF0
 23286                           indf0	equ	0xFEF
 23287                           postinc0	equ	0xFEE
 23288                           fsr0h	equ	0xFEA
 23289                           fsr0l	equ	0xFE9
 23290                           wreg	equ	0xFE8
 23291                           indf1	equ	0xFE7
 23292                           postdec1	equ	0xFE5
 23293                           fsr1h	equ	0xFE2
 23294                           fsr1l	equ	0xFE1
 23295                           indf2	equ	0xFDF
 23296                           postinc2	equ	0xFDE
 23297                           postdec2	equ	0xFDD
 23298                           plusw2	equ	0xFDB
 23299                           fsr2h	equ	0xFDA
 23300                           fsr2l	equ	0xFD9
 23301                           status	equ	0xFD8
 23302                           
 23303 ;; *************** function _PIN_MANAGER_Initialize *****************
 23304 ;; Defined at:
 23305 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;		None
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;		None
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  1    wreg      void 
 23312 ;; Registers used:
 23313 ;;		wreg, status,2
 23314 ;; Tracked objects:
 23315 ;;		On entry : 0/0
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0
 23320 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23322 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23323 ;;Total ram usage:        0 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; Hardware stack levels required when called:   11
 23326 ;; This function calls:
 23327 ;;		Nothing
 23328 ;; This function is called by:
 23329 ;;		_moteApp_GoToSleep
 23330 ;;		_SYSTEM_Initialize
 23331 ;; This function uses a non-reentrant model
 23332 ;;
 23333                           
 23334                           	psect	text98
 23335  0050E4                     __ptext98:
 23336                           	opt stack 0
 23337  0050E4                     _PIN_MANAGER_Initialize:
 23338                           	opt stack 16
 23339                           
 23340                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23341                           
 23342                           ;incstack = 0
 23343  0050E4  8092               	bsf	3986,0,c	;volatile
 23344                           
 23345                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23346  0050E6  8292               	bsf	3986,1,c	;volatile
 23347                           
 23348                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23349  0050E8  8492               	bsf	3986,2,c	;volatile
 23350                           
 23351                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23352  0050EA  8692               	bsf	3986,3,c	;volatile
 23353                           
 23354                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23355  0050EC  948D               	bcf	3981,2,c	;volatile
 23356                           
 23357                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23358  0050EE  9496               	bcf	3990,2,c	;volatile
 23359                           
 23360                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23361  0050F0  9A92               	bcf	3986,5,c	;volatile
 23362                           
 23363                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23364  0050F2  9C92               	bcf	3986,6,c	;volatile
 23365                           
 23366                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23367  0050F4  9E92               	bcf	3986,7,c	;volatile
 23368                           
 23369                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 23370  0050F6  9EF1               	bcf	intcon2,7,c	;volatile
 23371                           
 23372                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 23373  0050F8  8E86               	bsf	3974,7,c	;volatile
 23374                           
 23375                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 23376  0050FA  86F2               	bsf	intcon,3,c	;volatile
 23377                           
 23378                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 23379  0050FC  8293               	bsf	3987,1,c	;volatile
 23380                           
 23381                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 23382  0050FE  8093               	bsf	3987,0,c	;volatile
 23383                           
 23384                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 23385  005100  8E93               	bsf	3987,7,c	;volatile
 23386                           
 23387                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 23388  005102  9493               	bcf	3987,2,c	;volatile
 23389                           
 23390                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 23391  005104  9693               	bcf	3987,3,c	;volatile
 23392                           
 23393                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 23394  005106  9893               	bcf	3987,4,c	;volatile
 23395                           
 23396                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 23397  005108  9A93               	bcf	3987,5,c	;volatile
 23398                           
 23399                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 23400  00510A  9094               	bcf	3988,0,c	;volatile
 23401                           
 23402                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 23403  00510C  9294               	bcf	3988,1,c	;volatile
 23404                           
 23405                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 23406  00510E  8494               	bsf	3988,2,c	;volatile
 23407                           
 23408                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 23409  005110  9C94               	bcf	3988,6,c	;volatile
 23410                           
 23411                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 23412  005112  8E94               	bsf	3988,7,c	;volatile
 23413                           
 23414                           ;pin_manager.c: 83: TRISD = 0b00000000;
 23415  005114  0E00               	movlw	0
 23416  005116  6E95               	movwf	3989,c	;volatile
 23417                           
 23418                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 23419  005118  9496               	bcf	3990,2,c	;volatile
 23420                           
 23421                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 23422  00511A  9A89               	bcf	3977,5,c	;volatile
 23423                           
 23424                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 23425  00511C  9C89               	bcf	3977,6,c	;volatile
 23426                           
 23427                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 23428  00511E  9E89               	bcf	3977,7,c	;volatile
 23429                           
 23430                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 23431  005120  948A               	bcf	3978,2,c	;volatile
 23432                           
 23433                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 23434  005122  948B               	bcf	3979,2,c	;volatile
 23435                           
 23436                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 23437  005124  9C8B               	bcf	3979,6,c	;volatile
 23438                           
 23439                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 23440  005126  848D               	bsf	3981,2,c	;volatile
 23441                           
 23442                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 23443  005128  010F               	movlb	15	; () banked
 23444  00512A  915B               	bcf	91,0,b	;volatile
 23445                           
 23446                           ; BSR set to: 15
 23447                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 23448  00512C  835B               	bsf	91,1,b	;volatile
 23449                           
 23450                           ; BSR set to: 15
 23451                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 23452  00512E  855B               	bsf	91,2,b	;volatile
 23453                           
 23454                           ; BSR set to: 15
 23455                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 23456  005130  875B               	bsf	91,3,b	;volatile
 23457                           
 23458                           ; BSR set to: 15
 23459                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 23460  005132  9F5D               	bcf	93,7,b	;volatile
 23461                           
 23462                           ; BSR set to: 15
 23463                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 23464  005134  9D5D               	bcf	93,6,b	;volatile
 23465                           
 23466                           ; BSR set to: 15
 23467  005136  0012               	return		;funcret
 23468  005138                     __end_of_PIN_MANAGER_Initialize:
 23469                           	opt stack 0
 23470                           tblptru	equ	0xFF8
 23471                           tblptrh	equ	0xFF7
 23472                           tblptrl	equ	0xFF6
 23473                           tablat	equ	0xFF5
 23474                           prodh	equ	0xFF4
 23475                           prodl	equ	0xFF3
 23476                           intcon	equ	0xFF2
 23477                           intcon2	equ	0xFF1
 23478                           intcon3	equ	0xFF0
 23479                           indf0	equ	0xFEF
 23480                           postinc0	equ	0xFEE
 23481                           fsr0h	equ	0xFEA
 23482                           fsr0l	equ	0xFE9
 23483                           wreg	equ	0xFE8
 23484                           indf1	equ	0xFE7
 23485                           postdec1	equ	0xFE5
 23486                           fsr1h	equ	0xFE2
 23487                           fsr1l	equ	0xFE1
 23488                           indf2	equ	0xFDF
 23489                           postinc2	equ	0xFDE
 23490                           postdec2	equ	0xFDD
 23491                           plusw2	equ	0xFDB
 23492                           fsr2h	equ	0xFDA
 23493                           fsr2l	equ	0xFD9
 23494                           status	equ	0xFD8
 23495                           
 23496 ;; *************** function _OSCILLATOR_Initialize *****************
 23497 ;; Defined at:
 23498 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 23499 ;; Parameters:    Size  Location     Type
 23500 ;;		None
 23501 ;; Auto vars:     Size  Location     Type
 23502 ;;		None
 23503 ;; Return value:  Size  Location     Type
 23504 ;;                  1    wreg      void 
 23505 ;; Registers used:
 23506 ;;		wreg, status,2
 23507 ;; Tracked objects:
 23508 ;;		On entry : 0/0
 23509 ;;		On exit  : 0/0
 23510 ;;		Unchanged: 0/0
 23511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23512 ;;      Params:         0       0       0       0       0       0       0       0       0
 23513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23515 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23516 ;;Total ram usage:        0 bytes
 23517 ;; Hardware stack levels used:    1
 23518 ;; Hardware stack levels required when called:   11
 23519 ;; This function calls:
 23520 ;;		Nothing
 23521 ;; This function is called by:
 23522 ;;		_SYSTEM_Initialize
 23523 ;; This function uses a non-reentrant model
 23524 ;;
 23525                           
 23526                           	psect	text99
 23527  0059B0                     __ptext99:
 23528                           	opt stack 0
 23529  0059B0                     _OSCILLATOR_Initialize:
 23530                           	opt stack 18
 23531                           
 23532                           ;mcc.c: 113: OSCTUNE = 0x80;
 23533                           
 23534                           ; BSR set to: 15
 23535                           ;incstack = 0
 23536  0059B0  0E80               	movlw	128
 23537  0059B2  6E9B               	movwf	3995,c	;volatile
 23538                           
 23539                           ;mcc.c: 114: OSCCON = 0x70;
 23540  0059B4  0E70               	movlw	112
 23541  0059B6  6ED3               	movwf	4051,c	;volatile
 23542                           
 23543                           ;mcc.c: 115: OSCCON2 = 0x10;
 23544  0059B8  0E10               	movlw	16
 23545  0059BA  6ED2               	movwf	4050,c	;volatile
 23546  0059BC  AED2               	btfss	4050,7,c	;volatile
 23547  0059BE  D7FE               	goto	l1332
 23548                           
 23549                           ;mcc.c: 117: ACTCON = 0x90;
 23550  0059C0  0E90               	movlw	144
 23551  0059C2  6EB5               	movwf	4021,c	;volatile
 23552  0059C4  0012               	return		;funcret
 23553  0059C6                     __end_of_OSCILLATOR_Initialize:
 23554                           	opt stack 0
 23555                           tblptru	equ	0xFF8
 23556                           tblptrh	equ	0xFF7
 23557                           tblptrl	equ	0xFF6
 23558                           tablat	equ	0xFF5
 23559                           prodh	equ	0xFF4
 23560                           prodl	equ	0xFF3
 23561                           intcon	equ	0xFF2
 23562                           intcon2	equ	0xFF1
 23563                           intcon3	equ	0xFF0
 23564                           indf0	equ	0xFEF
 23565                           postinc0	equ	0xFEE
 23566                           fsr0h	equ	0xFEA
 23567                           fsr0l	equ	0xFE9
 23568                           wreg	equ	0xFE8
 23569                           indf1	equ	0xFE7
 23570                           postdec1	equ	0xFE5
 23571                           fsr1h	equ	0xFE2
 23572                           fsr1l	equ	0xFE1
 23573                           indf2	equ	0xFDF
 23574                           postinc2	equ	0xFDE
 23575                           postdec2	equ	0xFDD
 23576                           plusw2	equ	0xFDB
 23577                           fsr2h	equ	0xFDA
 23578                           fsr2l	equ	0xFD9
 23579                           status	equ	0xFD8
 23580                           
 23581 ;; *************** function _InitSwUart *****************
 23582 ;; Defined at:
 23583 ;;		line 75 in file "../Includes/Drivers/swUart.c"
 23584 ;; Parameters:    Size  Location     Type
 23585 ;;		None
 23586 ;; Auto vars:     Size  Location     Type
 23587 ;;		None
 23588 ;; Return value:  Size  Location     Type
 23589 ;;                  1    wreg      void 
 23590 ;; Registers used:
 23591 ;;		wreg, status,2
 23592 ;; Tracked objects:
 23593 ;;		On entry : 0/0
 23594 ;;		On exit  : 0/0
 23595 ;;		Unchanged: 0/0
 23596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23597 ;;      Params:         0       0       0       0       0       0       0       0       0
 23598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23600 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23601 ;;Total ram usage:        0 bytes
 23602 ;; Hardware stack levels used:    1
 23603 ;; Hardware stack levels required when called:   11
 23604 ;; This function calls:
 23605 ;;		Nothing
 23606 ;; This function is called by:
 23607 ;;		_SYSTEM_Initialize
 23608 ;; This function uses a non-reentrant model
 23609 ;;
 23610                           
 23611                           	psect	text100
 23612  005900                     __ptext100:
 23613                           	opt stack 0
 23614  005900                     _InitSwUart:
 23615                           	opt stack 18
 23616                           
 23617                           ;swUart.c: 77: status = SILENT;
 23618                           
 23619                           ;incstack = 0
 23620  005900  0E00               	movlw	0
 23621  005902  6E4F               	movwf	_status,c
 23622                           
 23623                           ;swUart.c: 78: n_bit = 0;
 23624  005904  0E00               	movlw	0
 23625  005906  6E5B               	movwf	_n_bit,c
 23626                           
 23627                           ;swUart.c: 79: rx_data = 0;
 23628  005908  0E00               	movlw	0
 23629  00590A  6E4E               	movwf	_rx_data,c
 23630                           
 23631                           ;swUart.c: 80: cs = 0;
 23632  00590C  0E00               	movlw	0
 23633  00590E  0101               	movlb	1	; () banked
 23634  005910  6F5E               	movwf	_cs& (0+255),b
 23635                           
 23636                           ;swUart.c: 81: countRX = 0;
 23637  005912  0E00               	movlw	0
 23638  005914  6E4D               	movwf	_countRX,c
 23639                           
 23640                           ;swUart.c: 82: countBitsSilent = 0;
 23641  005916  0E00               	movlw	0
 23642  005918  6E4C               	movwf	_countBitsSilent,c
 23643                           
 23644                           ; BSR set to: 1
 23645  00591A  0012               	return		;funcret
 23646  00591C                     __end_of_InitSwUart:
 23647                           	opt stack 0
 23648                           tblptru	equ	0xFF8
 23649                           tblptrh	equ	0xFF7
 23650                           tblptrl	equ	0xFF6
 23651                           tablat	equ	0xFF5
 23652                           prodh	equ	0xFF4
 23653                           prodl	equ	0xFF3
 23654                           intcon	equ	0xFF2
 23655                           intcon2	equ	0xFF1
 23656                           intcon3	equ	0xFF0
 23657                           indf0	equ	0xFEF
 23658                           postinc0	equ	0xFEE
 23659                           fsr0h	equ	0xFEA
 23660                           fsr0l	equ	0xFE9
 23661                           wreg	equ	0xFE8
 23662                           indf1	equ	0xFE7
 23663                           postdec1	equ	0xFE5
 23664                           fsr1h	equ	0xFE2
 23665                           fsr1l	equ	0xFE1
 23666                           indf2	equ	0xFDF
 23667                           postinc2	equ	0xFDE
 23668                           postdec2	equ	0xFDD
 23669                           plusw2	equ	0xFDB
 23670                           fsr2h	equ	0xFDA
 23671                           fsr2l	equ	0xFD9
 23672                           status	equ	0xFD8
 23673                           
 23674 ;; *************** function _EUSART_Initialize *****************
 23675 ;; Defined at:
 23676 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23677 ;; Parameters:    Size  Location     Type
 23678 ;;		None
 23679 ;; Auto vars:     Size  Location     Type
 23680 ;;		None
 23681 ;; Return value:  Size  Location     Type
 23682 ;;                  1    wreg      void 
 23683 ;; Registers used:
 23684 ;;		wreg, status,2
 23685 ;; Tracked objects:
 23686 ;;		On entry : 0/0
 23687 ;;		On exit  : 0/0
 23688 ;;		Unchanged: 0/0
 23689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23690 ;;      Params:         0       0       0       0       0       0       0       0       0
 23691 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23692 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23693 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23694 ;;Total ram usage:        0 bytes
 23695 ;; Hardware stack levels used:    1
 23696 ;; Hardware stack levels required when called:   11
 23697 ;; This function calls:
 23698 ;;		Nothing
 23699 ;; This function is called by:
 23700 ;;		_SYSTEM_Initialize
 23701 ;; This function uses a non-reentrant model
 23702 ;;
 23703                           
 23704                           	psect	text101
 23705  005450                     __ptext101:
 23706                           	opt stack 0
 23707  005450                     _EUSART_Initialize:
 23708                           	opt stack 18
 23709                           
 23710                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23711                           
 23712                           ; BSR set to: 1
 23713                           ;incstack = 0
 23714  005450  9A9D               	bcf	3997,5,c	;volatile
 23715                           
 23716                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23717  005452  989D               	bcf	3997,4,c	;volatile
 23718                           
 23719                           ;eusart.c: 85: BAUDCON = 0x48;
 23720  005454  0E48               	movlw	72
 23721  005456  6EB8               	movwf	4024,c	;volatile
 23722                           
 23723                           ;eusart.c: 88: RCSTA = 0x90;
 23724  005458  0E90               	movlw	144
 23725  00545A  6EAB               	movwf	4011,c	;volatile
 23726                           
 23727                           ;eusart.c: 91: TXSTA = 0x26;
 23728  00545C  0E26               	movlw	38
 23729  00545E  6EAC               	movwf	4012,c	;volatile
 23730                           
 23731                           ;eusart.c: 95: SPBRG = 0xD0;
 23732  005460  0ED0               	movlw	208
 23733  005462  6EAF               	movwf	4015,c	;volatile
 23734                           
 23735                           ;eusart.c: 100: SPBRGH = 0x00;
 23736  005464  0E00               	movlw	0
 23737  005466  6EB0               	movwf	4016,c	;volatile
 23738                           
 23739                           ;eusart.c: 103: eusartTxHead = 0;
 23740  005468  0E00               	movlw	0
 23741  00546A  0100               	movlb	0	; () banked
 23742  00546C  6FE3               	movwf	_eusartTxHead& (0+255),b
 23743                           
 23744                           ;eusart.c: 104: eusartTxTail = 0;
 23745  00546E  0E00               	movlw	0
 23746  005470  6FE2               	movwf	_eusartTxTail& (0+255),b
 23747                           
 23748                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23749  005472  0E40               	movlw	64
 23750  005474  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 23751                           
 23752                           ;eusart.c: 107: eusartRxHead = 0;
 23753  005476  0E00               	movlw	0
 23754  005478  6FE0               	movwf	_eusartRxHead& (0+255),b
 23755                           
 23756                           ;eusart.c: 108: eusartRxTail = 0;
 23757  00547A  0E00               	movlw	0
 23758  00547C  6FDF               	movwf	_eusartRxTail& (0+255),b
 23759                           
 23760                           ;eusart.c: 109: eusartRxCount = 0;
 23761  00547E  0E00               	movlw	0
 23762  005480  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 23763                           
 23764                           ; BSR set to: 0
 23765                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23766  005482  8A9D               	bsf	3997,5,c	;volatile
 23767                           
 23768                           ; BSR set to: 0
 23769                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23770  005484  88AB               	bsf	4011,4,c	;volatile
 23771                           
 23772                           ; BSR set to: 0
 23773  005486  0012               	return		;funcret
 23774  005488                     __end_of_EUSART_Initialize:
 23775                           	opt stack 0
 23776                           tblptru	equ	0xFF8
 23777                           tblptrh	equ	0xFF7
 23778                           tblptrl	equ	0xFF6
 23779                           tablat	equ	0xFF5
 23780                           prodh	equ	0xFF4
 23781                           prodl	equ	0xFF3
 23782                           intcon	equ	0xFF2
 23783                           intcon2	equ	0xFF1
 23784                           intcon3	equ	0xFF0
 23785                           indf0	equ	0xFEF
 23786                           postinc0	equ	0xFEE
 23787                           fsr0h	equ	0xFEA
 23788                           fsr0l	equ	0xFE9
 23789                           wreg	equ	0xFE8
 23790                           indf1	equ	0xFE7
 23791                           postdec1	equ	0xFE5
 23792                           fsr1h	equ	0xFE2
 23793                           fsr1l	equ	0xFE1
 23794                           indf2	equ	0xFDF
 23795                           postinc2	equ	0xFDE
 23796                           postdec2	equ	0xFDD
 23797                           plusw2	equ	0xFDB
 23798                           fsr2h	equ	0xFDA
 23799                           fsr2l	equ	0xFD9
 23800                           status	equ	0xFD8
 23801                           
 23802 ;; *************** function _CMP1_Initialize *****************
 23803 ;; Defined at:
 23804 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;		None
 23807 ;; Auto vars:     Size  Location     Type
 23808 ;;		None
 23809 ;; Return value:  Size  Location     Type
 23810 ;;                  1    wreg      void 
 23811 ;; Registers used:
 23812 ;;		wreg, status,2
 23813 ;; Tracked objects:
 23814 ;;		On entry : 0/0
 23815 ;;		On exit  : 0/0
 23816 ;;		Unchanged: 0/0
 23817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23818 ;;      Params:         0       0       0       0       0       0       0       0       0
 23819 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23821 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23822 ;;Total ram usage:        0 bytes
 23823 ;; Hardware stack levels used:    1
 23824 ;; Hardware stack levels required when called:   11
 23825 ;; This function calls:
 23826 ;;		Nothing
 23827 ;; This function is called by:
 23828 ;;		_SYSTEM_Initialize
 23829 ;; This function uses a non-reentrant model
 23830 ;;
 23831                           
 23832                           	psect	text102
 23833  005A6A                     __ptext102:
 23834                           	opt stack 0
 23835  005A6A                     _CMP1_Initialize:
 23836                           	opt stack 18
 23837                           
 23838                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23839                           
 23840                           ; BSR set to: 0
 23841                           ;incstack = 0
 23842  005A6A  9CA0               	bcf	4000,6,c	;volatile
 23843                           
 23844                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23845  005A6C  0E9C               	movlw	156
 23846  005A6E  6E98               	movwf	3992,c	;volatile
 23847                           
 23848                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23849  005A70  8A9A               	bsf	3994,5,c	;volatile
 23850                           
 23851                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23852  005A72  929A               	bcf	3994,1,c	;volatile
 23853                           
 23854                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23855  005A74  969A               	bcf	3994,3,c	;volatile
 23856                           
 23857                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23858  005A76  9CA1               	bcf	4001,6,c	;volatile
 23859                           
 23860                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23861  005A78  9CA0               	bcf	4000,6,c	;volatile
 23862  005A7A  0012               	return		;funcret
 23863  005A7C                     __end_of_CMP1_Initialize:
 23864                           	opt stack 0
 23865                           tblptru	equ	0xFF8
 23866                           tblptrh	equ	0xFF7
 23867                           tblptrl	equ	0xFF6
 23868                           tablat	equ	0xFF5
 23869                           prodh	equ	0xFF4
 23870                           prodl	equ	0xFF3
 23871                           intcon	equ	0xFF2
 23872                           intcon2	equ	0xFF1
 23873                           intcon3	equ	0xFF0
 23874                           indf0	equ	0xFEF
 23875                           postinc0	equ	0xFEE
 23876                           fsr0h	equ	0xFEA
 23877                           fsr0l	equ	0xFE9
 23878                           wreg	equ	0xFE8
 23879                           indf1	equ	0xFE7
 23880                           postdec1	equ	0xFE5
 23881                           fsr1h	equ	0xFE2
 23882                           fsr1l	equ	0xFE1
 23883                           indf2	equ	0xFDF
 23884                           postinc2	equ	0xFDE
 23885                           postdec2	equ	0xFDD
 23886                           plusw2	equ	0xFDB
 23887                           fsr2h	equ	0xFDA
 23888                           fsr2l	equ	0xFD9
 23889                           status	equ	0xFD8
 23890                           
 23891 ;; *************** function _ADC_Initialize *****************
 23892 ;; Defined at:
 23893 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23894 ;; Parameters:    Size  Location     Type
 23895 ;;		None
 23896 ;; Auto vars:     Size  Location     Type
 23897 ;;		None
 23898 ;; Return value:  Size  Location     Type
 23899 ;;                  1    wreg      void 
 23900 ;; Registers used:
 23901 ;;		wreg, status,2
 23902 ;; Tracked objects:
 23903 ;;		On entry : 0/0
 23904 ;;		On exit  : 0/0
 23905 ;;		Unchanged: 0/0
 23906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23907 ;;      Params:         0       0       0       0       0       0       0       0       0
 23908 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23909 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23910 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23911 ;;Total ram usage:        0 bytes
 23912 ;; Hardware stack levels used:    1
 23913 ;; Hardware stack levels required when called:   11
 23914 ;; This function calls:
 23915 ;;		Nothing
 23916 ;; This function is called by:
 23917 ;;		_SYSTEM_Initialize
 23918 ;; This function uses a non-reentrant model
 23919 ;;
 23920                           
 23921                           	psect	text103
 23922  005936                     __ptext103:
 23923                           	opt stack 0
 23924  005936                     _ADC_Initialize:
 23925                           	opt stack 18
 23926                           
 23927                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23928                           
 23929                           ;incstack = 0
 23930  005936  0EA0               	movlw	160
 23931  005938  6E7D               	movwf	3965,c	;volatile
 23932                           
 23933                           ;adc.c: 70: ADCON0 = 0x01;
 23934  00593A  0E01               	movlw	1
 23935  00593C  6EC2               	movwf	4034,c	;volatile
 23936                           
 23937                           ;adc.c: 73: ADCON1 = 0x08;
 23938  00593E  0E08               	movlw	8
 23939  005940  6EC1               	movwf	4033,c	;volatile
 23940                           
 23941                           ;adc.c: 76: ADCON2 = 0b10001110;
 23942  005942  0E8E               	movlw	142
 23943  005944  6EC0               	movwf	4032,c	;volatile
 23944                           
 23945                           ;adc.c: 79: ADRESL = 0x00;
 23946  005946  0E00               	movlw	0
 23947  005948  6EC3               	movwf	4035,c	;volatile
 23948                           
 23949                           ;adc.c: 82: ADRESH = 0x00;
 23950  00594A  0E00               	movlw	0
 23951  00594C  6EC4               	movwf	4036,c	;volatile
 23952  00594E  0012               	return		;funcret
 23953  005950                     __end_of_ADC_Initialize:
 23954                           	opt stack 0
 23955                           tblptru	equ	0xFF8
 23956                           tblptrh	equ	0xFF7
 23957                           tblptrl	equ	0xFF6
 23958                           tablat	equ	0xFF5
 23959                           prodh	equ	0xFF4
 23960                           prodl	equ	0xFF3
 23961                           intcon	equ	0xFF2
 23962                           intcon2	equ	0xFF1
 23963                           intcon3	equ	0xFF0
 23964                           indf0	equ	0xFEF
 23965                           postinc0	equ	0xFEE
 23966                           fsr0h	equ	0xFEA
 23967                           fsr0l	equ	0xFE9
 23968                           wreg	equ	0xFE8
 23969                           indf1	equ	0xFE7
 23970                           postdec1	equ	0xFE5
 23971                           fsr1h	equ	0xFE2
 23972                           fsr1l	equ	0xFE1
 23973                           indf2	equ	0xFDF
 23974                           postinc2	equ	0xFDE
 23975                           postdec2	equ	0xFDD
 23976                           plusw2	equ	0xFDB
 23977                           fsr2h	equ	0xFDA
 23978                           fsr2l	equ	0xFD9
 23979                           status	equ	0xFD8
 23980                           
 23981 ;; *************** function _MOTEapp_handlerState *****************
 23982 ;; Defined at:
 23983 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 23984 ;; Parameters:    Size  Location     Type
 23985 ;;  state           1    wreg     enum E5864
 23986 ;; Auto vars:     Size  Location     Type
 23987 ;;  state           1    0[BANK0 ] enum E5864
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  1    wreg      void 
 23990 ;; Registers used:
 23991 ;;		wreg
 23992 ;; Tracked objects:
 23993 ;;		On entry : 0/0
 23994 ;;		On exit  : 0/0
 23995 ;;		Unchanged: 0/0
 23996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23997 ;;      Params:         0       0       0       0       0       0       0       0       0
 23998 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24000 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24001 ;;Total ram usage:        1 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; Hardware stack levels required when called:   11
 24004 ;; This function calls:
 24005 ;;		Nothing
 24006 ;; This function is called by:
 24007 ;;		_main
 24008 ;; This function uses a non-reentrant model
 24009 ;;
 24010                           
 24011                           	psect	text104
 24012  005B1C                     __ptext104:
 24013                           	opt stack 0
 24014  005B1C                     _MOTEapp_handlerState:
 24015                           	opt stack 19
 24016                           
 24017                           ;incstack = 0
 24018                           ;MOTEapp_handlerState@state stored from wreg
 24019  005B1C  0100               	movlb	0	; () banked
 24020  005B1E  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 24021                           
 24022                           ;MOTEapp.c: 185: moteState = state;
 24023  005B20  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 24024  005B24  0012               	return		;funcret
 24025  005B26                     __end_of_MOTEapp_handlerState:
 24026                           	opt stack 0
 24027                           tblptru	equ	0xFF8
 24028                           tblptrh	equ	0xFF7
 24029                           tblptrl	equ	0xFF6
 24030                           tablat	equ	0xFF5
 24031                           prodh	equ	0xFF4
 24032                           prodl	equ	0xFF3
 24033                           intcon	equ	0xFF2
 24034                           intcon2	equ	0xFF1
 24035                           intcon3	equ	0xFF0
 24036                           indf0	equ	0xFEF
 24037                           postinc0	equ	0xFEE
 24038                           fsr0h	equ	0xFEA
 24039                           fsr0l	equ	0xFE9
 24040                           wreg	equ	0xFE8
 24041                           indf1	equ	0xFE7
 24042                           postdec1	equ	0xFE5
 24043                           fsr1h	equ	0xFE2
 24044                           fsr1l	equ	0xFE1
 24045                           indf2	equ	0xFDF
 24046                           postinc2	equ	0xFDE
 24047                           postdec2	equ	0xFDD
 24048                           plusw2	equ	0xFDB
 24049                           fsr2h	equ	0xFDA
 24050                           fsr2l	equ	0xFD9
 24051                           status	equ	0xFD8
 24052                           
 24053 ;; *************** function _DATAEE_ReadByte *****************
 24054 ;; Defined at:
 24055 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;  bAdd            1    wreg     unsigned char 
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;  bAdd            1    0[BANK0 ] unsigned char 
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      unsigned char 
 24062 ;; Registers used:
 24063 ;;		wreg, status,2
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        1 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; Hardware stack levels required when called:   11
 24076 ;; This function calls:
 24077 ;;		Nothing
 24078 ;; This function is called by:
 24079 ;;		_main
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083                           	psect	text105
 24084  0059C6                     __ptext105:
 24085                           	opt stack 0
 24086  0059C6                     _DATAEE_ReadByte:
 24087                           	opt stack 19
 24088                           
 24089                           ;incstack = 0
 24090                           ;DATAEE_ReadByte@bAdd stored from wreg
 24091  0059C6  0100               	movlb	0	; () banked
 24092  0059C8  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24093                           
 24094                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24095  0059CA  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24096                           
 24097                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24098  0059CE  9CA6               	bcf	4006,6,c	;volsfr
 24099                           
 24100                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24101  0059D0  9EA6               	bcf	4006,7,c	;volsfr
 24102                           
 24103                           ;memory.c: 193: EECON1bits.RD = 1;
 24104  0059D2  80A6               	bsf	4006,0,c	;volsfr
 24105                           
 24106                           ;memory.c: 194: __nop();
 24107  0059D4  F000               	nop	
 24108                           
 24109                           ;memory.c: 195: __nop();
 24110  0059D6  F000               	nop	
 24111                           
 24112                           ;memory.c: 197: return (EEDATA);
 24113  0059D8  50A8               	movf	4008,w,c	;volatile
 24114  0059DA  0012               	return	
 24115  0059DC                     __end_of_DATAEE_ReadByte:
 24116                           	opt stack 0
 24117                           tblptru	equ	0xFF8
 24118                           tblptrh	equ	0xFF7
 24119                           tblptrl	equ	0xFF6
 24120                           tablat	equ	0xFF5
 24121                           prodh	equ	0xFF4
 24122                           prodl	equ	0xFF3
 24123                           intcon	equ	0xFF2
 24124                           intcon2	equ	0xFF1
 24125                           intcon3	equ	0xFF0
 24126                           indf0	equ	0xFEF
 24127                           postinc0	equ	0xFEE
 24128                           fsr0h	equ	0xFEA
 24129                           fsr0l	equ	0xFE9
 24130                           wreg	equ	0xFE8
 24131                           indf1	equ	0xFE7
 24132                           postdec1	equ	0xFE5
 24133                           fsr1h	equ	0xFE2
 24134                           fsr1l	equ	0xFE1
 24135                           indf2	equ	0xFDF
 24136                           postinc2	equ	0xFDE
 24137                           postdec2	equ	0xFDD
 24138                           plusw2	equ	0xFDB
 24139                           fsr2h	equ	0xFDA
 24140                           fsr2l	equ	0xFD9
 24141                           status	equ	0xFD8
 24142                           
 24143 ;; *************** function _INTERRUPT_InterruptManager *****************
 24144 ;; Defined at:
 24145 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 24146 ;; Parameters:    Size  Location     Type
 24147 ;;		None
 24148 ;; Auto vars:     Size  Location     Type
 24149 ;;  tClearPin       1   49[COMRAM] unsigned char 
 24150 ;; Return value:  Size  Location     Type
 24151 ;;                  1    wreg      void 
 24152 ;; Registers used:
 24153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24154 ;; Tracked objects:
 24155 ;;		On entry : 0/0
 24156 ;;		On exit  : 0/0
 24157 ;;		Unchanged: 0/0
 24158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24159 ;;      Params:         0       0       0       0       0       0       0       0       0
 24160 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24161 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24162 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24163 ;;Total ram usage:       19 bytes
 24164 ;; Hardware stack levels used:    1
 24165 ;; Hardware stack levels required when called:   10
 24166 ;; This function calls:
 24167 ;;		_CMP1_ISR
 24168 ;;		_EUSART_Receive_ISR
 24169 ;;		_EUSART_Transmit_ISR
 24170 ;;		_InterruptPinRX
 24171 ;;		_InterruptTimerUART
 24172 ;;		_TMR0_ISR
 24173 ;;		_TMR1_ISR
 24174 ;;		_TMR3_ISR
 24175 ;;		_TMRapp_Tick
 24176 ;;		_USBDeviceTasks
 24177 ;;		_USBapp_setrxByteFlag
 24178 ;; This function is called by:
 24179 ;;		Interrupt level 2
 24180 ;; This function uses a non-reentrant model
 24181 ;;
 24182                           
 24183                           	psect	intcode
 24184  000008                     __pintcode:
 24185                           	opt stack 0
 24186  000008                     _INTERRUPT_InterruptManager:
 24187                           	opt stack 11
 24188                           
 24189                           ;incstack = 0
 24190  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24191  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 24192  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 24193  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 24194  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 24195  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 24196  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 24197  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 24198  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 24199  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 24200  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 24201  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 24202  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 24203  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 24204  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 24205  000042  C05E  F02E         	movff	btemp,??_INTERRUPT_InterruptManager+14
 24206  000046  C05F  F02F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 24207  00004A  C060  F030         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 24208  00004E  C061  F031         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 24209                           
 24210                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24211  000052  B09D               	btfsc	3997,0,c	;volatile
 24212  000054  A09E               	btfss	3998,0,c	;volatile
 24213  000056  D004               	goto	i2l1283
 24214                           
 24215                           ;interrupt_manager.c: 60: {
 24216                           ;interrupt_manager.c: 61: TMR1_ISR();
 24217  000058  EC73  F02D         	call	_TMR1_ISR	;wreg free
 24218                           
 24219                           ;interrupt_manager.c: 63: TMRapp_Tick();
 24220  00005C  ECB4  F02D         	call	_TMRapp_Tick	;wreg free
 24221  000060                     i2l1283:
 24222                           
 24223                           ;interrupt_manager.c: 64: }
 24224                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24225  000060  B2A0               	btfsc	4000,1,c	;volatile
 24226  000062  A2A1               	btfss	4001,1,c	;volatile
 24227  000064  D003               	goto	i2l1284
 24228                           
 24229                           ;interrupt_manager.c: 66: {
 24230                           ;interrupt_manager.c: 67: TMR3_ISR();
 24231  000066  EC63  F02C         	call	_TMR3_ISR	;wreg free
 24232                           
 24233                           ;interrupt_manager.c: 68: }
 24234  00006A  D013               	goto	i2l1290
 24235  00006C                     i2l1284:
 24236                           
 24237                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24238  00006C  BA9D               	btfsc	3997,5,c	;volatile
 24239  00006E  AA9E               	btfss	3998,5,c	;volatile
 24240  000070  D005               	goto	i2l1286
 24241                           
 24242                           ;interrupt_manager.c: 70: {
 24243                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 24244  000072  ECA0  F02D         	call	_USBapp_setrxByteFlag	;wreg free
 24245                           
 24246                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 24247  000076  EC3D  F02B         	call	_EUSART_Receive_ISR	;wreg free
 24248                           
 24249                           ;interrupt_manager.c: 73: }
 24250  00007A  D00B               	goto	i2l1290
 24251  00007C                     i2l1286:
 24252                           
 24253                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 24254  00007C  B89D               	btfsc	3997,4,c	;volatile
 24255  00007E  A89E               	btfss	3998,4,c	;volatile
 24256  000080  D003               	goto	i2l1288
 24257                           
 24258                           ;interrupt_manager.c: 75: {
 24259                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 24260  000082  EC25  F02B         	call	_EUSART_Transmit_ISR	;wreg free
 24261                           
 24262                           ;interrupt_manager.c: 77: }
 24263  000086  D005               	goto	i2l1290
 24264  000088                     i2l1288:
 24265                           
 24266                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 24267  000088  BCA0               	btfsc	4000,6,c	;volatile
 24268  00008A  ACA1               	btfss	4001,6,c	;volatile
 24269  00008C  D002               	goto	i2l1290
 24270                           
 24271                           ;interrupt_manager.c: 79: {
 24272                           ;interrupt_manager.c: 80: CMP1_ISR();
 24273  00008E  ECCA  F02D         	call	_CMP1_ISR	;wreg free
 24274  000092                     i2l1290:
 24275                           
 24276                           ;interrupt_manager.c: 81: }
 24277                           ;interrupt_manager.c: 82: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 24278  000092  BAF2               	btfsc	intcon,5,c	;volatile
 24279  000094  A4F2               	btfss	intcon,2,c	;volatile
 24280  000096  D005               	goto	i2l1291
 24281                           
 24282                           ;interrupt_manager.c: 83: {
 24283                           ;interrupt_manager.c: 84: TMR0_ISR();
 24284  000098  ECC2  F02D         	call	_TMR0_ISR	;wreg free
 24285                           
 24286                           ;interrupt_manager.c: 85: InterruptTimerUART();
 24287  00009C  EC84  F017         	call	_InterruptTimerUART	;wreg free
 24288                           
 24289                           ;interrupt_manager.c: 88: }
 24290  0000A0  D00D               	goto	i2l1294
 24291  0000A2                     i2l1291:
 24292                           
 24293                           ;interrupt_manager.c: 89: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 24294  0000A2  B6F2               	btfsc	intcon,3,c	;volatile
 24295  0000A4  A0F2               	btfss	intcon,0,c	;volatile
 24296  0000A6  D008               	goto	i2l1293
 24297                           
 24298                           ;interrupt_manager.c: 90: {
 24299                           ;interrupt_manager.c: 91: bool tClearPin;
 24300                           ;interrupt_manager.c: 93: INTCONbits.IOCIF = 0;
 24301  0000A8  90F2               	bcf	intcon,0,c	;volatile
 24302                           
 24303                           ;interrupt_manager.c: 95: tClearPin = PORTBbits.RB7;
 24304  0000AA  0E00               	movlw	0
 24305  0000AC  BE81               	btfsc	3969,7,c	;volatile
 24306  0000AE  0E01               	movlw	1
 24307  0000B0  6E32               	movwf	INTERRUPT_InterruptManager@tClearPin,c
 24308                           
 24309                           ;interrupt_manager.c: 98: InterruptPinRX();
 24310  0000B2  EC6C  F02B         	call	_InterruptPinRX	;wreg free
 24311                           
 24312                           ;interrupt_manager.c: 99: }
 24313  0000B6  D002               	goto	i2l1294
 24314  0000B8                     i2l1293:
 24315                           
 24316                           ;interrupt_manager.c: 100: else
 24317                           ;interrupt_manager.c: 101: {
 24318                           ;interrupt_manager.c: 103: USBDeviceTasks();
 24319  0000B8  EC13  F014         	call	_USBDeviceTasks	;wreg free
 24320  0000BC                     i2l1294:
 24321  0000BC  C031  F061         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 24322  0000C0  C030  F060         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 24323  0000C4  C02F  F05F         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 24324  0000C8  C02E  F05E         	movff	??_INTERRUPT_InterruptManager+14,btemp
 24325  0000CC  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 24326  0000D0  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 24327  0000D4  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 24328  0000D8  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 24329  0000DC  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 24330  0000E0  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 24331  0000E4  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 24332  0000E8  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 24333  0000EC  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 24334  0000F0  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 24335  0000F4  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 24336  0000F8  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 24337  0000FC  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 24338  000100  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 24339  000104  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24340  000106  0011               	retfie		f
 24341  000108                     __end_of_INTERRUPT_InterruptManager:
 24342                           	opt stack 0
 24343                           pclatu	equ	0xFFB
 24344                           pclath	equ	0xFFA
 24345                           tblptru	equ	0xFF8
 24346                           tblptrh	equ	0xFF7
 24347                           tblptrl	equ	0xFF6
 24348                           tablat	equ	0xFF5
 24349                           prodh	equ	0xFF4
 24350                           prodl	equ	0xFF3
 24351                           intcon	equ	0xFF2
 24352                           intcon2	equ	0xFF1
 24353                           intcon3	equ	0xFF0
 24354                           indf0	equ	0xFEF
 24355                           postinc0	equ	0xFEE
 24356                           fsr0h	equ	0xFEA
 24357                           fsr0l	equ	0xFE9
 24358                           wreg	equ	0xFE8
 24359                           indf1	equ	0xFE7
 24360                           postdec1	equ	0xFE5
 24361                           fsr1h	equ	0xFE2
 24362                           fsr1l	equ	0xFE1
 24363                           indf2	equ	0xFDF
 24364                           postinc2	equ	0xFDE
 24365                           postdec2	equ	0xFDD
 24366                           plusw2	equ	0xFDB
 24367                           fsr2h	equ	0xFDA
 24368                           fsr2l	equ	0xFD9
 24369                           status	equ	0xFD8
 24370                           
 24371 ;; *************** function _USBapp_setrxByteFlag *****************
 24372 ;; Defined at:
 24373 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24374 ;; Parameters:    Size  Location     Type
 24375 ;;		None
 24376 ;; Auto vars:     Size  Location     Type
 24377 ;;		None
 24378 ;; Return value:  Size  Location     Type
 24379 ;;                  1    wreg      void 
 24380 ;; Registers used:
 24381 ;;		wreg, status,2
 24382 ;; Tracked objects:
 24383 ;;		On entry : 0/0
 24384 ;;		On exit  : 0/0
 24385 ;;		Unchanged: 0/0
 24386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24387 ;;      Params:         0       0       0       0       0       0       0       0       0
 24388 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24390 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24391 ;;Total ram usage:        0 bytes
 24392 ;; Hardware stack levels used:    1
 24393 ;; This function calls:
 24394 ;;		Nothing
 24395 ;; This function is called by:
 24396 ;;		_INTERRUPT_InterruptManager
 24397 ;; This function uses a non-reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text107
 24401  005B40                     __ptext107:
 24402                           	opt stack 0
 24403  005B40                     _USBapp_setrxByteFlag:
 24404                           	opt stack 20
 24405                           
 24406                           ;USBapp.c: 265: rxByteFlag = 1;
 24407                           
 24408                           ;incstack = 0
 24409  005B40  0E01               	movlw	1
 24410  005B42  0100               	movlb	0	; () banked
 24411  005B44  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 24412                           
 24413                           ; BSR set to: 0
 24414  005B46  0012               	return		;funcret
 24415  005B48                     __end_of_USBapp_setrxByteFlag:
 24416                           	opt stack 0
 24417                           pclatu	equ	0xFFB
 24418                           pclath	equ	0xFFA
 24419                           tblptru	equ	0xFF8
 24420                           tblptrh	equ	0xFF7
 24421                           tblptrl	equ	0xFF6
 24422                           tablat	equ	0xFF5
 24423                           prodh	equ	0xFF4
 24424                           prodl	equ	0xFF3
 24425                           intcon	equ	0xFF2
 24426                           intcon2	equ	0xFF1
 24427                           intcon3	equ	0xFF0
 24428                           indf0	equ	0xFEF
 24429                           postinc0	equ	0xFEE
 24430                           fsr0h	equ	0xFEA
 24431                           fsr0l	equ	0xFE9
 24432                           wreg	equ	0xFE8
 24433                           indf1	equ	0xFE7
 24434                           postdec1	equ	0xFE5
 24435                           fsr1h	equ	0xFE2
 24436                           fsr1l	equ	0xFE1
 24437                           indf2	equ	0xFDF
 24438                           postinc2	equ	0xFDE
 24439                           postdec2	equ	0xFDD
 24440                           plusw2	equ	0xFDB
 24441                           fsr2h	equ	0xFDA
 24442                           fsr2l	equ	0xFD9
 24443                           status	equ	0xFD8
 24444                           
 24445 ;; *************** function _USBDeviceTasks *****************
 24446 ;; Defined at:
 24447 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24448 ;; Parameters:    Size  Location     Type
 24449 ;;		None
 24450 ;; Auto vars:     Size  Location     Type
 24451 ;;  i               1   30[COMRAM] unsigned char 
 24452 ;; Return value:  Size  Location     Type
 24453 ;;                  1    wreg      void 
 24454 ;; Registers used:
 24455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24456 ;; Tracked objects:
 24457 ;;		On entry : 0/0
 24458 ;;		On exit  : 0/0
 24459 ;;		Unchanged: 0/0
 24460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24461 ;;      Params:         0       0       0       0       0       0       0       0       0
 24462 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24463 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24464 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24465 ;;Total ram usage:        1 bytes
 24466 ;; Hardware stack levels used:    1
 24467 ;; Hardware stack levels required when called:    9
 24468 ;; This function calls:
 24469 ;;		_USBCtrlEPAllowStatusStage
 24470 ;;		_USBCtrlEPService
 24471 ;;		_USBStallHandler
 24472 ;;		_USBSuspend
 24473 ;;		_USBWakeFromSuspend
 24474 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24475 ;;		i2_USBDeviceInit
 24476 ;; This function is called by:
 24477 ;;		_INTERRUPT_InterruptManager
 24478 ;; This function uses a non-reentrant model
 24479 ;;
 24480                           
 24481                           	psect	text108
 24482  002826                     __ptext108:
 24483                           	opt stack 0
 24484  002826                     _USBDeviceTasks:
 24485                           	opt stack 11
 24486                           
 24487                           ;usb_device.c: 430: uint8_t i;
 24488                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24489                           
 24490                           ; BSR set to: 0
 24491                           ;incstack = 0
 24492  002826  0100               	movlb	0	; () banked
 24493  002828  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24494  00282A  B4D8               	btfsc	status,2,c
 24495                           
 24496                           ; BSR set to: 0
 24497                           ;usb_device.c: 433: {
 24498                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24499  00282C  BA60               	btfsc	3936,5,c	;volatile
 24500  00282E  D006               	goto	i2l1864
 24501                           
 24502                           ; BSR set to: 0
 24503                           ;usb_device.c: 444: {
 24504                           ;usb_device.c: 445: {UIR = 0;};
 24505  002830  0E00               	movlw	0
 24506  002832  6E65               	movwf	3941,c	;volatile
 24507                           
 24508                           ; BSR set to: 0
 24509                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24510  002834  8064               	bsf	3940,0,c	;volatile
 24511                           
 24512                           ; BSR set to: 0
 24513                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24514  002836  8864               	bsf	3940,4,c	;volatile
 24515                           
 24516                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24517  002838  0E02               	movlw	2
 24518  00283A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24519  00283C                     i2l1864:
 24520                           
 24521                           ; BSR set to: 0
 24522                           ;usb_device.c: 449: }
 24523                           ;usb_device.c: 450: }
 24524                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24525                           
 24526                           ; BSR set to: 0
 24527                           
 24528                           ; BSR set to: 0
 24529  00283C  B465               	btfsc	3941,2,c	;volatile
 24530                           
 24531                           ; BSR set to: 0
 24532  00283E  A464               	btfss	3940,2,c	;volatile
 24533  002840  D003               	goto	i2l1865
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;usb_device.c: 455: {
 24537                           ;usb_device.c: 456: (UIR &= 0xFB);
 24538  002842  9465               	bcf	3941,2,c	;volatile
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;usb_device.c: 457: USBWakeFromSuspend();
 24542  002844  EC0D  F02B         	call	_USBWakeFromSuspend	;wreg free
 24543  002848                     i2l1865:
 24544                           
 24545                           ;usb_device.c: 458: }
 24546                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24547  002848  A260               	btfss	3936,1,c	;volatile
 24548  00284A  D002               	goto	i2l1866
 24549                           
 24550                           ;usb_device.c: 464: {
 24551                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24552  00284C  94A4               	bcf	4004,2,c	;volatile
 24553                           
 24554                           ;usb_device.c: 466: return;
 24555  00284E  0012               	return	
 24556  002850                     i2l1866:
 24557                           
 24558                           ;usb_device.c: 467: }
 24559                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24560  002850  B065               	btfsc	3941,0,c	;volatile
 24561  002852  A064               	btfss	3940,0,c	;volatile
 24562  002854  D007               	goto	i2l1868
 24563                           
 24564                           ;usb_device.c: 480: {
 24565                           ;usb_device.c: 481: USBDeviceInit();
 24566  002856  EC44  F015         	call	i2_USBDeviceInit	;wreg free
 24567                           
 24568                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24569  00285A  84A3               	bsf	4003,2,c	;volatile
 24570                           
 24571                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24572  00285C  0E04               	movlw	4
 24573  00285E  0100               	movlb	0	; () banked
 24574  002860  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;usb_device.c: 489: (UIR &= 0xFE);
 24578  002862  9065               	bcf	3941,0,c	;volatile
 24579  002864                     i2l1868:
 24580                           
 24581                           ;usb_device.c: 490: }
 24582                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24583                           
 24584                           ; BSR set to: 0
 24585  002864  B865               	btfsc	3941,4,c	;volatile
 24586  002866  A864               	btfss	3940,4,c	;volatile
 24587  002868  D003               	goto	i2l1869
 24588                           
 24589                           ;usb_device.c: 496: {
 24590                           ;usb_device.c: 497: USBSuspend();
 24591  00286A  ECAE  F02B         	call	_USBSuspend	;wreg free
 24592                           
 24593                           ;usb_device.c: 498: (UIR &= 0xEF);
 24594  00286E  9865               	bcf	3941,4,c	;volatile
 24595  002870                     i2l1869:
 24596                           
 24597                           ;usb_device.c: 499: }
 24598                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24599  002870  AC65               	btfss	3941,6,c	;volatile
 24600  002872  D018               	goto	i2l1873
 24601                           
 24602                           ;usb_device.c: 502: {
 24603                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24604  002874  AC64               	btfss	3940,6,c	;volatile
 24605  002876  D00E               	goto	i2l1871
 24606                           
 24607                           ;usb_device.c: 504: {
 24608                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24609  002878  0E00               	movlw	0
 24610  00287A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24611  00287C  0E73               	movlw	115
 24612  00287E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24613  002880  0E00               	movlw	0
 24614  002882  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24615  002884  0E00               	movlw	0
 24616  002886  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24617  002888  0E00               	movlw	0
 24618  00288A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24619  00288C  0E01               	movlw	1
 24620  00288E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24621  002890  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24622  002894                     i2l1871:
 24623                           
 24624                           ;usb_device.c: 506: }
 24625                           ;usb_device.c: 507: (UIR &= 0xBF);
 24626  002894  9C65               	bcf	3941,6,c	;volatile
 24627                           
 24628                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24629  002896  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24630  002898  A4D8               	btfss	status,2,c
 24631                           
 24632                           ;usb_device.c: 513: {
 24633                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24634  00289A  0646               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24635                           
 24636                           ;usb_device.c: 515: }
 24637                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24638  00289C  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24639  00289E  B4D8               	btfsc	status,2,c
 24640                           
 24641                           ;usb_device.c: 522: {
 24642                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24643  0028A0  EC9F  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24644  0028A4                     i2l1873:
 24645                           
 24646                           ;usb_device.c: 524: }
 24647                           ;usb_device.c: 525: }
 24648                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24649  0028A4  BA65               	btfsc	3941,5,c	;volatile
 24650  0028A6  AA64               	btfss	3940,5,c	;volatile
 24651  0028A8  D002               	goto	i2l1874
 24652                           
 24653                           ;usb_device.c: 528: {
 24654                           ;usb_device.c: 529: USBStallHandler();
 24655  0028AA  EC50  F029         	call	_USBStallHandler	;wreg free
 24656  0028AE                     i2l1874:
 24657                           
 24658                           ;usb_device.c: 530: }
 24659                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24660  0028AE  B265               	btfsc	3941,1,c	;volatile
 24661  0028B0  A264               	btfss	3940,1,c	;volatile
 24662  0028B2  D00F               	goto	i2l1875
 24663                           
 24664                           ;usb_device.c: 533: {
 24665                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24666  0028B4  0E7F               	movlw	127
 24667  0028B6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24668  0028B8  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24669  0028BA  0E00               	movlw	0
 24670  0028BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24671  0028BE  0E00               	movlw	0
 24672  0028C0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24673  0028C2  0E00               	movlw	0
 24674  0028C4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24675  0028C6  0E01               	movlw	1
 24676  0028C8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24677  0028CA  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24678                           
 24679                           ;usb_device.c: 535: {UEIR = 0;};
 24680  0028CE  0E00               	movlw	0
 24681  0028D0  6E67               	movwf	3943,c	;volatile
 24682  0028D2                     i2l1875:
 24683                           
 24684                           ;usb_device.c: 536: }
 24685                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24686  0028D2  0E04               	movlw	4
 24687  0028D4  0100               	movlb	0	; () banked
 24688  0028D6  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24689  0028D8  D002               	goto	i2l1876
 24690                           
 24691                           ; BSR set to: 0
 24692                           ;usb_device.c: 544: {
 24693                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24694  0028DA  94A4               	bcf	4004,2,c	;volatile
 24695                           
 24696                           ;usb_device.c: 546: return;
 24697  0028DC  0012               	return	
 24698  0028DE                     i2l1876:
 24699                           
 24700                           ; BSR set to: 0
 24701                           ;usb_device.c: 547: }
 24702                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24703  0028DE  A664               	btfss	3940,3,c	;volatile
 24704  0028E0  D039               	goto	i2u1059_40
 24705                           
 24706                           ; BSR set to: 0
 24707                           ;usb_device.c: 553: {
 24708                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24709  0028E2  0E00               	movlw	0
 24710  0028E4  6E1F               	movwf	USBDeviceTasks@i,c
 24711  0028E6                     i2l11844:
 24712                           
 24713                           ; BSR set to: 0
 24714  0028E6  0E03               	movlw	3
 24715  0028E8  641F               	cpfsgt	USBDeviceTasks@i,c
 24716  0028EA  D001               	goto	i2l1878
 24717  0028EC  D033               	goto	i2u1059_40
 24718  0028EE                     i2l1878:
 24719                           
 24720                           ;usb_device.c: 555: {
 24721                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24722  0028EE  A665               	btfss	3941,3,c	;volatile
 24723  0028F0  D031               	goto	i2u1059_40
 24724                           
 24725                           ;usb_device.c: 557: {
 24726                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24727  0028F2  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24728                           
 24729                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24730  0028F6  3059               	rrcf	_USTATcopy,w,c	;volatile
 24731  0028F8  32E8               	rrcf	wreg,f,c
 24732  0028FA  32E8               	rrcf	wreg,f,c
 24733  0028FC  0B0F               	andlw	15
 24734  0028FE  6E48               	movwf	_endpoint_number,c	;volatile
 24735                           
 24736                           ;usb_device.c: 562: (UIR &= 0xF7);
 24737  002900  9665               	bcf	3941,3,c	;volatile
 24738                           
 24739                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24740  002902  B459               	btfsc	_USTATcopy,2,c	;volatile
 24741  002904  D007               	goto	i2l1881
 24742                           
 24743                           ;usb_device.c: 567: {
 24744                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24745  002906  5048               	movf	_endpoint_number,w,c	;volatile
 24746  002908  0D01               	mullw	1
 24747  00290A  0ED0               	movlw	low _ep_data_out
 24748  00290C  24F3               	addwf	prodl,w,c
 24749  00290E  6ED9               	movwf	fsr2l,c
 24750  002910  0E00               	movlw	high _ep_data_out
 24751  002912  D006               	goto	L24
 24752  002914                     i2l1881:
 24753                           
 24754                           ;usb_device.c: 570: else
 24755                           ;usb_device.c: 571: {
 24756                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24757                           
 24758                           ; BSR set to: 0
 24759  002914  5048               	movf	_endpoint_number,w,c	;volatile
 24760  002916  0D01               	mullw	1
 24761  002918  0ED3               	movlw	low _ep_data_in
 24762  00291A  24F3               	addwf	prodl,w,c
 24763  00291C  6ED9               	movwf	fsr2l,c
 24764  00291E  0E00               	movlw	high _ep_data_in
 24765  002920                     L24:
 24766  002920  20F4               	addwfc	prodh,w,c
 24767  002922  6EDA               	movwf	fsr2h,c
 24768  002924  0100               	movlb	0	; () banked
 24769  002926  70DF               	btg	indf2,0,c
 24770                           
 24771                           ; BSR set to: 0
 24772                           ;usb_device.c: 573: }
 24773                           ;usb_device.c: 577: if(endpoint_number == 0)
 24774                           
 24775                           ; BSR set to: 0
 24776  002928  5048               	movf	_endpoint_number,w,c	;volatile
 24777  00292A  A4D8               	btfss	status,2,c
 24778  00292C  D003               	goto	i2l1883
 24779                           
 24780                           ; BSR set to: 0
 24781                           ;usb_device.c: 578: {
 24782                           ;usb_device.c: 579: USBCtrlEPService();
 24783  00292E  EC6F  F01C         	call	_USBCtrlEPService	;wreg free
 24784                           
 24785                           ;usb_device.c: 580: }
 24786  002932  D00E               	goto	i2l1885
 24787  002934                     i2l1883:
 24788                           
 24789                           ;usb_device.c: 581: else
 24790                           ;usb_device.c: 582: {
 24791                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24792  002934  0E00               	movlw	0
 24793  002936  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24794  002938  0E72               	movlw	114
 24795  00293A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24796  00293C  0E59               	movlw	low _USTATcopy
 24797  00293E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24798  002940  0E00               	movlw	high _USTATcopy
 24799  002942  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24800  002944  0E00               	movlw	0
 24801  002946  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24802  002948  0E00               	movlw	0
 24803  00294A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24804  00294C  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24805  002950                     i2l1885:
 24806  002950  2A1F               	incf	USBDeviceTasks@i,f,c
 24807  002952  D7C9               	goto	i2l11844
 24808  002954                     i2u1059_40:
 24809                           
 24810                           ;usb_device.c: 589: }
 24811                           ;usb_device.c: 590: }
 24812                           ;usb_device.c: 591: }
 24813                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24814  002954  94A4               	bcf	4004,2,c	;volatile
 24815  002956  0012               	return		;funcret
 24816  002958                     __end_of_USBDeviceTasks:
 24817                           	opt stack 0
 24818                           pclatu	equ	0xFFB
 24819                           pclath	equ	0xFFA
 24820                           tblptru	equ	0xFF8
 24821                           tblptrh	equ	0xFF7
 24822                           tblptrl	equ	0xFF6
 24823                           tablat	equ	0xFF5
 24824                           prodh	equ	0xFF4
 24825                           prodl	equ	0xFF3
 24826                           intcon	equ	0xFF2
 24827                           intcon2	equ	0xFF1
 24828                           intcon3	equ	0xFF0
 24829                           indf0	equ	0xFEF
 24830                           postinc0	equ	0xFEE
 24831                           fsr0h	equ	0xFEA
 24832                           fsr0l	equ	0xFE9
 24833                           wreg	equ	0xFE8
 24834                           indf1	equ	0xFE7
 24835                           postdec1	equ	0xFE5
 24836                           fsr1h	equ	0xFE2
 24837                           fsr1l	equ	0xFE1
 24838                           indf2	equ	0xFDF
 24839                           postinc2	equ	0xFDE
 24840                           postdec2	equ	0xFDD
 24841                           plusw2	equ	0xFDB
 24842                           fsr2h	equ	0xFDA
 24843                           fsr2l	equ	0xFD9
 24844                           status	equ	0xFD8
 24845                           
 24846 ;; *************** function i2_USBDeviceInit *****************
 24847 ;; Defined at:
 24848 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24849 ;; Parameters:    Size  Location     Type
 24850 ;;		None
 24851 ;; Auto vars:     Size  Location     Type
 24852 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24853 ;; Return value:  Size  Location     Type
 24854 ;;                  1    wreg      void 
 24855 ;; Registers used:
 24856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24857 ;; Tracked objects:
 24858 ;;		On entry : 0/0
 24859 ;;		On exit  : 0/0
 24860 ;;		Unchanged: 0/0
 24861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24862 ;;      Params:         0       0       0       0       0       0       0       0       0
 24863 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24865 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24866 ;;Total ram usage:        1 bytes
 24867 ;; Hardware stack levels used:    1
 24868 ;; Hardware stack levels required when called:    1
 24869 ;; This function calls:
 24870 ;;		i2_memset
 24871 ;; This function is called by:
 24872 ;;		_USBDeviceTasks
 24873 ;; This function uses a non-reentrant model
 24874 ;;
 24875                           
 24876                           	psect	text109
 24877  002A88                     __ptext109:
 24878                           	opt stack 0
 24879  002A88                     i2_USBDeviceInit:
 24880                           	opt stack 18
 24881                           
 24882                           ;usb_device.c: 239: uint8_t i;
 24883                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24884                           
 24885                           ;incstack = 0
 24886  002A88  94A3               	bcf	4003,2,c	;volatile
 24887                           
 24888                           ;usb_device.c: 244: {UEIR = 0;};
 24889  002A8A  0E00               	movlw	0
 24890  002A8C  6E67               	movwf	3943,c	;volatile
 24891                           
 24892                           ;usb_device.c: 247: {UIR = 0;};
 24893  002A8E  0E00               	movlw	0
 24894  002A90  6E65               	movwf	3941,c	;volatile
 24895                           
 24896                           ;usb_device.c: 250: UEP0 = 0;
 24897  002A92  0E00               	movlw	0
 24898  002A94  6E6A               	movwf	3946,c	;volatile
 24899                           
 24900                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24901  002A96  0E6B               	movlw	107
 24902  002A98  6E01               	movwf	i2memset@p1,c
 24903  002A9A  0E0F               	movlw	15
 24904  002A9C  6E02               	movwf	i2memset@p1+1,c
 24905  002A9E  0E00               	movlw	0
 24906  002AA0  6E04               	movwf	i2memset@c+1,c
 24907  002AA2  0E00               	movlw	0
 24908  002AA4  6E03               	movwf	i2memset@c,c
 24909  002AA6  0E00               	movlw	0
 24910  002AA8  6E06               	movwf	i2memset@n+1,c
 24911  002AAA  0E02               	movlw	2
 24912  002AAC  6E05               	movwf	i2memset@n,c
 24913  002AAE  EC83  F02B         	call	i2_memset	;wreg free
 24914                           
 24915                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24916  002AB2  0E16               	movlw	22
 24917  002AB4  6E62               	movwf	3938,c	;volatile
 24918  002AB6  0E9F               	movlw	159
 24919  002AB8  6E66               	movwf	3942,c	;volatile
 24920  002ABA  0E7B               	movlw	123
 24921  002ABC  6E64               	movwf	3940,c	;volatile
 24922                           
 24923                           ;usb_device.c: 257: ;
 24924                           ;usb_device.c: 260: ;
 24925                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24926  002ABE  0E00               	movlw	0
 24927  002AC0  6E09               	movwf	i2USBDeviceInit@i,c
 24928  002AC2                     i2l11324:
 24929  002AC2  0E0B               	movlw	11
 24930  002AC4  6409               	cpfsgt	i2USBDeviceInit@i,c
 24931  002AC6  D001               	goto	i2l1853
 24932  002AC8  D00E               	goto	i2u995_40
 24933  002ACA                     i2l1853:
 24934                           
 24935                           ;usb_device.c: 264: {
 24936                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24937  002ACA  5009               	movf	i2USBDeviceInit@i,w,c
 24938  002ACC  0D04               	mullw	4
 24939  002ACE  0E00               	movlw	0
 24940  002AD0  24F3               	addwf	prodl,w,c
 24941  002AD2  6ED9               	movwf	fsr2l,c
 24942  002AD4  0E04               	movlw	4
 24943  002AD6  20F4               	addwfc	prodh,w,c
 24944  002AD8  6EDA               	movwf	fsr2h,c
 24945  002ADA  6ADE               	clrf	postinc2,c
 24946  002ADC  6ADE               	clrf	postinc2,c
 24947  002ADE  6ADE               	clrf	postinc2,c
 24948  002AE0  6ADD               	clrf	postdec2,c
 24949  002AE2  2A09               	incf	i2USBDeviceInit@i,f,c
 24950  002AE4  D7EE               	goto	i2l11324
 24951  002AE6                     i2u995_40:
 24952                           
 24953                           ;usb_device.c: 266: }
 24954                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24955  002AE6  8C60               	bsf	3936,6,c	;volatile
 24956                           
 24957                           ;usb_device.c: 272: UADDR = 0x00;
 24958  002AE8  0E00               	movlw	0
 24959  002AEA  6E63               	movwf	3939,c	;volatile
 24960                           
 24961                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24962  002AEC  9860               	bcf	3936,4,c	;volatile
 24963                           
 24964                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24965  002AEE  9C60               	bcf	3936,6,c	;volatile
 24966                           
 24967                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24968  002AF0  D00A               	goto	i2l1855
 24969  002AF2                     
 24970                           ;usb_device.c: 282: {
 24971                           ;usb_device.c: 283: (UIR &= 0xF7);
 24972  002AF2  9665               	bcf	3941,3,c	;volatile
 24973                           
 24974                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24975  002AF4  0E00               	movlw	0
 24976  002AF6  0100               	movlb	0	; () banked
 24977  002AF8  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24981  002AFA  0E00               	movlw	0
 24982  002AFC  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24983                           
 24984                           ; BSR set to: 0
 24985                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24986  002AFE  0E00               	movlw	0
 24987  002B00  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24988  002B02  0E00               	movlw	0
 24989  002B04  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24990  002B06                     i2l1855:
 24991                           
 24992                           ; BSR set to: 0
 24993  002B06  B665               	btfsc	3941,3,c	;volatile
 24994  002B08  D7F4               	goto	i2l1856
 24995                           
 24996                           ;usb_device.c: 288: }
 24997                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24998  002B0A  0E01               	movlw	1
 24999  002B0C  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25000                           
 25001                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 25002  002B0E  0E01               	movlw	1
 25003  002B10  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25004                           
 25005                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25006  002B12  0E00               	movlw	0
 25007  002B14  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25008                           
 25009                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25010  002B16  0E00               	movlw	0
 25011  002B18  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25012                           
 25013                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25014  002B1A  0E00               	movlw	0
 25015  002B1C  0101               	movlb	1	; () banked
 25016  002B1E  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25017                           
 25018                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25019  002B20  0E00               	movlw	0
 25020  002B22  6E09               	movwf	i2USBDeviceInit@i,c
 25021  002B24                     i2l11352:
 25022                           
 25023                           ; BSR set to: 1
 25024  002B24  0E02               	movlw	2
 25025  002B26  6409               	cpfsgt	i2USBDeviceInit@i,c
 25026  002B28  D001               	goto	i2l1858
 25027  002B2A  D02E               	goto	i2u998_40
 25028  002B2C                     i2l1858:
 25029                           
 25030                           ;usb_device.c: 302: {
 25031                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25032                           
 25033                           ; BSR set to: 1
 25034  002B2C  5009               	movf	i2USBDeviceInit@i,w,c
 25035  002B2E  0D02               	mullw	2
 25036  002B30  0ECA               	movlw	low _pBDTEntryIn
 25037  002B32  24F3               	addwf	prodl,w,c
 25038  002B34  6ED9               	movwf	fsr2l,c
 25039  002B36  0E00               	movlw	high _pBDTEntryIn
 25040  002B38  20F4               	addwfc	prodh,w,c
 25041  002B3A  6EDA               	movwf	fsr2h,c
 25042  002B3C  0E00               	movlw	0
 25043  002B3E  6EDE               	movwf	postinc2,c
 25044  002B40  0E00               	movlw	0
 25045  002B42  6EDD               	movwf	postdec2,c
 25046                           
 25047                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25048  002B44  5009               	movf	i2USBDeviceInit@i,w,c
 25049  002B46  0D02               	mullw	2
 25050  002B48  0E40               	movlw	low _pBDTEntryOut
 25051  002B4A  24F3               	addwf	prodl,w,c
 25052  002B4C  6ED9               	movwf	fsr2l,c
 25053  002B4E  0E01               	movlw	high _pBDTEntryOut
 25054  002B50  20F4               	addwfc	prodh,w,c
 25055  002B52  6EDA               	movwf	fsr2h,c
 25056  002B54  0E00               	movlw	0
 25057  002B56  6EDE               	movwf	postinc2,c
 25058  002B58  0E00               	movlw	0
 25059  002B5A  6EDD               	movwf	postdec2,c
 25060                           
 25061                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25062  002B5C  5009               	movf	i2USBDeviceInit@i,w,c
 25063  002B5E  0D01               	mullw	1
 25064  002B60  0ED3               	movlw	low _ep_data_in
 25065  002B62  24F3               	addwf	prodl,w,c
 25066  002B64  6ED9               	movwf	fsr2l,c
 25067  002B66  0E00               	movlw	high _ep_data_in
 25068  002B68  20F4               	addwfc	prodh,w,c
 25069  002B6A  6EDA               	movwf	fsr2h,c
 25070  002B6C  0E00               	movlw	0
 25071  002B6E  6EDF               	movwf	indf2,c
 25072                           
 25073                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25074  002B70  5009               	movf	i2USBDeviceInit@i,w,c
 25075  002B72  0D01               	mullw	1
 25076  002B74  0ED0               	movlw	low _ep_data_out
 25077  002B76  24F3               	addwf	prodl,w,c
 25078  002B78  6ED9               	movwf	fsr2l,c
 25079  002B7A  0E00               	movlw	high _ep_data_out
 25080  002B7C  20F4               	addwfc	prodh,w,c
 25081  002B7E  6EDA               	movwf	fsr2h,c
 25082  002B80  0E00               	movlw	0
 25083  002B82  6EDF               	movwf	indf2,c
 25084  002B84  2A09               	incf	i2USBDeviceInit@i,f,c
 25085  002B86  D7CE               	goto	i2l11352
 25086  002B88                     i2u998_40:
 25087                           
 25088                           ;usb_device.c: 307: }
 25089                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25090  002B88  0E08               	movlw	8
 25091  002B8A  0100               	movlb	0	; () banked
 25092  002B8C  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 25093  002B8E  0E04               	movlw	4
 25094  002B90  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25095                           
 25096                           ; BSR set to: 0
 25097                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25098  002B92  0E16               	movlw	22
 25099  002B94  6E6A               	movwf	3946,c	;volatile
 25100                           
 25101                           ; BSR set to: 0
 25102                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25103  002B96  0E04               	movlw	4
 25104  002B98  0104               	movlb	4	; () banked
 25105  002B9A  6F03               	movwf	3,b	;volatile
 25106  002B9C  0E30               	movlw	48
 25107  002B9E  6F02               	movwf	2,b	;volatile
 25108                           
 25109                           ; BSR set to: 4
 25110                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25111  002BA0  0E08               	movlw	8
 25112  002BA2  6F01               	movwf	1,b	;volatile
 25113                           
 25114                           ; BSR set to: 4
 25115                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25116  002BA4  0E04               	movlw	4
 25117  002BA6  6F00               	movwf	0,b	;volatile
 25118                           
 25119                           ; BSR set to: 4
 25120                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25121  002BA8  8F00               	bsf	0,7,b	;volatile
 25122                           
 25123                           ; BSR set to: 4
 25124                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25125  002BAA  0E00               	movlw	0
 25126  002BAC  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 25127                           
 25128                           ; BSR set to: 4
 25129                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25130  002BAE  0E00               	movlw	0
 25131  002BB0  0100               	movlb	0	; () banked
 25132  002BB2  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25133                           
 25134                           ; BSR set to: 0
 25135  002BB4  0012               	return		;funcret
 25136  002BB6                     __end_ofi2_USBDeviceInit:
 25137                           	opt stack 0
 25138                           pclatu	equ	0xFFB
 25139                           pclath	equ	0xFFA
 25140                           tblptru	equ	0xFF8
 25141                           tblptrh	equ	0xFF7
 25142                           tblptrl	equ	0xFF6
 25143                           tablat	equ	0xFF5
 25144                           prodh	equ	0xFF4
 25145                           prodl	equ	0xFF3
 25146                           intcon	equ	0xFF2
 25147                           intcon2	equ	0xFF1
 25148                           intcon3	equ	0xFF0
 25149                           indf0	equ	0xFEF
 25150                           postinc0	equ	0xFEE
 25151                           fsr0h	equ	0xFEA
 25152                           fsr0l	equ	0xFE9
 25153                           wreg	equ	0xFE8
 25154                           indf1	equ	0xFE7
 25155                           postdec1	equ	0xFE5
 25156                           fsr1h	equ	0xFE2
 25157                           fsr1l	equ	0xFE1
 25158                           indf2	equ	0xFDF
 25159                           postinc2	equ	0xFDE
 25160                           postdec2	equ	0xFDD
 25161                           plusw2	equ	0xFDB
 25162                           fsr2h	equ	0xFDA
 25163                           fsr2l	equ	0xFD9
 25164                           status	equ	0xFD8
 25165                           
 25166 ;; *************** function _USBWakeFromSuspend *****************
 25167 ;; Defined at:
 25168 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25169 ;; Parameters:    Size  Location     Type
 25170 ;;		None
 25171 ;; Auto vars:     Size  Location     Type
 25172 ;;		None
 25173 ;; Return value:  Size  Location     Type
 25174 ;;                  1    wreg      void 
 25175 ;; Registers used:
 25176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25177 ;; Tracked objects:
 25178 ;;		On entry : 0/0
 25179 ;;		On exit  : 0/0
 25180 ;;		Unchanged: 0/0
 25181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25182 ;;      Params:         0       0       0       0       0       0       0       0       0
 25183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25185 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25186 ;;Total ram usage:        0 bytes
 25187 ;; Hardware stack levels used:    1
 25188 ;; Hardware stack levels required when called:    5
 25189 ;; This function calls:
 25190 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25191 ;; This function is called by:
 25192 ;;		_USBDeviceTasks
 25193 ;; This function uses a non-reentrant model
 25194 ;;
 25195                           
 25196                           	psect	text110
 25197  00561A                     __ptext110:
 25198                           	opt stack 0
 25199  00561A                     _USBWakeFromSuspend:
 25200                           	opt stack 14
 25201                           
 25202                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25203                           
 25204                           ; BSR set to: 0
 25205                           ;incstack = 0
 25206  00561A  0E00               	movlw	0
 25207  00561C  0101               	movlb	1	; () banked
 25208  00561E  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25209                           
 25210                           ; BSR set to: 1
 25211                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25212  005620  0E00               	movlw	0
 25213  005622  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25214  005624  0E74               	movlw	116
 25215  005626  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25216  005628  0E00               	movlw	0
 25217  00562A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25218  00562C  0E00               	movlw	0
 25219  00562E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25220  005630  0E00               	movlw	0
 25221  005632  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25222  005634  0E00               	movlw	0
 25223  005636  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25224  005638  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25225                           
 25226                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25227  00563C  9260               	bcf	3936,1,c	;volatile
 25228                           
 25229                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25230  00563E  9464               	bcf	3940,2,c	;volatile
 25231                           
 25232                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25233  005640  D001               	goto	i2l2024
 25234  005642                     
 25235                           ;usb_device.c: 1977: {
 25236                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25237  005642  9465               	bcf	3941,2,c	;volatile
 25238  005644                     i2l2024:
 25239  005644  A465               	btfss	3941,2,c	;volatile
 25240  005646  0012               	return	
 25241  005648  D7FC               	goto	i2l2025
 25242  00564A                     __end_of_USBWakeFromSuspend:
 25243                           	opt stack 0
 25244                           pclatu	equ	0xFFB
 25245                           pclath	equ	0xFFA
 25246                           tblptru	equ	0xFF8
 25247                           tblptrh	equ	0xFF7
 25248                           tblptrl	equ	0xFF6
 25249                           tablat	equ	0xFF5
 25250                           prodh	equ	0xFF4
 25251                           prodl	equ	0xFF3
 25252                           intcon	equ	0xFF2
 25253                           intcon2	equ	0xFF1
 25254                           intcon3	equ	0xFF0
 25255                           indf0	equ	0xFEF
 25256                           postinc0	equ	0xFEE
 25257                           fsr0h	equ	0xFEA
 25258                           fsr0l	equ	0xFE9
 25259                           wreg	equ	0xFE8
 25260                           indf1	equ	0xFE7
 25261                           postdec1	equ	0xFE5
 25262                           fsr1h	equ	0xFE2
 25263                           fsr1l	equ	0xFE1
 25264                           indf2	equ	0xFDF
 25265                           postinc2	equ	0xFDE
 25266                           postdec2	equ	0xFDD
 25267                           plusw2	equ	0xFDB
 25268                           fsr2h	equ	0xFDA
 25269                           fsr2l	equ	0xFD9
 25270                           status	equ	0xFD8
 25271                           
 25272 ;; *************** function _USBSuspend *****************
 25273 ;; Defined at:
 25274 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 25275 ;; Parameters:    Size  Location     Type
 25276 ;;		None
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;		None
 25279 ;; Return value:  Size  Location     Type
 25280 ;;                  1    wreg      void 
 25281 ;; Registers used:
 25282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25283 ;; Tracked objects:
 25284 ;;		On entry : 0/0
 25285 ;;		On exit  : 0/0
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25288 ;;      Params:         0       0       0       0       0       0       0       0       0
 25289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25291 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25292 ;;Total ram usage:        0 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:    5
 25295 ;; This function calls:
 25296 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25297 ;; This function is called by:
 25298 ;;		_USBDeviceTasks
 25299 ;; This function uses a non-reentrant model
 25300 ;;
 25301                           
 25302                           	psect	text111
 25303  00575C                     __ptext111:
 25304                           	opt stack 0
 25305  00575C                     _USBSuspend:
 25306                           	opt stack 14
 25307                           
 25308                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 25309                           
 25310                           ;incstack = 0
 25311  00575C  8464               	bsf	3940,2,c	;volatile
 25312                           
 25313                           ;usb_device.c: 1915: (UIR &= 0xEF);
 25314  00575E  9865               	bcf	3941,4,c	;volatile
 25315                           
 25316                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 25317  005760  8260               	bsf	3936,1,c	;volatile
 25318                           
 25319                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25320  005762  0E01               	movlw	1
 25321  005764  0101               	movlb	1	; () banked
 25322  005766  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25323                           
 25324                           ; BSR set to: 1
 25325                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25326  005768  0E00               	movlw	0
 25327  00576A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25328  00576C  0E75               	movlw	117
 25329  00576E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25330  005770  0E00               	movlw	0
 25331  005772  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25332  005774  0E00               	movlw	0
 25333  005776  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25334  005778  0E00               	movlw	0
 25335  00577A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25336  00577C  0E00               	movlw	0
 25337  00577E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25338  005780  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25339  005784  0012               	return		;funcret
 25340  005786                     __end_of_USBSuspend:
 25341                           	opt stack 0
 25342                           pclatu	equ	0xFFB
 25343                           pclath	equ	0xFFA
 25344                           tblptru	equ	0xFF8
 25345                           tblptrh	equ	0xFF7
 25346                           tblptrl	equ	0xFF6
 25347                           tablat	equ	0xFF5
 25348                           prodh	equ	0xFF4
 25349                           prodl	equ	0xFF3
 25350                           intcon	equ	0xFF2
 25351                           intcon2	equ	0xFF1
 25352                           intcon3	equ	0xFF0
 25353                           indf0	equ	0xFEF
 25354                           postinc0	equ	0xFEE
 25355                           fsr0h	equ	0xFEA
 25356                           fsr0l	equ	0xFE9
 25357                           wreg	equ	0xFE8
 25358                           indf1	equ	0xFE7
 25359                           postdec1	equ	0xFE5
 25360                           fsr1h	equ	0xFE2
 25361                           fsr1l	equ	0xFE1
 25362                           indf2	equ	0xFDF
 25363                           postinc2	equ	0xFDE
 25364                           postdec2	equ	0xFDD
 25365                           plusw2	equ	0xFDB
 25366                           fsr2h	equ	0xFDA
 25367                           fsr2l	equ	0xFD9
 25368                           status	equ	0xFD8
 25369                           
 25370 ;; *************** function _USBStallHandler *****************
 25371 ;; Defined at:
 25372 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25373 ;; Parameters:    Size  Location     Type
 25374 ;;		None
 25375 ;; Auto vars:     Size  Location     Type
 25376 ;;		None
 25377 ;; Return value:  Size  Location     Type
 25378 ;;                  1    wreg      void 
 25379 ;; Registers used:
 25380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25381 ;; Tracked objects:
 25382 ;;		On entry : 0/0
 25383 ;;		On exit  : 0/0
 25384 ;;		Unchanged: 0/0
 25385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25386 ;;      Params:         0       0       0       0       0       0       0       0       0
 25387 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25388 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25389 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25390 ;;Total ram usage:        1 bytes
 25391 ;; Hardware stack levels used:    1
 25392 ;; This function calls:
 25393 ;;		Nothing
 25394 ;; This function is called by:
 25395 ;;		_USBDeviceTasks
 25396 ;; This function uses a non-reentrant model
 25397 ;;
 25398                           
 25399                           	psect	text112
 25400  0052A0                     __ptext112:
 25401                           	opt stack 0
 25402  0052A0                     _USBStallHandler:
 25403                           	opt stack 19
 25404                           
 25405                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25406                           
 25407                           ;incstack = 0
 25408  0052A0  A06A               	btfss	3946,0,c	;volatile
 25409  0052A2  D01D               	goto	i2l2016
 25410                           
 25411                           ;usb_device.c: 1859: {
 25412                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25413  0052A4  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25414  0052A8  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25415  0052AC  0E80               	movlw	128
 25416  0052AE  18DE               	xorwf	postinc2,w,c
 25417  0052B0  A4D8               	btfss	status,2,c
 25418  0052B2  D014               	goto	i2l2017
 25419  0052B4  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25420  0052B8  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25421  0052BC  0E84               	movlw	132
 25422  0052BE  18DE               	xorwf	postinc2,w,c
 25423  0052C0  A4D8               	btfss	status,2,c
 25424  0052C2  D00C               	goto	i2l2017
 25425                           
 25426                           ;usb_device.c: 1862: {
 25427                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25428  0052C4  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25429  0052C8  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25430  0052CC  0E0C               	movlw	12
 25431  0052CE  6EDF               	movwf	indf2,c
 25432                           
 25433                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25434  0052D0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25435  0052D4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25436  0052D8  0E00               	movlw	0
 25437  0052DA  8EDB               	bsf	plusw2,7,c
 25438  0052DC                     i2l2017:
 25439                           
 25440                           ;usb_device.c: 1866: }
 25441                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25442  0052DC  906A               	bcf	3946,0,c	;volatile
 25443  0052DE                     i2l2016:
 25444                           
 25445                           ;usb_device.c: 1868: }
 25446                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25447  0052DE  9A65               	bcf	3941,5,c	;volatile
 25448  0052E0  0012               	return		;funcret
 25449  0052E2                     __end_of_USBStallHandler:
 25450                           	opt stack 0
 25451                           pclatu	equ	0xFFB
 25452                           pclath	equ	0xFFA
 25453                           tblptru	equ	0xFF8
 25454                           tblptrh	equ	0xFF7
 25455                           tblptrl	equ	0xFF6
 25456                           tablat	equ	0xFF5
 25457                           prodh	equ	0xFF4
 25458                           prodl	equ	0xFF3
 25459                           intcon	equ	0xFF2
 25460                           intcon2	equ	0xFF1
 25461                           intcon3	equ	0xFF0
 25462                           indf0	equ	0xFEF
 25463                           postinc0	equ	0xFEE
 25464                           fsr0h	equ	0xFEA
 25465                           fsr0l	equ	0xFE9
 25466                           wreg	equ	0xFE8
 25467                           indf1	equ	0xFE7
 25468                           postdec1	equ	0xFE5
 25469                           fsr1h	equ	0xFE2
 25470                           fsr1l	equ	0xFE1
 25471                           indf2	equ	0xFDF
 25472                           postinc2	equ	0xFDE
 25473                           postdec2	equ	0xFDD
 25474                           plusw2	equ	0xFDB
 25475                           fsr2h	equ	0xFDA
 25476                           fsr2l	equ	0xFD9
 25477                           status	equ	0xFD8
 25478                           
 25479 ;; *************** function _USBCtrlEPService *****************
 25480 ;; Defined at:
 25481 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25482 ;; Parameters:    Size  Location     Type
 25483 ;;		None
 25484 ;; Auto vars:     Size  Location     Type
 25485 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25486 ;; Return value:  Size  Location     Type
 25487 ;;                  1    wreg      void 
 25488 ;; Registers used:
 25489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25490 ;; Tracked objects:
 25491 ;;		On entry : 0/0
 25492 ;;		On exit  : 0/0
 25493 ;;		Unchanged: 0/0
 25494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25495 ;;      Params:         0       0       0       0       0       0       0       0       0
 25496 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25497 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25498 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25499 ;;Total ram usage:        3 bytes
 25500 ;; Hardware stack levels used:    1
 25501 ;; Hardware stack levels required when called:    8
 25502 ;; This function calls:
 25503 ;;		_USBCtrlTrfInHandler
 25504 ;;		_USBCtrlTrfOutHandler
 25505 ;;		_USBCtrlTrfSetupHandler
 25506 ;; This function is called by:
 25507 ;;		_USBDeviceTasks
 25508 ;; This function uses a non-reentrant model
 25509 ;;
 25510                           
 25511                           	psect	text113
 25512  0038DE                     __ptext113:
 25513                           	opt stack 0
 25514  0038DE                     _USBCtrlEPService:
 25515                           	opt stack 11
 25516                           
 25517                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25518                           
 25519                           ;incstack = 0
 25520  0038DE  0E2D               	movlw	45
 25521  0038E0  6E46               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25522                           
 25523                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25524  0038E2  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25525  0038E6  0EFD               	movlw	253
 25526  0038E8  161C               	andwf	??_USBCtrlEPService,f,c
 25527  0038EA  A4D8               	btfss	status,2,c
 25528  0038EC  D057               	goto	i2l2030
 25529                           
 25530                           ;usb_device.c: 2013: {
 25531                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25532  0038EE  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25533  0038F2  90D8               	bcf	status,0,c
 25534  0038F4  321C               	rrcf	??_USBCtrlEPService,f,c
 25535  0038F6  0E3F               	movlw	63
 25536  0038F8  161C               	andwf	??_USBCtrlEPService,f,c
 25537  0038FA  501C               	movf	??_USBCtrlEPService,w,c
 25538  0038FC  0D04               	mullw	4
 25539  0038FE  0E00               	movlw	0
 25540  003900  24F3               	addwf	prodl,w,c
 25541  003902  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 25542  003904  0E04               	movlw	4
 25543  003906  20F4               	addwfc	prodh,w,c
 25544  003908  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25545                           
 25546                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25547  00390A  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25548  00390E  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25549                           
 25550                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25551  003912  0E04               	movlw	4
 25552  003914  1A35               	xorwf	_pBDTEntryEP0OutNext,f,c
 25553                           
 25554                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25555  003916  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25556  00391A  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25557  00391E  30DF               	rrcf	indf2,w,c
 25558  003920  32E8               	rrcf	wreg,f,c
 25559  003922  0B0F               	andlw	15
 25560  003924  0A0D               	xorlw	13
 25561  003926  A4D8               	btfss	status,2,c
 25562  003928  D036               	goto	i2l2031
 25563                           
 25564                           ;usb_device.c: 2025: {
 25565                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25566                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25567  00392A  0E00               	movlw	0
 25568  00392C  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25569  00392E                     i2l11286:
 25570  00392E  0E07               	movlw	7
 25571  003930  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25572  003932  D001               	goto	i2l2032
 25573  003934  D023               	goto	i2u992_40
 25574  003936                     i2l2032:
 25575                           
 25576                           ;usb_device.c: 2033: {
 25577                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25578  003936  EE20 F002          	lfsr	2,2
 25579  00393A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25580  00393C  26D9               	addwf	fsr2l,f,c
 25581  00393E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25582  003940  22DA               	addwfc	fsr2h,f,c
 25583  003942  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25584  003946  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25585  00394A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25586  00394E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25587  003952  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25588  003954  0D01               	mullw	1
 25589  003956  0E30               	movlw	48
 25590  003958  24F3               	addwf	prodl,w,c
 25591  00395A  6EE1               	movwf	fsr1l,c
 25592  00395C  0E04               	movlw	4
 25593  00395E  20F4               	addwfc	prodh,w,c
 25594  003960  6EE2               	movwf	fsr1h,c
 25595  003962  CFDF FFE7          	movff	indf2,indf1
 25596                           
 25597                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25598  003966  EE20 F002          	lfsr	2,2
 25599  00396A  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25600  00396C  26D9               	addwf	fsr2l,f,c
 25601  00396E  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25602  003970  22DA               	addwfc	fsr2h,f,c
 25603  003972  2ADE               	incf	postinc2,f,c
 25604  003974  0E00               	movlw	0
 25605  003976  22DD               	addwfc	postdec2,f,c
 25606  003978  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25607  00397A  D7D9               	goto	i2l11286
 25608  00397C                     i2u992_40:
 25609                           
 25610                           ;usb_device.c: 2036: }
 25611                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25612  00397C  EE20 F002          	lfsr	2,2
 25613  003980  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25614  003982  26D9               	addwf	fsr2l,f,c
 25615  003984  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25616  003986  22DA               	addwfc	fsr2h,f,c
 25617  003988  0E30               	movlw	48
 25618  00398A  6EDE               	movwf	postinc2,c
 25619  00398C  0E04               	movlw	4
 25620  00398E  6EDD               	movwf	postdec2,c
 25621                           
 25622                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25623  003990  ECC3  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 25624                           
 25625                           ;usb_device.c: 2041: }
 25626  003994  0012               	return	
 25627  003996                     i2l2031:
 25628                           
 25629                           ;usb_device.c: 2042: else
 25630                           ;usb_device.c: 2043: {
 25631                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25632  003996  ECEC  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 25633                           
 25634                           ;usb_device.c: 2046: }
 25635                           ;usb_device.c: 2047: }
 25636  00399A  0012               	return	
 25637  00399C                     i2l2030:
 25638                           
 25639                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25640  00399C  5059               	movf	_USTATcopy,w,c	;volatile
 25641  00399E  0BFD               	andlw	253
 25642  0039A0  0A04               	xorlw	4
 25643  0039A2  A4D8               	btfss	status,2,c
 25644  0039A4  0012               	return	
 25645                           
 25646                           ;usb_device.c: 2049: {
 25647                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25648  0039A6  EC4B  F01A         	call	_USBCtrlTrfInHandler	;wreg free
 25649  0039AA  0012               	return	
 25650  0039AC                     __end_of_USBCtrlEPService:
 25651                           	opt stack 0
 25652                           pclatu	equ	0xFFB
 25653                           pclath	equ	0xFFA
 25654                           tblptru	equ	0xFF8
 25655                           tblptrh	equ	0xFF7
 25656                           tblptrl	equ	0xFF6
 25657                           tablat	equ	0xFF5
 25658                           prodh	equ	0xFF4
 25659                           prodl	equ	0xFF3
 25660                           intcon	equ	0xFF2
 25661                           intcon2	equ	0xFF1
 25662                           intcon3	equ	0xFF0
 25663                           indf0	equ	0xFEF
 25664                           postinc0	equ	0xFEE
 25665                           fsr0h	equ	0xFEA
 25666                           fsr0l	equ	0xFE9
 25667                           wreg	equ	0xFE8
 25668                           indf1	equ	0xFE7
 25669                           postdec1	equ	0xFE5
 25670                           fsr1h	equ	0xFE2
 25671                           fsr1l	equ	0xFE1
 25672                           indf2	equ	0xFDF
 25673                           postinc2	equ	0xFDE
 25674                           postdec2	equ	0xFDD
 25675                           plusw2	equ	0xFDB
 25676                           fsr2h	equ	0xFDA
 25677                           fsr2l	equ	0xFD9
 25678                           status	equ	0xFD8
 25679                           
 25680 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25681 ;; Defined at:
 25682 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25683 ;; Parameters:    Size  Location     Type
 25684 ;;		None
 25685 ;; Auto vars:     Size  Location     Type
 25686 ;;		None
 25687 ;; Return value:  Size  Location     Type
 25688 ;;                  1    wreg      void 
 25689 ;; Registers used:
 25690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25691 ;; Tracked objects:
 25692 ;;		On entry : 0/0
 25693 ;;		On exit  : 0/0
 25694 ;;		Unchanged: 0/0
 25695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25696 ;;      Params:         0       0       0       0       0       0       0       0       0
 25697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25700 ;;Total ram usage:        0 bytes
 25701 ;; Hardware stack levels used:    1
 25702 ;; Hardware stack levels required when called:    7
 25703 ;; This function calls:
 25704 ;;		_USBCheckStdRequest
 25705 ;;		_USBCtrlEPServiceComplete
 25706 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25707 ;; This function is called by:
 25708 ;;		_USBCtrlEPService
 25709 ;; This function uses a non-reentrant model
 25710 ;;
 25711                           
 25712                           	psect	text114
 25713  004786                     __ptext114:
 25714                           	opt stack 0
 25715  004786                     _USBCtrlTrfSetupHandler:
 25716                           	opt stack 11
 25717                           
 25718                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25719                           
 25720                           ;incstack = 0
 25721  004786  0E00               	movlw	0
 25722  004788  6E4B               	movwf	_shortPacketStatus,c	;volatile
 25723                           
 25724                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25725  00478A  0E00               	movlw	0
 25726  00478C  6E45               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25727                           
 25728                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25729  00478E  0E00               	movlw	0
 25730  004790  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25731                           
 25732                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25733  004792  0E00               	movlw	0
 25734  004794  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25735                           
 25736                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25737  004796  0E00               	movlw	0
 25738  004798  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25739                           
 25740                           ;usb_device.c: 2107: controlTransferState = 0;
 25741  00479A  0E00               	movlw	0
 25742  00479C  6E4A               	movwf	_controlTransferState,c	;volatile
 25743                           
 25744                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25745  00479E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25746  0047A2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25747  0047A6  0E7F               	movlw	127
 25748  0047A8  16DF               	andwf	indf2,f,c
 25749                           
 25750                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25751  0047AA  0E04               	movlw	4
 25752  0047AC  0100               	movlb	0	; () banked
 25753  0047AE  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25757  0047B0  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25758  0047B4  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25759  0047B8  0E7F               	movlw	127
 25760  0047BA  16DF               	andwf	indf2,f,c
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25764  0047BC  0E04               	movlw	4
 25765  0047BE  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25766                           
 25767                           ; BSR set to: 0
 25768                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25769  0047C0  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25770  0047C4  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25771  0047C8  0E7F               	movlw	127
 25772  0047CA  16DF               	andwf	indf2,f,c
 25773                           
 25774                           ; BSR set to: 0
 25775                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25776  0047CC  0E00               	movlw	0
 25777  0047CE  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25778                           
 25779                           ; BSR set to: 0
 25780                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25781  0047D0  0E00               	movlw	0
 25782  0047D2  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25783  0047D4  0E00               	movlw	0
 25784  0047D6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25788  0047D8  0E00               	movlw	0
 25789  0047DA  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25790                           
 25791                           ; BSR set to: 0
 25792                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25793  0047DC  0E00               	movlw	0
 25794  0047DE  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25795  0047E0  0E00               	movlw	0
 25796  0047E2  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25797                           
 25798                           ; BSR set to: 0
 25799                           ;usb_device.c: 2131: USBCheckStdRequest();
 25800  0047E4  EC69  F019         	call	_USBCheckStdRequest	;wreg free
 25801                           
 25802                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25803  0047E8  0E00               	movlw	0
 25804  0047EA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25805  0047EC  0E03               	movlw	3
 25806  0047EE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25807  0047F0  0E00               	movlw	0
 25808  0047F2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25809  0047F4  0E00               	movlw	0
 25810  0047F6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25811  0047F8  0E00               	movlw	0
 25812  0047FA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25813  0047FC  0E00               	movlw	0
 25814  0047FE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25815  004800  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25816                           
 25817                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25818  004804  EC07  F018         	call	_USBCtrlEPServiceComplete	;wreg free
 25819  004808  0012               	return		;funcret
 25820  00480A                     __end_of_USBCtrlTrfSetupHandler:
 25821                           	opt stack 0
 25822                           pclatu	equ	0xFFB
 25823                           pclath	equ	0xFFA
 25824                           tblptru	equ	0xFF8
 25825                           tblptrh	equ	0xFF7
 25826                           tblptrl	equ	0xFF6
 25827                           tablat	equ	0xFF5
 25828                           prodh	equ	0xFF4
 25829                           prodl	equ	0xFF3
 25830                           intcon	equ	0xFF2
 25831                           intcon2	equ	0xFF1
 25832                           intcon3	equ	0xFF0
 25833                           indf0	equ	0xFEF
 25834                           postinc0	equ	0xFEE
 25835                           fsr0h	equ	0xFEA
 25836                           fsr0l	equ	0xFE9
 25837                           wreg	equ	0xFE8
 25838                           indf1	equ	0xFE7
 25839                           postdec1	equ	0xFE5
 25840                           fsr1h	equ	0xFE2
 25841                           fsr1l	equ	0xFE1
 25842                           indf2	equ	0xFDF
 25843                           postinc2	equ	0xFDE
 25844                           postdec2	equ	0xFDD
 25845                           plusw2	equ	0xFDB
 25846                           fsr2h	equ	0xFDA
 25847                           fsr2l	equ	0xFD9
 25848                           status	equ	0xFD8
 25849                           
 25850 ;; *************** function _USBCtrlEPServiceComplete *****************
 25851 ;; Defined at:
 25852 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25853 ;; Parameters:    Size  Location     Type
 25854 ;;		None
 25855 ;; Auto vars:     Size  Location     Type
 25856 ;;		None
 25857 ;; Return value:  Size  Location     Type
 25858 ;;                  1    wreg      void 
 25859 ;; Registers used:
 25860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25861 ;; Tracked objects:
 25862 ;;		On entry : 0/0
 25863 ;;		On exit  : 0/0
 25864 ;;		Unchanged: 0/0
 25865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25866 ;;      Params:         0       0       0       0       0       0       0       0       0
 25867 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25868 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25869 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25870 ;;Total ram usage:        0 bytes
 25871 ;; Hardware stack levels used:    1
 25872 ;; Hardware stack levels required when called:    2
 25873 ;; This function calls:
 25874 ;;		_USBCtrlEPAllowDataStage
 25875 ;;		_USBCtrlEPAllowStatusStage
 25876 ;; This function is called by:
 25877 ;;		_USBCtrlTrfSetupHandler
 25878 ;; This function uses a non-reentrant model
 25879 ;;
 25880                           
 25881                           	psect	text115
 25882  00300E                     __ptext115:
 25883                           	opt stack 0
 25884  00300E                     _USBCtrlEPServiceComplete:
 25885                           	opt stack 15
 25886                           
 25887                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25888                           
 25889                           ;incstack = 0
 25890  00300E  9860               	bcf	3936,4,c	;volatile
 25891                           
 25892                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25893  003010  0100               	movlb	0	; () banked
 25894  003012  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25895  003014  D038               	goto	i2l1940
 25896                           
 25897                           ; BSR set to: 0
 25898                           ;usb_device.c: 1295: {
 25899                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25900  003016  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25901  003018  D00B               	goto	i2l1941
 25902                           
 25903                           ; BSR set to: 0
 25904                           ;usb_device.c: 1297: {
 25905                           ;usb_device.c: 1298: controlTransferState = 2;
 25906  00301A  0E02               	movlw	2
 25907  00301C  6E4A               	movwf	_controlTransferState,c	;volatile
 25908                           
 25909                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25910  00301E  5041               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25911  003020  B4D8               	btfsc	status,2,c
 25912                           
 25913                           ; BSR set to: 0
 25914                           ;usb_device.c: 1310: {
 25915                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25916  003022  EC83  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25917                           
 25918                           ;usb_device.c: 1312: }
 25919                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25920  003026  0E00               	movlw	0
 25921  003028  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25922                           
 25923                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25924  00302A  0E00               	movlw	0
 25925  00302C  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25926                           
 25927                           ;usb_device.c: 1318: }
 25928  00302E  0012               	return	
 25929  003030                     i2l1941:
 25930                           
 25931                           ;usb_device.c: 1319: else
 25932                           ;usb_device.c: 1320: {
 25933                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25934  003030  EE20 F001          	lfsr	2,1
 25935  003034  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25936  003036  26D9               	addwf	fsr2l,f,c
 25937  003038  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25938  00303A  22DA               	addwfc	fsr2h,f,c
 25939  00303C  0E08               	movlw	8
 25940  00303E  6EDF               	movwf	indf2,c
 25941                           
 25942                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25943  003040  EE20 F002          	lfsr	2,2
 25944  003044  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25945  003046  26D9               	addwf	fsr2l,f,c
 25946  003048  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25947  00304A  22DA               	addwfc	fsr2h,f,c
 25948  00304C  0E30               	movlw	48
 25949  00304E  6EDE               	movwf	postinc2,c
 25950  003050  0E04               	movlw	4
 25951  003052  6EDD               	movwf	postdec2,c
 25952                           
 25953                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25954  003054  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25955  003058  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25956  00305C  0E0C               	movlw	12
 25957  00305E  6EDF               	movwf	indf2,c
 25958                           
 25959                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25960  003060  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25961  003064  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25962  003068  0E00               	movlw	0
 25963  00306A  8EDB               	bsf	plusw2,7,c
 25964                           
 25965                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25966  00306C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25967  003070  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25968  003074  0E04               	movlw	4
 25969  003076  6EDF               	movwf	indf2,c
 25970                           
 25971                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25972  003078  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25973  00307C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25974  003080  0E00               	movlw	0
 25975  003082  8EDB               	bsf	plusw2,7,c
 25976                           
 25977                           ;usb_device.c: 1331: }
 25978                           ;usb_device.c: 1332: }
 25979  003084  0012               	return	
 25980  003086                     i2l1940:
 25981                           
 25982                           ; BSR set to: 0
 25983                           ;usb_device.c: 1333: else
 25984                           ;usb_device.c: 1334: {
 25985                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25986  003086  0104               	movlb	4	; () banked
 25987  003088  AF30               	btfss	48,7,b	;volatile
 25988  00308A  D010               	goto	i2l1945
 25989                           
 25990                           ; BSR set to: 4
 25991                           ;usb_device.c: 1336: {
 25992                           ;usb_device.c: 1337: controlTransferState = 1;
 25993  00308C  0E01               	movlw	1
 25994  00308E  6E4A               	movwf	_controlTransferState,c	;volatile
 25995                           
 25996                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25997  003090  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25998  003092  B4D8               	btfsc	status,2,c
 25999                           
 26000                           ; BSR set to: 4
 26001                           ;usb_device.c: 1352: {
 26002                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 26003  003094  EC83  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 26004                           
 26005                           ;usb_device.c: 1354: }
 26006                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 26007  003098  0E00               	movlw	0
 26008  00309A  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26009                           
 26010                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 26011  00309C  0E00               	movlw	0
 26012  00309E  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26013                           
 26014                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 26015  0030A0  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26016  0030A2  A4D8               	btfss	status,2,c
 26017  0030A4  0012               	return	
 26018                           
 26019                           ;usb_device.c: 1379: {
 26020                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 26021  0030A6  EC9F  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26022                           
 26023                           ;usb_device.c: 1381: }
 26024                           ;usb_device.c: 1382: }
 26025  0030AA  0012               	return	
 26026  0030AC                     i2l1945:
 26027                           
 26028                           ;usb_device.c: 1383: else
 26029                           ;usb_device.c: 1384: {
 26030                           ;usb_device.c: 1395: controlTransferState = 2;
 26031  0030AC  0E02               	movlw	2
 26032  0030AE  6E4A               	movwf	_controlTransferState,c	;volatile
 26033                           
 26034                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 26035  0030B0  EE20 F001          	lfsr	2,1
 26036  0030B4  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26037  0030B6  26D9               	addwf	fsr2l,f,c
 26038  0030B8  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26039  0030BA  22DA               	addwfc	fsr2h,f,c
 26040  0030BC  0E08               	movlw	8
 26041  0030BE  6EDF               	movwf	indf2,c
 26042                           
 26043                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26044  0030C0  EE20 F002          	lfsr	2,2
 26045  0030C4  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26046  0030C6  26D9               	addwf	fsr2l,f,c
 26047  0030C8  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26048  0030CA  22DA               	addwfc	fsr2h,f,c
 26049  0030CC  0E30               	movlw	48
 26050  0030CE  6EDE               	movwf	postinc2,c
 26051  0030D0  0E04               	movlw	4
 26052  0030D2  6EDD               	movwf	postdec2,c
 26053                           
 26054                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26055  0030D4  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26056  0030D8  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26057  0030DC  0E04               	movlw	4
 26058  0030DE  6EDF               	movwf	indf2,c
 26059                           
 26060                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26061  0030E0  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26062  0030E4  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26063  0030E8  0E00               	movlw	0
 26064  0030EA  8EDB               	bsf	plusw2,7,c
 26065                           
 26066                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26067  0030EC  0E00               	movlw	0
 26068  0030EE  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26069                           
 26070                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26071  0030F0  0E00               	movlw	0
 26072  0030F2  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26073                           
 26074                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26075  0030F4  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26076  0030F6  A4D8               	btfss	status,2,c
 26077  0030F8  0012               	return	
 26078                           
 26079                           ;usb_device.c: 1407: {
 26080                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26081  0030FA  EC9F  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26082  0030FE  0012               	return	
 26083  003100                     __end_of_USBCtrlEPServiceComplete:
 26084                           	opt stack 0
 26085                           pclatu	equ	0xFFB
 26086                           pclath	equ	0xFFA
 26087                           tblptru	equ	0xFF8
 26088                           tblptrh	equ	0xFF7
 26089                           tblptrl	equ	0xFF6
 26090                           tablat	equ	0xFF5
 26091                           prodh	equ	0xFF4
 26092                           prodl	equ	0xFF3
 26093                           intcon	equ	0xFF2
 26094                           intcon2	equ	0xFF1
 26095                           intcon3	equ	0xFF0
 26096                           indf0	equ	0xFEF
 26097                           postinc0	equ	0xFEE
 26098                           fsr0h	equ	0xFEA
 26099                           fsr0l	equ	0xFE9
 26100                           wreg	equ	0xFE8
 26101                           indf1	equ	0xFE7
 26102                           postdec1	equ	0xFE5
 26103                           fsr1h	equ	0xFE2
 26104                           fsr1l	equ	0xFE1
 26105                           indf2	equ	0xFDF
 26106                           postinc2	equ	0xFDE
 26107                           postdec2	equ	0xFDD
 26108                           plusw2	equ	0xFDB
 26109                           fsr2h	equ	0xFDA
 26110                           fsr2l	equ	0xFD9
 26111                           status	equ	0xFD8
 26112                           
 26113 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26114 ;; Defined at:
 26115 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26116 ;; Parameters:    Size  Location     Type
 26117 ;;		None
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;		None
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  1    wreg      void 
 26122 ;; Registers used:
 26123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26132 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26133 ;;Total ram usage:        0 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:    1
 26136 ;; This function calls:
 26137 ;;		_USBCtrlTrfTxService
 26138 ;; This function is called by:
 26139 ;;		_USBCtrlEPServiceComplete
 26140 ;; This function uses a non-reentrant model
 26141 ;;
 26142                           
 26143                           	psect	text116
 26144  004306                     __ptext116:
 26145                           	opt stack 0
 26146  004306                     _USBCtrlEPAllowDataStage:
 26147                           	opt stack 15
 26148                           
 26149                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26150                           
 26151                           ;incstack = 0
 26152  004306  0E00               	movlw	0
 26153  004308  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26154                           
 26155                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26156  00430A  0E00               	movlw	0
 26157  00430C  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26158                           
 26159                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26160  00430E  0E02               	movlw	2
 26161  004310  184A               	xorwf	_controlTransferState,w,c	;volatile
 26162  004312  A4D8               	btfss	status,2,c
 26163  004314  D01F               	goto	i2l1929
 26164                           
 26165                           ;usb_device.c: 1179: {
 26166                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26167  004316  EE20 F001          	lfsr	2,1
 26168  00431A  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26169  00431C  26D9               	addwf	fsr2l,f,c
 26170  00431E  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26171  004320  22DA               	addwfc	fsr2h,f,c
 26172  004322  0E08               	movlw	8
 26173  004324  6EDF               	movwf	indf2,c
 26174                           
 26175                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26176  004326  EE20 F002          	lfsr	2,2
 26177  00432A  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26178  00432C  26D9               	addwf	fsr2l,f,c
 26179  00432E  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26180  004330  22DA               	addwfc	fsr2h,f,c
 26181  004332  0E38               	movlw	56
 26182  004334  6EDE               	movwf	postinc2,c
 26183  004336  0E04               	movlw	4
 26184  004338  6EDD               	movwf	postdec2,c
 26185                           
 26186                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26187  00433A  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26188  00433E  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26189  004342  0E48               	movlw	72
 26190  004344  6EDF               	movwf	indf2,c
 26191                           
 26192                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26193  004346  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26194  00434A  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26195  00434E  0E00               	movlw	0
 26196  004350  8EDB               	bsf	plusw2,7,c
 26197                           
 26198                           ;usb_device.c: 1185: }
 26199  004352  0012               	return	
 26200  004354                     i2l1929:
 26201                           
 26202                           ;usb_device.c: 1186: else
 26203                           ;usb_device.c: 1187: {
 26204                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26205  004354  0100               	movlb	0	; () banked
 26206  004356  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26207  004358  0104               	movlb	4	; () banked
 26208  00435A  5D36               	subwf	54,w,b	;volatile
 26209  00435C  0100               	movlb	0	; () banked
 26210  00435E  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26211  004360  0104               	movlb	4	; () banked
 26212  004362  5937               	subwfb	55,w,b	;volatile
 26213  004364  B0D8               	btfsc	status,0,c
 26214  004366  D004               	goto	i2l1931
 26215                           
 26216                           ; BSR set to: 4
 26217                           ;usb_device.c: 1191: {
 26218                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26219  004368  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 26220  00436C  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 26221  004370                     i2l1931:
 26222                           
 26223                           ; BSR set to: 4
 26224                           ;usb_device.c: 1193: }
 26225                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26226                           
 26227                           ; BSR set to: 4
 26228  004370  EC05  F01C         	call	_USBCtrlTrfTxService	;wreg free
 26229                           
 26230                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26231  004374  0100               	movlb	0	; () banked
 26232  004376  EE20 F002          	lfsr	2,2
 26233  00437A  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 26234  00437C  26D9               	addwf	fsr2l,f,c
 26235  00437E  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26236  004380  22DA               	addwfc	fsr2h,f,c
 26237  004382  0E38               	movlw	56
 26238  004384  6EDE               	movwf	postinc2,c
 26239  004386  0E04               	movlw	4
 26240  004388  6EDD               	movwf	postdec2,c
 26241                           
 26242                           ; BSR set to: 0
 26243                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26244  00438A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26245  00438E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26246  004392  0E48               	movlw	72
 26247  004394  6EDF               	movwf	indf2,c
 26248                           
 26249                           ; BSR set to: 0
 26250                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26251  004396  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26252  00439A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26253  00439E  0E00               	movlw	0
 26254  0043A0  8EDB               	bsf	plusw2,7,c
 26255  0043A2  0012               	return	
 26256  0043A4                     __end_of_USBCtrlEPAllowDataStage:
 26257                           	opt stack 0
 26258                           pclatu	equ	0xFFB
 26259                           pclath	equ	0xFFA
 26260                           tblptru	equ	0xFF8
 26261                           tblptrh	equ	0xFF7
 26262                           tblptrl	equ	0xFF6
 26263                           tablat	equ	0xFF5
 26264                           prodh	equ	0xFF4
 26265                           prodl	equ	0xFF3
 26266                           intcon	equ	0xFF2
 26267                           intcon2	equ	0xFF1
 26268                           intcon3	equ	0xFF0
 26269                           indf0	equ	0xFEF
 26270                           postinc0	equ	0xFEE
 26271                           fsr0h	equ	0xFEA
 26272                           fsr0l	equ	0xFE9
 26273                           wreg	equ	0xFE8
 26274                           indf1	equ	0xFE7
 26275                           postdec1	equ	0xFE5
 26276                           fsr1h	equ	0xFE2
 26277                           fsr1l	equ	0xFE1
 26278                           indf2	equ	0xFDF
 26279                           postinc2	equ	0xFDE
 26280                           postdec2	equ	0xFDD
 26281                           plusw2	equ	0xFDB
 26282                           fsr2h	equ	0xFDA
 26283                           fsr2l	equ	0xFD9
 26284                           status	equ	0xFD8
 26285                           
 26286 ;; *************** function _USBCheckStdRequest *****************
 26287 ;; Defined at:
 26288 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 26289 ;; Parameters:    Size  Location     Type
 26290 ;;		None
 26291 ;; Auto vars:     Size  Location     Type
 26292 ;;		None
 26293 ;; Return value:  Size  Location     Type
 26294 ;;                  1    wreg      void 
 26295 ;; Registers used:
 26296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26297 ;; Tracked objects:
 26298 ;;		On entry : 0/0
 26299 ;;		On exit  : 0/0
 26300 ;;		Unchanged: 0/0
 26301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26302 ;;      Params:         0       0       0       0       0       0       0       0       0
 26303 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26305 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26306 ;;Total ram usage:        0 bytes
 26307 ;; Hardware stack levels used:    1
 26308 ;; Hardware stack levels required when called:    6
 26309 ;; This function calls:
 26310 ;;		_USBStdFeatureReqHandler
 26311 ;;		_USBStdGetDscHandler
 26312 ;;		_USBStdGetStatusHandler
 26313 ;;		_USBStdSetCfgHandler
 26314 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26315 ;; This function is called by:
 26316 ;;		_USBCtrlTrfSetupHandler
 26317 ;; This function uses a non-reentrant model
 26318 ;;
 26319                           
 26320                           	psect	text117
 26321  0032D2                     __ptext117:
 26322                           	opt stack 0
 26323  0032D2                     _USBCheckStdRequest:
 26324                           	opt stack 11
 26325                           
 26326                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26327                           
 26328                           ;incstack = 0
 26329  0032D2  0104               	movlb	4	; () banked
 26330  0032D4  3930               	swapf	48,w,b	;volatile
 26331  0032D6  32E8               	rrcf	wreg,f,c
 26332  0032D8  0B03               	andlw	3
 26333  0032DA  0900               	iorlw	0
 26334  0032DC  A4D8               	btfss	status,2,c
 26335  0032DE  0012               	return	
 26336  0032E0  D047               	goto	i2l2066
 26337  0032E2                     i2l2067:
 26338                           
 26339                           ; BSR set to: 4
 26340                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26341  0032E2  0100               	movlb	0	; () banked
 26342  0032E4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26343                           
 26344                           ; BSR set to: 0
 26345                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26346  0032E6  0E08               	movlw	8
 26347  0032E8  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26348                           
 26349                           ;usb_device.c: 2327: break;
 26350  0032EA  0012               	return	
 26351  0032EC                     
 26352                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26353                           
 26354                           ; BSR set to: 0
 26355  0032EC  ECDB  F015         	call	_USBStdGetDscHandler	;wreg free
 26356                           
 26357                           ;usb_device.c: 2330: break;
 26358  0032F0  0012               	return	
 26359  0032F2                     
 26360                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26361  0032F2  ECDA  F019         	call	_USBStdSetCfgHandler	;wreg free
 26362                           
 26363                           ;usb_device.c: 2333: break;
 26364  0032F6  0012               	return	
 26365  0032F8                     
 26366                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26367  0032F8  0E5A               	movlw	low _USBActiveConfiguration
 26368  0032FA  0100               	movlb	0	; () banked
 26369  0032FC  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26370  0032FE  0E00               	movlw	high _USBActiveConfiguration
 26371  003300  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26372                           
 26373                           ; BSR set to: 0
 26374                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26375  003302  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26379  003304  0E01               	movlw	1
 26380  003306  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26381                           
 26382                           ; BSR set to: 0
 26383                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26384  003308  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26385                           
 26386                           ;usb_device.c: 2339: break;
 26387  00330A  0012               	return	
 26388  00330C                     
 26389                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26390                           
 26391                           ; BSR set to: 0
 26392  00330C  ECDC  F020         	call	_USBStdGetStatusHandler	;wreg free
 26393                           
 26394                           ;usb_device.c: 2342: break;
 26395  003310  0012               	return	
 26396  003312                     
 26397                           ;usb_device.c: 2344: case 3:
 26398                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26399  003312  EC3D  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 26400                           
 26401                           ;usb_device.c: 2346: break;
 26402  003316  0012               	return	
 26403  003318                     
 26404                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26405  003318  0104               	movlb	4	; () banked
 26406  00331A  5134               	movf	52,w,b	;volatile
 26407  00331C  0D01               	mullw	1
 26408  00331E  0E57               	movlw	low _USBAlternateInterface
 26409  003320  24F3               	addwf	prodl,w,c
 26410  003322  0100               	movlb	0	; () banked
 26411  003324  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26412  003326  0E00               	movlw	high _USBAlternateInterface
 26413  003328  20F4               	addwfc	prodh,w,c
 26414  00332A  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26415                           
 26416                           ; BSR set to: 0
 26417                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26418  00332C  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26419                           
 26420                           ; BSR set to: 0
 26421                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26422  00332E  0E01               	movlw	1
 26423  003330  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26424                           
 26425                           ; BSR set to: 0
 26426                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26427  003332  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26428                           
 26429                           ;usb_device.c: 2352: break;
 26430  003334  0012               	return	
 26431  003336                     i2l2076:
 26432                           
 26433                           ; BSR set to: 4
 26434                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26435  003336  0100               	movlb	0	; () banked
 26436  003338  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26437                           
 26438                           ; BSR set to: 0
 26439                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26440  00333A  0104               	movlb	4	; () banked
 26441  00333C  5134               	movf	52,w,b	;volatile
 26442  00333E  0D01               	mullw	1
 26443  003340  0E57               	movlw	low _USBAlternateInterface
 26444  003342  24F3               	addwf	prodl,w,c
 26445  003344  6ED9               	movwf	fsr2l,c
 26446  003346  0E00               	movlw	high _USBAlternateInterface
 26447  003348  20F4               	addwfc	prodh,w,c
 26448  00334A  6EDA               	movwf	fsr2h,c
 26449  00334C  C432 FFDF          	movff	1074,indf2	;volatile
 26450                           
 26451                           ;usb_device.c: 2356: break;
 26452  003350  0012               	return	
 26453  003352                     
 26454                           ; BSR set to: 4
 26455                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26456                           
 26457                           ; BSR set to: 4
 26458  003352  0E00               	movlw	0
 26459  003354  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26460  003356  0E02               	movlw	2
 26461  003358  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26462  00335A  0E00               	movlw	0
 26463  00335C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26464  00335E  0E00               	movlw	0
 26465  003360  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26466  003362  0E00               	movlw	0
 26467  003364  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26468  003366  0E00               	movlw	0
 26469  003368  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26470  00336A  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26471                           
 26472                           ;usb_device.c: 2363: }
 26473                           
 26474                           ;usb_device.c: 2362: break;
 26475                           
 26476                           ;usb_device.c: 2361: default:
 26477                           
 26478                           ;usb_device.c: 2360: case 12:
 26479                           
 26480                           ;usb_device.c: 2359: break;
 26481  00336E  0012               	return	
 26482  003370                     i2l2066:
 26483  003370  0104               	movlb	4	; () banked
 26484  003372  5131               	movf	49,w,b	;volatile
 26485                           
 26486                           ; Switch size 1, requested type "space"
 26487                           ; Number of cases is 11, Range of values is 0 to 12
 26488                           ; switch strategies available:
 26489                           ; Name         Instructions Cycles
 26490                           ; simple_byte           34    18 (average)
 26491                           ;	Chosen strategy is simple_byte
 26492  003374  0A00               	xorlw	0	; case 0
 26493  003376  B4D8               	btfsc	status,2,c
 26494  003378  D7C9               	goto	i2l2072
 26495  00337A  0A01               	xorlw	1	; case 1
 26496  00337C  B4D8               	btfsc	status,2,c
 26497  00337E  D7C9               	goto	i2l2073
 26498  003380  0A02               	xorlw	2	; case 3
 26499  003382  B4D8               	btfsc	status,2,c
 26500  003384  D7C6               	goto	i2l2073
 26501  003386  0A06               	xorlw	6	; case 5
 26502  003388  B4D8               	btfsc	status,2,c
 26503  00338A  D7AB               	goto	i2l2067
 26504  00338C  0A03               	xorlw	3	; case 6
 26505  00338E  B4D8               	btfsc	status,2,c
 26506  003390  D7AD               	goto	i2l2069
 26507  003392  0A01               	xorlw	1	; case 7
 26508  003394  B4D8               	btfsc	status,2,c
 26509  003396  D7DD               	goto	i2l2077
 26510  003398  0A0F               	xorlw	15	; case 8
 26511  00339A  B4D8               	btfsc	status,2,c
 26512  00339C  D7AD               	goto	i2l2071
 26513  00339E  0A01               	xorlw	1	; case 9
 26514  0033A0  B4D8               	btfsc	status,2,c
 26515  0033A2  D7A7               	goto	i2l2070
 26516  0033A4  0A03               	xorlw	3	; case 10
 26517  0033A6  B4D8               	btfsc	status,2,c
 26518  0033A8  D7B7               	goto	i2l2075
 26519  0033AA  0A01               	xorlw	1	; case 11
 26520  0033AC  B4D8               	btfsc	status,2,c
 26521  0033AE  D7C3               	goto	i2l2076
 26522  0033B0  0A07               	xorlw	7	; case 12
 26523  0033B2  0012               	return	
 26524  0033B4                     __end_of_USBCheckStdRequest:
 26525                           	opt stack 0
 26526                           pclatu	equ	0xFFB
 26527                           pclath	equ	0xFFA
 26528                           tblptru	equ	0xFF8
 26529                           tblptrh	equ	0xFF7
 26530                           tblptrl	equ	0xFF6
 26531                           tablat	equ	0xFF5
 26532                           prodh	equ	0xFF4
 26533                           prodl	equ	0xFF3
 26534                           intcon	equ	0xFF2
 26535                           intcon2	equ	0xFF1
 26536                           intcon3	equ	0xFF0
 26537                           indf0	equ	0xFEF
 26538                           postinc0	equ	0xFEE
 26539                           fsr0h	equ	0xFEA
 26540                           fsr0l	equ	0xFE9
 26541                           wreg	equ	0xFE8
 26542                           indf1	equ	0xFE7
 26543                           postdec1	equ	0xFE5
 26544                           fsr1h	equ	0xFE2
 26545                           fsr1l	equ	0xFE1
 26546                           indf2	equ	0xFDF
 26547                           postinc2	equ	0xFDE
 26548                           postdec2	equ	0xFDD
 26549                           plusw2	equ	0xFDB
 26550                           fsr2h	equ	0xFDA
 26551                           fsr2l	equ	0xFD9
 26552                           status	equ	0xFD8
 26553                           
 26554 ;; *************** function _USBStdSetCfgHandler *****************
 26555 ;; Defined at:
 26556 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26557 ;; Parameters:    Size  Location     Type
 26558 ;;		None
 26559 ;; Auto vars:     Size  Location     Type
 26560 ;;  i               1   21[COMRAM] unsigned char 
 26561 ;; Return value:  Size  Location     Type
 26562 ;;                  1    wreg      void 
 26563 ;; Registers used:
 26564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26565 ;; Tracked objects:
 26566 ;;		On entry : 0/0
 26567 ;;		On exit  : 0/0
 26568 ;;		Unchanged: 0/0
 26569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26570 ;;      Params:         0       0       0       0       0       0       0       0       0
 26571 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26573 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26574 ;;Total ram usage:        1 bytes
 26575 ;; Hardware stack levels used:    1
 26576 ;; Hardware stack levels required when called:    5
 26577 ;; This function calls:
 26578 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26579 ;;		i2_memset
 26580 ;; This function is called by:
 26581 ;;		_USBCheckStdRequest
 26582 ;; This function uses a non-reentrant model
 26583 ;;
 26584                           
 26585                           	psect	text118
 26586  0033B4                     __ptext118:
 26587                           	opt stack 0
 26588  0033B4                     _USBStdSetCfgHandler:
 26589                           	opt stack 11
 26590                           
 26591                           ;usb_device.c: 1631: uint8_t i;
 26592                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26593                           
 26594                           ;incstack = 0
 26595  0033B4  0100               	movlb	0	; () banked
 26596  0033B6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26597                           
 26598                           ; BSR set to: 0
 26599                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26600  0033B8  0E6B               	movlw	107
 26601  0033BA  6E01               	movwf	i2memset@p1,c
 26602  0033BC  0E0F               	movlw	15
 26603  0033BE  6E02               	movwf	i2memset@p1+1,c
 26604  0033C0  0E00               	movlw	0
 26605  0033C2  6E04               	movwf	i2memset@c+1,c
 26606  0033C4  0E00               	movlw	0
 26607  0033C6  6E03               	movwf	i2memset@c,c
 26608  0033C8  0E00               	movlw	0
 26609  0033CA  6E06               	movwf	i2memset@n+1,c
 26610  0033CC  0E02               	movlw	2
 26611  0033CE  6E05               	movwf	i2memset@n,c
 26612  0033D0  EC83  F02B         	call	i2_memset	;wreg free
 26613                           
 26614                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26615  0033D4  0E00               	movlw	0
 26616  0033D6  6E01               	movwf	i2memset@p1,c
 26617  0033D8  0E04               	movlw	4
 26618  0033DA  6E02               	movwf	i2memset@p1+1,c
 26619  0033DC  0E00               	movlw	0
 26620  0033DE  6E04               	movwf	i2memset@c+1,c
 26621  0033E0  0E00               	movlw	0
 26622  0033E2  6E03               	movwf	i2memset@c,c
 26623  0033E4  0E00               	movlw	0
 26624  0033E6  6E06               	movwf	i2memset@n+1,c
 26625  0033E8  0E30               	movlw	48
 26626  0033EA  6E05               	movwf	i2memset@n,c
 26627  0033EC  EC83  F02B         	call	i2_memset	;wreg free
 26628                           
 26629                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26630  0033F0  8C60               	bsf	3936,6,c	;volatile
 26631                           
 26632                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26633  0033F2  0E00               	movlw	0
 26634  0033F4  6E16               	movwf	USBStdSetCfgHandler@i,c
 26635  0033F6                     i2l8310:
 26636  0033F6  0E02               	movlw	2
 26637  0033F8  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26638  0033FA  D001               	goto	i2l1981
 26639  0033FC  D016               	goto	i2u608_40
 26640  0033FE                     i2l1981:
 26641                           
 26642                           ;usb_device.c: 1649: {
 26643                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26644  0033FE  5016               	movf	USBStdSetCfgHandler@i,w,c
 26645  003400  0D01               	mullw	1
 26646  003402  0ED3               	movlw	low _ep_data_in
 26647  003404  24F3               	addwf	prodl,w,c
 26648  003406  6ED9               	movwf	fsr2l,c
 26649  003408  0E00               	movlw	high _ep_data_in
 26650  00340A  20F4               	addwfc	prodh,w,c
 26651  00340C  6EDA               	movwf	fsr2h,c
 26652  00340E  0E00               	movlw	0
 26653  003410  6EDF               	movwf	indf2,c
 26654                           
 26655                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26656  003412  5016               	movf	USBStdSetCfgHandler@i,w,c
 26657  003414  0D01               	mullw	1
 26658  003416  0ED0               	movlw	low _ep_data_out
 26659  003418  24F3               	addwf	prodl,w,c
 26660  00341A  6ED9               	movwf	fsr2l,c
 26661  00341C  0E00               	movlw	high _ep_data_out
 26662  00341E  20F4               	addwfc	prodh,w,c
 26663  003420  6EDA               	movwf	fsr2h,c
 26664  003422  0E00               	movlw	0
 26665  003424  6EDF               	movwf	indf2,c
 26666  003426  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26667  003428  D7E6               	goto	i2l8310
 26668  00342A                     i2u608_40:
 26669                           
 26670                           ;usb_device.c: 1652: }
 26671                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26672  00342A  0E57               	movlw	low _USBAlternateInterface
 26673  00342C  6E01               	movwf	i2memset@p1,c
 26674  00342E  0E00               	movlw	high _USBAlternateInterface
 26675  003430  6E02               	movwf	i2memset@p1+1,c
 26676  003432  0E00               	movlw	0
 26677  003434  6E04               	movwf	i2memset@c+1,c
 26678  003436  0E00               	movlw	0
 26679  003438  6E03               	movwf	i2memset@c,c
 26680  00343A  0E00               	movlw	0
 26681  00343C  6E06               	movwf	i2memset@n+1,c
 26682  00343E  0E02               	movlw	2
 26683  003440  6E05               	movwf	i2memset@n,c
 26684  003442  EC83  F02B         	call	i2_memset	;wreg free
 26685                           
 26686                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26687  003446  9C60               	bcf	3936,6,c	;volatile
 26688                           
 26689                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26690  003448  0E08               	movlw	8
 26691  00344A  0100               	movlb	0	; () banked
 26692  00344C  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 26693  00344E  0E04               	movlw	4
 26694  003450  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26695                           
 26696                           ; BSR set to: 0
 26697                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26698  003452  0E00               	movlw	0
 26699  003454  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 26700  003456  0E04               	movlw	4
 26701  003458  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26702                           
 26703                           ; BSR set to: 0
 26704                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26705  00345A  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26706  00345E  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26707                           
 26708                           ; BSR set to: 0
 26709                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26710  003462  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 26711                           
 26712                           ; BSR set to: 0
 26713                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26714  003466  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 26715  003468  A4D8               	btfss	status,2,c
 26716  00346A  D003               	goto	i2l1983
 26717                           
 26718                           ; BSR set to: 0
 26719                           ;usb_device.c: 1671: {
 26720                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26721  00346C  0E10               	movlw	16
 26722  00346E  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26723                           
 26724                           ;usb_device.c: 1674: }
 26725  003470  0012               	return	
 26726  003472                     i2l1983:
 26727                           
 26728                           ; BSR set to: 0
 26729                           ;usb_device.c: 1675: else
 26730                           ;usb_device.c: 1676: {
 26731                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26732                           
 26733                           ; BSR set to: 0
 26734  003472  0E00               	movlw	0
 26735  003474  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26736  003476  0E01               	movlw	1
 26737  003478  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26738  00347A  0E5A               	movlw	low _USBActiveConfiguration
 26739  00347C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26740  00347E  0E00               	movlw	high _USBActiveConfiguration
 26741  003480  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26742  003482  0E00               	movlw	0
 26743  003484  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26744  003486  0E01               	movlw	1
 26745  003488  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26746  00348A  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26747                           
 26748                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26749  00348E  0E20               	movlw	32
 26750  003490  0100               	movlb	0	; () banked
 26751  003492  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26752  003494  0012               	return	
 26753  003496                     __end_of_USBStdSetCfgHandler:
 26754                           	opt stack 0
 26755                           pclatu	equ	0xFFB
 26756                           pclath	equ	0xFFA
 26757                           tblptru	equ	0xFF8
 26758                           tblptrh	equ	0xFF7
 26759                           tblptrl	equ	0xFF6
 26760                           tablat	equ	0xFF5
 26761                           prodh	equ	0xFF4
 26762                           prodl	equ	0xFF3
 26763                           intcon	equ	0xFF2
 26764                           intcon2	equ	0xFF1
 26765                           intcon3	equ	0xFF0
 26766                           indf0	equ	0xFEF
 26767                           postinc0	equ	0xFEE
 26768                           fsr0h	equ	0xFEA
 26769                           fsr0l	equ	0xFE9
 26770                           wreg	equ	0xFE8
 26771                           indf1	equ	0xFE7
 26772                           postdec1	equ	0xFE5
 26773                           fsr1h	equ	0xFE2
 26774                           fsr1l	equ	0xFE1
 26775                           indf2	equ	0xFDF
 26776                           postinc2	equ	0xFDE
 26777                           postdec2	equ	0xFDD
 26778                           plusw2	equ	0xFDB
 26779                           fsr2h	equ	0xFDA
 26780                           fsr2l	equ	0xFD9
 26781                           status	equ	0xFD8
 26782                           
 26783 ;; *************** function i2_memset *****************
 26784 ;; Defined at:
 26785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 26786 ;; Parameters:    Size  Location     Type
 26787 ;;  p1              2    0[COMRAM] PTR void 
 26788 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26789 ;;  c               2    2[COMRAM] int 
 26790 ;;  n               2    4[COMRAM] unsigned int 
 26791 ;; Auto vars:     Size  Location     Type
 26792 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26793 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26794 ;; Return value:  Size  Location     Type
 26795 ;;                  2    0[COMRAM] PTR void 
 26796 ;; Registers used:
 26797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26798 ;; Tracked objects:
 26799 ;;		On entry : 0/0
 26800 ;;		On exit  : 0/0
 26801 ;;		Unchanged: 0/0
 26802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26803 ;;      Params:         6       0       0       0       0       0       0       0       0
 26804 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26806 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26807 ;;Total ram usage:        8 bytes
 26808 ;; Hardware stack levels used:    1
 26809 ;; This function calls:
 26810 ;;		Nothing
 26811 ;; This function is called by:
 26812 ;;		_USBStdSetCfgHandler
 26813 ;;		i2_USBDeviceInit
 26814 ;; This function uses a non-reentrant model
 26815 ;;
 26816                           
 26817                           	psect	text119
 26818  005706                     __ptext119:
 26819                           	opt stack 0
 26820  005706                     i2_memset:
 26821                           	opt stack 18
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;incstack = 0
 26825  005706  C001  F007         	movff	i2memset@p1,i2memset@p
 26826  00570A  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26827  00570E  D008               	goto	i2l2679
 26828  005710                     i2l8130:
 26829  005710  C007  FFD9         	movff	i2memset@p,fsr2l
 26830  005714  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26831  005718  C003  FFDF         	movff	i2memset@c,indf2
 26832  00571C  4A07               	infsnz	i2memset@p,f,c
 26833  00571E  2A08               	incf	i2memset@p+1,f,c
 26834  005720                     i2l2679:
 26835  005720  0605               	decf	i2memset@n,f,c
 26836  005722  A0D8               	btfss	status,0,c
 26837  005724  0606               	decf	i2memset@n+1,f,c
 26838  005726  2805               	incf	i2memset@n,w,c
 26839  005728  E1F3               	bnz	i2l8130
 26840  00572A  2806               	incf	i2memset@n+1,w,c
 26841  00572C  B4D8               	btfsc	status,2,c
 26842  00572E  0012               	return	
 26843  005730  D7EF               	goto	i2l2680
 26844  005732                     __end_ofi2_memset:
 26845                           	opt stack 0
 26846                           pclatu	equ	0xFFB
 26847                           pclath	equ	0xFFA
 26848                           tblptru	equ	0xFF8
 26849                           tblptrh	equ	0xFF7
 26850                           tblptrl	equ	0xFF6
 26851                           tablat	equ	0xFF5
 26852                           prodh	equ	0xFF4
 26853                           prodl	equ	0xFF3
 26854                           intcon	equ	0xFF2
 26855                           intcon2	equ	0xFF1
 26856                           intcon3	equ	0xFF0
 26857                           indf0	equ	0xFEF
 26858                           postinc0	equ	0xFEE
 26859                           fsr0h	equ	0xFEA
 26860                           fsr0l	equ	0xFE9
 26861                           wreg	equ	0xFE8
 26862                           indf1	equ	0xFE7
 26863                           postdec1	equ	0xFE5
 26864                           fsr1h	equ	0xFE2
 26865                           fsr1l	equ	0xFE1
 26866                           indf2	equ	0xFDF
 26867                           postinc2	equ	0xFDE
 26868                           postdec2	equ	0xFDD
 26869                           plusw2	equ	0xFDB
 26870                           fsr2h	equ	0xFDA
 26871                           fsr2l	equ	0xFD9
 26872                           status	equ	0xFD8
 26873                           
 26874 ;; *************** function _USBStdGetStatusHandler *****************
 26875 ;; Defined at:
 26876 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26877 ;; Parameters:    Size  Location     Type
 26878 ;;		None
 26879 ;; Auto vars:     Size  Location     Type
 26880 ;;  p               2    1[COMRAM] PTR struct __BDT
 26881 ;;		 -> BDT(48), NULL(0), 
 26882 ;; Return value:  Size  Location     Type
 26883 ;;                  1    wreg      void 
 26884 ;; Registers used:
 26885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26886 ;; Tracked objects:
 26887 ;;		On entry : 0/0
 26888 ;;		On exit  : 0/0
 26889 ;;		Unchanged: 0/0
 26890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26891 ;;      Params:         0       0       0       0       0       0       0       0       0
 26892 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26893 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26894 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26895 ;;Total ram usage:        3 bytes
 26896 ;; Hardware stack levels used:    1
 26897 ;; This function calls:
 26898 ;;		Nothing
 26899 ;; This function is called by:
 26900 ;;		_USBCheckStdRequest
 26901 ;; This function uses a non-reentrant model
 26902 ;;
 26903                           
 26904                           	psect	text120
 26905  0041B8                     __ptext120:
 26906                           	opt stack 0
 26907  0041B8                     _USBStdGetStatusHandler:
 26908                           	opt stack 16
 26909                           
 26910                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26911                           
 26912                           ;incstack = 0
 26913  0041B8  0E00               	movlw	0
 26914  0041BA  0104               	movlb	4	; () banked
 26915  0041BC  6F38               	movwf	56,b	;volatile
 26916                           
 26917                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26918  0041BE  0E00               	movlw	0
 26919  0041C0  6F39               	movwf	57,b	;volatile
 26920                           
 26921                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26922  0041C2  D038               	goto	i2l2002
 26923  0041C4                     i2l2003:
 26924                           
 26925                           ; BSR set to: 4
 26926                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26927  0041C4  0100               	movlb	0	; () banked
 26928  0041C6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26929                           
 26930                           ;usb_device.c: 1789: }
 26931                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26932                           
 26933                           ; BSR set to: 4
 26934                           
 26935                           ; BSR set to: 0
 26936                           ;usb_device.c: 1787: {
 26937                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26938                           
 26939                           ;usb_device.c: 1786: if(0 == 1)
 26940  0041C8  0449               	decf	_RemoteWakeup,w,c	;volatile
 26941  0041CA  A4D8               	btfss	status,2,c
 26942  0041CC  D03E               	goto	i2l2006
 26943                           
 26944                           ;usb_device.c: 1792: {
 26945                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26946  0041CE  0104               	movlb	4	; () banked
 26947  0041D0  8338               	bsf	56,1,b	;volatile
 26948                           
 26949                           ; BSR set to: 4
 26950                           ;usb_device.c: 1794: }
 26951                           ;usb_device.c: 1795: break;
 26952  0041D2  D03B               	goto	i2l2006
 26953  0041D4                     i2l2007:
 26954                           
 26955                           ; BSR set to: 4
 26956                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26957  0041D4  0100               	movlb	0	; () banked
 26958  0041D6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26959                           
 26960                           ;usb_device.c: 1798: break;
 26961  0041D8  D038               	goto	i2l2006
 26962  0041DA                     i2l2008:
 26963                           
 26964                           ; BSR set to: 4
 26965                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26966  0041DA  0100               	movlb	0	; () banked
 26967  0041DC  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26968                           
 26969                           ;usb_device.c: 1804: {
 26970                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26971                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26972  0041DE  0104               	movlb	4	; () banked
 26973  0041E0  BF34               	btfsc	52,7,b	;volatile
 26974  0041E2  D00A               	goto	i2l2009
 26975                           
 26976                           ; BSR set to: 4
 26977                           ;usb_device.c: 1808: {
 26978                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26979  0041E4  5134               	movf	52,w,b	;volatile
 26980  0041E6  0B0F               	andlw	15
 26981  0041E8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26982  0041EA  5001               	movf	??_USBStdGetStatusHandler,w,c
 26983  0041EC  0D02               	mullw	2
 26984  0041EE  0E40               	movlw	low _pBDTEntryOut
 26985  0041F0  24F3               	addwf	prodl,w,c
 26986  0041F2  6ED9               	movwf	fsr2l,c
 26987  0041F4  0E01               	movlw	high _pBDTEntryOut
 26988  0041F6  D009               	goto	L25
 26989  0041F8                     i2l2009:
 26990                           
 26991                           ; BSR set to: 4
 26992                           ;usb_device.c: 1811: else
 26993                           ;usb_device.c: 1812: {
 26994                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26995                           
 26996                           ; BSR set to: 4
 26997  0041F8  5134               	movf	52,w,b	;volatile
 26998  0041FA  0B0F               	andlw	15
 26999  0041FC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27000  0041FE  5001               	movf	??_USBStdGetStatusHandler,w,c
 27001  004200  0D02               	mullw	2
 27002  004202  0ECA               	movlw	low _pBDTEntryIn
 27003  004204  24F3               	addwf	prodl,w,c
 27004  004206  6ED9               	movwf	fsr2l,c
 27005  004208  0E00               	movlw	high _pBDTEntryIn
 27006  00420A                     L25:
 27007  00420A  20F4               	addwfc	prodh,w,c
 27008  00420C  6EDA               	movwf	fsr2h,c
 27009  00420E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 27010  004212  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 27011                           
 27012                           ; BSR set to: 4
 27013                           ;usb_device.c: 1814: }
 27014                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27015                           
 27016                           ; BSR set to: 4
 27017  004216  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27018  00421A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27019  00421E  AEDF               	btfss	indf2,7,c
 27020  004220  D014               	goto	i2l2006
 27021                           
 27022                           ; BSR set to: 4
 27023  004222  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27024  004226  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27025  00422A  A4DF               	btfss	indf2,2,c
 27026  00422C  D00E               	goto	i2l2006
 27027                           
 27028                           ; BSR set to: 4
 27029                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 27030  00422E  0E01               	movlw	1
 27031  004230  6F38               	movwf	56,b	;volatile
 27032                           
 27033                           ; BSR set to: 4
 27034                           ;usb_device.c: 1819: }
 27035                           ;usb_device.c: 1820: }
 27036                           
 27037                           ; BSR set to: 4
 27038                           ;usb_device.c: 1818: break;
 27039  004232  D00B               	goto	i2l2006
 27040  004234                     i2l2002:
 27041                           
 27042                           ; BSR set to: 4
 27043                           
 27044                           ; BSR set to: 4
 27045  004234  5130               	movf	48,w,b	;volatile
 27046  004236  0B1F               	andlw	31
 27047                           
 27048                           ; Switch size 1, requested type "space"
 27049                           ; Number of cases is 3, Range of values is 0 to 2
 27050                           ; switch strategies available:
 27051                           ; Name         Instructions Cycles
 27052                           ; simple_byte           10     6 (average)
 27053                           ;	Chosen strategy is simple_byte
 27054  004238  0A00               	xorlw	0	; case 0
 27055  00423A  B4D8               	btfsc	status,2,c
 27056  00423C  D7C3               	goto	i2l2003
 27057  00423E  0A01               	xorlw	1	; case 1
 27058  004240  B4D8               	btfsc	status,2,c
 27059  004242  D7C8               	goto	i2l2007
 27060  004244  0A03               	xorlw	3	; case 2
 27061  004246  B4D8               	btfsc	status,2,c
 27062  004248  D7C8               	goto	i2l2008
 27063  00424A                     i2l2006:
 27064                           
 27065                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27066  00424A  0100               	movlb	0	; () banked
 27067  00424C  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27068  00424E  0012               	return	
 27069                           
 27070                           ; BSR set to: 0
 27071                           ;usb_device.c: 1823: {
 27072                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27073  004250  0E38               	movlw	56
 27074  004252  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27075  004254  0E04               	movlw	4
 27076  004256  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27077                           
 27078                           ; BSR set to: 0
 27079                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27080  004258  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27084  00425A  0E02               	movlw	2
 27085  00425C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27086  00425E  0012               	return	
 27087  004260                     __end_of_USBStdGetStatusHandler:
 27088                           	opt stack 0
 27089                           pclatu	equ	0xFFB
 27090                           pclath	equ	0xFFA
 27091                           tblptru	equ	0xFF8
 27092                           tblptrh	equ	0xFF7
 27093                           tblptrl	equ	0xFF6
 27094                           tablat	equ	0xFF5
 27095                           prodh	equ	0xFF4
 27096                           prodl	equ	0xFF3
 27097                           intcon	equ	0xFF2
 27098                           intcon2	equ	0xFF1
 27099                           intcon3	equ	0xFF0
 27100                           indf0	equ	0xFEF
 27101                           postinc0	equ	0xFEE
 27102                           fsr0h	equ	0xFEA
 27103                           fsr0l	equ	0xFE9
 27104                           wreg	equ	0xFE8
 27105                           indf1	equ	0xFE7
 27106                           postdec1	equ	0xFE5
 27107                           fsr1h	equ	0xFE2
 27108                           fsr1l	equ	0xFE1
 27109                           indf2	equ	0xFDF
 27110                           postinc2	equ	0xFDE
 27111                           postdec2	equ	0xFDD
 27112                           plusw2	equ	0xFDB
 27113                           fsr2h	equ	0xFDA
 27114                           fsr2l	equ	0xFD9
 27115                           status	equ	0xFD8
 27116                           
 27117 ;; *************** function _USBStdGetDscHandler *****************
 27118 ;; Defined at:
 27119 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27120 ;; Parameters:    Size  Location     Type
 27121 ;;		None
 27122 ;; Auto vars:     Size  Location     Type
 27123 ;;		None
 27124 ;; Return value:  Size  Location     Type
 27125 ;;                  1    wreg      void 
 27126 ;; Registers used:
 27127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27128 ;; Tracked objects:
 27129 ;;		On entry : 0/0
 27130 ;;		On exit  : 0/0
 27131 ;;		Unchanged: 0/0
 27132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27133 ;;      Params:         0       0       0       0       0       0       0       0       0
 27134 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27135 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27136 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27137 ;;Total ram usage:        2 bytes
 27138 ;; Hardware stack levels used:    1
 27139 ;; This function calls:
 27140 ;;		Nothing
 27141 ;; This function is called by:
 27142 ;;		_USBCheckStdRequest
 27143 ;; This function uses a non-reentrant model
 27144 ;;
 27145                           
 27146                           	psect	text121
 27147  002BB6                     __ptext121:
 27148                           	opt stack 0
 27149  002BB6                     _USBStdGetDscHandler:
 27150                           	opt stack 16
 27151                           
 27152                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;incstack = 0
 27156  002BB6  0E80               	movlw	128
 27157  002BB8  0104               	movlb	4	; () banked
 27158  002BBA  1930               	xorwf	48,w,b	;volatile
 27159  002BBC  A4D8               	btfss	status,2,c
 27160  002BBE  0012               	return	
 27161                           
 27162                           ; BSR set to: 4
 27163                           ;usb_device.c: 1707: {
 27164                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27165  002BC0  0EC0               	movlw	192
 27166  002BC2  0100               	movlb	0	; () banked
 27167  002BC4  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27168                           
 27169                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27170  002BC6  D082               	goto	i2l1989
 27171  002BC8                     
 27172                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27173                           
 27174                           ; BSR set to: 0
 27175  002BC8  0EA2               	movlw	low _device_dsc
 27176  002BCA  0100               	movlb	0	; () banked
 27177  002BCC  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27178  002BCE  0E79               	movlw	high _device_dsc
 27179  002BD0  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27180                           
 27181                           ; BSR set to: 0
 27182                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27183  002BD2  0E00               	movlw	0
 27184  002BD4  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27185  002BD6  0E12               	movlw	18
 27186  002BD8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27187                           
 27188                           ;usb_device.c: 1715: break;
 27189  002BDA  0012               	return	
 27190  002BDC                     
 27191                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27192                           
 27193                           ; BSR set to: 0
 27194  002BDC  0104               	movlb	4	; () banked
 27195  002BDE  5132               	movf	50,w,b	;volatile
 27196  002BE0  A4D8               	btfss	status,2,c
 27197  002BE2  D040               	goto	i2l1993
 27198                           
 27199                           ; BSR set to: 4
 27200                           ;usb_device.c: 1721: {
 27201                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27202  002BE4  5132               	movf	50,w,b	;volatile
 27203  002BE6  0D02               	mullw	2
 27204  002BE8  0EF5               	movlw	low _USB_CD_Ptr
 27205  002BEA  24F3               	addwf	prodl,w,c
 27206  002BEC  6EF6               	movwf	tblptrl,c
 27207  002BEE  0E75               	movlw	high _USB_CD_Ptr
 27208  002BF0  20F4               	addwfc	prodh,w,c
 27209  002BF2  6EF7               	movwf	tblptrh,c
 27210  002BF4                     	if	0	;There are less than 3 active tblptr bytes
 27211  002BF4                     	endif
 27212  002BF4  0009               	tblrd		*+
 27213  002BF6  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27214  002BFA  000A               	tblrd		*-
 27215  002BFC  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27216                           
 27217                           ; BSR set to: 4
 27218                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27219  002C00  0E02               	movlw	2
 27220  002C02  0100               	movlb	0	; () banked
 27221  002C04  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27222  002C06  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27223  002C08  0E00               	movlw	0
 27224  002C0A  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27225  002C0C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27226  002C0E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27227  002C12  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27228  002C16  6AF8               	clrf	tblptru,c
 27229  002C18  0E07               	movlw	(high __ramtop+-1)
 27230  002C1A  64F7               	cpfsgt	tblptrh,c
 27231  002C1C  D003               	bra	i2u612_47
 27232  002C1E  0008               	tblrd		*
 27233  002C20  50F5               	movf	tablat,w,c
 27234  002C22  D005               	bra	i2u612_40
 27235  002C24                     i2u612_47:
 27236  002C24  CFF6 FFE9          	movff	tblptrl,fsr0l
 27237  002C28  CFF7 FFEA          	movff	tblptrh,fsr0h
 27238  002C2C  50EF               	movf	indf0,w,c
 27239  002C2E                     i2u612_40:
 27240  002C2E  0100               	movlb	0	; () banked
 27241  002C30  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27242                           
 27243                           ; BSR set to: 0
 27244                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27245  002C32  0E03               	movlw	3
 27246  002C34  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27247  002C36  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27248  002C38  0E00               	movlw	0
 27249  002C3A  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27250  002C3C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27251  002C3E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27252  002C42  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27253  002C46  6AF8               	clrf	tblptru,c
 27254  002C48  0E07               	movlw	(high __ramtop+-1)
 27255  002C4A  64F7               	cpfsgt	tblptrh,c
 27256  002C4C  D003               	bra	i2u613_47
 27257  002C4E  0008               	tblrd		*
 27258  002C50  50F5               	movf	tablat,w,c
 27259  002C52  D005               	bra	i2u613_40
 27260  002C54                     i2u613_47:
 27261  002C54  CFF6 FFE9          	movff	tblptrl,fsr0l
 27262  002C58  CFF7 FFEA          	movff	tblptrh,fsr0h
 27263  002C5C  50EF               	movf	indf0,w,c
 27264  002C5E                     i2u613_40:
 27265  002C5E  0100               	movlb	0	; () banked
 27266  002C60  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27267                           
 27268                           ;usb_device.c: 1729: }
 27269  002C62  0012               	return	
 27270  002C64                     i2l1993:
 27271                           
 27272                           ;usb_device.c: 1730: else
 27273                           ;usb_device.c: 1731: {
 27274                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 27275                           
 27276                           ; BSR set to: 0
 27277  002C64  0E00               	movlw	0
 27278  002C66  0100               	movlb	0	; () banked
 27279  002C68  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27280                           
 27281                           ; BSR set to: 0
 27282                           ;usb_device.c: 1733: }
 27283                           ;usb_device.c: 1734: break;
 27284  002C6A  0012               	return	
 27285  002C6C                     
 27286                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 27287                           
 27288                           ; BSR set to: 0
 27289  002C6C  0E03               	movlw	3
 27290  002C6E  0104               	movlb	4	; () banked
 27291  002C70  6132               	cpfslt	50,b	;volatile
 27292  002C72  D024               	goto	i2l1996
 27293                           
 27294                           ; BSR set to: 4
 27295                           ;usb_device.c: 1740: {
 27296                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27297  002C74  5132               	movf	50,w,b	;volatile
 27298  002C76  0D02               	mullw	2
 27299  002C78  0EEF               	movlw	low _USB_SD_Ptr
 27300  002C7A  24F3               	addwf	prodl,w,c
 27301  002C7C  6EF6               	movwf	tblptrl,c
 27302  002C7E  0E75               	movlw	high _USB_SD_Ptr
 27303  002C80  20F4               	addwfc	prodh,w,c
 27304  002C82  6EF7               	movwf	tblptrh,c
 27305  002C84                     	if	0	;There are less than 3 active tblptr bytes
 27306  002C84                     	endif
 27307  002C84  0009               	tblrd		*+
 27308  002C86  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27309  002C8A  000A               	tblrd		*-
 27310  002C8C  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27311                           
 27312                           ; BSR set to: 4
 27313                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27314  002C90  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 27315  002C94  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27316  002C98  6AF8               	clrf	tblptru,c
 27317  002C9A  0E07               	movlw	(high __ramtop+-1)
 27318  002C9C  64F7               	cpfsgt	tblptrh,c
 27319  002C9E  D003               	bra	i2u615_47
 27320  002CA0  0008               	tblrd		*
 27321  002CA2  50F5               	movf	tablat,w,c
 27322  002CA4  D005               	bra	i2u615_40
 27323  002CA6                     i2u615_47:
 27324  002CA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 27325  002CAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 27326  002CAE  50EF               	movf	indf0,w,c
 27327  002CB0                     i2u615_40:
 27328  002CB0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27329  002CB2  5001               	movf	??_USBStdGetDscHandler,w,c
 27330  002CB4  0100               	movlb	0	; () banked
 27331  002CB6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27332  002CB8  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27333                           
 27334                           ;usb_device.c: 1745: }
 27335  002CBA  0012               	return	
 27336  002CBC                     i2l1996:
 27337                           
 27338                           ;usb_device.c: 1746: else
 27339                           ;usb_device.c: 1747: {
 27340                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27341                           
 27342                           ; BSR set to: 0
 27343  002CBC  0E00               	movlw	0
 27344  002CBE  0100               	movlb	0	; () banked
 27345  002CC0  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27346                           
 27347                           ; BSR set to: 0
 27348                           ;usb_device.c: 1749: }
 27349                           ;usb_device.c: 1750: break;
 27350  002CC2  0012               	return	
 27351  002CC4                     
 27352                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27353                           
 27354                           ; BSR set to: 0
 27355  002CC4  0E00               	movlw	0
 27356  002CC6  0100               	movlb	0	; () banked
 27357  002CC8  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27358                           
 27359                           ; BSR set to: 0
 27360                           ;usb_device.c: 1754: }
 27361                           
 27362                           ;usb_device.c: 1753: break;
 27363  002CCA  0012               	return	
 27364  002CCC                     i2l1989:
 27365                           
 27366                           ; BSR set to: 0
 27367                           
 27368                           ; BSR set to: 0
 27369  002CCC  0104               	movlb	4	; () banked
 27370  002CCE  5133               	movf	51,w,b	;volatile
 27371                           
 27372                           ; Switch size 1, requested type "space"
 27373                           ; Number of cases is 3, Range of values is 1 to 3
 27374                           ; switch strategies available:
 27375                           ; Name         Instructions Cycles
 27376                           ; simple_byte           10     6 (average)
 27377                           ;	Chosen strategy is simple_byte
 27378  002CD0  0A01               	xorlw	1	; case 1
 27379  002CD2  B4D8               	btfsc	status,2,c
 27380  002CD4  D779               	goto	i2l1990
 27381  002CD6  0A03               	xorlw	3	; case 2
 27382  002CD8  B4D8               	btfsc	status,2,c
 27383  002CDA  D780               	goto	i2l1992
 27384  002CDC  0A01               	xorlw	1	; case 3
 27385  002CDE  B4D8               	btfsc	status,2,c
 27386  002CE0  D7C5               	goto	i2l1995
 27387  002CE2  D7F0               	goto	i2l1998
 27388  002CE4                     __end_of_USBStdGetDscHandler:
 27389                           	opt stack 0
 27390                           pclatu	equ	0xFFB
 27391                           pclath	equ	0xFFA
 27392                           tblptru	equ	0xFF8
 27393                           tblptrh	equ	0xFF7
 27394                           tblptrl	equ	0xFF6
 27395                           tablat	equ	0xFF5
 27396                           prodh	equ	0xFF4
 27397                           prodl	equ	0xFF3
 27398                           intcon	equ	0xFF2
 27399                           intcon2	equ	0xFF1
 27400                           intcon3	equ	0xFF0
 27401                           indf0	equ	0xFEF
 27402                           postinc0	equ	0xFEE
 27403                           fsr0h	equ	0xFEA
 27404                           fsr0l	equ	0xFE9
 27405                           wreg	equ	0xFE8
 27406                           indf1	equ	0xFE7
 27407                           postdec1	equ	0xFE5
 27408                           fsr1h	equ	0xFE2
 27409                           fsr1l	equ	0xFE1
 27410                           indf2	equ	0xFDF
 27411                           postinc2	equ	0xFDE
 27412                           postdec2	equ	0xFDD
 27413                           plusw2	equ	0xFDB
 27414                           fsr2h	equ	0xFDA
 27415                           fsr2l	equ	0xFD9
 27416                           status	equ	0xFD8
 27417                           
 27418 ;; *************** function _USBStdFeatureReqHandler *****************
 27419 ;; Defined at:
 27420 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27421 ;; Parameters:    Size  Location     Type
 27422 ;;		None
 27423 ;; Auto vars:     Size  Location     Type
 27424 ;;  p               2   25[COMRAM] PTR struct __BDT
 27425 ;;		 -> BDT(48), NULL(0), 
 27426 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27427 ;;		 -> UEP0(1), 
 27428 ;;  current_ep_d    1   24[COMRAM] struct .
 27429 ;; Return value:  Size  Location     Type
 27430 ;;                  1    wreg      void 
 27431 ;; Registers used:
 27432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27433 ;; Tracked objects:
 27434 ;;		On entry : 0/0
 27435 ;;		On exit  : 0/0
 27436 ;;		Unchanged: 0/0
 27437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27438 ;;      Params:         0       0       0       0       0       0       0       0       0
 27439 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27440 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27441 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27442 ;;Total ram usage:        6 bytes
 27443 ;; Hardware stack levels used:    1
 27444 ;; Hardware stack levels required when called:    5
 27445 ;; This function calls:
 27446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27447 ;; This function is called by:
 27448 ;;		_USBCheckStdRequest
 27449 ;; This function uses a non-reentrant model
 27450 ;;
 27451                           
 27452                           	psect	text122
 27453  001E7A                     __ptext122:
 27454                           	opt stack 0
 27455  001E7A                     _USBStdFeatureReqHandler:
 27456                           	opt stack 11
 27457                           
 27458                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27459                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27460                           ;usb_device.c: 2390: unsigned char* pUEP;
 27461                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27462                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27463                           
 27464                           ;incstack = 0
 27465  001E7A  0104               	movlb	4	; () banked
 27466  001E7C  0532               	decf	50,w,b	;volatile
 27467  001E7E  A4D8               	btfss	status,2,c
 27468  001E80  D010               	goto	i2l2084
 27469                           
 27470                           ; BSR set to: 4
 27471  001E82  5130               	movf	48,w,b	;volatile
 27472  001E84  0B1F               	andlw	31
 27473  001E86  0900               	iorlw	0
 27474  001E88  A4D8               	btfss	status,2,c
 27475  001E8A  D00B               	goto	i2l2084
 27476                           
 27477                           ; BSR set to: 4
 27478                           ;usb_device.c: 2395: {
 27479                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27480  001E8C  0100               	movlb	0	; () banked
 27481  001E8E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27482                           
 27483                           ; BSR set to: 0
 27484                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27485  001E90  0E03               	movlw	3
 27486  001E92  0104               	movlb	4	; () banked
 27487  001E94  1931               	xorwf	49,w,b	;volatile
 27488  001E96  A4D8               	btfss	status,2,c
 27489  001E98  D002               	goto	i2l2083
 27490                           
 27491                           ; BSR set to: 4
 27492                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27493  001E9A  0E01               	movlw	1
 27494  001E9C  D001               	goto	L26
 27495  001E9E                     i2l2083:
 27496                           
 27497                           ; BSR set to: 4
 27498                           ;usb_device.c: 2399: else
 27499                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27500                           
 27501                           ; BSR set to: 4
 27502  001E9E  0E00               	movlw	0
 27503  001EA0                     L26:
 27504  001EA0  6E49               	movwf	_RemoteWakeup,c	;volatile
 27505  001EA2                     i2l2084:
 27506                           
 27507                           ; BSR set to: 4
 27508                           ;usb_device.c: 2401: }
 27509                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27510                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27511                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27512                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27513                           
 27514                           ; BSR set to: 4
 27515  001EA2  5132               	movf	50,w,b	;volatile
 27516  001EA4  A4D8               	btfss	status,2,c
 27517  001EA6  0012               	return	
 27518                           
 27519                           ; BSR set to: 4
 27520  001EA8  5130               	movf	48,w,b	;volatile
 27521  001EAA  0B1F               	andlw	31
 27522  001EAC  0A02               	xorlw	2
 27523  001EAE  A4D8               	btfss	status,2,c
 27524  001EB0  0012               	return	
 27525                           
 27526                           ; BSR set to: 4
 27527  001EB2  5134               	movf	52,w,b	;volatile
 27528  001EB4  0B0F               	andlw	15
 27529  001EB6  0900               	iorlw	0
 27530  001EB8  B4D8               	btfsc	status,2,c
 27531  001EBA  0012               	return	
 27532                           
 27533                           ; BSR set to: 4
 27534  001EBC  5134               	movf	52,w,b	;volatile
 27535  001EBE  0B0F               	andlw	15
 27536  001EC0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27537  001EC2  0E03               	movlw	3
 27538  001EC4  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27539  001EC6  0012               	return	
 27540                           
 27541                           ; BSR set to: 4
 27542  001EC8  0E20               	movlw	32
 27543  001ECA  0100               	movlb	0	; () banked
 27544  001ECC  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27545  001ECE  A4D8               	btfss	status,2,c
 27546  001ED0  0012               	return	
 27547                           
 27548                           ; BSR set to: 0
 27549                           ;usb_device.c: 2408: {
 27550                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27551  001ED2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27552                           
 27553                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27554  001ED4  0104               	movlb	4	; () banked
 27555  001ED6  BF34               	btfsc	52,7,b	;volatile
 27556  001ED8  D019               	goto	i2l2086
 27557                           
 27558                           ; BSR set to: 4
 27559                           ;usb_device.c: 2415: {
 27560                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27561  001EDA  5134               	movf	52,w,b	;volatile
 27562  001EDC  0B0F               	andlw	15
 27563  001EDE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27564  001EE0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27565  001EE2  0D02               	mullw	2
 27566  001EE4  0E40               	movlw	low _pBDTEntryOut
 27567  001EE6  24F3               	addwf	prodl,w,c
 27568  001EE8  6ED9               	movwf	fsr2l,c
 27569  001EEA  0E01               	movlw	high _pBDTEntryOut
 27570  001EEC  20F4               	addwfc	prodh,w,c
 27571  001EEE  6EDA               	movwf	fsr2h,c
 27572  001EF0  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27573  001EF4  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27574                           
 27575                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27576  001EF8  5134               	movf	52,w,b	;volatile
 27577  001EFA  0B0F               	andlw	15
 27578  001EFC  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27579  001EFE  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27580  001F00  0D01               	mullw	1
 27581  001F02  0ED0               	movlw	low _ep_data_out
 27582  001F04  24F3               	addwf	prodl,w,c
 27583  001F06  6ED9               	movwf	fsr2l,c
 27584  001F08  0E00               	movlw	high _ep_data_out
 27585  001F0A  D018               	goto	L27
 27586  001F0C                     i2l2086:
 27587                           
 27588                           ; BSR set to: 4
 27589                           ;usb_device.c: 2419: else
 27590                           ;usb_device.c: 2420: {
 27591                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27592                           
 27593                           ; BSR set to: 4
 27594  001F0C  5134               	movf	52,w,b	;volatile
 27595  001F0E  0B0F               	andlw	15
 27596  001F10  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27597  001F12  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27598  001F14  0D02               	mullw	2
 27599  001F16  0ECA               	movlw	low _pBDTEntryIn
 27600  001F18  24F3               	addwf	prodl,w,c
 27601  001F1A  6ED9               	movwf	fsr2l,c
 27602  001F1C  0E00               	movlw	high _pBDTEntryIn
 27603  001F1E  20F4               	addwfc	prodh,w,c
 27604  001F20  6EDA               	movwf	fsr2h,c
 27605  001F22  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27606  001F26  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27607                           
 27608                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27609  001F2A  5134               	movf	52,w,b	;volatile
 27610  001F2C  0B0F               	andlw	15
 27611  001F2E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27612  001F30  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27613  001F32  0D01               	mullw	1
 27614  001F34  0ED3               	movlw	low _ep_data_in
 27615  001F36  24F3               	addwf	prodl,w,c
 27616  001F38  6ED9               	movwf	fsr2l,c
 27617  001F3A  0E00               	movlw	high _ep_data_in
 27618  001F3C                     L27:
 27619  001F3C  20F4               	addwfc	prodh,w,c
 27620  001F3E  6EDA               	movwf	fsr2h,c
 27621  001F40  50DF               	movf	indf2,w,c
 27622  001F42  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27623                           
 27624                           ; BSR set to: 4
 27625                           ;usb_device.c: 2423: }
 27626                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27627                           
 27628                           ; BSR set to: 4
 27629  001F44  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27630  001F46  D002               	goto	i2l2088
 27631                           
 27632                           ; BSR set to: 4
 27633                           ;usb_device.c: 2429: {
 27634                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27635  001F48  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27636                           
 27637                           ;usb_device.c: 2431: }
 27638  001F4A  D001               	goto	i2l2089
 27639  001F4C                     i2l2088:
 27640                           
 27641                           ; BSR set to: 4
 27642                           ;usb_device.c: 2432: else
 27643                           ;usb_device.c: 2433: {
 27644                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27645                           
 27646                           ; BSR set to: 4
 27647  001F4C  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27648  001F4E                     i2l2089:
 27649                           
 27650                           ; BSR set to: 4
 27651                           ;usb_device.c: 2435: }
 27652                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27653                           
 27654                           ; BSR set to: 4
 27655  001F4E  BF34               	btfsc	52,7,b	;volatile
 27656  001F50  D00A               	goto	i2l2090
 27657                           
 27658                           ; BSR set to: 4
 27659                           ;usb_device.c: 2440: {
 27660                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27661  001F52  5134               	movf	52,w,b	;volatile
 27662  001F54  0B0F               	andlw	15
 27663  001F56  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27664  001F58  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27665  001F5A  0D02               	mullw	2
 27666  001F5C  0E40               	movlw	low _pBDTEntryOut
 27667  001F5E  24F3               	addwf	prodl,w,c
 27668  001F60  6ED9               	movwf	fsr2l,c
 27669  001F62  0E01               	movlw	high _pBDTEntryOut
 27670  001F64  D009               	goto	L28
 27671  001F66                     i2l2090:
 27672                           
 27673                           ; BSR set to: 4
 27674                           ;usb_device.c: 2443: else
 27675                           ;usb_device.c: 2444: {
 27676                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27677                           
 27678                           ; BSR set to: 4
 27679  001F66  5134               	movf	52,w,b	;volatile
 27680  001F68  0B0F               	andlw	15
 27681  001F6A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27682  001F6C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27683  001F6E  0D02               	mullw	2
 27684  001F70  0ECA               	movlw	low _pBDTEntryIn
 27685  001F72  24F3               	addwf	prodl,w,c
 27686  001F74  6ED9               	movwf	fsr2l,c
 27687  001F76  0E00               	movlw	high _pBDTEntryIn
 27688  001F78                     L28:
 27689  001F78  20F4               	addwfc	prodh,w,c
 27690  001F7A  6EDA               	movwf	fsr2h,c
 27691  001F7C  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27692  001F80  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27693                           
 27694                           ; BSR set to: 4
 27695                           ;usb_device.c: 2446: }
 27696                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27697                           
 27698                           ; BSR set to: 4
 27699  001F84  0E03               	movlw	3
 27700  001F86  1931               	xorwf	49,w,b	;volatile
 27701  001F88  A4D8               	btfss	status,2,c
 27702  001F8A  D02D               	goto	i2l2092
 27703                           
 27704                           ; BSR set to: 4
 27705                           ;usb_device.c: 2450: {
 27706                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27707  001F8C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27708  001F90  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27709  001F94  AEDF               	btfss	indf2,7,c
 27710  001F96  D01A               	goto	i2l2095
 27711                           
 27712                           ; BSR set to: 4
 27713                           ;usb_device.c: 2452: {
 27714                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27715  001F98  BF34               	btfsc	52,7,b	;volatile
 27716  001F9A  D00A               	goto	i2l2094
 27717                           
 27718                           ; BSR set to: 4
 27719                           ;usb_device.c: 2456: {
 27720                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27721  001F9C  5134               	movf	52,w,b	;volatile
 27722  001F9E  0B0F               	andlw	15
 27723  001FA0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27724  001FA2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27725  001FA4  0D01               	mullw	1
 27726  001FA6  0ED0               	movlw	low _ep_data_out
 27727  001FA8  24F3               	addwf	prodl,w,c
 27728  001FAA  6ED9               	movwf	fsr2l,c
 27729  001FAC  0E00               	movlw	high _ep_data_out
 27730  001FAE  D00A               	goto	L29
 27731  001FB0                     i2l2094:
 27732                           
 27733                           ;usb_device.c: 2459: else
 27734                           ;usb_device.c: 2460: {
 27735                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27736                           
 27737                           ; BSR set to: 0
 27738  001FB0  0104               	movlb	4	; () banked
 27739  001FB2  5134               	movf	52,w,b	;volatile
 27740  001FB4  0B0F               	andlw	15
 27741  001FB6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27742  001FB8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27743  001FBA  0D01               	mullw	1
 27744  001FBC  0ED3               	movlw	low _ep_data_in
 27745  001FBE  24F3               	addwf	prodl,w,c
 27746  001FC0  6ED9               	movwf	fsr2l,c
 27747  001FC2  0E00               	movlw	high _ep_data_in
 27748  001FC4                     L29:
 27749  001FC4  20F4               	addwfc	prodh,w,c
 27750  001FC6  6EDA               	movwf	fsr2h,c
 27751  001FC8  0100               	movlb	0	; () banked
 27752  001FCA  82DF               	bsf	indf2,1,c
 27753  001FCC                     i2l2095:
 27754                           
 27755                           ;usb_device.c: 2462: }
 27756                           ;usb_device.c: 2463: }
 27757                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27758                           
 27759                           ; BSR set to: 0
 27760                           
 27761                           ; BSR set to: 0
 27762  001FCC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27763  001FD0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27764  001FD4  0E00               	movlw	0
 27765  001FD6  84DB               	bsf	plusw2,2,c
 27766                           
 27767                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27768  001FD8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27769  001FDC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27770  001FE0  0E00               	movlw	0
 27771  001FE2  8EDB               	bsf	plusw2,7,c
 27772                           
 27773                           ;usb_device.c: 2468: }
 27774  001FE4  0012               	return	
 27775  001FE6                     i2l2092:
 27776                           
 27777                           ;usb_device.c: 2469: else
 27778                           ;usb_device.c: 2470: {
 27779                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27780  001FE6  0E04               	movlw	4
 27781  001FE8  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27782                           
 27783                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27784  001FEA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27785  001FEE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27786  001FF2  AEDF               	btfss	indf2,7,c
 27787  001FF4  D01B               	goto	i2l2097
 27788                           
 27789                           ;usb_device.c: 2476: {
 27790                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27791  001FF6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27792  001FFA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27793  001FFE  0E7F               	movlw	127
 27794  002000  16DF               	andwf	indf2,f,c
 27795                           
 27796                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27797  002002  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27798  002006  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27799  00200A  0E00               	movlw	0
 27800  00200C  8CDB               	bsf	plusw2,6,c
 27801                           
 27802                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27803  00200E  0E00               	movlw	0
 27804  002010  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27805  002012  0E05               	movlw	5
 27806  002014  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27807  002016  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27808  00201A  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27809  00201E  0E00               	movlw	0
 27810  002020  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27811  002022  0E02               	movlw	2
 27812  002024  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27813  002026  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27814                           
 27815                           ;usb_device.c: 2482: }
 27816  00202A  D006               	goto	i2l2098
 27817  00202C                     i2l2097:
 27818                           
 27819                           ;usb_device.c: 2483: else
 27820                           ;usb_device.c: 2484: {
 27821                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27822  00202C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27823  002030  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27824  002034  0E00               	movlw	0
 27825  002036  8CDB               	bsf	plusw2,6,c
 27826  002038                     i2l2098:
 27827                           
 27828                           ;usb_device.c: 2487: }
 27829                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27830  002038  0E04               	movlw	4
 27831  00203A  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27832                           
 27833                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27834  00203C  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27835  00203E  D006               	goto	i2u637_40
 27836  002040  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27837  002044  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27838  002048  AEDF               	btfss	indf2,7,c
 27839  00204A  D030               	goto	i2l2099
 27840  00204C                     i2u637_40:
 27841                           
 27842                           ;usb_device.c: 2498: {
 27843                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27844  00204C  0104               	movlb	4	; () banked
 27845  00204E  BF34               	btfsc	52,7,b	;volatile
 27846  002050  D00A               	goto	i2l2102
 27847                           
 27848                           ; BSR set to: 4
 27849                           ;usb_device.c: 2500: {
 27850                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27851  002052  5134               	movf	52,w,b	;volatile
 27852  002054  0B0F               	andlw	15
 27853  002056  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27854  002058  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27855  00205A  0D01               	mullw	1
 27856  00205C  0ED0               	movlw	low _ep_data_out
 27857  00205E  24F3               	addwf	prodl,w,c
 27858  002060  6ED9               	movwf	fsr2l,c
 27859  002062  0E00               	movlw	high _ep_data_out
 27860  002064  D00A               	goto	L30
 27861  002066                     i2l2102:
 27862                           
 27863                           ;usb_device.c: 2503: else
 27864                           ;usb_device.c: 2504: {
 27865                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27866                           
 27867                           ; BSR set to: 0
 27868  002066  0104               	movlb	4	; () banked
 27869  002068  5134               	movf	52,w,b	;volatile
 27870  00206A  0B0F               	andlw	15
 27871  00206C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27872  00206E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27873  002070  0D01               	mullw	1
 27874  002072  0ED3               	movlw	low _ep_data_in
 27875  002074  24F3               	addwf	prodl,w,c
 27876  002076  6ED9               	movwf	fsr2l,c
 27877  002078  0E00               	movlw	high _ep_data_in
 27878  00207A                     L30:
 27879  00207A  20F4               	addwfc	prodh,w,c
 27880  00207C  6EDA               	movwf	fsr2h,c
 27881  00207E  0100               	movlb	0	; () banked
 27882  002080  92DF               	bcf	indf2,1,c
 27883                           
 27884                           ; BSR set to: 0
 27885                           ;usb_device.c: 2506: }
 27886                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27887                           
 27888                           ; BSR set to: 0
 27889  002082  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27890  002086  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27891  00208A  0E3B               	movlw	59
 27892  00208C  16DF               	andwf	indf2,f,c
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27896  00208E  0E00               	movlw	0
 27897  002090  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27898  002092  0E05               	movlw	5
 27899  002094  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27900  002096  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27901  00209A  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27902  00209E  0E00               	movlw	0
 27903  0020A0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27904  0020A2  0E02               	movlw	2
 27905  0020A4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27906  0020A6  ECBE  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27907                           
 27908                           ;usb_device.c: 2512: }
 27909  0020AA  D006               	goto	i2l2104
 27910  0020AC                     i2l2099:
 27911                           
 27912                           ;usb_device.c: 2513: else
 27913                           ;usb_device.c: 2514: {
 27914                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27915  0020AC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27916  0020B0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27917  0020B4  0E3B               	movlw	59
 27918  0020B6  16DF               	andwf	indf2,f,c
 27919  0020B8                     i2l2104:
 27920                           
 27921                           ;usb_device.c: 2517: }
 27922                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27923  0020B8  0104               	movlb	4	; () banked
 27924  0020BA  5134               	movf	52,w,b	;volatile
 27925  0020BC  0B0F               	andlw	15
 27926  0020BE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27927  0020C0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27928  0020C2  0D01               	mullw	1
 27929  0020C4  0E6A               	movlw	106
 27930  0020C6  24F3               	addwf	prodl,w,c
 27931  0020C8  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27932  0020CA  0E0F               	movlw	15
 27933  0020CC  20F4               	addwfc	prodh,w,c
 27934  0020CE  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27935                           
 27936                           ; BSR set to: 4
 27937                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27938  0020D0  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27939  0020D4  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27940  0020D8  0EFE               	movlw	254
 27941  0020DA  16DF               	andwf	indf2,f,c
 27942                           
 27943                           ; BSR set to: 4
 27944  0020DC  0012               	return	
 27945  0020DE                     __end_of_USBStdFeatureReqHandler:
 27946                           	opt stack 0
 27947                           pclatu	equ	0xFFB
 27948                           pclath	equ	0xFFA
 27949                           tblptru	equ	0xFF8
 27950                           tblptrh	equ	0xFF7
 27951                           tblptrl	equ	0xFF6
 27952                           tablat	equ	0xFF5
 27953                           prodh	equ	0xFF4
 27954                           prodl	equ	0xFF3
 27955                           intcon	equ	0xFF2
 27956                           intcon2	equ	0xFF1
 27957                           intcon3	equ	0xFF0
 27958                           indf0	equ	0xFEF
 27959                           postinc0	equ	0xFEE
 27960                           fsr0h	equ	0xFEA
 27961                           fsr0l	equ	0xFE9
 27962                           wreg	equ	0xFE8
 27963                           indf1	equ	0xFE7
 27964                           postdec1	equ	0xFE5
 27965                           fsr1h	equ	0xFE2
 27966                           fsr1l	equ	0xFE1
 27967                           indf2	equ	0xFDF
 27968                           postinc2	equ	0xFDE
 27969                           postdec2	equ	0xFDD
 27970                           plusw2	equ	0xFDB
 27971                           fsr2h	equ	0xFDA
 27972                           fsr2l	equ	0xFD9
 27973                           status	equ	0xFD8
 27974                           
 27975 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27976 ;; Defined at:
 27977 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;  event           2   13[COMRAM] enum E5981
 27980 ;;  pdata           2   15[COMRAM] PTR void 
 27981 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27982 ;;  size            2   17[COMRAM] unsigned int 
 27983 ;; Auto vars:     Size  Location     Type
 27984 ;;		None
 27985 ;; Return value:  Size  Location     Type
 27986 ;;                  1    wreg      unsigned char 
 27987 ;; Registers used:
 27988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27989 ;; Tracked objects:
 27990 ;;		On entry : 0/0
 27991 ;;		On exit  : 0/0
 27992 ;;		Unchanged: 0/0
 27993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27994 ;;      Params:         6       0       0       0       0       0       0       0       0
 27995 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27996 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27997 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27998 ;;Total ram usage:        8 bytes
 27999 ;; Hardware stack levels used:    1
 28000 ;; Hardware stack levels required when called:    4
 28001 ;; This function calls:
 28002 ;;		_USBCheckCDCRequest
 28003 ;;		_USBapp_CdcEmulatorInitialize
 28004 ;; This function is called by:
 28005 ;;		_USBDeviceTasks
 28006 ;;		_USBStdSetCfgHandler
 28007 ;;		_USBSuspend
 28008 ;;		_USBWakeFromSuspend
 28009 ;;		_USBCtrlTrfSetupHandler
 28010 ;;		_USBCheckStdRequest
 28011 ;;		_USBStdFeatureReqHandler
 28012 ;; This function uses a non-reentrant model
 28013 ;;
 28014                           
 28015                           	psect	text123
 28016  004F7C                     __ptext123:
 28017                           	opt stack 0
 28018  004F7C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28019                           	opt stack 15
 28020                           
 28021                           ;USBapp.c: 310: switch( (int) event )
 28022                           
 28023                           ;incstack = 0
 28024  004F7C  D006               	goto	i2l917
 28025  004F7E                     
 28026                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 28027  004F7E  EC47  F028         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 28028                           
 28029                           ;USBapp.c: 338: break;
 28030                           
 28031                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 28032                           
 28033                           ;USBapp.c: 335: break;
 28034  004F82  0012               	return	
 28035  004F84                     
 28036                           ;USBapp.c: 343: USBCheckCDCRequest();
 28037  004F84  EC2D  F020         	call	_USBCheckCDCRequest	;wreg free
 28038                           
 28039                           ;USBapp.c: 354: }
 28040                           
 28041                           ;USBapp.c: 353: break;
 28042                           
 28043                           ;USBapp.c: 352: default:
 28044                           
 28045                           ;USBapp.c: 350: break;
 28046                           
 28047                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 28048                           
 28049                           ;USBapp.c: 347: break;
 28050                           
 28051                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 28052                           
 28053                           ;USBapp.c: 344: break;
 28054  004F88  0012               	return	
 28055  004F8A                     i2l917:
 28056  004F8A  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28057  004F8E  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28058                           
 28059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28060                           ; Switch size 1, requested type "space"
 28061                           ; Number of cases is 2, Range of values is 0 to 127
 28062                           ; switch strategies available:
 28063                           ; Name         Instructions Cycles
 28064                           ; simple_byte            7     4 (average)
 28065                           ;	Chosen strategy is simple_byte
 28066  004F92  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28067  004F94  0A00               	xorlw	0	; case 0
 28068  004F96  B4D8               	btfsc	status,2,c
 28069  004F98  D004               	goto	i2l12276
 28070  004F9A  0A7F               	xorlw	127	; case 127
 28071  004F9C  A4D8               	btfss	status,2,c
 28072  004F9E  0012               	return	
 28073  004FA0  D018               	goto	i2l12278
 28074  004FA2                     i2l12276:
 28075                           
 28076                           ; Switch size 1, requested type "space"
 28077                           ; Number of cases is 8, Range of values is 1 to 117
 28078                           ; switch strategies available:
 28079                           ; Name         Instructions Cycles
 28080                           ; simple_byte           25    13 (average)
 28081                           ;	Chosen strategy is simple_byte
 28082  004FA2  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28083  004FA4  0A01               	xorlw	1	; case 1
 28084  004FA6  B4D8               	btfsc	status,2,c
 28085  004FA8  D7EA               	goto	i2l923
 28086  004FAA  0A03               	xorlw	3	; case 2
 28087  004FAC  B4D8               	btfsc	status,2,c
 28088  004FAE  0012               	return	
 28089  004FB0  0A01               	xorlw	1	; case 3
 28090  004FB2  B4D8               	btfsc	status,2,c
 28091  004FB4  D7E7               	goto	i2l925
 28092  004FB6  0A06               	xorlw	6	; case 5
 28093  004FB8  B4D8               	btfsc	status,2,c
 28094  004FBA  0012               	return	
 28095  004FBC  0A77               	xorlw	119	; case 114
 28096  004FBE  B4D8               	btfsc	status,2,c
 28097  004FC0  0012               	return	
 28098  004FC2  0A01               	xorlw	1	; case 115
 28099  004FC4  B4D8               	btfsc	status,2,c
 28100  004FC6  0012               	return	
 28101  004FC8  0A07               	xorlw	7	; case 116
 28102  004FCA  B4D8               	btfsc	status,2,c
 28103  004FCC  0012               	return	
 28104  004FCE  0A01               	xorlw	1	; case 117
 28105  004FD0  0012               	return	
 28106  004FD2                     i2l12278:
 28107                           
 28108                           ; Switch size 1, requested type "space"
 28109                           ; Number of cases is 1, Range of values is 255 to 255
 28110                           ; switch strategies available:
 28111                           ; Name         Instructions Cycles
 28112                           ; simple_byte            4     3 (average)
 28113                           ;	Chosen strategy is simple_byte
 28114  004FD2  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28115  004FD4  0AFF               	xorlw	255	; case 255
 28116  004FD6  0012               	return	
 28117  004FD8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28118                           	opt stack 0
 28119                           pclatu	equ	0xFFB
 28120                           pclath	equ	0xFFA
 28121                           tblptru	equ	0xFF8
 28122                           tblptrh	equ	0xFF7
 28123                           tblptrl	equ	0xFF6
 28124                           tablat	equ	0xFF5
 28125                           prodh	equ	0xFF4
 28126                           prodl	equ	0xFF3
 28127                           intcon	equ	0xFF2
 28128                           intcon2	equ	0xFF1
 28129                           intcon3	equ	0xFF0
 28130                           indf0	equ	0xFEF
 28131                           postinc0	equ	0xFEE
 28132                           fsr0h	equ	0xFEA
 28133                           fsr0l	equ	0xFE9
 28134                           wreg	equ	0xFE8
 28135                           indf1	equ	0xFE7
 28136                           postdec1	equ	0xFE5
 28137                           fsr1h	equ	0xFE2
 28138                           fsr1l	equ	0xFE1
 28139                           indf2	equ	0xFDF
 28140                           postinc2	equ	0xFDE
 28141                           postdec2	equ	0xFDD
 28142                           plusw2	equ	0xFDB
 28143                           fsr2h	equ	0xFDA
 28144                           fsr2l	equ	0xFD9
 28145                           status	equ	0xFD8
 28146                           
 28147 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28148 ;; Defined at:
 28149 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28150 ;; Parameters:    Size  Location     Type
 28151 ;;		None
 28152 ;; Auto vars:     Size  Location     Type
 28153 ;;  i               1   12[COMRAM] unsigned char 
 28154 ;; Return value:  Size  Location     Type
 28155 ;;                  1    wreg      void 
 28156 ;; Registers used:
 28157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28158 ;; Tracked objects:
 28159 ;;		On entry : 0/0
 28160 ;;		On exit  : 0/0
 28161 ;;		Unchanged: 0/0
 28162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28163 ;;      Params:         0       0       0       0       0       0       0       0       0
 28164 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28166 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28167 ;;Total ram usage:        1 bytes
 28168 ;; Hardware stack levels used:    1
 28169 ;; Hardware stack levels required when called:    3
 28170 ;; This function calls:
 28171 ;;		_CDCInitEP
 28172 ;;		i2_EUSART_Initialize
 28173 ;; This function is called by:
 28174 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28175 ;; This function uses a non-reentrant model
 28176 ;;
 28177                           
 28178                           	psect	text124
 28179  00508E                     __ptext124:
 28180                           	opt stack 0
 28181  00508E                     _USBapp_CdcEmulatorInitialize:
 28182                           	opt stack 15
 28183                           
 28184                           ;USBapp.c: 147: CDCInitEP();
 28185                           
 28186                           ;incstack = 0
 28187  00508E  ECF9  F026         	call	_CDCInitEP	;wreg free
 28188                           
 28189                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28190  005092  0E00               	movlw	0
 28191  005094  0101               	movlb	1	; () banked
 28192  005096  6FEA               	movwf	(_line_coding+4)& (0+255),b
 28193                           
 28194                           ; BSR set to: 1
 28195                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28196  005098  0E08               	movlw	8
 28197  00509A  6FEC               	movwf	(_line_coding+6)& (0+255),b
 28198                           
 28199                           ; BSR set to: 1
 28200                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28201  00509C  0E00               	movlw	0
 28202  00509E  6FEB               	movwf	(_line_coding+5)& (0+255),b
 28203                           
 28204                           ; BSR set to: 1
 28205                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28206  0050A0  0E00               	movlw	0
 28207  0050A2  6FE6               	movwf	_line_coding& (0+255),b
 28208  0050A4  0E4B               	movlw	75
 28209  0050A6  6FE7               	movwf	(_line_coding+1)& (0+255),b
 28210  0050A8  0E00               	movlw	0
 28211  0050AA  6FE8               	movwf	(_line_coding+2)& (0+255),b
 28212  0050AC  0E00               	movlw	0
 28213  0050AE  6FE9               	movwf	(_line_coding+3)& (0+255),b
 28214                           
 28215                           ; BSR set to: 1
 28216                           ;USBapp.c: 152: EUSART_Initialize();
 28217  0050B0  EC44  F02A         	call	i2_EUSART_Initialize	;wreg free
 28218                           
 28219                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28220  0050B4  0E00               	movlw	0
 28221  0050B6  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28222  0050B8                     i2l7900:
 28223  0050B8  0E3F               	movlw	63
 28224  0050BA  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28225  0050BC  D001               	goto	i2l870
 28226  0050BE  D00C               	goto	i2u571_40
 28227  0050C0                     i2l870:
 28228                           
 28229                           ;USBapp.c: 155: {
 28230                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28231  0050C0  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28232  0050C2  0D01               	mullw	1
 28233  0050C4  0E80               	movlw	low _USB_Buffer
 28234  0050C6  24F3               	addwf	prodl,w,c
 28235  0050C8  6ED9               	movwf	fsr2l,c
 28236  0050CA  0E02               	movlw	high _USB_Buffer
 28237  0050CC  20F4               	addwfc	prodh,w,c
 28238  0050CE  6EDA               	movwf	fsr2h,c
 28239  0050D0  0E00               	movlw	0
 28240  0050D2  6EDF               	movwf	indf2,c
 28241  0050D4  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28242  0050D6  D7F0               	goto	i2l7900
 28243  0050D8                     i2u571_40:
 28244                           
 28245                           ;USBapp.c: 157: }
 28246                           ;USBapp.c: 158: NextUSBOut = 0;
 28247  0050D8  0E00               	movlw	0
 28248  0050DA  0100               	movlb	0	; () banked
 28249  0050DC  6FE8               	movwf	_NextUSBOut& (0+255),b
 28250                           
 28251                           ;USBapp.c: 159: LastRS232Out = 0;
 28252  0050DE  0E00               	movlw	0
 28253  0050E0  6FE6               	movwf	_LastRS232Out& (0+255),b
 28254                           
 28255                           ; BSR set to: 0
 28256  0050E2  0012               	return		;funcret
 28257  0050E4                     __end_of_USBapp_CdcEmulatorInitialize:
 28258                           	opt stack 0
 28259                           pclatu	equ	0xFFB
 28260                           pclath	equ	0xFFA
 28261                           tblptru	equ	0xFF8
 28262                           tblptrh	equ	0xFF7
 28263                           tblptrl	equ	0xFF6
 28264                           tablat	equ	0xFF5
 28265                           prodh	equ	0xFF4
 28266                           prodl	equ	0xFF3
 28267                           intcon	equ	0xFF2
 28268                           intcon2	equ	0xFF1
 28269                           intcon3	equ	0xFF0
 28270                           indf0	equ	0xFEF
 28271                           postinc0	equ	0xFEE
 28272                           fsr0h	equ	0xFEA
 28273                           fsr0l	equ	0xFE9
 28274                           wreg	equ	0xFE8
 28275                           indf1	equ	0xFE7
 28276                           postdec1	equ	0xFE5
 28277                           fsr1h	equ	0xFE2
 28278                           fsr1l	equ	0xFE1
 28279                           indf2	equ	0xFDF
 28280                           postinc2	equ	0xFDE
 28281                           postdec2	equ	0xFDD
 28282                           plusw2	equ	0xFDB
 28283                           fsr2h	equ	0xFDA
 28284                           fsr2l	equ	0xFD9
 28285                           status	equ	0xFD8
 28286                           
 28287 ;; *************** function _CDCInitEP *****************
 28288 ;; Defined at:
 28289 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28290 ;; Parameters:    Size  Location     Type
 28291 ;;		None
 28292 ;; Auto vars:     Size  Location     Type
 28293 ;;		None
 28294 ;; Return value:  Size  Location     Type
 28295 ;;                  1    wreg      void 
 28296 ;; Registers used:
 28297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28298 ;; Tracked objects:
 28299 ;;		On entry : 0/0
 28300 ;;		On exit  : 0/0
 28301 ;;		Unchanged: 0/0
 28302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28303 ;;      Params:         0       0       0       0       0       0       0       0       0
 28304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28306 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28307 ;;Total ram usage:        0 bytes
 28308 ;; Hardware stack levels used:    1
 28309 ;; Hardware stack levels required when called:    2
 28310 ;; This function calls:
 28311 ;;		_USBEnableEndpoint
 28312 ;;		i2_USBTransferOnePacket
 28313 ;; This function is called by:
 28314 ;;		_USBapp_CdcEmulatorInitialize
 28315 ;; This function uses a non-reentrant model
 28316 ;;
 28317                           
 28318                           	psect	text125
 28319  004DF2                     __ptext125:
 28320                           	opt stack 0
 28321  004DF2                     _CDCInitEP:
 28322                           	opt stack 15
 28323                           
 28324                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;incstack = 0
 28328  004DF2  0E00               	movlw	0
 28329  004DF4  0101               	movlb	1	; () banked
 28330  004DF6  6FE6               	movwf	_line_coding& (0+255),b
 28331  004DF8  0E4B               	movlw	75
 28332  004DFA  6FE7               	movwf	(_line_coding+1)& (0+255),b
 28333  004DFC  0E00               	movlw	0
 28334  004DFE  6FE8               	movwf	(_line_coding+2)& (0+255),b
 28335  004E00  0E00               	movlw	0
 28336  004E02  6FE9               	movwf	(_line_coding+3)& (0+255),b
 28337                           
 28338                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28339  004E04  0E00               	movlw	0
 28340  004E06  6FEA               	movwf	(_line_coding+4)& (0+255),b
 28341                           
 28342                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28343  004E08  0E00               	movlw	0
 28344  004E0A  6FEB               	movwf	(_line_coding+5)& (0+255),b
 28345                           
 28346                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28347  004E0C  0E08               	movlw	8
 28348  004E0E  6FEC               	movwf	(_line_coding+6)& (0+255),b
 28349                           
 28350                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28351  004E10  0E00               	movlw	0
 28352  004E12  0100               	movlb	0	; () banked
 28353  004E14  6FDE               	movwf	_cdc_rx_len& (0+255),b
 28354                           
 28355                           ; BSR set to: 0
 28356                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28357  004E16  0E1A               	movlw	26
 28358  004E18  6E09               	movwf	USBEnableEndpoint@options,c
 28359  004E1A  0E01               	movlw	1
 28360  004E1C  ECED  F029         	call	_USBEnableEndpoint
 28361                           
 28362                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28363  004E20  0E1E               	movlw	30
 28364  004E22  6E09               	movwf	USBEnableEndpoint@options,c
 28365  004E24  0E02               	movlw	2
 28366  004E26  ECED  F029         	call	_USBEnableEndpoint
 28367                           
 28368                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28369  004E2A  0E00               	movlw	0
 28370  004E2C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28371  004E2E  0E40               	movlw	64
 28372  004E30  6E02               	movwf	i2USBTransferOnePacket@data,c
 28373  004E32  0E05               	movlw	5
 28374  004E34  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28375  004E36  0E40               	movlw	64
 28376  004E38  6E04               	movwf	i2USBTransferOnePacket@len,c
 28377  004E3A  0E02               	movlw	2
 28378  004E3C  ECBF  F01E         	call	i2_USBTransferOnePacket
 28379  004E40  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28380  004E44  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28381                           
 28382                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28383  004E48  0E00               	movlw	0
 28384  004E4A  6E33               	movwf	_CDCDataInHandle,c
 28385  004E4C  0E00               	movlw	0
 28386  004E4E  6E34               	movwf	_CDCDataInHandle+1,c
 28387                           
 28388                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28389  004E50  0E00               	movlw	0
 28390  004E52  0100               	movlb	0	; () banked
 28391  004E54  6FEB               	movwf	_cdc_trf_state& (0+255),b
 28392                           
 28393                           ; BSR set to: 0
 28394  004E56  0012               	return		;funcret
 28395  004E58                     __end_of_CDCInitEP:
 28396                           	opt stack 0
 28397                           pclatu	equ	0xFFB
 28398                           pclath	equ	0xFFA
 28399                           tblptru	equ	0xFF8
 28400                           tblptrh	equ	0xFF7
 28401                           tblptrl	equ	0xFF6
 28402                           tablat	equ	0xFF5
 28403                           prodh	equ	0xFF4
 28404                           prodl	equ	0xFF3
 28405                           intcon	equ	0xFF2
 28406                           intcon2	equ	0xFF1
 28407                           intcon3	equ	0xFF0
 28408                           indf0	equ	0xFEF
 28409                           postinc0	equ	0xFEE
 28410                           fsr0h	equ	0xFEA
 28411                           fsr0l	equ	0xFE9
 28412                           wreg	equ	0xFE8
 28413                           indf1	equ	0xFE7
 28414                           postdec1	equ	0xFE5
 28415                           fsr1h	equ	0xFE2
 28416                           fsr1l	equ	0xFE1
 28417                           indf2	equ	0xFDF
 28418                           postinc2	equ	0xFDE
 28419                           postdec2	equ	0xFDD
 28420                           plusw2	equ	0xFDB
 28421                           fsr2h	equ	0xFDA
 28422                           fsr2l	equ	0xFD9
 28423                           status	equ	0xFD8
 28424                           
 28425 ;; *************** function i2_USBTransferOnePacket *****************
 28426 ;; Defined at:
 28427 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28428 ;; Parameters:    Size  Location     Type
 28429 ;;  ep              1    wreg     unsigned char 
 28430 ;;  dir             1    0[COMRAM] unsigned char 
 28431 ;;  data            2    1[COMRAM] PTR unsigned char 
 28432 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28433 ;;  len             1    3[COMRAM] unsigned char 
 28434 ;; Auto vars:     Size  Location     Type
 28435 ;;  ep              1    4[COMRAM] unsigned char 
 28436 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28437 ;;		 -> BDT(48), NULL(0), 
 28438 ;; Return value:  Size  Location     Type
 28439 ;;                  2    0[COMRAM] PTR void 
 28440 ;; Registers used:
 28441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28442 ;; Tracked objects:
 28443 ;;		On entry : 0/0
 28444 ;;		On exit  : 0/0
 28445 ;;		Unchanged: 0/0
 28446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28447 ;;      Params:         4       0       0       0       0       0       0       0       0
 28448 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28450 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28451 ;;Total ram usage:        7 bytes
 28452 ;; Hardware stack levels used:    1
 28453 ;; This function calls:
 28454 ;;		Nothing
 28455 ;; This function is called by:
 28456 ;;		_CDCInitEP
 28457 ;; This function uses a non-reentrant model
 28458 ;;
 28459                           
 28460                           	psect	text126
 28461  003D7E                     __ptext126:
 28462                           	opt stack 0
 28463  003D7E                     i2_USBTransferOnePacket:
 28464                           	opt stack 16
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;incstack = 0
 28468                           ;i2USBTransferOnePacket@ep stored from wreg
 28469  003D7E  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28470                           
 28471                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28472                           ;usb_device.c: 762: if(dir != 0)
 28473  003D80  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28474  003D82  B4D8               	btfsc	status,2,c
 28475  003D84  D007               	goto	i2l1893
 28476                           
 28477                           ;usb_device.c: 763: {
 28478                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28479  003D86  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28480  003D88  0D02               	mullw	2
 28481  003D8A  0ECA               	movlw	low _pBDTEntryIn
 28482  003D8C  24F3               	addwf	prodl,w,c
 28483  003D8E  6ED9               	movwf	fsr2l,c
 28484  003D90  0E00               	movlw	high _pBDTEntryIn
 28485  003D92  D006               	goto	L31
 28486  003D94                     i2l1893:
 28487                           
 28488                           ;usb_device.c: 767: else
 28489                           ;usb_device.c: 768: {
 28490                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28491  003D94  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28492  003D96  0D02               	mullw	2
 28493  003D98  0E40               	movlw	low _pBDTEntryOut
 28494  003D9A  24F3               	addwf	prodl,w,c
 28495  003D9C  6ED9               	movwf	fsr2l,c
 28496  003D9E  0E01               	movlw	high _pBDTEntryOut
 28497  003DA0                     L31:
 28498  003DA0  20F4               	addwfc	prodh,w,c
 28499  003DA2  6EDA               	movwf	fsr2h,c
 28500  003DA4  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28501  003DA8  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28502                           
 28503                           ;usb_device.c: 771: }
 28504                           ;usb_device.c: 775: if(handle == 0)
 28505  003DAC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28506  003DAE  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28507  003DB0  A4D8               	btfss	status,2,c
 28508  003DB2  D005               	goto	i2l1895
 28509                           
 28510                           ;usb_device.c: 776: {
 28511                           ;usb_device.c: 777: return 0;
 28512  003DB4  0E00               	movlw	0
 28513  003DB6  6E01               	movwf	?i2_USBTransferOnePacket,c
 28514  003DB8  0E00               	movlw	0
 28515  003DBA  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28516  003DBC  0012               	return	
 28517  003DBE                     i2l1895:
 28518                           
 28519                           ;usb_device.c: 778: }
 28520                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28521  003DBE  EE20 F002          	lfsr	2,2
 28522  003DC2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28523  003DC4  26D9               	addwf	fsr2l,f,c
 28524  003DC6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28525  003DC8  22DA               	addwfc	fsr2h,f,c
 28526  003DCA  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28527  003DCE  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28528                           
 28529                           ;usb_device.c: 781: handle->CNT = len;
 28530  003DD2  EE20 F001          	lfsr	2,1
 28531  003DD6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28532  003DD8  26D9               	addwf	fsr2l,f,c
 28533  003DDA  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28534  003DDC  22DA               	addwfc	fsr2h,f,c
 28535  003DDE  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28536                           
 28537                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28538  003DE2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28539  003DE6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28540  003DEA  0E40               	movlw	64
 28541  003DEC  16DF               	andwf	indf2,f,c
 28542                           
 28543                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28544  003DEE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28545  003DF2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28546  003DF6  0E00               	movlw	0
 28547  003DF8  86DB               	bsf	plusw2,3,c
 28548                           
 28549                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28550  003DFA  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28551  003DFE  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28552  003E02  0E00               	movlw	0
 28553  003E04  8EDB               	bsf	plusw2,7,c
 28554                           
 28555                           ;usb_device.c: 787: if(dir != 0)
 28556  003E06  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28557  003E08  B4D8               	btfsc	status,2,c
 28558  003E0A  D007               	goto	i2l1897
 28559                           
 28560                           ;usb_device.c: 788: {
 28561                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28562  003E0C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28563  003E0E  0D02               	mullw	2
 28564  003E10  0ECA               	movlw	low _pBDTEntryIn
 28565  003E12  24F3               	addwf	prodl,w,c
 28566  003E14  6ED9               	movwf	fsr2l,c
 28567  003E16  0E00               	movlw	high _pBDTEntryIn
 28568  003E18  D006               	goto	L32
 28569  003E1A                     i2l1897:
 28570                           
 28571                           ;usb_device.c: 792: else
 28572                           ;usb_device.c: 793: {
 28573                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28574  003E1A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28575  003E1C  0D02               	mullw	2
 28576  003E1E  0E40               	movlw	low _pBDTEntryOut
 28577  003E20  24F3               	addwf	prodl,w,c
 28578  003E22  6ED9               	movwf	fsr2l,c
 28579  003E24  0E01               	movlw	high _pBDTEntryOut
 28580  003E26                     L32:
 28581  003E26  20F4               	addwfc	prodh,w,c
 28582  003E28  6EDA               	movwf	fsr2h,c
 28583  003E2A  0E04               	movlw	4
 28584  003E2C  1ADF               	xorwf	indf2,f,c
 28585                           
 28586                           ;usb_device.c: 796: }
 28587                           ;usb_device.c: 797: return (void*)handle;
 28588  003E2E  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28589  003E32  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28590  003E36  0012               	return	
 28591  003E38                     __end_ofi2_USBTransferOnePacket:
 28592                           	opt stack 0
 28593                           pclatu	equ	0xFFB
 28594                           pclath	equ	0xFFA
 28595                           tblptru	equ	0xFF8
 28596                           tblptrh	equ	0xFF7
 28597                           tblptrl	equ	0xFF6
 28598                           tablat	equ	0xFF5
 28599                           prodh	equ	0xFF4
 28600                           prodl	equ	0xFF3
 28601                           intcon	equ	0xFF2
 28602                           intcon2	equ	0xFF1
 28603                           intcon3	equ	0xFF0
 28604                           indf0	equ	0xFEF
 28605                           postinc0	equ	0xFEE
 28606                           fsr0h	equ	0xFEA
 28607                           fsr0l	equ	0xFE9
 28608                           wreg	equ	0xFE8
 28609                           indf1	equ	0xFE7
 28610                           postdec1	equ	0xFE5
 28611                           fsr1h	equ	0xFE2
 28612                           fsr1l	equ	0xFE1
 28613                           indf2	equ	0xFDF
 28614                           postinc2	equ	0xFDE
 28615                           postdec2	equ	0xFDD
 28616                           plusw2	equ	0xFDB
 28617                           fsr2h	equ	0xFDA
 28618                           fsr2l	equ	0xFD9
 28619                           status	equ	0xFD8
 28620                           
 28621 ;; *************** function _USBEnableEndpoint *****************
 28622 ;; Defined at:
 28623 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28624 ;; Parameters:    Size  Location     Type
 28625 ;;  ep              1    wreg     unsigned char 
 28626 ;;  options         1    8[COMRAM] unsigned char 
 28627 ;; Auto vars:     Size  Location     Type
 28628 ;;  ep              1   11[COMRAM] unsigned char 
 28629 ;;  p               2    9[COMRAM] PTR unsigned char 
 28630 ;;		 -> UEP0(1), 
 28631 ;; Return value:  Size  Location     Type
 28632 ;;                  1    wreg      void 
 28633 ;; Registers used:
 28634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28635 ;; Tracked objects:
 28636 ;;		On entry : 0/0
 28637 ;;		On exit  : 0/0
 28638 ;;		Unchanged: 0/0
 28639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28640 ;;      Params:         1       0       0       0       0       0       0       0       0
 28641 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28643 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28644 ;;Total ram usage:        4 bytes
 28645 ;; Hardware stack levels used:    1
 28646 ;; Hardware stack levels required when called:    1
 28647 ;; This function calls:
 28648 ;;		_USBConfigureEndpoint
 28649 ;; This function is called by:
 28650 ;;		_CDCInitEP
 28651 ;; This function uses a non-reentrant model
 28652 ;;
 28653                           
 28654                           	psect	text127
 28655  0053DA                     __ptext127:
 28656                           	opt stack 0
 28657  0053DA                     _USBEnableEndpoint:
 28658                           	opt stack 15
 28659                           
 28660                           ;incstack = 0
 28661                           ;USBEnableEndpoint@ep stored from wreg
 28662  0053DA  6E0C               	movwf	USBEnableEndpoint@ep,c
 28663                           
 28664                           ;usb_device.c: 647: unsigned char* p;
 28665                           ;usb_device.c: 651: if(options & 0x04)
 28666  0053DC  A409               	btfss	USBEnableEndpoint@options,2,c
 28667  0053DE  D005               	goto	i2l1888
 28668                           
 28669                           ;usb_device.c: 652: {
 28670                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28671  0053E0  0E00               	movlw	0
 28672  0053E2  6E01               	movwf	USBConfigureEndpoint@direction,c
 28673  0053E4  500C               	movf	USBEnableEndpoint@ep,w,c
 28674  0053E6  EC20  F022         	call	_USBConfigureEndpoint
 28675  0053EA                     i2l1888:
 28676                           
 28677                           ;usb_device.c: 654: }
 28678                           ;usb_device.c: 655: if(options & 0x02)
 28679  0053EA  A209               	btfss	USBEnableEndpoint@options,1,c
 28680  0053EC  D005               	goto	i2l1889
 28681                           
 28682                           ;usb_device.c: 656: {
 28683                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28684  0053EE  0E01               	movlw	1
 28685  0053F0  6E01               	movwf	USBConfigureEndpoint@direction,c
 28686  0053F2  500C               	movf	USBEnableEndpoint@ep,w,c
 28687  0053F4  EC20  F022         	call	_USBConfigureEndpoint
 28688  0053F8                     i2l1889:
 28689                           
 28690                           ;usb_device.c: 658: }
 28691                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28692  0053F8  500C               	movf	USBEnableEndpoint@ep,w,c
 28693  0053FA  0D01               	mullw	1
 28694  0053FC  0E6A               	movlw	106
 28695  0053FE  24F3               	addwf	prodl,w,c
 28696  005400  6E0A               	movwf	USBEnableEndpoint@p,c
 28697  005402  0E0F               	movlw	15
 28698  005404  20F4               	addwfc	prodh,w,c
 28699  005406  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28700                           
 28701                           ;usb_device.c: 664: *p = options;
 28702  005408  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28703  00540C  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28704  005410  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28705  005414  0012               	return		;funcret
 28706  005416                     __end_of_USBEnableEndpoint:
 28707                           	opt stack 0
 28708                           pclatu	equ	0xFFB
 28709                           pclath	equ	0xFFA
 28710                           tblptru	equ	0xFF8
 28711                           tblptrh	equ	0xFF7
 28712                           tblptrl	equ	0xFF6
 28713                           tablat	equ	0xFF5
 28714                           prodh	equ	0xFF4
 28715                           prodl	equ	0xFF3
 28716                           intcon	equ	0xFF2
 28717                           intcon2	equ	0xFF1
 28718                           intcon3	equ	0xFF0
 28719                           indf0	equ	0xFEF
 28720                           postinc0	equ	0xFEE
 28721                           fsr0h	equ	0xFEA
 28722                           fsr0l	equ	0xFE9
 28723                           wreg	equ	0xFE8
 28724                           indf1	equ	0xFE7
 28725                           postdec1	equ	0xFE5
 28726                           fsr1h	equ	0xFE2
 28727                           fsr1l	equ	0xFE1
 28728                           indf2	equ	0xFDF
 28729                           postinc2	equ	0xFDE
 28730                           postdec2	equ	0xFDD
 28731                           plusw2	equ	0xFDB
 28732                           fsr2h	equ	0xFDA
 28733                           fsr2l	equ	0xFD9
 28734                           status	equ	0xFD8
 28735                           
 28736 ;; *************** function _USBConfigureEndpoint *****************
 28737 ;; Defined at:
 28738 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28739 ;; Parameters:    Size  Location     Type
 28740 ;;  EPNum           1    wreg     unsigned char 
 28741 ;;  direction       1    0[COMRAM] unsigned char 
 28742 ;; Auto vars:     Size  Location     Type
 28743 ;;  EPNum           1    5[COMRAM] unsigned char 
 28744 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28745 ;;		 -> BDT(48), 
 28746 ;; Return value:  Size  Location     Type
 28747 ;;                  1    wreg      void 
 28748 ;; Registers used:
 28749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28750 ;; Tracked objects:
 28751 ;;		On entry : 0/0
 28752 ;;		On exit  : 0/0
 28753 ;;		Unchanged: 0/0
 28754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28755 ;;      Params:         1       0       0       0       0       0       0       0       0
 28756 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28757 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28758 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28759 ;;Total ram usage:        8 bytes
 28760 ;; Hardware stack levels used:    1
 28761 ;; This function calls:
 28762 ;;		Nothing
 28763 ;; This function is called by:
 28764 ;;		_USBEnableEndpoint
 28765 ;; This function uses a non-reentrant model
 28766 ;;
 28767                           
 28768                           	psect	text128
 28769  004440                     __ptext128:
 28770                           	opt stack 0
 28771  004440                     _USBConfigureEndpoint:
 28772                           	opt stack 15
 28773                           
 28774                           ;incstack = 0
 28775                           ;USBConfigureEndpoint@EPNum stored from wreg
 28776  004440  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28777                           
 28778                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28779                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28780  004442  0E00               	movlw	0
 28781  004444  6E07               	movwf	USBConfigureEndpoint@handle,c
 28782  004446  0E04               	movlw	4
 28783  004448  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28784                           
 28785                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28786  00444A  5001               	movf	USBConfigureEndpoint@direction,w,c
 28787  00444C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28788  00444E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28789  004450  90D8               	bcf	status,0,c
 28790  004452  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28791  004454  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28792  004456  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28793  004458  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28794  00445A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28795  00445C  90D8               	bcf	status,0,c
 28796  00445E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28797  004460  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28798  004462  90D8               	bcf	status,0,c
 28799  004464  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28800  004466  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28801  004468  5002               	movf	??_USBConfigureEndpoint,w,c
 28802  00446A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28803  00446C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28804  00446E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28805  004470  90D8               	bcf	status,0,c
 28806  004472  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28807  004474  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28808  004476  90D8               	bcf	status,0,c
 28809  004478  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28810  00447A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28811  00447C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28812  00447E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28813  004480  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28814  004482  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28815                           
 28816                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28817  004484  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28818  004488  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28819  00448C  9EDF               	bcf	indf2,7,c
 28820                           
 28821                           ;usb_device.c: 1242: if(direction == 0)
 28822  00448E  5001               	movf	USBConfigureEndpoint@direction,w,c
 28823  004490  A4D8               	btfss	status,2,c
 28824  004492  D007               	goto	i2l1935
 28825                           
 28826                           ;usb_device.c: 1243: {
 28827                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28828  004494  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28829  004496  0D02               	mullw	2
 28830  004498  0E40               	movlw	low _pBDTEntryOut
 28831  00449A  24F3               	addwf	prodl,w,c
 28832  00449C  6ED9               	movwf	fsr2l,c
 28833  00449E  0E01               	movlw	high _pBDTEntryOut
 28834  0044A0  D006               	goto	L33
 28835  0044A2                     i2l1935:
 28836                           
 28837                           ;usb_device.c: 1246: else
 28838                           ;usb_device.c: 1247: {
 28839                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28840  0044A2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28841  0044A4  0D02               	mullw	2
 28842  0044A6  0ECA               	movlw	low _pBDTEntryIn
 28843  0044A8  24F3               	addwf	prodl,w,c
 28844  0044AA  6ED9               	movwf	fsr2l,c
 28845  0044AC  0E00               	movlw	high _pBDTEntryIn
 28846  0044AE                     L33:
 28847  0044AE  20F4               	addwfc	prodh,w,c
 28848  0044B0  6EDA               	movwf	fsr2h,c
 28849  0044B2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28850  0044B6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28851                           
 28852                           ;usb_device.c: 1249: }
 28853                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28854  0044BA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28855  0044BE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28856  0044C2  9CDF               	bcf	indf2,6,c
 28857                           
 28858                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28859  0044C4  EE20 F004          	lfsr	2,4
 28860  0044C8  5007               	movf	USBConfigureEndpoint@handle,w,c
 28861  0044CA  26D9               	addwf	fsr2l,f,c
 28862  0044CC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28863  0044CE  22DA               	addwfc	fsr2h,f,c
 28864  0044D0  8CDF               	bsf	indf2,6,c
 28865  0044D2  0012               	return		;funcret
 28866  0044D4                     __end_of_USBConfigureEndpoint:
 28867                           	opt stack 0
 28868                           pclatu	equ	0xFFB
 28869                           pclath	equ	0xFFA
 28870                           tblptru	equ	0xFF8
 28871                           tblptrh	equ	0xFF7
 28872                           tblptrl	equ	0xFF6
 28873                           tablat	equ	0xFF5
 28874                           prodh	equ	0xFF4
 28875                           prodl	equ	0xFF3
 28876                           intcon	equ	0xFF2
 28877                           intcon2	equ	0xFF1
 28878                           intcon3	equ	0xFF0
 28879                           indf0	equ	0xFEF
 28880                           postinc0	equ	0xFEE
 28881                           fsr0h	equ	0xFEA
 28882                           fsr0l	equ	0xFE9
 28883                           wreg	equ	0xFE8
 28884                           indf1	equ	0xFE7
 28885                           postdec1	equ	0xFE5
 28886                           fsr1h	equ	0xFE2
 28887                           fsr1l	equ	0xFE1
 28888                           indf2	equ	0xFDF
 28889                           postinc2	equ	0xFDE
 28890                           postdec2	equ	0xFDD
 28891                           plusw2	equ	0xFDB
 28892                           fsr2h	equ	0xFDA
 28893                           fsr2l	equ	0xFD9
 28894                           status	equ	0xFD8
 28895                           
 28896 ;; *************** function _USBCheckCDCRequest *****************
 28897 ;; Defined at:
 28898 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28899 ;; Parameters:    Size  Location     Type
 28900 ;;		None
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;		None
 28903 ;; Return value:  Size  Location     Type
 28904 ;;                  1    wreg      void 
 28905 ;; Registers used:
 28906 ;;		wreg, status,2, status,0
 28907 ;; Tracked objects:
 28908 ;;		On entry : 0/0
 28909 ;;		On exit  : 0/0
 28910 ;;		Unchanged: 0/0
 28911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28912 ;;      Params:         0       0       0       0       0       0       0       0       0
 28913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28915 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28916 ;;Total ram usage:        0 bytes
 28917 ;; Hardware stack levels used:    1
 28918 ;; This function calls:
 28919 ;;		Nothing
 28920 ;; This function is called by:
 28921 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28922 ;; This function uses a non-reentrant model
 28923 ;;
 28924                           
 28925                           	psect	text129
 28926  00405A                     __ptext129:
 28927                           	opt stack 0
 28928  00405A                     _USBCheckCDCRequest:
 28929                           	opt stack 18
 28930                           
 28931                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28932                           
 28933                           ;incstack = 0
 28934  00405A  0104               	movlb	4	; () banked
 28935  00405C  5130               	movf	48,w,b	;volatile
 28936  00405E  0B1F               	andlw	31
 28937  004060  06E8               	decf	wreg,f,c
 28938  004062  A4D8               	btfss	status,2,c
 28939  004064  0012               	return	
 28940                           
 28941                           ; BSR set to: 4
 28942                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28943                           
 28944                           ; BSR set to: 4
 28945                           
 28946                           ; BSR set to: 4
 28947  004066  3930               	swapf	48,w,b	;volatile
 28948  004068  32E8               	rrcf	wreg,f,c
 28949  00406A  0B03               	andlw	3
 28950  00406C  06E8               	decf	wreg,f,c
 28951  00406E  A4D8               	btfss	status,2,c
 28952  004070  0012               	return	
 28953                           
 28954                           ; BSR set to: 4
 28955                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28956                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28957                           
 28958                           ; BSR set to: 4
 28959                           
 28960                           ; BSR set to: 4
 28961  004072  5134               	movf	52,w,b	;volatile
 28962  004074  B4D8               	btfsc	status,2,c
 28963  004076  D037               	goto	i2l2156
 28964                           
 28965                           ; BSR set to: 4
 28966  004078  0534               	decf	52,w,b	;volatile
 28967  00407A  A4D8               	btfss	status,2,c
 28968  00407C  0012               	return	
 28969  00407E  D033               	goto	i2l2156
 28970  004080                     
 28971                           ; BSR set to: 4
 28972                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28973                           
 28974                           ; BSR set to: 4
 28975  004080  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 28976  004082  0100               	movlb	0	; () banked
 28977  004084  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28978  004086  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28979  004088  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 28983  00408A  0E00               	movlw	0
 28984  00408C  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28985  00408E  0E08               	movlw	8
 28986  004090  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28987                           
 28988                           ; BSR set to: 0
 28989                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28990  004092  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28991                           
 28992                           ; BSR set to: 0
 28993                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 28994  004094  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28995                           
 28996                           ;usb_device_cdc.c: 212: break;
 28997  004096  0012               	return	
 28998  004098                     
 28999                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29000                           
 29001                           ; BSR set to: 0
 29002  004098  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 29003  00409A  0100               	movlb	0	; () banked
 29004  00409C  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29005  00409E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29006  0040A0  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 29010  0040A2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29011                           
 29012                           ;usb_device_cdc.c: 217: break;
 29013  0040A4  0012               	return	
 29014  0040A6                     i2l2160:
 29015                           
 29016                           ; BSR set to: 4
 29017                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 29018  0040A6  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 29019  0040AA  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 29020                           
 29021                           ; BSR set to: 4
 29022                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 29023  0040AE  0ED4               	movlw	low _cdc_notice
 29024  0040B0  0100               	movlb	0	; () banked
 29025  0040B2  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 29026  0040B4  0E01               	movlw	high _cdc_notice
 29027  0040B6  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 29028                           
 29029                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 29030  0040B8  0E34               	movlw	low _USART_mySetLineCodingHandler
 29031  0040BA  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 29032  0040BC  0E50               	movlw	high _USART_mySetLineCodingHandler
 29033  0040BE  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 29037  0040C0  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 29038                           
 29039                           ;usb_device_cdc.c: 224: break;
 29040  0040C2  0012               	return	
 29041  0040C4                     
 29042                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29043                           
 29044                           ; BSR set to: 0
 29045  0040C4  0EE6               	movlw	low _line_coding
 29046  0040C6  0100               	movlb	0	; () banked
 29047  0040C8  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29048  0040CA  0E01               	movlw	high _line_coding
 29049  0040CC  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29050                           
 29051                           ; BSR set to: 0
 29052  0040CE  0E00               	movlw	0
 29053  0040D0  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29054  0040D2  0E07               	movlw	7
 29055  0040D4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29056                           
 29057                           ; BSR set to: 0
 29058  0040D6  0EC1               	movlw	193
 29059  0040D8  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29060                           
 29061                           ;usb_device_cdc.c: 231: break;
 29062  0040DA  0012               	return	
 29063  0040DC                     i2l2162:
 29064                           
 29065                           ; BSR set to: 4
 29066                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29067  0040DC  C432 F15C          	movff	1074,_control_signal_bitmap	;volatile
 29068                           
 29069                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29070  0040E0  0100               	movlb	0	; () banked
 29071  0040E2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29072                           
 29073                           ; BSR set to: 0
 29074                           ;usb_device_cdc.c: 260: }
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;usb_device_cdc.c: 259: break;
 29078                           
 29079                           ;usb_device_cdc.c: 258: default:
 29080                           
 29081                           ;usb_device_cdc.c: 256: break;
 29082  0040E4  0012               	return	
 29083  0040E6                     i2l2156:
 29084                           
 29085                           ; BSR set to: 0
 29086  0040E6  0104               	movlb	4	; () banked
 29087  0040E8  5131               	movf	49,w,b	;volatile
 29088                           
 29089                           ; Switch size 1, requested type "space"
 29090                           ; Number of cases is 5, Range of values is 0 to 34
 29091                           ; switch strategies available:
 29092                           ; Name         Instructions Cycles
 29093                           ; simple_byte           16     9 (average)
 29094                           ;	Chosen strategy is simple_byte
 29095  0040EA  0A00               	xorlw	0	; case 0
 29096  0040EC  B4D8               	btfsc	status,2,c
 29097  0040EE  D7C8               	goto	i2l2157
 29098  0040F0  0A01               	xorlw	1	; case 1
 29099  0040F2  B4D8               	btfsc	status,2,c
 29100  0040F4  D7D1               	goto	i2l2159
 29101  0040F6  0A21               	xorlw	33	; case 32
 29102  0040F8  B4D8               	btfsc	status,2,c
 29103  0040FA  D7D5               	goto	i2l2160
 29104  0040FC  0A01               	xorlw	1	; case 33
 29105  0040FE  B4D8               	btfsc	status,2,c
 29106  004100  D7E1               	goto	i2l2161
 29107  004102  0A03               	xorlw	3	; case 34
 29108  004104  A4D8               	btfss	status,2,c
 29109  004106  0012               	return	
 29110  004108  D7E9               	goto	i2l2162
 29111  00410A                     __end_of_USBCheckCDCRequest:
 29112                           	opt stack 0
 29113                           pclatu	equ	0xFFB
 29114                           pclath	equ	0xFFA
 29115                           tblptru	equ	0xFF8
 29116                           tblptrh	equ	0xFF7
 29117                           tblptrl	equ	0xFF6
 29118                           tablat	equ	0xFF5
 29119                           prodh	equ	0xFF4
 29120                           prodl	equ	0xFF3
 29121                           intcon	equ	0xFF2
 29122                           intcon2	equ	0xFF1
 29123                           intcon3	equ	0xFF0
 29124                           indf0	equ	0xFEF
 29125                           postinc0	equ	0xFEE
 29126                           fsr0h	equ	0xFEA
 29127                           fsr0l	equ	0xFE9
 29128                           wreg	equ	0xFE8
 29129                           indf1	equ	0xFE7
 29130                           postdec1	equ	0xFE5
 29131                           fsr1h	equ	0xFE2
 29132                           fsr1l	equ	0xFE1
 29133                           indf2	equ	0xFDF
 29134                           postinc2	equ	0xFDE
 29135                           postdec2	equ	0xFDD
 29136                           plusw2	equ	0xFDB
 29137                           fsr2h	equ	0xFDA
 29138                           fsr2l	equ	0xFD9
 29139                           status	equ	0xFD8
 29140                           
 29141 ;; *************** function _USBCtrlTrfOutHandler *****************
 29142 ;; Defined at:
 29143 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29144 ;; Parameters:    Size  Location     Type
 29145 ;;		None
 29146 ;; Auto vars:     Size  Location     Type
 29147 ;;		None
 29148 ;; Return value:  Size  Location     Type
 29149 ;;                  1    wreg      void 
 29150 ;; Registers used:
 29151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29152 ;; Tracked objects:
 29153 ;;		On entry : 0/0
 29154 ;;		On exit  : 0/0
 29155 ;;		Unchanged: 0/0
 29156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29157 ;;      Params:         0       0       0       0       0       0       0       0       0
 29158 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29160 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29161 ;;Total ram usage:        0 bytes
 29162 ;; Hardware stack levels used:    1
 29163 ;; Hardware stack levels required when called:    3
 29164 ;; This function calls:
 29165 ;;		_USBCtrlTrfRxService
 29166 ;; This function is called by:
 29167 ;;		_USBCtrlEPService
 29168 ;; This function uses a non-reentrant model
 29169 ;;
 29170                           
 29171                           	psect	text130
 29172  004FD8                     __ptext130:
 29173                           	opt stack 0
 29174  004FD8                     _USBCtrlTrfOutHandler:
 29175                           	opt stack 15
 29176                           
 29177                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29178                           
 29179                           ;incstack = 0
 29180  004FD8  0E02               	movlw	2
 29181  004FDA  184A               	xorwf	_controlTransferState,w,c	;volatile
 29182  004FDC  A4D8               	btfss	status,2,c
 29183  004FDE  D003               	goto	i2l2043
 29184                           
 29185                           ;usb_device.c: 2172: {
 29186                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29187  004FE0  EC79  F013         	call	_USBCtrlTrfRxService	;wreg free
 29188                           
 29189                           ;usb_device.c: 2174: }
 29190  004FE4  0012               	return	
 29191  004FE6                     i2l2043:
 29192                           
 29193                           ;usb_device.c: 2175: else
 29194                           ;usb_device.c: 2176: {
 29195                           ;usb_device.c: 2179: controlTransferState = 0;
 29196  004FE6  0E00               	movlw	0
 29197  004FE8  6E4A               	movwf	_controlTransferState,c	;volatile
 29198                           
 29199                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29200  004FEA  5047               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29201  004FEC  A4D8               	btfss	status,2,c
 29202  004FEE  D01F               	goto	i2l2045
 29203                           
 29204                           ;usb_device.c: 2187: {
 29205                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29206  004FF0  EE20 F001          	lfsr	2,1
 29207  004FF4  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29208  004FF6  26D9               	addwf	fsr2l,f,c
 29209  004FF8  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29210  004FFA  22DA               	addwfc	fsr2h,f,c
 29211  004FFC  0E08               	movlw	8
 29212  004FFE  6EDF               	movwf	indf2,c
 29213                           
 29214                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29215  005000  EE20 F002          	lfsr	2,2
 29216  005004  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29217  005006  26D9               	addwf	fsr2l,f,c
 29218  005008  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29219  00500A  22DA               	addwfc	fsr2h,f,c
 29220  00500C  0E30               	movlw	48
 29221  00500E  6EDE               	movwf	postinc2,c
 29222  005010  0E04               	movlw	4
 29223  005012  6EDD               	movwf	postdec2,c
 29224                           
 29225                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29226  005014  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29227  005018  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29228  00501C  0E0C               	movlw	12
 29229  00501E  6EDF               	movwf	indf2,c
 29230                           
 29231                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29232  005020  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29233  005024  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29234  005028  0E00               	movlw	0
 29235  00502A  8EDB               	bsf	plusw2,7,c
 29236                           
 29237                           ;usb_device.c: 2192: }
 29238  00502C  0012               	return	
 29239  00502E                     i2l2045:
 29240                           
 29241                           ;usb_device.c: 2193: else
 29242                           ;usb_device.c: 2194: {
 29243                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29244  00502E  0E00               	movlw	0
 29245  005030  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29246  005032  0012               	return	
 29247  005034                     __end_of_USBCtrlTrfOutHandler:
 29248                           	opt stack 0
 29249                           pclatu	equ	0xFFB
 29250                           pclath	equ	0xFFA
 29251                           tblptru	equ	0xFF8
 29252                           tblptrh	equ	0xFF7
 29253                           tblptrl	equ	0xFF6
 29254                           tablat	equ	0xFF5
 29255                           prodh	equ	0xFF4
 29256                           prodl	equ	0xFF3
 29257                           intcon	equ	0xFF2
 29258                           intcon2	equ	0xFF1
 29259                           intcon3	equ	0xFF0
 29260                           indf0	equ	0xFEF
 29261                           postinc0	equ	0xFEE
 29262                           fsr0h	equ	0xFEA
 29263                           fsr0l	equ	0xFE9
 29264                           wreg	equ	0xFE8
 29265                           indf1	equ	0xFE7
 29266                           postdec1	equ	0xFE5
 29267                           fsr1h	equ	0xFE2
 29268                           fsr1l	equ	0xFE1
 29269                           indf2	equ	0xFDF
 29270                           postinc2	equ	0xFDE
 29271                           postdec2	equ	0xFDD
 29272                           plusw2	equ	0xFDB
 29273                           fsr2h	equ	0xFDA
 29274                           fsr2l	equ	0xFD9
 29275                           status	equ	0xFD8
 29276                           
 29277 ;; *************** function _USBCtrlTrfRxService *****************
 29278 ;; Defined at:
 29279 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29280 ;; Parameters:    Size  Location     Type
 29281 ;;		None
 29282 ;; Auto vars:     Size  Location     Type
 29283 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29284 ;;  i               1   17[COMRAM] unsigned char 
 29285 ;; Return value:  Size  Location     Type
 29286 ;;                  1    wreg      void 
 29287 ;; Registers used:
 29288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29289 ;; Tracked objects:
 29290 ;;		On entry : 0/0
 29291 ;;		On exit  : 0/0
 29292 ;;		Unchanged: 0/0
 29293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29294 ;;      Params:         0       0       0       0       0       0       0       0       0
 29295 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29297 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29298 ;;Total ram usage:        2 bytes
 29299 ;; Hardware stack levels used:    1
 29300 ;; Hardware stack levels required when called:    2
 29301 ;; This function calls:
 29302 ;;		_USART_mySetLineCodingHandler
 29303 ;;		_USBCtrlEPAllowStatusStage
 29304 ;; This function is called by:
 29305 ;;		_USBCtrlTrfOutHandler
 29306 ;; This function uses a non-reentrant model
 29307 ;;
 29308                           
 29309                           	psect	text131
 29310  0026F2                     __ptext131:
 29311                           	opt stack 0
 29312  0026F2                     _USBCtrlTrfRxService:
 29313                           	opt stack 15
 29314                           
 29315                           ;usb_device.c: 1520: uint8_t byteToRead;
 29316                           ;usb_device.c: 1521: uint8_t i;
 29317                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29318                           
 29319                           ;incstack = 0
 29320  0026F2  EE20 F001          	lfsr	2,1
 29321  0026F6  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29322  0026F8  26D9               	addwf	fsr2l,f,c
 29323  0026FA  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29324  0026FC  22DA               	addwfc	fsr2h,f,c
 29325  0026FE  50DF               	movf	indf2,w,c
 29326  002700  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29327                           
 29328                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29329  002702  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29330  002704  0100               	movlb	0	; () banked
 29331  002706  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29332  002708  0E00               	movlw	0
 29333  00270A  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29334  00270C  A0D8               	btfss	status,0,c
 29335                           
 29336                           ; BSR set to: 0
 29337                           ;usb_device.c: 1532: {
 29338                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29339  00270E  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29340                           
 29341                           ; BSR set to: 0
 29342                           ;usb_device.c: 1534: }
 29343                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29344                           
 29345                           ; BSR set to: 0
 29346  002712  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29347  002714  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29348  002716  0E00               	movlw	0
 29349  002718  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29350                           
 29351                           ; BSR set to: 0
 29352                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29353  00271A  0E00               	movlw	0
 29354  00271C  6E12               	movwf	USBCtrlTrfRxService@i,c
 29355  00271E  D011               	goto	i2l1969
 29356  002720                     
 29357                           ; BSR set to: 0
 29358                           ;usb_device.c: 1541: {
 29359                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29360                           
 29361                           ; BSR set to: 0
 29362  002720  5012               	movf	USBCtrlTrfRxService@i,w,c
 29363  002722  0D01               	mullw	1
 29364  002724  0E38               	movlw	56
 29365  002726  24F3               	addwf	prodl,w,c
 29366  002728  6ED9               	movwf	fsr2l,c
 29367  00272A  0E04               	movlw	4
 29368  00272C  20F4               	addwfc	prodh,w,c
 29369  00272E  6EDA               	movwf	fsr2h,c
 29370  002730  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 29371  002734  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29372  002738  CFDF FFE7          	movff	indf2,indf1
 29373                           
 29374                           ; BSR set to: 0
 29375  00273C  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 29376  00273E  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29377                           
 29378                           ; BSR set to: 0
 29379  002740  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29380  002742                     i2l1969:
 29381                           
 29382                           ; BSR set to: 0
 29383                           
 29384                           ; BSR set to: 0
 29385  002742  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29386  002744  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29387  002746  A0D8               	btfss	status,0,c
 29388  002748  D7EB               	goto	i2l1970
 29389                           
 29390                           ; BSR set to: 0
 29391                           ;usb_device.c: 1543: }
 29392                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29393                           
 29394                           ; BSR set to: 0
 29395  00274A  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29396  00274C  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29397  00274E  B4D8               	btfsc	status,2,c
 29398  002750  D032               	goto	i2l1972
 29399                           
 29400                           ; BSR set to: 0
 29401                           ;usb_device.c: 1548: {
 29402                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29403  002752  EE20 F001          	lfsr	2,1
 29404  002756  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29405  002758  26D9               	addwf	fsr2l,f,c
 29406  00275A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29407  00275C  22DA               	addwfc	fsr2h,f,c
 29408  00275E  0E08               	movlw	8
 29409  002760  6EDF               	movwf	indf2,c
 29410                           
 29411                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29412  002762  EE20 F002          	lfsr	2,2
 29413  002766  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29414  002768  26D9               	addwf	fsr2l,f,c
 29415  00276A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29416  00276C  22DA               	addwfc	fsr2h,f,c
 29417  00276E  0E38               	movlw	56
 29418  002770  6EDE               	movwf	postinc2,c
 29419  002772  0E04               	movlw	4
 29420  002774  6EDD               	movwf	postdec2,c
 29421                           
 29422                           ; BSR set to: 0
 29423                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29424  002776  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29425  00277A  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29426  00277E  BCDF               	btfsc	indf2,6,c
 29427  002780  D00D               	goto	i2l1973
 29428                           
 29429                           ; BSR set to: 0
 29430                           ;usb_device.c: 1552: {
 29431                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29432  002782  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29433  002786  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29434  00278A  0E48               	movlw	72
 29435  00278C  6EDF               	movwf	indf2,c
 29436                           
 29437                           ; BSR set to: 0
 29438                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29439  00278E  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29440  002792  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29441  002796  0E00               	movlw	0
 29442  002798  8EDB               	bsf	plusw2,7,c
 29443                           
 29444                           ;usb_device.c: 1555: }
 29445  00279A  0012               	return	
 29446  00279C                     i2l1973:
 29447                           
 29448                           ; BSR set to: 0
 29449                           ;usb_device.c: 1556: else
 29450                           ;usb_device.c: 1557: {
 29451                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29452                           
 29453                           ; BSR set to: 0
 29454  00279C  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29455  0027A0  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29456  0027A4  0E08               	movlw	8
 29457  0027A6  6EDF               	movwf	indf2,c
 29458                           
 29459                           ; BSR set to: 0
 29460                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29461  0027A8  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29462  0027AC  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29463  0027B0  0E00               	movlw	0
 29464  0027B2  8EDB               	bsf	plusw2,7,c
 29465                           
 29466                           ; BSR set to: 0
 29467                           ;usb_device.c: 1560: }
 29468                           ;usb_device.c: 1561: }
 29469  0027B4  0012               	return	
 29470  0027B6                     i2l1972:
 29471                           
 29472                           ; BSR set to: 0
 29473                           ;usb_device.c: 1562: else
 29474                           ;usb_device.c: 1563: {
 29475                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29476                           
 29477                           ; BSR set to: 0
 29478  0027B6  EE20 F001          	lfsr	2,1
 29479  0027BA  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29480  0027BC  26D9               	addwf	fsr2l,f,c
 29481  0027BE  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29482  0027C0  22DA               	addwfc	fsr2h,f,c
 29483  0027C2  0E08               	movlw	8
 29484  0027C4  6EDF               	movwf	indf2,c
 29485                           
 29486                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29487  0027C6  EE20 F002          	lfsr	2,2
 29488  0027CA  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29489  0027CC  26D9               	addwf	fsr2l,f,c
 29490  0027CE  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29491  0027D0  22DA               	addwfc	fsr2h,f,c
 29492  0027D2  0E30               	movlw	48
 29493  0027D4  6EDE               	movwf	postinc2,c
 29494  0027D6  0E04               	movlw	4
 29495  0027D8  6EDD               	movwf	postdec2,c
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29499  0027DA  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29500  0027DE  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29501  0027E2  0E04               	movlw	4
 29502  0027E4  6EDF               	movwf	indf2,c
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29506  0027E6  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29507  0027EA  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29508  0027EE  0E00               	movlw	0
 29509  0027F0  8EDB               	bsf	plusw2,7,c
 29510                           
 29511                           ; BSR set to: 0
 29512                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29513  0027F2  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29514  0027F4  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29515  0027F6  B4D8               	btfsc	status,2,c
 29516  0027F8  D00E               	goto	i2u674_49
 29517                           
 29518                           ; BSR set to: 0
 29519                           ;usb_device.c: 1581: {
 29520                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29521  0027FA  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29522  0027FE  D801               	call	i2u674_48
 29523  002800  D00A               	goto	i2u674_49
 29524  002802                     i2u674_48:
 29525  002802  0005               	push	
 29526  002804  6EFA               	movwf	pclath,c
 29527  002806  50DE               	movf	postinc2,w,c
 29528  002808  6EFD               	movwf	tosl,c
 29529  00280A  50DE               	movf	postinc2,w,c
 29530  00280C  6EFE               	movwf	tosh,c
 29531  00280E  50F8               	movf	tblptru,w,c
 29532  002810  6EFF               	movwf	tosu,c
 29533  002812  50FA               	movf	pclath,w,c
 29534  002814  0012               	return		;indir
 29535  002816                     i2u674_49:
 29536                           
 29537                           ;usb_device.c: 1588: }
 29538                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29539  002816  0100               	movlb	0	; () banked
 29540  002818  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29541                           
 29542                           ; BSR set to: 0
 29543                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29544  00281A  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29545  00281C  A4D8               	btfss	status,2,c
 29546  00281E  0012               	return	
 29547                           
 29548                           ; BSR set to: 0
 29549                           ;usb_device.c: 1604: {
 29550                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29551  002820  EC9F  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29552  002824  0012               	return	
 29553  002826                     __end_of_USBCtrlTrfRxService:
 29554                           	opt stack 0
 29555                           tosu	equ	0xFFF
 29556                           tosh	equ	0xFFE
 29557                           tosl	equ	0xFFD
 29558                           pclatu	equ	0xFFB
 29559                           pclath	equ	0xFFA
 29560                           tblptru	equ	0xFF8
 29561                           tblptrh	equ	0xFF7
 29562                           tblptrl	equ	0xFF6
 29563                           tablat	equ	0xFF5
 29564                           prodh	equ	0xFF4
 29565                           prodl	equ	0xFF3
 29566                           intcon	equ	0xFF2
 29567                           intcon2	equ	0xFF1
 29568                           intcon3	equ	0xFF0
 29569                           indf0	equ	0xFEF
 29570                           postinc0	equ	0xFEE
 29571                           fsr0h	equ	0xFEA
 29572                           fsr0l	equ	0xFE9
 29573                           wreg	equ	0xFE8
 29574                           indf1	equ	0xFE7
 29575                           postdec1	equ	0xFE5
 29576                           fsr1h	equ	0xFE2
 29577                           fsr1l	equ	0xFE1
 29578                           indf2	equ	0xFDF
 29579                           postinc2	equ	0xFDE
 29580                           postdec2	equ	0xFDD
 29581                           plusw2	equ	0xFDB
 29582                           fsr2h	equ	0xFDA
 29583                           fsr2l	equ	0xFD9
 29584                           status	equ	0xFD8
 29585                           
 29586 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29587 ;; Defined at:
 29588 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29589 ;; Parameters:    Size  Location     Type
 29590 ;;		None
 29591 ;; Auto vars:     Size  Location     Type
 29592 ;;		None
 29593 ;; Return value:  Size  Location     Type
 29594 ;;                  1    wreg      void 
 29595 ;; Registers used:
 29596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29597 ;; Tracked objects:
 29598 ;;		On entry : 0/0
 29599 ;;		On exit  : 0/0
 29600 ;;		Unchanged: 0/0
 29601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29602 ;;      Params:         0       0       0       0       0       0       0       0       0
 29603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29605 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29606 ;;Total ram usage:        0 bytes
 29607 ;; Hardware stack levels used:    1
 29608 ;; This function calls:
 29609 ;;		Nothing
 29610 ;; This function is called by:
 29611 ;;		_USBDeviceTasks
 29612 ;;		_USBCtrlEPServiceComplete
 29613 ;;		_USBCtrlTrfRxService
 29614 ;; This function uses a non-reentrant model
 29615 ;;
 29616                           
 29617                           	psect	text132
 29618  003B3E                     __ptext132:
 29619                           	opt stack 0
 29620  003B3E                     _USBCtrlEPAllowStatusStage:
 29621                           	opt stack 16
 29622                           
 29623                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29624                           
 29625                           ;incstack = 0
 29626  003B3E  5044               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29627  003B40  A4D8               	btfss	status,2,c
 29628  003B42  0012               	return	
 29629                           
 29630                           ;usb_device.c: 1112: {
 29631                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29632  003B44  0E01               	movlw	1
 29633  003B46  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29634                           
 29635                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29636  003B48  5043               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29637  003B4A  A4D8               	btfss	status,2,c
 29638  003B4C  0012               	return	
 29639                           
 29640                           ;usb_device.c: 1115: {
 29641                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29642  003B4E  0E01               	movlw	1
 29643  003B50  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29644                           
 29645                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29646  003B52  0E02               	movlw	2
 29647  003B54  184A               	xorwf	_controlTransferState,w,c	;volatile
 29648  003B56  A4D8               	btfss	status,2,c
 29649  003B58  D016               	goto	i2l1923
 29650                           
 29651                           ;usb_device.c: 1121: {
 29652                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29653  003B5A  0100               	movlb	0	; () banked
 29654  003B5C  EE20 F001          	lfsr	2,1
 29655  003B60  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29656  003B62  26D9               	addwf	fsr2l,f,c
 29657  003B64  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29658  003B66  22DA               	addwfc	fsr2h,f,c
 29659  003B68  0E00               	movlw	0
 29660  003B6A  6EDF               	movwf	indf2,c
 29661                           
 29662                           ; BSR set to: 0
 29663                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29664  003B6C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29665  003B70  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29666  003B74  0E48               	movlw	72
 29667  003B76  6EDF               	movwf	indf2,c
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29671  003B78  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29672  003B7C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29673  003B80  0E00               	movlw	0
 29674  003B82  8EDB               	bsf	plusw2,7,c
 29675                           
 29676                           ;usb_device.c: 1125: }
 29677  003B84  0012               	return	
 29678  003B86                     i2l1923:
 29679                           
 29680                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29681                           
 29682                           ; BSR set to: 0
 29683  003B86  044A               	decf	_controlTransferState,w,c	;volatile
 29684  003B88  A4D8               	btfss	status,2,c
 29685  003B8A  0012               	return	
 29686                           
 29687                           ;usb_device.c: 1127: {
 29688                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29689  003B8C  0E00               	movlw	0
 29690  003B8E  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29691                           
 29692                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29693  003B90  EE20 F001          	lfsr	2,1
 29694  003B94  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29695  003B96  26D9               	addwf	fsr2l,f,c
 29696  003B98  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29697  003B9A  22DA               	addwfc	fsr2h,f,c
 29698  003B9C  0E08               	movlw	8
 29699  003B9E  6EDF               	movwf	indf2,c
 29700                           
 29701                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29702  003BA0  EE20 F002          	lfsr	2,2
 29703  003BA4  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29704  003BA6  26D9               	addwf	fsr2l,f,c
 29705  003BA8  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29706  003BAA  22DA               	addwfc	fsr2h,f,c
 29707  003BAC  0E30               	movlw	48
 29708  003BAE  6EDE               	movwf	postinc2,c
 29709  003BB0  0E04               	movlw	4
 29710  003BB2  6EDD               	movwf	postdec2,c
 29711                           
 29712                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29713  003BB4  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29714  003BB8  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29715  003BBC  0E04               	movlw	4
 29716  003BBE  6EDF               	movwf	indf2,c
 29717                           
 29718                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29719  003BC0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29720  003BC4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29721  003BC8  0E00               	movlw	0
 29722  003BCA  8EDB               	bsf	plusw2,7,c
 29723                           
 29724                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29725  003BCC  0E01               	movlw	1
 29726  003BCE  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29727                           
 29728                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29729  003BD0  EE20 F001          	lfsr	2,1
 29730  003BD4  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29731  003BD6  26D9               	addwf	fsr2l,f,c
 29732  003BD8  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29733  003BDA  22DA               	addwfc	fsr2h,f,c
 29734  003BDC  0E08               	movlw	8
 29735  003BDE  6EDF               	movwf	indf2,c
 29736                           
 29737                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29738  003BE0  EE20 F002          	lfsr	2,2
 29739  003BE4  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29740  003BE6  26D9               	addwf	fsr2l,f,c
 29741  003BE8  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29742  003BEA  22DA               	addwfc	fsr2h,f,c
 29743  003BEC  0E30               	movlw	48
 29744  003BEE  6EDE               	movwf	postinc2,c
 29745  003BF0  0E04               	movlw	4
 29746  003BF2  6EDD               	movwf	postdec2,c
 29747                           
 29748                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29749  003BF4  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29750  003BF8  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29751  003BFC  0E80               	movlw	128
 29752  003BFE  6EDF               	movwf	indf2,c
 29753  003C00  0012               	return	
 29754  003C02                     __end_of_USBCtrlEPAllowStatusStage:
 29755                           	opt stack 0
 29756                           tosu	equ	0xFFF
 29757                           tosh	equ	0xFFE
 29758                           tosl	equ	0xFFD
 29759                           pclatu	equ	0xFFB
 29760                           pclath	equ	0xFFA
 29761                           tblptru	equ	0xFF8
 29762                           tblptrh	equ	0xFF7
 29763                           tblptrl	equ	0xFF6
 29764                           tablat	equ	0xFF5
 29765                           prodh	equ	0xFF4
 29766                           prodl	equ	0xFF3
 29767                           intcon	equ	0xFF2
 29768                           intcon2	equ	0xFF1
 29769                           intcon3	equ	0xFF0
 29770                           indf0	equ	0xFEF
 29771                           postinc0	equ	0xFEE
 29772                           fsr0h	equ	0xFEA
 29773                           fsr0l	equ	0xFE9
 29774                           wreg	equ	0xFE8
 29775                           indf1	equ	0xFE7
 29776                           postdec1	equ	0xFE5
 29777                           fsr1h	equ	0xFE2
 29778                           fsr1l	equ	0xFE1
 29779                           indf2	equ	0xFDF
 29780                           postinc2	equ	0xFDE
 29781                           postdec2	equ	0xFDD
 29782                           plusw2	equ	0xFDB
 29783                           fsr2h	equ	0xFDA
 29784                           fsr2l	equ	0xFD9
 29785                           status	equ	0xFD8
 29786                           
 29787 ;; *************** function _USBCtrlTrfInHandler *****************
 29788 ;; Defined at:
 29789 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29790 ;; Parameters:    Size  Location     Type
 29791 ;;		None
 29792 ;; Auto vars:     Size  Location     Type
 29793 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29794 ;; Return value:  Size  Location     Type
 29795 ;;                  1    wreg      void 
 29796 ;; Registers used:
 29797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 29798 ;; Tracked objects:
 29799 ;;		On entry : 0/0
 29800 ;;		On exit  : 0/0
 29801 ;;		Unchanged: 0/0
 29802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29803 ;;      Params:         0       0       0       0       0       0       0       0       0
 29804 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29806 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29807 ;;Total ram usage:        1 bytes
 29808 ;; Hardware stack levels used:    1
 29809 ;; Hardware stack levels required when called:    2
 29810 ;; This function calls:
 29811 ;;		_USART_mySetLineCodingHandler
 29812 ;;		_USBCtrlTrfTxService
 29813 ;; This function is called by:
 29814 ;;		_USBCtrlEPService
 29815 ;; This function uses a non-reentrant model
 29816 ;;
 29817                           
 29818                           	psect	text133
 29819  003496                     __ptext133:
 29820                           	opt stack 0
 29821  003496                     _USBCtrlTrfInHandler:
 29822                           	opt stack 16
 29823                           
 29824                           ;usb_device.c: 2225: uint8_t lastDTS;
 29825                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29826                           
 29827                           ;incstack = 0
 29828  003496  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29829  00349A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29830  00349E  0100               	movlb	0	; () banked
 29831  0034A0  0E00               	movlw	0
 29832  0034A2  BCDF               	btfsc	indf2,6,c
 29833  0034A4  0E01               	movlw	1
 29834  0034A6  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29835                           
 29836                           ; BSR set to: 0
 29837                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29838  0034A8  0E04               	movlw	4
 29839  0034AA  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29843  0034AC  0E08               	movlw	8
 29844  0034AE  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29845  0034B0  A4D8               	btfss	status,2,c
 29846  0034B2  D00C               	goto	i2l2052
 29847                           
 29848                           ; BSR set to: 0
 29849                           ;usb_device.c: 2236: {
 29850                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29851  0034B4  0104               	movlb	4	; () banked
 29852  0034B6  5132               	movf	50,w,b	;volatile
 29853  0034B8  0B7F               	andlw	127
 29854  0034BA  6E63               	movwf	3939,c	;volatile
 29855                           
 29856                           ; BSR set to: 4
 29857                           ;usb_device.c: 2238: if(UADDR != 0u)
 29858  0034BC  5063               	movf	3939,w,c	;volatile
 29859  0034BE  B4D8               	btfsc	status,2,c
 29860  0034C0  D002               	goto	i2l2051
 29861                           
 29862                           ; BSR set to: 4
 29863                           ;usb_device.c: 2239: {
 29864                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29865  0034C2  0E10               	movlw	16
 29866  0034C4  D001               	goto	L34
 29867  0034C6                     i2l2051:
 29868                           
 29869                           ;usb_device.c: 2242: else
 29870                           ;usb_device.c: 2243: {
 29871                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29872                           
 29873                           ; BSR set to: 0
 29874  0034C6  0E04               	movlw	4
 29875  0034C8                     L34:
 29876  0034C8  0100               	movlb	0	; () banked
 29877  0034CA  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 29878  0034CC                     i2l2052:
 29879                           
 29880                           ; BSR set to: 0
 29881                           ;usb_device.c: 2245: }
 29882                           ;usb_device.c: 2246: }
 29883                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29884                           
 29885                           ; BSR set to: 0
 29886                           
 29887                           ; BSR set to: 0
 29888  0034CC  044A               	decf	_controlTransferState,w,c	;volatile
 29889  0034CE  A4D8               	btfss	status,2,c
 29890  0034D0  D03A               	goto	i2l2053
 29891                           
 29892                           ; BSR set to: 0
 29893                           ;usb_device.c: 2250: {
 29894                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29895  0034D2  EE20 F002          	lfsr	2,2
 29896  0034D6  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29897  0034D8  26D9               	addwf	fsr2l,f,c
 29898  0034DA  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29899  0034DC  22DA               	addwfc	fsr2h,f,c
 29900  0034DE  0E38               	movlw	56
 29901  0034E0  6EDE               	movwf	postinc2,c
 29902  0034E2  0E04               	movlw	4
 29903  0034E4  6EDD               	movwf	postdec2,c
 29904                           
 29905                           ; BSR set to: 0
 29906                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29907  0034E6  EC05  F01C         	call	_USBCtrlTrfTxService	;wreg free
 29908                           
 29909                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29910  0034EA  0E02               	movlw	2
 29911  0034EC  184B               	xorwf	_shortPacketStatus,w,c	;volatile
 29912  0034EE  A4D8               	btfss	status,2,c
 29913  0034F0  D00D               	goto	i2l2054
 29914                           
 29915                           ;usb_device.c: 2259: {
 29916                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29917  0034F2  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29918  0034F6  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29919  0034FA  0E04               	movlw	4
 29920  0034FC  6EDF               	movwf	indf2,c
 29921                           
 29922                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29923  0034FE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29924  003502  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29925  003506  0E00               	movlw	0
 29926  003508  8EDB               	bsf	plusw2,7,c
 29927                           
 29928                           ;usb_device.c: 2264: }
 29929  00350A  0012               	return	
 29930  00350C                     i2l2054:
 29931                           
 29932                           ;usb_device.c: 2265: else
 29933                           ;usb_device.c: 2266: {
 29934                           ;usb_device.c: 2267: if(lastDTS == 0)
 29935  00350C  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29936  00350E  A4D8               	btfss	status,2,c
 29937  003510  D00D               	goto	i2l2056
 29938                           
 29939                           ;usb_device.c: 2268: {
 29940                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29941  003512  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29942  003516  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29943  00351A  0E48               	movlw	72
 29944  00351C  6EDF               	movwf	indf2,c
 29945                           
 29946                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29947  00351E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29948  003522  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29949  003526  0E00               	movlw	0
 29950  003528  8EDB               	bsf	plusw2,7,c
 29951                           
 29952                           ;usb_device.c: 2271: }
 29953  00352A  0012               	return	
 29954  00352C                     i2l2056:
 29955                           
 29956                           ;usb_device.c: 2272: else
 29957                           ;usb_device.c: 2273: {
 29958                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29959  00352C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29960  003530  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29961  003534  0E08               	movlw	8
 29962  003536  6EDF               	movwf	indf2,c
 29963                           
 29964                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29965  003538  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29966  00353C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29967  003540  0E00               	movlw	0
 29968  003542  8EDB               	bsf	plusw2,7,c
 29969                           
 29970                           ;usb_device.c: 2276: }
 29971                           ;usb_device.c: 2277: }
 29972                           ;usb_device.c: 2278: }
 29973  003544  0012               	return	
 29974  003546                     i2l2053:
 29975                           
 29976                           ; BSR set to: 0
 29977                           ;usb_device.c: 2279: else
 29978                           ;usb_device.c: 2280: {
 29979                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 29980  003546  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29981  003548  D014               	goto	i2l2059
 29982                           
 29983                           ; BSR set to: 0
 29984                           ;usb_device.c: 2285: {
 29985                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 29986  00354A  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29987  00354C  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29988  00354E  B4D8               	btfsc	status,2,c
 29989  003550  D00E               	goto	i2u858_49
 29990                           
 29991                           ; BSR set to: 0
 29992                           ;usb_device.c: 2287: {
 29993                           ;usb_device.c: 2288: outPipes[0].pFunc();
 29994  003552  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29995  003556  D801               	call	i2u858_48
 29996  003558  D00A               	goto	i2u858_49
 29997  00355A                     i2u858_48:
 29998  00355A  0005               	push	
 29999  00355C  6EFA               	movwf	pclath,c
 30000  00355E  50DE               	movf	postinc2,w,c
 30001  003560  6EFD               	movwf	tosl,c
 30002  003562  50DE               	movf	postinc2,w,c
 30003  003564  6EFE               	movwf	tosh,c
 30004  003566  50F8               	movf	tblptru,w,c
 30005  003568  6EFF               	movwf	tosu,c
 30006  00356A  50FA               	movf	pclath,w,c
 30007  00356C  0012               	return		;indir
 30008  00356E                     i2u858_49:
 30009                           
 30010                           ;usb_device.c: 2289: }
 30011                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 30012  00356E  0100               	movlb	0	; () banked
 30013  003570  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30014  003572                     i2l2059:
 30015                           
 30016                           ; BSR set to: 0
 30017                           ;usb_device.c: 2291: }
 30018                           ;usb_device.c: 2293: controlTransferState = 0;
 30019                           
 30020                           ; BSR set to: 0
 30021  003572  0E00               	movlw	0
 30022  003574  6E4A               	movwf	_controlTransferState,c	;volatile
 30023  003576  0012               	return	
 30024  003578                     __end_of_USBCtrlTrfInHandler:
 30025                           	opt stack 0
 30026                           tosu	equ	0xFFF
 30027                           tosh	equ	0xFFE
 30028                           tosl	equ	0xFFD
 30029                           pclatu	equ	0xFFB
 30030                           pclath	equ	0xFFA
 30031                           tblptru	equ	0xFF8
 30032                           tblptrh	equ	0xFF7
 30033                           tblptrl	equ	0xFF6
 30034                           tablat	equ	0xFF5
 30035                           prodh	equ	0xFF4
 30036                           prodl	equ	0xFF3
 30037                           intcon	equ	0xFF2
 30038                           intcon2	equ	0xFF1
 30039                           intcon3	equ	0xFF0
 30040                           indf0	equ	0xFEF
 30041                           postinc0	equ	0xFEE
 30042                           fsr0h	equ	0xFEA
 30043                           fsr0l	equ	0xFE9
 30044                           wreg	equ	0xFE8
 30045                           indf1	equ	0xFE7
 30046                           postdec1	equ	0xFE5
 30047                           fsr1h	equ	0xFE2
 30048                           fsr1l	equ	0xFE1
 30049                           indf2	equ	0xFDF
 30050                           postinc2	equ	0xFDE
 30051                           postdec2	equ	0xFDD
 30052                           plusw2	equ	0xFDB
 30053                           fsr2h	equ	0xFDA
 30054                           fsr2l	equ	0xFD9
 30055                           status	equ	0xFD8
 30056                           
 30057 ;; *************** function _USBCtrlTrfTxService *****************
 30058 ;; Defined at:
 30059 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 30060 ;; Parameters:    Size  Location     Type
 30061 ;;		None
 30062 ;; Auto vars:     Size  Location     Type
 30063 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30064 ;; Return value:  Size  Location     Type
 30065 ;;                  1    wreg      void 
 30066 ;; Registers used:
 30067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30068 ;; Tracked objects:
 30069 ;;		On entry : 0/0
 30070 ;;		On exit  : 0/0
 30071 ;;		Unchanged: 0/0
 30072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30073 ;;      Params:         0       0       0       0       0       0       0       0       0
 30074 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30075 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30076 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30077 ;;Total ram usage:        1 bytes
 30078 ;; Hardware stack levels used:    1
 30079 ;; This function calls:
 30080 ;;		Nothing
 30081 ;; This function is called by:
 30082 ;;		_USBCtrlEPAllowDataStage
 30083 ;;		_USBCtrlTrfInHandler
 30084 ;; This function uses a non-reentrant model
 30085 ;;
 30086                           
 30087                           	psect	text134
 30088  00380A                     __ptext134:
 30089                           	opt stack 0
 30090  00380A                     _USBCtrlTrfTxService:
 30091                           	opt stack 15
 30092                           
 30093                           ;usb_device.c: 1439: uint8_t byteToSend;
 30094                           ;usb_device.c: 1443: byteToSend = 8;
 30095                           
 30096                           ;incstack = 0
 30097  00380A  0E08               	movlw	8
 30098  00380C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30099                           
 30100                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30101  00380E  0100               	movlb	0	; () banked
 30102  003810  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30103  003812  E110               	bnz	i2l8052
 30104  003814  0E08               	movlw	8
 30105  003816  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30106  003818  B0D8               	btfsc	status,0,c
 30107  00381A  D00C               	goto	i2l1956
 30108                           
 30109                           ; BSR set to: 0
 30110                           ;usb_device.c: 1445: {
 30111                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30112  00381C  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30113                           
 30114                           ; BSR set to: 0
 30115                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30116  003820  504B               	movf	_shortPacketStatus,w,c	;volatile
 30117  003822  A4D8               	btfss	status,2,c
 30118  003824  D002               	goto	i2l1954
 30119                           
 30120                           ; BSR set to: 0
 30121                           ;usb_device.c: 1454: {
 30122                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30123  003826  0E01               	movlw	1
 30124  003828  D004               	goto	L35
 30125  00382A                     i2l1954:
 30126                           
 30127                           ; BSR set to: 0
 30128                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30129                           
 30130                           ; BSR set to: 0
 30131  00382A  044B               	decf	_shortPacketStatus,w,c	;volatile
 30132  00382C  A4D8               	btfss	status,2,c
 30133  00382E  D002               	goto	i2l1956
 30134                           
 30135                           ; BSR set to: 0
 30136                           ;usb_device.c: 1458: {
 30137                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30138  003830  0E02               	movlw	2
 30139  003832                     L35:
 30140  003832  6E4B               	movwf	_shortPacketStatus,c	;volatile
 30141  003834                     i2l1956:
 30142  003834                     i2l8052:
 30143                           
 30144                           ; BSR set to: 0
 30145                           ;usb_device.c: 1460: }
 30146                           ;usb_device.c: 1461: }
 30147                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30148  003834  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30149  003836  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30150  003838  0E00               	movlw	0
 30151  00383A  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30152                           
 30153                           ; BSR set to: 0
 30154                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30155  00383C  EE20 F001          	lfsr	2,1
 30156  003840  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30157  003842  26D9               	addwf	fsr2l,f,c
 30158  003844  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30159  003846  22DA               	addwfc	fsr2h,f,c
 30160  003848  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30161                           
 30162                           ; BSR set to: 0
 30163                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30164  00384C  0E38               	movlw	56
 30165  00384E  0101               	movlb	1	; () banked
 30166  003850  6F54               	movwf	_pDst& (0+255),b
 30167  003852  0E04               	movlw	4
 30168  003854  6F55               	movwf	(_pDst+1)& (0+255),b
 30169                           
 30170                           ; BSR set to: 1
 30171                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30172  003856  0100               	movlb	0	; () banked
 30173  003858  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30174  00385A  D01D               	goto	i2l1958
 30175  00385C  D03C               	goto	i2l1962
 30176  00385E                     
 30177                           ;usb_device.c: 1478: {
 30178                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30179                           
 30180                           ; BSR set to: 0
 30181  00385E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30182  003862  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30183  003866  6AF8               	clrf	tblptru,c
 30184  003868  C154  FFD9         	movff	_pDst,fsr2l
 30185  00386C  C155  FFDA         	movff	_pDst+1,fsr2h
 30186  003870  0E07               	movlw	(high __ramtop+-1)
 30187  003872  64F7               	cpfsgt	tblptrh,c
 30188  003874  D003               	bra	i2u584_47
 30189  003876  0008               	tblrd		*
 30190  003878  50F5               	movf	tablat,w,c
 30191  00387A  D005               	bra	i2u584_40
 30192  00387C                     i2u584_47:
 30193  00387C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30194  003880  CFF7 FFEA          	movff	tblptrh,fsr0h
 30195  003884  50EF               	movf	indf0,w,c
 30196  003886                     i2u584_40:
 30197  003886  6EDF               	movwf	indf2,c
 30198  003888  0100               	movlb	0	; () banked
 30199  00388A  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30200  00388C  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30201                           
 30202                           ; BSR set to: 0
 30203  00388E  0101               	movlb	1	; () banked
 30204  003890  4B54               	infsnz	_pDst& (0+255),f,b
 30205  003892  2B55               	incf	(_pDst+1)& (0+255),f,b
 30206                           
 30207                           ; BSR set to: 1
 30208                           ;usb_device.c: 1480: byteToSend--;
 30209  003894  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30210  003896                     i2l1958:
 30211                           
 30212                           ; BSR set to: 1
 30213  003896  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30214  003898  B4D8               	btfsc	status,2,c
 30215  00389A  0012               	return	
 30216  00389C  D7E0               	goto	i2l1959
 30217  00389E                     
 30218                           ;usb_device.c: 1486: {
 30219                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30220  00389E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30221  0038A2  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30222  0038A6  6AF8               	clrf	tblptru,c
 30223  0038A8  C154  FFD9         	movff	_pDst,fsr2l
 30224  0038AC  C155  FFDA         	movff	_pDst+1,fsr2h
 30225  0038B0  0E07               	movlw	(high __ramtop+-1)
 30226  0038B2  64F7               	cpfsgt	tblptrh,c
 30227  0038B4  D003               	bra	i2u586_47
 30228  0038B6  0008               	tblrd		*
 30229  0038B8  50F5               	movf	tablat,w,c
 30230  0038BA  D005               	bra	i2u586_40
 30231  0038BC                     i2u586_47:
 30232  0038BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30233  0038C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30234  0038C4  50EF               	movf	indf0,w,c
 30235  0038C6                     i2u586_40:
 30236  0038C6  6EDF               	movwf	indf2,c
 30237  0038C8  0100               	movlb	0	; () banked
 30238  0038CA  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30239  0038CC  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30240                           
 30241                           ; BSR set to: 0
 30242  0038CE  0101               	movlb	1	; () banked
 30243  0038D0  4B54               	infsnz	_pDst& (0+255),f,b
 30244  0038D2  2B55               	incf	(_pDst+1)& (0+255),f,b
 30245                           
 30246                           ; BSR set to: 1
 30247                           ;usb_device.c: 1488: byteToSend--;
 30248  0038D4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30249  0038D6                     i2l1962:
 30250                           
 30251                           ; BSR set to: 1
 30252  0038D6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30253  0038D8  B4D8               	btfsc	status,2,c
 30254  0038DA  0012               	return	
 30255  0038DC  D7E0               	goto	i2l1963
 30256  0038DE                     __end_of_USBCtrlTrfTxService:
 30257                           	opt stack 0
 30258                           tosu	equ	0xFFF
 30259                           tosh	equ	0xFFE
 30260                           tosl	equ	0xFFD
 30261                           pclatu	equ	0xFFB
 30262                           pclath	equ	0xFFA
 30263                           tblptru	equ	0xFF8
 30264                           tblptrh	equ	0xFF7
 30265                           tblptrl	equ	0xFF6
 30266                           tablat	equ	0xFF5
 30267                           prodh	equ	0xFF4
 30268                           prodl	equ	0xFF3
 30269                           intcon	equ	0xFF2
 30270                           intcon2	equ	0xFF1
 30271                           intcon3	equ	0xFF0
 30272                           indf0	equ	0xFEF
 30273                           postinc0	equ	0xFEE
 30274                           fsr0h	equ	0xFEA
 30275                           fsr0l	equ	0xFE9
 30276                           wreg	equ	0xFE8
 30277                           indf1	equ	0xFE7
 30278                           postdec1	equ	0xFE5
 30279                           fsr1h	equ	0xFE2
 30280                           fsr1l	equ	0xFE1
 30281                           indf2	equ	0xFDF
 30282                           postinc2	equ	0xFDE
 30283                           postdec2	equ	0xFDD
 30284                           plusw2	equ	0xFDB
 30285                           fsr2h	equ	0xFDA
 30286                           fsr2l	equ	0xFD9
 30287                           status	equ	0xFD8
 30288                           
 30289 ;; *************** function _USART_mySetLineCodingHandler *****************
 30290 ;; Defined at:
 30291 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30292 ;; Parameters:    Size  Location     Type
 30293 ;;		None
 30294 ;; Auto vars:     Size  Location     Type
 30295 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30296 ;; Return value:  Size  Location     Type
 30297 ;;                  1    wreg      void 
 30298 ;; Registers used:
 30299 ;;		wreg, status,2, status,0, cstack
 30300 ;; Tracked objects:
 30301 ;;		On entry : 0/0
 30302 ;;		On exit  : 0/0
 30303 ;;		Unchanged: 0/0
 30304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30305 ;;      Params:         0       0       0       0       0       0       0       0       0
 30306 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30307 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30308 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30309 ;;Total ram usage:        4 bytes
 30310 ;; Hardware stack levels used:    1
 30311 ;; Hardware stack levels required when called:    1
 30312 ;; This function calls:
 30313 ;;		___lldiv
 30314 ;;		i2_EUSART_Initialize
 30315 ;; This function is called by:
 30316 ;;		_USBCheckCDCRequest
 30317 ;;		_USBCtrlTrfRxService
 30318 ;;		_USBCtrlTrfInHandler
 30319 ;; This function uses a non-reentrant model
 30320 ;;
 30321                           
 30322                           	psect	text135
 30323  005034                     __ptext135:
 30324                           	opt stack 0
 30325  005034                     _USART_mySetLineCodingHandler:
 30326                           	opt stack 15
 30327                           
 30328                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30329                           
 30330                           ;incstack = 0
 30331  005034  C1D4  F1E6         	movff	_cdc_notice,_line_coding
 30332  005038  C1D5  F1E7         	movff	_cdc_notice+1,_line_coding+1
 30333  00503C  C1D6  F1E8         	movff	_cdc_notice+2,_line_coding+2
 30334  005040  C1D7  F1E9         	movff	_cdc_notice+3,_line_coding+3
 30335                           
 30336                           ;USBapp.c: 278: uint32_t dwBaud;
 30337                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30338  005044  0E00               	movlw	0
 30339  005046  6E01               	movwf	___lldiv@dividend,c
 30340  005048  0E1B               	movlw	27
 30341  00504A  6E02               	movwf	___lldiv@dividend+1,c
 30342  00504C  0EB7               	movlw	183
 30343  00504E  6E03               	movwf	___lldiv@dividend+2,c
 30344  005050  0E00               	movlw	0
 30345  005052  6E04               	movwf	___lldiv@dividend+3,c
 30346  005054  C1E6  F005         	movff	_line_coding,___lldiv@divisor
 30347  005058  C1E7  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30348  00505C  C1E8  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30349  005060  C1E9  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30350  005064  EC46  F024         	call	___lldiv	;wreg free
 30351  005068  0EFF               	movlw	255
 30352  00506A  2401               	addwf	?___lldiv,w,c
 30353  00506C  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30354  00506E  0EFF               	movlw	255
 30355  005070  2002               	addwfc	?___lldiv+1,w,c
 30356  005072  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30357  005074  0EFF               	movlw	255
 30358  005076  2003               	addwfc	?___lldiv+2,w,c
 30359  005078  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30360  00507A  0EFF               	movlw	255
 30361  00507C  2004               	addwfc	?___lldiv+3,w,c
 30362  00507E  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30363                           
 30364                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30365  005080  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30366                           
 30367                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30368  005084  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30369                           
 30370                           ;USBapp.c: 283: EUSART_Initialize();
 30371  005088  EC44  F02A         	call	i2_EUSART_Initialize	;wreg free
 30372  00508C  0012               	return		;funcret
 30373  00508E                     __end_of_USART_mySetLineCodingHandler:
 30374                           	opt stack 0
 30375                           tosu	equ	0xFFF
 30376                           tosh	equ	0xFFE
 30377                           tosl	equ	0xFFD
 30378                           pclatu	equ	0xFFB
 30379                           pclath	equ	0xFFA
 30380                           tblptru	equ	0xFF8
 30381                           tblptrh	equ	0xFF7
 30382                           tblptrl	equ	0xFF6
 30383                           tablat	equ	0xFF5
 30384                           prodh	equ	0xFF4
 30385                           prodl	equ	0xFF3
 30386                           intcon	equ	0xFF2
 30387                           intcon2	equ	0xFF1
 30388                           intcon3	equ	0xFF0
 30389                           indf0	equ	0xFEF
 30390                           postinc0	equ	0xFEE
 30391                           fsr0h	equ	0xFEA
 30392                           fsr0l	equ	0xFE9
 30393                           wreg	equ	0xFE8
 30394                           indf1	equ	0xFE7
 30395                           postdec1	equ	0xFE5
 30396                           fsr1h	equ	0xFE2
 30397                           fsr1l	equ	0xFE1
 30398                           indf2	equ	0xFDF
 30399                           postinc2	equ	0xFDE
 30400                           postdec2	equ	0xFDD
 30401                           plusw2	equ	0xFDB
 30402                           fsr2h	equ	0xFDA
 30403                           fsr2l	equ	0xFD9
 30404                           status	equ	0xFD8
 30405                           
 30406 ;; *************** function i2_EUSART_Initialize *****************
 30407 ;; Defined at:
 30408 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30409 ;; Parameters:    Size  Location     Type
 30410 ;;		None
 30411 ;; Auto vars:     Size  Location     Type
 30412 ;;		None
 30413 ;; Return value:  Size  Location     Type
 30414 ;;                  1    wreg      void 
 30415 ;; Registers used:
 30416 ;;		wreg, status,2
 30417 ;; Tracked objects:
 30418 ;;		On entry : 0/0
 30419 ;;		On exit  : 0/0
 30420 ;;		Unchanged: 0/0
 30421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30422 ;;      Params:         0       0       0       0       0       0       0       0       0
 30423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30426 ;;Total ram usage:        0 bytes
 30427 ;; Hardware stack levels used:    1
 30428 ;; This function calls:
 30429 ;;		Nothing
 30430 ;; This function is called by:
 30431 ;;		_USBapp_CdcEmulatorInitialize
 30432 ;;		_USART_mySetLineCodingHandler
 30433 ;; This function uses a non-reentrant model
 30434 ;;
 30435                           
 30436                           	psect	text136
 30437  005488                     __ptext136:
 30438                           	opt stack 0
 30439  005488                     i2_EUSART_Initialize:
 30440                           	opt stack 17
 30441                           
 30442                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30443                           
 30444                           ;incstack = 0
 30445  005488  9A9D               	bcf	3997,5,c	;volatile
 30446                           
 30447                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30448  00548A  989D               	bcf	3997,4,c	;volatile
 30449                           
 30450                           ;eusart.c: 85: BAUDCON = 0x48;
 30451  00548C  0E48               	movlw	72
 30452  00548E  6EB8               	movwf	4024,c	;volatile
 30453                           
 30454                           ;eusart.c: 88: RCSTA = 0x90;
 30455  005490  0E90               	movlw	144
 30456  005492  6EAB               	movwf	4011,c	;volatile
 30457                           
 30458                           ;eusart.c: 91: TXSTA = 0x26;
 30459  005494  0E26               	movlw	38
 30460  005496  6EAC               	movwf	4012,c	;volatile
 30461                           
 30462                           ;eusart.c: 95: SPBRG = 0xD0;
 30463  005498  0ED0               	movlw	208
 30464  00549A  6EAF               	movwf	4015,c	;volatile
 30465                           
 30466                           ;eusart.c: 100: SPBRGH = 0x00;
 30467  00549C  0E00               	movlw	0
 30468  00549E  6EB0               	movwf	4016,c	;volatile
 30469                           
 30470                           ;eusart.c: 103: eusartTxHead = 0;
 30471  0054A0  0E00               	movlw	0
 30472  0054A2  0100               	movlb	0	; () banked
 30473  0054A4  6FE3               	movwf	_eusartTxHead& (0+255),b
 30474                           
 30475                           ;eusart.c: 104: eusartTxTail = 0;
 30476  0054A6  0E00               	movlw	0
 30477  0054A8  6FE2               	movwf	_eusartTxTail& (0+255),b
 30478                           
 30479                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30480  0054AA  0E40               	movlw	64
 30481  0054AC  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 30482                           
 30483                           ;eusart.c: 107: eusartRxHead = 0;
 30484  0054AE  0E00               	movlw	0
 30485  0054B0  6FE0               	movwf	_eusartRxHead& (0+255),b
 30486                           
 30487                           ;eusart.c: 108: eusartRxTail = 0;
 30488  0054B2  0E00               	movlw	0
 30489  0054B4  6FDF               	movwf	_eusartRxTail& (0+255),b
 30490                           
 30491                           ;eusart.c: 109: eusartRxCount = 0;
 30492  0054B6  0E00               	movlw	0
 30493  0054B8  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 30494                           
 30495                           ; BSR set to: 0
 30496                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30497  0054BA  8A9D               	bsf	3997,5,c	;volatile
 30498                           
 30499                           ; BSR set to: 0
 30500                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30501  0054BC  88AB               	bsf	4011,4,c	;volatile
 30502                           
 30503                           ; BSR set to: 0
 30504  0054BE  0012               	return		;funcret
 30505  0054C0                     __end_ofi2_EUSART_Initialize:
 30506                           	opt stack 0
 30507                           tosu	equ	0xFFF
 30508                           tosh	equ	0xFFE
 30509                           tosl	equ	0xFFD
 30510                           pclatu	equ	0xFFB
 30511                           pclath	equ	0xFFA
 30512                           tblptru	equ	0xFF8
 30513                           tblptrh	equ	0xFF7
 30514                           tblptrl	equ	0xFF6
 30515                           tablat	equ	0xFF5
 30516                           prodh	equ	0xFF4
 30517                           prodl	equ	0xFF3
 30518                           intcon	equ	0xFF2
 30519                           intcon2	equ	0xFF1
 30520                           intcon3	equ	0xFF0
 30521                           indf0	equ	0xFEF
 30522                           postinc0	equ	0xFEE
 30523                           fsr0h	equ	0xFEA
 30524                           fsr0l	equ	0xFE9
 30525                           wreg	equ	0xFE8
 30526                           indf1	equ	0xFE7
 30527                           postdec1	equ	0xFE5
 30528                           fsr1h	equ	0xFE2
 30529                           fsr1l	equ	0xFE1
 30530                           indf2	equ	0xFDF
 30531                           postinc2	equ	0xFDE
 30532                           postdec2	equ	0xFDD
 30533                           plusw2	equ	0xFDB
 30534                           fsr2h	equ	0xFDA
 30535                           fsr2l	equ	0xFD9
 30536                           status	equ	0xFD8
 30537                           
 30538 ;; *************** function ___lldiv *****************
 30539 ;; Defined at:
 30540 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30541 ;; Parameters:    Size  Location     Type
 30542 ;;  dividend        4    0[COMRAM] unsigned long 
 30543 ;;  divisor         4    4[COMRAM] unsigned long 
 30544 ;; Auto vars:     Size  Location     Type
 30545 ;;  quotient        4    8[COMRAM] unsigned long 
 30546 ;;  counter         1   12[COMRAM] unsigned char 
 30547 ;; Return value:  Size  Location     Type
 30548 ;;                  4    0[COMRAM] unsigned long 
 30549 ;; Registers used:
 30550 ;;		wreg, status,2, status,0
 30551 ;; Tracked objects:
 30552 ;;		On entry : 0/0
 30553 ;;		On exit  : 0/0
 30554 ;;		Unchanged: 0/0
 30555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30556 ;;      Params:         8       0       0       0       0       0       0       0       0
 30557 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30559 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30560 ;;Total ram usage:       13 bytes
 30561 ;; Hardware stack levels used:    1
 30562 ;; This function calls:
 30563 ;;		Nothing
 30564 ;; This function is called by:
 30565 ;;		_USART_mySetLineCodingHandler
 30566 ;; This function uses a non-reentrant model
 30567 ;;
 30568                           
 30569                           	psect	text137
 30570  00488C                     __ptext137:
 30571                           	opt stack 0
 30572  00488C                     ___lldiv:
 30573                           	opt stack 15
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;incstack = 0
 30577  00488C  0E00               	movlw	0
 30578  00488E  6E09               	movwf	___lldiv@quotient,c
 30579  004890  0E00               	movlw	0
 30580  004892  6E0A               	movwf	___lldiv@quotient+1,c
 30581  004894  0E00               	movlw	0
 30582  004896  6E0B               	movwf	___lldiv@quotient+2,c
 30583  004898  0E00               	movlw	0
 30584  00489A  6E0C               	movwf	___lldiv@quotient+3,c
 30585  00489C  5005               	movf	___lldiv@divisor,w,c
 30586  00489E  1006               	iorwf	___lldiv@divisor+1,w,c
 30587  0048A0  1007               	iorwf	___lldiv@divisor+2,w,c
 30588  0048A2  1008               	iorwf	___lldiv@divisor+3,w,c
 30589  0048A4  B4D8               	btfsc	status,2,c
 30590  0048A6  D02A               	goto	i2l2601
 30591  0048A8  0E01               	movlw	1
 30592  0048AA  6E0D               	movwf	___lldiv@counter,c
 30593  0048AC  D006               	goto	i2l2596
 30594  0048AE  90D8               	bcf	status,0,c
 30595  0048B0  3605               	rlcf	___lldiv@divisor,f,c
 30596  0048B2  3606               	rlcf	___lldiv@divisor+1,f,c
 30597  0048B4  3607               	rlcf	___lldiv@divisor+2,f,c
 30598  0048B6  3608               	rlcf	___lldiv@divisor+3,f,c
 30599  0048B8  2A0D               	incf	___lldiv@counter,f,c
 30600  0048BA                     i2l2596:
 30601  0048BA  AE08               	btfss	___lldiv@divisor+3,7,c
 30602  0048BC  D7F8               	goto	i2l2597
 30603  0048BE                     i2u589_40:
 30604  0048BE  90D8               	bcf	status,0,c
 30605  0048C0  3609               	rlcf	___lldiv@quotient,f,c
 30606  0048C2  360A               	rlcf	___lldiv@quotient+1,f,c
 30607  0048C4  360B               	rlcf	___lldiv@quotient+2,f,c
 30608  0048C6  360C               	rlcf	___lldiv@quotient+3,f,c
 30609  0048C8  5005               	movf	___lldiv@divisor,w,c
 30610  0048CA  5C01               	subwf	___lldiv@dividend,w,c
 30611  0048CC  5006               	movf	___lldiv@divisor+1,w,c
 30612  0048CE  5802               	subwfb	___lldiv@dividend+1,w,c
 30613  0048D0  5007               	movf	___lldiv@divisor+2,w,c
 30614  0048D2  5803               	subwfb	___lldiv@dividend+2,w,c
 30615  0048D4  5008               	movf	___lldiv@divisor+3,w,c
 30616  0048D6  5804               	subwfb	___lldiv@dividend+3,w,c
 30617  0048D8  A0D8               	btfss	status,0,c
 30618  0048DA  D009               	goto	i2l2600
 30619  0048DC  5005               	movf	___lldiv@divisor,w,c
 30620  0048DE  5E01               	subwf	___lldiv@dividend,f,c
 30621  0048E0  5006               	movf	___lldiv@divisor+1,w,c
 30622  0048E2  5A02               	subwfb	___lldiv@dividend+1,f,c
 30623  0048E4  5007               	movf	___lldiv@divisor+2,w,c
 30624  0048E6  5A03               	subwfb	___lldiv@dividend+2,f,c
 30625  0048E8  5008               	movf	___lldiv@divisor+3,w,c
 30626  0048EA  5A04               	subwfb	___lldiv@dividend+3,f,c
 30627  0048EC  8009               	bsf	___lldiv@quotient,0,c
 30628  0048EE                     i2l2600:
 30629  0048EE  90D8               	bcf	status,0,c
 30630  0048F0  3208               	rrcf	___lldiv@divisor+3,f,c
 30631  0048F2  3207               	rrcf	___lldiv@divisor+2,f,c
 30632  0048F4  3206               	rrcf	___lldiv@divisor+1,f,c
 30633  0048F6  3205               	rrcf	___lldiv@divisor,f,c
 30634  0048F8  2E0D               	decfsz	___lldiv@counter,f,c
 30635  0048FA  D7E1               	goto	i2u589_40
 30636  0048FC                     i2l2601:
 30637  0048FC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30638  004900  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30639  004904  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30640  004908  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30641  00490C  0012               	return		;funcret
 30642  00490E                     __end_of___lldiv:
 30643                           	opt stack 0
 30644                           tosu	equ	0xFFF
 30645                           tosh	equ	0xFFE
 30646                           tosl	equ	0xFFD
 30647                           pclatu	equ	0xFFB
 30648                           pclath	equ	0xFFA
 30649                           tblptru	equ	0xFF8
 30650                           tblptrh	equ	0xFF7
 30651                           tblptrl	equ	0xFF6
 30652                           tablat	equ	0xFF5
 30653                           prodh	equ	0xFF4
 30654                           prodl	equ	0xFF3
 30655                           intcon	equ	0xFF2
 30656                           intcon2	equ	0xFF1
 30657                           intcon3	equ	0xFF0
 30658                           indf0	equ	0xFEF
 30659                           postinc0	equ	0xFEE
 30660                           fsr0h	equ	0xFEA
 30661                           fsr0l	equ	0xFE9
 30662                           wreg	equ	0xFE8
 30663                           indf1	equ	0xFE7
 30664                           postdec1	equ	0xFE5
 30665                           fsr1h	equ	0xFE2
 30666                           fsr1l	equ	0xFE1
 30667                           indf2	equ	0xFDF
 30668                           postinc2	equ	0xFDE
 30669                           postdec2	equ	0xFDD
 30670                           plusw2	equ	0xFDB
 30671                           fsr2h	equ	0xFDA
 30672                           fsr2l	equ	0xFD9
 30673                           status	equ	0xFD8
 30674                           
 30675 ;; *************** function _TMRapp_Tick *****************
 30676 ;; Defined at:
 30677 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30678 ;; Parameters:    Size  Location     Type
 30679 ;;		None
 30680 ;; Auto vars:     Size  Location     Type
 30681 ;;		None
 30682 ;; Return value:  Size  Location     Type
 30683 ;;                  1    wreg      void 
 30684 ;; Registers used:
 30685 ;;		None
 30686 ;; Tracked objects:
 30687 ;;		On entry : 0/0
 30688 ;;		On exit  : 0/0
 30689 ;;		Unchanged: 0/0
 30690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30691 ;;      Params:         0       0       0       0       0       0       0       0       0
 30692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30694 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30695 ;;Total ram usage:        0 bytes
 30696 ;; Hardware stack levels used:    1
 30697 ;; This function calls:
 30698 ;;		Nothing
 30699 ;; This function is called by:
 30700 ;;		_INTERRUPT_InterruptManager
 30701 ;; This function uses a non-reentrant model
 30702 ;;
 30703                           
 30704                           	psect	text138
 30705  005B68                     __ptext138:
 30706                           	opt stack 0
 30707  005B68                     _TMRapp_Tick:
 30708                           	opt stack 20
 30709                           
 30710                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30711                           
 30712                           ;incstack = 0
 30713  005B68  0100               	movlb	0	; () banked
 30714  005B6A  81F8               	bsf	_appTimer& (0+255),0,b
 30715                           
 30716                           ; BSR set to: 0
 30717  005B6C  0012               	return		;funcret
 30718  005B6E                     __end_of_TMRapp_Tick:
 30719                           	opt stack 0
 30720                           tosu	equ	0xFFF
 30721                           tosh	equ	0xFFE
 30722                           tosl	equ	0xFFD
 30723                           pclatu	equ	0xFFB
 30724                           pclath	equ	0xFFA
 30725                           tblptru	equ	0xFF8
 30726                           tblptrh	equ	0xFF7
 30727                           tblptrl	equ	0xFF6
 30728                           tablat	equ	0xFF5
 30729                           prodh	equ	0xFF4
 30730                           prodl	equ	0xFF3
 30731                           intcon	equ	0xFF2
 30732                           intcon2	equ	0xFF1
 30733                           intcon3	equ	0xFF0
 30734                           indf0	equ	0xFEF
 30735                           postinc0	equ	0xFEE
 30736                           fsr0h	equ	0xFEA
 30737                           fsr0l	equ	0xFE9
 30738                           wreg	equ	0xFE8
 30739                           indf1	equ	0xFE7
 30740                           postdec1	equ	0xFE5
 30741                           fsr1h	equ	0xFE2
 30742                           fsr1l	equ	0xFE1
 30743                           indf2	equ	0xFDF
 30744                           postinc2	equ	0xFDE
 30745                           postdec2	equ	0xFDD
 30746                           plusw2	equ	0xFDB
 30747                           fsr2h	equ	0xFDA
 30748                           fsr2l	equ	0xFD9
 30749                           status	equ	0xFD8
 30750                           
 30751 ;; *************** function _TMR3_ISR *****************
 30752 ;; Defined at:
 30753 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30754 ;; Parameters:    Size  Location     Type
 30755 ;;		None
 30756 ;; Auto vars:     Size  Location     Type
 30757 ;;		None
 30758 ;; Return value:  Size  Location     Type
 30759 ;;                  1    wreg      void 
 30760 ;; Registers used:
 30761 ;;		wreg, status,2
 30762 ;; Tracked objects:
 30763 ;;		On entry : 0/0
 30764 ;;		On exit  : 0/0
 30765 ;;		Unchanged: 0/0
 30766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30767 ;;      Params:         0       0       0       0       0       0       0       0       0
 30768 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30770 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30771 ;;Total ram usage:        0 bytes
 30772 ;; Hardware stack levels used:    1
 30773 ;; This function calls:
 30774 ;;		Nothing
 30775 ;; This function is called by:
 30776 ;;		_INTERRUPT_InterruptManager
 30777 ;; This function uses a non-reentrant model
 30778 ;;
 30779                           
 30780                           	psect	text139
 30781  0058C6                     __ptext139:
 30782                           	opt stack 0
 30783  0058C6                     _TMR3_ISR:
 30784                           	opt stack 20
 30785                           
 30786                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30787                           
 30788                           ; BSR set to: 0
 30789                           ;incstack = 0
 30790  0058C6  92A1               	bcf	4001,1,c	;volatile
 30791                           
 30792                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30793  0058C8  A48D               	btfss	3981,2,c	;volatile
 30794  0058CA  D006               	goto	i2l1683
 30795                           
 30796                           ;tmr3.c: 168: {
 30797                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30798  0058CC  948D               	bcf	3981,2,c	;volatile
 30799                           
 30800                           ;tmr3.c: 170: TMR3H = 0xD5;
 30801  0058CE  0ED5               	movlw	213
 30802  0058D0  6EB3               	movwf	4019,c	;volatile
 30803                           
 30804                           ;tmr3.c: 171: TMR3L = 0xD0;
 30805  0058D2  0ED0               	movlw	208
 30806  0058D4  6EB2               	movwf	4018,c	;volatile
 30807                           
 30808                           ;tmr3.c: 172: } else {
 30809  0058D6  0012               	return	
 30810  0058D8                     i2l1683:
 30811                           
 30812                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30813  0058D8  848D               	bsf	3981,2,c	;volatile
 30814                           
 30815                           ;tmr3.c: 174: TMR3H = 0xFB;
 30816  0058DA  0EFB               	movlw	251
 30817  0058DC  6EB3               	movwf	4019,c	;volatile
 30818                           
 30819                           ;tmr3.c: 175: TMR3L = 0x50;
 30820  0058DE  0E50               	movlw	80
 30821  0058E0  6EB2               	movwf	4018,c	;volatile
 30822  0058E2  0012               	return	
 30823  0058E4                     __end_of_TMR3_ISR:
 30824                           	opt stack 0
 30825                           tosu	equ	0xFFF
 30826                           tosh	equ	0xFFE
 30827                           tosl	equ	0xFFD
 30828                           pclatu	equ	0xFFB
 30829                           pclath	equ	0xFFA
 30830                           tblptru	equ	0xFF8
 30831                           tblptrh	equ	0xFF7
 30832                           tblptrl	equ	0xFF6
 30833                           tablat	equ	0xFF5
 30834                           prodh	equ	0xFF4
 30835                           prodl	equ	0xFF3
 30836                           intcon	equ	0xFF2
 30837                           intcon2	equ	0xFF1
 30838                           intcon3	equ	0xFF0
 30839                           indf0	equ	0xFEF
 30840                           postinc0	equ	0xFEE
 30841                           fsr0h	equ	0xFEA
 30842                           fsr0l	equ	0xFE9
 30843                           wreg	equ	0xFE8
 30844                           indf1	equ	0xFE7
 30845                           postdec1	equ	0xFE5
 30846                           fsr1h	equ	0xFE2
 30847                           fsr1l	equ	0xFE1
 30848                           indf2	equ	0xFDF
 30849                           postinc2	equ	0xFDE
 30850                           postdec2	equ	0xFDD
 30851                           plusw2	equ	0xFDB
 30852                           fsr2h	equ	0xFDA
 30853                           fsr2l	equ	0xFD9
 30854                           status	equ	0xFD8
 30855                           
 30856 ;; *************** function _TMR1_ISR *****************
 30857 ;; Defined at:
 30858 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30859 ;; Parameters:    Size  Location     Type
 30860 ;;		None
 30861 ;; Auto vars:     Size  Location     Type
 30862 ;;		None
 30863 ;; Return value:  Size  Location     Type
 30864 ;;                  1    wreg      void 
 30865 ;; Registers used:
 30866 ;;		wreg, status,2
 30867 ;; Tracked objects:
 30868 ;;		On entry : 0/0
 30869 ;;		On exit  : 0/0
 30870 ;;		Unchanged: 0/0
 30871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30872 ;;      Params:         0       0       0       0       0       0       0       0       0
 30873 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30875 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30876 ;;Total ram usage:        0 bytes
 30877 ;; Hardware stack levels used:    1
 30878 ;; This function calls:
 30879 ;;		Nothing
 30880 ;; This function is called by:
 30881 ;;		_INTERRUPT_InterruptManager
 30882 ;; This function uses a non-reentrant model
 30883 ;;
 30884                           
 30885                           	psect	text140
 30886  005AE6                     __ptext140:
 30887                           	opt stack 0
 30888  005AE6                     _TMR1_ISR:
 30889                           	opt stack 20
 30890                           
 30891                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30892                           
 30893                           ;incstack = 0
 30894  005AE6  909E               	bcf	3998,0,c	;volatile
 30895                           
 30896                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30897  005AE8  503C               	movf	_timer1ReloadVal+1,w,c	;volatile
 30898  005AEA  6ECF               	movwf	4047,c	;volatile
 30899                           
 30900                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30901  005AEC  C03B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30902  005AF0  0012               	return		;funcret
 30903  005AF2                     __end_of_TMR1_ISR:
 30904                           	opt stack 0
 30905                           tosu	equ	0xFFF
 30906                           tosh	equ	0xFFE
 30907                           tosl	equ	0xFFD
 30908                           pclatu	equ	0xFFB
 30909                           pclath	equ	0xFFA
 30910                           tblptru	equ	0xFF8
 30911                           tblptrh	equ	0xFF7
 30912                           tblptrl	equ	0xFF6
 30913                           tablat	equ	0xFF5
 30914                           prodh	equ	0xFF4
 30915                           prodl	equ	0xFF3
 30916                           intcon	equ	0xFF2
 30917                           intcon2	equ	0xFF1
 30918                           intcon3	equ	0xFF0
 30919                           indf0	equ	0xFEF
 30920                           postinc0	equ	0xFEE
 30921                           fsr0h	equ	0xFEA
 30922                           fsr0l	equ	0xFE9
 30923                           wreg	equ	0xFE8
 30924                           indf1	equ	0xFE7
 30925                           postdec1	equ	0xFE5
 30926                           fsr1h	equ	0xFE2
 30927                           fsr1l	equ	0xFE1
 30928                           indf2	equ	0xFDF
 30929                           postinc2	equ	0xFDE
 30930                           postdec2	equ	0xFDD
 30931                           plusw2	equ	0xFDB
 30932                           fsr2h	equ	0xFDA
 30933                           fsr2l	equ	0xFD9
 30934                           status	equ	0xFD8
 30935                           
 30936 ;; *************** function _TMR0_ISR *****************
 30937 ;; Defined at:
 30938 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;		None
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;		None
 30943 ;; Return value:  Size  Location     Type
 30944 ;;                  1    wreg      void 
 30945 ;; Registers used:
 30946 ;;		None
 30947 ;; Tracked objects:
 30948 ;;		On entry : 0/0
 30949 ;;		On exit  : 0/0
 30950 ;;		Unchanged: 0/0
 30951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30952 ;;      Params:         0       0       0       0       0       0       0       0       0
 30953 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30954 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30955 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30956 ;;Total ram usage:        0 bytes
 30957 ;; Hardware stack levels used:    1
 30958 ;; This function calls:
 30959 ;;		Nothing
 30960 ;; This function is called by:
 30961 ;;		_INTERRUPT_InterruptManager
 30962 ;; This function uses a non-reentrant model
 30963 ;;
 30964                           
 30965                           	psect	text141
 30966  005B84                     __ptext141:
 30967                           	opt stack 0
 30968  005B84                     _TMR0_ISR:
 30969                           	opt stack 20
 30970                           
 30971                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 30972                           
 30973                           ;incstack = 0
 30974  005B84  94F2               	bcf	intcon,2,c	;volatile
 30975  005B86  0012               	return		;funcret
 30976  005B88                     __end_of_TMR0_ISR:
 30977                           	opt stack 0
 30978                           tosu	equ	0xFFF
 30979                           tosh	equ	0xFFE
 30980                           tosl	equ	0xFFD
 30981                           pclatu	equ	0xFFB
 30982                           pclath	equ	0xFFA
 30983                           tblptru	equ	0xFF8
 30984                           tblptrh	equ	0xFF7
 30985                           tblptrl	equ	0xFF6
 30986                           tablat	equ	0xFF5
 30987                           prodh	equ	0xFF4
 30988                           prodl	equ	0xFF3
 30989                           intcon	equ	0xFF2
 30990                           intcon2	equ	0xFF1
 30991                           intcon3	equ	0xFF0
 30992                           indf0	equ	0xFEF
 30993                           postinc0	equ	0xFEE
 30994                           fsr0h	equ	0xFEA
 30995                           fsr0l	equ	0xFE9
 30996                           wreg	equ	0xFE8
 30997                           indf1	equ	0xFE7
 30998                           postdec1	equ	0xFE5
 30999                           fsr1h	equ	0xFE2
 31000                           fsr1l	equ	0xFE1
 31001                           indf2	equ	0xFDF
 31002                           postinc2	equ	0xFDE
 31003                           postdec2	equ	0xFDD
 31004                           plusw2	equ	0xFDB
 31005                           fsr2h	equ	0xFDA
 31006                           fsr2l	equ	0xFD9
 31007                           status	equ	0xFD8
 31008                           
 31009 ;; *************** function _InterruptTimerUART *****************
 31010 ;; Defined at:
 31011 ;;		line 118 in file "../Includes/Drivers/swUart.c"
 31012 ;; Parameters:    Size  Location     Type
 31013 ;;		None
 31014 ;; Auto vars:     Size  Location     Type
 31015 ;;  mask            1   22[COMRAM] unsigned char 
 31016 ;; Return value:  Size  Location     Type
 31017 ;;                  1    wreg      void 
 31018 ;; Registers used:
 31019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31020 ;; Tracked objects:
 31021 ;;		On entry : 0/0
 31022 ;;		On exit  : 0/0
 31023 ;;		Unchanged: 0/0
 31024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31025 ;;      Params:         0       0       0       0       0       0       0       0       0
 31026 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31027 ;;      Temps:          2       0       0       0       0       0       0       0       0
 31028 ;;      Totals:         3       0       0       0       0       0       0       0       0
 31029 ;;Total ram usage:        3 bytes
 31030 ;; Hardware stack levels used:    1
 31031 ;; Hardware stack levels required when called:    6
 31032 ;; This function calls:
 31033 ;;		_TMR0_StopTimer
 31034 ;;		_clearInterruptTimerUART
 31035 ;;		_printfOled
 31036 ;;		_reloadTimer
 31037 ;;		i2_oled_clear
 31038 ;; This function is called by:
 31039 ;;		_INTERRUPT_InterruptManager
 31040 ;; This function uses a non-reentrant model
 31041 ;;
 31042                           
 31043                           	psect	text142
 31044  002F08                     __ptext142:
 31045                           	opt stack 0
 31046  002F08                     _InterruptTimerUART:
 31047                           	opt stack 14
 31048                           
 31049                           ;swUart.c: 120: uint8_t mask;
 31050                           ;swUart.c: 121: PORTAbits.RA7 = !PORTAbits.RA7;
 31051                           
 31052                           ;incstack = 0
 31053  002F08  BE80               	btfsc	3968,7,c	;volatile
 31054  002F0A  D003               	goto	i2u1025_40
 31055  002F0C  6A15               	clrf	??_InterruptTimerUART& (0+255),c
 31056  002F0E  2A15               	incf	??_InterruptTimerUART& (0+255),f,c
 31057  002F10  D001               	goto	i2u1026_48
 31058  002F12                     i2u1025_40:
 31059  002F12  6A15               	clrf	??_InterruptTimerUART& (0+255),c
 31060  002F14                     i2u1026_48:
 31061  002F14  3215               	rrcf	??_InterruptTimerUART,f,c
 31062  002F16  3215               	rrcf	??_InterruptTimerUART,f,c
 31063  002F18  5080               	movf	3968,w,c	;volatile
 31064  002F1A  1815               	xorwf	??_InterruptTimerUART,w,c
 31065  002F1C  0B7F               	andlw	-129
 31066  002F1E  1815               	xorwf	??_InterruptTimerUART,w,c
 31067  002F20  6E80               	movwf	3968,c	;volatile
 31068                           
 31069                           ;swUart.c: 122: switch(status)
 31070  002F22  D064               	goto	i2l1144
 31071  002F24                     
 31072                           ;swUart.c: 125: if(countBitsSilent == ( 22 - 1 ) )
 31073  002F24  0E15               	movlw	21
 31074  002F26  184C               	xorwf	_countBitsSilent,w,c
 31075  002F28  A4D8               	btfss	status,2,c
 31076  002F2A  D018               	goto	i2l1146
 31077                           
 31078                           ;swUart.c: 126: {
 31079                           ;swUart.c: 127: TMR0_StopTimer();
 31080  002F2C  ECC6  F02D         	call	_TMR0_StopTimer	;wreg free
 31081                           
 31082                           ;swUart.c: 128: oled_clear();
 31083  002F30  ECB5  F02C         	call	i2_oled_clear	;wreg free
 31084                           
 31085                           ;swUart.c: 130: *(buffer_rx + countRX) = 0;
 31086  002F34  504D               	movf	_countRX,w,c
 31087  002F36  0D01               	mullw	1
 31088  002F38  0E00               	movlw	low _buffer_rx
 31089  002F3A  24F3               	addwf	prodl,w,c
 31090  002F3C  6ED9               	movwf	fsr2l,c
 31091  002F3E  0E03               	movlw	high _buffer_rx
 31092  002F40  20F4               	addwfc	prodh,w,c
 31093  002F42  6EDA               	movwf	fsr2h,c
 31094  002F44  0E00               	movlw	0
 31095  002F46  6EDF               	movwf	indf2,c
 31096                           
 31097                           ;swUart.c: 131: printfOled(buffer_rx, countRX);
 31098  002F48  0E00               	movlw	low _buffer_rx
 31099  002F4A  6E12               	movwf	printfOled@buffer_rx,c
 31100  002F4C  0E03               	movlw	high _buffer_rx
 31101  002F4E  6E13               	movwf	printfOled@buffer_rx+1,c
 31102  002F50  C04D  F014         	movff	_countRX,printfOled@numBytes
 31103  002F54  ECA8  F02C         	call	_printfOled	;wreg free
 31104                           
 31105                           ;swUart.c: 134: countRX = 0;
 31106  002F58  0E00               	movlw	0
 31107  002F5A  6E4D               	movwf	_countRX,c
 31108  002F5C                     i2l1146:
 31109                           
 31110                           ;swUart.c: 135: }
 31111                           ;swUart.c: 136: if(countBitsSilent < 22)
 31112  002F5C  0E16               	movlw	22
 31113  002F5E  604C               	cpfslt	_countBitsSilent,c
 31114  002F60  D053               	goto	i2l1148
 31115                           
 31116                           ;swUart.c: 137: {
 31117                           ;swUart.c: 138: countBitsSilent ++;
 31118  002F62  2A4C               	incf	_countBitsSilent,f,c
 31119                           
 31120                           ;swUart.c: 139: reloadTimer(110);
 31121  002F64  0E6E               	movlw	110
 31122  002F66  EC93  F02D         	call	_reloadTimer
 31123                           
 31124                           ;swUart.c: 140: }
 31125                           ;swUart.c: 141: break;
 31126  002F6A  D04E               	goto	i2l1148
 31127  002F6C                     
 31128                           ;swUart.c: 153: mask = 0x01 << n_bit;
 31129  002F6C  C05B  F015         	movff	_n_bit,??_InterruptTimerUART
 31130  002F70  0E01               	movlw	1
 31131  002F72  6E16               	movwf	(??_InterruptTimerUART+1)& (0+255),c
 31132  002F74  2A15               	incf	??_InterruptTimerUART,f,c
 31133  002F76  D002               	goto	i2u1029_44
 31134  002F78                     i2u1029_45:
 31135  002F78  90D8               	bcf	status,0,c
 31136  002F7A  3616               	rlcf	??_InterruptTimerUART+1,f,c
 31137  002F7C                     i2u1029_44:
 31138  002F7C  2E15               	decfsz	??_InterruptTimerUART,f,c
 31139  002F7E  D7FC               	goto	i2u1029_45
 31140  002F80  5016               	movf	??_InterruptTimerUART+1,w,c
 31141  002F82  6E17               	movwf	InterruptTimerUART@mask,c
 31142                           
 31143                           ;swUart.c: 155: if( PORTBbits.RB7 == 1 )
 31144  002F84  AE81               	btfss	3969,7,c	;volatile
 31145  002F86  D005               	goto	i2l1150
 31146                           
 31147                           ;swUart.c: 156: {
 31148                           ;swUart.c: 157: rx_data |= mask;
 31149  002F88  5017               	movf	InterruptTimerUART@mask,w,c
 31150  002F8A  124E               	iorwf	_rx_data,f,c
 31151                           
 31152                           ;swUart.c: 158: cs ++;
 31153  002F8C  0101               	movlb	1	; () banked
 31154  002F8E  2B5E               	incf	_cs& (0+255),f,b
 31155                           
 31156                           ;swUart.c: 159: }
 31157  002F90  D003               	goto	i2l1151
 31158  002F92                     i2l1150:
 31159                           
 31160                           ;swUart.c: 160: else
 31161                           ;swUart.c: 161: {
 31162                           ;swUart.c: 163: rx_data &= ~mask;
 31163                           
 31164                           ; BSR set to: 1
 31165  002F92  5017               	movf	InterruptTimerUART@mask,w,c
 31166  002F94  0AFF               	xorlw	255
 31167  002F96  164E               	andwf	_rx_data,f,c
 31168  002F98                     i2l1151:
 31169                           
 31170                           ;swUart.c: 164: }
 31171                           ;swUart.c: 165: n_bit ++;
 31172  002F98  2A5B               	incf	_n_bit,f,c
 31173                           
 31174                           ;swUart.c: 166: if( n_bit == 8 )
 31175  002F9A  0E08               	movlw	8
 31176  002F9C  185B               	xorwf	_n_bit,w,c
 31177  002F9E  A4D8               	btfss	status,2,c
 31178  002FA0  D002               	goto	i2l1152
 31179                           
 31180                           ;swUart.c: 167: {
 31181                           ;swUart.c: 168: status = PARITY;
 31182  002FA2  0E02               	movlw	2
 31183  002FA4  6E4F               	movwf	_status,c
 31184  002FA6                     i2l1152:
 31185                           
 31186                           ;swUart.c: 169: }
 31187                           ;swUart.c: 170: reloadTimer(110);
 31188  002FA6  0E6E               	movlw	110
 31189  002FA8  EC93  F02D         	call	_reloadTimer
 31190                           
 31191                           ;swUart.c: 171: break;
 31192  002FAC  D02D               	goto	i2l1148
 31193  002FAE                     i2l1153:
 31194                           
 31195                           ;swUart.c: 175: if( PORTBbits.RB7 == 0 )
 31196  002FAE  5081               	movf	3969,w,c	;volatile
 31197                           
 31198                           ;swUart.c: 179: status = STOP_UA;
 31199                           
 31200                           ;swUart.c: 177: else
 31201                           ;swUart.c: 178: {}
 31202                           
 31203                           ;swUart.c: 176: {}
 31204  002FB0  0E03               	movlw	3
 31205  002FB2  6E4F               	movwf	_status,c
 31206                           
 31207                           ;swUart.c: 180: reloadTimer(110);
 31208  002FB4  0E6E               	movlw	110
 31209  002FB6  EC93  F02D         	call	_reloadTimer
 31210                           
 31211                           ;swUart.c: 181: break;
 31212  002FBA  D026               	goto	i2l1148
 31213  002FBC                     
 31214                           ;swUart.c: 183: buffer_rx[countRX] = rx_data;
 31215  002FBC  504D               	movf	_countRX,w,c
 31216  002FBE  0D01               	mullw	1
 31217  002FC0  0E00               	movlw	low _buffer_rx
 31218  002FC2  24F3               	addwf	prodl,w,c
 31219  002FC4  6ED9               	movwf	fsr2l,c
 31220  002FC6  0E03               	movlw	high _buffer_rx
 31221  002FC8  20F4               	addwfc	prodh,w,c
 31222  002FCA  6EDA               	movwf	fsr2h,c
 31223  002FCC  C04E  FFDF         	movff	_rx_data,indf2
 31224                           
 31225                           ;swUart.c: 184: countRX ++;
 31226  002FD0  2A4D               	incf	_countRX,f,c
 31227                           
 31228                           ;swUart.c: 185: status = SILENT;
 31229  002FD2  0E00               	movlw	0
 31230  002FD4  6E4F               	movwf	_status,c
 31231                           
 31232                           ;swUart.c: 186: reloadTimer(110);
 31233  002FD6  0E6E               	movlw	110
 31234  002FD8  EC93  F02D         	call	_reloadTimer
 31235                           
 31236                           ;swUart.c: 187: break;
 31237  002FDC  D015               	goto	i2l1148
 31238  002FDE                     
 31239                           ;swUart.c: 189: countRX = 0;
 31240  002FDE  0E00               	movlw	0
 31241  002FE0  6E4D               	movwf	_countRX,c
 31242                           
 31243                           ;swUart.c: 190: status = SILENT;
 31244  002FE2  0E00               	movlw	0
 31245  002FE4  6E4F               	movwf	_status,c
 31246                           
 31247                           ;swUart.c: 191: countBitsSilent = 22;
 31248  002FE6  0E16               	movlw	22
 31249  002FE8  6E4C               	movwf	_countBitsSilent,c
 31250                           
 31251                           ;swUart.c: 193: }
 31252                           
 31253                           ;swUart.c: 192: break;
 31254  002FEA  D00E               	goto	i2l1148
 31255  002FEC                     i2l1144:
 31256  002FEC  504F               	movf	_status,w,c
 31257                           
 31258                           ; Switch size 1, requested type "space"
 31259                           ; Number of cases is 4, Range of values is 0 to 3
 31260                           ; switch strategies available:
 31261                           ; Name         Instructions Cycles
 31262                           ; simple_byte           13     7 (average)
 31263                           ;	Chosen strategy is simple_byte
 31264  002FEE  0A00               	xorlw	0	; case 0
 31265  002FF0  B4D8               	btfsc	status,2,c
 31266  002FF2  D798               	goto	i2l1145
 31267  002FF4  0A01               	xorlw	1	; case 1
 31268  002FF6  B4D8               	btfsc	status,2,c
 31269  002FF8  D7B9               	goto	i2l1149
 31270  002FFA  0A03               	xorlw	3	; case 2
 31271  002FFC  B4D8               	btfsc	status,2,c
 31272  002FFE  D7D7               	goto	i2l1153
 31273  003000  0A01               	xorlw	1	; case 3
 31274  003002  B4D8               	btfsc	status,2,c
 31275  003004  D7DB               	goto	i2l1156
 31276  003006  D7EB               	goto	i2l1157
 31277  003008                     i2l1148:
 31278                           
 31279                           ;swUart.c: 194: clearInterruptTimerUART();
 31280  003008  ECB7  F02D         	call	_clearInterruptTimerUART	;wreg free
 31281  00300C  0012               	return		;funcret
 31282  00300E                     __end_of_InterruptTimerUART:
 31283                           	opt stack 0
 31284                           tosu	equ	0xFFF
 31285                           tosh	equ	0xFFE
 31286                           tosl	equ	0xFFD
 31287                           pclatu	equ	0xFFB
 31288                           pclath	equ	0xFFA
 31289                           tblptru	equ	0xFF8
 31290                           tblptrh	equ	0xFF7
 31291                           tblptrl	equ	0xFF6
 31292                           tablat	equ	0xFF5
 31293                           prodh	equ	0xFF4
 31294                           prodl	equ	0xFF3
 31295                           intcon	equ	0xFF2
 31296                           intcon2	equ	0xFF1
 31297                           intcon3	equ	0xFF0
 31298                           indf0	equ	0xFEF
 31299                           postinc0	equ	0xFEE
 31300                           fsr0h	equ	0xFEA
 31301                           fsr0l	equ	0xFE9
 31302                           wreg	equ	0xFE8
 31303                           indf1	equ	0xFE7
 31304                           postdec1	equ	0xFE5
 31305                           fsr1h	equ	0xFE2
 31306                           fsr1l	equ	0xFE1
 31307                           indf2	equ	0xFDF
 31308                           postinc2	equ	0xFDE
 31309                           postdec2	equ	0xFDD
 31310                           plusw2	equ	0xFDB
 31311                           fsr2h	equ	0xFDA
 31312                           fsr2l	equ	0xFD9
 31313                           status	equ	0xFD8
 31314                           
 31315 ;; *************** function _printfOled *****************
 31316 ;; Defined at:
 31317 ;;		line 232 in file "../Includes/Drivers/swUart.c"
 31318 ;; Parameters:    Size  Location     Type
 31319 ;;  buffer_rx       2   17[COMRAM] PTR char 
 31320 ;;		 -> buffer_rx(128), 
 31321 ;;  numBytes        1   19[COMRAM] unsigned char 
 31322 ;; Auto vars:     Size  Location     Type
 31323 ;;		None
 31324 ;; Return value:  Size  Location     Type
 31325 ;;                  1    wreg      void 
 31326 ;; Registers used:
 31327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31328 ;; Tracked objects:
 31329 ;;		On entry : 0/0
 31330 ;;		On exit  : 0/0
 31331 ;;		Unchanged: 0/0
 31332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31333 ;;      Params:         3       0       0       0       0       0       0       0       0
 31334 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31335 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31336 ;;      Totals:         3       0       0       0       0       0       0       0       0
 31337 ;;Total ram usage:        3 bytes
 31338 ;; Hardware stack levels used:    1
 31339 ;; Hardware stack levels required when called:    5
 31340 ;; This function calls:
 31341 ;;		i2_oled_clear
 31342 ;;		i2_oled_putString
 31343 ;; This function is called by:
 31344 ;;		_InterruptTimerUART
 31345 ;; This function uses a non-reentrant model
 31346 ;;
 31347                           
 31348                           	psect	text143
 31349  005950                     __ptext143:
 31350                           	opt stack 0
 31351  005950                     _printfOled:
 31352                           	opt stack 14
 31353                           
 31354                           ;swUart.c: 234: oled_clear();
 31355                           
 31356                           ;incstack = 0
 31357  005950  ECB5  F02C         	call	i2_oled_clear	;wreg free
 31358                           
 31359                           ;swUart.c: 235: oled_putString(buffer_rx,0,0);
 31360  005954  C012  F00D         	movff	printfOled@buffer_rx,i2oled_putString@string
 31361  005958  C013  F00E         	movff	printfOled@buffer_rx+1,i2oled_putString@string+1
 31362  00595C  0E00               	movlw	0
 31363  00595E  6E0F               	movwf	i2oled_putString@station_dot,c
 31364  005960  0E00               	movlw	0
 31365  005962  6E10               	movwf	i2oled_putString@start_page,c
 31366  005964  EC2C  F027         	call	i2_oled_putString	;wreg free
 31367  005968  0012               	return		;funcret
 31368  00596A                     __end_of_printfOled:
 31369                           	opt stack 0
 31370                           tosu	equ	0xFFF
 31371                           tosh	equ	0xFFE
 31372                           tosl	equ	0xFFD
 31373                           pclatu	equ	0xFFB
 31374                           pclath	equ	0xFFA
 31375                           tblptru	equ	0xFF8
 31376                           tblptrh	equ	0xFF7
 31377                           tblptrl	equ	0xFF6
 31378                           tablat	equ	0xFF5
 31379                           prodh	equ	0xFF4
 31380                           prodl	equ	0xFF3
 31381                           intcon	equ	0xFF2
 31382                           intcon2	equ	0xFF1
 31383                           intcon3	equ	0xFF0
 31384                           indf0	equ	0xFEF
 31385                           postinc0	equ	0xFEE
 31386                           fsr0h	equ	0xFEA
 31387                           fsr0l	equ	0xFE9
 31388                           wreg	equ	0xFE8
 31389                           indf1	equ	0xFE7
 31390                           postdec1	equ	0xFE5
 31391                           fsr1h	equ	0xFE2
 31392                           fsr1l	equ	0xFE1
 31393                           indf2	equ	0xFDF
 31394                           postinc2	equ	0xFDE
 31395                           postdec2	equ	0xFDD
 31396                           plusw2	equ	0xFDB
 31397                           fsr2h	equ	0xFDA
 31398                           fsr2l	equ	0xFD9
 31399                           status	equ	0xFD8
 31400                           
 31401 ;; *************** function i2_oled_putString *****************
 31402 ;; Defined at:
 31403 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 31404 ;; Parameters:    Size  Location     Type
 31405 ;;  string          2   12[COMRAM] PTR const unsigned char 
 31406 ;;		 -> buffer_rx(128), oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), 
 31407 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 31408 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 31409 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 31410 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 31411 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 31412 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 31413 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 31414 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 31415 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 31416 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 31417 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 31418 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 31419 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 31420 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 31421 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 31422 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 31423 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 31424 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 31425 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 31426 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 31427 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 31428 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 31429 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 31430 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 31431 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 31432 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 31433 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 31434 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 31435 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 31436 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 31437 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 31438 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 31439 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 31440 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 31441 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 31442 ;;  station_dot     1   14[COMRAM] unsigned char 
 31443 ;;  start_page      1   15[COMRAM] unsigned char 
 31444 ;; Auto vars:     Size  Location     Type
 31445 ;;  oled_putStri    1   16[COMRAM] unsigned char 
 31446 ;; Return value:  Size  Location     Type
 31447 ;;                  1    wreg      void 
 31448 ;; Registers used:
 31449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31450 ;; Tracked objects:
 31451 ;;		On entry : 0/0
 31452 ;;		On exit  : 0/0
 31453 ;;		Unchanged: 0/0
 31454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31455 ;;      Params:         4       0       0       0       0       0       0       0       0
 31456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31458 ;;      Totals:         5       0       0       0       0       0       0       0       0
 31459 ;;Total ram usage:        5 bytes
 31460 ;; Hardware stack levels used:    1
 31461 ;; Hardware stack levels required when called:    3
 31462 ;; This function calls:
 31463 ;;		i2_oled_putChar
 31464 ;; This function is called by:
 31465 ;;		_printfOled
 31466 ;; This function uses a non-reentrant model
 31467 ;;
 31468                           
 31469                           	psect	text144
 31470  004E58                     __ptext144:
 31471                           	opt stack 0
 31472  004E58                     i2_oled_putString:
 31473                           	opt stack 15
 31474                           
 31475                           ;SSD1306oLED.c: 333: uint8_t index;
 31476                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 31477                           
 31478                           ;incstack = 0
 31479  004E58  C00F  F011         	movff	i2oled_putString@station_dot,i2oled_putString@index
 31480  004E5C                     i2l10150:
 31481  004E5C  0E0F               	movlw	15
 31482  004E5E  6411               	cpfsgt	i2oled_putString@index,c
 31483  004E60  D001               	goto	i2l1045
 31484  004E62  0012               	return	
 31485  004E64                     i2l1045:
 31486                           
 31487                           ;SSD1306oLED.c: 335: {
 31488                           ;SSD1306oLED.c: 336: if (*string != 0)
 31489  004E64  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 31490  004E68  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 31491  004E6C  6AF8               	clrf	tblptru,c
 31492  004E6E  0E07               	movlw	(high __ramtop+-1)
 31493  004E70  64F7               	cpfsgt	tblptrh,c
 31494  004E72  D003               	bra	i2u869_47
 31495  004E74  0008               	tblrd		*
 31496  004E76  50F5               	movf	tablat,w,c
 31497  004E78  D005               	bra	i2u869_40
 31498  004E7A                     i2u869_47:
 31499  004E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 31500  004E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 31501  004E82  50EF               	movf	indf0,w,c
 31502  004E84                     i2u869_40:
 31503  004E84  0900               	iorlw	0
 31504  004E86  B4D8               	btfsc	status,2,c
 31505  004E88  0012               	return	
 31506                           
 31507                           ;SSD1306oLED.c: 337: {
 31508                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 31509  004E8A  C011  F003         	movff	i2oled_putString@index,i2oled_putChar@station_dot
 31510  004E8E  C010  F004         	movff	i2oled_putString@start_page,i2oled_putChar@start_page
 31511  004E92  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 31512  004E96  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 31513  004E9A  6AF8               	clrf	tblptru,c
 31514  004E9C  0E07               	movlw	(high __ramtop+-1)
 31515  004E9E  64F7               	cpfsgt	tblptrh,c
 31516  004EA0  D003               	bra	i2u871_47
 31517  004EA2  0008               	tblrd		*
 31518  004EA4  50F5               	movf	tablat,w,c
 31519  004EA6  D005               	bra	i2u871_40
 31520  004EA8                     i2u871_47:
 31521  004EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 31522  004EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 31523  004EB0  50EF               	movf	indf0,w,c
 31524  004EB2                     i2u871_40:
 31525  004EB2  EC42  F025         	call	i2_oled_putChar
 31526                           
 31527                           ;SSD1306oLED.c: 339: *string++;
 31528  004EB6  4A0D               	infsnz	i2oled_putString@string,f,c
 31529  004EB8  2A0E               	incf	i2oled_putString@string+1,f,c
 31530                           
 31531                           ;SSD1306oLED.c: 341: else
 31532                           ;SSD1306oLED.c: 342: {
 31533                           ;SSD1306oLED.c: 343: break;
 31534                           
 31535                           ;SSD1306oLED.c: 340: }
 31536  004EBA  2A11               	incf	i2oled_putString@index,f,c
 31537  004EBC  D7CF               	goto	i2l10150
 31538  004EBE                     __end_ofi2_oled_putString:
 31539                           	opt stack 0
 31540                           tosu	equ	0xFFF
 31541                           tosh	equ	0xFFE
 31542                           tosl	equ	0xFFD
 31543                           pclatu	equ	0xFFB
 31544                           pclath	equ	0xFFA
 31545                           tblptru	equ	0xFF8
 31546                           tblptrh	equ	0xFF7
 31547                           tblptrl	equ	0xFF6
 31548                           tablat	equ	0xFF5
 31549                           prodh	equ	0xFF4
 31550                           prodl	equ	0xFF3
 31551                           intcon	equ	0xFF2
 31552                           intcon2	equ	0xFF1
 31553                           intcon3	equ	0xFF0
 31554                           indf0	equ	0xFEF
 31555                           postinc0	equ	0xFEE
 31556                           fsr0h	equ	0xFEA
 31557                           fsr0l	equ	0xFE9
 31558                           wreg	equ	0xFE8
 31559                           indf1	equ	0xFE7
 31560                           postdec1	equ	0xFE5
 31561                           fsr1h	equ	0xFE2
 31562                           fsr1l	equ	0xFE1
 31563                           indf2	equ	0xFDF
 31564                           postinc2	equ	0xFDE
 31565                           postdec2	equ	0xFDD
 31566                           plusw2	equ	0xFDB
 31567                           fsr2h	equ	0xFDA
 31568                           fsr2l	equ	0xFD9
 31569                           status	equ	0xFD8
 31570                           
 31571 ;; *************** function i2_oled_clear *****************
 31572 ;; Defined at:
 31573 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 31574 ;; Parameters:    Size  Location     Type
 31575 ;;		None
 31576 ;; Auto vars:     Size  Location     Type
 31577 ;;		None
 31578 ;; Return value:  Size  Location     Type
 31579 ;;                  1    wreg      void 
 31580 ;; Registers used:
 31581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31582 ;; Tracked objects:
 31583 ;;		On entry : 0/0
 31584 ;;		On exit  : 0/0
 31585 ;;		Unchanged: 0/0
 31586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31587 ;;      Params:         0       0       0       0       0       0       0       0       0
 31588 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31589 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31590 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31591 ;;Total ram usage:        0 bytes
 31592 ;; Hardware stack levels used:    1
 31593 ;; Hardware stack levels required when called:    4
 31594 ;; This function calls:
 31595 ;;		i2_oled_clearRow
 31596 ;; This function is called by:
 31597 ;;		_InterruptTimerUART
 31598 ;;		_printfOled
 31599 ;; This function uses a non-reentrant model
 31600 ;;
 31601                           
 31602                           	psect	text145
 31603  00596A                     __ptext145:
 31604                           	opt stack 0
 31605  00596A                     i2_oled_clear:
 31606                           	opt stack 15
 31607                           
 31608                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 31609                           
 31610                           ;incstack = 0
 31611  00596A  0E00               	movlw	0
 31612  00596C  EC53  F02C         	call	i2_oled_clearRow
 31613                           
 31614                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 31615  005970  0E01               	movlw	1
 31616  005972  EC53  F02C         	call	i2_oled_clearRow
 31617                           
 31618                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 31619  005976  0E02               	movlw	2
 31620  005978  EC53  F02C         	call	i2_oled_clearRow
 31621                           
 31622                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 31623  00597C  0E03               	movlw	3
 31624  00597E  EC53  F02C         	call	i2_oled_clearRow
 31625  005982  0012               	return		;funcret
 31626  005984                     __end_ofi2_oled_clear:
 31627                           	opt stack 0
 31628                           tosu	equ	0xFFF
 31629                           tosh	equ	0xFFE
 31630                           tosl	equ	0xFFD
 31631                           pclatu	equ	0xFFB
 31632                           pclath	equ	0xFFA
 31633                           tblptru	equ	0xFF8
 31634                           tblptrh	equ	0xFF7
 31635                           tblptrl	equ	0xFF6
 31636                           tablat	equ	0xFF5
 31637                           prodh	equ	0xFF4
 31638                           prodl	equ	0xFF3
 31639                           intcon	equ	0xFF2
 31640                           intcon2	equ	0xFF1
 31641                           intcon3	equ	0xFF0
 31642                           indf0	equ	0xFEF
 31643                           postinc0	equ	0xFEE
 31644                           fsr0h	equ	0xFEA
 31645                           fsr0l	equ	0xFE9
 31646                           wreg	equ	0xFE8
 31647                           indf1	equ	0xFE7
 31648                           postdec1	equ	0xFE5
 31649                           fsr1h	equ	0xFE2
 31650                           fsr1l	equ	0xFE1
 31651                           indf2	equ	0xFDF
 31652                           postinc2	equ	0xFDE
 31653                           postdec2	equ	0xFDD
 31654                           plusw2	equ	0xFDB
 31655                           fsr2h	equ	0xFDA
 31656                           fsr2l	equ	0xFD9
 31657                           status	equ	0xFD8
 31658                           
 31659 ;; *************** function i2_oled_clearRow *****************
 31660 ;; Defined at:
 31661 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 31662 ;; Parameters:    Size  Location     Type
 31663 ;;  page            1    wreg     unsigned char 
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;  page            1   12[COMRAM] unsigned char 
 31666 ;;  oled_clearRo    1   13[COMRAM] unsigned char 
 31667 ;; Return value:  Size  Location     Type
 31668 ;;                  1    wreg      void 
 31669 ;; Registers used:
 31670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31671 ;; Tracked objects:
 31672 ;;		On entry : 0/0
 31673 ;;		On exit  : 0/0
 31674 ;;		Unchanged: 0/0
 31675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31676 ;;      Params:         0       0       0       0       0       0       0       0       0
 31677 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31679 ;;      Totals:         2       0       0       0       0       0       0       0       0
 31680 ;;Total ram usage:        2 bytes
 31681 ;; Hardware stack levels used:    1
 31682 ;; Hardware stack levels required when called:    3
 31683 ;; This function calls:
 31684 ;;		i2_oled_putChar
 31685 ;; This function is called by:
 31686 ;;		i2_oled_clear
 31687 ;; This function uses a non-reentrant model
 31688 ;;
 31689                           
 31690                           	psect	text146
 31691  0058A6                     __ptext146:
 31692                           	opt stack 0
 31693  0058A6                     i2_oled_clearRow:
 31694                           	opt stack 15
 31695                           
 31696                           ;incstack = 0
 31697                           ;i2oled_clearRow@page stored from wreg
 31698  0058A6  6E0D               	movwf	i2oled_clearRow@page,c
 31699                           
 31700                           ;SSD1306oLED.c: 358: uint8_t index;
 31701                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 31702  0058A8  0E00               	movlw	0
 31703  0058AA  6E0E               	movwf	i2oled_clearRow@index,c
 31704  0058AC                     i2l9432:
 31705  0058AC  0E0F               	movlw	15
 31706  0058AE  640E               	cpfsgt	i2oled_clearRow@index,c
 31707  0058B0  D001               	goto	i2l1055
 31708  0058B2  0012               	return	
 31709  0058B4                     i2l1055:
 31710                           
 31711                           ;SSD1306oLED.c: 361: {
 31712                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 31713  0058B4  C00E  F003         	movff	i2oled_clearRow@index,i2oled_putChar@station_dot
 31714  0058B8  C00D  F004         	movff	i2oled_clearRow@page,i2oled_putChar@start_page
 31715  0058BC  0E20               	movlw	32
 31716  0058BE  EC42  F025         	call	i2_oled_putChar
 31717  0058C2  2A0E               	incf	i2oled_clearRow@index,f,c
 31718  0058C4  D7F3               	goto	i2l9432
 31719  0058C6                     __end_ofi2_oled_clearRow:
 31720                           	opt stack 0
 31721                           tosu	equ	0xFFF
 31722                           tosh	equ	0xFFE
 31723                           tosl	equ	0xFFD
 31724                           pclatu	equ	0xFFB
 31725                           pclath	equ	0xFFA
 31726                           tblptru	equ	0xFF8
 31727                           tblptrh	equ	0xFF7
 31728                           tblptrl	equ	0xFF6
 31729                           tablat	equ	0xFF5
 31730                           prodh	equ	0xFF4
 31731                           prodl	equ	0xFF3
 31732                           intcon	equ	0xFF2
 31733                           intcon2	equ	0xFF1
 31734                           intcon3	equ	0xFF0
 31735                           indf0	equ	0xFEF
 31736                           postinc0	equ	0xFEE
 31737                           fsr0h	equ	0xFEA
 31738                           fsr0l	equ	0xFE9
 31739                           wreg	equ	0xFE8
 31740                           indf1	equ	0xFE7
 31741                           postdec1	equ	0xFE5
 31742                           fsr1h	equ	0xFE2
 31743                           fsr1l	equ	0xFE1
 31744                           indf2	equ	0xFDF
 31745                           postinc2	equ	0xFDE
 31746                           postdec2	equ	0xFDD
 31747                           plusw2	equ	0xFDB
 31748                           fsr2h	equ	0xFDA
 31749                           fsr2l	equ	0xFD9
 31750                           status	equ	0xFD8
 31751                           
 31752 ;; *************** function i2_oled_putChar *****************
 31753 ;; Defined at:
 31754 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 31755 ;; Parameters:    Size  Location     Type
 31756 ;;  k               1    wreg     unsigned char 
 31757 ;;  station_dot     1    2[COMRAM] unsigned char 
 31758 ;;  start_page      1    3[COMRAM] unsigned char 
 31759 ;; Auto vars:     Size  Location     Type
 31760 ;;  k               1   10[COMRAM] unsigned char 
 31761 ;;  oled_putChar    1   11[COMRAM] unsigned char 
 31762 ;; Return value:  Size  Location     Type
 31763 ;;                  1    wreg      void 
 31764 ;; Registers used:
 31765 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31766 ;; Tracked objects:
 31767 ;;		On entry : 0/0
 31768 ;;		On exit  : 0/0
 31769 ;;		Unchanged: 0/0
 31770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31771 ;;      Params:         2       0       0       0       0       0       0       0       0
 31772 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31773 ;;      Temps:          6       0       0       0       0       0       0       0       0
 31774 ;;      Totals:        10       0       0       0       0       0       0       0       0
 31775 ;;Total ram usage:       10 bytes
 31776 ;; Hardware stack levels used:    1
 31777 ;; Hardware stack levels required when called:    2
 31778 ;; This function calls:
 31779 ;;		i2_Set_Column_Address
 31780 ;;		i2_Set_Page_Address
 31781 ;;		i2_oled_writeData
 31782 ;; This function is called by:
 31783 ;;		i2_oled_putString
 31784 ;;		i2_oled_clearRow
 31785 ;; This function uses a non-reentrant model
 31786 ;;
 31787                           
 31788                           	psect	text147
 31789  004A84                     __ptext147:
 31790                           	opt stack 0
 31791  004A84                     i2_oled_putChar:
 31792                           	opt stack 15
 31793                           
 31794                           ;incstack = 0
 31795                           ;i2oled_putChar@k stored from wreg
 31796  004A84  6E0B               	movwf	i2oled_putChar@k,c
 31797                           
 31798                           ;SSD1306oLED.c: 320: uint8_t index;
 31799                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 31800  004A86  5004               	movf	i2oled_putChar@start_page,w,c
 31801  004A88  EC5E  F02D         	call	i2_Set_Page_Address
 31802                           
 31803                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 31804  004A8C  5003               	movf	i2oled_putChar@station_dot,w,c
 31805  004A8E  0D08               	mullw	8
 31806  004A90  50F3               	movf	prodl,w,c
 31807  004A92  0F04               	addlw	4
 31808  004A94  ECEE  F02C         	call	i2_Set_Column_Address
 31809                           
 31810                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 31811  004A98  0E00               	movlw	0
 31812  004A9A  6E0C               	movwf	i2oled_putChar@index,c
 31813  004A9C                     i2l8490:
 31814  004A9C  0E07               	movlw	7
 31815  004A9E  640C               	cpfsgt	i2oled_putChar@index,c
 31816  004AA0  D001               	goto	i2l1040
 31817  004AA2  0012               	return	
 31818  004AA4                     i2l1040:
 31819                           
 31820                           ;SSD1306oLED.c: 326: {
 31821                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 31822  004AA4  500C               	movf	i2oled_putChar@index,w,c
 31823  004AA6  0D01               	mullw	1
 31824  004AA8  0E00               	movlw	0
 31825  004AAA  6E05               	movwf	??i2_oled_putChar& (0+255),c
 31826  004AAC  0EFF               	movlw	255
 31827  004AAE  6E06               	movwf	(??i2_oled_putChar+1)& (0+255),c
 31828  004AB0  500B               	movf	i2oled_putChar@k,w,c
 31829  004AB2  6E07               	movwf	(??i2_oled_putChar+2)& (0+255),c
 31830  004AB4  6A08               	clrf	(??i2_oled_putChar+3)& (0+255),c
 31831  004AB6  90D8               	bcf	status,0,c
 31832  004AB8  3607               	rlcf	??i2_oled_putChar+2,f,c
 31833  004ABA  3608               	rlcf	??i2_oled_putChar+3,f,c
 31834  004ABC  90D8               	bcf	status,0,c
 31835  004ABE  3607               	rlcf	??i2_oled_putChar+2,f,c
 31836  004AC0  3608               	rlcf	??i2_oled_putChar+3,f,c
 31837  004AC2  90D8               	bcf	status,0,c
 31838  004AC4  3607               	rlcf	??i2_oled_putChar+2,f,c
 31839  004AC6  3608               	rlcf	??i2_oled_putChar+3,f,c
 31840  004AC8  5005               	movf	??i2_oled_putChar,w,c
 31841  004ACA  2607               	addwf	??i2_oled_putChar+2,f,c
 31842  004ACC  5006               	movf	??i2_oled_putChar+1,w,c
 31843  004ACE  2208               	addwfc	??i2_oled_putChar+3,f,c
 31844  004AD0  C1FA  F009         	movff	_selectedFont,??i2_oled_putChar+4
 31845  004AD4  C1FB  F00A         	movff	_selectedFont+1,??i2_oled_putChar+5
 31846  004AD8  5007               	movf	??i2_oled_putChar+2,w,c
 31847  004ADA  2609               	addwf	??i2_oled_putChar+4,f,c
 31848  004ADC  5008               	movf	??i2_oled_putChar+3,w,c
 31849  004ADE  220A               	addwfc	??i2_oled_putChar+5,f,c
 31850  004AE0  50F3               	movf	prodl,w,c
 31851  004AE2  2609               	addwf	??i2_oled_putChar+4,f,c
 31852  004AE4  50F4               	movf	prodh,w,c
 31853  004AE6  220A               	addwfc	??i2_oled_putChar+5,f,c
 31854  004AE8  C009  FFF6         	movff	??i2_oled_putChar+4,tblptrl
 31855  004AEC  C00A  FFF7         	movff	??i2_oled_putChar+5,tblptrh
 31856  004AF0                     	if	0	;tblptru may be non-zero
 31857  004AF0                     	endif
 31858  004AF0                     	if	0	;tblptru may be non-zero
 31859  004AF0                     	endif
 31860  004AF0  0008               	tblrd		*
 31861  004AF2  50F5               	movf	tablat,w,c
 31862  004AF4  EC21  F02D         	call	i2_oled_writeData
 31863  004AF8  2A0C               	incf	i2oled_putChar@index,f,c
 31864  004AFA  D7D0               	goto	i2l8490
 31865  004AFC                     __end_ofi2_oled_putChar:
 31866                           	opt stack 0
 31867                           tosu	equ	0xFFF
 31868                           tosh	equ	0xFFE
 31869                           tosl	equ	0xFFD
 31870                           pclatu	equ	0xFFB
 31871                           pclath	equ	0xFFA
 31872                           tblptru	equ	0xFF8
 31873                           tblptrh	equ	0xFF7
 31874                           tblptrl	equ	0xFF6
 31875                           tablat	equ	0xFF5
 31876                           prodh	equ	0xFF4
 31877                           prodl	equ	0xFF3
 31878                           intcon	equ	0xFF2
 31879                           intcon2	equ	0xFF1
 31880                           intcon3	equ	0xFF0
 31881                           indf0	equ	0xFEF
 31882                           postinc0	equ	0xFEE
 31883                           fsr0h	equ	0xFEA
 31884                           fsr0l	equ	0xFE9
 31885                           wreg	equ	0xFE8
 31886                           indf1	equ	0xFE7
 31887                           postdec1	equ	0xFE5
 31888                           fsr1h	equ	0xFE2
 31889                           fsr1l	equ	0xFE1
 31890                           indf2	equ	0xFDF
 31891                           postinc2	equ	0xFDE
 31892                           postdec2	equ	0xFDD
 31893                           plusw2	equ	0xFDB
 31894                           fsr2h	equ	0xFDA
 31895                           fsr2l	equ	0xFD9
 31896                           status	equ	0xFD8
 31897                           
 31898 ;; *************** function i2_oled_writeData *****************
 31899 ;; Defined at:
 31900 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 31901 ;; Parameters:    Size  Location     Type
 31902 ;;  data            1    wreg     unsigned char 
 31903 ;; Auto vars:     Size  Location     Type
 31904 ;;  data            1    0[COMRAM] unsigned char 
 31905 ;; Return value:  Size  Location     Type
 31906 ;;                  1    wreg      void 
 31907 ;; Registers used:
 31908 ;;		wreg
 31909 ;; Tracked objects:
 31910 ;;		On entry : 0/0
 31911 ;;		On exit  : 0/0
 31912 ;;		Unchanged: 0/0
 31913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31914 ;;      Params:         0       0       0       0       0       0       0       0       0
 31915 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31917 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31918 ;;Total ram usage:        1 bytes
 31919 ;; Hardware stack levels used:    1
 31920 ;; This function calls:
 31921 ;;		Nothing
 31922 ;; This function is called by:
 31923 ;;		i2_oled_putChar
 31924 ;; This function uses a non-reentrant model
 31925 ;;
 31926                           
 31927                           	psect	text148
 31928  005A42                     __ptext148:
 31929                           	opt stack 0
 31930  005A42                     i2_oled_writeData:
 31931                           	opt stack 16
 31932                           
 31933                           ;incstack = 0
 31934                           ;i2oled_writeData@data stored from wreg
 31935  005A42  6E01               	movwf	i2oled_writeData@data,c
 31936                           
 31937                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 31938  005A44  988A               	bcf	3978,4,c	;volatile
 31939                           
 31940                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 31941  005A46  808B               	bsf	3979,0,c	;volatile
 31942                           
 31943                           ;SSD1306oLED.c: 446: LATD=data;
 31944  005A48  C001  FF8C         	movff	i2oled_writeData@data,3980	;volatile
 31945                           
 31946                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 31947  005A4C  928B               	bcf	3979,1,c	;volatile
 31948                           
 31949                           ;SSD1306oLED.c: 448: __nop();
 31950  005A4E  F000               	nop	
 31951                           
 31952                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 31953  005A50  828B               	bsf	3979,1,c	;volatile
 31954                           
 31955                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 31956  005A52  888A               	bsf	3978,4,c	;volatile
 31957  005A54  0012               	return	
 31958  005A56                     __end_ofi2_oled_writeData:
 31959                           	opt stack 0
 31960                           tosu	equ	0xFFF
 31961                           tosh	equ	0xFFE
 31962                           tosl	equ	0xFFD
 31963                           pclatu	equ	0xFFB
 31964                           pclath	equ	0xFFA
 31965                           tblptru	equ	0xFF8
 31966                           tblptrh	equ	0xFF7
 31967                           tblptrl	equ	0xFF6
 31968                           tablat	equ	0xFF5
 31969                           prodh	equ	0xFF4
 31970                           prodl	equ	0xFF3
 31971                           intcon	equ	0xFF2
 31972                           intcon2	equ	0xFF1
 31973                           intcon3	equ	0xFF0
 31974                           indf0	equ	0xFEF
 31975                           postinc0	equ	0xFEE
 31976                           fsr0h	equ	0xFEA
 31977                           fsr0l	equ	0xFE9
 31978                           wreg	equ	0xFE8
 31979                           indf1	equ	0xFE7
 31980                           postdec1	equ	0xFE5
 31981                           fsr1h	equ	0xFE2
 31982                           fsr1l	equ	0xFE1
 31983                           indf2	equ	0xFDF
 31984                           postinc2	equ	0xFDE
 31985                           postdec2	equ	0xFDD
 31986                           plusw2	equ	0xFDB
 31987                           fsr2h	equ	0xFDA
 31988                           fsr2l	equ	0xFD9
 31989                           status	equ	0xFD8
 31990                           
 31991 ;; *************** function i2_Set_Page_Address *****************
 31992 ;; Defined at:
 31993 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 31994 ;; Parameters:    Size  Location     Type
 31995 ;;  address         1    wreg     unsigned char 
 31996 ;; Auto vars:     Size  Location     Type
 31997 ;;  address         1    1[COMRAM] unsigned char 
 31998 ;; Return value:  Size  Location     Type
 31999 ;;                  1    wreg      void 
 32000 ;; Registers used:
 32001 ;;		wreg, status,2, status,0, cstack
 32002 ;; Tracked objects:
 32003 ;;		On entry : 0/0
 32004 ;;		On exit  : 0/0
 32005 ;;		Unchanged: 0/0
 32006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32007 ;;      Params:         0       0       0       0       0       0       0       0       0
 32008 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32009 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32010 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32011 ;;Total ram usage:        1 bytes
 32012 ;; Hardware stack levels used:    1
 32013 ;; Hardware stack levels required when called:    1
 32014 ;; This function calls:
 32015 ;;		i2_oled_writeCommand
 32016 ;; This function is called by:
 32017 ;;		i2_oled_putChar
 32018 ;; This function uses a non-reentrant model
 32019 ;;
 32020                           
 32021                           	psect	text149
 32022  005ABC                     __ptext149:
 32023                           	opt stack 0
 32024  005ABC                     i2_Set_Page_Address:
 32025                           	opt stack 15
 32026                           
 32027                           ;incstack = 0
 32028                           ;i2Set_Page_Address@address stored from wreg
 32029  005ABC  6E02               	movwf	i2Set_Page_Address@address,c
 32030                           
 32031                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 32032  005ABE  5002               	movf	i2Set_Page_Address@address,w,c
 32033  005AC0  09B0               	iorlw	176
 32034  005AC2  6E02               	movwf	i2Set_Page_Address@address,c
 32035                           
 32036                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 32037  005AC4  5002               	movf	i2Set_Page_Address@address,w,c
 32038  005AC6  EC2B  F02D         	call	i2_oled_writeCommand
 32039  005ACA  0012               	return	
 32040  005ACC                     __end_ofi2_Set_Page_Address:
 32041                           	opt stack 0
 32042                           tosu	equ	0xFFF
 32043                           tosh	equ	0xFFE
 32044                           tosl	equ	0xFFD
 32045                           pclatu	equ	0xFFB
 32046                           pclath	equ	0xFFA
 32047                           tblptru	equ	0xFF8
 32048                           tblptrh	equ	0xFF7
 32049                           tblptrl	equ	0xFF6
 32050                           tablat	equ	0xFF5
 32051                           prodh	equ	0xFF4
 32052                           prodl	equ	0xFF3
 32053                           intcon	equ	0xFF2
 32054                           intcon2	equ	0xFF1
 32055                           intcon3	equ	0xFF0
 32056                           indf0	equ	0xFEF
 32057                           postinc0	equ	0xFEE
 32058                           fsr0h	equ	0xFEA
 32059                           fsr0l	equ	0xFE9
 32060                           wreg	equ	0xFE8
 32061                           indf1	equ	0xFE7
 32062                           postdec1	equ	0xFE5
 32063                           fsr1h	equ	0xFE2
 32064                           fsr1l	equ	0xFE1
 32065                           indf2	equ	0xFDF
 32066                           postinc2	equ	0xFDE
 32067                           postdec2	equ	0xFDD
 32068                           plusw2	equ	0xFDB
 32069                           fsr2h	equ	0xFDA
 32070                           fsr2l	equ	0xFD9
 32071                           status	equ	0xFD8
 32072                           
 32073 ;; *************** function i2_Set_Column_Address *****************
 32074 ;; Defined at:
 32075 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 32076 ;; Parameters:    Size  Location     Type
 32077 ;;  address         1    wreg     unsigned char 
 32078 ;; Auto vars:     Size  Location     Type
 32079 ;;  address         1    1[COMRAM] unsigned char 
 32080 ;; Return value:  Size  Location     Type
 32081 ;;                  1    wreg      void 
 32082 ;; Registers used:
 32083 ;;		wreg, status,2, status,0, cstack
 32084 ;; Tracked objects:
 32085 ;;		On entry : 0/0
 32086 ;;		On exit  : 0/0
 32087 ;;		Unchanged: 0/0
 32088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32089 ;;      Params:         0       0       0       0       0       0       0       0       0
 32090 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32092 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32093 ;;Total ram usage:        1 bytes
 32094 ;; Hardware stack levels used:    1
 32095 ;; Hardware stack levels required when called:    1
 32096 ;; This function calls:
 32097 ;;		i2_oled_writeCommand
 32098 ;; This function is called by:
 32099 ;;		i2_oled_putChar
 32100 ;; This function uses a non-reentrant model
 32101 ;;
 32102                           
 32103                           	psect	text150
 32104  0059DC                     __ptext150:
 32105                           	opt stack 0
 32106  0059DC                     i2_Set_Column_Address:
 32107                           	opt stack 15
 32108                           
 32109                           ;incstack = 0
 32110                           ;i2Set_Column_Address@address stored from wreg
 32111  0059DC  6E02               	movwf	i2Set_Column_Address@address,c
 32112                           
 32113                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 32114  0059DE  3802               	swapf	i2Set_Column_Address@address,w,c
 32115  0059E0  0B0F               	andlw	15
 32116  0059E2  0910               	iorlw	16
 32117  0059E4  EC2B  F02D         	call	i2_oled_writeCommand
 32118                           
 32119                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 32120  0059E8  5002               	movf	i2Set_Column_Address@address,w,c
 32121  0059EA  0B0F               	andlw	15
 32122  0059EC  EC2B  F02D         	call	i2_oled_writeCommand
 32123  0059F0  0012               	return	
 32124  0059F2                     __end_ofi2_Set_Column_Address:
 32125                           	opt stack 0
 32126                           tosu	equ	0xFFF
 32127                           tosh	equ	0xFFE
 32128                           tosl	equ	0xFFD
 32129                           pclatu	equ	0xFFB
 32130                           pclath	equ	0xFFA
 32131                           tblptru	equ	0xFF8
 32132                           tblptrh	equ	0xFF7
 32133                           tblptrl	equ	0xFF6
 32134                           tablat	equ	0xFF5
 32135                           prodh	equ	0xFF4
 32136                           prodl	equ	0xFF3
 32137                           intcon	equ	0xFF2
 32138                           intcon2	equ	0xFF1
 32139                           intcon3	equ	0xFF0
 32140                           indf0	equ	0xFEF
 32141                           postinc0	equ	0xFEE
 32142                           fsr0h	equ	0xFEA
 32143                           fsr0l	equ	0xFE9
 32144                           wreg	equ	0xFE8
 32145                           indf1	equ	0xFE7
 32146                           postdec1	equ	0xFE5
 32147                           fsr1h	equ	0xFE2
 32148                           fsr1l	equ	0xFE1
 32149                           indf2	equ	0xFDF
 32150                           postinc2	equ	0xFDE
 32151                           postdec2	equ	0xFDD
 32152                           plusw2	equ	0xFDB
 32153                           fsr2h	equ	0xFDA
 32154                           fsr2l	equ	0xFD9
 32155                           status	equ	0xFD8
 32156                           
 32157 ;; *************** function i2_oled_writeCommand *****************
 32158 ;; Defined at:
 32159 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 32160 ;; Parameters:    Size  Location     Type
 32161 ;;  command         1    wreg     unsigned char 
 32162 ;; Auto vars:     Size  Location     Type
 32163 ;;  command         1    0[COMRAM] unsigned char 
 32164 ;; Return value:  Size  Location     Type
 32165 ;;                  1    wreg      void 
 32166 ;; Registers used:
 32167 ;;		wreg
 32168 ;; Tracked objects:
 32169 ;;		On entry : 0/0
 32170 ;;		On exit  : 0/0
 32171 ;;		Unchanged: 0/0
 32172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32173 ;;      Params:         0       0       0       0       0       0       0       0       0
 32174 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32176 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32177 ;;Total ram usage:        1 bytes
 32178 ;; Hardware stack levels used:    1
 32179 ;; This function calls:
 32180 ;;		Nothing
 32181 ;; This function is called by:
 32182 ;;		i2_Set_Page_Address
 32183 ;;		i2_Set_Column_Address
 32184 ;; This function uses a non-reentrant model
 32185 ;;
 32186                           
 32187                           	psect	text151
 32188  005A56                     __ptext151:
 32189                           	opt stack 0
 32190  005A56                     i2_oled_writeCommand:
 32191                           	opt stack 15
 32192                           
 32193                           ;incstack = 0
 32194                           ;i2oled_writeCommand@command stored from wreg
 32195  005A56  6E01               	movwf	i2oled_writeCommand@command,c
 32196                           
 32197                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 32198  005A58  988A               	bcf	3978,4,c	;volatile
 32199                           
 32200                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 32201  005A5A  908B               	bcf	3979,0,c	;volatile
 32202                           
 32203                           ;SSD1306oLED.c: 434: LATD=command;
 32204  005A5C  C001  FF8C         	movff	i2oled_writeCommand@command,3980	;volatile
 32205                           
 32206                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 32207  005A60  928B               	bcf	3979,1,c	;volatile
 32208                           
 32209                           ;SSD1306oLED.c: 436: __nop();
 32210  005A62  F000               	nop	
 32211                           
 32212                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 32213  005A64  828B               	bsf	3979,1,c	;volatile
 32214                           
 32215                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 32216  005A66  888A               	bsf	3978,4,c	;volatile
 32217  005A68  0012               	return	
 32218  005A6A                     __end_ofi2_oled_writeCommand:
 32219                           	opt stack 0
 32220                           tosu	equ	0xFFF
 32221                           tosh	equ	0xFFE
 32222                           tosl	equ	0xFFD
 32223                           pclatu	equ	0xFFB
 32224                           pclath	equ	0xFFA
 32225                           tblptru	equ	0xFF8
 32226                           tblptrh	equ	0xFF7
 32227                           tblptrl	equ	0xFF6
 32228                           tablat	equ	0xFF5
 32229                           prodh	equ	0xFF4
 32230                           prodl	equ	0xFF3
 32231                           intcon	equ	0xFF2
 32232                           intcon2	equ	0xFF1
 32233                           intcon3	equ	0xFF0
 32234                           indf0	equ	0xFEF
 32235                           postinc0	equ	0xFEE
 32236                           fsr0h	equ	0xFEA
 32237                           fsr0l	equ	0xFE9
 32238                           wreg	equ	0xFE8
 32239                           indf1	equ	0xFE7
 32240                           postdec1	equ	0xFE5
 32241                           fsr1h	equ	0xFE2
 32242                           fsr1l	equ	0xFE1
 32243                           indf2	equ	0xFDF
 32244                           postinc2	equ	0xFDE
 32245                           postdec2	equ	0xFDD
 32246                           plusw2	equ	0xFDB
 32247                           fsr2h	equ	0xFDA
 32248                           fsr2l	equ	0xFD9
 32249                           status	equ	0xFD8
 32250                           
 32251 ;; *************** function _clearInterruptTimerUART *****************
 32252 ;; Defined at:
 32253 ;;		line 197 in file "../Includes/Drivers/swUart.c"
 32254 ;; Parameters:    Size  Location     Type
 32255 ;;		None
 32256 ;; Auto vars:     Size  Location     Type
 32257 ;;		None
 32258 ;; Return value:  Size  Location     Type
 32259 ;;                  1    wreg      void 
 32260 ;; Registers used:
 32261 ;;		cstack
 32262 ;; Tracked objects:
 32263 ;;		On entry : 0/0
 32264 ;;		On exit  : 0/0
 32265 ;;		Unchanged: 0/0
 32266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32267 ;;      Params:         0       0       0       0       0       0       0       0       0
 32268 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32269 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32270 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32271 ;;Total ram usage:        0 bytes
 32272 ;; Hardware stack levels used:    1
 32273 ;; Hardware stack levels required when called:    1
 32274 ;; This function calls:
 32275 ;;		_TMR0_Clear
 32276 ;; This function is called by:
 32277 ;;		_InterruptTimerUART
 32278 ;; This function uses a non-reentrant model
 32279 ;;
 32280                           
 32281                           	psect	text152
 32282  005B6E                     __ptext152:
 32283                           	opt stack 0
 32284  005B6E                     _clearInterruptTimerUART:
 32285                           	opt stack 18
 32286                           
 32287                           ;swUart.c: 199: TMR0_Clear();
 32288                           
 32289                           ;incstack = 0
 32290  005B6E  ECC4  F02D         	call	_TMR0_Clear	;wreg free
 32291  005B72  0012               	return		;funcret
 32292  005B74                     __end_of_clearInterruptTimerUART:
 32293                           	opt stack 0
 32294                           tosu	equ	0xFFF
 32295                           tosh	equ	0xFFE
 32296                           tosl	equ	0xFFD
 32297                           pclatu	equ	0xFFB
 32298                           pclath	equ	0xFFA
 32299                           tblptru	equ	0xFF8
 32300                           tblptrh	equ	0xFF7
 32301                           tblptrl	equ	0xFF6
 32302                           tablat	equ	0xFF5
 32303                           prodh	equ	0xFF4
 32304                           prodl	equ	0xFF3
 32305                           intcon	equ	0xFF2
 32306                           intcon2	equ	0xFF1
 32307                           intcon3	equ	0xFF0
 32308                           indf0	equ	0xFEF
 32309                           postinc0	equ	0xFEE
 32310                           fsr0h	equ	0xFEA
 32311                           fsr0l	equ	0xFE9
 32312                           wreg	equ	0xFE8
 32313                           indf1	equ	0xFE7
 32314                           postdec1	equ	0xFE5
 32315                           fsr1h	equ	0xFE2
 32316                           fsr1l	equ	0xFE1
 32317                           indf2	equ	0xFDF
 32318                           postinc2	equ	0xFDE
 32319                           postdec2	equ	0xFDD
 32320                           plusw2	equ	0xFDB
 32321                           fsr2h	equ	0xFDA
 32322                           fsr2l	equ	0xFD9
 32323                           status	equ	0xFD8
 32324                           
 32325 ;; *************** function _TMR0_Clear *****************
 32326 ;; Defined at:
 32327 ;;		line 142 in file "../Includes/MccGenerated/tmr0.c"
 32328 ;; Parameters:    Size  Location     Type
 32329 ;;		None
 32330 ;; Auto vars:     Size  Location     Type
 32331 ;;		None
 32332 ;; Return value:  Size  Location     Type
 32333 ;;                  1    wreg      void 
 32334 ;; Registers used:
 32335 ;;		None
 32336 ;; Tracked objects:
 32337 ;;		On entry : 0/0
 32338 ;;		On exit  : 0/0
 32339 ;;		Unchanged: 0/0
 32340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32341 ;;      Params:         0       0       0       0       0       0       0       0       0
 32342 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32343 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32344 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32345 ;;Total ram usage:        0 bytes
 32346 ;; Hardware stack levels used:    1
 32347 ;; This function calls:
 32348 ;;		Nothing
 32349 ;; This function is called by:
 32350 ;;		_clearInterruptTimerUART
 32351 ;; This function uses a non-reentrant model
 32352 ;;
 32353                           
 32354                           	psect	text153
 32355  005B88                     __ptext153:
 32356                           	opt stack 0
 32357  005B88                     _TMR0_Clear:
 32358                           	opt stack 18
 32359                           
 32360                           ;tmr0.c: 145: INTCONbits.TMR0IF = 0;
 32361                           
 32362                           ;incstack = 0
 32363  005B88  94F2               	bcf	intcon,2,c	;volatile
 32364  005B8A  0012               	return		;funcret
 32365  005B8C                     __end_of_TMR0_Clear:
 32366                           	opt stack 0
 32367                           tosu	equ	0xFFF
 32368                           tosh	equ	0xFFE
 32369                           tosl	equ	0xFFD
 32370                           pclatu	equ	0xFFB
 32371                           pclath	equ	0xFFA
 32372                           tblptru	equ	0xFF8
 32373                           tblptrh	equ	0xFF7
 32374                           tblptrl	equ	0xFF6
 32375                           tablat	equ	0xFF5
 32376                           prodh	equ	0xFF4
 32377                           prodl	equ	0xFF3
 32378                           intcon	equ	0xFF2
 32379                           intcon2	equ	0xFF1
 32380                           intcon3	equ	0xFF0
 32381                           indf0	equ	0xFEF
 32382                           postinc0	equ	0xFEE
 32383                           fsr0h	equ	0xFEA
 32384                           fsr0l	equ	0xFE9
 32385                           wreg	equ	0xFE8
 32386                           indf1	equ	0xFE7
 32387                           postdec1	equ	0xFE5
 32388                           fsr1h	equ	0xFE2
 32389                           fsr1l	equ	0xFE1
 32390                           indf2	equ	0xFDF
 32391                           postinc2	equ	0xFDE
 32392                           postdec2	equ	0xFDD
 32393                           plusw2	equ	0xFDB
 32394                           fsr2h	equ	0xFDA
 32395                           fsr2l	equ	0xFD9
 32396                           status	equ	0xFD8
 32397                           
 32398 ;; *************** function _TMR0_StopTimer *****************
 32399 ;; Defined at:
 32400 ;;		line 95 in file "../Includes/MccGenerated/tmr0.c"
 32401 ;; Parameters:    Size  Location     Type
 32402 ;;		None
 32403 ;; Auto vars:     Size  Location     Type
 32404 ;;		None
 32405 ;; Return value:  Size  Location     Type
 32406 ;;                  1    wreg      void 
 32407 ;; Registers used:
 32408 ;;		None
 32409 ;; Tracked objects:
 32410 ;;		On entry : 0/0
 32411 ;;		On exit  : 0/0
 32412 ;;		Unchanged: 0/0
 32413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32414 ;;      Params:         0       0       0       0       0       0       0       0       0
 32415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32418 ;;Total ram usage:        0 bytes
 32419 ;; Hardware stack levels used:    1
 32420 ;; This function calls:
 32421 ;;		Nothing
 32422 ;; This function is called by:
 32423 ;;		_InterruptTimerUART
 32424 ;; This function uses a non-reentrant model
 32425 ;;
 32426                           
 32427                           	psect	text154
 32428  005B8C                     __ptext154:
 32429                           	opt stack 0
 32430  005B8C                     _TMR0_StopTimer:
 32431                           	opt stack 19
 32432                           
 32433                           ;tmr0.c: 98: T0CONbits.TMR0ON = 0;
 32434                           
 32435                           ;incstack = 0
 32436  005B8C  9ED5               	bcf	4053,7,c	;volatile
 32437  005B8E  0012               	return		;funcret
 32438  005B90                     __end_of_TMR0_StopTimer:
 32439                           	opt stack 0
 32440                           tosu	equ	0xFFF
 32441                           tosh	equ	0xFFE
 32442                           tosl	equ	0xFFD
 32443                           pclatu	equ	0xFFB
 32444                           pclath	equ	0xFFA
 32445                           tblptru	equ	0xFF8
 32446                           tblptrh	equ	0xFF7
 32447                           tblptrl	equ	0xFF6
 32448                           tablat	equ	0xFF5
 32449                           prodh	equ	0xFF4
 32450                           prodl	equ	0xFF3
 32451                           intcon	equ	0xFF2
 32452                           intcon2	equ	0xFF1
 32453                           intcon3	equ	0xFF0
 32454                           indf0	equ	0xFEF
 32455                           postinc0	equ	0xFEE
 32456                           fsr0h	equ	0xFEA
 32457                           fsr0l	equ	0xFE9
 32458                           wreg	equ	0xFE8
 32459                           indf1	equ	0xFE7
 32460                           postdec1	equ	0xFE5
 32461                           fsr1h	equ	0xFE2
 32462                           fsr1l	equ	0xFE1
 32463                           indf2	equ	0xFDF
 32464                           postinc2	equ	0xFDE
 32465                           postdec2	equ	0xFDD
 32466                           plusw2	equ	0xFDB
 32467                           fsr2h	equ	0xFDA
 32468                           fsr2l	equ	0xFD9
 32469                           status	equ	0xFD8
 32470                           
 32471 ;; *************** function _InterruptPinRX *****************
 32472 ;; Defined at:
 32473 ;;		line 93 in file "../Includes/Drivers/swUart.c"
 32474 ;; Parameters:    Size  Location     Type
 32475 ;;		None
 32476 ;; Auto vars:     Size  Location     Type
 32477 ;;		None
 32478 ;; Return value:  Size  Location     Type
 32479 ;;                  1    wreg      void 
 32480 ;; Registers used:
 32481 ;;		wreg, status,2, cstack
 32482 ;; Tracked objects:
 32483 ;;		On entry : 0/0
 32484 ;;		On exit  : 0/0
 32485 ;;		Unchanged: 0/0
 32486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32487 ;;      Params:         0       0       0       0       0       0       0       0       0
 32488 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32490 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32491 ;;Total ram usage:        0 bytes
 32492 ;; Hardware stack levels used:    1
 32493 ;; Hardware stack levels required when called:    1
 32494 ;; This function calls:
 32495 ;;		_clearInterruptPinRX
 32496 ;;		_reloadTimer
 32497 ;;		i2_TMR0_StartTimer
 32498 ;; This function is called by:
 32499 ;;		_INTERRUPT_InterruptManager
 32500 ;; This function uses a non-reentrant model
 32501 ;;
 32502                           
 32503                           	psect	text155
 32504  0056D8                     __ptext155:
 32505                           	opt stack 0
 32506  0056D8                     _InterruptPinRX:
 32507                           	opt stack 19
 32508                           
 32509                           ;swUart.c: 96: if(status == SILENT)
 32510                           
 32511                           ;incstack = 0
 32512  0056D8  504F               	movf	_status,w,c
 32513  0056DA  B4D8               	btfsc	status,2,c
 32514                           
 32515                           ;swUart.c: 97: {
 32516                           ;swUart.c: 98: if(PORTBbits.RB7 == 0)
 32517  0056DC  BE81               	btfsc	3969,7,c	;volatile
 32518  0056DE  D010               	goto	i2l1140
 32519                           
 32520                           ;swUart.c: 99: {
 32521                           ;swUart.c: 102: TMR0_StartTimer();
 32522  0056E0  ECC8  F02D         	call	i2_TMR0_StartTimer	;wreg free
 32523                           
 32524                           ;swUart.c: 103: reloadTimer(34);
 32525  0056E4  0E22               	movlw	34
 32526  0056E6  EC93  F02D         	call	_reloadTimer
 32527                           
 32528                           ;swUart.c: 107: countBitsSilent = 0;
 32529  0056EA  0E00               	movlw	0
 32530  0056EC  6E4C               	movwf	_countBitsSilent,c
 32531                           
 32532                           ;swUart.c: 108: n_bit = 0;
 32533  0056EE  0E00               	movlw	0
 32534  0056F0  6E5B               	movwf	_n_bit,c
 32535                           
 32536                           ;swUart.c: 109: cs = 0;
 32537  0056F2  0E00               	movlw	0
 32538  0056F4  0101               	movlb	1	; () banked
 32539  0056F6  6F5E               	movwf	_cs& (0+255),b
 32540                           
 32541                           ; BSR set to: 1
 32542                           ;swUart.c: 110: rx_data = 0;
 32543  0056F8  0E00               	movlw	0
 32544  0056FA  6E4E               	movwf	_rx_data,c
 32545                           
 32546                           ; BSR set to: 1
 32547                           ;swUart.c: 111: status = N_BIT;
 32548  0056FC  0E01               	movlw	1
 32549  0056FE  6E4F               	movwf	_status,c
 32550  005700                     i2l1140:
 32551                           
 32552                           ;swUart.c: 112: }
 32553                           ;swUart.c: 113: }
 32554                           ;swUart.c: 115: clearInterruptPinRX();
 32555                           
 32556                           ; BSR set to: 1
 32557                           
 32558                           ; BSR set to: 1
 32559  005700  EC79  F02D         	call	_clearInterruptPinRX	;wreg free
 32560  005704  0012               	return		;funcret
 32561  005706                     __end_of_InterruptPinRX:
 32562                           	opt stack 0
 32563                           tosu	equ	0xFFF
 32564                           tosh	equ	0xFFE
 32565                           tosl	equ	0xFFD
 32566                           pclatu	equ	0xFFB
 32567                           pclath	equ	0xFFA
 32568                           tblptru	equ	0xFF8
 32569                           tblptrh	equ	0xFF7
 32570                           tblptrl	equ	0xFF6
 32571                           tablat	equ	0xFF5
 32572                           prodh	equ	0xFF4
 32573                           prodl	equ	0xFF3
 32574                           intcon	equ	0xFF2
 32575                           intcon2	equ	0xFF1
 32576                           intcon3	equ	0xFF0
 32577                           indf0	equ	0xFEF
 32578                           postinc0	equ	0xFEE
 32579                           fsr0h	equ	0xFEA
 32580                           fsr0l	equ	0xFE9
 32581                           wreg	equ	0xFE8
 32582                           indf1	equ	0xFE7
 32583                           postdec1	equ	0xFE5
 32584                           fsr1h	equ	0xFE2
 32585                           fsr1l	equ	0xFE1
 32586                           indf2	equ	0xFDF
 32587                           postinc2	equ	0xFDE
 32588                           postdec2	equ	0xFDD
 32589                           plusw2	equ	0xFDB
 32590                           fsr2h	equ	0xFDA
 32591                           fsr2l	equ	0xFD9
 32592                           status	equ	0xFD8
 32593                           
 32594 ;; *************** function i2_TMR0_StartTimer *****************
 32595 ;; Defined at:
 32596 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 32597 ;; Parameters:    Size  Location     Type
 32598 ;;		None
 32599 ;; Auto vars:     Size  Location     Type
 32600 ;;		None
 32601 ;; Return value:  Size  Location     Type
 32602 ;;                  1    wreg      void 
 32603 ;; Registers used:
 32604 ;;		None
 32605 ;; Tracked objects:
 32606 ;;		On entry : 0/0
 32607 ;;		On exit  : 0/0
 32608 ;;		Unchanged: 0/0
 32609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32610 ;;      Params:         0       0       0       0       0       0       0       0       0
 32611 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32612 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32613 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32614 ;;Total ram usage:        0 bytes
 32615 ;; Hardware stack levels used:    1
 32616 ;; This function calls:
 32617 ;;		Nothing
 32618 ;; This function is called by:
 32619 ;;		_InterruptPinRX
 32620 ;; This function uses a non-reentrant model
 32621 ;;
 32622                           
 32623                           	psect	text156
 32624  005B90                     __ptext156:
 32625                           	opt stack 0
 32626  005B90                     i2_TMR0_StartTimer:
 32627                           	opt stack 19
 32628                           
 32629                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 32630                           
 32631                           ;incstack = 0
 32632  005B90  8ED5               	bsf	4053,7,c	;volatile
 32633  005B92  0012               	return		;funcret
 32634  005B94                     __end_ofi2_TMR0_StartTimer:
 32635                           	opt stack 0
 32636                           tosu	equ	0xFFF
 32637                           tosh	equ	0xFFE
 32638                           tosl	equ	0xFFD
 32639                           pclatu	equ	0xFFB
 32640                           pclath	equ	0xFFA
 32641                           tblptru	equ	0xFF8
 32642                           tblptrh	equ	0xFF7
 32643                           tblptrl	equ	0xFF6
 32644                           tablat	equ	0xFF5
 32645                           prodh	equ	0xFF4
 32646                           prodl	equ	0xFF3
 32647                           intcon	equ	0xFF2
 32648                           intcon2	equ	0xFF1
 32649                           intcon3	equ	0xFF0
 32650                           indf0	equ	0xFEF
 32651                           postinc0	equ	0xFEE
 32652                           fsr0h	equ	0xFEA
 32653                           fsr0l	equ	0xFE9
 32654                           wreg	equ	0xFE8
 32655                           indf1	equ	0xFE7
 32656                           postdec1	equ	0xFE5
 32657                           fsr1h	equ	0xFE2
 32658                           fsr1l	equ	0xFE1
 32659                           indf2	equ	0xFDF
 32660                           postinc2	equ	0xFDE
 32661                           postdec2	equ	0xFDD
 32662                           plusw2	equ	0xFDB
 32663                           fsr2h	equ	0xFDA
 32664                           fsr2l	equ	0xFD9
 32665                           status	equ	0xFD8
 32666                           
 32667 ;; *************** function _reloadTimer *****************
 32668 ;; Defined at:
 32669 ;;		line 202 in file "../Includes/Drivers/swUart.c"
 32670 ;; Parameters:    Size  Location     Type
 32671 ;;  setTimerValu    1    wreg     unsigned char 
 32672 ;; Auto vars:     Size  Location     Type
 32673 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 32674 ;; Return value:  Size  Location     Type
 32675 ;;                  1    wreg      void 
 32676 ;; Registers used:
 32677 ;;		wreg
 32678 ;; Tracked objects:
 32679 ;;		On entry : 0/0
 32680 ;;		On exit  : 0/0
 32681 ;;		Unchanged: 0/0
 32682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32683 ;;      Params:         0       0       0       0       0       0       0       0       0
 32684 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32686 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32687 ;;Total ram usage:        1 bytes
 32688 ;; Hardware stack levels used:    1
 32689 ;; This function calls:
 32690 ;;		Nothing
 32691 ;; This function is called by:
 32692 ;;		_InterruptPinRX
 32693 ;;		_InterruptTimerUART
 32694 ;; This function uses a non-reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text157
 32698  005B26                     __ptext157:
 32699                           	opt stack 0
 32700  005B26                     _reloadTimer:
 32701                           	opt stack 19
 32702                           
 32703                           ;incstack = 0
 32704                           ;reloadTimer@setTimerValue stored from wreg
 32705  005B26  6E01               	movwf	reloadTimer@setTimerValue,c
 32706                           
 32707                           ;swUart.c: 204: TMR0 = setTimerValue;
 32708  005B28  C001  FFD6         	movff	reloadTimer@setTimerValue,4054	;volatile
 32709  005B2C  6AD7               	clrf	4055,c	;volatile
 32710  005B2E  0012               	return		;funcret
 32711  005B30                     __end_of_reloadTimer:
 32712                           	opt stack 0
 32713                           tosu	equ	0xFFF
 32714                           tosh	equ	0xFFE
 32715                           tosl	equ	0xFFD
 32716                           pclatu	equ	0xFFB
 32717                           pclath	equ	0xFFA
 32718                           tblptru	equ	0xFF8
 32719                           tblptrh	equ	0xFF7
 32720                           tblptrl	equ	0xFF6
 32721                           tablat	equ	0xFF5
 32722                           prodh	equ	0xFF4
 32723                           prodl	equ	0xFF3
 32724                           intcon	equ	0xFF2
 32725                           intcon2	equ	0xFF1
 32726                           intcon3	equ	0xFF0
 32727                           indf0	equ	0xFEF
 32728                           postinc0	equ	0xFEE
 32729                           fsr0h	equ	0xFEA
 32730                           fsr0l	equ	0xFE9
 32731                           wreg	equ	0xFE8
 32732                           indf1	equ	0xFE7
 32733                           postdec1	equ	0xFE5
 32734                           fsr1h	equ	0xFE2
 32735                           fsr1l	equ	0xFE1
 32736                           indf2	equ	0xFDF
 32737                           postinc2	equ	0xFDE
 32738                           postdec2	equ	0xFDD
 32739                           plusw2	equ	0xFDB
 32740                           fsr2h	equ	0xFDA
 32741                           fsr2l	equ	0xFD9
 32742                           status	equ	0xFD8
 32743                           
 32744 ;; *************** function _clearInterruptPinRX *****************
 32745 ;; Defined at:
 32746 ;;		line 223 in file "../Includes/Drivers/swUart.c"
 32747 ;; Parameters:    Size  Location     Type
 32748 ;;		None
 32749 ;; Auto vars:     Size  Location     Type
 32750 ;;  tClearPin       1    0[COMRAM] unsigned char 
 32751 ;; Return value:  Size  Location     Type
 32752 ;;                  1    wreg      void 
 32753 ;; Registers used:
 32754 ;;		wreg
 32755 ;; Tracked objects:
 32756 ;;		On entry : 0/0
 32757 ;;		On exit  : 0/0
 32758 ;;		Unchanged: 0/0
 32759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32760 ;;      Params:         0       0       0       0       0       0       0       0       0
 32761 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32762 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32763 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32764 ;;Total ram usage:        1 bytes
 32765 ;; Hardware stack levels used:    1
 32766 ;; This function calls:
 32767 ;;		Nothing
 32768 ;; This function is called by:
 32769 ;;		_InterruptPinRX
 32770 ;; This function uses a non-reentrant model
 32771 ;;
 32772                           
 32773                           	psect	text158
 32774  005AF2                     __ptext158:
 32775                           	opt stack 0
 32776  005AF2                     _clearInterruptPinRX:
 32777                           	opt stack 19
 32778                           
 32779                           ;swUart.c: 225: bool tClearPin;
 32780                           ;swUart.c: 227: INTCONbits.IOCIF = 0;
 32781                           
 32782                           ;incstack = 0
 32783  005AF2  90F2               	bcf	intcon,0,c	;volatile
 32784                           
 32785                           ;swUart.c: 229: tClearPin = PORTBbits.RB7;
 32786  005AF4  0E00               	movlw	0
 32787  005AF6  BE81               	btfsc	3969,7,c	;volatile
 32788  005AF8  0E01               	movlw	1
 32789  005AFA  6E01               	movwf	clearInterruptPinRX@tClearPin,c
 32790  005AFC  0012               	return		;funcret
 32791  005AFE                     __end_of_clearInterruptPinRX:
 32792                           	opt stack 0
 32793                           tosu	equ	0xFFF
 32794                           tosh	equ	0xFFE
 32795                           tosl	equ	0xFFD
 32796                           pclatu	equ	0xFFB
 32797                           pclath	equ	0xFFA
 32798                           tblptru	equ	0xFF8
 32799                           tblptrh	equ	0xFF7
 32800                           tblptrl	equ	0xFF6
 32801                           tablat	equ	0xFF5
 32802                           prodh	equ	0xFF4
 32803                           prodl	equ	0xFF3
 32804                           intcon	equ	0xFF2
 32805                           intcon2	equ	0xFF1
 32806                           intcon3	equ	0xFF0
 32807                           indf0	equ	0xFEF
 32808                           postinc0	equ	0xFEE
 32809                           fsr0h	equ	0xFEA
 32810                           fsr0l	equ	0xFE9
 32811                           wreg	equ	0xFE8
 32812                           indf1	equ	0xFE7
 32813                           postdec1	equ	0xFE5
 32814                           fsr1h	equ	0xFE2
 32815                           fsr1l	equ	0xFE1
 32816                           indf2	equ	0xFDF
 32817                           postinc2	equ	0xFDE
 32818                           postdec2	equ	0xFDD
 32819                           plusw2	equ	0xFDB
 32820                           fsr2h	equ	0xFDA
 32821                           fsr2l	equ	0xFD9
 32822                           status	equ	0xFD8
 32823                           
 32824 ;; *************** function _EUSART_Transmit_ISR *****************
 32825 ;; Defined at:
 32826 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 32827 ;; Parameters:    Size  Location     Type
 32828 ;;		None
 32829 ;; Auto vars:     Size  Location     Type
 32830 ;;		None
 32831 ;; Return value:  Size  Location     Type
 32832 ;;                  1    wreg      void 
 32833 ;; Registers used:
 32834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32835 ;; Tracked objects:
 32836 ;;		On entry : 0/0
 32837 ;;		On exit  : 0/0
 32838 ;;		Unchanged: 0/0
 32839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32840 ;;      Params:         0       0       0       0       0       0       0       0       0
 32841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32844 ;;Total ram usage:        0 bytes
 32845 ;; Hardware stack levels used:    1
 32846 ;; This function calls:
 32847 ;;		Nothing
 32848 ;; This function is called by:
 32849 ;;		_INTERRUPT_InterruptManager
 32850 ;; This function uses a non-reentrant model
 32851 ;;
 32852                           
 32853                           	psect	text159
 32854  00564A                     __ptext159:
 32855                           	opt stack 0
 32856  00564A                     _EUSART_Transmit_ISR:
 32857                           	opt stack 20
 32858                           
 32859                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 32860                           
 32861                           ;incstack = 0
 32862  00564A  0E40               	movlw	64
 32863  00564C  0100               	movlb	0	; () banked
 32864  00564E  61E1               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 32865  005650  D012               	goto	i2l1228
 32866                           
 32867                           ; BSR set to: 0
 32868                           ;eusart.c: 167: {
 32869                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 32870  005652  51E2               	movf	_eusartTxTail& (0+255),w,b
 32871  005654  0D01               	mullw	1
 32872  005656  0E40               	movlw	low _eusartTxBuffer
 32873  005658  24F3               	addwf	prodl,w,c
 32874  00565A  6ED9               	movwf	fsr2l,c
 32875  00565C  0E02               	movlw	high _eusartTxBuffer
 32876  00565E  20F4               	addwfc	prodh,w,c
 32877  005660  6EDA               	movwf	fsr2h,c
 32878  005662  50DF               	movf	indf2,w,c
 32879  005664  6EAD               	movwf	4013,c	;volatile
 32880                           
 32881                           ; BSR set to: 0
 32882  005666  2BE2               	incf	_eusartTxTail& (0+255),f,b
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 32886  005668  0E3F               	movlw	63
 32887  00566A  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 32888  00566C  D002               	goto	i2l1229
 32889                           
 32890                           ; BSR set to: 0
 32891                           ;eusart.c: 170: {
 32892                           ;eusart.c: 171: eusartTxTail = 0;
 32893  00566E  0E00               	movlw	0
 32894  005670  6FE2               	movwf	_eusartTxTail& (0+255),b
 32895  005672                     i2l1229:
 32896                           
 32897                           ; BSR set to: 0
 32898                           ;eusart.c: 172: }
 32899                           ;eusart.c: 173: eusartTxBufferRemaining++;
 32900                           
 32901                           ; BSR set to: 0
 32902  005672  2BE1               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 32903                           
 32904                           ;eusart.c: 174: }
 32905  005674  0012               	return	
 32906  005676                     i2l1228:
 32907                           
 32908                           ; BSR set to: 0
 32909                           ;eusart.c: 175: else
 32910                           ;eusart.c: 176: {
 32911                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 32912  005676  989D               	bcf	3997,4,c	;volatile
 32913  005678  0012               	return	
 32914  00567A                     __end_of_EUSART_Transmit_ISR:
 32915                           	opt stack 0
 32916                           tosu	equ	0xFFF
 32917                           tosh	equ	0xFFE
 32918                           tosl	equ	0xFFD
 32919                           pclatu	equ	0xFFB
 32920                           pclath	equ	0xFFA
 32921                           tblptru	equ	0xFF8
 32922                           tblptrh	equ	0xFF7
 32923                           tblptrl	equ	0xFF6
 32924                           tablat	equ	0xFF5
 32925                           prodh	equ	0xFF4
 32926                           prodl	equ	0xFF3
 32927                           intcon	equ	0xFF2
 32928                           intcon2	equ	0xFF1
 32929                           intcon3	equ	0xFF0
 32930                           indf0	equ	0xFEF
 32931                           postinc0	equ	0xFEE
 32932                           fsr0h	equ	0xFEA
 32933                           fsr0l	equ	0xFE9
 32934                           wreg	equ	0xFE8
 32935                           indf1	equ	0xFE7
 32936                           postdec1	equ	0xFE5
 32937                           fsr1h	equ	0xFE2
 32938                           fsr1l	equ	0xFE1
 32939                           indf2	equ	0xFDF
 32940                           postinc2	equ	0xFDE
 32941                           postdec2	equ	0xFDD
 32942                           plusw2	equ	0xFDB
 32943                           fsr2h	equ	0xFDA
 32944                           fsr2l	equ	0xFD9
 32945                           status	equ	0xFD8
 32946                           
 32947 ;; *************** function _EUSART_Receive_ISR *****************
 32948 ;; Defined at:
 32949 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 32950 ;; Parameters:    Size  Location     Type
 32951 ;;		None
 32952 ;; Auto vars:     Size  Location     Type
 32953 ;;		None
 32954 ;; Return value:  Size  Location     Type
 32955 ;;                  1    wreg      void 
 32956 ;; Registers used:
 32957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32958 ;; Tracked objects:
 32959 ;;		On entry : 0/0
 32960 ;;		On exit  : 0/0
 32961 ;;		Unchanged: 0/0
 32962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32963 ;;      Params:         0       0       0       0       0       0       0       0       0
 32964 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32966 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32967 ;;Total ram usage:        0 bytes
 32968 ;; Hardware stack levels used:    1
 32969 ;; This function calls:
 32970 ;;		Nothing
 32971 ;; This function is called by:
 32972 ;;		_INTERRUPT_InterruptManager
 32973 ;; This function uses a non-reentrant model
 32974 ;;
 32975                           
 32976                           	psect	text160
 32977  00567A                     __ptext160:
 32978                           	opt stack 0
 32979  00567A                     _EUSART_Receive_ISR:
 32980                           	opt stack 20
 32981                           
 32982                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;incstack = 0
 32986  00567A  A2AB               	btfss	4011,1,c	;volatile
 32987  00567C  D003               	goto	i2l1234
 32988                           
 32989                           ;eusart.c: 184: {
 32990                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 32991  00567E  98AB               	bcf	4011,4,c	;volatile
 32992                           
 32993                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 32994  005680  88AB               	bsf	4011,4,c	;volatile
 32995                           
 32996                           ;eusart.c: 189: }
 32997  005682  0012               	return	
 32998  005684                     i2l1234:
 32999                           
 33000                           ;eusart.c: 190: else
 33001                           ;eusart.c: 191: {
 33002                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 33003  005684  0100               	movlb	0	; () banked
 33004  005686  51E0               	movf	_eusartRxHead& (0+255),w,b
 33005  005688  0D01               	mullw	1
 33006  00568A  0E00               	movlw	low _eusartRxBuffer
 33007  00568C  24F3               	addwf	prodl,w,c
 33008  00568E  6ED9               	movwf	fsr2l,c
 33009  005690  0E02               	movlw	high _eusartRxBuffer
 33010  005692  20F4               	addwfc	prodh,w,c
 33011  005694  6EDA               	movwf	fsr2h,c
 33012  005696  CFAE FFDF          	movff	4014,indf2	;volatile
 33013                           
 33014                           ; BSR set to: 0
 33015  00569A  2BE0               	incf	_eusartRxHead& (0+255),f,b
 33016                           
 33017                           ; BSR set to: 0
 33018                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 33019  00569C  0E3F               	movlw	63
 33020  00569E  65E0               	cpfsgt	_eusartRxHead& (0+255),b
 33021  0056A0  D002               	goto	i2l1236
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;eusart.c: 195: {
 33025                           ;eusart.c: 196: eusartRxHead = 0;
 33026  0056A2  0E00               	movlw	0
 33027  0056A4  6FE0               	movwf	_eusartRxHead& (0+255),b
 33028  0056A6                     i2l1236:
 33029                           
 33030                           ; BSR set to: 0
 33031                           ;eusart.c: 197: }
 33032                           ;eusart.c: 198: eusartRxCount++;
 33033                           
 33034                           ; BSR set to: 0
 33035  0056A6  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 33036  0056A8  0012               	return	
 33037  0056AA                     __end_of_EUSART_Receive_ISR:
 33038                           	opt stack 0
 33039                           tosu	equ	0xFFF
 33040                           tosh	equ	0xFFE
 33041                           tosl	equ	0xFFD
 33042                           pclatu	equ	0xFFB
 33043                           pclath	equ	0xFFA
 33044                           tblptru	equ	0xFF8
 33045                           tblptrh	equ	0xFF7
 33046                           tblptrl	equ	0xFF6
 33047                           tablat	equ	0xFF5
 33048                           prodh	equ	0xFF4
 33049                           prodl	equ	0xFF3
 33050                           intcon	equ	0xFF2
 33051                           intcon2	equ	0xFF1
 33052                           intcon3	equ	0xFF0
 33053                           indf0	equ	0xFEF
 33054                           postinc0	equ	0xFEE
 33055                           fsr0h	equ	0xFEA
 33056                           fsr0l	equ	0xFE9
 33057                           wreg	equ	0xFE8
 33058                           indf1	equ	0xFE7
 33059                           postdec1	equ	0xFE5
 33060                           fsr1h	equ	0xFE2
 33061                           fsr1l	equ	0xFE1
 33062                           indf2	equ	0xFDF
 33063                           postinc2	equ	0xFDE
 33064                           postdec2	equ	0xFDD
 33065                           plusw2	equ	0xFDB
 33066                           fsr2h	equ	0xFDA
 33067                           fsr2l	equ	0xFD9
 33068                           status	equ	0xFD8
 33069                           
 33070 ;; *************** function _CMP1_ISR *****************
 33071 ;; Defined at:
 33072 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 33073 ;; Parameters:    Size  Location     Type
 33074 ;;		None
 33075 ;; Auto vars:     Size  Location     Type
 33076 ;;		None
 33077 ;; Return value:  Size  Location     Type
 33078 ;;                  1    wreg      void 
 33079 ;; Registers used:
 33080 ;;		None
 33081 ;; Tracked objects:
 33082 ;;		On entry : 0/0
 33083 ;;		On exit  : 0/0
 33084 ;;		Unchanged: 0/0
 33085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33086 ;;      Params:         0       0       0       0       0       0       0       0       0
 33087 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33089 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33090 ;;Total ram usage:        0 bytes
 33091 ;; Hardware stack levels used:    1
 33092 ;; This function calls:
 33093 ;;		Nothing
 33094 ;; This function is called by:
 33095 ;;		_INTERRUPT_InterruptManager
 33096 ;; This function uses a non-reentrant model
 33097 ;;
 33098                           
 33099                           	psect	text161
 33100  005B94                     __ptext161:
 33101                           	opt stack 0
 33102  005B94                     _CMP1_ISR:
 33103                           	opt stack 20
 33104                           
 33105                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 33106                           
 33107                           ;incstack = 0
 33108  005B94  9CA1               	bcf	4001,6,c	;volatile
 33109  005B96  0012               	return		;funcret
 33110  005B98                     __end_of_CMP1_ISR:
 33111                           	opt stack 0
 33112                           tosu	equ	0xFFF
 33113                           tosh	equ	0xFFE
 33114                           tosl	equ	0xFFD
 33115                           pclatu	equ	0xFFB
 33116                           pclath	equ	0xFFA
 33117                           tblptru	equ	0xFF8
 33118                           tblptrh	equ	0xFF7
 33119                           tblptrl	equ	0xFF6
 33120                           tablat	equ	0xFF5
 33121                           prodh	equ	0xFF4
 33122                           prodl	equ	0xFF3
 33123                           intcon	equ	0xFF2
 33124                           intcon2	equ	0xFF1
 33125                           intcon3	equ	0xFF0
 33126                           indf0	equ	0xFEF
 33127                           postinc0	equ	0xFEE
 33128                           fsr0h	equ	0xFEA
 33129                           fsr0l	equ	0xFE9
 33130                           wreg	equ	0xFE8
 33131                           indf1	equ	0xFE7
 33132                           postdec1	equ	0xFE5
 33133                           fsr1h	equ	0xFE2
 33134                           fsr1l	equ	0xFE1
 33135                           indf2	equ	0xFDF
 33136                           postinc2	equ	0xFDE
 33137                           postdec2	equ	0xFDD
 33138                           plusw2	equ	0xFDB
 33139                           fsr2h	equ	0xFDA
 33140                           fsr2l	equ	0xFD9
 33141                           status	equ	0xFD8
 33142                           tosu	equ	0xFFF
 33143                           tosh	equ	0xFFE
 33144                           tosl	equ	0xFFD
 33145                           pclatu	equ	0xFFB
 33146                           pclath	equ	0xFFA
 33147                           tblptru	equ	0xFF8
 33148                           tblptrh	equ	0xFF7
 33149                           tblptrl	equ	0xFF6
 33150                           tablat	equ	0xFF5
 33151                           prodh	equ	0xFF4
 33152                           prodl	equ	0xFF3
 33153                           intcon	equ	0xFF2
 33154                           intcon2	equ	0xFF1
 33155                           intcon3	equ	0xFF0
 33156                           indf0	equ	0xFEF
 33157                           postinc0	equ	0xFEE
 33158                           fsr0h	equ	0xFEA
 33159                           fsr0l	equ	0xFE9
 33160                           wreg	equ	0xFE8
 33161                           indf1	equ	0xFE7
 33162                           postdec1	equ	0xFE5
 33163                           fsr1h	equ	0xFE2
 33164                           fsr1l	equ	0xFE1
 33165                           indf2	equ	0xFDF
 33166                           postinc2	equ	0xFDE
 33167                           postdec2	equ	0xFDD
 33168                           plusw2	equ	0xFDB
 33169                           fsr2h	equ	0xFDA
 33170                           fsr2l	equ	0xFD9
 33171                           status	equ	0xFD8
 33172                           
 33173                           	psect	text162
 33174  000000                     __ptext162:
 33175                           	opt stack 0
 33176                           tosu	equ	0xFFF
 33177                           tosh	equ	0xFFE
 33178                           tosl	equ	0xFFD
 33179                           pclatu	equ	0xFFB
 33180                           pclath	equ	0xFFA
 33181                           tblptru	equ	0xFF8
 33182                           tblptrh	equ	0xFF7
 33183                           tblptrl	equ	0xFF6
 33184                           tablat	equ	0xFF5
 33185                           prodh	equ	0xFF4
 33186                           prodl	equ	0xFF3
 33187                           intcon	equ	0xFF2
 33188                           intcon2	equ	0xFF1
 33189                           intcon3	equ	0xFF0
 33190                           indf0	equ	0xFEF
 33191                           postinc0	equ	0xFEE
 33192                           fsr0h	equ	0xFEA
 33193                           fsr0l	equ	0xFE9
 33194                           wreg	equ	0xFE8
 33195                           indf1	equ	0xFE7
 33196                           postdec1	equ	0xFE5
 33197                           fsr1h	equ	0xFE2
 33198                           fsr1l	equ	0xFE1
 33199                           indf2	equ	0xFDF
 33200                           postinc2	equ	0xFDE
 33201                           postdec2	equ	0xFDD
 33202                           plusw2	equ	0xFDB
 33203                           fsr2h	equ	0xFDA
 33204                           fsr2l	equ	0xFD9
 33205                           status	equ	0xFD8
 33206                           
 33207                           	psect	rparam
 33208  0000                     tosu	equ	0xFFF
 33209                           tosh	equ	0xFFE
 33210                           tosl	equ	0xFFD
 33211                           pclatu	equ	0xFFB
 33212                           pclath	equ	0xFFA
 33213                           tblptru	equ	0xFF8
 33214                           tblptrh	equ	0xFF7
 33215                           tblptrl	equ	0xFF6
 33216                           tablat	equ	0xFF5
 33217                           prodh	equ	0xFF4
 33218                           prodl	equ	0xFF3
 33219                           intcon	equ	0xFF2
 33220                           intcon2	equ	0xFF1
 33221                           intcon3	equ	0xFF0
 33222                           indf0	equ	0xFEF
 33223                           postinc0	equ	0xFEE
 33224                           fsr0h	equ	0xFEA
 33225                           fsr0l	equ	0xFE9
 33226                           wreg	equ	0xFE8
 33227                           indf1	equ	0xFE7
 33228                           postdec1	equ	0xFE5
 33229                           fsr1h	equ	0xFE2
 33230                           fsr1l	equ	0xFE1
 33231                           indf2	equ	0xFDF
 33232                           postinc2	equ	0xFDE
 33233                           postdec2	equ	0xFDD
 33234                           plusw2	equ	0xFDB
 33235                           fsr2h	equ	0xFDA
 33236                           fsr2l	equ	0xFD9
 33237                           status	equ	0xFD8
 33238                           
 33239                           	psect	temp
 33240  00005E                     btemp:
 33241                           	opt stack 0
 33242  00005E                     	ds	1
 33243  0000                     int$flags	set	btemp
 33244  0000                     wtemp6	set	btemp+1
 33245                           tosu	equ	0xFFF
 33246                           tosh	equ	0xFFE
 33247                           tosl	equ	0xFFD
 33248                           pclatu	equ	0xFFB
 33249                           pclath	equ	0xFFA
 33250                           tblptru	equ	0xFF8
 33251                           tblptrh	equ	0xFF7
 33252                           tblptrl	equ	0xFF6
 33253                           tablat	equ	0xFF5
 33254                           prodh	equ	0xFF4
 33255                           prodl	equ	0xFF3
 33256                           intcon	equ	0xFF2
 33257                           intcon2	equ	0xFF1
 33258                           intcon3	equ	0xFF0
 33259                           indf0	equ	0xFEF
 33260                           postinc0	equ	0xFEE
 33261                           fsr0h	equ	0xFEA
 33262                           fsr0l	equ	0xFE9
 33263                           wreg	equ	0xFE8
 33264                           indf1	equ	0xFE7
 33265                           postdec1	equ	0xFE5
 33266                           fsr1h	equ	0xFE2
 33267                           fsr1l	equ	0xFE1
 33268                           indf2	equ	0xFDF
 33269                           postinc2	equ	0xFDE
 33270                           postdec2	equ	0xFDD
 33271                           plusw2	equ	0xFDB
 33272                           fsr2h	equ	0xFDA
 33273                           fsr2l	equ	0xFD9
 33274                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         672
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      93
    BANK0           160     92     160
    BANK1           256      0     253
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6290_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6290_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6290_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6290_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4653$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4643$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4643$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4619$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4619$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4619$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4619$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    printfOled@buffer_rx	PTR char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), 
		 -> STR_189(CODE[12]), STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_182(CODE[5]), STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), 
		 -> STR_162(CODE[16]), STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), 
		 -> STR_158(CODE[4]), STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), 
		 -> STR_154(CODE[4]), STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), 
		 -> STR_150(CODE[4]), STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), 
		 -> STR_146(CODE[4]), STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), 
		 -> STR_142(CODE[4]), STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), 
		 -> STR_138(CODE[4]), STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), 
		 -> STR_134(CODE[16]), STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[15]), STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), 
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), 
		 -> STR_122(CODE[5]), STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), 
		 -> STR_118(CODE[2]), STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), 
		 -> STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), 
		 -> STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), 
		 -> STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), 
		 -> STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), 
		 -> STR_98(CODE[16]), STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), 
		 -> STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), 
		 -> STR_87(CODE[12]), STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), 
		 -> STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), 
		 -> STR_62(CODE[11]), STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), 
		 -> STR_42(CODE[17]), STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptTimerUART->_printfOled
    _printfOled->i2_oled_putString
    i2_oled_putString->i2_oled_putChar
    i2_oled_clear->i2_oled_clearRow
    i2_oled_clearRow->i2_oled_putChar
    i2_oled_putChar->i2_Set_Column_Address
    i2_oled_putChar->i2_Set_Page_Address
    i2_Set_Page_Address->i2_oled_writeCommand
    i2_Set_Column_Address->i2_oled_writeCommand
    _InterruptPinRX->_clearInterruptPinRX
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  730542
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  285174
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   41779
                                             23 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   41687
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41354
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44357
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  112923
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  345157
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  183048
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44227
                                             23 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44335
                                             23 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51236
                                             23 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   45636
                                             23 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   40596
                                             18 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         19    19      0   31948
                                             31 COMRAM    19    19      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                 _InterruptTimerUART
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptTimerUART                                  3     3      0    1861
                                             20 COMRAM     3     3      0
                     _TMR0_StopTimer
            _clearInterruptTimerUART
                         _printfOled
                        _reloadTimer
                       i2_oled_clear
 ---------------------------------------------------------------------------------
 (12) _printfOled                                          3     0      3    1311
                                             17 COMRAM     3     0      3
                       i2_oled_clear
                   i2_oled_putString
 ---------------------------------------------------------------------------------
 (13) i2_oled_putString                                    5     1      4     628
                                             12 COMRAM     5     1      4
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (12) i2_oled_clear                                        0     0      0     483
                    i2_oled_clearRow
 ---------------------------------------------------------------------------------
 (13) i2_oled_clearRow                                     2     2      0     483
                                             12 COMRAM     2     2      0
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (14) i2_oled_putChar                                     10     8      2     393
                                              2 COMRAM    10     8      2
               i2_Set_Column_Address
                 i2_Set_Page_Address
                   i2_oled_writeData
 ---------------------------------------------------------------------------------
 (15) i2_oled_writeData                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Set_Page_Address                                  1     1      0      67
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (15) i2_Set_Column_Address                                1     1      0      66
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (16) i2_oled_writeCommand                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptTimerUART                             0     0      0       0
                         _TMR0_Clear
 ---------------------------------------------------------------------------------
 (13) _TMR0_Clear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      0     0      0      23
                _clearInterruptPinRX
                        _reloadTimer
                  i2_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _clearInterruptPinRX
     _reloadTimer
     i2_TMR0_StartTimer
   _InterruptTimerUART
     _TMR0_StopTimer
     _clearInterruptTimerUART
       _TMR0_Clear
     _printfOled
       i2_oled_clear
         i2_oled_clearRow
           i2_oled_putChar
             i2_Set_Column_Address
               i2_oled_writeCommand
             i2_Set_Page_Address
               i2_oled_writeCommand
             i2_oled_writeData
       i2_oled_putString
         i2_oled_putChar
           i2_Set_Column_Address
             i2_oled_writeCommand
           i2_Set_Page_Address
             i2_oled_writeCommand
           i2_oled_writeData
     _reloadTimer
     i2_oled_clear
       i2_oled_clearRow
         i2_oled_putChar
           i2_Set_Column_Address
             i2_oled_writeCommand
           i2_Set_Page_Address
             i2_oled_writeCommand
           i2_oled_writeData
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     32      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     33A      14        0.0%
DATA                 0      0     33A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 17:22:04 2018

                         _InterruptTimerUART 2F08             __size_of_moteApp_lightStringSize 0006  
                                 _USB_SD_Ptr 75EF                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                   __end_ofi2_oled_putString 4EBE                        ??_moteApp_testSensors 00AC  
                                         l60 2DC0                                           l65 2DC2  
                                         l57 2D5E                                           l66 2DD4  
                          ??_CMP1_Initialize 0060                                           l67 2DEA  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 4D8C  
                                         _cs 015E               moteJoiningProcess@selectButton 0078  
                              _USBDeviceInit 2958                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 599A  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 0066  
                            _timer0ReloadVal 0156                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
                        ?_InterruptTimerUART 0001               __end_of_moteApp_setLightString 4D24  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l111 5518                                          l112 5500  
                                        l130 3A4C                                          l123 39F4  
                                        l127 3A64                                          l400 10B4  
                                        l128 3A0C                                          l129 3A2C  
                                        l410 11DE                                          l402 1128  
                                        l420 12CC                                          l412 122E  
                                        l404 1146                                          l340 4756  
                                        l500 0712                                          l405 117E  
                                        l341 4766                  __end_of_USBStdGetDscHandler 2CE4  
                                        l422 131E                                          l414 123E  
                                        l502 0750                                          l431 1418  
                                        l343 477C                                          l424 134A  
                                        l416 1294                                          l408 11B6  
                                        l600 23BA                                          l512 08E6  
                                        l504 078C                                          l441 149A  
                                        l601 23CA                                          l337 4734  
                                        l434 143A                                          l418 12A4  
                                        l530 0ACC                                          l522 0A20  
                                        l370 215C                                          l443 14A4  
                                        l435 1448                                          l427 1360  
                                        l355 57E4                                          l523 0B5C  
                                        l531 0AE4                                          l363 210A  
                                        l348 554A                                          l524 0B14  
                                        l532 0AFC                                          l516 0940  
                                        l508 07FA                                          l460 0260  
                                        l605 5876                                          l349 5532  
                                        l437 147C                                          l429 13B8  
                                        l621 4DCA                                          l701 4F2C  
                                        l541 0BFA                                          l525 0A84  
                                        l517 09B2                                          l509 084E  
                                        l381 22F2                                          l373 21EC  
                                        l365 2110                                          l390 14E6  
                                        l550 0CAC                                          l518 097E  
                                        l462 026C                                          l382 220C  
                                        l366 2126                                          l439 1490  
                                        l391 101A                                          l703 4F5E  
                                        l711 49D4                                          l543 0CF4  
                                        l551 0CC4                                          l535 0B82  
                                        l527 0B3E                                          l519 0994  
                                        l383 225C                                          l367 213E  
                                        l704 4F74                                          l720 4A24  
                                        l560 0D56                                          l552 0CDC  
                                        l544 0C4E                                          l528 0A9C  
                                        l480 03EA                                          l472 02D4  
                                        l464 02CA                                          l376 22D6  
                                        l721 4A36                                          l561 0D72  
                                        l537 0B9E                                          l529 0AB4  
                                        l385 22C2                                          l377 220A  
                                        l369 214E                                          l626 4DEE  
                                        l642 3C1A                                          l466 0FB8  
                                        l562 0D8E                                          l554 0D36  
                                        l546 0D24                                          l490 079E  
                                        l482 03F6                                          l395 152E  
                                        l731 52FA                                          l643 3C04  
                                        l563 0DAA                                          l547 0C64  
                                        l491 05BC                                          l483 04BC  
                                        l467 02D2                                          l459 02B6  
                                        l636 55D2                                          l396 101C  
                                        l708 49A4                                          l732 530C  
                                        l724 4A58                                          l572 0F16  
                                        l580 0EE6                                          l556 0DDE  
                                        l564 0DC6                                          l548 0C7C  
                                        l492 06D2                                          l484 04DA  
                                        l476 0330                                          l637 55BC  
                                        l397 102C                                          l725 4A6A  
                                        l661 56D4                                          l645 3C3A  
                                        l581 0EFE                                          l573 0E70  
                                        l565 0E08                                          l557 0D3C  
                                        l549 0C94                                          l485 04FA  
                                        l477 0384                                          l398 1036  
                                        l750 4D04                                          l582 0F46  
                                        l566 0E4A                                          l494 064E  
                                        l591 23DA                                          l647 3CB2  
                                        l495 065C                                          l592 234A  
                                        l672 37DC                                          l648 3C70  
                                        l584 0F5E                                          l576 0E86  
                                        l568 0E6A                                          l593 2414  
                                        l585 0F64                                          l577 0E9E  
                                        l569 0E66                                          l497 069A  
                                        l489 0592                                          l850 403C  
                                        l594 235A                                          l666 373C  
                                        l690 454E                                          l738 5150  
                                        l658 56C2                                          l578 0EB6  
                                        l498 069E                                          l851 3FAA  
                                        l595 236A                                          l739 5162  
                                        l579 0ECE                                          l852 3FF6  
                                        l596 237A                                          l684 44E2  
                                        _BDT 000400                                          l941 4C1C  
                                        l845 4024                                          l853 3FFE  
                                        l597 238A                                          l669 37CE  
                                        l942 4C18                                          l846 3FA8  
                                        l598 239A                                          l686 4506  
                                        l855 4004                                          l599 23AA  
                                        l679 327E                                          _CKE 007E3E  
                                        l880 35AC                                          l688 452A  
                                        l882 35DA                                          l946 4C44  
                                        l938 4C22                                          l947 4C46  
                                        l884 362A                                          l885 3652  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                      ?_oled_initialDispayLine 0001  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 100E                                          _UIE 000F64  
                                        _UIR 000F65                              _timer1ReloadVal 003B  
                                        _log 02E0                                   _USBSuspend 575C  
                               ___awmod@sign 0065                 __end_of_moteApp_clearBuffers 4566  
               __end_of_moteApp_clearCommand 5ABC                     __end_ofi2_oled_writeData 5A56  
                  i2oled_putChar@station_dot 0003                         USBStdSetCfgHandler@i 0016  
                            _TMR2_Initialize 5A2E                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 2826                               _USBDeviceState 00EC  
                               ___flmul@aexp 0085                                 ___flmul@bexp 0086  
                               ___flmul@sign 0080                                 ___flmul@temp 008B  
                               ___flmul@prod 0087                        moteApp_delayms@length 0060  
               MOTEapp_SetDataRateSetting@dr 0064                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 012E                               ??_getsUSBUSART 006A  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 0077  
                               ___fltol@exp1 0069                                         l1040 4832  
                                       l1032 4272                                         l1033 42EC  
                                       l1212 5420                                         l1213 541E  
                                       l1045 4C5C                                         l1222 5376  
                                       l1215 5448                                         l1223 539A  
                                       l1055 580E                                         l1224 5398  
                                       l1240 526C                                         l2210 25D8  
                                       l1066 57C8                                         l1332 59BC  
                                       l2220 2648                                         l2212 25E2  
                                       l2230 26CC                                         l2222 268A  
                                       l2214 25FA                                         l2231 26D0  
                                       l2223 2668                                         l2215 2604  
                                       l2216 2632                                         l2208 25EE  
                                       l2321 4182                                         l2218 26EE  
                                       l2226 26B4                                         l2322 4190  
                                       l2314 4128                                         l2227 2692  
                                       l2219 2644                                         l2323 41A6  
                                       l2315 413C                              _timer3ReloadVal 0039  
                                       l2180 3E64                                         l2317 415A  
                                       l2182 3E6C                                         l2190 5840  
                                       l2318 414E                                         l1550 53C6  
                                       l2430 4B9E                                         l2183 3E98  
                                       l2184 3EC4                                         l2185 3E9E  
                                       l2433 4BBE                                         l2178 3EEA  
                                       l2434 4BC8                                         l2426 4B84  
                                       l2435 4BD6                                         l2427 4B90  
                                       l2700 19C4                   USBConfigureEndpoint@handle 0007  
                                       l2701 19C8                                         l2429 4BA6  
                                       l2712 1ABE                                         l2704 1A36  
                                       l2800 1852                                         l2721 1B12  
                                       l2705 19FC                                         l2801 1870  
                                       l2714 1ACE                                         l1915 54E8  
                                       l2483 3708                                         l2475 3678  
                                       l1916 54E6                                         l2660 522A  
                                       l2708 1A20                                         l2484 36FC  
                                       l2580 535C                                         l1853 299E  
                                       l2805 5192                                         l2813 46E6  
                                       l2733 1B9E                                         l2717 1AF2  
                                       l2709 1A24                                         l2477 36E4  
                                       l2806 5188                                         l2814 467C  
                                       l2734 1BA6                                         l2726 1B32  
                                       l2750 1C7C                                         l2486 3724  
                                       l2478 36D4                                         l2830 2502  
                                       l2822 249C                                         l1855 29D8  
                                       l2663 524A                                         l2815 46DE  
                                       l2735 1BA8                                         l2719 1B08  
                                       l2743 1BF6                                         l2823 24AC  
                                       l2575 533E                                         l2680 55F4  
                                       l1856 29C6                                         l2664 5254  
                                       l2760 1D86                                         l2752 1CA4  
                                       l2744 1BF2                                         l2832 254C  
                                       l2824 24CA                                         l2576 5338  
                                       l2729 1B78                                         l2761 1D68  
                                       l2753 1D52                                         l2833 2540  
                                       l2673 5206                                         l1858 2A00  
                                       l2770 1E26                                         l2754 1D02  
                                       l2826 24DC                                         l2674 51E4  
                                       l2659 5232                                         l2691 1900  
                                       l2771 1E50                                         l2755 1D2A  
                                       l2747 1C36                                         l2827 24D0  
                                       l2579 5354                                         l2692 18FC  
                                       l2772 1E5C                                         l2748 1C32  
                                       l1893 3CDA                                         l2773 1E5E  
                                       l2757 1D50                                         l2781 15A6  
                                       l2837 256A                                         l2829 251A  
                                       l2694 195C                                         l2686 18B8  
                                       l2782 15A2                                         l2838 259C  
                                       l2679 5606                                         l1895 3D04  
                                       l2695 1920                                         l2687 18B4  
                                       l2767 1DBE                                         l2783 15B6  
                                       l2784 15D4                                         l1897 3D60  
                                       l2769 1E02                                         l2777 1566  
                                       l2698 19D8                                         l2778 1562  
                                       l2699 19B6                                         l2795 17CC  
                                       l2779 1576                                         l2788 1794  
                                       l2797 1810                                         l2789 1776  
                                       l2798 182E                                         l8008 5806  
                                       l8182 51E4                                         l9136 1E50  
                                       l8630 4CFC                                         l8552 5264  
                                       l9612 44DA                                         l9624 44FE  
                                       l7858 482A                                         l9538 499C  
                                       l7868 5364                                         l9636 4522  
                                       l9582 467C                                         l9648 4546  
                                       l9736 3C32                                         l9686 4F24  
                                       STR_1 7D1E                                         STR_2 7D00  
                                       STR_3 7D0F                                         STR_4 7F3D  
                                       STR_5 7D8A                                         STR_6 7D97  
                                       STR_7 7CC3                                         STR_8 7E70  
                                       STR_9 7F46                              _lightStringSize 00ED  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 0020  
                                       _PEIE 007F96                                         u7120 1B84  
                                       u7040 1B16                                         u8010 46AA  
                                       u8100 4542                                         u7070 1B2E  
                                       u6510 5284                                         u8040 51C6  
                                       u7330 1DBA                                         u6460 4C7C  
                                       u8060 44FA                                         u8140 4A40  
                                       u8220 3C56                                         u8310 3E58  
                      ??_USBCtrlTrfTxService 0001                                         u6480 4CAA  
                                       u7360 1E10                                         u7520 17C8  
                                       u8080 451E                                         u8160 4A74  
                                       u7370 1E34                                         u7610 4BAA  
                                       u6467 4C72                                         u7460 15C2  
                                       u6580 4D20                                         u8318 3E5C  
                                       u6910 19E0                                         u7550 181E  
                                       u7470 1738                                         u8190 4F78  
                                       u6487 4CA0                                         _UCFG 000F62  
                                       u7560 183C                                         u7800 2556  
                                       u7720 5342                                         u8370 25CC  
                                       u7650 3696                                         u8290 37AC  
                                       u7475 172E                                         u8460 26BA  
                                       u8620 415E                                         u9180 14AC  
                                       u6860 198C                                         u9420 06A2  
                                       u9340 0508                                         u9260 02E2  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       u6870 199C                                         u7910 516C  
                                       u9510 08F2                                         u7655 368C  
                                       u6880 199E                                         u8378 25D0  
                                       u7690 370E                                         u7930 5316  
                                       _UEIE 000F66                                         u8900 4BEE  
                                       u8660 5236                                         u8740 39DC  
                                       u9470 07AC                                         u7970 4A02  
                                       u7875 53D6                                         u7876 53D8  
                                       u9590 0BAC                                         _UEIR 000F67  
                                       _UCON 000F60                                         _TMR0 000FD6  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 0033       USBStdFeatureReqHandler@current_ep_data 0019  
                       ??_InterruptTimerUART 0015                                         _pDst 0154  
                                       _main 2CE4                     ??i2_USBTransferOnePacket 0005  
                            _TMR0_StartTimer 5B80            __end_of_moteApp_add8bToDataBuffer 3FA6  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       indf0 000FEF                                         fsr2h 000FDA  
                                       fsr0l 000FE9                                         indf1 000FE7  
                                _BaudRateGen 0146                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                            _USBDeviceAttach 54C0                                         btemp 005E  
                              __CFG_BORV$190 000000                 moteApp_addToDataBuffer@index 0075  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 5B40                                         start 0108  
                              __CFG_IESO$OFF 000000                              ___fldiv@new_exp 009E  
                            __end_of_EndLine 5ADA                              _TMR3_Initialize 5844  
                                _storedLight 01F2                  __end_of_USBapp_exitCDCState 5B12  
                           __end_of_CMP1_ISR 5B98                              ?_oled_putString 0072  
                 __end_of_USBCheckStdRequest 33B4                       ??_USBCtrlTrfOutHandler 0014  
                __size_of_moteRunningProcess 0F02                             ?_oled_setDisplay 0001  
                              __CFG_MCLRE$ON 000000                              ?i2_oled_putChar 0003  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 5B68                         ??_moteJoiningProcess 0079  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 5B62  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 58A6                       _moteApp_getLightString 5ADA  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 5AAC                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 59C6                                        l11232 55F4  
                                      l10520 1414                                        l10408 1124  
                                      l11410 2996                                        l10508 13B4  
                                      l10470 12A0                                        l10454 123A  
                                      l10536 1478                                        l11438 29F8  
                                      l10486 131A                                        l10790 0654  
                     ??i2_Set_Column_Address 0002                                ___fltol@sign1 0068  
                i2oled_putString@station_dot 000F                              __end_of___almod 41B8  
                            __end_of___fladd 1BC4                                        ?_main 0001  
                            __end_of___fldiv 1E7A                              __end_of___lbdiv 5360  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 4BE0                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 1886                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3736                              _TMR1_StartTimer 5B7C  
                                      u10000 29BA                              __end_of___lldiv 490E  
                                      u10030 2A5C                                        u11007 3A5C  
                                      u11017 31F6                                        u10090 4048  
                                      u11107 5508                                        u11027 3208  
                                      u10180 2178                                        u11117 0794  
                                      u11037 321A                                        u11207 242E  
                                      u11127 491E                                        u11047 3240  
                                      u11217 2440                                        u11137 4932  
                                      u11057 3252                                        u11227 14B4  
                                      u11147 4946                                        u11067 3264  
          __size_of_MOTEapp_setResponseReady 0006                                        u11237 14C6  
                                      u11157 57F0                                        u11077 3294  
                                      u11247 14D8                                        u11167 231A  
                                      u11087 32A6                                        _T1CON 000FCD  
                                      u11257 553A                                        u11177 232C  
                                      u11097 32B8                       __end_of_USBDeviceTasks 2958  
                                      u11187 233E                                        u11197 241C  
                                      _T2CON 000FBA                      __end_of_sendDataCommand 3CC0  
                                      _T3CON 000FB1                    ?_USBCtrlEPServiceComplete 0001  
                            __end_of___lwmod 525E                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0079                                        i2l923 4F7E  
                                      i2l917 4F8A                                        i2l925 4F84  
                                      i2l870 50C0                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                           ?i2_oled_clearRow 0001                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00C4                              __end_of_delayms 5526  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                                  ?_TMR0_Clear 0001  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000              __end_of_USBCtrlEPAllowDataStage 43A4  
                          oled_putChar@index 006B                             __end_of_TMR0_ISR 5B88  
                           __end_of_TMR1_ISR 5AF2                                        _sd000 79B4  
                                      _sd001 796E              service_pushbutton@Release_Timer 00E4  
                                      _sd002 793A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 58E4                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 59C6  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _n_bit 005B                                        _light 015A  
                        _clearInterruptPinRX 5AF2                                        _stops 015F  
                             __pbitbssCOMRAM 02E0                      __end_of_TMR1_Initialize 558A  
                               _runningState 00F3                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                          __end_of_CDCInitEP 4E58                   oled_setDisplay@displayType 0061  
                  i2Set_Page_Address@address 0002                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 005F  
                            _TMR2_StartTimer 5B78                              __end_of_strncmp 4702  
                            ___lbdiv@divisor 0060                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                        i2oled_putString@index 0011  
                           __end_ofi2_memset 5732                              ___lbdiv@counter 0062  
                               _m10SecTicker 0158                 __end_of_moteApp_getTempValue 5322  
               __size_ofi2_oled_writeCommand 0014                              putUSBUSART@data 0060  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 43A4                        TMR2_ReadTimer@readVal 0060  
              __size_of_TMRapp_ClearBitFlags 0008                  __size_ofi2_Set_Page_Address 0010  
                                 _InitSwUart 5900                                 __end_of_main 2DFC  
                      _control_signal_bitmap 015C                         ?_clearInterruptPinRX 0001  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 5866  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 5A42  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00BC  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 005E                              _TMR3_StartTimer 5B74  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 5488                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 00E8  
                               ?_reloadTimer 0001                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 00DC  
           moteApp_convertSensorValue@string 0072                      __end_of_TMR0_StartTimer 5B84  
                    __end_of_USBDeviceAttach 54F4                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00D6                            _getsUSBUSART$6654 006B  
                                     _ACTCON 000FB5                                       STR_100 7B87  
                                     STR_101 7C83                                       STR_110 7C83  
                                     STR_102 7C63                                       STR_103 7C53  
                                     STR_111 7C20                                       STR_104 7C83  
                                     STR_112 7CD3                                       STR_120 7B65  
                                     STR_121 7F87                                       STR_113 7CE2  
                                     STR_105 7C42                                       STR_130 7CE2  
                                     STR_122 7FC2                                       STR_106 7ECA  
                                     STR_114 7C73                                       _ADRESH 000FC4  
                                     STR_131 7CD3                                       STR_115 7C63  
                                     STR_107 7E51                                       STR_123 7DCB  
                                     STR_132 7C63                                       STR_108 7B10  
                                     STR_124 7FE0                                       STR_140 7FCF  
                                     STR_116 7F80                                       STR_133 7C53  
                                     STR_109 7AFF                                       STR_125 7FEC  
                                     STR_141 7FD3                                       STR_117 7F79  
                                     STR_134 7C83                                       STR_126 7FE4  
                                     STR_150 7FEF                                       STR_118 7FFA  
                                     STR_142 7FD7                                       _ADRESL 000FC3  
                                     STR_127 7FE8                                       STR_143 7FDB  
                                     STR_135 7BED                                       STR_151 7BCB  
                                     STR_119 7B76                                       STR_160 7B21  
                                     STR_144 7FF3                                       STR_128 7FEF  
                                     STR_136 7E58                                       STR_152 7C93  
                                     STR_137 7C73                                       STR_129 7C73  
                                     STR_153 7FC7                                       STR_145 7FDB  
                                     STR_161 7B87                                       STR_162 7C83  
                                     STR_154 7FCB                                       STR_146 7FDF  
                                     STR_138 7FC7                                       STR_170 7DCD  
                                     STR_155 7FCF                                       STR_147 7FEB  
                                     STR_139 7FCB                                       STR_171 7DDA  
                                     STR_163 7CA3                                       STR_156 7FD3  
                                     STR_180 7F71                                       STR_148 7FE3  
                                     STR_164 7D7F                                       STR_172 7CF1  
                                     STR_157 7FD7                                       STR_181 7F69  
                                     STR_149 7FE7                                       STR_173 7F2B  
                                     STR_165 7D8C                                       _EEDATA 000FA8  
                                     STR_174 7A05                                       STR_182 7AC7  
                                     STR_158 7FDB                                       STR_166 7D99  
                                     STR_159 7FF3                                       STR_167 7DA6  
                                     STR_175 7A22                                       STR_183 79D3  
                                     STR_168 7DB3                                       STR_176 7A3C  
                                     STR_184 79B8                                       STR_169 7DC0  
                                     STR_185 7A56                                       STR_177 79EE  
                                     STR_186 7A6C                                       STR_178 7A08  
                                     STR_179 7F58                                       STR_187 7F10  
                                     STR_188 7F61                                       STR_189 7E28  
                                     _EECON2 000FA7                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 007A  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 0144  
                                     i2l1040 4AA4                                       i2l2002 4234  
                                     i2l2003 41C4                                       i2l1140 5700  
                    __end_of_TMR3_Initialize 5866                                       i2l1045 4E64  
                                     i2l1150 2F92                                       i2l2102 2066  
                                     i2l2006 424A                                       i2l2030 399C  
                                     i2l1055 58B4                                       i2l1151 2F98  
                                     i2l2007 41D4                                       i2l2031 3996  
                                     i2l1144 2FEC                                       i2l1152 2FA6  
                                     i2l2104 20B8                                       i2l2008 41DA  
                                     i2l2032 3936                                       i2l2016 52DE  
                                     i2l2024 5644                                       i2l1153 2FAE  
                                     i2l1145 2F24                                       i2l2009 41F8  
                                     i2l2017 52DC                                       i2l2025 5642  
                                     i2l1234 5684                                       i2l1146 2F5C  
                                     i2l2051 34C6                                       i2l2043 4FE6  
                                     i2l1236 56A6                                       i2l1228 5676  
                                     i2l1148 3008                                       i2l1156 2FBC  
                                     i2l2052 34CC                                       i2l1229 5672  
                                     i2l1157 2FDE                                       i2l1149 2F6C  
                                     i2l2053 3546                                       i2l2045 502E  
                                     i2l2054 350C                                       i2l2070 32F2  
                                     i2l2071 32F8                                       i2l2056 352C  
                                     i2l2160 40A6                                       i2l2072 330C  
                                     i2l2161 40C4                                       i2l2073 3312  
                                     i2l2162 40DC                                       i2l2090 1F66  
                                     i2l2066 3370                                       i2l1290 0092  
                                     i2l2059 3572                                       i2l2083 1E9E  
                                     i2l2075 3318                                       i2l2067 32E2  
                                     i2l1291 00A2                                       i2l1283 0060  
                                     i2l2156 40E6                                       i2l2092 1FE6  
                                     i2l2084 1EA2                                       i2l2076 3336  
                                     i2l1284 006C                                       i2l2157 4080  
                                     i2l2077 3352                                       i2l2069 32EC  
                                     i2l1293 00B8                                       i2l2094 1FB0  
                                     i2l2086 1F0C                                       i2l1294 00BC  
                                     i2l1286 007C                                       i2l2159 4098  
                                     i2l2095 1FCC                                       i2l2600 48EE  
                                     i2l2088 1F4C                                       i2l1288 0088  
                                     i2l2601 48FC                                       i2l2097 202C  
                                     i2l2089 1F4E                                       i2l2098 2038  
                                     i2l2099 20AC                                       i2l1683 58D8  
                                     i2l1923 3B86                                       i2l1931 4370  
                                     i2l1940 3086                                       i2l1941 3030  
                                     i2l1853 2ACA                                       i2l1935 44A2  
                                     i2l1855 2B06                                       i2l1871 2894  
                                     i2l2680 5710                                       i2l1856 2AF2  
                                     i2l1864 283C                                       i2l1929 4354  
                                     i2l1945 30AC                                       i2l1881 2914  
                                     i2l1873 28A4                                       i2l1865 2848  
                                     i2l1962 38D6                                       i2l1954 382A  
                                     i2l1970 2720                                       i2l1858 2B2C  
                                     i2l1874 28AE                                       i2l1866 2850  
                                     i2l1963 389E                                       i2l1883 2934  
                                     i2l1875 28D2                                       i2l2596 48BA  
                                     i2l1956 3834                                       i2l1972 27B6  
                                     i2l1876 28DE                                       i2l1868 2864  
                                     i2l2597 48AE                                       i2l1973 279C  
                                     i2l1893 3D94                                       i2l1981 33FE  
                                     i2l1885 2950                                       i2l1869 2870  
                                     i2l1958 3896                                       i2l1990 2BC8  
                                     i2l1878 28EE                                       i2l1959 385E  
                                     i2l1895 3DBE                                       i2l2679 5720  
                                     i2l1983 3472                                       i2l1888 53EA  
                                     i2l1992 2BDC                                       i2l1969 2742  
                                     i2l1889 53F8                                       i2l1897 3E1A  
                                     i2l1993 2C64                                       i2l1995 2C6C  
                                     i2l1996 2CBC                                       i2l1989 2CCC  
                                     i2l1998 2CC4                                       i2l8130 5710  
                                     i2l8052 3834                                       i2l8310 33F6  
                                     _TABLAT 000FF5                                       i2l7900 50B8  
                                     i2l9432 58AC                                       i2l8490 4A9C  
                      __size_ofi2_oled_clear 001A                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 25AE                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 5186                            _shortPacketStatus 004B  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 44D4                         _moteApp_clearCommand 5AAC  
                    _moteApp_lightStringSize 5B50                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 5900  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 56D8  
                        __size_of_TMR0_Clear 0004                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0014                      __end_of_TMR1_StartTimer 5B80  
                               ?_putUSBUSART 0060                        ??_clearInterruptPinRX 0001  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 5786                                    ??___fldiv 0095  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0100  
                       __end_of_getsUSBUSART 3EF0                                    ??___lwmod 0064  
                          _USBEnableEndpoint 53DA              __size_of_USBStdGetStatusHandler 00A8  
                        _EUSART_Transmit_ISR 564A                                       _memcpy 51D2  
                           ?_TMR0_Initialize 0001                                       _memset 55EA  
                                     clear_0 43FA                                       clear_1 4406  
                                     clear_2 4412                                       clear_3 441E  
                                     clear_4 442C                                       _parity 0160  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           printfOled@numBytes 0014  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                                     _status 004F                      __end_of_DATAEE_ReadByte 59DC  
                                     _strcmp 5186                   __end_of_ADC_TempConversion 31EA  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                            _moteApp_delayms 5526                  __size_of_service_pushbutton 006E  
                               __pdataCOMRAM 005D                                 _CDCTxService 25AE  
                               i2_oled_clear 596A                                 __mediumconst 75EE  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                                  ?_CMP1_ISR 0001                      __end_of_TMR2_StartTimer 5B7C  
                               _dataRateRead 0053                                  _CtrlTrfData 000438  
                                  ??_strncmp 0066                             ___lbdiv@dividend 0061  
                              ?_oled_devInit 0001                         ?_EUSART_Transmit_ISR 0001  
                       _controlTransferState 004A                    USBapp_Handler@buttonPress 0077  
                       _USBapp_getrxByteFlag 5B5C                             ?_TMR1_Initialize 0001  
                       __CFG_LS48MHZ$SYS48X8 000000                   i2oled_putString@start_page 0010  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 5732                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 0070  
                                 __accesstop 0060                      __end_of__initialization 4432  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5A6A                       i2oled_putString@string 000D  
                         ?_SYSTEM_Initialize 0001                           oled_writeData@data 0060  
                              ___rparam_used 000001                                ?_oled_setFont 0060  
                   __size_of_USBStallHandler 0042                                   ___fltol@f1 0060  
                              ?_oled_putChar 0062                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0042                                ?_oled_putint8 0077  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 5416  
                                ?_InitSwUart 0001                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 79B8                                __end_of_sd001 79A2  
                              __end_of_sd002 796E                                 __pidataBANK0 5B48  
                               __pidataBANK1 5B98                          ??_SYSTEM_Initialize 0062  
                    __end_of_TMR3_StartTimer 5B78                                    ?_TMR0_ISR 0001  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 009E                             _DATAEE_WriteByte 539E  
              __size_of_USBConfigureEndpoint 0094      __end_of_oled_setContrastControlRegister 5A1A  
   __size_of_oled_setContrastControlRegister 0014             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 5A06  
                          ?i2_oled_putString 000D                  __end_of_USBCtrlTrfInHandler 3578  
                           ?_TMR2_Initialize 0001                         i2oled_clearRow@index 000E  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 3D7E                              __CFG_PCLKEN$OFF 000000  
                         ??i2_oled_putString 0011                     ?_clearInterruptTimerUART 0001  
                 i2oled_writeCommand@command 0001                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F7                            _CDCTxService$6702 0068  
                                 _cdc_notice 01D4                                    ?i2_memset 0001  
                                 _cdc_rx_len 00DE                            ?i2_oled_writeData 0001  
                                 _cdc_tx_len 00DD                         _moteApp_getTempValue 52E2  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01F7  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01C4  
                           ?_TMR0_StartTimer 0001                           ??i2_oled_writeData 0001  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 575C                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 41B8                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00BC                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                       __end_of_EUSART_Write 539E                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0076  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                           ??i2_oled_putChar 0005                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0074                              _periodicUpValue 00FE  
                  ??_moteApp_lightStringSize 0060                  __size_of_EUSART_Receive_ISR 0030  
                        oled_putString@index 0076                               ??_oled_putChar 0064  
                __size_of_USBWakeFromSuspend 0030                                  _pBDTEntryIn 00CA  
                     __size_of_oled_clearRow 0026                                   _clearLight 01ED  
                __end_of_moteApp_testSensors 3B3E                     sendDataCommand@byteCount 0067  
           __end_of_USBCtrlEPServiceComplete 3100             __end_of_MOTEapp_setResponseReady 5B68  
                             ??_oled_putint8 0079                       oled_putChar@start_page 0063  
                __size_of_USBCheckCDCRequest 00B0                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0030                      ?_moteApp_getLightString 0060  
                           ??_oled_writeData 0060                         USBCtrlTrfRxService@i 0012  
                               ?_TMRapp_Tick 0001                      __size_of_TMR0_StopTimer 0004  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 5558  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A2                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 38DE  
                    _moteApp_addToDataBuffer 4F1E                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 00D3                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 2826                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 32D2                                _eusartRxCount 00F5  
                          _configDescriptor1 78F7                                      i2l10150 4E5C  
                                    i2l11324 2AC2                                      i2l11352 2B24  
                                    i2l11286 392E                                      i2l12276 4FA2  
                                    i2l12278 4FD2                                      i2l11844 28E6  
                                  ?___xxtofl 0060                                      _RS232cp 00E5  
                        i2_oled_writeCommand 5A56                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0060  
                               ??_TMR0_Clear 0001                                   ??i2_memset 0007  
                         __size_of_test_oled 008A                         __size_of_moduleSleep 0026  
                __end_of_USBCtrlTrfTxService 38DE                         __size_of_moteHandler 021A  
                        _USBStdSetCfgHandler 33B4                                      _OSCCON2 000FD2  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                                    _TBLPTRU 000FF8                                      _OSCTUNE 000F9B  
                     __size_of_oled_putUint8 008A               USBapp_LEDUpdateStatus@ledCount 003F  
                            __CFG_WDTPS$8192 000000          __size_of_moteApp_convertSensorValue 007E  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 5A7C  
                             ??_moduleResync 0065                          ?_USBCheckStdRequest 0001  
                       __size_of_reloadTimer 000A                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 012E                          __size_of_InitSwUart 001C  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                      ADC_TempConversion@val 00A8                                      _UIRbits 000F65  
                     test_switch@buttonCheck 007A              moteRunningProcess@bufferReadPos 00B4  
                                    _EndLine 5ACC                                _cdc_trf_state 00EB  
                       DATAEE_WriteByte@bAdd 0061                              _countBitsSilent 004C  
                    __size_of_USBapp_exitCDC 0006                  __size_of_InterruptTimerUART 0106  
                 __end_of_moteRunningProcess 100E                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                          printfOled@buffer_rx 0012  
                 ?_moteApp_add8bToDataBuffer 0066                         ?i2_oled_writeCommand 0001  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 5AE6  
                     InterruptTimerUART@mask 0017           __end_of_MOTEapp_SetDataRateSetting 245A  
                 _MOTEapp_SetDataRateSetting 22F8                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 4DF2  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00B9                             _Set_Page_Address 5A1A  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 410A                           __end_of_TMR0_Clear 5B8C  
                                    ___fladd 1886                            _timerMinTickCount 003D  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 0526  
                                    ___fldiv 1BC4                                      ___lbdiv 5322  
                                    ___awmod 4B6E                                      ___flmul 1534  
                           ?_TMR3_StartTimer 0001                                      ___fltol 3658  
                                    ___lldiv 488C                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0028                            ??_USBStallHandler 0001  
                                    ___lwmod 521A                         oled_putint8@negative 0079  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 43A4                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793A  
                                    __ramtop 0800                                      _delayms 54F4  
                          hexToStr@character 0060                                      __ptext0 2CE4  
                                    __ptext1 4AFC                                      __ptext2 39AC  
                                    __ptext3 4566                                      __ptext4 4EBE  
                                    __ptext5 4D24                                      __ptext6 31EA  
                                    __ptext7 54F4                                      __ptext8 3A78  
                                    __ptext9 20DE                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 0041  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 5B56  
                            __size_of_strcmp 004C                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countRX 004D  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 59B0  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 57FC                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 002E                __size_ofi2_Set_Column_Address 0016  
            moteApp_add8bToDataBuffer@number 0069                                   ??___xxtofl 0064  
                                  _T3CONbits 000FB1                                   _oled_clear 591C  
                           ___awmod@dividend 0060                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 5B40                                 _LastRS232Out 00E6  
                            i2_USBDeviceInit 2A88                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 55BA                                      _rx_data 004E  
               __end_of_MOTEapp_handlerState 5B26                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F7                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 002A              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 467A  
                       end_of_initialization 4432                                 _getsUSBUSART 3E38  
              sendDataCommand@byteCount_1627 0068                           __end_of_USB_SD_Ptr 75F5  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                     __size_ofi2_oled_clearRow 0020  
                        _pBDTEntryEP0OutNext 0035                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
                              __Lmediumconst 75EE              _dummy_encapsulated_cmd_response 01DE  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1025_40 2F12  
                                  i2u1026_48 2F14                                    i2u1029_44 2F7C  
                                  i2u1029_45 2F78                     ?_USBStdFeatureReqHandler 0001  
                                  i2u1059_40 2954                        ??i2_oled_writeCommand 0001  
             __end_of_MOTEapp_TimerBasedTask 5886                            _EUSART_Initialize 5450  
                          _oled_powerControl 5A8C                                   _rxByteFlag 00E9  
                 __end_ofi2_Set_Page_Address 5ACC                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00CC  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 4F1E                            __end_of_test_oled 45F0  
             moteJoiningProcess@changeStates 0077                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 45F0  
                         __end_of_USBSuspend 5786               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 4306                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006D                           test_switch@timeout 0078  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                  ??_moteApp_addToDataBuffer 0075               moteApp_setLightString@stingPos 006D  
                       __end_of_oled_devInit 498E                     _USBCtrlEPServiceComplete 300E  
                    moteApp_toggleLeds@state 0064                                   _responseId 0130  
                                 _retryCount 0051                             ?_moteApp_delayms 0060  
                              _randomPortNum 00F1                     _MOTEapp_setResponseReady 5B62  
                                    strcmp@r 0065                   _USBStatusStageEnabledFlag1 0044  
                 _USBStatusStageEnabledFlag2 0043                                _dataRateValue 00FC  
                        _USBapp_handlerState 5B12                          ??_EUSART_Initialize 0060  
                        ??_oled_powerControl 0061                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                                  _PORTCbits 000F82                      oled_putUint8@start_page 0078  
                             ?_oled_clearRow 0001                                   _test_comms 4D24  
                                 _printfOled 5950                       ??_moteApp_getTempValue 0065  
                       __end_of_oled_setFont 5A06                                  ___fladd@grs 0073  
                         _Set_Column_Address 58E4                         __end_of_oled_putChar 488C  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 003E                         __end_of_oled_putint8 4306  
                         _BothEP0OutUOWNsSet 0047             __size_of_moteApp_setSensorsInput 0078  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 53DA                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 5AFE  
                                  _USTATcopy 0059                            __size_of_CMP1_ISR 0004  
                       ?_USBapp_handlerState 0001                           _ADC_TempConversion 3100  
                   oled_putString@start_page 0075                                  _CM1CON0bits 000F98  
                                ___flmul@grs 0081           __end_of_moteApp_convertSensorValue 4A0C  
                 _moteApp_convertSensorValue 498E                    __end_of_EUSART_Initialize 5488  
                  __end_of_oled_powerControl 5A9C                      oled_putint8@station_dot 0077  
               ??_oled_regulorResistorSelect 0061                 __end_of_USBTransferOnePacket 3D7E  
                                _CM2CON1bits 000F9A                                    _TXSTAbits 000FAC  
                __end_of_clearInterruptPinRX 5AFE                               ?_oled_putUint8 0077  
                          putUSBUSART@length 0062                          ?_ADC_TempConversion 0001  
                   ??_oled_initialDispayLine 0061                               _TMR0_StopTimer 5B8C  
                               ??_InitSwUart 0060                        _moteApp_getLightValue 5138  
                     _USBCtrlTrfSetupHandler 4786                         ??_Set_Column_Address 0061  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 4786  
                      __end_of_USBDeviceInit 2A88                               _TMRapp_Handler 2DFC  
                             _USBapp_Handler 3FA6                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 57AE  
                              __pidataCOMRAM 5B9B                                 _EUSART_Write 5360  
                      sendDataCommand@string 0061                            __size_of_TMR0_ISR 0004  
                    __end_ofi2_USBDeviceInit 2BB6                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 4C4E                            __size_of_TMR3_ISR 001E  
                             _ADC_Initialize 5936                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 521A                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 561A                            _USBBusIsSuspended 015D  
                   oled_writeCommand@command 0060                               __end_of_strcmp 51D2  
                                ?_oled_clear 0001                          start_initialization 43A4  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0010                     __size_of_TMR0_Initialize 0020  
            __size_of_PIN_MANAGER_Initialize 0054                            ??_oled_setDisplay 0061  
                              ??_EUSART_Read 0060                       __end_of_TMR2_ReadTimer 5B08  
            __end_of_moteApp_addToDataBuffer 4F7C                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 54C0  
                          __size_ofi2_memset 002C                                    _OledFont0 75F7  
               __end_of_USBConfigureEndpoint 44D4                    __size_ofi2_oled_putString 0066  
            __end_of_USBStdFeatureReqHandler 20DE                     __size_of_sendDataCommand 00BE  
                         __end_of_InitSwUart 591C                        ??_USBapp_handlerState 0060  
            moteApp_convertSensorValue@index 0079            __end_of_USBCtrlEPAllowStatusStage 3C02  
                              _periodicState 00FA             __size_of_clearInterruptTimerUART 0006  
                             _USBapp_exitCDC 5B56                     __end_of_USBCtrlEPService 39AC  
       __end_of_USART_mySetLineCodingHandler 508E        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 5034                   __end_of_EUSART_FlushBuffer 52A0  
                        DATAEE_ReadByte@bAdd 0060                __size_of_USBapp_setrxByteFlag 0008  
                              _moteModeState 0054                    ??_USBCtrlEPAllowDataStage 0002  
                     __end_of_TMR0_StopTimer 5B90                    __size_ofi2_oled_writeData 0014  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0037  
                   __size_of_TMR1_Initialize 0032                            ??i2_oled_clearRow 000D  
                    USBTransferOnePacket@dir 0060                      USBTransferOnePacket@len 0063  
                     __end_of_USBapp_Handler 405A                       __end_of_TMRapp_Handler 2F08  
             __end_ofi2_USBTransferOnePacket 3E38                         _TMRapp_ClearBitFlags 5B38  
                                   ??___wmul 0064              __size_of_moteApp_setLightString 006A  
                        _USBStdGetDscHandler 2BB6                         _MOTEapp_handlerState 5B1C  
                     __end_of_ADC_Initialize 5950                                  __pdataBANK0 00F9  
                                __pdataBANK1 01FA                              i2oled_putChar@k 000B  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 0164                                     ??_strcmp 0064  
                                ?_test_comms 0001                                  ?_printfOled 0012  
                  oled_putString@station_dot 0074                                    ___fladd@a 0064  
                                  ___fladd@b 0060                               _InterruptPinRX 56D8  
                     _USBActiveConfiguration 005A               __end_of_USBStdGetStatusHandler 4260  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 567A                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 0033  
                 service_pushbutton@PB_Timer 014A                                __pcstackBANK0 0060  
               __size_of_USBCtrlTrfInHandler 00E2                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 5A2E                            __size_of___xxtofl 0154  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00F4  
                       ?_USBStdGetDscHandler 0001                          i2oled_clearRow@page 000D  
                     __end_of_USBapp_exitCDC 5B5C           __size_of_MOTEapp_getModuleResponse 0066  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 56AA               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 5B08  
                 __end_of_USBWakeFromSuspend 564A                   __size_of_EUSART_Initialize 0038  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 002E  
                            _USBStallHandler 52A0                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 5450                         i2oled_writeData@data 0001  
                 __end_of_USBCheckCDCRequest 410A                              ??_oled_putUint8 0079  
                       oled_putString@string 0072                     __size_of_TMR0_StartTimer 0004  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0120  
                            ?_TMR0_StopTimer 0001                  ??_moteApp_add8bToDataBuffer 0067  
        INTERRUPT_InterruptManager@tClearPin 0032                            _oled_writeCommand 599A  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 50E4  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0050  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EE  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                  __ptext100 5900                                    __ptext101 5450  
                                   ?___lbdiv 0060                                    __ptext110 561A  
                                  __ptext102 5A6A                                    __ptext111 575C  
                                  __ptext103 5936                                    __ptext120 41B8  
                                  __ptext112 52A0                                    __ptext104 5B1C  
                                  __ptext121 2BB6                                    __ptext113 38DE  
                                  __ptext105 59C6                                    __ptext130 4FD8  
                                  __ptext122 1E7A                                    __ptext114 4786  
                                  __ptext131 26F2                                    __ptext123 4F7C  
                                  __ptext115 300E                                    __ptext107 5B40  
                                  __ptext140 5AE6                                    __ptext132 3B3E  
                                  __ptext124 508E                                    __ptext116 4306  
                                  __ptext108 2826                                    __ptext141 5B84  
                                  __ptext133 3496                                    __ptext125 4DF2  
                                  __ptext117 32D2                                    __ptext109 2A88  
                                  __ptext150 59DC                                    __ptext142 2F08  
                                  __ptext134 380A                                    __ptext126 3D7E  
                                  __ptext118 33B4                                    __ptext151 5A56  
                                  __ptext143 5950                                    __ptext135 5034  
                                  __ptext127 53DA                                    __ptext119 5706  
                                  __ptext160 567A                                    __ptext152 5B6E  
                                  __ptext144 4E58                                    __ptext136 5488  
                                  __ptext128 4440                                    __ptext161 5B94  
                                  __ptext153 5B88                                    __ptext145 596A  
                                  __ptext137 488C                                    __ptext129 405A  
                                  __ptext162 0000                                    __ptext154 5B8C  
                                  __ptext146 58A6                                    __ptext138 5B68  
                                  __ptext155 56D8                                    __ptext147 4A84  
                                  __ptext139 58C6                                    __ptext156 5B90  
                                  __ptext148 5A42                                    __ptext157 5B26  
                                  __ptext149 5ABC                                    __ptext158 5AF2  
                                  __ptext159 564A                                     ?___awmod 0060  
                                   ?___flmul 0074                                     ?___fltol 0060  
                 __end_of_moteApp_toggleLeds 32D2                                     ?___lldiv 0001  
                                   ?___lwmod 0060                              ?_ADC_Initialize 0001  
                      __size_of_oled_setFont 0014                                 _eusartRxHead 00E0  
                              ??_sendCommand 0063            moteApp_getTempValue@escapeCounter 0065  
                               _eusartTxHead 00E3                                 _eusartRxTail 00DF  
               __size_of_moteApp_testSensors 00C6                                 _eusartTxTail 00E2  
                       ?_USBapp_exitCDCState 0001                        __size_of_oled_putChar 0082  
                     __end_of_InterruptPinRX 5706                           _moteRunningProcess 010C  
                          _moduleBufferIndex 00F2                                     ?_delayms 0060  
                                  _buffer_rx 0300                 ??_INTERRUPT_InterruptManager 0020  
                           ___almod@dividend 0060                             ?i2_USBDeviceInit 0001  
                     moteHandler@readMessage 00BB                          ??_oled_writeCommand 0060  
                              ??_moduleSleep 0063                                ??_moteHandler 00B6  
                      __size_of_oled_putint8 00A6                      _eusartTxBufferRemaining 00E1  
                       _USBTransferOnePacket 3CC0                                    _mainState 0056  
                   __size_of_TMR1_StartTimer 0004                                ??_reloadTimer 0001  
                    _moteApp_setSensorsInput 4A0C                       moteHandler@buttonPress 00BA  
                        ?_moteRunningProcess 00AC                 __end_of_USBCtrlTrfOutHandler 5034  
                                  _minTicker 0163                     reloadTimer@setTimerValue 0001  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 5B94  
                     _moteApp_setLightString 4CBA                                  _ep_data_out 00D0  
               __size_of_USBCtrlTrfRxService 0134                                    _secTicker 00F0  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0016                                     ?_strncmp 0060  
                 __end_of_InterruptTimerUART 300E                          oled_putint8@numData 007A  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 490E  
         __end_of_oled_regulorResistorSelect 5A8C                   _oled_regulorResistorSelect 5A7C  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 0072  
                          _dataRateSelection 01FC                             _timerMsTickCount 00D8  
                                  _oled_init 558A                 __size_of_USBCtrlTrfTxService 00D4  
                          ??_TMR0_Initialize 0060            __end_of_MOTEapp_getModuleResponse 4DF2  
                             _eusartTxBuffer 0240                     i2oled_putChar@start_page 0004  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 59B0                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
               __end_ofi2_Set_Column_Address 59F2                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 0068  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 59F2  
                                  _moteState 00FF                          __size_of_printfOled 001A  
                          ??_sendDataCommand 0066                                _operationType 00F7  
                          i2_TMR0_StartTimer 5B90                        __size_of_moduleResync 0084  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1534  
        __size_of_INTERRUPT_InterruptManager 0100                                 _oled_putChar 480A  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 0092                                     i2u612_40 2C2E  
              __size_of_moteApp_clearCommand 0010                                     i2u612_47 2C24  
                                   i2u613_40 2C5E                                     _PIR3bits 000FA4  
                                   i2u613_47 2C54                                     i2u615_40 2CB0  
                                   i2u615_47 2CA6                                     i2u608_40 342A  
                                   i2u571_40 50D8                                     i2u637_40 204C  
                                   i2u584_40 3886                    USBCtrlEPService@setup_cnt 001E  
                                   i2u584_47 387C                                     i2u586_40 38C6  
                                   i2u586_47 38BC                                     i2u674_48 2802  
                                   i2u674_49 2816                                     i2u589_40 48BE  
                                   i2u871_40 4EB2                                     i2u871_47 4EA8  
                                   i2u858_48 355A                                     i2u858_49 356E  
                                   i2u869_40 4E84                                     i2u869_47 4E7A  
                                   _RCONbits 000FD0                         __end_of_test_powerup 4B6E  
                                   i2u992_40 397C                                 _oled_putint8 4260  
                                   i2u995_40 2AE6                                ??_putUSBUSART 0063  
                         ?i2_TMR0_StartTimer 0001                                     i2u998_40 2B88  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0042  
                                   _SSP1CON1 000FC6                                     _TMR0_ISR 5B84  
                __size_of_USBCheckStdRequest 00E2                                     _TMR1_ISR 5AE6  
                    __size_of_oled_putString 006C                                     _TMR3_ISR 58C6  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                    __size_ofi2_oled_putChar 0078                              _oled_displayOff 5B30  
                                  _test_leds 4EBE                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 4440  
                                  _test_oled 4566                        ??_USBapp_exitCDCState 0060  
                            ?_InterruptPinRX 0001             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                          ??i2_TMR0_StartTimer 0001  
                         i2_Set_Page_Address 5ABC                            ___wmul@multiplier 0060  
                      ?_USBTransferOnePacket 0060          moteRunningProcess@sizeOfUpdate_1497 00B2  
                     ADC_TempConversion@temp 00A7                       oled_putint8@start_page 0078  
                  _moteApp_add8bToDataBuffer 3EF0                      __size_of_oled_writeData 0016  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 00B8                                ?i2_oled_clear 0001  
                               _RemoteWakeup 0049                          __end_of_sendCommand 55EA  
                                   i2_memset 5706                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 5A9C                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 00E7                          ?i2_Set_Page_Address 0001  
          moteApp_setLightString@lightString 006B                      __end_of_USBStallHandler 52E2  
                        __end_of_moduleSleep 57FC                          __end_of_moteHandler 22F8  
                                _EUSART_Read 5416                            _moteApp_GoToSleep 3736  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
                                  copy_data0 43D6                             i2_oled_putString 4E58  
                __end_ofi2_oled_writeCommand 5A6A                      _clearInterruptTimerUART 5B6E  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 0074  
                               _moduleResync 4702                  __end_of_USBStdSetCfgHandler 3496  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0006  
                        __end_of_reloadTimer 5B30                           ?_moteApp_GoToSleep 0001  
                                 ?_oled_init 0001                            ??_TMR2_Initialize 0060  
                              ??_test_switch 0077  MOTEapp_getModuleResponse@terminatorReceived 0061  
                ?_moteApp_convertSensorValue 0072                 clearInterruptPinRX@tClearPin 0001  
                           __size_of_EndLine 000E                    __end_ofi2_TMR0_StartTimer 5B94  
                         ??_DATAEE_WriteByte 0061                           __end_of_device_dsc 79B4  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                           i2_oled_writeData 5A42                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                  memcpy@tmp 006A                          i2oled_putChar@index 000C  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                         ??i2_Set_Page_Address 0002  
                         __CFG_BOREN$SBORDIS 000000                                     _SetupPkt 000430  
                    ??_OSCILLATOR_Initialize 0060                        ?_USBConfigureEndpoint 0001  
                          ??_TMR0_StartTimer 0060                             __size_of___almod 00AE  
                           __size_of___fladd 033E                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 02B6  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072                  i2Set_Column_Address@address 0002  
                           __size_of___flmul 0352                             __size_of___fltol 00DE  
                 oled_initialDispayLine@line 0061               moteJoiningProcess@readDataRate 007A  
                               _selectedFont 01FA                             __size_of___lldiv 0082  
                            _oled_setDisplay 57AE             moteApp_clearBuffers@counter_1714 0061  
           moteApp_clearBuffers@counter_1715 0062             moteApp_clearBuffers@counter_1716 0063  
                           __size_of___lwmod 0044                    MOTEapp_handlerState@state 0060  
                          ??_TMR3_Initialize 0060                    ??_moteApp_setSensorsInput 0065  
                           __size_of_delayms 0032                                   _ANSELAbits 000F5B  
                        __end_of_putUSBUSART 5844                                  _line_coding 01E6  
                                 _ANSELCbits 000F5D                               ??_CDCTxService 0067  
                              _responseReady 0052                               ??i2_oled_clear 000F  
                               ??_oled_clear 006E                                     ___xxtofl 245A  
                                _menuTimeout 00FB                     __size_of_moteApp_delayms 0032  
                  __end_of_moteApp_GoToSleep 380A                __size_of_moteApp_getTempValue 0040  
                    __size_of_USBDeviceTasks 0132                                     _appTimer 00F8  
                                   _appState 0055                                     __ptext10 010C  
                                   __ptext11 3C02                                     __ptext20 51D2  
                                   __ptext12 56AA                                     __ptext21 5ADA  
                                   __ptext13 4260                                   _T1GCONbits 000FCC  
                                   __ptext30 558A                                     __ptext22 498E  
                                   __ptext14 45F0                                     __ptext31 59F2  
                                   __ptext23 5786                                     __ptext15 4A0C  
                                   __ptext40 4702                                     __ptext32 57AE  
                                   __ptext24 44D4                                     __ptext16 5B50  
                                   __ptext41 4D8C                                     __ptext33 490E  
                                   __ptext25 4F1E                                     __ptext17 52E2  
                                   __ptext50 1886                                     __ptext42 525E  
                                   __ptext34 5A06                                     __ptext26 3EF0  
                                   __ptext18 5138                                     __ptext51 100E  
                                   __ptext43 5AFE                                     __ptext35 5A7C  
                                   __ptext27 5322                                     __ptext19 4CBA  
                                   __ptext60 410A                                     __ptext52 467A  
                                   __ptext44 22F8                                     __ptext36 5A8C  
                                   __ptext28 4B6E                                     __ptext61 5B38  
                                   __ptext53 5186                                     __ptext45 3100  
                                   __ptext37 5A9C                                     __ptext29 3736  
                                   __ptext70 591C                                     __ptext62 5866  
                                   __ptext54 5526                                     __ptext46 245A  
                                   __ptext38 5B30                                     __ptext71 57FC  
                                   __ptext63 5AAC                                     __ptext55 539E  
                                   __ptext47 3658                                     __ptext39 57D6  
                                   __ptext80 5B5C                                     __ptext72 480A  
                                   __ptext64 55BA                                     __ptext56 5B08  
                                   __ptext48 1534                                     __ptext81 5B62  
                                   __ptext73 5984                                     __ptext65 5ACC  
                                   __ptext57 5B56                                     __ptext49 1BC4  
                                   __ptext90 5844                                     __ptext82 5360  
                                   __ptext74 5A1A                                     __ptext66 5B12  
                                   __ptext58 2DFC                                     __ptext91 5B74  
                                   __ptext83 5416                                     __ptext75 58E4  
                                   __ptext67 3FA6                                     __ptext59 521A  
                                   __ptext92 5A2E                                     __ptext84 25AE  
                                   __ptext76 599A                                     __ptext68 4BE0  
                                   __ptext93 5B78                                     __ptext85 3CC0  
                                   __ptext77 3578                                     __ptext69 4C4E  
                                   __ptext94 5558                                     __ptext86 2958  
                                   __ptext78 5822                                     __ptext95 5B7C  
                                   __ptext87 55EA                                     __ptext79 3E38  
                                   __ptext96 5886                                     __ptext88 54C0  
                                   __ptext97 5B80                                     __ptext89 5732  
                                   __ptext98 50E4                                     __ptext99 59B0  
       __end_of_USBapp_CdcEmulatorInitialize 50E4        __size_of_USBapp_CdcEmulatorInitialize 0056  
               _USBapp_CdcEmulatorInitialize 508E                                 _SSP1CON1bits 000FC6  
                                   _dotCount 0162                                     _hexToStr 56AA  
                         _service_pushbutton 4BE0                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              i2_oled_clearRow 58A6  
                            ___almod@counter 0068                                   _T3GCONbits 000FB4  
                DATAEE_WriteByte@GIEBitValue 0062                     ??_moteApp_getLightString 0062  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 0088  
             __end_of_USBCtrlTrfSetupHandler 480A                                __size_of_main 0118  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 005D                                     _rnModule 00EE  
                         oled_putint8@number 0080                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 0072  
                    __end_of_oled_displayOff 5B38                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 0065                                     delayms@i 0063  
                                   delayms@t 0060                          _USBCtrlTrfInHandler 3496  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 0161  
                         __end_of_oled_clear 5936                          __end_of_test_switch 3A78  
                                   _outPipes 00BC                         _USBCtrlTrfOutHandler 4FD8  
                                   int$flags 005E                                     _usbState 00EA  
                  _USBCtrlEPAllowStatusStage 3B3E                 __size_of_clearInterruptPinRX 000C  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 0108                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 55BA                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 525E  
                               ??_test_comms 0077                                 ??_printfOled 0015  
               __end_of_USBapp_setrxByteFlag 5B48                                  _moduleSleep 57D6  
                                _moteHandler 20DE                             ??_TMR2_ReadTimer 0060  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0045  
                   CDCTxService@byte_to_send 006B                         i2_Set_Column_Address 59DC  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 5B1C  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                _reloadTimer 5B26                                     memcpy@s1 0062  
              USBCtrlTrfTxService@byteToSend 0001                    ??_clearInterruptTimerUART 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 01A4  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                             ??_TMR0_StopTimer 0001  
                        _moteApp_testSensors 3A78                                  ??_oled_init 006E  
                ??_MOTEapp_getModuleResponse 0061                           ??_Set_Page_Address 0061  
                     __size_of_USBDeviceInit 0130                         oled_powerControl@vol 0061  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4FD8     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 4F7C               moteJoiningProcess@messageReady 007C  
            __end_of_moteApp_setSensorsInput 4A84                             ___lwmod@dividend 0060  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                 __size_ofi2_TMR0_StartTimer 0004                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0077                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 00B7  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 4D8C                         ??_EUSART_FlushBuffer 0060  
                         __end_of_printfOled 596A                      __end_of_oled_setDisplay 57D6  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00EF  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 4C4E                                  _putUSBUSART 5822  
                             i2_oled_putChar 4A84                           _EUSART_Receive_ISR 567A  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 26F2                           _USBWakeFromSuspend 561A  
                                ??_test_leds 0077                                _powerOnStatus 00F6  
                                ??_test_oled 0077                      _USBStdFeatureReqHandler 1E7A  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3658  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 3578  
                         _USBCheckCDCRequest 405A                          _USBCtrlTrfTxService 380A  
                        __end_of_TMRapp_Tick 5B6E                        __end_of_oled_clearRow 5822  
                                _temperature 00DA                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 5984                        ?i2_Set_Column_Address 0001  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 0060  
                                   strcmp@s2 0062                      ?_moteApp_setLightString 006B  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 0062  
                           ??_USBapp_exitCDC 0060                              _TMR0_Initialize 5886  
                      ??_USBCtrlTrfInHandler 0012                      __end_ofi2_oled_clearRow 58C6  
                      _USBAlternateInterface 0057                              ___lwmod@counter 0064  
                                 _TMR0_Clear 5B88                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 31EA                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0048  
                                 _WDTCONbits 000FD1                                 _test_powerup 4AFC  
                            _sendDataCommand 3C02                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0077                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 5138                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0046  
                                _test_switch 39AC                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 26F2                              _TMR1_Initialize 5558  
                       __end_ofi2_oled_clear 5984            moteJoiningProcess@joiningComplete 007B  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 467A  
                     __end_of_oled_putString 4CBA                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 75F5              __end_of_clearInterruptTimerUART 5B74  
                     __end_ofi2_oled_putChar 4AFC                             ??_InterruptPinRX 0002  
