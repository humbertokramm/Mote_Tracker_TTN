

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 01 01:47:09 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   186                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   187                           	dabs	1,0x400,48,_BDT
   188                           	dabs	1,0x500,64,_cdc_data_tx
   189                           	dabs	1,0x438,8,_CtrlTrfData
   190                           	dabs	1,0x430,8,_SetupPkt
   191                           	dabs	1,0x540,64,_cdc_data_rx
   192  0000                     
   193                           ; Version 1.45
   194                           ; Generated 16/11/2017 GMT
   195                           ; 
   196                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   197                           ; All rights reserved.
   198                           ; 
   199                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   200                           ; 
   201                           ; Redistribution and use in source and binary forms, with or without modification, are
   202                           ; permitted provided that the following conditions are met:
   203                           ; 
   204                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   205                           ;        conditions and the following disclaimer.
   206                           ; 
   207                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   208                           ;        of conditions and the following disclaimer in the documentation and/or other
   209                           ;        materials provided with the distribution.
   210                           ; 
   211                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   212                           ;        software without specific prior written permission.
   213                           ; 
   214                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   215                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   216                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   217                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   218                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   219                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   220                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   221                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   222                           ; 
   223                           ; 
   224                           ; Code-generator required, PIC18LF45K50 Definitions
   225                           ; 
   226                           ; SFR Addresses
   227  0000                     
   228                           	psect	idataCOMRAM
   229  0064C3                     __pidataCOMRAM:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _Contrast_level
   233  0064C3  13                 	db	19
   234                           
   235                           ;initializer for _periodicTimerValue
   236  0064C4  03                 	db	3
   237                           
   238                           	psect	idataBANK0
   239  006480                     __pidataBANK0:
   240                           	opt stack 0
   241                           
   242                           ;initializer for _exitUSB
   243  006480  01                 	db	1
   244                           
   245                           ;initializer for _periodicState
   246  006481  03                 	db	3
   247                           
   248                           ;initializer for _menuTimeout
   249  006482  01                 	db	1
   250                           
   251                           ;initializer for _dataRateValue
   252  006483  02                 	db	2
   253                           
   254                           ;initializer for _periodicUpValue
   255  006484  03                 	db	3
   256                           
   257                           ;initializer for _moteState
   258  006485  01                 	db	1
   259                           
   260                           	psect	idataBANK1
   261  0064C0                     __pidataBANK1:
   262                           	opt stack 0
   263                           
   264                           ;initializer for _selectedFont
   265  0064C0  F8                 	db	low _OledFont0
   266  0064C1  75                 	db	high _OledFont0
   267                           
   268                           ;initializer for _dataRateSelection
   269  0064C2  02                 	db	2
   270                           
   271                           	psect	mediumconst
   272  0075EA                     __pmediumconst:
   273                           	opt stack 0
   274  0075EA  00                 	db	0
   275  0075EB                     _USB_SD_Ptr:
   276                           	opt stack 0
   277  0075EB  B5                 	db	low _sd000
   278  0075EC  79                 	db	high _sd000
   279  0075ED  6F                 	db	low _sd001
   280  0075EE  79                 	db	high _sd001
   281  0075EF  3B                 	db	low _sd002
   282  0075F0  79                 	db	high _sd002
   283  0075F1                     __end_of_USB_SD_Ptr:
   284                           	opt stack 0
   285  0075F1                     _sentenceName:
   286                           	opt stack 0
   287  0075F1  47                 	db	71
   288  0075F2  50                 	db	80
   289  0075F3  47                 	db	71
   290  0075F4  4C                 	db	76
   291  0075F5  4C                 	db	76
   292  0075F6                     __end_of_sentenceName:
   293                           	opt stack 0
   294  0075F6                     _USB_CD_Ptr:
   295                           	opt stack 0
   296  0075F6  F8                 	db	low _configDescriptor1
   297  0075F7  78                 	db	high _configDescriptor1
   298  0075F8                     __end_of_USB_CD_Ptr:
   299                           	opt stack 0
   300  0075F8                     _OledFont0:
   301                           	opt stack 0
   302  0075F8  00                 	db	0
   303  0075F9  00                 	db	0
   304  0075FA  00                 	db	0
   305  0075FB  00                 	db	0
   306  0075FC  00                 	db	0
   307  0075FD  00                 	db	0
   308  0075FE  00                 	db	0
   309  0075FF  00                 	db	0
   310  007600  00                 	db	0
   311  007601  00                 	db	0
   312  007602  00                 	db	0
   313  007603  5F                 	db	95
   314  007604  00                 	db	0
   315  007605  00                 	db	0
   316  007606  00                 	db	0
   317  007607  00                 	db	0
   318  007608  00                 	db	0
   319  007609  00                 	db	0
   320  00760A  03                 	db	3
   321  00760B  00                 	db	0
   322  00760C  03                 	db	3
   323  00760D  00                 	db	0
   324  00760E  00                 	db	0
   325  00760F  00                 	db	0
   326  007610  64                 	db	100
   327  007611  3C                 	db	60
   328  007612  26                 	db	38
   329  007613  64                 	db	100
   330  007614  3C                 	db	60
   331  007615  26                 	db	38
   332  007616  24                 	db	36
   333  007617  00                 	db	0
   334  007618  26                 	db	38
   335  007619  49                 	db	73
   336  00761A  49                 	db	73
   337  00761B  7F                 	db	127
   338  00761C  49                 	db	73
   339  00761D  49                 	db	73
   340  00761E  32                 	db	50
   341  00761F  00                 	db	0
   342  007620  42                 	db	66
   343  007621  25                 	db	37
   344  007622  12                 	db	18
   345  007623  08                 	db	8
   346  007624  24                 	db	36
   347  007625  52                 	db	82
   348  007626  21                 	db	33
   349  007627  00                 	db	0
   350  007628  20                 	db	32
   351  007629  50                 	db	80
   352  00762A  4E                 	db	78
   353  00762B  55                 	db	85
   354  00762C  22                 	db	34
   355  00762D  58                 	db	88
   356  00762E  28                 	db	40
   357  00762F  00                 	db	0
   358  007630  00                 	db	0
   359  007631  00                 	db	0
   360  007632  00                 	db	0
   361  007633  03                 	db	3
   362  007634  00                 	db	0
   363  007635  00                 	db	0
   364  007636  00                 	db	0
   365  007637  00                 	db	0
   366  007638  00                 	db	0
   367  007639  00                 	db	0
   368  00763A  1C                 	db	28
   369  00763B  22                 	db	34
   370  00763C  41                 	db	65
   371  00763D  00                 	db	0
   372  00763E  00                 	db	0
   373  00763F  00                 	db	0
   374  007640  00                 	db	0
   375  007641  00                 	db	0
   376  007642  00                 	db	0
   377  007643  41                 	db	65
   378  007644  22                 	db	34
   379  007645  1C                 	db	28
   380  007646  00                 	db	0
   381  007647  00                 	db	0
   382  007648  00                 	db	0
   383  007649  15                 	db	21
   384  00764A  15                 	db	21
   385  00764B  0E                 	db	14
   386  00764C  0E                 	db	14
   387  00764D  15                 	db	21
   388  00764E  15                 	db	21
   389  00764F  00                 	db	0
   390  007650  00                 	db	0
   391  007651  08                 	db	8
   392  007652  08                 	db	8
   393  007653  3E                 	db	62
   394  007654  08                 	db	8
   395  007655  08                 	db	8
   396  007656  00                 	db	0
   397  007657  00                 	db	0
   398  007658  00                 	db	0
   399  007659  00                 	db	0
   400  00765A  00                 	db	0
   401  00765B  50                 	db	80
   402  00765C  30                 	db	48
   403  00765D  00                 	db	0
   404  00765E  00                 	db	0
   405  00765F  00                 	db	0
   406  007660  00                 	db	0
   407  007661  08                 	db	8
   408  007662  08                 	db	8
   409  007663  08                 	db	8
   410  007664  08                 	db	8
   411  007665  08                 	db	8
   412  007666  00                 	db	0
   413  007667  00                 	db	0
   414  007668  00                 	db	0
   415  007669  00                 	db	0
   416  00766A  00                 	db	0
   417  00766B  40                 	db	64
   418  00766C  00                 	db	0
   419  00766D  00                 	db	0
   420  00766E  00                 	db	0
   421  00766F  00                 	db	0
   422  007670  40                 	db	64
   423  007671  20                 	db	32
   424  007672  10                 	db	16
   425  007673  08                 	db	8
   426  007674  04                 	db	4
   427  007675  02                 	db	2
   428  007676  01                 	db	1
   429  007677  00                 	db	0
   430  007678  00                 	db	0
   431  007679  3E                 	db	62
   432  00767A  41                 	db	65
   433  00767B  41                 	db	65
   434  00767C  41                 	db	65
   435  00767D  3E                 	db	62
   436  00767E  00                 	db	0
   437  00767F  00                 	db	0
   438  007680  00                 	db	0
   439  007681  00                 	db	0
   440  007682  41                 	db	65
   441  007683  7F                 	db	127
   442  007684  40                 	db	64
   443  007685  00                 	db	0
   444  007686  00                 	db	0
   445  007687  00                 	db	0
   446  007688  00                 	db	0
   447  007689  42                 	db	66
   448  00768A  61                 	db	97
   449  00768B  51                 	db	81
   450  00768C  49                 	db	73
   451  00768D  6E                 	db	110
   452  00768E  00                 	db	0
   453  00768F  00                 	db	0
   454  007690  00                 	db	0
   455  007691  22                 	db	34
   456  007692  41                 	db	65
   457  007693  49                 	db	73
   458  007694  49                 	db	73
   459  007695  36                 	db	54
   460  007696  00                 	db	0
   461  007697  00                 	db	0
   462  007698  00                 	db	0
   463  007699  18                 	db	24
   464  00769A  14                 	db	20
   465  00769B  12                 	db	18
   466  00769C  7F                 	db	127
   467  00769D  10                 	db	16
   468  00769E  00                 	db	0
   469  00769F  00                 	db	0
   470  0076A0  00                 	db	0
   471  0076A1  27                 	db	39
   472  0076A2  49                 	db	73
   473  0076A3  49                 	db	73
   474  0076A4  49                 	db	73
   475  0076A5  71                 	db	113
   476  0076A6  00                 	db	0
   477  0076A7  00                 	db	0
   478  0076A8  00                 	db	0
   479  0076A9  3C                 	db	60
   480  0076AA  4A                 	db	74
   481  0076AB  49                 	db	73
   482  0076AC  48                 	db	72
   483  0076AD  70                 	db	112
   484  0076AE  00                 	db	0
   485  0076AF  00                 	db	0
   486  0076B0  00                 	db	0
   487  0076B1  43                 	db	67
   488  0076B2  21                 	db	33
   489  0076B3  11                 	db	17
   490  0076B4  0D                 	db	13
   491  0076B5  03                 	db	3
   492  0076B6  00                 	db	0
   493  0076B7  00                 	db	0
   494  0076B8  00                 	db	0
   495  0076B9  36                 	db	54
   496  0076BA  49                 	db	73
   497  0076BB  49                 	db	73
   498  0076BC  49                 	db	73
   499  0076BD  36                 	db	54
   500  0076BE  00                 	db	0
   501  0076BF  00                 	db	0
   502  0076C0  00                 	db	0
   503  0076C1  06                 	db	6
   504  0076C2  09                 	db	9
   505  0076C3  49                 	db	73
   506  0076C4  29                 	db	41
   507  0076C5  1E                 	db	30
   508  0076C6  00                 	db	0
   509  0076C7  00                 	db	0
   510  0076C8  00                 	db	0
   511  0076C9  00                 	db	0
   512  0076CA  00                 	db	0
   513  0076CB  12                 	db	18
   514  0076CC  00                 	db	0
   515  0076CD  00                 	db	0
   516  0076CE  00                 	db	0
   517  0076CF  00                 	db	0
   518  0076D0  00                 	db	0
   519  0076D1  00                 	db	0
   520  0076D2  00                 	db	0
   521  0076D3  52                 	db	82
   522  0076D4  30                 	db	48
   523  0076D5  00                 	db	0
   524  0076D6  00                 	db	0
   525  0076D7  00                 	db	0
   526  0076D8  00                 	db	0
   527  0076D9  00                 	db	0
   528  0076DA  08                 	db	8
   529  0076DB  14                 	db	20
   530  0076DC  14                 	db	20
   531  0076DD  22                 	db	34
   532  0076DE  00                 	db	0
   533  0076DF  00                 	db	0
   534  0076E0  00                 	db	0
   535  0076E1  14                 	db	20
   536  0076E2  14                 	db	20
   537  0076E3  14                 	db	20
   538  0076E4  14                 	db	20
   539  0076E5  14                 	db	20
   540  0076E6  14                 	db	20
   541  0076E7  00                 	db	0
   542  0076E8  00                 	db	0
   543  0076E9  00                 	db	0
   544  0076EA  22                 	db	34
   545  0076EB  14                 	db	20
   546  0076EC  14                 	db	20
   547  0076ED  08                 	db	8
   548  0076EE  00                 	db	0
   549  0076EF  00                 	db	0
   550  0076F0  00                 	db	0
   551  0076F1  02                 	db	2
   552  0076F2  01                 	db	1
   553  0076F3  59                 	db	89
   554  0076F4  05                 	db	5
   555  0076F5  02                 	db	2
   556  0076F6  00                 	db	0
   557  0076F7  00                 	db	0
   558  0076F8  3E                 	db	62
   559  0076F9  41                 	db	65
   560  0076FA  5D                 	db	93
   561  0076FB  55                 	db	85
   562  0076FC  4D                 	db	77
   563  0076FD  51                 	db	81
   564  0076FE  2E                 	db	46
   565  0076FF  00                 	db	0
   566  007700  40                 	db	64
   567  007701  7C                 	db	124
   568  007702  4A                 	db	74
   569  007703  09                 	db	9
   570  007704  4A                 	db	74
   571  007705  7C                 	db	124
   572  007706  40                 	db	64
   573  007707  00                 	db	0
   574  007708  41                 	db	65
   575  007709  7F                 	db	127
   576  00770A  49                 	db	73
   577  00770B  49                 	db	73
   578  00770C  49                 	db	73
   579  00770D  49                 	db	73
   580  00770E  36                 	db	54
   581  00770F  00                 	db	0
   582  007710  1C                 	db	28
   583  007711  22                 	db	34
   584  007712  41                 	db	65
   585  007713  41                 	db	65
   586  007714  41                 	db	65
   587  007715  41                 	db	65
   588  007716  22                 	db	34
   589  007717  00                 	db	0
   590  007718  41                 	db	65
   591  007719  7F                 	db	127
   592  00771A  41                 	db	65
   593  00771B  41                 	db	65
   594  00771C  41                 	db	65
   595  00771D  22                 	db	34
   596  00771E  1C                 	db	28
   597  00771F  00                 	db	0
   598  007720  41                 	db	65
   599  007721  7F                 	db	127
   600  007722  49                 	db	73
   601  007723  49                 	db	73
   602  007724  5D                 	db	93
   603  007725  41                 	db	65
   604  007726  63                 	db	99
   605  007727  00                 	db	0
   606  007728  41                 	db	65
   607  007729  7F                 	db	127
   608  00772A  49                 	db	73
   609  00772B  09                 	db	9
   610  00772C  1D                 	db	29
   611  00772D  01                 	db	1
   612  00772E  03                 	db	3
   613  00772F  00                 	db	0
   614  007730  1C                 	db	28
   615  007731  22                 	db	34
   616  007732  41                 	db	65
   617  007733  49                 	db	73
   618  007734  49                 	db	73
   619  007735  3A                 	db	58
   620  007736  08                 	db	8
   621  007737  00                 	db	0
   622  007738  41                 	db	65
   623  007739  7F                 	db	127
   624  00773A  08                 	db	8
   625  00773B  08                 	db	8
   626  00773C  08                 	db	8
   627  00773D  7F                 	db	127
   628  00773E  41                 	db	65
   629  00773F  00                 	db	0
   630  007740  00                 	db	0
   631  007741  41                 	db	65
   632  007742  41                 	db	65
   633  007743  7F                 	db	127
   634  007744  41                 	db	65
   635  007745  41                 	db	65
   636  007746  00                 	db	0
   637  007747  00                 	db	0
   638  007748  30                 	db	48
   639  007749  40                 	db	64
   640  00774A  41                 	db	65
   641  00774B  41                 	db	65
   642  00774C  3F                 	db	63
   643  00774D  01                 	db	1
   644  00774E  01                 	db	1
   645  00774F  00                 	db	0
   646  007750  41                 	db	65
   647  007751  7F                 	db	127
   648  007752  08                 	db	8
   649  007753  0C                 	db	12
   650  007754  12                 	db	18
   651  007755  61                 	db	97
   652  007756  41                 	db	65
   653  007757  00                 	db	0
   654  007758  41                 	db	65
   655  007759  7F                 	db	127
   656  00775A  41                 	db	65
   657  00775B  40                 	db	64
   658  00775C  40                 	db	64
   659  00775D  40                 	db	64
   660  00775E  60                 	db	96
   661  00775F  00                 	db	0
   662  007760  41                 	db	65
   663  007761  7F                 	db	127
   664  007762  42                 	db	66
   665  007763  0C                 	db	12
   666  007764  42                 	db	66
   667  007765  7F                 	db	127
   668  007766  41                 	db	65
   669  007767  00                 	db	0
   670  007768  41                 	db	65
   671  007769  7F                 	db	127
   672  00776A  42                 	db	66
   673  00776B  0C                 	db	12
   674  00776C  11                 	db	17
   675  00776D  7F                 	db	127
   676  00776E  01                 	db	1
   677  00776F  00                 	db	0
   678  007770  1C                 	db	28
   679  007771  22                 	db	34
   680  007772  41                 	db	65
   681  007773  41                 	db	65
   682  007774  41                 	db	65
   683  007775  22                 	db	34
   684  007776  1C                 	db	28
   685  007777  00                 	db	0
   686  007778  41                 	db	65
   687  007779  7F                 	db	127
   688  00777A  49                 	db	73
   689  00777B  09                 	db	9
   690  00777C  09                 	db	9
   691  00777D  09                 	db	9
   692  00777E  06                 	db	6
   693  00777F  00                 	db	0
   694  007780  0C                 	db	12
   695  007781  12                 	db	18
   696  007782  21                 	db	33
   697  007783  21                 	db	33
   698  007784  61                 	db	97
   699  007785  52                 	db	82
   700  007786  4C                 	db	76
   701  007787  00                 	db	0
   702  007788  41                 	db	65
   703  007789  7F                 	db	127
   704  00778A  09                 	db	9
   705  00778B  09                 	db	9
   706  00778C  19                 	db	25
   707  00778D  69                 	db	105
   708  00778E  46                 	db	70
   709  00778F  00                 	db	0
   710  007790  66                 	db	102
   711  007791  49                 	db	73
   712  007792  49                 	db	73
   713  007793  49                 	db	73
   714  007794  49                 	db	73
   715  007795  49                 	db	73
   716  007796  33                 	db	51
   717  007797  00                 	db	0
   718  007798  03                 	db	3
   719  007799  01                 	db	1
   720  00779A  41                 	db	65
   721  00779B  7F                 	db	127
   722  00779C  41                 	db	65
   723  00779D  01                 	db	1
   724  00779E  03                 	db	3
   725  00779F  00                 	db	0
   726  0077A0  01                 	db	1
   727  0077A1  3F                 	db	63
   728  0077A2  41                 	db	65
   729  0077A3  40                 	db	64
   730  0077A4  41                 	db	65
   731  0077A5  3F                 	db	63
   732  0077A6  01                 	db	1
   733  0077A7  00                 	db	0
   734  0077A8  01                 	db	1
   735  0077A9  0F                 	db	15
   736  0077AA  31                 	db	49
   737  0077AB  40                 	db	64
   738  0077AC  31                 	db	49
   739  0077AD  0F                 	db	15
   740  0077AE  01                 	db	1
   741  0077AF  00                 	db	0
   742  0077B0  01                 	db	1
   743  0077B1  1F                 	db	31
   744  0077B2  61                 	db	97
   745  0077B3  14                 	db	20
   746  0077B4  61                 	db	97
   747  0077B5  1F                 	db	31
   748  0077B6  01                 	db	1
   749  0077B7  00                 	db	0
   750  0077B8  41                 	db	65
   751  0077B9  41                 	db	65
   752  0077BA  36                 	db	54
   753  0077BB  08                 	db	8
   754  0077BC  36                 	db	54
   755  0077BD  41                 	db	65
   756  0077BE  41                 	db	65
   757  0077BF  00                 	db	0
   758  0077C0  01                 	db	1
   759  0077C1  03                 	db	3
   760  0077C2  44                 	db	68
   761  0077C3  78                 	db	120
   762  0077C4  44                 	db	68
   763  0077C5  03                 	db	3
   764  0077C6  01                 	db	1
   765  0077C7  00                 	db	0
   766  0077C8  43                 	db	67
   767  0077C9  61                 	db	97
   768  0077CA  51                 	db	81
   769  0077CB  49                 	db	73
   770  0077CC  45                 	db	69
   771  0077CD  43                 	db	67
   772  0077CE  61                 	db	97
   773  0077CF  00                 	db	0
   774  0077D0  00                 	db	0
   775  0077D1  00                 	db	0
   776  0077D2  7F                 	db	127
   777  0077D3  41                 	db	65
   778  0077D4  41                 	db	65
   779  0077D5  00                 	db	0
   780  0077D6  00                 	db	0
   781  0077D7  00                 	db	0
   782  0077D8  01                 	db	1
   783  0077D9  02                 	db	2
   784  0077DA  04                 	db	4
   785  0077DB  08                 	db	8
   786  0077DC  10                 	db	16
   787  0077DD  20                 	db	32
   788  0077DE  40                 	db	64
   789  0077DF  00                 	db	0
   790  0077E0  00                 	db	0
   791  0077E1  00                 	db	0
   792  0077E2  41                 	db	65
   793  0077E3  41                 	db	65
   794  0077E4  7F                 	db	127
   795  0077E5  00                 	db	0
   796  0077E6  00                 	db	0
   797  0077E7  00                 	db	0
   798  0077E8  00                 	db	0
   799  0077E9  04                 	db	4
   800  0077EA  02                 	db	2
   801  0077EB  01                 	db	1
   802  0077EC  01                 	db	1
   803  0077ED  02                 	db	2
   804  0077EE  04                 	db	4
   805  0077EF  00                 	db	0
   806  0077F0  00                 	db	0
   807  0077F1  40                 	db	64
   808  0077F2  40                 	db	64
   809  0077F3  40                 	db	64
   810  0077F4  40                 	db	64
   811  0077F5  40                 	db	64
   812  0077F6  40                 	db	64
   813  0077F7  00                 	db	0
   814  0077F8  00                 	db	0
   815  0077F9  01                 	db	1
   816  0077FA  02                 	db	2
   817  0077FB  00                 	db	0
   818  0077FC  00                 	db	0
   819  0077FD  00                 	db	0
   820  0077FE  00                 	db	0
   821  0077FF  00                 	db	0
   822  007800  00                 	db	0
   823  007801  34                 	db	52
   824  007802  4A                 	db	74
   825  007803  4A                 	db	74
   826  007804  4A                 	db	74
   827  007805  3C                 	db	60
   828  007806  40                 	db	64
   829  007807  00                 	db	0
   830  007808  00                 	db	0
   831  007809  41                 	db	65
   832  00780A  3F                 	db	63
   833  00780B  48                 	db	72
   834  00780C  48                 	db	72
   835  00780D  48                 	db	72
   836  00780E  30                 	db	48
   837  00780F  00                 	db	0
   838  007810  00                 	db	0
   839  007811  3C                 	db	60
   840  007812  42                 	db	66
   841  007813  42                 	db	66
   842  007814  42                 	db	66
   843  007815  24                 	db	36
   844  007816  00                 	db	0
   845  007817  00                 	db	0
   846  007818  00                 	db	0
   847  007819  30                 	db	48
   848  00781A  48                 	db	72
   849  00781B  48                 	db	72
   850  00781C  49                 	db	73
   851  00781D  3F                 	db	63
   852  00781E  40                 	db	64
   853  00781F  00                 	db	0
   854  007820  00                 	db	0
   855  007821  3C                 	db	60
   856  007822  4A                 	db	74
   857  007823  4A                 	db	74
   858  007824  4A                 	db	74
   859  007825  2C                 	db	44
   860  007826  00                 	db	0
   861  007827  00                 	db	0
   862  007828  00                 	db	0
   863  007829  00                 	db	0
   864  00782A  48                 	db	72
   865  00782B  7E                 	db	126
   866  00782C  49                 	db	73
   867  00782D  09                 	db	9
   868  00782E  00                 	db	0
   869  00782F  00                 	db	0
   870  007830  00                 	db	0
   871  007831  26                 	db	38
   872  007832  49                 	db	73
   873  007833  49                 	db	73
   874  007834  49                 	db	73
   875  007835  3F                 	db	63
   876  007836  01                 	db	1
   877  007837  00                 	db	0
   878  007838  41                 	db	65
   879  007839  7F                 	db	127
   880  00783A  48                 	db	72
   881  00783B  04                 	db	4
   882  00783C  44                 	db	68
   883  00783D  78                 	db	120
   884  00783E  40                 	db	64
   885  00783F  00                 	db	0
   886  007840  00                 	db	0
   887  007841  00                 	db	0
   888  007842  44                 	db	68
   889  007843  7D                 	db	125
   890  007844  40                 	db	64
   891  007845  00                 	db	0
   892  007846  00                 	db	0
   893  007847  00                 	db	0
   894  007848  00                 	db	0
   895  007849  00                 	db	0
   896  00784A  40                 	db	64
   897  00784B  44                 	db	68
   898  00784C  3D                 	db	61
   899  00784D  00                 	db	0
   900  00784E  00                 	db	0
   901  00784F  00                 	db	0
   902  007850  41                 	db	65
   903  007851  7F                 	db	127
   904  007852  10                 	db	16
   905  007853  18                 	db	24
   906  007854  24                 	db	36
   907  007855  42                 	db	66
   908  007856  42                 	db	66
   909  007857  00                 	db	0
   910  007858  00                 	db	0
   911  007859  40                 	db	64
   912  00785A  41                 	db	65
   913  00785B  7F                 	db	127
   914  00785C  40                 	db	64
   915  00785D  40                 	db	64
   916  00785E  00                 	db	0
   917  00785F  00                 	db	0
   918  007860  42                 	db	66
   919  007861  7E                 	db	126
   920  007862  02                 	db	2
   921  007863  7C                 	db	124
   922  007864  02                 	db	2
   923  007865  7E                 	db	126
   924  007866  40                 	db	64
   925  007867  00                 	db	0
   926  007868  42                 	db	66
   927  007869  7E                 	db	126
   928  00786A  44                 	db	68
   929  00786B  02                 	db	2
   930  00786C  42                 	db	66
   931  00786D  7C                 	db	124
   932  00786E  40                 	db	64
   933  00786F  00                 	db	0
   934  007870  00                 	db	0
   935  007871  3C                 	db	60
   936  007872  42                 	db	66
   937  007873  42                 	db	66
   938  007874  42                 	db	66
   939  007875  3C                 	db	60
   940  007876  00                 	db	0
   941  007877  00                 	db	0
   942  007878  00                 	db	0
   943  007879  41                 	db	65
   944  00787A  7F                 	db	127
   945  00787B  49                 	db	73
   946  00787C  09                 	db	9
   947  00787D  09                 	db	9
   948  00787E  06                 	db	6
   949  00787F  00                 	db	0
   950  007880  00                 	db	0
   951  007881  06                 	db	6
   952  007882  09                 	db	9
   953  007883  09                 	db	9
   954  007884  49                 	db	73
   955  007885  7F                 	db	127
   956  007886  41                 	db	65
   957  007887  00                 	db	0
   958  007888  00                 	db	0
   959  007889  42                 	db	66
   960  00788A  7E                 	db	126
   961  00788B  44                 	db	68
   962  00788C  02                 	db	2
   963  00788D  02                 	db	2
   964  00788E  04                 	db	4
   965  00788F  00                 	db	0
   966  007890  00                 	db	0
   967  007891  64                 	db	100
   968  007892  4A                 	db	74
   969  007893  4A                 	db	74
   970  007894  4A                 	db	74
   971  007895  36                 	db	54
   972  007896  00                 	db	0
   973  007897  00                 	db	0
   974  007898  00                 	db	0
   975  007899  04                 	db	4
   976  00789A  3F                 	db	63
   977  00789B  44                 	db	68
   978  00789C  44                 	db	68
   979  00789D  20                 	db	32
   980  00789E  00                 	db	0
   981  00789F  00                 	db	0
   982  0078A0  00                 	db	0
   983  0078A1  02                 	db	2
   984  0078A2  3E                 	db	62
   985  0078A3  40                 	db	64
   986  0078A4  40                 	db	64
   987  0078A5  22                 	db	34
   988  0078A6  7E                 	db	126
   989  0078A7  40                 	db	64
   990  0078A8  02                 	db	2
   991  0078A9  0E                 	db	14
   992  0078AA  32                 	db	50
   993  0078AB  40                 	db	64
   994  0078AC  32                 	db	50
   995  0078AD  0E                 	db	14
   996  0078AE  02                 	db	2
   997  0078AF  00                 	db	0
   998  0078B0  02                 	db	2
   999  0078B1  1E                 	db	30
  1000  0078B2  62                 	db	98
  1001  0078B3  18                 	db	24
  1002  0078B4  62                 	db	98
  1003  0078B5  1E                 	db	30
  1004  0078B6  02                 	db	2
  1005  0078B7  00                 	db	0
  1006  0078B8  42                 	db	66
  1007  0078B9  62                 	db	98
  1008  0078BA  14                 	db	20
  1009  0078BB  08                 	db	8
  1010  0078BC  14                 	db	20
  1011  0078BD  62                 	db	98
  1012  0078BE  42                 	db	66
  1013  0078BF  00                 	db	0
  1014  0078C0  01                 	db	1
  1015  0078C1  43                 	db	67
  1016  0078C2  45                 	db	69
  1017  0078C3  38                 	db	56
  1018  0078C4  05                 	db	5
  1019  0078C5  03                 	db	3
  1020  0078C6  01                 	db	1
  1021  0078C7  00                 	db	0
  1022  0078C8  00                 	db	0
  1023  0078C9  46                 	db	70
  1024  0078CA  62                 	db	98
  1025  0078CB  52                 	db	82
  1026  0078CC  4A                 	db	74
  1027  0078CD  46                 	db	70
  1028  0078CE  62                 	db	98
  1029  0078CF  00                 	db	0
  1030  0078D0  00                 	db	0
  1031  0078D1  00                 	db	0
  1032  0078D2  08                 	db	8
  1033  0078D3  36                 	db	54
  1034  0078D4  41                 	db	65
  1035  0078D5  00                 	db	0
  1036  0078D6  00                 	db	0
  1037  0078D7  00                 	db	0
  1038  0078D8  00                 	db	0
  1039  0078D9  00                 	db	0
  1040  0078DA  00                 	db	0
  1041  0078DB  7F                 	db	127
  1042  0078DC  00                 	db	0
  1043  0078DD  00                 	db	0
  1044  0078DE  00                 	db	0
  1045  0078DF  00                 	db	0
  1046  0078E0  00                 	db	0
  1047  0078E1  00                 	db	0
  1048  0078E2  00                 	db	0
  1049  0078E3  41                 	db	65
  1050  0078E4  36                 	db	54
  1051  0078E5  08                 	db	8
  1052  0078E6  00                 	db	0
  1053  0078E7  00                 	db	0
  1054  0078E8  00                 	db	0
  1055  0078E9  18                 	db	24
  1056  0078EA  08                 	db	8
  1057  0078EB  08                 	db	8
  1058  0078EC  10                 	db	16
  1059  0078ED  10                 	db	16
  1060  0078EE  18                 	db	24
  1061  0078EF  00                 	db	0
  1062  0078F0  AA                 	db	170
  1063  0078F1  55                 	db	85
  1064  0078F2  AA                 	db	170
  1065  0078F3  55                 	db	85
  1066  0078F4  AA                 	db	170
  1067  0078F5  55                 	db	85
  1068  0078F6  AA                 	db	170
  1069  0078F7  55                 	db	85
  1070  0078F8                     __end_of_OledFont0:
  1071                           	opt stack 0
  1072  0078F8                     _configDescriptor1:
  1073                           	opt stack 0
  1074  0078F8  09                 	db	9
  1075  0078F9  02                 	db	2
  1076  0078FA  43                 	db	67
  1077  0078FB  00                 	db	0
  1078  0078FC  02                 	db	2
  1079  0078FD  01                 	db	1
  1080  0078FE  00                 	db	0
  1081  0078FF  C0                 	db	192
  1082  007900  32                 	db	50
  1083  007901  09                 	db	9
  1084  007902  04                 	db	4
  1085  007903  00                 	db	0
  1086  007904  00                 	db	0
  1087  007905  01                 	db	1
  1088  007906  02                 	db	2
  1089  007907  02                 	db	2
  1090  007908  01                 	db	1
  1091  007909  00                 	db	0
  1092  00790A  05                 	db	5
  1093  00790B  24                 	db	36
  1094  00790C  00                 	db	0
  1095  00790D  10                 	db	16
  1096  00790E  01                 	db	1
  1097  00790F  04                 	db	4
  1098  007910  24                 	db	36
  1099  007911  02                 	db	2
  1100  007912  02                 	db	2
  1101  007913  05                 	db	5
  1102  007914  24                 	db	36
  1103  007915  06                 	db	6
  1104  007916  00                 	db	0
  1105  007917  01                 	db	1
  1106  007918  05                 	db	5
  1107  007919  24                 	db	36
  1108  00791A  01                 	db	1
  1109  00791B  00                 	db	0
  1110  00791C  01                 	db	1
  1111  00791D  07                 	db	7
  1112  00791E  05                 	db	5
  1113  00791F  81                 	db	129
  1114  007920  03                 	db	3
  1115  007921  08                 	db	8
  1116  007922  00                 	db	0
  1117  007923  02                 	db	2
  1118  007924  09                 	db	9
  1119  007925  04                 	db	4
  1120  007926  01                 	db	1
  1121  007927  00                 	db	0
  1122  007928  02                 	db	2
  1123  007929  0A                 	db	10
  1124  00792A  00                 	db	0
  1125  00792B  00                 	db	0
  1126  00792C  00                 	db	0
  1127  00792D  07                 	db	7
  1128  00792E  05                 	db	5
  1129  00792F  02                 	db	2
  1130  007930  02                 	db	2
  1131  007931  40                 	db	64
  1132  007932  00                 	db	0
  1133  007933  00                 	db	0
  1134  007934  07                 	db	7
  1135  007935  05                 	db	5
  1136  007936  82                 	db	130
  1137  007937  02                 	db	2
  1138  007938  40                 	db	64
  1139  007939  00                 	db	0
  1140  00793A  00                 	db	0
  1141  00793B                     __end_of_configDescriptor1:
  1142                           	opt stack 0
  1143  00793B                     _sd002:
  1144                           	opt stack 0
  1145  00793B  34                 	db	52
  1146  00793C  03                 	db	3
  1147  00793D  0043               	dw	67
  1148  00793F  0044               	dw	68
  1149  007941  0043               	dw	67
  1150  007943  0020               	dw	32
  1151  007945  0052               	dw	82
  1152  007947  0053               	dw	83
  1153  007949  002D               	dw	45
  1154  00794B  0032               	dw	50
  1155  00794D  0033               	dw	51
  1156  00794F  0032               	dw	50
  1157  007951  0020               	dw	32
  1158  007953  0045               	dw	69
  1159  007955  006D               	dw	109
  1160  007957  0075               	dw	117
  1161  007959  006C               	dw	108
  1162  00795B  0061               	dw	97
  1163  00795D  0074               	dw	116
  1164  00795F  0069               	dw	105
  1165  007961  006F               	dw	111
  1166  007963  006E               	dw	110
  1167  007965  0020               	dw	32
  1168  007967  0044               	dw	68
  1169  007969  0065               	dw	101
  1170  00796B  006D               	dw	109
  1171  00796D  006F               	dw	111
  1172  00796F                     __end_of_sd002:
  1173                           	opt stack 0
  1174  00796F                     _sd001:
  1175                           	opt stack 0
  1176  00796F  34                 	db	52
  1177  007970  03                 	db	3
  1178  007971  004D               	dw	77
  1179  007973  0069               	dw	105
  1180  007975  0063               	dw	99
  1181  007977  0072               	dw	114
  1182  007979  006F               	dw	111
  1183  00797B  0063               	dw	99
  1184  00797D  0068               	dw	104
  1185  00797F  0069               	dw	105
  1186  007981  0070               	dw	112
  1187  007983  0020               	dw	32
  1188  007985  0054               	dw	84
  1189  007987  0065               	dw	101
  1190  007989  0063               	dw	99
  1191  00798B  0068               	dw	104
  1192  00798D  006E               	dw	110
  1193  00798F  006F               	dw	111
  1194  007991  006C               	dw	108
  1195  007993  006F               	dw	111
  1196  007995  0067               	dw	103
  1197  007997  0079               	dw	121
  1198  007999  0020               	dw	32
  1199  00799B  0049               	dw	73
  1200  00799D  006E               	dw	110
  1201  00799F  0063               	dw	99
  1202  0079A1  002E               	dw	46
  1203  0079A3                     __end_of_sd001:
  1204                           	opt stack 0
  1205  0079A3                     _device_dsc:
  1206                           	opt stack 0
  1207  0079A3  12                 	db	18
  1208  0079A4  01                 	db	1
  1209  0079A5  0200               	dw	512
  1210  0079A7  02                 	db	2
  1211  0079A8  00                 	db	0
  1212  0079A9  00                 	db	0
  1213  0079AA  08                 	db	8
  1214  0079AB  04D8               	dw	1240
  1215  0079AD  000A               	dw	10
  1216  0079AF  0100               	dw	256
  1217  0079B1  01                 	db	1
  1218  0079B2  02                 	db	2
  1219  0079B3  00                 	db	0
  1220  0079B4  01                 	db	1
  1221  0079B5                     __end_of_device_dsc:
  1222                           	opt stack 0
  1223  0079B5                     _sd000:
  1224                           	opt stack 0
  1225  0079B5  04                 	db	4
  1226  0079B6  03                 	db	3
  1227  0079B7  0409               	dw	1033
  1228  0079B9                     __end_of_sd000:
  1229                           	opt stack 0
  1230  0000                     _ANSELCbits	set	3933
  1231  0000                     _ANSELAbits	set	3931
  1232  0000                     _TMR3	set	4018
  1233  0000                     _TMR0	set	4054
  1234  0000                     _UEP0bits	set	3946
  1235  0000                     _IPR3bits	set	4005
  1236  0000                     _RCONbits	set	4048
  1237  0000                     _UCON	set	3936
  1238  0000                     _USTAT	set	3937
  1239  0000                     _PIR3bits	set	4004
  1240  0000                     _UIEbits	set	3940
  1241  0000                     _UIRbits	set	3941
  1242  0000                     _UADDR	set	3939
  1243  0000                     _UIE	set	3940
  1244  0000                     _UEIE	set	3942
  1245  0000                     _UCFG	set	3938
  1246  0000                     _UIR	set	3941
  1247  0000                     _UEIR	set	3943
  1248  0000                     _PIE3bits	set	4003
  1249  0000                     _T0CONbits	set	4053
  1250  0000                     _T3GCONbits	set	4020
  1251  0000                     _T3CONbits	set	4017
  1252  0000                     _T3GCON	set	4020
  1253  0000                     _T3CON	set	4017
  1254  0000                     _T2CONbits	set	4026
  1255  0000                     _TMR2	set	4028
  1256  0000                     _PR2	set	4027
  1257  0000                     _T2CON	set	4026
  1258  0000                     _VREFCON0bits	set	3965
  1259  0000                     _CM1CON0bits	set	3992
  1260  0000                     _CM2CON1bits	set	3994
  1261  0000                     _CM1CON0	set	3992
  1262  0000                     _EEDATA	set	4008
  1263  0000                     _EEADR	set	4009
  1264  0000                     _EECON2	set	4007
  1265  0000                     _EECON1bits	set	4006
  1266  0000                     _TABLAT	set	4085
  1267  0000                     _TBLPTRL	set	4086
  1268  0000                     _TBLPTRH	set	4087
  1269  0000                     _TBLPTRU	set	4088
  1270  0000                     _TRISD	set	3989
  1271  0000                     _IOCBbits	set	3974
  1272  0000                     _INTCON2bits	set	4081
  1273  0000                     _TRISAbits	set	3986
  1274  0000                     _T1GCONbits	set	4044
  1275  0000                     _T1CONbits	set	4045
  1276  0000                     _TMR1L	set	4046
  1277  0000                     _TMR1H	set	4047
  1278  0000                     _T1GCON	set	4044
  1279  0000                     _T1CON	set	4045
  1280  0000                     _SSP1STATbits	set	4039
  1281  0000                     _SSPBUF	set	4041
  1282  0000                     _SSP1CON1bits	set	4038
  1283  0000                     _SSP1ADD	set	4040
  1284  0000                     _SSP1CON1	set	4038
  1285  0000                     _SSP1STAT	set	4039
  1286  0000                     _ADRESH	set	4036
  1287  0000                     _ADRESL	set	4035
  1288  0000                     _ADCON2	set	4032
  1289  0000                     _ADCON1	set	4033
  1290  0000                     _ADCON0	set	4034
  1291  0000                     _VREFCON0	set	3965
  1292  0000                     _ACTCON	set	4021
  1293  0000                     _OSCCON2bits	set	4050
  1294  0000                     _OSCCON2	set	4050
  1295  0000                     _OSCCON	set	4051
  1296  0000                     _OSCTUNE	set	3995
  1297  0000                     _PIR1bits	set	3998
  1298  0000                     _RCREG	set	4014
  1299  0000                     _RCSTAbits	set	4011
  1300  0000                     _TXSTA	set	4012
  1301  0000                     _RCSTA	set	4011
  1302  0000                     _BAUDCON	set	4024
  1303  0000                     _PORTB	set	3969
  1304  0000                     _LATD	set	3980
  1305  0000                     _TRISCbits	set	3988
  1306  0000                     _TRISBbits	set	3987
  1307  0000                     _TRISEbits	set	3990
  1308  0000                     _SPBRGH	set	4016
  1309  0000                     _SPBRG	set	4015
  1310  0000                     _UCONbits	set	3936
  1311  0000                     _TMR3L	set	4018
  1312  0000                     _TMR3H	set	4019
  1313  0000                     _PIR2bits	set	4001
  1314  0000                     _WDTCONbits	set	4049
  1315  0000                     _PORTCbits	set	3970
  1316  0000                     _IOCCbits	set	3975
  1317  0000                     _INTCON3bits	set	4080
  1318  0000                     _PIE2bits	set	4000
  1319  0000                     _LATEbits	set	3981
  1320  0000                     _INTCONbits	set	4082
  1321  0000                     _ADCON0bits	set	4034
  1322  0000                     _PORTAbits	set	3968
  1323  0000                     _PIE1bits	set	3997
  1324  0000                     _TXREG	set	4013
  1325  0000                     _LATCbits	set	3979
  1326  0000                     _TXSTAbits	set	4012
  1327  0000                     _LATAbits	set	3977
  1328  0000                     _PORTBbits	set	3969
  1329  0000                     _LATBbits	set	3978
  1330  0000                     _UEP1	set	3947
  1331  0000                     _UEP0	set	3946
  1332  0000                     _CKE	set	32318
  1333  0000                     _CKP	set	32308
  1334  0000                     _GIE	set	32663
  1335  0000                     _PEIE	set	32662
  1336  0079B9                     STR_187:
  1337  0079B9  73                 	db	115	;'s'
  1338  0079BA  79                 	db	121	;'y'
  1339  0079BB  73                 	db	115	;'s'
  1340  0079BC  20                 	db	32
  1341  0079BD  73                 	db	115	;'s'
  1342  0079BE  65                 	db	101	;'e'
  1343  0079BF  74                 	db	116	;'t'
  1344  0079C0  20                 	db	32
  1345  0079C1  70                 	db	112	;'p'
  1346  0079C2  69                 	db	105	;'i'
  1347  0079C3  6E                 	db	110	;'n'
  1348  0079C4  6D                 	db	109	;'m'
  1349  0079C5  6F                 	db	111	;'o'
  1350  0079C6  64                 	db	100	;'d'
  1351  0079C7  65                 	db	101	;'e'
  1352  0079C8  20                 	db	32
  1353  0079C9  47                 	db	71	;'G'
  1354  0079CA  50                 	db	80	;'P'
  1355  0079CB  49                 	db	73	;'I'
  1356  0079CC  4F                 	db	79	;'O'
  1357  0079CD  31                 	db	49	;'1'
  1358  0079CE  32                 	db	50	;'2'
  1359  0079CF  20                 	db	32
  1360  0079D0  61                 	db	97	;'a'
  1361  0079D1  6E                 	db	110	;'n'
  1362  0079D2  61                 	db	97	;'a'
  1363  0079D3  00                 	db	0
  1364  0079D4                     STR_186:
  1365  0079D4  73                 	db	115	;'s'
  1366  0079D5  79                 	db	121	;'y'
  1367  0079D6  73                 	db	115	;'s'
  1368  0079D7  20                 	db	32
  1369  0079D8  73                 	db	115	;'s'
  1370  0079D9  65                 	db	101	;'e'
  1371  0079DA  74                 	db	116	;'t'
  1372  0079DB  20                 	db	32
  1373  0079DC  70                 	db	112	;'p'
  1374  0079DD  69                 	db	105	;'i'
  1375  0079DE  6E                 	db	110	;'n'
  1376  0079DF  6D                 	db	109	;'m'
  1377  0079E0  6F                 	db	111	;'o'
  1378  0079E1  64                 	db	100	;'d'
  1379  0079E2  65                 	db	101	;'e'
  1380  0079E3  20                 	db	32
  1381  0079E4  47                 	db	71	;'G'
  1382  0079E5  50                 	db	80	;'P'
  1383  0079E6  49                 	db	73	;'I'
  1384  0079E7  4F                 	db	79	;'O'
  1385  0079E8  31                 	db	49	;'1'
  1386  0079E9  33                 	db	51	;'3'
  1387  0079EA  20                 	db	32
  1388  0079EB  61                 	db	97	;'a'
  1389  0079EC  6E                 	db	110	;'n'
  1390  0079ED  61                 	db	97	;'a'
  1391  0079EE  00                 	db	0
  1392  0079EF                     STR_180:
  1393  0079EF  73                 	db	115	;'s'
  1394  0079F0  79                 	db	121	;'y'
  1395  0079F1  73                 	db	115	;'s'
  1396  0079F2  20                 	db	32
  1397  0079F3  73                 	db	115	;'s'
  1398  0079F4  65                 	db	101	;'e'
  1399  0079F5  74                 	db	116	;'t'
  1400  0079F6  20                 	db	32
  1401  0079F7  70                 	db	112	;'p'
  1402  0079F8  69                 	db	105	;'i'
  1403  0079F9  6E                 	db	110	;'n'
  1404  0079FA  64                 	db	100	;'d'
  1405  0079FB  69                 	db	105	;'i'
  1406  0079FC  67                 	db	103	;'g'
  1407  0079FD  20                 	db	32
  1408  0079FE  47                 	db	71	;'G'
  1409  0079FF  50                 	db	80	;'P'
  1410  007A00  49                 	db	73	;'I'
  1411  007A01  4F                 	db	79	;'O'
  1412  007A02  31                 	db	49	;'1'
  1413  007A03  30                 	db	48	;'0'
  1414  007A04  20                 	db	32
  1415  007A05  30                 	db	48	;'0'
  1416  007A06  0D                 	db	13
  1417  007A07  0A                 	db	10
  1418  007A08  00                 	db	0
  1419  007A09                     STR_181:
  1420  007A09  73                 	db	115	;'s'
  1421  007A0A  79                 	db	121	;'y'
  1422  007A0B  73                 	db	115	;'s'
  1423  007A0C  20                 	db	32
  1424  007A0D  73                 	db	115	;'s'
  1425  007A0E  65                 	db	101	;'e'
  1426  007A0F  74                 	db	116	;'t'
  1427  007A10  20                 	db	32
  1428  007A11  70                 	db	112	;'p'
  1429  007A12  69                 	db	105	;'i'
  1430  007A13  6E                 	db	110	;'n'
  1431  007A14  64                 	db	100	;'d'
  1432  007A15  69                 	db	105	;'i'
  1433  007A16  67                 	db	103	;'g'
  1434  007A17  20                 	db	32
  1435  007A18  47                 	db	71	;'G'
  1436  007A19  50                 	db	80	;'P'
  1437  007A1A  49                 	db	73	;'I'
  1438  007A1B  4F                 	db	79	;'O'
  1439  007A1C  31                 	db	49	;'1'
  1440  007A1D  31                 	db	49	;'1'
  1441  007A1E  20                 	db	32
  1442  007A1F  30                 	db	48	;'0'
  1443  007A20  0D                 	db	13
  1444  007A21  0A                 	db	10
  1445  007A22  00                 	db	0
  1446  007A23                     STR_178:
  1447  007A23  73                 	db	115	;'s'
  1448  007A24  79                 	db	121	;'y'
  1449  007A25  73                 	db	115	;'s'
  1450  007A26  20                 	db	32
  1451  007A27  73                 	db	115	;'s'
  1452  007A28  65                 	db	101	;'e'
  1453  007A29  74                 	db	116	;'t'
  1454  007A2A  20                 	db	32
  1455  007A2B  70                 	db	112	;'p'
  1456  007A2C  69                 	db	105	;'i'
  1457  007A2D  6E                 	db	110	;'n'
  1458  007A2E  64                 	db	100	;'d'
  1459  007A2F  69                 	db	105	;'i'
  1460  007A30  67                 	db	103	;'g'
  1461  007A31  20                 	db	32
  1462  007A32  47                 	db	71	;'G'
  1463  007A33  50                 	db	80	;'P'
  1464  007A34  49                 	db	73	;'I'
  1465  007A35  4F                 	db	79	;'O'
  1466  007A36  31                 	db	49	;'1'
  1467  007A37  30                 	db	48	;'0'
  1468  007A38  20                 	db	32
  1469  007A39  31                 	db	49	;'1'
  1470  007A3A  0D                 	db	13
  1471  007A3B  0A                 	db	10
  1472  007A3C  00                 	db	0
  1473  007A3D                     STR_179:
  1474  007A3D  73                 	db	115	;'s'
  1475  007A3E  79                 	db	121	;'y'
  1476  007A3F  73                 	db	115	;'s'
  1477  007A40  20                 	db	32
  1478  007A41  73                 	db	115	;'s'
  1479  007A42  65                 	db	101	;'e'
  1480  007A43  74                 	db	116	;'t'
  1481  007A44  20                 	db	32
  1482  007A45  70                 	db	112	;'p'
  1483  007A46  69                 	db	105	;'i'
  1484  007A47  6E                 	db	110	;'n'
  1485  007A48  64                 	db	100	;'d'
  1486  007A49  69                 	db	105	;'i'
  1487  007A4A  67                 	db	103	;'g'
  1488  007A4B  20                 	db	32
  1489  007A4C  47                 	db	71	;'G'
  1490  007A4D  50                 	db	80	;'P'
  1491  007A4E  49                 	db	73	;'I'
  1492  007A4F  4F                 	db	79	;'O'
  1493  007A50  31                 	db	49	;'1'
  1494  007A51  31                 	db	49	;'1'
  1495  007A52  20                 	db	32
  1496  007A53  31                 	db	49	;'1'
  1497  007A54  0D                 	db	13
  1498  007A55  0A                 	db	10
  1499  007A56  00                 	db	0
  1500  007A57                     STR_188:
  1501  007A57  73                 	db	115	;'s'
  1502  007A58  79                 	db	121	;'y'
  1503  007A59  73                 	db	115	;'s'
  1504  007A5A  20                 	db	32
  1505  007A5B  67                 	db	103	;'g'
  1506  007A5C  65                 	db	101	;'e'
  1507  007A5D  74                 	db	116	;'t'
  1508  007A5E  20                 	db	32
  1509  007A5F  70                 	db	112	;'p'
  1510  007A60  69                 	db	105	;'i'
  1511  007A61  6E                 	db	110	;'n'
  1512  007A62  61                 	db	97	;'a'
  1513  007A63  6E                 	db	110	;'n'
  1514  007A64  61                 	db	97	;'a'
  1515  007A65  20                 	db	32
  1516  007A66  47                 	db	71	;'G'
  1517  007A67  50                 	db	80	;'P'
  1518  007A68  49                 	db	73	;'I'
  1519  007A69  4F                 	db	79	;'O'
  1520  007A6A  31                 	db	49	;'1'
  1521  007A6B  32                 	db	50	;'2'
  1522  007A6C  00                 	db	0
  1523  007A6D                     STR_189:
  1524  007A6D  73                 	db	115	;'s'
  1525  007A6E  79                 	db	121	;'y'
  1526  007A6F  73                 	db	115	;'s'
  1527  007A70  20                 	db	32
  1528  007A71  67                 	db	103	;'g'
  1529  007A72  65                 	db	101	;'e'
  1530  007A73  74                 	db	116	;'t'
  1531  007A74  20                 	db	32
  1532  007A75  70                 	db	112	;'p'
  1533  007A76  69                 	db	105	;'i'
  1534  007A77  6E                 	db	110	;'n'
  1535  007A78  61                 	db	97	;'a'
  1536  007A79  6E                 	db	110	;'n'
  1537  007A7A  61                 	db	97	;'a'
  1538  007A7B  20                 	db	32
  1539  007A7C  47                 	db	71	;'G'
  1540  007A7D  50                 	db	80	;'P'
  1541  007A7E  49                 	db	73	;'I'
  1542  007A7F  4F                 	db	79	;'O'
  1543  007A80  31                 	db	49	;'1'
  1544  007A81  33                 	db	51	;'3'
  1545  007A82  00                 	db	0
  1546  007A83                     STR_22:
  1547  007A83  73                 	db	115	;'s'
  1548  007A84  79                 	db	121	;'y'
  1549  007A85  73                 	db	115	;'s'
  1550  007A86  20                 	db	32
  1551  007A87  73                 	db	115	;'s'
  1552  007A88  6C                 	db	108	;'l'
  1553  007A89  65                 	db	101	;'e'
  1554  007A8A  65                 	db	101	;'e'
  1555  007A8B  70                 	db	112	;'p'
  1556  007A8C  20                 	db	32
  1557  007A8D  39                 	db	57	;'9'
  1558  007A8E  39                 	db	57	;'9'
  1559  007A8F  39                 	db	57	;'9'
  1560  007A90  39                 	db	57	;'9'
  1561  007A91  39                 	db	57	;'9'
  1562  007A92  39                 	db	57	;'9'
  1563  007A93  39                 	db	57	;'9'
  1564  007A94  39                 	db	57	;'9'
  1565  007A95  39                 	db	57	;'9'
  1566  007A96  00                 	db	0
  1567  007A97                     STR_99:
  1568  007A97  4D                 	db	77	;'M'
  1569  007A98  61                 	db	97	;'a'
  1570  007A99  63                 	db	99	;'c'
  1571  007A9A  20                 	db	32
  1572  007A9B  45                 	db	69	;'E'
  1573  007A9C  72                 	db	114	;'r'
  1574  007A9D  72                 	db	114	;'r'
  1575  007A9E  6F                 	db	111	;'o'
  1576  007A9F  72                 	db	114	;'r'
  1577  007AA0  20                 	db	32
  1578  007AA1  4F                 	db	79	;'O'
  1579  007AA2  63                 	db	99	;'c'
  1580  007AA3  63                 	db	99	;'c'
  1581  007AA4  75                 	db	117	;'u'
  1582  007AA5  72                 	db	114	;'r'
  1583  007AA6  72                 	db	114	;'r'
  1584  007AA7  65                 	db	101	;'e'
  1585  007AA8  64                 	db	100	;'d'
  1586  007AA9  00                 	db	0
  1587  007AAA                     STR_84:
  1588  007AAA  28                 	db	40
  1589  007AAB  55                 	db	85	;'U'
  1590  007AAC  4E                 	db	78	;'N'
  1591  007AAD  43                 	db	67	;'C'
  1592  007AAE  4E                 	db	78	;'N'
  1593  007AAF  46                 	db	70	;'F'
  1594  007AB0  29                 	db	41
  1595  007AB1  20                 	db	32
  1596  007AB2  20                 	db	32
  1597  007AB3  20                 	db	32
  1598  007AB4  20                 	db	32
  1599  007AB5  28                 	db	40
  1600  007AB6  43                 	db	67	;'C'
  1601  007AB7  4E                 	db	78	;'N'
  1602  007AB8  46                 	db	70	;'F'
  1603  007AB9  29                 	db	41
  1604  007ABA  20                 	db	32
  1605  007ABB  00                 	db	0
  1606  007ABC                     STR_40:
  1607  007ABC  20                 	db	32
  1608  007ABD  20                 	db	32
  1609  007ABE  28                 	db	40
  1610  007ABF  53                 	db	83	;'S'
  1611  007AC0  32                 	db	50	;'2'
  1612  007AC1  29                 	db	41
  1613  007AC2  20                 	db	32
  1614  007AC3  20                 	db	32
  1615  007AC4  20                 	db	32
  1616  007AC5  20                 	db	32
  1617  007AC6  20                 	db	32
  1618  007AC7  20                 	db	32
  1619  007AC8  20                 	db	32
  1620  007AC9  20                 	db	32
  1621  007ACA  20                 	db	32
  1622  007ACB  20                 	db	32
  1623  007ACC  00                 	db	0
  1624  007ACD                     STR_95:
  1625  007ACD  20                 	db	32
  1626  007ACE  20                 	db	32
  1627  007ACF  20                 	db	32
  1628  007AD0  20                 	db	32
  1629  007AD1  52                 	db	82	;'R'
  1630  007AD2  65                 	db	101	;'e'
  1631  007AD3  63                 	db	99	;'c'
  1632  007AD4  65                 	db	101	;'e'
  1633  007AD5  69                 	db	105	;'i'
  1634  007AD6  76                 	db	118	;'v'
  1635  007AD7  65                 	db	101	;'e'
  1636  007AD8  64                 	db	100	;'d'
  1637  007AD9  20                 	db	32
  1638  007ADA  20                 	db	32
  1639  007ADB  20                 	db	32
  1640  007ADC  20                 	db	32
  1641  007ADD  00                 	db	0
  1642  007ADE                     STR_42:
  1643  007ADE  20                 	db	32
  1644  007ADF  20                 	db	32
  1645  007AE0  20                 	db	32
  1646  007AE1  20                 	db	32
  1647  007AE2  20                 	db	32
  1648  007AE3  20                 	db	32
  1649  007AE4  20                 	db	32
  1650  007AE5  20                 	db	32
  1651  007AE6  20                 	db	32
  1652  007AE7  28                 	db	40
  1653  007AE8  53                 	db	83	;'S'
  1654  007AE9  33                 	db	51	;'3'
  1655  007AEA  29                 	db	41
  1656  007AEB  20                 	db	32
  1657  007AEC  20                 	db	32
  1658  007AED  20                 	db	32
  1659  007AEE  00                 	db	0
  1660  007AEF                     STR_34:
  1661  007AEF  20                 	db	32
  1662  007AF0  20                 	db	32
  1663  007AF1  28                 	db	40
  1664  007AF2  53                 	db	83	;'S'
  1665  007AF3  32                 	db	50	;'2'
  1666  007AF4  29                 	db	41
  1667  007AF5  20                 	db	32
  1668  007AF6  20                 	db	32
  1669  007AF7  20                 	db	32
  1670  007AF8  28                 	db	40
  1671  007AF9  53                 	db	83	;'S'
  1672  007AFA  33                 	db	51	;'3'
  1673  007AFB  29                 	db	41
  1674  007AFC  20                 	db	32
  1675  007AFD  20                 	db	32
  1676  007AFE  20                 	db	32
  1677  007AFF  00                 	db	0
  1678  007B00                     STR_80:
  1679  007B00  20                 	db	32
  1680  007B01  20                 	db	32
  1681  007B02  4C                 	db	76	;'L'
  1682  007B03  61                 	db	97	;'a'
  1683  007B04  73                 	db	115	;'s'
  1684  007B05  74                 	db	116	;'t'
  1685  007B06  20                 	db	32
  1686  007B07  4D                 	db	77	;'M'
  1687  007B08  65                 	db	101	;'e'
  1688  007B09  73                 	db	115	;'s'
  1689  007B0A  73                 	db	115	;'s'
  1690  007B0B  61                 	db	97	;'a'
  1691  007B0C  67                 	db	103	;'g'
  1692  007B0D  65                 	db	101	;'e'
  1693  007B0E  20                 	db	32
  1694  007B0F  20                 	db	32
  1695  007B10  00                 	db	0
  1696  007B11                     STR_79:
  1697  007B11  20                 	db	32
  1698  007B12  56                 	db	86	;'V'
  1699  007B13  69                 	db	105	;'i'
  1700  007B14  65                 	db	101	;'e'
  1701  007B15  77                 	db	119	;'w'
  1702  007B16  20                 	db	32
  1703  007B17  44                 	db	68	;'D'
  1704  007B18  6F                 	db	111	;'o'
  1705  007B19  77                 	db	119	;'w'
  1706  007B1A  6E                 	db	110	;'n'
  1707  007B1B  6C                 	db	108	;'l'
  1708  007B1C  69                 	db	105	;'i'
  1709  007B1D  6E                 	db	110	;'n'
  1710  007B1E  6B                 	db	107	;'k'
  1711  007B1F  20                 	db	32
  1712  007B20  20                 	db	32
  1713  007B21  00                 	db	0
  1714  007B22                     STR_76:
  1715  007B22  20                 	db	32
  1716  007B23  20                 	db	32
  1717  007B24  49                 	db	73	;'I'
  1718  007B25  73                 	db	115	;'s'
  1719  007B26  73                 	db	115	;'s'
  1720  007B27  75                 	db	117	;'u'
  1721  007B28  65                 	db	101	;'e'
  1722  007B29  20                 	db	32
  1723  007B2A  55                 	db	85	;'U'
  1724  007B2B  70                 	db	112	;'p'
  1725  007B2C  6C                 	db	108	;'l'
  1726  007B2D  69                 	db	105	;'i'
  1727  007B2E  6E                 	db	110	;'n'
  1728  007B2F  6B                 	db	107	;'k'
  1729  007B30  20                 	db	32
  1730  007B31  20                 	db	32
  1731  007B32  00                 	db	0
  1732  007B33                     STR_29:
  1733  007B33  20                 	db	32
  1734  007B34  28                 	db	40
  1735  007B35  53                 	db	83	;'S'
  1736  007B36  32                 	db	50	;'2'
  1737  007B37  29                 	db	41
  1738  007B38  20                 	db	32
  1739  007B39  20                 	db	32
  1740  007B3A  20                 	db	32
  1741  007B3B  20                 	db	32
  1742  007B3C  20                 	db	32
  1743  007B3D  20                 	db	32
  1744  007B3E  28                 	db	40
  1745  007B3F  53                 	db	83	;'S'
  1746  007B40  33                 	db	51	;'3'
  1747  007B41  29                 	db	41
  1748  007B42  20                 	db	32
  1749  007B43  00                 	db	0
  1750  007B44                     STR_32:
  1751  007B44  20                 	db	32
  1752  007B45  4A                 	db	74	;'J'
  1753  007B46  6F                 	db	111	;'o'
  1754  007B47  69                 	db	105	;'i'
  1755  007B48  6E                 	db	110	;'n'
  1756  007B49  69                 	db	105	;'i'
  1757  007B4A  6E                 	db	110	;'n'
  1758  007B4B  67                 	db	103	;'g'
  1759  007B4C  20                 	db	32
  1760  007B4D  4D                 	db	77	;'M'
  1761  007B4E  65                 	db	101	;'e'
  1762  007B4F  74                 	db	116	;'t'
  1763  007B50  68                 	db	104	;'h'
  1764  007B51  6F                 	db	111	;'o'
  1765  007B52  64                 	db	100	;'d'
  1766  007B53  20                 	db	32
  1767  007B54  00                 	db	0
  1768  007B55                     STR_94:
  1769  007B55  53                 	db	83	;'S'
  1770  007B56  65                 	db	101	;'e'
  1771  007B57  72                 	db	114	;'r'
  1772  007B58  76                 	db	118	;'v'
  1773  007B59  65                 	db	101	;'e'
  1774  007B5A  72                 	db	114	;'r'
  1775  007B5B  20                 	db	32
  1776  007B5C  52                 	db	82	;'R'
  1777  007B5D  65                 	db	101	;'e'
  1778  007B5E  73                 	db	115	;'s'
  1779  007B5F  70                 	db	112	;'p'
  1780  007B60  6F                 	db	111	;'o'
  1781  007B61  6E                 	db	110	;'n'
  1782  007B62  73                 	db	115	;'s'
  1783  007B63  65                 	db	101	;'e'
  1784  007B64  20                 	db	32
  1785  007B65  00                 	db	0
  1786  007B66                     STR_123:
  1787  007B66  54                 	db	84	;'T'
  1788  007B67  78                 	db	120	;'x'
  1789  007B68  20                 	db	32
  1790  007B69  45                 	db	69	;'E'
  1791  007B6A  76                 	db	118	;'v'
  1792  007B6B  65                 	db	101	;'e'
  1793  007B6C  6E                 	db	110	;'n'
  1794  007B6D  74                 	db	116	;'t'
  1795  007B6E  20                 	db	32
  1796  007B6F  54                 	db	84	;'T'
  1797  007B70  69                 	db	105	;'i'
  1798  007B71  6D                 	db	109	;'m'
  1799  007B72  69                 	db	105	;'i'
  1800  007B73  6E                 	db	110	;'n'
  1801  007B74  67                 	db	103	;'g'
  1802  007B75  20                 	db	32
  1803  007B76  00                 	db	0
  1804  007B77                     STR_122:
  1805  007B77  50                 	db	80	;'P'
  1806  007B78  65                 	db	101	;'e'
  1807  007B79  72                 	db	114	;'r'
  1808  007B7A  69                 	db	105	;'i'
  1809  007B7B  6F                 	db	111	;'o'
  1810  007B7C  64                 	db	100	;'d'
  1811  007B7D  69                 	db	105	;'i'
  1812  007B7E  63                 	db	99	;'c'
  1813  007B7F  20                 	db	32
  1814  007B80  55                 	db	85	;'U'
  1815  007B81  70                 	db	112	;'p'
  1816  007B82  6C                 	db	108	;'l'
  1817  007B83  69                 	db	105	;'i'
  1818  007B84  6E                 	db	110	;'n'
  1819  007B85  6B                 	db	107	;'k'
  1820  007B86  20                 	db	32
  1821  007B87  00                 	db	0
  1822  007B88                     STR_77:
  1823  007B88  20                 	db	32
  1824  007B89  4C                 	db	76	;'L'
  1825  007B8A  6F                 	db	111	;'o'
  1826  007B8B  52                 	db	82	;'R'
  1827  007B8C  61                 	db	97	;'a'
  1828  007B8D  57                 	db	87	;'W'
  1829  007B8E  41                 	db	65	;'A'
  1830  007B8F  4E                 	db	78	;'N'
  1831  007B90  20                 	db	32
  1832  007B91  50                 	db	80	;'P'
  1833  007B92  61                 	db	97	;'a'
  1834  007B93  63                 	db	99	;'c'
  1835  007B94  6B                 	db	107	;'k'
  1836  007B95  65                 	db	101	;'e'
  1837  007B96  74                 	db	116	;'t'
  1838  007B97  20                 	db	32
  1839  007B98  00                 	db	0
  1840  007B99                     STR_33:
  1841  007B99  3C                 	db	60	;'<'
  1842  007B9A  2D                 	db	45
  1843  007B9B  20                 	db	32
  1844  007B9C  41                 	db	65	;'A'
  1845  007B9D  42                 	db	66	;'B'
  1846  007B9E  50                 	db	80	;'P'
  1847  007B9F  20                 	db	32
  1848  007BA0  20                 	db	32
  1849  007BA1  20                 	db	32
  1850  007BA2  4F                 	db	79	;'O'
  1851  007BA3  54                 	db	84	;'T'
  1852  007BA4  41                 	db	65	;'A'
  1853  007BA5  41                 	db	65	;'A'
  1854  007BA6  20                 	db	32
  1855  007BA7  2D                 	db	45
  1856  007BA8  3E                 	db	62	;'>'
  1857  007BA9  00                 	db	0
  1858  007BAA                     STR_26:
  1859  007BAA  52                 	db	82	;'R'
  1860  007BAB  65                 	db	101	;'e'
  1861  007BAC  52                 	db	82	;'R'
  1862  007BAD  75                 	db	117	;'u'
  1863  007BAE  6E                 	db	110	;'n'
  1864  007BAF  20                 	db	32
  1865  007BB0  50                 	db	80	;'P'
  1866  007BB1  77                 	db	119	;'w'
  1867  007BB2  72                 	db	114	;'r'
  1868  007BB3  54                 	db	84	;'T'
  1869  007BB4  73                 	db	115	;'s'
  1870  007BB5  74                 	db	116	;'t'
  1871  007BB6  3C                 	db	60	;'<'
  1872  007BB7  53                 	db	83	;'S'
  1873  007BB8  32                 	db	50	;'2'
  1874  007BB9  3E                 	db	62	;'>'
  1875  007BBA  00                 	db	0
  1876  007BBB                     STR_97:
  1877  007BBB  44                 	db	68	;'D'
  1878  007BBC  61                 	db	97	;'a'
  1879  007BBD  74                 	db	116	;'t'
  1880  007BBE  61                 	db	97	;'a'
  1881  007BBF  20                 	db	32
  1882  007BC0  54                 	db	84	;'T'
  1883  007BC1  72                 	db	114	;'r'
  1884  007BC2  61                 	db	97	;'a'
  1885  007BC3  6E                 	db	110	;'n'
  1886  007BC4  73                 	db	115	;'s'
  1887  007BC5  6D                 	db	109	;'m'
  1888  007BC6  69                 	db	105	;'i'
  1889  007BC7  74                 	db	116	;'t'
  1890  007BC8  74                 	db	116	;'t'
  1891  007BC9  65                 	db	101	;'e'
  1892  007BCA  64                 	db	100	;'d'
  1893  007BCB  00                 	db	0
  1894  007BCC                     STR_154:
  1895  007BCC  45                 	db	69	;'E'
  1896  007BCD  6E                 	db	110	;'n'
  1897  007BCE  74                 	db	116	;'t'
  1898  007BCF  65                 	db	101	;'e'
  1899  007BD0  72                 	db	114	;'r'
  1900  007BD1  20                 	db	32
  1901  007BD2  53                 	db	83	;'S'
  1902  007BD3  6C                 	db	108	;'l'
  1903  007BD4  65                 	db	101	;'e'
  1904  007BD5  65                 	db	101	;'e'
  1905  007BD6  70                 	db	112	;'p'
  1906  007BD7  20                 	db	32
  1907  007BD8  4D                 	db	77	;'M'
  1908  007BD9  6F                 	db	111	;'o'
  1909  007BDA  64                 	db	100	;'d'
  1910  007BDB  65                 	db	101	;'e'
  1911  007BDC  00                 	db	0
  1912  007BDD                     STR_82:
  1913  007BDD  55                 	db	85	;'U'
  1914  007BDE  70                 	db	112	;'p'
  1915  007BDF  6C                 	db	108	;'l'
  1916  007BE0  69                 	db	105	;'i'
  1917  007BE1  6E                 	db	110	;'n'
  1918  007BE2  6B                 	db	107	;'k'
  1919  007BE3  20                 	db	32
  1920  007BE4  50                 	db	80	;'P'
  1921  007BE5  63                 	db	99	;'c'
  1922  007BE6  6B                 	db	107	;'k'
  1923  007BE7  74                 	db	116	;'t'
  1924  007BE8  20                 	db	32
  1925  007BE9  54                 	db	84	;'T'
  1926  007BEA  79                 	db	121	;'y'
  1927  007BEB  70                 	db	112	;'p'
  1928  007BEC  65                 	db	101	;'e'
  1929  007BED  00                 	db	0
  1930  007BEE                     STR_138:
  1931  007BEE  53                 	db	83	;'S'
  1932  007BEF  65                 	db	101	;'e'
  1933  007BF0  6C                 	db	108	;'l'
  1934  007BF1  65                 	db	101	;'e'
  1935  007BF2  63                 	db	99	;'c'
  1936  007BF3  74                 	db	116	;'t'
  1937  007BF4  20                 	db	32
  1938  007BF5  44                 	db	68	;'D'
  1939  007BF6  61                 	db	97	;'a'
  1940  007BF7  74                 	db	116	;'t'
  1941  007BF8  61                 	db	97	;'a'
  1942  007BF9  20                 	db	32
  1943  007BFA  52                 	db	82	;'R'
  1944  007BFB  61                 	db	97	;'a'
  1945  007BFC  74                 	db	116	;'t'
  1946  007BFD  65                 	db	101	;'e'
  1947  007BFE  00                 	db	0
  1948  007BFF                     STR_27:
  1949  007BFF  4D                 	db	77	;'M'
  1950  007C00  6F                 	db	111	;'o'
  1951  007C01  62                 	db	98	;'b'
  1952  007C02  69                 	db	105	;'i'
  1953  007C03  6C                 	db	108	;'l'
  1954  007C04  65                 	db	101	;'e'
  1955  007C05  20                 	db	32
  1956  007C06  4D                 	db	77	;'M'
  1957  007C07  6F                 	db	111	;'o'
  1958  007C08  74                 	db	116	;'t'
  1959  007C09  65                 	db	101	;'e'
  1960  007C0A  20                 	db	32
  1961  007C0B  2D                 	db	45
  1962  007C0C  41                 	db	65	;'A'
  1963  007C0D  70                 	db	112	;'p'
  1964  007C0E  70                 	db	112	;'p'
  1965  007C0F  00                 	db	0
  1966  007C10                     STR_28:
  1967  007C10  4E                 	db	78	;'N'
  1968  007C11  61                 	db	97	;'a'
  1969  007C12  76                 	db	118	;'v'
  1970  007C13  69                 	db	105	;'i'
  1971  007C14  67                 	db	103	;'g'
  1972  007C15  61                 	db	97	;'a'
  1973  007C16  74                 	db	116	;'t'
  1974  007C17  65                 	db	101	;'e'
  1975  007C18  20                 	db	32
  1976  007C19  20                 	db	32
  1977  007C1A  53                 	db	83	;'S'
  1978  007C1B  65                 	db	101	;'e'
  1979  007C1C  6C                 	db	108	;'l'
  1980  007C1D  65                 	db	101	;'e'
  1981  007C1E  63                 	db	99	;'c'
  1982  007C1F  74                 	db	116	;'t'
  1983  007C20  00                 	db	0
  1984  007C21                     STR_114:
  1985  007C21  4D                 	db	77	;'M'
  1986  007C22  65                 	db	101	;'e'
  1987  007C23  6E                 	db	110	;'n'
  1988  007C24  75                 	db	117	;'u'
  1989  007C25  20                 	db	32
  1990  007C26  48                 	db	72	;'H'
  1991  007C27  61                 	db	97	;'a'
  1992  007C28  73                 	db	115	;'s'
  1993  007C29  20                 	db	32
  1994  007C2A  54                 	db	84	;'T'
  1995  007C2B  69                 	db	105	;'i'
  1996  007C2C  6D                 	db	109	;'m'
  1997  007C2D  65                 	db	101	;'e'
  1998  007C2E  6F                 	db	111	;'o'
  1999  007C2F  75                 	db	117	;'u'
  2000  007C30  74                 	db	116	;'t'
  2001  007C31  00                 	db	0
  2002  007C32                     STR_71:
  2003  007C32  53                 	db	83	;'S'
  2004  007C33  65                 	db	101	;'e'
  2005  007C34  6E                 	db	110	;'n'
  2006  007C35  64                 	db	100	;'d'
  2007  007C36  20                 	db	32
  2008  007C37  50                 	db	80	;'P'
  2009  007C38  65                 	db	101	;'e'
  2010  007C39  72                 	db	114	;'r'
  2011  007C3A  69                 	db	105	;'i'
  2012  007C3B  6F                 	db	111	;'o'
  2013  007C3C  64                 	db	100	;'d'
  2014  007C3D  69                 	db	105	;'i'
  2015  007C3E  63                 	db	99	;'c'
  2016  007C3F  20                 	db	32
  2017  007C40  54                 	db	84	;'T'
  2018  007C41  78                 	db	120	;'x'
  2019  007C42  00                 	db	0
  2020  007C43                     STR_108:
  2021  007C43  44                 	db	68	;'D'
  2022  007C44  6F                 	db	111	;'o'
  2023  007C45  77                 	db	119	;'w'
  2024  007C46  6E                 	db	110	;'n'
  2025  007C47  6C                 	db	108	;'l'
  2026  007C48  69                 	db	105	;'i'
  2027  007C49  6E                 	db	110	;'n'
  2028  007C4A  6B                 	db	107	;'k'
  2029  007C4B  20                 	db	32
  2030  007C4C  44                 	db	68	;'D'
  2031  007C4D  69                 	db	105	;'i'
  2032  007C4E  73                 	db	115	;'s'
  2033  007C4F  70                 	db	112	;'p'
  2034  007C50  6C                 	db	108	;'l'
  2035  007C51  61                 	db	97	;'a'
  2036  007C52  79                 	db	121	;'y'
  2037  007C53  00                 	db	0
  2038  007C54                     STR_106:
  2039  007C54  20                 	db	32
  2040  007C55  20                 	db	32
  2041  007C56  20                 	db	32
  2042  007C57  20                 	db	32
  2043  007C58  44                 	db	68	;'D'
  2044  007C59  69                 	db	105	;'i'
  2045  007C5A  73                 	db	115	;'s'
  2046  007C5B  70                 	db	112	;'p'
  2047  007C5C  6C                 	db	108	;'l'
  2048  007C5D  61                 	db	97	;'a'
  2049  007C5E  79                 	db	121	;'y'
  2050  007C5F  20                 	db	32
  2051  007C60  20                 	db	32
  2052  007C61  20                 	db	32
  2053  007C62  20                 	db	32
  2054  007C63  00                 	db	0
  2055  007C64                     STR_105:
  2056  007C64  20                 	db	32
  2057  007C65  20                 	db	32
  2058  007C66  53                 	db	83	;'S'
  2059  007C67  65                 	db	101	;'e'
  2060  007C68  6E                 	db	110	;'n'
  2061  007C69  73                 	db	115	;'s'
  2062  007C6A  6F                 	db	111	;'o'
  2063  007C6B  72                 	db	114	;'r'
  2064  007C6C  20                 	db	32
  2065  007C6D  44                 	db	68	;'D'
  2066  007C6E  61                 	db	97	;'a'
  2067  007C6F  74                 	db	116	;'t'
  2068  007C70  61                 	db	97	;'a'
  2069  007C71  20                 	db	32
  2070  007C72  20                 	db	32
  2071  007C73  00                 	db	0
  2072  007C74                     STR_117:
  2073  007C74  28                 	db	40
  2074  007C75  4E                 	db	78	;'N'
  2075  007C76  41                 	db	65	;'A'
  2076  007C77  56                 	db	86	;'V'
  2077  007C78  29                 	db	41
  2078  007C79  20                 	db	32
  2079  007C7A  20                 	db	32
  2080  007C7B  20                 	db	32
  2081  007C7C  20                 	db	32
  2082  007C7D  28                 	db	40
  2083  007C7E  43                 	db	67	;'C'
  2084  007C7F  4E                 	db	78	;'N'
  2085  007C80  47                 	db	71	;'G'
  2086  007C81  29                 	db	41
  2087  007C82  20                 	db	32
  2088  007C83  00                 	db	0
  2089  007C84                     STR_78:
  2090  007C84  28                 	db	40
  2091  007C85  4E                 	db	78	;'N'
  2092  007C86  41                 	db	65	;'A'
  2093  007C87  56                 	db	86	;'V'
  2094  007C88  29                 	db	41
  2095  007C89  20                 	db	32
  2096  007C8A  20                 	db	32
  2097  007C8B  20                 	db	32
  2098  007C8C  20                 	db	32
  2099  007C8D  28                 	db	40
  2100  007C8E  53                 	db	83	;'S'
  2101  007C8F  45                 	db	69	;'E'
  2102  007C90  4C                 	db	76	;'L'
  2103  007C91  29                 	db	41
  2104  007C92  20                 	db	32
  2105  007C93  00                 	db	0
  2106  007C94                     STR_155:
  2107  007C94  28                 	db	40
  2108  007C95  4E                 	db	78	;'N'
  2109  007C96  41                 	db	65	;'A'
  2110  007C97  56                 	db	86	;'V'
  2111  007C98  29                 	db	41
  2112  007C99  20                 	db	32
  2113  007C9A  20                 	db	32
  2114  007C9B  20                 	db	32
  2115  007C9C  20                 	db	32
  2116  007C9D  28                 	db	40
  2117  007C9E  53                 	db	83	;'S'
  2118  007C9F  4C                 	db	76	;'L'
  2119  007CA0  50                 	db	80	;'P'
  2120  007CA1  29                 	db	41
  2121  007CA2  20                 	db	32
  2122  007CA3  00                 	db	0
  2123  007CA4                     STR_166:
  2124  007CA4  6D                 	db	109	;'m'
  2125  007CA5  61                 	db	97	;'a'
  2126  007CA6  63                 	db	99	;'c'
  2127  007CA7  20                 	db	32
  2128  007CA8  73                 	db	115	;'s'
  2129  007CA9  65                 	db	101	;'e'
  2130  007CAA  74                 	db	116	;'t'
  2131  007CAB  20                 	db	32
  2132  007CAC  61                 	db	97	;'a'
  2133  007CAD  64                 	db	100	;'d'
  2134  007CAE  72                 	db	114	;'r'
  2135  007CAF  20                 	db	32
  2136  007CB0  6F                 	db	111	;'o'
  2137  007CB1  66                 	db	102	;'f'
  2138  007CB2  66                 	db	102	;'f'
  2139  007CB3  00                 	db	0
  2140  007CB4                     STR_101:
  2141  007CB4  4E                 	db	78	;'N'
  2142  007CB5  6F                 	db	111	;'o'
  2143  007CB6  20                 	db	32
  2144  007CB7  46                 	db	70	;'F'
  2145  007CB8  72                 	db	114	;'r'
  2146  007CB9  65                 	db	101	;'e'
  2147  007CBA  65                 	db	101	;'e'
  2148  007CBB  20                 	db	32
  2149  007CBC  43                 	db	67	;'C'
  2150  007CBD  68                 	db	104	;'h'
  2151  007CBE  61                 	db	97	;'a'
  2152  007CBF  6E                 	db	110	;'n'
  2153  007CC0  6E                 	db	110	;'n'
  2154  007CC1  65                 	db	101	;'e'
  2155  007CC2  6C                 	db	108	;'l'
  2156  007CC3  00                 	db	0
  2157  007CC4                     STR_7:
  2158  007CC4  42                 	db	66	;'B'
  2159  007CC5  75                 	db	117	;'u'
  2160  007CC6  69                 	db	105	;'i'
  2161  007CC7  6C                 	db	108	;'l'
  2162  007CC8  64                 	db	100	;'d'
  2163  007CC9  20                 	db	32
  2164  007CCA  44                 	db	68	;'D'
  2165  007CCB  61                 	db	97	;'a'
  2166  007CCC  74                 	db	116	;'t'
  2167  007CCD  65                 	db	101	;'e'
  2168  007CCE  2F                 	db	47
  2169  007CCF  54                 	db	84	;'T'
  2170  007CD0  69                 	db	105	;'i'
  2171  007CD1  6D                 	db	109	;'m'
  2172  007CD2  65                 	db	101	;'e'
  2173  007CD3  00                 	db	0
  2174  007CD4                     STR_115:
  2175  007CD4  20                 	db	32
  2176  007CD5  20                 	db	32
  2177  007CD6  20                 	db	32
  2178  007CD7  20                 	db	32
  2179  007CD8  45                 	db	69	;'E'
  2180  007CD9  6E                 	db	110	;'n'
  2181  007CDA  61                 	db	97	;'a'
  2182  007CDB  62                 	db	98	;'b'
  2183  007CDC  6C                 	db	108	;'l'
  2184  007CDD  65                 	db	101	;'e'
  2185  007CDE  64                 	db	100	;'d'
  2186  007CDF  20                 	db	32
  2187  007CE0  20                 	db	32
  2188  007CE1  20                 	db	32
  2189  007CE2  00                 	db	0
  2190  007CE3                     STR_116:
  2191  007CE3  20                 	db	32
  2192  007CE4  20                 	db	32
  2193  007CE5  20                 	db	32
  2194  007CE6  20                 	db	32
  2195  007CE7  44                 	db	68	;'D'
  2196  007CE8  69                 	db	105	;'i'
  2197  007CE9  73                 	db	115	;'s'
  2198  007CEA  61                 	db	97	;'a'
  2199  007CEB  62                 	db	98	;'b'
  2200  007CEC  6C                 	db	108	;'l'
  2201  007CED  65                 	db	101	;'e'
  2202  007CEE  64                 	db	100	;'d'
  2203  007CEF  20                 	db	32
  2204  007CF0  20                 	db	32
  2205  007CF1  00                 	db	0
  2206  007CF2                     STR_175:
  2207  007CF2  6D                 	db	109	;'m'
  2208  007CF3  61                 	db	97	;'a'
  2209  007CF4  63                 	db	99	;'c'
  2210  007CF5  20                 	db	32
  2211  007CF6  73                 	db	115	;'s'
  2212  007CF7  65                 	db	101	;'e'
  2213  007CF8  74                 	db	116	;'t'
  2214  007CF9  20                 	db	32
  2215  007CFA  61                 	db	97	;'a'
  2216  007CFB  64                 	db	100	;'d'
  2217  007CFC  72                 	db	114	;'r'
  2218  007CFD  20                 	db	32
  2219  007CFE  6F                 	db	111	;'o'
  2220  007CFF  6E                 	db	110	;'n'
  2221  007D00  00                 	db	0
  2222  007D01                     STR_2:
  2223  007D01  20                 	db	32
  2224  007D02  20                 	db	32
  2225  007D03  20                 	db	32
  2226  007D04  4C                 	db	76	;'L'
  2227  007D05  6F                 	db	111	;'o'
  2228  007D06  52                 	db	82	;'R'
  2229  007D07  61                 	db	97	;'a'
  2230  007D08  20                 	db	32
  2231  007D09  44                 	db	68	;'D'
  2232  007D0A  65                 	db	101	;'e'
  2233  007D0B  6D                 	db	109	;'m'
  2234  007D0C  6F                 	db	111	;'o'
  2235  007D0D  20                 	db	32
  2236  007D0E  20                 	db	32
  2237  007D0F  00                 	db	0
  2238  007D10                     STR_3:
  2239  007D10  20                 	db	32
  2240  007D11  56                 	db	86	;'V'
  2241  007D12  20                 	db	32
  2242  007D13  31                 	db	49	;'1'
  2243  007D14  2E                 	db	46
  2244  007D15  30                 	db	48	;'0'
  2245  007D16  2E                 	db	46
  2246  007D17  31                 	db	49	;'1'
  2247  007D18  20                 	db	32
  2248  007D19  43                 	db	67	;'C'
  2249  007D1A  6F                 	db	111	;'o'
  2250  007D1B  64                 	db	100	;'d'
  2251  007D1C  65                 	db	101	;'e'
  2252  007D1D  20                 	db	32
  2253  007D1E  00                 	db	0
  2254  007D1F                     STR_1:
  2255  007D1F  4D                 	db	77	;'M'
  2256  007D20  69                 	db	105	;'i'
  2257  007D21  63                 	db	99	;'c'
  2258  007D22  72                 	db	114	;'r'
  2259  007D23  6F                 	db	111	;'o'
  2260  007D24  63                 	db	99	;'c'
  2261  007D25  68                 	db	104	;'h'
  2262  007D26  69                 	db	105	;'i'
  2263  007D27  70                 	db	112	;'p'
  2264  007D28  20                 	db	32
  2265  007D29  4D                 	db	77	;'M'
  2266  007D2A  6F                 	db	111	;'o'
  2267  007D2B  74                 	db	116	;'t'
  2268  007D2C  65                 	db	101	;'e'
  2269  007D2D  00                 	db	0
  2270  007D2E                     STR_74:
  2271  007D2E  6D                 	db	109	;'m'
  2272  007D2F  61                 	db	97	;'a'
  2273  007D30  63                 	db	99	;'c'
  2274  007D31  20                 	db	32
  2275  007D32  74                 	db	116	;'t'
  2276  007D33  78                 	db	120	;'x'
  2277  007D34  20                 	db	32
  2278  007D35  75                 	db	117	;'u'
  2279  007D36  6E                 	db	110	;'n'
  2280  007D37  63                 	db	99	;'c'
  2281  007D38  6E                 	db	110	;'n'
  2282  007D39  66                 	db	102	;'f'
  2283  007D3A  20                 	db	32
  2284  007D3B  00                 	db	0
  2285  007D3C                     STR_43:
  2286  007D3C  6D                 	db	109	;'m'
  2287  007D3D  61                 	db	97	;'a'
  2288  007D3E  63                 	db	99	;'c'
  2289  007D3F  20                 	db	32
  2290  007D40  6A                 	db	106	;'j'
  2291  007D41  6F                 	db	111	;'o'
  2292  007D42  69                 	db	105	;'i'
  2293  007D43  6E                 	db	110	;'n'
  2294  007D44  20                 	db	32
  2295  007D45  6F                 	db	111	;'o'
  2296  007D46  74                 	db	116	;'t'
  2297  007D47  61                 	db	97	;'a'
  2298  007D48  61                 	db	97	;'a'
  2299  007D49  00                 	db	0
  2300  007D4A                     STR_57:
  2301  007D4A  69                 	db	105	;'i'
  2302  007D4B  6E                 	db	110	;'n'
  2303  007D4C  76                 	db	118	;'v'
  2304  007D4D  61                 	db	97	;'a'
  2305  007D4E  6C                 	db	108	;'l'
  2306  007D4F  69                 	db	105	;'i'
  2307  007D50  64                 	db	100	;'d'
  2308  007D51  5F                 	db	95	;'_'
  2309  007D52  70                 	db	112	;'p'
  2310  007D53  61                 	db	97	;'a'
  2311  007D54  72                 	db	114	;'r'
  2312  007D55  61                 	db	97	;'a'
  2313  007D56  6D                 	db	109	;'m'
  2314  007D57  00                 	db	0
  2315  007D58                     STR_45:
  2316  007D58  6B                 	db	107	;'k'
  2317  007D59  65                 	db	101	;'e'
  2318  007D5A  79                 	db	121	;'y'
  2319  007D5B  73                 	db	115	;'s'
  2320  007D5C  5F                 	db	95	;'_'
  2321  007D5D  6E                 	db	110	;'n'
  2322  007D5E  6F                 	db	111	;'o'
  2323  007D5F  74                 	db	116	;'t'
  2324  007D60  5F                 	db	95	;'_'
  2325  007D61  69                 	db	105	;'i'
  2326  007D62  6E                 	db	110	;'n'
  2327  007D63  69                 	db	105	;'i'
  2328  007D64  74                 	db	116	;'t'
  2329  007D65  00                 	db	0
  2330  007D66                     STR_83:
  2331  007D66  54                 	db	84	;'T'
  2332  007D67  68                 	db	104	;'h'
  2333  007D68  72                 	db	114	;'r'
  2334  007D69  6F                 	db	111	;'o'
  2335  007D6A  75                 	db	117	;'u'
  2336  007D6B  20                 	db	32
  2337  007D6C  50                 	db	80	;'P'
  2338  007D6D  6F                 	db	111	;'o'
  2339  007D6E  72                 	db	114	;'r'
  2340  007D6F  74                 	db	116	;'t'
  2341  007D70  23                 	db	35
  2342  007D71  20                 	db	32
  2343  007D72  00                 	db	0
  2344  007D73                     STR_73:
  2345  007D73  4C                 	db	76	;'L'
  2346  007D74  3A                 	db	58	;':'
  2347  007D75  20                 	db	32
  2348  007D76  20                 	db	32
  2349  007D77  20                 	db	32
  2350  007D78  20                 	db	32
  2351  007D79  20                 	db	32
  2352  007D7A  20                 	db	32
  2353  007D7B  20                 	db	32
  2354  007D7C  54                 	db	84	;'T'
  2355  007D7D  3A                 	db	58	;':'
  2356  007D7E  20                 	db	32
  2357  007D7F  00                 	db	0
  2358  007D80                     STR_167:
  2359  007D80  6D                 	db	109	;'m'
  2360  007D81  61                 	db	97	;'a'
  2361  007D82  63                 	db	99	;'c'
  2362  007D83  20                 	db	32
  2363  007D84  73                 	db	115	;'s'
  2364  007D85  65                 	db	101	;'e'
  2365  007D86  74                 	db	116	;'t'
  2366  007D87  20                 	db	32
  2367  007D88  64                 	db	100	;'d'
  2368  007D89  72                 	db	114	;'r'
  2369  007D8A  20                 	db	32
  2370  007D8B  30                 	db	48	;'0'
  2371  007D8C  00                 	db	0
  2372  007D8D                     STR_168:
  2373  007D8D  6D                 	db	109	;'m'
  2374  007D8E  61                 	db	97	;'a'
  2375  007D8F  63                 	db	99	;'c'
  2376  007D90  20                 	db	32
  2377  007D91  73                 	db	115	;'s'
  2378  007D92  65                 	db	101	;'e'
  2379  007D93  74                 	db	116	;'t'
  2380  007D94  20                 	db	32
  2381  007D95  64                 	db	100	;'d'
  2382  007D96  72                 	db	114	;'r'
  2383  007D97  20                 	db	32
  2384  007D98  31                 	db	49	;'1'
  2385  007D99  00                 	db	0
  2386  007D9A                     STR_169:
  2387  007D9A  6D                 	db	109	;'m'
  2388  007D9B  61                 	db	97	;'a'
  2389  007D9C  63                 	db	99	;'c'
  2390  007D9D  20                 	db	32
  2391  007D9E  73                 	db	115	;'s'
  2392  007D9F  65                 	db	101	;'e'
  2393  007DA0  74                 	db	116	;'t'
  2394  007DA1  20                 	db	32
  2395  007DA2  64                 	db	100	;'d'
  2396  007DA3  72                 	db	114	;'r'
  2397  007DA4  20                 	db	32
  2398  007DA5  32                 	db	50	;'2'
  2399  007DA6  00                 	db	0
  2400  007DA7                     STR_170:
  2401  007DA7  6D                 	db	109	;'m'
  2402  007DA8  61                 	db	97	;'a'
  2403  007DA9  63                 	db	99	;'c'
  2404  007DAA  20                 	db	32
  2405  007DAB  73                 	db	115	;'s'
  2406  007DAC  65                 	db	101	;'e'
  2407  007DAD  74                 	db	116	;'t'
  2408  007DAE  20                 	db	32
  2409  007DAF  64                 	db	100	;'d'
  2410  007DB0  72                 	db	114	;'r'
  2411  007DB1  20                 	db	32
  2412  007DB2  33                 	db	51	;'3'
  2413  007DB3  00                 	db	0
  2414  007DB4                     STR_171:
  2415  007DB4  6D                 	db	109	;'m'
  2416  007DB5  61                 	db	97	;'a'
  2417  007DB6  63                 	db	99	;'c'
  2418  007DB7  20                 	db	32
  2419  007DB8  73                 	db	115	;'s'
  2420  007DB9  65                 	db	101	;'e'
  2421  007DBA  74                 	db	116	;'t'
  2422  007DBB  20                 	db	32
  2423  007DBC  64                 	db	100	;'d'
  2424  007DBD  72                 	db	114	;'r'
  2425  007DBE  20                 	db	32
  2426  007DBF  34                 	db	52	;'4'
  2427  007DC0  00                 	db	0
  2428  007DC1                     STR_172:
  2429  007DC1  6D                 	db	109	;'m'
  2430  007DC2  61                 	db	97	;'a'
  2431  007DC3  63                 	db	99	;'c'
  2432  007DC4  20                 	db	32
  2433  007DC5  73                 	db	115	;'s'
  2434  007DC6  65                 	db	101	;'e'
  2435  007DC7  74                 	db	116	;'t'
  2436  007DC8  20                 	db	32
  2437  007DC9  64                 	db	100	;'d'
  2438  007DCA  72                 	db	114	;'r'
  2439  007DCB  20                 	db	32
  2440  007DCC  35                 	db	53	;'5'
  2441  007DCD  00                 	db	0
  2442  007DCE                     STR_173:
  2443  007DCE  6D                 	db	109	;'m'
  2444  007DCF  61                 	db	97	;'a'
  2445  007DD0  63                 	db	99	;'c'
  2446  007DD1  20                 	db	32
  2447  007DD2  73                 	db	115	;'s'
  2448  007DD3  65                 	db	101	;'e'
  2449  007DD4  74                 	db	116	;'t'
  2450  007DD5  20                 	db	32
  2451  007DD6  64                 	db	100	;'d'
  2452  007DD7  72                 	db	114	;'r'
  2453  007DD8  20                 	db	32
  2454  007DD9  36                 	db	54	;'6'
  2455  007DDA  00                 	db	0
  2456  007DDB                     STR_174:
  2457  007DDB  6D                 	db	109	;'m'
  2458  007DDC  61                 	db	97	;'a'
  2459  007DDD  63                 	db	99	;'c'
  2460  007DDE  20                 	db	32
  2461  007DDF  73                 	db	115	;'s'
  2462  007DE0  65                 	db	101	;'e'
  2463  007DE1  74                 	db	116	;'t'
  2464  007DE2  20                 	db	32
  2465  007DE3  64                 	db	100	;'d'
  2466  007DE4  72                 	db	114	;'r'
  2467  007DE5  20                 	db	32
  2468  007DE6  37                 	db	55	;'7'
  2469  007DE7  00                 	db	0
  2470  007DE8                     STR_41:
  2471  007DE8  6D                 	db	109	;'m'
  2472  007DE9  61                 	db	97	;'a'
  2473  007DEA  63                 	db	99	;'c'
  2474  007DEB  20                 	db	32
  2475  007DEC  6A                 	db	106	;'j'
  2476  007DED  6F                 	db	111	;'o'
  2477  007DEE  69                 	db	105	;'i'
  2478  007DEF  6E                 	db	110	;'n'
  2479  007DF0  20                 	db	32
  2480  007DF1  61                 	db	97	;'a'
  2481  007DF2  62                 	db	98	;'b'
  2482  007DF3  70                 	db	112	;'p'
  2483  007DF4  00                 	db	0
  2484  007DF5                     STR_10:
  2485  007DF5  42                 	db	66	;'B'
  2486  007DF6  75                 	db	117	;'u'
  2487  007DF7  74                 	db	116	;'t'
  2488  007DF8  74                 	db	116	;'t'
  2489  007DF9  6F                 	db	111	;'o'
  2490  007DFA  6E                 	db	110	;'n'
  2491  007DFB  20                 	db	32
  2492  007DFC  54                 	db	84	;'T'
  2493  007DFD  65                 	db	101	;'e'
  2494  007DFE  73                 	db	115	;'s'
  2495  007DFF  74                 	db	116	;'t'
  2496  007E00  3A                 	db	58	;':'
  2497  007E01  00                 	db	0
  2498  007E02                     STR_13:
  2499  007E02  42                 	db	66	;'B'
  2500  007E03  75                 	db	117	;'u'
  2501  007E04  74                 	db	116	;'t'
  2502  007E05  74                 	db	116	;'t'
  2503  007E06  6F                 	db	111	;'o'
  2504  007E07  6E                 	db	110	;'n'
  2505  007E08  31                 	db	49	;'1'
  2506  007E09  20                 	db	32
  2507  007E0A  50                 	db	80	;'P'
  2508  007E0B  41                 	db	65	;'A'
  2509  007E0C  53                 	db	83	;'S'
  2510  007E0D  53                 	db	83	;'S'
  2511  007E0E  00                 	db	0
  2512  007E0F                     STR_14:
  2513  007E0F  42                 	db	66	;'B'
  2514  007E10  75                 	db	117	;'u'
  2515  007E11  74                 	db	116	;'t'
  2516  007E12  74                 	db	116	;'t'
  2517  007E13  6F                 	db	111	;'o'
  2518  007E14  6E                 	db	110	;'n'
  2519  007E15  32                 	db	50	;'2'
  2520  007E16  20                 	db	32
  2521  007E17  50                 	db	80	;'P'
  2522  007E18  41                 	db	65	;'A'
  2523  007E19  53                 	db	83	;'S'
  2524  007E1A  53                 	db	83	;'S'
  2525  007E1B  00                 	db	0
  2526  007E1C                     STR_12:
  2527  007E1C  50                 	db	80	;'P'
  2528  007E1D  72                 	db	114	;'r'
  2529  007E1E  65                 	db	101	;'e'
  2530  007E1F  73                 	db	115	;'s'
  2531  007E20  73                 	db	115	;'s'
  2532  007E21  20                 	db	32
  2533  007E22  42                 	db	66	;'B'
  2534  007E23  75                 	db	117	;'u'
  2535  007E24  74                 	db	116	;'t'
  2536  007E25  74                 	db	116	;'t'
  2537  007E26  6F                 	db	111	;'o'
  2538  007E27  6E                 	db	110	;'n'
  2539  007E28  00                 	db	0
  2540  007E29                     STR_192:
  2541  007E29  55                 	db	85	;'U'
  2542  007E2A  53                 	db	83	;'S'
  2543  007E2B  42                 	db	66	;'B'
  2544  007E2C  20                 	db	32
  2545  007E2D  48                 	db	72	;'H'
  2546  007E2E  61                 	db	97	;'a'
  2547  007E2F  6E                 	db	110	;'n'
  2548  007E30  64                 	db	100	;'d'
  2549  007E31  6C                 	db	108	;'l'
  2550  007E32  65                 	db	101	;'e'
  2551  007E33  72                 	db	114	;'r'
  2552  007E34  00                 	db	0
  2553  007E35                     STR_72:
  2554  007E35  4F                 	db	79	;'O'
  2555  007E36  6E                 	db	110	;'n'
  2556  007E37  20                 	db	32
  2557  007E38  50                 	db	80	;'P'
  2558  007E39  6F                 	db	111	;'o'
  2559  007E3A  72                 	db	114	;'r'
  2560  007E3B  74                 	db	116	;'t'
  2561  007E3C  20                 	db	32
  2562  007E3D  23                 	db	35
  2563  007E3E  3A                 	db	58	;':'
  2564  007E3F  20                 	db	32
  2565  007E40  00                 	db	0
  2566  007E41                     STR_90:
  2567  007E41  54                 	db	84	;'T'
  2568  007E42  78                 	db	120	;'x'
  2569  007E43  20                 	db	32
  2570  007E44  50                 	db	80	;'P'
  2571  007E45  6F                 	db	111	;'o'
  2572  007E46  72                 	db	114	;'r'
  2573  007E47  74                 	db	116	;'t'
  2574  007E48  20                 	db	32
  2575  007E49  23                 	db	35
  2576  007E4A  3A                 	db	58	;':'
  2577  007E4B  20                 	db	32
  2578  007E4C  00                 	db	0
  2579  007E4D                     STR_89:
  2580  007E4D  53                 	db	83	;'S'
  2581  007E4E  65                 	db	101	;'e'
  2582  007E4F  6E                 	db	110	;'n'
  2583  007E50  74                 	db	116	;'t'
  2584  007E51  20                 	db	32
  2585  007E52  44                 	db	68	;'D'
  2586  007E53  61                 	db	97	;'a'
  2587  007E54  74                 	db	116	;'t'
  2588  007E55  61                 	db	97	;'a'
  2589  007E56  3A                 	db	58	;':'
  2590  007E57  20                 	db	32
  2591  007E58  00                 	db	0
  2592  007E59                     STR_139:
  2593  007E59  44                 	db	68	;'D'
  2594  007E5A  61                 	db	97	;'a'
  2595  007E5B  74                 	db	116	;'t'
  2596  007E5C  61                 	db	97	;'a'
  2597  007E5D  20                 	db	32
  2598  007E5E  52                 	db	82	;'R'
  2599  007E5F  61                 	db	97	;'a'
  2600  007E60  74                 	db	116	;'t'
  2601  007E61  65                 	db	101	;'e'
  2602  007E62  3A                 	db	58	;':'
  2603  007E63  20                 	db	32
  2604  007E64  00                 	db	0
  2605  007E65                     STR_87:
  2606  007E65  6D                 	db	109	;'m'
  2607  007E66  61                 	db	97	;'a'
  2608  007E67  63                 	db	99	;'c'
  2609  007E68  20                 	db	32
  2610  007E69  74                 	db	116	;'t'
  2611  007E6A  78                 	db	120	;'x'
  2612  007E6B  20                 	db	32
  2613  007E6C  63                 	db	99	;'c'
  2614  007E6D  6E                 	db	110	;'n'
  2615  007E6E  66                 	db	102	;'f'
  2616  007E6F  20                 	db	32
  2617  007E70  00                 	db	0
  2618  007E71                     STR_8:
  2619  007E71  4D                 	db	77	;'M'
  2620  007E72  61                 	db	97	;'a'
  2621  007E73  72                 	db	114	;'r'
  2622  007E74  20                 	db	32
  2623  007E75  33                 	db	51	;'3'
  2624  007E76  31                 	db	49	;'1'
  2625  007E77  20                 	db	32
  2626  007E78  32                 	db	50	;'2'
  2627  007E79  30                 	db	48	;'0'
  2628  007E7A  31                 	db	49	;'1'
  2629  007E7B  38                 	db	56	;'8'
  2630  007E7C  00                 	db	0
  2631  007E7D                     STR_11:
  2632  007E7D  42                 	db	66	;'B'
  2633  007E7E  75                 	db	117	;'u'
  2634  007E7F  74                 	db	116	;'t'
  2635  007E80  74                 	db	116	;'t'
  2636  007E81  6F                 	db	111	;'o'
  2637  007E82  6E                 	db	110	;'n'
  2638  007E83  20                 	db	32
  2639  007E84  46                 	db	70	;'F'
  2640  007E85  41                 	db	65	;'A'
  2641  007E86  49                 	db	73	;'I'
  2642  007E87  4C                 	db	76	;'L'
  2643  007E88  00                 	db	0
  2644  007E89                     STR_61:
  2645  007E89  4F                 	db	79	;'O'
  2646  007E8A  54                 	db	84	;'T'
  2647  007E8B  41                 	db	65	;'A'
  2648  007E8C  41                 	db	65	;'A'
  2649  007E8D  20                 	db	32
  2650  007E8E  4A                 	db	74	;'J'
  2651  007E8F  6F                 	db	111	;'o'
  2652  007E90  69                 	db	105	;'i'
  2653  007E91  6E                 	db	110	;'n'
  2654  007E92  20                 	db	32
  2655  007E93  00                 	db	0
  2656  007E94                     STR_59:
  2657  007E94  6E                 	db	110	;'n'
  2658  007E95  6F                 	db	111	;'o'
  2659  007E96  5F                 	db	95	;'_'
  2660  007E97  66                 	db	102	;'f'
  2661  007E98  72                 	db	114	;'r'
  2662  007E99  65                 	db	101	;'e'
  2663  007E9A  65                 	db	101	;'e'
  2664  007E9B  5F                 	db	95	;'_'
  2665  007E9C  63                 	db	99	;'c'
  2666  007E9D  68                 	db	104	;'h'
  2667  007E9E  00                 	db	0
  2668  007E9F                     STR_51:
  2669  007E9F  53                 	db	83	;'S'
  2670  007EA0  75                 	db	117	;'u'
  2671  007EA1  63                 	db	99	;'c'
  2672  007EA2  63                 	db	99	;'c'
  2673  007EA3  65                 	db	101	;'e'
  2674  007EA4  73                 	db	115	;'s'
  2675  007EA5  73                 	db	115	;'s'
  2676  007EA6  66                 	db	102	;'f'
  2677  007EA7  75                 	db	117	;'u'
  2678  007EA8  6C                 	db	108	;'l'
  2679  007EA9  00                 	db	0
  2680  007EAA                     STR_68:
  2681  007EAA  6D                 	db	109	;'m'
  2682  007EAB  61                 	db	97	;'a'
  2683  007EAC  63                 	db	99	;'c'
  2684  007EAD  20                 	db	32
  2685  007EAE  67                 	db	103	;'g'
  2686  007EAF  65                 	db	101	;'e'
  2687  007EB0  74                 	db	116	;'t'
  2688  007EB1  20                 	db	32
  2689  007EB2  64                 	db	100	;'d'
  2690  007EB3  72                 	db	114	;'r'
  2691  007EB4  00                 	db	0
  2692  007EB5                     STR_46:
  2693  007EB5  56                 	db	86	;'V'
  2694  007EB6  61                 	db	97	;'a'
  2695  007EB7  6C                 	db	108	;'l'
  2696  007EB8  69                 	db	105	;'i'
  2697  007EB9  64                 	db	100	;'d'
  2698  007EBA  20                 	db	32
  2699  007EBB  4B                 	db	75	;'K'
  2700  007EBC  65                 	db	101	;'e'
  2701  007EBD  79                 	db	121	;'y'
  2702  007EBE  73                 	db	115	;'s'
  2703  007EBF  00                 	db	0
  2704  007EC0                     STR_15:
  2705  007EC0  43                 	db	67	;'C'
  2706  007EC1  6F                 	db	111	;'o'
  2707  007EC2  6D                 	db	109	;'m'
  2708  007EC3  6D                 	db	109	;'m'
  2709  007EC4  20                 	db	32
  2710  007EC5  54                 	db	84	;'T'
  2711  007EC6  65                 	db	101	;'e'
  2712  007EC7  73                 	db	115	;'s'
  2713  007EC8  74                 	db	116	;'t'
  2714  007EC9  3A                 	db	58	;':'
  2715  007ECA  00                 	db	0
  2716  007ECB                     STR_109:
  2717  007ECB  52                 	db	82	;'R'
  2718  007ECC  78                 	db	120	;'x'
  2719  007ECD  20                 	db	32
  2720  007ECE  50                 	db	80	;'P'
  2721  007ECF  6F                 	db	111	;'o'
  2722  007ED0  72                 	db	114	;'r'
  2723  007ED1  74                 	db	116	;'t'
  2724  007ED2  23                 	db	35
  2725  007ED3  20                 	db	32
  2726  007ED4  00                 	db	0
  2727  007ED5                     STR_50:
  2728  007ED5  41                 	db	65	;'A'
  2729  007ED6  42                 	db	66	;'B'
  2730  007ED7  50                 	db	80	;'P'
  2731  007ED8  20                 	db	32
  2732  007ED9  4A                 	db	74	;'J'
  2733  007EDA  6F                 	db	111	;'o'
  2734  007EDB  69                 	db	105	;'i'
  2735  007EDC  6E                 	db	110	;'n'
  2736  007EDD  20                 	db	32
  2737  007EDE  00                 	db	0
  2738  007EDF                     STR_24:
  2739  007EDF  4D                 	db	77	;'M'
  2740  007EE0  4F                 	db	79	;'O'
  2741  007EE1  54                 	db	84	;'T'
  2742  007EE2  45                 	db	69	;'E'
  2743  007EE3  20                 	db	32
  2744  007EE4  4D                 	db	77	;'M'
  2745  007EE5  6F                 	db	111	;'o'
  2746  007EE6  64                 	db	100	;'d'
  2747  007EE7  65                 	db	101	;'e'
  2748  007EE8  00                 	db	0
  2749  007EE9                     STR_64:
  2750  007EE9  4F                 	db	79	;'O'
  2751  007EEA  54                 	db	84	;'T'
  2752  007EEB  41                 	db	65	;'A'
  2753  007EEC  41                 	db	65	;'A'
  2754  007EED  20                 	db	32
  2755  007EEE  4A                 	db	74	;'J'
  2756  007EEF  6F                 	db	111	;'o'
  2757  007EF0  69                 	db	105	;'i'
  2758  007EF1  6E                 	db	110	;'n'
  2759  007EF2  00                 	db	0
  2760  007EF3                     STR_52:
  2761  007EF3  6D                 	db	109	;'m'
  2762  007EF4  61                 	db	97	;'a'
  2763  007EF5  63                 	db	99	;'c'
  2764  007EF6  20                 	db	32
  2765  007EF7  72                 	db	114	;'r'
  2766  007EF8  65                 	db	101	;'e'
  2767  007EF9  73                 	db	115	;'s'
  2768  007EFA  65                 	db	101	;'e'
  2769  007EFB  74                 	db	116	;'t'
  2770  007EFC  00                 	db	0
  2771  007EFD                     STR_30:
  2772  007EFD  73                 	db	115	;'s'
  2773  007EFE  79                 	db	121	;'y'
  2774  007EFF  73                 	db	115	;'s'
  2775  007F00  20                 	db	32
  2776  007F01  72                 	db	114	;'r'
  2777  007F02  65                 	db	101	;'e'
  2778  007F03  73                 	db	115	;'s'
  2779  007F04  65                 	db	101	;'e'
  2780  007F05  74                 	db	116	;'t'
  2781  007F06  00                 	db	0
  2782  007F07                     STR_16:
  2783  007F07  4C                 	db	76	;'L'
  2784  007F08  45                 	db	69	;'E'
  2785  007F09  44                 	db	68	;'D'
  2786  007F0A  20                 	db	32
  2787  007F0B  54                 	db	84	;'T'
  2788  007F0C  65                 	db	101	;'e'
  2789  007F0D  73                 	db	115	;'s'
  2790  007F0E  74                 	db	116	;'t'
  2791  007F0F  3A                 	db	58	;':'
  2792  007F10  00                 	db	0
  2793  007F11                     STR_190:
  2794  007F11  43                 	db	67	;'C'
  2795  007F12  44                 	db	68	;'D'
  2796  007F13  43                 	db	67	;'C'
  2797  007F14  20                 	db	32
  2798  007F15  4D                 	db	77	;'M'
  2799  007F16  6F                 	db	111	;'o'
  2800  007F17  64                 	db	100	;'d'
  2801  007F18  65                 	db	101	;'e'
  2802  007F19  00                 	db	0
  2803  007F1A                     STR_47:
  2804  007F1A  52                 	db	82	;'R'
  2805  007F1B  65                 	db	101	;'e'
  2806  007F1C  71                 	db	113	;'q'
  2807  007F1D  75                 	db	117	;'u'
  2808  007F1E  69                 	db	105	;'i'
  2809  007F1F  72                 	db	114	;'r'
  2810  007F20  65                 	db	101	;'e'
  2811  007F21  64                 	db	100	;'d'
  2812  007F22  00                 	db	0
  2813  007F23                     STR_49:
  2814  007F23  61                 	db	97	;'a'
  2815  007F24  63                 	db	99	;'c'
  2816  007F25  63                 	db	99	;'c'
  2817  007F26  65                 	db	101	;'e'
  2818  007F27  70                 	db	112	;'p'
  2819  007F28  74                 	db	116	;'t'
  2820  007F29  65                 	db	101	;'e'
  2821  007F2A  64                 	db	100	;'d'
  2822  007F2B  00                 	db	0
  2823  007F2C                     STR_176:
  2824  007F2C  6D                 	db	109	;'m'
  2825  007F2D  61                 	db	97	;'a'
  2826  007F2E  63                 	db	99	;'c'
  2827  007F2F  20                 	db	32
  2828  007F30  73                 	db	115	;'s'
  2829  007F31  61                 	db	97	;'a'
  2830  007F32  76                 	db	118	;'v'
  2831  007F33  65                 	db	101	;'e'
  2832  007F34  00                 	db	0
  2833  007F35                     STR_25:
  2834  007F35  53                 	db	83	;'S'
  2835  007F36  74                 	db	116	;'t'
  2836  007F37  61                 	db	97	;'a'
  2837  007F38  72                 	db	114	;'r'
  2838  007F39  74                 	db	116	;'t'
  2839  007F3A  69                 	db	105	;'i'
  2840  007F3B  6E                 	db	110	;'n'
  2841  007F3C  67                 	db	103	;'g'
  2842  007F3D  00                 	db	0
  2843  007F3E                     STR_4:
  2844  007F3E  4D                 	db	77	;'M'
  2845  007F3F  6F                 	db	111	;'o'
  2846  007F40  54                 	db	84	;'T'
  2847  007F41  65                 	db	101	;'e'
  2848  007F42  20                 	db	32
  2849  007F43  76                 	db	118	;'v'
  2850  007F44  20                 	db	32
  2851  007F45  2E                 	db	46
  2852  007F46  00                 	db	0
  2853  007F47                     STR_9:
  2854  007F47  32                 	db	50	;'2'
  2855  007F48  33                 	db	51	;'3'
  2856  007F49  3A                 	db	58	;':'
  2857  007F4A  31                 	db	49	;'1'
  2858  007F4B  30                 	db	48	;'0'
  2859  007F4C  3A                 	db	58	;':'
  2860  007F4D  35                 	db	53	;'5'
  2861  007F4E  35                 	db	53	;'5'
  2862  007F4F  00                 	db	0
  2863  007F50  52                 	db	82	;'R'
  2864  007F51  46                 	db	70	;'F'
  2865  007F52  20                 	db	32
  2866  007F53  54                 	db	84	;'T'
  2867  007F54  65                 	db	101	;'e'
  2868  007F55  73                 	db	115	;'s'
  2869  007F56  74                 	db	116	;'t'
  2870  007F57  3A                 	db	58	;':'
  2871  007F58  00                 	db	0
  2872  007F59                     STR_17:
  2873  007F59  41                 	db	65	;'A'
  2874  007F5A  44                 	db	68	;'D'
  2875  007F5B  43                 	db	67	;'C'
  2876  007F5C  20                 	db	32
  2877  007F5D  54                 	db	84	;'T'
  2878  007F5E  65                 	db	101	;'e'
  2879  007F5F  73                 	db	115	;'s'
  2880  007F60  74                 	db	116	;'t'
  2881  007F61  00                 	db	0
  2882  007F62                     STR_191:
  2883  007F62  43                 	db	67	;'C'
  2884  007F63  6F                 	db	111	;'o'
  2885  007F64  6D                 	db	109	;'m'
  2886  007F65  6D                 	db	109	;'m'
  2887  007F66  61                 	db	97	;'a'
  2888  007F67  6E                 	db	110	;'n'
  2889  007F68  64                 	db	100	;'d'
  2890  007F69  00                 	db	0
  2891  007F6A                     STR_18:
  2892  007F6A  54                 	db	84	;'T'
  2893  007F6B  65                 	db	101	;'e'
  2894  007F6C  6D                 	db	109	;'m'
  2895  007F6D  70                 	db	112	;'p'
  2896  007F6E  20                 	db	32
  2897  007F6F  20                 	db	32
  2898  007F70  3D                 	db	61	;'='
  2899  007F71  00                 	db	0
  2900  007F72                     STR_19:
  2901  007F72  4C                 	db	76	;'L'
  2902  007F73  69                 	db	105	;'i'
  2903  007F74  67                 	db	103	;'g'
  2904  007F75  68                 	db	104	;'h'
  2905  007F76  74                 	db	116	;'t'
  2906  007F77  20                 	db	32
  2907  007F78  3D                 	db	61	;'='
  2908  007F79  00                 	db	0
  2909  007F7A                     STR_120:
  2910  007F7A  54                 	db	84	;'T'
  2911  007F7B  65                 	db	101	;'e'
  2912  007F7C  6D                 	db	109	;'m'
  2913  007F7D  70                 	db	112	;'p'
  2914  007F7E  20                 	db	32
  2915  007F7F  3A                 	db	58	;':'
  2916  007F80  00                 	db	0
  2917  007F81                     STR_119:
  2918  007F81  4C                 	db	76	;'L'
  2919  007F82  69                 	db	105	;'i'
  2920  007F83  67                 	db	103	;'g'
  2921  007F84  68                 	db	104	;'h'
  2922  007F85  74                 	db	116	;'t'
  2923  007F86  3A                 	db	58	;':'
  2924  007F87  00                 	db	0
  2925  007F88                     STR_124:
  2926  007F88  45                 	db	69	;'E'
  2927  007F89  76                 	db	118	;'v'
  2928  007F8A  65                 	db	101	;'e'
  2929  007F8B  72                 	db	114	;'r'
  2930  007F8C  79                 	db	121	;'y'
  2931  007F8D  3A                 	db	58	;':'
  2932  007F8E  00                 	db	0
  2933  007F8F                     STR_65:
  2934  007F8F  44                 	db	68	;'D'
  2935  007F90  65                 	db	101	;'e'
  2936  007F91  6E                 	db	110	;'n'
  2937  007F92  69                 	db	105	;'i'
  2938  007F93  65                 	db	101	;'e'
  2939  007F94  64                 	db	100	;'d'
  2940  007F95  00                 	db	0
  2941  007F96                     STR_63:
  2942  007F96  64                 	db	100	;'d'
  2943  007F97  65                 	db	101	;'e'
  2944  007F98  6E                 	db	110	;'n'
  2945  007F99  69                 	db	105	;'i'
  2946  007F9A  65                 	db	101	;'e'
  2947  007F9B  64                 	db	100	;'d'
  2948  007F9C  00                 	db	0
  2949  007F9D                     STR_100:
  2950  007F9D  6E                 	db	110	;'n'
  2951  007F9E  6F                 	db	111	;'o'
  2952  007F9F  5F                 	db	95	;'_'
  2953  007FA0  66                 	db	102	;'f'
  2954  007FA1  72                 	db	114	;'r'
  2955  007FA2  65                 	db	101	;'e'
  2956  007FA3  00                 	db	0
  2957  007FA4                     STR_98:
  2958  007FA4  6D                 	db	109	;'m'
  2959  007FA5  61                 	db	97	;'a'
  2960  007FA6  63                 	db	99	;'c'
  2961  007FA7  5F                 	db	95	;'_'
  2962  007FA8  65                 	db	101	;'e'
  2963  007FA9  72                 	db	114	;'r'
  2964  007FAA  00                 	db	0
  2965  007FAB                     STR_93:
  2966  007FAB  6D                 	db	109	;'m'
  2967  007FAC  61                 	db	97	;'a'
  2968  007FAD  63                 	db	99	;'c'
  2969  007FAE  5F                 	db	95	;'_'
  2970  007FAF  72                 	db	114	;'r'
  2971  007FB0  78                 	db	120	;'x'
  2972  007FB1  00                 	db	0
  2973  007FB2                     STR_96:
  2974  007FB2  6D                 	db	109	;'m'
  2975  007FB3  61                 	db	97	;'a'
  2976  007FB4  63                 	db	99	;'c'
  2977  007FB5  5F                 	db	95	;'_'
  2978  007FB6  74                 	db	116	;'t'
  2979  007FB7  78                 	db	120	;'x'
  2980  007FB8  00                 	db	0
  2981  007FB9                     STR_31:
  2982  007FB9  52                 	db	82	;'R'
  2983  007FBA  4E                 	db	78	;'N'
  2984  007FBB  32                 	db	50	;'2'
  2985  007FBC  34                 	db	52	;'4'
  2986  007FBD  00                 	db	0
  2987  007FBE                     STR_35:
  2988  007FBE  52                 	db	82	;'R'
  2989  007FBF  4E                 	db	78	;'N'
  2990  007FC0  32                 	db	50	;'2'
  2991  007FC1  39                 	db	57	;'9'
  2992  007FC2  00                 	db	0
  2993  007FC3                     STR_125:
  2994  007FC3  4D                 	db	77	;'M'
  2995  007FC4  69                 	db	105	;'i'
  2996  007FC5  6E                 	db	110	;'n'
  2997  007FC6  73                 	db	115	;'s'
  2998  007FC7  00                 	db	0
  2999  007FC8                     STR_141:
  3000  007FC8  20                 	db	32
  3001  007FC9  30                 	db	48	;'0'
  3002  007FCA  20                 	db	32
  3003  007FCB  00                 	db	0
  3004  007FCC                     STR_142:
  3005  007FCC  20                 	db	32
  3006  007FCD  31                 	db	49	;'1'
  3007  007FCE  20                 	db	32
  3008  007FCF  00                 	db	0
  3009  007FD0                     STR_143:
  3010  007FD0  20                 	db	32
  3011  007FD1  32                 	db	50	;'2'
  3012  007FD2  20                 	db	32
  3013  007FD3  00                 	db	0
  3014  007FD4                     STR_144:
  3015  007FD4  20                 	db	32
  3016  007FD5  33                 	db	51	;'3'
  3017  007FD6  20                 	db	32
  3018  007FD7  00                 	db	0
  3019  007FD8                     STR_145:
  3020  007FD8  20                 	db	32
  3021  007FD9  34                 	db	52	;'4'
  3022  007FDA  20                 	db	32
  3023  007FDB  00                 	db	0
  3024  007FDC                     STR_146:
  3025  007FDC  20                 	db	32
  3026  007FDD  35                 	db	53	;'5'
  3027  007FDE  20                 	db	32
  3028  007FDF  00                 	db	0
  3029  007FE0                     STR_149:
  3030  007FE0  20                 	db	32
  3031  007FE1  31                 	db	49	;'1'
  3032  007FE2  30                 	db	48	;'0'
  3033  007FE3  00                 	db	0
  3034  007FE4                     STR_151:
  3035  007FE4  20                 	db	32
  3036  007FE5  33                 	db	51	;'3'
  3037  007FE6  30                 	db	48	;'0'
  3038  007FE7  00                 	db	0
  3039  007FE8                     STR_152:
  3040  007FE8  20                 	db	32
  3041  007FE9  36                 	db	54	;'6'
  3042  007FEA  30                 	db	48	;'0'
  3043  007FEB  00                 	db	0
  3044  007FEC                     STR_150:
  3045  007FEC  20                 	db	32
  3046  007FED  31                 	db	49	;'1'
  3047  007FEE  35                 	db	53	;'5'
  3048  007FEF  00                 	db	0
  3049  007FF0                     STR_131:
  3050  007FF0  4F                 	db	79	;'O'
  3051  007FF1  46                 	db	70	;'F'
  3052  007FF2  46                 	db	70	;'F'
  3053  007FF3  00                 	db	0
  3054  007FF4                     STR_147:
  3055  007FF4  41                 	db	65	;'A'
  3056  007FF5  44                 	db	68	;'D'
  3057  007FF6  52                 	db	82	;'R'
  3058  007FF7  00                 	db	0
  3059  007FF8                     STR_44:
  3060  007FF8  6F                 	db	111	;'o'
  3061  007FF9  6B                 	db	107	;'k'
  3062  007FFA  00                 	db	0
  3063  007FFB                     STR_121:
  3064  007FFB  43                 	db	67	;'C'
  3065  007FFC  00                 	db	0
  3066  007FFD                     STR_21:
  3067  007FFD  7A                 	db	122	;'z'
  3068  007FFE  00                 	db	0
  3069  0000                     
  3070                           ; #config settings
  3071  007FFF  00                 	db	0	; dummy byte at the end
  3072  0000                     
  3073                           	psect	cinit
  3074  0048D6                     __pcinit:
  3075                           	opt stack 0
  3076  0048D6                     start_initialization:
  3077                           	opt stack 0
  3078  0048D6                     __initialization:
  3079                           	opt stack 0
  3080                           
  3081                           ; Initialize objects allocated to BANK1 (3 bytes)
  3082                           ; load TBLPTR registers with __pidataBANK1
  3083  0048D6  0EC0               	movlw	low __pidataBANK1
  3084  0048D8  6EF6               	movwf	tblptrl,c
  3085  0048DA  0E64               	movlw	high __pidataBANK1
  3086  0048DC  6EF7               	movwf	tblptrh,c
  3087  0048DE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3088  0048E0  6EF8               	movwf	tblptru,c
  3089  0048E2  0009               	tblrd		*+	;fetch initializer
  3090  0048E4  CFF5 F1F6          	movff	tablat,__pdataBANK1
  3091  0048E8  0009               	tblrd		*+	;fetch initializer
  3092  0048EA  CFF5 F1F7          	movff	tablat,__pdataBANK1+1
  3093  0048EE  0009               	tblrd		*+	;fetch initializer
  3094  0048F0  CFF5 F1F8          	movff	tablat,__pdataBANK1+2
  3095                           
  3096                           ; Initialize objects allocated to BANK0 (6 bytes)
  3097                           ; load TBLPTR registers with __pidataBANK0
  3098  0048F4  0E80               	movlw	low __pidataBANK0
  3099  0048F6  6EF6               	movwf	tblptrl,c
  3100  0048F8  0E64               	movlw	high __pidataBANK0
  3101  0048FA  6EF7               	movwf	tblptrh,c
  3102  0048FC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3103  0048FE  6EF8               	movwf	tblptru,c
  3104  004900  EE00  F0FA         	lfsr	0,__pdataBANK0
  3105  004904  EE10 F006          	lfsr	1,6
  3106  004908                     copy_data0:
  3107  004908  0009               	tblrd		*+
  3108  00490A  CFF5 FFEE          	movff	tablat,postinc0
  3109  00490E  50E5               	movf	postdec1,w,c
  3110  004910  50E1               	movf	fsr1l,w,c
  3111  004912  E1FA               	bnz	copy_data0
  3112                           
  3113                           ; Initialize objects allocated to COMRAM (2 bytes)
  3114                           ; load TBLPTR registers with __pidataCOMRAM
  3115  004914  0EC3               	movlw	low __pidataCOMRAM
  3116  004916  6EF6               	movwf	tblptrl,c
  3117  004918  0E64               	movlw	high __pidataCOMRAM
  3118  00491A  6EF7               	movwf	tblptrh,c
  3119  00491C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3120  00491E  6EF8               	movwf	tblptru,c
  3121  004920  0009               	tblrd		*+	;fetch initializer
  3122  004922  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  3123  004926  0009               	tblrd		*+	;fetch initializer
  3124  004928  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
  3125                           
  3126                           ; Clear objects allocated to BANK7 (200 bytes)
  3127  00492C  EE07  F000         	lfsr	0,__pbssBANK7
  3128  004930  0EC8               	movlw	200
  3129  004932                     clear_0:
  3130  004932  6AEE               	clrf	postinc0,c
  3131  004934  06E8               	decf	wreg,f,c
  3132  004936  E1FD               	bnz	clear_0
  3133                           
  3134                           ; Clear objects allocated to BANK6 (200 bytes)
  3135  004938  EE06  F000         	lfsr	0,__pbssBANK6
  3136  00493C  0EC8               	movlw	200
  3137  00493E                     clear_1:
  3138  00493E  6AEE               	clrf	postinc0,c
  3139  004940  06E8               	decf	wreg,f,c
  3140  004942  E1FD               	bnz	clear_1
  3141                           
  3142                           ; Clear objects allocated to BANK3 (64 bytes)
  3143  004944  EE03  F000         	lfsr	0,__pbssBANK3
  3144  004948  0E40               	movlw	64
  3145  00494A                     clear_2:
  3146  00494A  6AEE               	clrf	postinc0,c
  3147  00494C  06E8               	decf	wreg,f,c
  3148  00494E  E1FD               	bnz	clear_2
  3149                           
  3150                           ; Clear objects allocated to BANK2 (224 bytes)
  3151  004950  EE02  F000         	lfsr	0,__pbssBANK2
  3152  004954  0EE0               	movlw	224
  3153  004956                     clear_3:
  3154  004956  6AEE               	clrf	postinc0,c
  3155  004958  06E8               	decf	wreg,f,c
  3156  00495A  E1FD               	bnz	clear_3
  3157                           
  3158                           ; Clear objects allocated to BANK1 (246 bytes)
  3159  00495C  EE01  F000         	lfsr	0,__pbssBANK1
  3160  004960  0EF6               	movlw	246
  3161  004962                     clear_4:
  3162  004962  6AEE               	clrf	postinc0,c
  3163  004964  06E8               	decf	wreg,f,c
  3164  004966  E1FD               	bnz	clear_4
  3165                           
  3166                           ; Clear objects allocated to BANK0 (58 bytes)
  3167  004968  EE00  F0C0         	lfsr	0,__pbssBANK0
  3168  00496C  0E3A               	movlw	58
  3169  00496E                     clear_5:
  3170  00496E  6AEE               	clrf	postinc0,c
  3171  004970  06E8               	decf	wreg,f,c
  3172  004972  E1FD               	bnz	clear_5
  3173                           
  3174                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3175  004974  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3176                           
  3177                           ; Clear objects allocated to COMRAM (41 bytes)
  3178  004976  EE00  F032         	lfsr	0,__pbssCOMRAM
  3179  00497A  0E29               	movlw	41
  3180  00497C                     clear_6:
  3181  00497C  6AEE               	clrf	postinc0,c
  3182  00497E  06E8               	decf	wreg,f,c
  3183  004980  E1FD               	bnz	clear_6
  3184  004982                     end_of_initialization:
  3185                           	opt stack 0
  3186  004982                     __end_of__initialization:
  3187                           	opt stack 0
  3188  004982  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3189  004984  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3190  004986  0100               	movlb	0
  3191  004988  EF1E  F018         	goto	_main	;jump to C main() function
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           postinc0	equ	0xFEE
  3197                           wreg	equ	0xFE8
  3198                           postdec1	equ	0xFE5
  3199                           fsr1l	equ	0xFE1
  3200                           
  3201                           	psect	bitbssCOMRAM
  3202  0002E8                     __pbitbssCOMRAM:
  3203                           	opt stack 0
  3204  0002E8                     _log:
  3205                           	opt stack 0
  3206  0002E8                     	ds	1
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           postinc0	equ	0xFEE
  3212                           wreg	equ	0xFE8
  3213                           postdec1	equ	0xFE5
  3214                           fsr1l	equ	0xFE1
  3215                           
  3216                           	psect	bssCOMRAM
  3217  000032                     __pbssCOMRAM:
  3218                           	opt stack 0
  3219  000032                     _pBDTEntryEP0OutNext:
  3220                           	opt stack 0
  3221  000032                     	ds	2
  3222  000034                     _pBDTEntryEP0OutCurrent:
  3223                           	opt stack 0
  3224  000034                     	ds	2
  3225  000036                     _timer3ReloadVal:
  3226                           	opt stack 0
  3227  000036                     	ds	2
  3228  000038                     _timer1ReloadVal:
  3229                           	opt stack 0
  3230  000038                     	ds	2
  3231  00003A                     _timerMinTickCount:
  3232                           	opt stack 0
  3233  00003A                     	ds	2
  3234  00003C                     USBapp_LEDUpdateStatus@ledCount:
  3235                           	opt stack 0
  3236  00003C                     	ds	2
  3237  00003E                     _cdc_mem_type:
  3238                           	opt stack 0
  3239  00003E                     	ds	1
  3240  00003F                     _USBDeferOUTDataStagePackets:
  3241                           	opt stack 0
  3242  00003F                     	ds	1
  3243  000040                     _USBDeferINDataStagePackets:
  3244                           	opt stack 0
  3245  000040                     	ds	1
  3246  000041                     _USBStatusStageEnabledFlag2:
  3247                           	opt stack 0
  3248  000041                     	ds	1
  3249  000042                     _USBStatusStageEnabledFlag1:
  3250                           	opt stack 0
  3251  000042                     	ds	1
  3252  000043                     _USBDeferStatusStagePacket:
  3253                           	opt stack 0
  3254  000043                     	ds	1
  3255  000044                     _USBStatusStageTimeoutCounter:
  3256                           	opt stack 0
  3257  000044                     	ds	1
  3258  000045                     _BothEP0OutUOWNsSet:
  3259                           	opt stack 0
  3260  000045                     	ds	1
  3261  000046                     _endpoint_number:
  3262                           	opt stack 0
  3263  000046                     	ds	1
  3264  000047                     _RemoteWakeup:
  3265                           	opt stack 0
  3266  000047                     	ds	1
  3267  000048                     _controlTransferState:
  3268                           	opt stack 0
  3269  000048                     	ds	1
  3270  000049                     _shortPacketStatus:
  3271                           	opt stack 0
  3272  000049                     	ds	1
  3273  00004A                     printfOled@lastValue:
  3274                           	opt stack 0
  3275  00004A                     	ds	1
  3276  00004B                     _countBitsSilent:
  3277                           	opt stack 0
  3278  00004B                     	ds	1
  3279  00004C                     _rx_data:
  3280                           	opt stack 0
  3281  00004C                     	ds	1
  3282  00004D                     _status:
  3283                           	opt stack 0
  3284  00004D                     	ds	1
  3285  00004E                     service_pushbutton@Release_Timer:
  3286                           	opt stack 0
  3287  00004E                     	ds	1
  3288  00004F                     _usbState:
  3289                           	opt stack 0
  3290  00004F                     	ds	1
  3291  000050                     _lightStringSize:
  3292                           	opt stack 0
  3293  000050                     	ds	1
  3294  000051                     _rnModule:
  3295                           	opt stack 0
  3296  000051                     	ds	1
  3297  000052                     _sleepTicker:
  3298                           	opt stack 0
  3299  000052                     	ds	1
  3300  000053                     _activeState:
  3301                           	opt stack 0
  3302  000053                     	ds	1
  3303  000054                     _powerOnStatus:
  3304                           	opt stack 0
  3305  000054                     	ds	1
  3306  000055                     _mainState:
  3307                           	opt stack 0
  3308  000055                     	ds	1
  3309  000056                     _USBAlternateInterface:
  3310                           	opt stack 0
  3311  000056                     	ds	2
  3312  000058                     _USTATcopy:
  3313                           	opt stack 0
  3314  000058                     	ds	1
  3315  000059                     _USBActiveConfiguration:
  3316                           	opt stack 0
  3317  000059                     	ds	1
  3318  00005A                     _n_bit:
  3319                           	opt stack 0
  3320  00005A                     	ds	1
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           
  3330                           	psect	dataCOMRAM
  3331  00005B                     __pdataCOMRAM:
  3332                           	opt stack 0
  3333  00005B                     _Contrast_level:
  3334                           	opt stack 0
  3335  00005B                     	ds	1
  3336  00005C                     _periodicTimerValue:
  3337                           	opt stack 0
  3338  00005C                     	ds	1
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           postdec1	equ	0xFE5
  3346                           fsr1l	equ	0xFE1
  3347                           
  3348                           	psect	bssBANK0
  3349  0000C0                     __pbssBANK0:
  3350                           	opt stack 0
  3351  0000C0                     _outPipes:
  3352                           	opt stack 0
  3353  0000C0                     	ds	8
  3354  0000C8                     _inPipes:
  3355                           	opt stack 0
  3356  0000C8                     	ds	6
  3357  0000CE                     _pBDTEntryIn:
  3358                           	opt stack 0
  3359  0000CE                     	ds	6
  3360  0000D4                     _ep_data_out:
  3361                           	opt stack 0
  3362  0000D4                     	ds	3
  3363  0000D7                     _ep_data_in:
  3364                           	opt stack 0
  3365  0000D7                     	ds	3
  3366  0000DA                     _CDCDataOutHandle:
  3367                           	opt stack 0
  3368  0000DA                     	ds	2
  3369  0000DC                     _timerMsTickCount:
  3370                           	opt stack 0
  3371  0000DC                     	ds	2
  3372  0000DE                     _temperature:
  3373                           	opt stack 0
  3374  0000DE                     	ds	2
  3375  0000E0                     _cdc_tx_len:
  3376                           	opt stack 0
  3377  0000E0                     	ds	1
  3378  0000E1                     _cdc_rx_len:
  3379                           	opt stack 0
  3380  0000E1                     	ds	1
  3381  0000E2                     _eusartRxTail:
  3382                           	opt stack 0
  3383  0000E2                     	ds	1
  3384  0000E3                     _eusartRxHead:
  3385                           	opt stack 0
  3386  0000E3                     	ds	1
  3387  0000E4                     _eusartTxBufferRemaining:
  3388                           	opt stack 0
  3389  0000E4                     	ds	1
  3390  0000E5                     _eusartTxTail:
  3391                           	opt stack 0
  3392  0000E5                     	ds	1
  3393  0000E6                     _eusartTxHead:
  3394                           	opt stack 0
  3395  0000E6                     	ds	1
  3396  0000E7                     _countIn:
  3397                           	opt stack 0
  3398  0000E7                     	ds	1
  3399  0000E8                     _countOut:
  3400                           	opt stack 0
  3401  0000E8                     	ds	1
  3402  0000E9                     _RS232cp:
  3403                           	opt stack 0
  3404  0000E9                     	ds	1
  3405  0000EA                     _LastRS232Out:
  3406                           	opt stack 0
  3407  0000EA                     	ds	1
  3408  0000EB                     _RS232_Out_Data_Rdy:
  3409                           	opt stack 0
  3410  0000EB                     	ds	1
  3411  0000EC                     _NextUSBOut:
  3412                           	opt stack 0
  3413  0000EC                     	ds	1
  3414  0000ED                     _rxByteFlag:
  3415                           	opt stack 0
  3416  0000ED                     	ds	1
  3417  0000EE                     _cdc_trf_state:
  3418                           	opt stack 0
  3419  0000EE                     	ds	1
  3420  0000EF                     _USBDeviceState:
  3421                           	opt stack 0
  3422  0000EF                     	ds	1
  3423  0000F0                     _lengthDataGPS:
  3424                           	opt stack 0
  3425  0000F0                     	ds	1
  3426  0000F1                     _countSearchFrameGPS:
  3427                           	opt stack 0
  3428  0000F1                     	ds	1
  3429  0000F2                     _secTicker:
  3430                           	opt stack 0
  3431  0000F2                     	ds	1
  3432  0000F3                     _randomPortNum:
  3433                           	opt stack 0
  3434  0000F3                     	ds	1
  3435  0000F4                     _moduleBufferIndex:
  3436                           	opt stack 0
  3437  0000F4                     	ds	1
  3438  0000F5                     _statusSSFG:
  3439                           	opt stack 0
  3440  0000F5                     	ds	1
  3441  0000F6                     _runningState:
  3442                           	opt stack 0
  3443  0000F6                     	ds	1
  3444  0000F7                     _eusartRxCount:
  3445                           	opt stack 0
  3446  0000F7                     	ds	1
  3447  0000F8                     _operationType:
  3448                           	opt stack 0
  3449  0000F8                     	ds	1
  3450  0000F9                     _appTimer:
  3451                           	opt stack 0
  3452  0000F9                     	ds	1
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           postdec1	equ	0xFE5
  3460                           fsr1l	equ	0xFE1
  3461                           
  3462                           	psect	dataBANK0
  3463  0000FA                     __pdataBANK0:
  3464                           	opt stack 0
  3465  0000FA                     _exitUSB:
  3466                           	opt stack 0
  3467  0000FA                     	ds	1
  3468  0000FB                     _periodicState:
  3469                           	opt stack 0
  3470  0000FB                     	ds	1
  3471  0000FC                     _menuTimeout:
  3472                           	opt stack 0
  3473  0000FC                     	ds	1
  3474  0000FD                     _dataRateValue:
  3475                           	opt stack 0
  3476  0000FD                     	ds	1
  3477  0000FE                     _periodicUpValue:
  3478                           	opt stack 0
  3479  0000FE                     	ds	1
  3480  0000FF                     _moteState:
  3481                           	opt stack 0
  3482  0000FF                     	ds	1
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           postdec1	equ	0xFE5
  3490                           fsr1l	equ	0xFE1
  3491                           
  3492                           	psect	bssBANK1
  3493  000100                     __pbssBANK1:
  3494                           	opt stack 0
  3495  000100                     _pBDTEntryOut:
  3496                           	opt stack 0
  3497  000100                     	ds	6
  3498  000106                     _BaudRateGen:
  3499                           	opt stack 0
  3500  000106                     	ds	4
  3501  00010A                     service_pushbutton@PB_Timer:
  3502                           	opt stack 0
  3503  00010A                     	ds	4
  3504  00010E                     _pCDCDst:
  3505                           	opt stack 0
  3506  00010E                     	ds	3
  3507  000111                     _pCDCSrc:
  3508                           	opt stack 0
  3509  000111                     	ds	3
  3510  000114                     _CDCDataInHandle:
  3511                           	opt stack 0
  3512  000114                     	ds	2
  3513  000116                     _pDst:
  3514                           	opt stack 0
  3515  000116                     	ds	2
  3516  000118                     _timer0ReloadVal:
  3517                           	opt stack 0
  3518  000118                     	ds	2
  3519  00011A                     _m10SecTicker:
  3520                           	opt stack 0
  3521  00011A                     	ds	2
  3522  00011C                     _light:
  3523                           	opt stack 0
  3524  00011C                     	ds	2
  3525  00011E                     _control_signal_bitmap:
  3526                           	opt stack 0
  3527  00011E                     	ds	1
  3528  00011F                     _USBBusIsSuspended:
  3529                           	opt stack 0
  3530  00011F                     	ds	1
  3531  000120                     _cs:
  3532                           	opt stack 0
  3533  000120                     	ds	1
  3534  000121                     _stops:
  3535                           	opt stack 0
  3536  000121                     	ds	1
  3537  000122                     _parity:
  3538                           	opt stack 0
  3539  000122                     	ds	1
  3540  000123                     	ds	1
  3541  000124                     	ds	1
  3542  000125                     _minTicker:
  3543                           	opt stack 0
  3544  000125                     	ds	1
  3545  000126                     	ds	1
  3546  000127                     	ds	1
  3547  000128                     _responseReady:
  3548                           	opt stack 0
  3549  000128                     	ds	1
  3550  000129                     	ds	1
  3551  00012A                     _moteModeState:
  3552                           	opt stack 0
  3553  00012A                     	ds	1
  3554  00012B                     _appState:
  3555                           	opt stack 0
  3556  00012B                     	ds	1
  3557  00012C                     _dataBuffer:
  3558                           	opt stack 0
  3559  00012C                     	ds	100
  3560  000190                     _moduleResonseBuffer:
  3561                           	opt stack 0
  3562  000190                     	ds	64
  3563  0001D0                     _cdc_notice:
  3564                           	opt stack 0
  3565  0001D0                     	ds	10
  3566  0001DA                     _dummy_encapsulated_cmd_response:
  3567                           	opt stack 0
  3568  0001DA                     	ds	8
  3569  0001E2                     _line_coding:
  3570                           	opt stack 0
  3571  0001E2                     	ds	7
  3572  0001E9                     _clearLight:
  3573                           	opt stack 0
  3574  0001E9                     	ds	5
  3575  0001EE                     _storedLight:
  3576                           	opt stack 0
  3577  0001EE                     	ds	5
  3578  0001F3                     _responsePortNum:
  3579                           	opt stack 0
  3580  0001F3                     	ds	3
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           postdec1	equ	0xFE5
  3588                           fsr1l	equ	0xFE1
  3589                           
  3590                           	psect	dataBANK1
  3591  0001F6                     __pdataBANK1:
  3592                           	opt stack 0
  3593  0001F6                     _selectedFont:
  3594                           	opt stack 0
  3595  0001F6                     	ds	2
  3596  0001F8                     	ds	1
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1l	equ	0xFE1
  3605                           
  3606                           	psect	bssBANK2
  3607  000200                     __pbssBANK2:
  3608                           	opt stack 0
  3609  000200                     _eusartRxBuffer:
  3610                           	opt stack 0
  3611  000200                     	ds	64
  3612  000240                     	ds	32
  3613  000260                     	ds	16
  3614  000270                     _responseId:
  3615                           	opt stack 0
  3616  000270                     	ds	16
  3617  000280                     _USB_Buffer:
  3618                           	opt stack 0
  3619  000280                     	ds	64
  3620  0002C0                     _responseData:
  3621                           	opt stack 0
  3622  0002C0                     	ds	32
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           postinc0	equ	0xFEE
  3628                           wreg	equ	0xFE8
  3629                           postdec1	equ	0xFE5
  3630                           fsr1l	equ	0xFE1
  3631                           
  3632                           	psect	bssBANK3
  3633  000300                     __pbssBANK3:
  3634                           	opt stack 0
  3635  000300                     _eusartTxBuffer:
  3636                           	opt stack 0
  3637  000300                     	ds	64
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           postinc0	equ	0xFEE
  3643                           wreg	equ	0xFE8
  3644                           postdec1	equ	0xFE5
  3645                           fsr1l	equ	0xFE1
  3646                           
  3647                           	psect	bssBANK6
  3648  000600                     __pbssBANK6:
  3649                           	opt stack 0
  3650  000600                     _dataFrameGPS:
  3651                           	opt stack 0
  3652  000600                     	ds	200
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postdec1	equ	0xFE5
  3660                           fsr1l	equ	0xFE1
  3661                           
  3662                           	psect	bssBANK7
  3663  000700                     __pbssBANK7:
  3664                           	opt stack 0
  3665  000700                     _buffer_rx:
  3666                           	opt stack 0
  3667  000700                     	ds	200
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           postinc0	equ	0xFEE
  3673                           wreg	equ	0xFE8
  3674                           postdec1	equ	0xFE5
  3675                           fsr1l	equ	0xFE1
  3676                           
  3677                           	psect	cstackBANK0
  3678  000060                     __pcstackBANK0:
  3679                           	opt stack 0
  3680  000060                     ??_TMR1_Initialize:
  3681  000060                     ?_strncmp:
  3682                           	opt stack 0
  3683  000060                     ?_strcmp:
  3684                           	opt stack 0
  3685  000060                     ?_moteApp_getLightString:
  3686                           	opt stack 0
  3687  000060                     ?_USBTransferOnePacket:
  3688                           	opt stack 0
  3689  000060                     ?___wmul:
  3690                           	opt stack 0
  3691  000060                     ?___awdiv:
  3692                           	opt stack 0
  3693  000060                     ?___awmod:
  3694                           	opt stack 0
  3695  000060                     ?___lwmod:
  3696                           	opt stack 0
  3697  000060                     ?___fladd:
  3698                           	opt stack 0
  3699  000060                     ?___almod:
  3700                           	opt stack 0
  3701  000060                     ?___fltol:
  3702                           	opt stack 0
  3703  000060                     ?___xxtofl:
  3704                           	opt stack 0
  3705  000060                     MOTEapp_handlerState@state:
  3706                           	opt stack 0
  3707  000060                     MOTEapp_TimerBasedTask@timerTask:
  3708                           	opt stack 0
  3709  000060                     unhex@c:
  3710                           	opt stack 0
  3711  000060                     hexToStr@character:
  3712                           	opt stack 0
  3713  000060                     moteApp_clearBuffers@counter:
  3714                           	opt stack 0
  3715  000060                     USBapp_handlerState@state:
  3716                           	opt stack 0
  3717  000060                     USBapp_exitCDCState@usbState:
  3718                           	opt stack 0
  3719  000060                     service_pushbutton@bs:
  3720                           	opt stack 0
  3721  000060                     oled_writeCommand@command:
  3722                           	opt stack 0
  3723  000060                     oled_writeData@data:
  3724                           	opt stack 0
  3725  000060                     outFIFO@retVal:
  3726                           	opt stack 0
  3727  000060                     EUSART_Read@readValue:
  3728                           	opt stack 0
  3729  000060                     EUSART_Write@txData:
  3730                           	opt stack 0
  3731  000060                     EUSART_FlushBuffer@index:
  3732                           	opt stack 0
  3733  000060                     DATAEE_WriteByte@bData:
  3734                           	opt stack 0
  3735  000060                     DATAEE_ReadByte@bAdd:
  3736                           	opt stack 0
  3737  000060                     TMR2_ReadTimer@readVal:
  3738                           	opt stack 0
  3739  000060                     USBTransferOnePacket@dir:
  3740                           	opt stack 0
  3741  000060                     ___lbdiv@divisor:
  3742                           	opt stack 0
  3743  000060                     delayms@t:
  3744                           	opt stack 0
  3745  000060                     moteApp_delayms@length:
  3746                           	opt stack 0
  3747  000060                     oled_setFont@font:
  3748                           	opt stack 0
  3749  000060                     putUSBUSART@data:
  3750                           	opt stack 0
  3751  000060                     ___wmul@multiplier:
  3752                           	opt stack 0
  3753  000060                     ___awdiv@dividend:
  3754                           	opt stack 0
  3755  000060                     ___awmod@dividend:
  3756                           	opt stack 0
  3757  000060                     ___lwmod@dividend:
  3758                           	opt stack 0
  3759  000060                     memcpy@d1:
  3760                           	opt stack 0
  3761  000060                     memset@p1:
  3762                           	opt stack 0
  3763  000060                     strcmp@s1:
  3764                           	opt stack 0
  3765  000060                     strncmp@s1:
  3766                           	opt stack 0
  3767  000060                     ___almod@dividend:
  3768                           	opt stack 0
  3769  000060                     ___fltol@f1:
  3770                           	opt stack 0
  3771  000060                     ___fladd@b:
  3772                           	opt stack 0
  3773  000060                     ___xxtofl@val:
  3774                           	opt stack 0
  3775                           
  3776                           ; 4 bytes @ 0x0
  3777  000060                     	ds	1
  3778  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3779                           	opt stack 0
  3780  000061                     moteApp_clearBuffers@counter_1753:
  3781                           	opt stack 0
  3782  000061                     Set_Page_Address@address:
  3783                           	opt stack 0
  3784  000061                     Set_Column_Address@address:
  3785                           	opt stack 0
  3786  000061                     oled_setDisplay@displayType:
  3787                           	opt stack 0
  3788  000061                     oled_setContrastControlRegister@mod:
  3789                           	opt stack 0
  3790  000061                     oled_initialDispayLine@line:
  3791                           	opt stack 0
  3792  000061                     oled_powerControl@vol:
  3793                           	opt stack 0
  3794  000061                     oled_regulorResistorSelect@r:
  3795                           	opt stack 0
  3796  000061                     DATAEE_WriteByte@bAdd:
  3797                           	opt stack 0
  3798  000061                     ___lbdiv@dividend:
  3799                           	opt stack 0
  3800  000061                     sendCommand@string:
  3801                           	opt stack 0
  3802  000061                     sendDataCommand@string:
  3803                           	opt stack 0
  3804  000061                     USBTransferOnePacket@data:
  3805                           	opt stack 0
  3806                           
  3807                           ; 2 bytes @ 0x1
  3808  000061                     	ds	1
  3809  000062                     ??_moteApp_delayms:
  3810  000062                     ??_oled_devInit:
  3811  000062                     ??_delayms:
  3812  000062                     MOTEapp_getModuleResponse@bufferByte:
  3813                           	opt stack 0
  3814  000062                     moteApp_clearBuffers@counter_1754:
  3815                           	opt stack 0
  3816  000062                     oled_putChar@station_dot:
  3817                           	opt stack 0
  3818  000062                     DATAEE_WriteByte@GIEBitValue:
  3819                           	opt stack 0
  3820  000062                     putUSBUSART@length:
  3821                           	opt stack 0
  3822  000062                     ___lbdiv@counter:
  3823                           	opt stack 0
  3824  000062                     ___wmul@multiplicand:
  3825                           	opt stack 0
  3826  000062                     ___awdiv@divisor:
  3827                           	opt stack 0
  3828  000062                     ___awmod@divisor:
  3829                           	opt stack 0
  3830  000062                     ___lwmod@divisor:
  3831                           	opt stack 0
  3832  000062                     memcpy@s1:
  3833                           	opt stack 0
  3834  000062                     memset@c:
  3835                           	opt stack 0
  3836  000062                     strcmp@s2:
  3837                           	opt stack 0
  3838  000062                     strncmp@s2:
  3839                           	opt stack 0
  3840                           
  3841                           ; 2 bytes @ 0x2
  3842  000062                     	ds	1
  3843  000063                     ??_moteApp_toggleLeds:
  3844  000063                     ??_MOTEapp_SetDataRateSetting:
  3845  000063                     ??_moduleSleep:
  3846  000063                     ?_moteApp_getTempValue:
  3847                           	opt stack 0
  3848  000063                     moteApp_clearBuffers@counter_1755:
  3849                           	opt stack 0
  3850  000063                     oled_putChar@start_page:
  3851                           	opt stack 0
  3852  000063                     USBTransferOnePacket@len:
  3853                           	opt stack 0
  3854  000063                     ___lbdiv@quotient:
  3855                           	opt stack 0
  3856  000063                     delayms@i:
  3857                           	opt stack 0
  3858  000063                     moteApp_delayms@counter:
  3859                           	opt stack 0
  3860  000063                     sendDataCommand@appData:
  3861                           	opt stack 0
  3862                           
  3863                           ; 2 bytes @ 0x3
  3864  000063                     	ds	1
  3865  000064                     ??_oled_putChar:
  3866  000064                     ??_strcmp:
  3867  000064                     ??___fltol:
  3868  000064                     ??___xxtofl:
  3869  000064                     MOTEapp_SetDataRateSetting@dr:
  3870                           	opt stack 0
  3871  000064                     moteApp_toggleLeds@state:
  3872                           	opt stack 0
  3873  000064                     USBTransferOnePacket@ep:
  3874                           	opt stack 0
  3875  000064                     ___awdiv@counter:
  3876                           	opt stack 0
  3877  000064                     ___awmod@counter:
  3878                           	opt stack 0
  3879  000064                     ___lwmod@counter:
  3880                           	opt stack 0
  3881  000064                     ___wmul@product:
  3882                           	opt stack 0
  3883  000064                     memcpy@n:
  3884                           	opt stack 0
  3885  000064                     memset@n:
  3886                           	opt stack 0
  3887  000064                     strncmp@len:
  3888                           	opt stack 0
  3889  000064                     ___almod@divisor:
  3890                           	opt stack 0
  3891  000064                     ___fladd@a:
  3892                           	opt stack 0
  3893                           
  3894                           ; 4 bytes @ 0x4
  3895  000064                     	ds	1
  3896  000065                     sendDataCommand@dataLength:
  3897                           	opt stack 0
  3898  000065                     ___awdiv@sign:
  3899                           	opt stack 0
  3900  000065                     ___awmod@sign:
  3901                           	opt stack 0
  3902  000065                     strcmp@r:
  3903                           	opt stack 0
  3904  000065                     moduleResync@escapeCounter:
  3905                           	opt stack 0
  3906  000065                     moteApp_setSensorsInput@escapeCounter:
  3907                           	opt stack 0
  3908  000065                     moteApp_getTempValue@escapeCounter:
  3909                           	opt stack 0
  3910  000065                     USBTransferOnePacket@handle:
  3911                           	opt stack 0
  3912                           
  3913                           ; 2 bytes @ 0x5
  3914  000065                     	ds	1
  3915  000066                     ??_strncmp:
  3916  000066                     ??_sendDataCommand:
  3917  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3918                           	opt stack 0
  3919  000066                     ___awdiv@quotient:
  3920                           	opt stack 0
  3921  000066                     memcpy@d:
  3922                           	opt stack 0
  3923  000066                     memset@p:
  3924                           	opt stack 0
  3925                           
  3926                           ; 2 bytes @ 0x6
  3927  000066                     	ds	1
  3928  000067                     ??_moteApp_add8bToDataBuffer:
  3929  000067                     ??_CDCTxService:
  3930  000067                     moduleResync@escapeEvent:
  3931                           	opt stack 0
  3932  000067                     sendDataCommand@byteCount:
  3933                           	opt stack 0
  3934  000067                     getsUSBUSART@buffer:
  3935                           	opt stack 0
  3936                           
  3937                           ; 2 bytes @ 0x7
  3938  000067                     	ds	1
  3939  000068                     ??___fladd:
  3940  000068                     sendDataCommand@byteCount_1666:
  3941                           	opt stack 0
  3942  000068                     USBDeviceInit@i:
  3943                           	opt stack 0
  3944  000068                     ___almod@counter:
  3945                           	opt stack 0
  3946  000068                     ___fltol@sign1:
  3947                           	opt stack 0
  3948  000068                     ___xxtofl@sign:
  3949                           	opt stack 0
  3950  000068                     _CDCTxService$6730:
  3951                           	opt stack 0
  3952  000068                     memcpy@s:
  3953                           	opt stack 0
  3954                           
  3955                           ; 2 bytes @ 0x8
  3956  000068                     	ds	1
  3957  000069                     moteApp_add8bToDataBuffer@number:
  3958                           	opt stack 0
  3959  000069                     getsUSBUSART@len:
  3960                           	opt stack 0
  3961  000069                     ___almod@sign:
  3962                           	opt stack 0
  3963  000069                     ___fltol@exp1:
  3964                           	opt stack 0
  3965  000069                     ___xxtofl@exp:
  3966                           	opt stack 0
  3967                           
  3968                           ; 1 bytes @ 0x9
  3969  000069                     	ds	1
  3970  00006A                     ??_getsUSBUSART:
  3971  00006A                     oled_putChar@k:
  3972                           	opt stack 0
  3973  00006A                     CDCTxService@i:
  3974                           	opt stack 0
  3975  00006A                     memcpy@tmp:
  3976                           	opt stack 0
  3977  00006A                     ___xxtofl@arg:
  3978                           	opt stack 0
  3979                           
  3980                           ; 4 bytes @ 0xA
  3981  00006A                     	ds	1
  3982  00006B                     oled_putChar@index:
  3983                           	opt stack 0
  3984  00006B                     CDCTxService@byte_to_send:
  3985                           	opt stack 0
  3986  00006B                     moteApp_setLightString@lightString:
  3987                           	opt stack 0
  3988  00006B                     _getsUSBUSART$6682:
  3989                           	opt stack 0
  3990                           
  3991                           ; 2 bytes @ 0xB
  3992  00006B                     	ds	1
  3993  00006C                     oled_clearRow@page:
  3994                           	opt stack 0
  3995  00006C                     oled_putStringLineN@string:
  3996                           	opt stack 0
  3997                           
  3998                           ; 2 bytes @ 0xC
  3999  00006C                     	ds	1
  4000  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  4001  00006D                     moteApp_setLightString@stingPos:
  4002                           	opt stack 0
  4003  00006D                     oled_clearRow@index:
  4004                           	opt stack 0
  4005                           
  4006                           ; 1 bytes @ 0xD
  4007  00006D                     	ds	1
  4008  00006E                     ?_moteApp_getLightValue:
  4009                           	opt stack 0
  4010  00006E                     moteApp_GoToSleep@status:
  4011                           	opt stack 0
  4012  00006E                     oled_putStringLineN@indexLine:
  4013                           	opt stack 0
  4014                           
  4015                           ; 1 bytes @ 0xE
  4016  00006E                     	ds	1
  4017  00006F                     oled_putStringLineN@page:
  4018                           	opt stack 0
  4019                           
  4020                           ; 1 bytes @ 0xF
  4021  00006F                     	ds	1
  4022  000070                     oled_putStringLineN@index:
  4023                           	opt stack 0
  4024  000070                     ___fladd@signs:
  4025                           	opt stack 0
  4026  000070                     moteApp_getLightValue@escapeCounter:
  4027                           	opt stack 0
  4028                           
  4029                           ; 2 bytes @ 0x10
  4030  000070                     	ds	1
  4031  000071                     ___fladd@aexp:
  4032                           	opt stack 0
  4033                           
  4034                           ; 1 bytes @ 0x11
  4035  000071                     	ds	1
  4036  000072                     ?_moteApp_convertSensorValue:
  4037                           	opt stack 0
  4038  000072                     ___fladd@bexp:
  4039                           	opt stack 0
  4040  000072                     moteApp_addToDataBuffer@string:
  4041                           	opt stack 0
  4042  000072                     moteApp_convertSensorValue@string:
  4043                           	opt stack 0
  4044  000072                     oled_putString@string:
  4045                           	opt stack 0
  4046                           
  4047                           ; 3 bytes @ 0x12
  4048  000072                     	ds	1
  4049  000073                     ___fladd@grs:
  4050                           	opt stack 0
  4051                           
  4052                           ; 1 bytes @ 0x13
  4053  000073                     	ds	1
  4054  000074                     ??_moteApp_convertSensorValue:
  4055  000074                     ?___flmul:
  4056                           	opt stack 0
  4057  000074                     moteApp_addToDataBuffer@bufferLocation:
  4058                           	opt stack 0
  4059  000074                     ___flmul@b:
  4060                           	opt stack 0
  4061                           
  4062                           ; 4 bytes @ 0x14
  4063  000074                     	ds	1
  4064  000075                     moteApp_addToDataBuffer@index:
  4065                           	opt stack 0
  4066  000075                     oled_putString@station_dot:
  4067                           	opt stack 0
  4068                           
  4069                           ; 1 bytes @ 0x15
  4070  000075                     	ds	1
  4071  000076                     oled_putString@start_page:
  4072                           	opt stack 0
  4073                           
  4074                           ; 1 bytes @ 0x16
  4075  000076                     	ds	1
  4076  000077                     oled_putString@index:
  4077                           	opt stack 0
  4078  000077                     moteApp_convertSensorValue@convertedValue:
  4079                           	opt stack 0
  4080                           
  4081                           ; 2 bytes @ 0x17
  4082  000077                     	ds	1
  4083  000078                     ??_test_switch:
  4084  000078                     moteJoiningProcess@changeStates:
  4085                           	opt stack 0
  4086  000078                     USBapp_Handler@buttonPress:
  4087                           	opt stack 0
  4088  000078                     oled_putUint8@station_dot:
  4089                           	opt stack 0
  4090  000078                     oled_putint8@station_dot:
  4091                           	opt stack 0
  4092  000078                     ___flmul@a:
  4093                           	opt stack 0
  4094                           
  4095                           ; 4 bytes @ 0x18
  4096  000078                     	ds	1
  4097  000079                     moteJoiningProcess@selectButton:
  4098                           	opt stack 0
  4099  000079                     moteApp_convertSensorValue@index:
  4100                           	opt stack 0
  4101  000079                     oled_putUint8@start_page:
  4102                           	opt stack 0
  4103  000079                     oled_putint8@start_page:
  4104                           	opt stack 0
  4105  000079                     test_switch@timeout:
  4106                           	opt stack 0
  4107                           
  4108                           ; 2 bytes @ 0x19
  4109  000079                     	ds	1
  4110  00007A                     ??_moteJoiningProcess:
  4111  00007A                     oled_putUint8@number:
  4112                           	opt stack 0
  4113  00007A                     oled_putint8@negative:
  4114                           	opt stack 0
  4115                           
  4116                           ; 1 bytes @ 0x1A
  4117  00007A                     	ds	1
  4118  00007B                     test_switch@buttonCheck:
  4119                           	opt stack 0
  4120  00007B                     moteJoiningProcess@readDataRate:
  4121                           	opt stack 0
  4122  00007B                     oled_putUint8@numData:
  4123                           	opt stack 0
  4124  00007B                     oled_putint8@numData:
  4125                           	opt stack 0
  4126                           
  4127                           ; 6 bytes @ 0x1B
  4128  00007B                     	ds	1
  4129  00007C                     ??___flmul:
  4130  00007C                     moteJoiningProcess@joiningComplete:
  4131                           	opt stack 0
  4132                           
  4133                           ; 1 bytes @ 0x1C
  4134  00007C                     	ds	1
  4135  00007D                     moteJoiningProcess@messageReady:
  4136                           	opt stack 0
  4137                           
  4138                           ; 1 bytes @ 0x1D
  4139  00007D                     	ds	3
  4140  000080                     ___flmul@sign:
  4141                           	opt stack 0
  4142                           
  4143                           ; 1 bytes @ 0x20
  4144  000080                     	ds	1
  4145  000081                     oled_putint8@number:
  4146                           	opt stack 0
  4147  000081                     ___flmul@grs:
  4148                           	opt stack 0
  4149                           
  4150                           ; 4 bytes @ 0x21
  4151  000081                     	ds	1
  4152  000082                     ??_moteApp_searchFrameGPS:
  4153                           
  4154                           ; 1 bytes @ 0x22
  4155  000082                     	ds	2
  4156  000084                     moteApp_searchFrameGPS@ccs:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0x24
  4160  000084                     	ds	1
  4161  000085                     moteApp_searchFrameGPS@cs:
  4162                           	opt stack 0
  4163  000085                     ___flmul@aexp:
  4164                           	opt stack 0
  4165                           
  4166                           ; 1 bytes @ 0x25
  4167  000085                     	ds	1
  4168  000086                     moteApp_searchFrameGPS@c:
  4169                           	opt stack 0
  4170  000086                     ___flmul@bexp:
  4171                           	opt stack 0
  4172                           
  4173                           ; 1 bytes @ 0x26
  4174  000086                     	ds	1
  4175  000087                     moteApp_searchFrameGPS@i:
  4176                           	opt stack 0
  4177  000087                     ___flmul@prod:
  4178                           	opt stack 0
  4179                           
  4180                           ; 4 bytes @ 0x27
  4181  000087                     	ds	4
  4182  00008B                     ___flmul@temp:
  4183                           	opt stack 0
  4184                           
  4185                           ; 2 bytes @ 0x2B
  4186  00008B                     	ds	2
  4187  00008D                     ?___fldiv:
  4188                           	opt stack 0
  4189  00008D                     ___fldiv@b:
  4190                           	opt stack 0
  4191                           
  4192                           ; 4 bytes @ 0x2D
  4193  00008D                     	ds	4
  4194  000091                     ___fldiv@a:
  4195                           	opt stack 0
  4196                           
  4197                           ; 4 bytes @ 0x31
  4198  000091                     	ds	4
  4199  000095                     ??___fldiv:
  4200                           
  4201                           ; 1 bytes @ 0x35
  4202  000095                     	ds	4
  4203  000099                     ___fldiv@sign:
  4204                           	opt stack 0
  4205                           
  4206                           ; 1 bytes @ 0x39
  4207  000099                     	ds	1
  4208  00009A                     ___fldiv@rem:
  4209                           	opt stack 0
  4210                           
  4211                           ; 4 bytes @ 0x3A
  4212  00009A                     	ds	4
  4213  00009E                     ___fldiv@new_exp:
  4214                           	opt stack 0
  4215                           
  4216                           ; 2 bytes @ 0x3E
  4217  00009E                     	ds	2
  4218  0000A0                     ___fldiv@grs:
  4219                           	opt stack 0
  4220                           
  4221                           ; 4 bytes @ 0x40
  4222  0000A0                     	ds	4
  4223  0000A4                     ___fldiv@bexp:
  4224                           	opt stack 0
  4225                           
  4226                           ; 1 bytes @ 0x44
  4227  0000A4                     	ds	1
  4228  0000A5                     ___fldiv@aexp:
  4229                           	opt stack 0
  4230                           
  4231                           ; 1 bytes @ 0x45
  4232  0000A5                     	ds	1
  4233  0000A6                     ADC_TempConversion@tempRaw:
  4234                           	opt stack 0
  4235                           
  4236                           ; 1 bytes @ 0x46
  4237  0000A6                     	ds	1
  4238  0000A7                     ADC_TempConversion@temp:
  4239                           	opt stack 0
  4240                           
  4241                           ; 1 bytes @ 0x47
  4242  0000A7                     	ds	1
  4243  0000A8                     ADC_TempConversion@val:
  4244                           	opt stack 0
  4245                           
  4246                           ; 4 bytes @ 0x48
  4247  0000A8                     	ds	4
  4248  0000AC                     ??_moteApp_testSensors:
  4249  0000AC                     moteRunningProcess@selectButton:
  4250                           	opt stack 0
  4251                           
  4252                           ; 1 bytes @ 0x4C
  4253  0000AC                     	ds	1
  4254  0000AD                     moteRunningProcess@messageReady:
  4255                           	opt stack 0
  4256                           
  4257                           ; 1 bytes @ 0x4D
  4258  0000AD                     	ds	1
  4259  0000AE                     moteRunningProcess@sleepEvent:
  4260                           	opt stack 0
  4261                           
  4262                           ; 1 bytes @ 0x4E
  4263  0000AE                     	ds	1
  4264  0000AF                     ??_moteRunningProcess:
  4265                           
  4266                           ; 1 bytes @ 0x4F
  4267  0000AF                     	ds	2
  4268  0000B1                     moteRunningProcess@readByte:
  4269                           	opt stack 0
  4270                           
  4271                           ; 1 bytes @ 0x51
  4272  0000B1                     	ds	1
  4273  0000B2                     moteRunningProcess@sizeOfUpdate:
  4274                           	opt stack 0
  4275                           
  4276                           ; 1 bytes @ 0x52
  4277  0000B2                     	ds	1
  4278  0000B3                     moteRunningProcess@sizeOfUpdate_1526:
  4279                           	opt stack 0
  4280                           
  4281                           ; 1 bytes @ 0x53
  4282  0000B3                     	ds	1
  4283  0000B4                     moteRunningProcess@i:
  4284                           	opt stack 0
  4285                           
  4286                           ; 1 bytes @ 0x54
  4287  0000B4                     	ds	1
  4288  0000B5                     moteRunningProcess@i_1527:
  4289                           	opt stack 0
  4290                           
  4291                           ; 1 bytes @ 0x55
  4292  0000B5                     	ds	1
  4293  0000B6                     moteRunningProcess@i_1530:
  4294                           	opt stack 0
  4295                           
  4296                           ; 1 bytes @ 0x56
  4297  0000B6                     	ds	1
  4298  0000B7                     moteRunningProcess@counter:
  4299                           	opt stack 0
  4300                           
  4301                           ; 1 bytes @ 0x57
  4302  0000B7                     	ds	1
  4303  0000B8                     moteRunningProcess@bufferReadPos:
  4304                           	opt stack 0
  4305                           
  4306                           ; 1 bytes @ 0x58
  4307  0000B8                     	ds	1
  4308  0000B9                     moteRunningProcess@changeStates:
  4309                           	opt stack 0
  4310                           
  4311                           ; 1 bytes @ 0x59
  4312  0000B9                     	ds	1
  4313  0000BA                     ??_moteHandler:
  4314                           
  4315                           ; 1 bytes @ 0x5A
  4316  0000BA                     	ds	1
  4317  0000BB                     moteHandler@gotoSleep:
  4318                           	opt stack 0
  4319                           
  4320                           ; 1 bytes @ 0x5B
  4321  0000BB                     	ds	1
  4322  0000BC                     moteHandler@gotoNextState:
  4323                           	opt stack 0
  4324                           
  4325                           ; 1 bytes @ 0x5C
  4326  0000BC                     	ds	1
  4327  0000BD                     moteHandler@s2Button:
  4328                           	opt stack 0
  4329                           
  4330                           ; 1 bytes @ 0x5D
  4331  0000BD                     	ds	1
  4332  0000BE                     moteHandler@buttonPress:
  4333                           	opt stack 0
  4334                           
  4335                           ; 1 bytes @ 0x5E
  4336  0000BE                     	ds	1
  4337  0000BF                     moteHandler@readMessage:
  4338                           	opt stack 0
  4339                           
  4340                           ; 1 bytes @ 0x5F
  4341  0000BF                     	ds	1
  4342  0000C0                     tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           postdec1	equ	0xFE5
  4349                           fsr1l	equ	0xFE1
  4350                           
  4351                           ; 1 bytes @ 0x60
  4352                           
  4353                           	psect	cstackCOMRAM
  4354  000001                     __pcstackCOMRAM:
  4355                           	opt stack 0
  4356  000001                     ??_USBStdGetDscHandler:
  4357  000001                     ??_USBStdGetStatusHandler:
  4358  000001                     ?i2_USBTransferOnePacket:
  4359                           	opt stack 0
  4360  000001                     ?___lldiv:
  4361                           	opt stack 0
  4362  000001                     reloadTimer@setTimerValue:
  4363                           	opt stack 0
  4364  000001                     clearInterruptPinRX@tClearPin:
  4365                           	opt stack 0
  4366  000001                     inFIFO@data:
  4367                           	opt stack 0
  4368  000001                     USBConfigureEndpoint@direction:
  4369                           	opt stack 0
  4370  000001                     USBCtrlTrfTxService@byteToSend:
  4371                           	opt stack 0
  4372  000001                     i2USBTransferOnePacket@dir:
  4373                           	opt stack 0
  4374  000001                     i2memset@p1:
  4375                           	opt stack 0
  4376  000001                     ___lldiv@dividend:
  4377                           	opt stack 0
  4378                           
  4379                           ; 4 bytes @ 0x0
  4380  000001                     	ds	1
  4381  000002                     ??_USBConfigureEndpoint:
  4382  000002                     ??_InterruptPinRX:
  4383  000002                     ??_InterruptTimerUART:
  4384  000002                     USBStdGetStatusHandler@p:
  4385                           	opt stack 0
  4386  000002                     i2USBTransferOnePacket@data:
  4387                           	opt stack 0
  4388                           
  4389                           ; 2 bytes @ 0x1
  4390  000002                     	ds	1
  4391  000003                     i2memset@c:
  4392                           	opt stack 0
  4393                           
  4394                           ; 2 bytes @ 0x2
  4395  000003                     	ds	1
  4396  000004                     InterruptTimerUART@aux:
  4397                           	opt stack 0
  4398  000004                     i2USBTransferOnePacket@len:
  4399                           	opt stack 0
  4400                           
  4401                           ; 1 bytes @ 0x3
  4402  000004                     	ds	1
  4403  000005                     InterruptTimerUART@mask:
  4404                           	opt stack 0
  4405  000005                     i2USBTransferOnePacket@ep:
  4406                           	opt stack 0
  4407  000005                     i2memset@n:
  4408                           	opt stack 0
  4409  000005                     ___lldiv@divisor:
  4410                           	opt stack 0
  4411                           
  4412                           ; 4 bytes @ 0x4
  4413  000005                     	ds	1
  4414  000006                     USBConfigureEndpoint@EPNum:
  4415                           	opt stack 0
  4416  000006                     i2USBTransferOnePacket@handle:
  4417                           	opt stack 0
  4418                           
  4419                           ; 2 bytes @ 0x5
  4420  000006                     	ds	1
  4421  000007                     USBConfigureEndpoint@handle:
  4422                           	opt stack 0
  4423  000007                     i2memset@p:
  4424                           	opt stack 0
  4425                           
  4426                           ; 2 bytes @ 0x6
  4427  000007                     	ds	2
  4428  000009                     USBEnableEndpoint@options:
  4429                           	opt stack 0
  4430  000009                     i2USBDeviceInit@i:
  4431                           	opt stack 0
  4432  000009                     ___lldiv@quotient:
  4433                           	opt stack 0
  4434                           
  4435                           ; 4 bytes @ 0x8
  4436  000009                     	ds	1
  4437  00000A                     USBEnableEndpoint@p:
  4438                           	opt stack 0
  4439                           
  4440                           ; 2 bytes @ 0x9
  4441  00000A                     	ds	2
  4442  00000C                     USBEnableEndpoint@ep:
  4443                           	opt stack 0
  4444                           
  4445                           ; 1 bytes @ 0xB
  4446  00000C                     	ds	1
  4447  00000D                     USBapp_CdcEmulatorInitialize@i:
  4448                           	opt stack 0
  4449  00000D                     ___lldiv@counter:
  4450                           	opt stack 0
  4451                           
  4452                           ; 1 bytes @ 0xC
  4453  00000D                     	ds	1
  4454  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4455                           	opt stack 0
  4456  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4457                           	opt stack 0
  4458                           
  4459                           ; 4 bytes @ 0xD
  4460  00000E                     	ds	2
  4461  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4462                           	opt stack 0
  4463                           
  4464                           ; 2 bytes @ 0xF
  4465  000010                     	ds	2
  4466  000012                     USBCtrlTrfRxService@i:
  4467                           	opt stack 0
  4468  000012                     USBCtrlTrfInHandler@lastDTS:
  4469                           	opt stack 0
  4470  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4471                           	opt stack 0
  4472                           
  4473                           ; 2 bytes @ 0x11
  4474  000012                     	ds	1
  4475  000013                     USBCtrlTrfRxService@byteToRead:
  4476                           	opt stack 0
  4477                           
  4478                           ; 1 bytes @ 0x12
  4479  000013                     	ds	1
  4480  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4481                           
  4482                           ; 1 bytes @ 0x13
  4483  000014                     	ds	2
  4484  000016                     ??_USBStdFeatureReqHandler:
  4485  000016                     USBStdSetCfgHandler@i:
  4486                           	opt stack 0
  4487                           
  4488                           ; 1 bytes @ 0x15
  4489  000016                     	ds	1
  4490  000017                     USBStdFeatureReqHandler@pUEP:
  4491                           	opt stack 0
  4492                           
  4493                           ; 2 bytes @ 0x16
  4494  000017                     	ds	2
  4495  000019                     USBStdFeatureReqHandler@current_ep_data:
  4496                           	opt stack 0
  4497                           
  4498                           ; 1 bytes @ 0x18
  4499  000019                     	ds	1
  4500  00001A                     USBStdFeatureReqHandler@p:
  4501                           	opt stack 0
  4502                           
  4503                           ; 2 bytes @ 0x19
  4504  00001A                     	ds	2
  4505  00001C                     ??_USBCtrlEPService:
  4506  00001C                     
  4507                           ; 1 bytes @ 0x1B
  4508  00001C                     	ds	2
  4509  00001E                     USBCtrlEPService@setup_cnt:
  4510                           	opt stack 0
  4511                           
  4512                           ; 1 bytes @ 0x1D
  4513  00001E                     	ds	1
  4514  00001F                     USBDeviceTasks@i:
  4515                           	opt stack 0
  4516                           
  4517                           ; 1 bytes @ 0x1E
  4518  00001F                     	ds	1
  4519  000020                     ??_INTERRUPT_InterruptManager:
  4520                           
  4521                           ; 1 bytes @ 0x1F
  4522  000020                     	ds	18
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           postinc0	equ	0xFEE
  4528                           wreg	equ	0xFE8
  4529                           postdec1	equ	0xFE5
  4530                           fsr1l	equ	0xFE1
  4531                           
  4532 ;;
  4533 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4534 ;;
  4535 ;; *************** function _main *****************
  4536 ;; Defined at:
  4537 ;;		line 70 in file "main.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4551 ;;      Params:         0       0       0       0       0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4554 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels required when called:   20
  4557 ;; This function calls:
  4558 ;;		_DATAEE_ReadByte
  4559 ;;		_DATAEE_WriteByte
  4560 ;;		_MOTEapp_handlerState
  4561 ;;		_SYSTEM_Initialize
  4562 ;;		_USBDeviceAttach
  4563 ;;		_USBDeviceInit
  4564 ;;		_USBapp_Handler
  4565 ;;		_USBapp_handlerState
  4566 ;;		_moduleResync
  4567 ;;		_moteApp_clearCommand
  4568 ;;		_moteApp_delayms
  4569 ;;		_moteHandler
  4570 ;;		_oled_clear
  4571 ;;		_oled_init
  4572 ;;		_oled_putString
  4573 ;;		_test_powerup
  4574 ;; This function is called by:
  4575 ;;		Startup code after reset
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text0
  4580  00303C                     __ptext0:
  4581                           	opt stack 0
  4582  00303C                     _main:
  4583                           	opt stack 11
  4584                           
  4585                           ;main.c: 73: SYSTEM_Initialize();
  4586                           
  4587                           ;incstack = 0
  4588  00303C  EC76  F030         	call	_SYSTEM_Initialize	;wreg free
  4589                           
  4590                           ;main.c: 75: oled_init();
  4591  003040  ECBA  F02F         	call	_oled_init	;wreg free
  4592                           
  4593                           ;main.c: 76: USBDeviceInit();
  4594  003044  EC51  F019         	call	_USBDeviceInit	;wreg free
  4595                           
  4596                           ;main.c: 78: USBDeviceAttach();
  4597  003048  EC55  F02F         	call	_USBDeviceAttach	;wreg free
  4598                           
  4599                           ;main.c: 80: LATBbits.LATB5 = 1;
  4600  00304C  8A8A               	bsf	3978,5,c	;volatile
  4601                           
  4602                           ;main.c: 81: moteApp_delayms(50);
  4603  00304E  0E00               	movlw	0
  4604  003050  0100               	movlb	0	; () banked
  4605  003052  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4606  003054  0E32               	movlw	50
  4607  003056  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4608  003058  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4609                           
  4610                           ;main.c: 82: LATBbits.LATB5 = 0;
  4611  00305C  9A8A               	bcf	3978,5,c	;volatile
  4612                           
  4613                           ;main.c: 83: moteApp_delayms(500);
  4614  00305E  0E01               	movlw	1
  4615  003060  0100               	movlb	0	; () banked
  4616  003062  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4617  003064  0EF4               	movlw	244
  4618  003066  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4619  003068  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4620                           
  4621                           ;main.c: 85: PEIE = 1;
  4622  00306C  8CF2               	bsf	intcon,6,c	;volatile
  4623                           
  4624                           ;main.c: 86: GIE = 1;
  4625  00306E  8EF2               	bsf	intcon,7,c	;volatile
  4626                           
  4627                           ;main.c: 88: moduleResync();
  4628  003070  EC31  F028         	call	_moduleResync	;wreg free
  4629                           
  4630                           ;main.c: 89: moteApp_delayms(20);
  4631  003074  0E00               	movlw	0
  4632  003076  0100               	movlb	0	; () banked
  4633  003078  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4634  00307A  0E14               	movlw	20
  4635  00307C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4636  00307E  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4637                           
  4638                           ;main.c: 90: moteApp_clearCommand();
  4639  003082  ECF6  F031         	call	_moteApp_clearCommand	;wreg free
  4640                           
  4641                           ;main.c: 91: moteApp_delayms(20);
  4642  003086  0E00               	movlw	0
  4643  003088  0100               	movlb	0	; () banked
  4644  00308A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4645  00308C  0E14               	movlw	20
  4646  00308E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4647  003090  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4648                           
  4649                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4650  003094  0E00               	movlw	0
  4651  003096  EC99  F031         	call	_DATAEE_ReadByte
  4652  00309A  6E54               	movwf	_powerOnStatus,c
  4653                           
  4654                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4655  00309C  0E55               	movlw	85
  4656  00309E  1854               	xorwf	_powerOnStatus,w,c
  4657  0030A0  B4D8               	btfsc	status,2,c
  4658  0030A2  D008               	goto	l57
  4659                           
  4660                           ;main.c: 95: {
  4661                           ;main.c: 96: test_powerup();
  4662  0030A4  EC2D  F02A         	call	_test_powerup	;wreg free
  4663                           
  4664                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4665  0030A8  0E55               	movlw	85
  4666  0030AA  0100               	movlb	0	; () banked
  4667  0030AC  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4668  0030AE  0E00               	movlw	0
  4669  0030B0  EC8E  F02E         	call	_DATAEE_WriteByte
  4670  0030B4                     l57:
  4671                           
  4672                           ;main.c: 98: }
  4673                           ;main.c: 101: operationType = USB;
  4674  0030B4  0E00               	movlw	0
  4675  0030B6  0100               	movlb	0	; () banked
  4676  0030B8  6FF8               	movwf	_operationType& (0+255),b
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4680  0030BA  0E00               	movlw	0
  4681  0030BC  EC21  F032         	call	_USBapp_handlerState
  4682                           
  4683                           ;main.c: 104: oled_clear();
  4684  0030C0  EC5E  F031         	call	_oled_clear	;wreg free
  4685                           
  4686                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4687  0030C4  0E1F               	movlw	low STR_1
  4688  0030C6  0100               	movlb	0	; () banked
  4689  0030C8  6F72               	movwf	oled_putString@string& (0+255),b
  4690  0030CA  0E7D               	movlw	high STR_1
  4691  0030CC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4692  0030CE  5172               	movf	oled_putString@string& (0+255),w,b
  4693  0030D0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4694  0030D2  A4D8               	btfss	status,2,c
  4695  0030D4  0E00               	movlw	low (__mediumconst shr (0+16))
  4696  0030D6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4697  0030D8  0E00               	movlw	0
  4698  0030DA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4699  0030DC  0E00               	movlw	0
  4700  0030DE  6F76               	movwf	oled_putString@start_page& (0+255),b
  4701  0030E0  ECF3  F029         	call	_oled_putString	;wreg free
  4702                           
  4703                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4704  0030E4  0E01               	movlw	low STR_2
  4705  0030E6  0100               	movlb	0	; () banked
  4706  0030E8  6F72               	movwf	oled_putString@string& (0+255),b
  4707  0030EA  0E7D               	movlw	high STR_2
  4708  0030EC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4709  0030EE  5172               	movf	oled_putString@string& (0+255),w,b
  4710  0030F0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4711  0030F2  A4D8               	btfss	status,2,c
  4712  0030F4  0E00               	movlw	low (__mediumconst shr (0+16))
  4713  0030F6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4714  0030F8  0E00               	movlw	0
  4715  0030FA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4716  0030FC  0E01               	movlw	1
  4717  0030FE  6F76               	movwf	oled_putString@start_page& (0+255),b
  4718  003100  ECF3  F029         	call	_oled_putString	;wreg free
  4719                           
  4720                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4721  003104  0E10               	movlw	low STR_3
  4722  003106  0100               	movlb	0	; () banked
  4723  003108  6F72               	movwf	oled_putString@string& (0+255),b
  4724  00310A  0E7D               	movlw	high STR_3
  4725  00310C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4726  00310E  5172               	movf	oled_putString@string& (0+255),w,b
  4727  003110  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4728  003112  A4D8               	btfss	status,2,c
  4729  003114  0E00               	movlw	low (__mediumconst shr (0+16))
  4730  003116  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4731  003118  0E00               	movlw	0
  4732  00311A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4733  00311C  0E03               	movlw	3
  4734  00311E  6F76               	movwf	oled_putString@start_page& (0+255),b
  4735  003120  ECF3  F029         	call	_oled_putString	;wreg free
  4736                           
  4737                           ;main.c: 108: moteApp_delayms(1000);
  4738  003124  0E03               	movlw	3
  4739  003126  0100               	movlb	0	; () banked
  4740  003128  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4741  00312A  0EE8               	movlw	232
  4742  00312C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4743  00312E  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4744                           
  4745                           ;main.c: 112: {
  4746                           ;main.c: 114: switch (operationType)
  4747                           
  4748                           ;main.c: 111: while(1)
  4749  003132  D015               	goto	l67
  4750  003134                     
  4751                           ;main.c: 117: while(1);
  4752  003134  D7FF               	goto	l60
  4753  003136                     
  4754                           ;main.c: 120: USBapp_Handler();
  4755  003136  ECFD  F020         	call	_USBapp_Handler	;wreg free
  4756                           
  4757                           ;main.c: 122: operationType = MOTE;
  4758  00313A  0E01               	movlw	1
  4759  00313C  0100               	movlb	0	; () banked
  4760  00313E  6FF8               	movwf	_operationType& (0+255),b
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4764  003140  0E01               	movlw	1
  4765  003142  EC26  F032         	call	_MOTEapp_handlerState
  4766                           
  4767                           ;main.c: 124: break;
  4768  003146  D00B               	goto	l67
  4769  003148                     
  4770                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4771  003148  EC2B  F012         	call	_moteHandler	;wreg free
  4772  00314C  0A04               	xorlw	4
  4773  00314E  A4D8               	btfss	status,2,c
  4774  003150  D006               	goto	l67
  4775                           
  4776                           ;main.c: 127: {
  4777                           ;main.c: 129: operationType = USB;
  4778  003152  0E00               	movlw	0
  4779  003154  0100               	movlb	0	; () banked
  4780  003156  6FF8               	movwf	_operationType& (0+255),b
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4784  003158  0E00               	movlw	0
  4785  00315A  EC21  F032         	call	_USBapp_handlerState
  4786  00315E                     l67:
  4787                           
  4788                           ;main.c: 133: }
  4789                           
  4790                           ;main.c: 131: }
  4791                           ;main.c: 132: break;
  4792  00315E  0100               	movlb	0	; () banked
  4793  003160  51F8               	movf	_operationType& (0+255),w,b
  4794                           
  4795                           ; Switch size 1, requested type "space"
  4796                           ; Number of cases is 2, Range of values is 0 to 1
  4797                           ; switch strategies available:
  4798                           ; Name         Instructions Cycles
  4799                           ; simple_byte            7     4 (average)
  4800                           ;	Chosen strategy is simple_byte
  4801  003162  0A00               	xorlw	0	; case 0
  4802  003164  B4D8               	btfsc	status,2,c
  4803  003166  D7E7               	goto	l65
  4804  003168  0A01               	xorlw	1	; case 1
  4805  00316A  B4D8               	btfsc	status,2,c
  4806  00316C  D7ED               	goto	l66
  4807  00316E  D7E2               	goto	l60
  4808  003170                     __end_of_main:
  4809                           	opt stack 0
  4810                           tblptru	equ	0xFF8
  4811                           tblptrh	equ	0xFF7
  4812                           tblptrl	equ	0xFF6
  4813                           tablat	equ	0xFF5
  4814                           intcon	equ	0xFF2
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           postdec1	equ	0xFE5
  4818                           fsr1l	equ	0xFE1
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _test_powerup *****************
  4822 ;; Defined at:
  4823 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   17
  4844 ;; This function calls:
  4845 ;;		_EUSART_FlushBuffer
  4846 ;;		_moteApp_delayms
  4847 ;;		_moteApp_testSensors
  4848 ;;		_oled_clear
  4849 ;;		_test_comms
  4850 ;;		_test_leds
  4851 ;;		_test_oled
  4852 ;;		_test_switch
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text1
  4859  00545A                     __ptext1:
  4860                           	opt stack 0
  4861  00545A                     _test_powerup:
  4862                           	opt stack 13
  4863                           
  4864                           ;poweruptest.c: 65: test_oled();
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;incstack = 0
  4868  00545A  ECCC  F021         	call	_test_oled	;wreg free
  4869                           
  4870                           ;poweruptest.c: 66: moteApp_delayms(20);
  4871  00545E  0E00               	movlw	0
  4872  005460  0100               	movlb	0	; () banked
  4873  005462  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4874  005464  0E14               	movlw	20
  4875  005466  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4876  005468  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4877                           
  4878                           ;poweruptest.c: 68: test_switch();
  4879  00546C  EC9D  F01B         	call	_test_switch	;wreg free
  4880                           
  4881                           ;poweruptest.c: 70: oled_clear();
  4882  005470  EC5E  F031         	call	_oled_clear	;wreg free
  4883                           
  4884                           ;poweruptest.c: 71: moteApp_delayms(20);
  4885  005474  0E00               	movlw	0
  4886  005476  0100               	movlb	0	; () banked
  4887  005478  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4888  00547A  0E14               	movlw	20
  4889  00547C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4890  00547E  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4891                           
  4892                           ;poweruptest.c: 72: test_comms();
  4893  005482  EC66  F02A         	call	_test_comms	;wreg free
  4894                           
  4895                           ;poweruptest.c: 73: moteApp_delayms(20);
  4896  005486  0E00               	movlw	0
  4897  005488  0100               	movlb	0	; () banked
  4898  00548A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4899  00548C  0E14               	movlw	20
  4900  00548E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4901  005490  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4902                           
  4903                           ;poweruptest.c: 75: test_leds();
  4904  005494  ECD8  F02A         	call	_test_leds	;wreg free
  4905                           
  4906                           ;poweruptest.c: 78: moteApp_delayms(20);
  4907  005498  0E00               	movlw	0
  4908  00549A  0100               	movlb	0	; () banked
  4909  00549C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4910  00549E  0E14               	movlw	20
  4911  0054A0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4912  0054A2  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4913                           
  4914                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4915  0054A6  ECCF  F02D         	call	_EUSART_FlushBuffer	;wreg free
  4916                           
  4917                           ;poweruptest.c: 80: moteApp_delayms(20);
  4918  0054AA  0E00               	movlw	0
  4919  0054AC  0100               	movlb	0	; () banked
  4920  0054AE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4921  0054B0  0E14               	movlw	20
  4922  0054B2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4923  0054B4  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4924                           
  4925                           ;poweruptest.c: 81: moteApp_testSensors();
  4926  0054B8  EC1C  F01C         	call	_moteApp_testSensors	;wreg free
  4927                           
  4928                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4929  0054BC  0E0B               	movlw	11
  4930  0054BE  0100               	movlb	0	; () banked
  4931  0054C0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4932  0054C2  0EB8               	movlw	184
  4933  0054C4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4934  0054C6  EC88  F02F         	call	_moteApp_delayms	;wreg free
  4935  0054CA  0012               	return		;funcret
  4936  0054CC                     __end_of_test_powerup:
  4937                           	opt stack 0
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           intcon	equ	0xFF2
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           postdec1	equ	0xFE5
  4946                           fsr1l	equ	0xFE1
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function _test_switch *****************
  4950 ;; Defined at:
  4951 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  timeout         2   25[BANK0 ] unsigned int 
  4956 ;;  buttonCheck     1   27[BANK0 ] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0
  4967 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4968 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4969 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4970 ;;Total ram usage:        4 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:   16
  4973 ;; This function calls:
  4974 ;;		_oled_clear
  4975 ;;		_oled_putString
  4976 ;; This function is called by:
  4977 ;;		_test_powerup
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text2
  4982  00373A                     __ptext2:
  4983                           	opt stack 0
  4984  00373A                     _test_switch:
  4985                           	opt stack 13
  4986                           
  4987                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4988                           
  4989                           ;incstack = 0
  4990  00373A  0E01               	movlw	1
  4991  00373C  0100               	movlb	0	; () banked
  4992  00373E  6F7A               	movwf	(test_switch@timeout+1)& (0+255),b
  4993  003740  0EF4               	movlw	244
  4994  003742  6F79               	movwf	test_switch@timeout& (0+255),b
  4995                           
  4996                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4997  003744  0E00               	movlw	0
  4998  003746  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;poweruptest.c: 103: oled_clear();
  5002  003748  EC5E  F031         	call	_oled_clear	;wreg free
  5003                           
  5004                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  5005  00374C  0EF5               	movlw	low STR_10
  5006  00374E  0100               	movlb	0	; () banked
  5007  003750  6F72               	movwf	oled_putString@string& (0+255),b
  5008  003752  0E7D               	movlw	high STR_10
  5009  003754  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5010  003756  5172               	movf	oled_putString@string& (0+255),w,b
  5011  003758  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5012  00375A  A4D8               	btfss	status,2,c
  5013  00375C  0E00               	movlw	low (__mediumconst shr (0+16))
  5014  00375E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5015  003760  0E00               	movlw	0
  5016  003762  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5017  003764  0E00               	movlw	0
  5018  003766  6F76               	movwf	oled_putString@start_page& (0+255),b
  5019  003768  ECF3  F029         	call	_oled_putString	;wreg free
  5020                           
  5021                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  5022  00376C  A281               	btfss	3969,1,c	;volatile
  5023  00376E  D002               	goto	u9120
  5024  003770  B081               	btfsc	3969,0,c	;volatile
  5025  003772  D011               	goto	l123
  5026  003774                     u9120:
  5027                           
  5028                           ;poweruptest.c: 107: {
  5029                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  5030  003774  0E7D               	movlw	low STR_11
  5031  003776  0100               	movlb	0	; () banked
  5032  003778  6F72               	movwf	oled_putString@string& (0+255),b
  5033  00377A  0E7E               	movlw	high STR_11
  5034  00377C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5035  00377E  5172               	movf	oled_putString@string& (0+255),w,b
  5036  003780  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5037  003782  A4D8               	btfss	status,2,c
  5038  003784  0E00               	movlw	low (__mediumconst shr (0+16))
  5039  003786  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5040  003788  0E00               	movlw	0
  5041  00378A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5042  00378C  0E03               	movlw	3
  5043  00378E  6F76               	movwf	oled_putString@start_page& (0+255),b
  5044  003790  ECF3  F029         	call	_oled_putString	;wreg free
  5045                           
  5046                           ;poweruptest.c: 109: }
  5047  003794  D047               	goto	l127
  5048  003796                     l123:
  5049                           
  5050                           ;poweruptest.c: 110: else
  5051                           ;poweruptest.c: 111: {
  5052                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  5053  003796  0E1C               	movlw	low STR_12
  5054  003798  0100               	movlb	0	; () banked
  5055  00379A  6F72               	movwf	oled_putString@string& (0+255),b
  5056  00379C  0E7E               	movlw	high STR_12
  5057  00379E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5058  0037A0  5172               	movf	oled_putString@string& (0+255),w,b
  5059  0037A2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5060  0037A4  A4D8               	btfss	status,2,c
  5061  0037A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5062  0037A8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5063  0037AA  0E00               	movlw	0
  5064  0037AC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5065  0037AE  0E01               	movlw	1
  5066  0037B0  6F76               	movwf	oled_putString@start_page& (0+255),b
  5067  0037B2  ECF3  F029         	call	_oled_putString	;wreg free
  5068                           
  5069                           ;poweruptest.c: 113: }
  5070                           ;poweruptest.c: 114: while(timeout--)
  5071  0037B6  D036               	goto	l127
  5072  0037B8                     l128:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;poweruptest.c: 115: {
  5076                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  5077  0037B8  B281               	btfsc	3969,1,c	;volatile
  5078  0037BA  D013               	goto	l129
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;poweruptest.c: 117: {
  5082                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  5083  0037BC  0E02               	movlw	low STR_13
  5084  0037BE  6F72               	movwf	oled_putString@string& (0+255),b
  5085  0037C0  0E7E               	movlw	high STR_13
  5086  0037C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5087  0037C4  5172               	movf	oled_putString@string& (0+255),w,b
  5088  0037C6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5089  0037C8  A4D8               	btfss	status,2,c
  5090  0037CA  0E00               	movlw	low (__mediumconst shr (0+16))
  5091  0037CC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5092  0037CE  0E00               	movlw	0
  5093  0037D0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5094  0037D2  0E02               	movlw	2
  5095  0037D4  6F76               	movwf	oled_putString@start_page& (0+255),b
  5096  0037D6  ECF3  F029         	call	_oled_putString	;wreg free
  5097                           
  5098                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  5099  0037DA  0100               	movlb	0	; () banked
  5100  0037DC  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5101  0037DE  0F08               	addlw	8
  5102  0037E0  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5103  0037E2                     l129:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;poweruptest.c: 120: }
  5107                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  5108                           
  5109                           ; BSR set to: 0
  5110  0037E2  B081               	btfsc	3969,0,c	;volatile
  5111  0037E4  D013               	goto	l130
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;poweruptest.c: 122: {
  5115                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  5116  0037E6  0E0F               	movlw	low STR_14
  5117  0037E8  6F72               	movwf	oled_putString@string& (0+255),b
  5118  0037EA  0E7E               	movlw	high STR_14
  5119  0037EC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5120  0037EE  5172               	movf	oled_putString@string& (0+255),w,b
  5121  0037F0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5122  0037F2  A4D8               	btfss	status,2,c
  5123  0037F4  0E00               	movlw	low (__mediumconst shr (0+16))
  5124  0037F6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5125  0037F8  0E00               	movlw	0
  5126  0037FA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5127  0037FC  0E03               	movlw	3
  5128  0037FE  6F76               	movwf	oled_putString@start_page& (0+255),b
  5129  003800  ECF3  F029         	call	_oled_putString	;wreg free
  5130                           
  5131                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  5132  003804  0100               	movlb	0	; () banked
  5133  003806  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5134  003808  0F80               	addlw	128
  5135  00380A  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5136  00380C                     l130:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;poweruptest.c: 125: }
  5140                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  5141                           
  5142                           ; BSR set to: 0
  5143  00380C  0E88               	movlw	136
  5144  00380E  197B               	xorwf	test_switch@buttonCheck& (0+255),w,b
  5145  003810  B4D8               	btfsc	status,2,c
  5146  003812  0012               	return	
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;poweruptest.c: 129: }
  5150                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  5151                           
  5152                           ; BSR set to: 0
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;poweruptest.c: 127: {
  5156                           ;poweruptest.c: 128: break;
  5157  003814  0E9C               	movlw	156
  5158  003816  0100               	movlb	0	; () banked
  5159  003818  6F78               	movwf	??_test_switch& (0+255),b
  5160  00381A  0ED7               	movlw	215
  5161  00381C                     u11667:
  5162  00381C  2EE8               	decfsz	wreg,f,c
  5163  00381E  D7FE               	bra	u11667
  5164  003820  2F78               	decfsz	??_test_switch& (0+255),f,b
  5165  003822  D7FC               	bra	u11667
  5166  003824                     l127:
  5167  003824  0100               	movlb	0	; () banked
  5168  003826  0779               	decf	test_switch@timeout& (0+255),f,b
  5169  003828  A0D8               	btfss	status,0,c
  5170  00382A  077A               	decf	(test_switch@timeout+1)& (0+255),f,b
  5171  00382C  2979               	incf	test_switch@timeout& (0+255),w,b
  5172  00382E  E1C4               	bnz	l128
  5173  003830  297A               	incf	(test_switch@timeout+1)& (0+255),w,b
  5174  003832  B4D8               	btfsc	status,2,c
  5175  003834  0012               	return	
  5176  003836  D7C0               	goto	l128
  5177  003838                     __end_of_test_switch:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           intcon	equ	0xFF2
  5184                           postinc0	equ	0xFEE
  5185                           wreg	equ	0xFE8
  5186                           postdec1	equ	0xFE5
  5187                           fsr1l	equ	0xFE1
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _test_oled *****************
  5191 ;; Defined at:
  5192 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:   16
  5213 ;; This function calls:
  5214 ;;		_oled_clear
  5215 ;;		_oled_putString
  5216 ;; This function is called by:
  5217 ;;		_test_powerup
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text3
  5222  004398                     __ptext3:
  5223                           	opt stack 0
  5224  004398                     _test_oled:
  5225                           	opt stack 13
  5226                           
  5227                           ;poweruptest.c: 88: oled_clear();
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;incstack = 0
  5231  004398  EC5E  F031         	call	_oled_clear	;wreg free
  5232                           
  5233                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5234  00439C  0E3E               	movlw	low STR_4
  5235  00439E  0100               	movlb	0	; () banked
  5236  0043A0  6F72               	movwf	oled_putString@string& (0+255),b
  5237  0043A2  0E7F               	movlw	high STR_4
  5238  0043A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5239  0043A6  5172               	movf	oled_putString@string& (0+255),w,b
  5240  0043A8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5241  0043AA  A4D8               	btfss	status,2,c
  5242  0043AC  0E00               	movlw	low (__mediumconst shr (0+16))
  5243  0043AE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5244  0043B0  0E00               	movlw	0
  5245  0043B2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5246  0043B4  0E00               	movlw	0
  5247  0043B6  6F76               	movwf	oled_putString@start_page& (0+255),b
  5248  0043B8  ECF3  F029         	call	_oled_putString	;wreg free
  5249                           
  5250                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5251  0043BC  0E8B               	movlw	low (STR_167+11)
  5252  0043BE  0100               	movlb	0	; () banked
  5253  0043C0  6F72               	movwf	oled_putString@string& (0+255),b
  5254  0043C2  0E7D               	movlw	high (STR_167+11)
  5255  0043C4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5256  0043C6  5172               	movf	oled_putString@string& (0+255),w,b
  5257  0043C8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5258  0043CA  A4D8               	btfss	status,2,c
  5259  0043CC  0E00               	movlw	low (__mediumconst shr (0+16))
  5260  0043CE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5261  0043D0  0E00               	movlw	0
  5262  0043D2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5263  0043D4  0E06               	movlw	6
  5264  0043D6  6F76               	movwf	oled_putString@start_page& (0+255),b
  5265  0043D8  ECF3  F029         	call	_oled_putString	;wreg free
  5266                           
  5267                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5268  0043DC  0E98               	movlw	low (STR_168+11)
  5269  0043DE  0100               	movlb	0	; () banked
  5270  0043E0  6F72               	movwf	oled_putString@string& (0+255),b
  5271  0043E2  0E7D               	movlw	high (STR_168+11)
  5272  0043E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5273  0043E6  5172               	movf	oled_putString@string& (0+255),w,b
  5274  0043E8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5275  0043EA  A4D8               	btfss	status,2,c
  5276  0043EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5277  0043EE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5278  0043F0  0E00               	movlw	0
  5279  0043F2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5280  0043F4  0E08               	movlw	8
  5281  0043F6  6F76               	movwf	oled_putString@start_page& (0+255),b
  5282  0043F8  ECF3  F029         	call	_oled_putString	;wreg free
  5283                           
  5284                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5285  0043FC  0EC4               	movlw	low STR_7
  5286  0043FE  0100               	movlb	0	; () banked
  5287  004400  6F72               	movwf	oled_putString@string& (0+255),b
  5288  004402  0E7C               	movlw	high STR_7
  5289  004404  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5290  004406  5172               	movf	oled_putString@string& (0+255),w,b
  5291  004408  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5292  00440A  A4D8               	btfss	status,2,c
  5293  00440C  0E00               	movlw	low (__mediumconst shr (0+16))
  5294  00440E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5295  004410  0E00               	movlw	0
  5296  004412  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5297  004414  0E01               	movlw	1
  5298  004416  6F76               	movwf	oled_putString@start_page& (0+255),b
  5299  004418  ECF3  F029         	call	_oled_putString	;wreg free
  5300                           
  5301                           ;poweruptest.c: 94: oled_putString("Mar 31 2018",0,2);
  5302  00441C  0E71               	movlw	low STR_8
  5303  00441E  0100               	movlb	0	; () banked
  5304  004420  6F72               	movwf	oled_putString@string& (0+255),b
  5305  004422  0E7E               	movlw	high STR_8
  5306  004424  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5307  004426  5172               	movf	oled_putString@string& (0+255),w,b
  5308  004428  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5309  00442A  A4D8               	btfss	status,2,c
  5310  00442C  0E00               	movlw	low (__mediumconst shr (0+16))
  5311  00442E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5312  004430  0E00               	movlw	0
  5313  004432  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5314  004434  0E02               	movlw	2
  5315  004436  6F76               	movwf	oled_putString@start_page& (0+255),b
  5316  004438  ECF3  F029         	call	_oled_putString	;wreg free
  5317                           
  5318                           ;poweruptest.c: 95: oled_putString("23:10:55",0,3);
  5319  00443C  0E47               	movlw	low STR_9
  5320  00443E  0100               	movlb	0	; () banked
  5321  004440  6F72               	movwf	oled_putString@string& (0+255),b
  5322  004442  0E7F               	movlw	high STR_9
  5323  004444  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5324  004446  5172               	movf	oled_putString@string& (0+255),w,b
  5325  004448  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5326  00444A  A4D8               	btfss	status,2,c
  5327  00444C  0E00               	movlw	low (__mediumconst shr (0+16))
  5328  00444E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5329  004450  0E00               	movlw	0
  5330  004452  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5331  004454  0E03               	movlw	3
  5332  004456  6F76               	movwf	oled_putString@start_page& (0+255),b
  5333  004458  ECF3  F029         	call	_oled_putString	;wreg free
  5334  00445C  0012               	return		;funcret
  5335  00445E                     __end_of_test_oled:
  5336                           	opt stack 0
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           postdec1	equ	0xFE5
  5345                           fsr1l	equ	0xFE1
  5346                           status	equ	0xFD8
  5347                           
  5348 ;; *************** function _test_leds *****************
  5349 ;; Defined at:
  5350 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:   15
  5371 ;; This function calls:
  5372 ;;		_delayms
  5373 ;;		_oled_putString
  5374 ;; This function is called by:
  5375 ;;		_test_powerup
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text4
  5380  0055B0                     __ptext4:
  5381                           	opt stack 0
  5382  0055B0                     _test_leds:
  5383                           	opt stack 14
  5384                           
  5385                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5386                           
  5387                           ;incstack = 0
  5388  0055B0  0E07               	movlw	low STR_16
  5389  0055B2  0100               	movlb	0	; () banked
  5390  0055B4  6F72               	movwf	oled_putString@string& (0+255),b
  5391  0055B6  0E7F               	movlw	high STR_16
  5392  0055B8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5393  0055BA  5172               	movf	oled_putString@string& (0+255),w,b
  5394  0055BC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5395  0055BE  A4D8               	btfss	status,2,c
  5396  0055C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5397  0055C2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5398  0055C4  0E00               	movlw	0
  5399  0055C6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5400  0055C8  0E01               	movlw	1
  5401  0055CA  6F76               	movwf	oled_putString@start_page& (0+255),b
  5402  0055CC  ECF3  F029         	call	_oled_putString	;wreg free
  5403                           
  5404                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5405  0055D0  8C89               	bsf	3977,6,c	;volatile
  5406                           
  5407                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5408  0055D2  8E89               	bsf	3977,7,c	;volatile
  5409                           
  5410                           ;poweruptest.c: 153: delayms(500);
  5411  0055D4  0E01               	movlw	1
  5412  0055D6  0100               	movlb	0	; () banked
  5413  0055D8  6F61               	movwf	(delayms@t+1)& (0+255),b
  5414  0055DA  0EF4               	movlw	244
  5415  0055DC  6F60               	movwf	delayms@t& (0+255),b
  5416  0055DE  EC6F  F02F         	call	_delayms	;wreg free
  5417                           
  5418                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5419  0055E2  9C89               	bcf	3977,6,c	;volatile
  5420                           
  5421                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5422  0055E4  9E89               	bcf	3977,7,c	;volatile
  5423                           
  5424                           ;poweruptest.c: 156: delayms(500);
  5425  0055E6  0E01               	movlw	1
  5426  0055E8  0100               	movlb	0	; () banked
  5427  0055EA  6F61               	movwf	(delayms@t+1)& (0+255),b
  5428  0055EC  0EF4               	movlw	244
  5429  0055EE  6F60               	movwf	delayms@t& (0+255),b
  5430  0055F0  EC6F  F02F         	call	_delayms	;wreg free
  5431                           
  5432                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5433  0055F4  8C89               	bsf	3977,6,c	;volatile
  5434                           
  5435                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5436  0055F6  8E89               	bsf	3977,7,c	;volatile
  5437                           
  5438                           ;poweruptest.c: 159: delayms(500);
  5439  0055F8  0E01               	movlw	1
  5440  0055FA  0100               	movlb	0	; () banked
  5441  0055FC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5442  0055FE  0EF4               	movlw	244
  5443  005600  6F60               	movwf	delayms@t& (0+255),b
  5444  005602  EC6F  F02F         	call	_delayms	;wreg free
  5445                           
  5446                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5447  005606  9C89               	bcf	3977,6,c	;volatile
  5448                           
  5449                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5450  005608  9E89               	bcf	3977,7,c	;volatile
  5451                           
  5452                           ;poweruptest.c: 162: delayms(500);
  5453  00560A  0E01               	movlw	1
  5454  00560C  0100               	movlb	0	; () banked
  5455  00560E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5456  005610  0EF4               	movlw	244
  5457  005612  6F60               	movwf	delayms@t& (0+255),b
  5458  005614  EC6F  F02F         	call	_delayms	;wreg free
  5459  005618  0012               	return		;funcret
  5460  00561A                     __end_of_test_leds:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           intcon	equ	0xFF2
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postdec1	equ	0xFE5
  5470                           fsr1l	equ	0xFE1
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _test_comms *****************
  5474 ;; Defined at:
  5475 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:   15
  5496 ;; This function calls:
  5497 ;;		_delayms
  5498 ;;		_moteApp_toggleLeds
  5499 ;;		_oled_putString
  5500 ;; This function is called by:
  5501 ;;		_test_powerup
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text5
  5506  0054CC                     __ptext5:
  5507                           	opt stack 0
  5508  0054CC                     _test_comms:
  5509                           	opt stack 14
  5510                           
  5511                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5512                           
  5513                           ;incstack = 0
  5514  0054CC  0EC0               	movlw	low STR_15
  5515  0054CE  0100               	movlb	0	; () banked
  5516  0054D0  6F72               	movwf	oled_putString@string& (0+255),b
  5517  0054D2  0E7E               	movlw	high STR_15
  5518  0054D4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5519  0054D6  5172               	movf	oled_putString@string& (0+255),w,b
  5520  0054D8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5521  0054DA  A4D8               	btfss	status,2,c
  5522  0054DC  0E00               	movlw	low (__mediumconst shr (0+16))
  5523  0054DE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5524  0054E0  0E00               	movlw	0
  5525  0054E2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5526  0054E4  0E00               	movlw	0
  5527  0054E6  6F76               	movwf	oled_putString@start_page& (0+255),b
  5528  0054E8  ECF3  F029         	call	_oled_putString	;wreg free
  5529                           
  5530                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5531  0054EC  0E01               	movlw	1
  5532  0054EE  EC86  F01D         	call	_moteApp_toggleLeds
  5533                           
  5534                           ;poweruptest.c: 138: delayms(500);
  5535  0054F2  0E01               	movlw	1
  5536  0054F4  0100               	movlb	0	; () banked
  5537  0054F6  6F61               	movwf	(delayms@t+1)& (0+255),b
  5538  0054F8  0EF4               	movlw	244
  5539  0054FA  6F60               	movwf	delayms@t& (0+255),b
  5540  0054FC  EC6F  F02F         	call	_delayms	;wreg free
  5541                           
  5542                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5543  005500  0E00               	movlw	0
  5544  005502  EC86  F01D         	call	_moteApp_toggleLeds
  5545                           
  5546                           ;poweruptest.c: 140: delayms(500);
  5547  005506  0E01               	movlw	1
  5548  005508  0100               	movlb	0	; () banked
  5549  00550A  6F61               	movwf	(delayms@t+1)& (0+255),b
  5550  00550C  0EF4               	movlw	244
  5551  00550E  6F60               	movwf	delayms@t& (0+255),b
  5552  005510  EC6F  F02F         	call	_delayms	;wreg free
  5553                           
  5554                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5555  005514  0E01               	movlw	1
  5556  005516  EC86  F01D         	call	_moteApp_toggleLeds
  5557                           
  5558                           ;poweruptest.c: 142: delayms(500);
  5559  00551A  0E01               	movlw	1
  5560  00551C  0100               	movlb	0	; () banked
  5561  00551E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5562  005520  0EF4               	movlw	244
  5563  005522  6F60               	movwf	delayms@t& (0+255),b
  5564  005524  EC6F  F02F         	call	_delayms	;wreg free
  5565                           
  5566                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5567  005528  0E00               	movlw	0
  5568  00552A  EC86  F01D         	call	_moteApp_toggleLeds
  5569                           
  5570                           ;poweruptest.c: 144: delayms(500);
  5571  00552E  0E01               	movlw	1
  5572  005530  0100               	movlb	0	; () banked
  5573  005532  6F61               	movwf	(delayms@t+1)& (0+255),b
  5574  005534  0EF4               	movlw	244
  5575  005536  6F60               	movwf	delayms@t& (0+255),b
  5576  005538  EC6F  F02F         	call	_delayms	;wreg free
  5577  00553C  0012               	return		;funcret
  5578  00553E                     __end_of_test_comms:
  5579                           	opt stack 0
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           intcon	equ	0xFF2
  5585                           postinc0	equ	0xFEE
  5586                           wreg	equ	0xFE8
  5587                           postdec1	equ	0xFE5
  5588                           fsr1l	equ	0xFE1
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function _moteApp_toggleLeds *****************
  5592 ;; Defined at:
  5593 ;;		line 1371 in file "../Includes/Board/MOTEapp.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  state           1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  state           1    4[BANK0 ] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5610 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        2 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:   14
  5614 ;; This function calls:
  5615 ;;		_sendCommand
  5616 ;; This function is called by:
  5617 ;;		_test_comms
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text6
  5622  003B0C                     __ptext6:
  5623                           	opt stack 0
  5624  003B0C                     _moteApp_toggleLeds:
  5625                           	opt stack 14
  5626                           
  5627                           ;incstack = 0
  5628                           ;moteApp_toggleLeds@state stored from wreg
  5629  003B0C  0100               	movlb	0	; () banked
  5630  003B0E  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5631                           
  5632                           ;MOTEapp.c: 1373: _delay((unsigned long)((16)*(48000000/4000.0)));
  5633  003B10  0EFA               	movlw	250
  5634  003B12  0100               	movlb	0	; () banked
  5635  003B14  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5636  003B16  0E58               	movlw	88
  5637  003B18                     u11677:
  5638  003B18  2EE8               	decfsz	wreg,f,c
  5639  003B1A  D7FE               	bra	u11677
  5640  003B1C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5641  003B1E  D7FC               	bra	u11677
  5642  003B20  F000               	nop	
  5643                           
  5644                           ;MOTEapp.c: 1374: _delay((unsigned long)((16)*(48000000/4000.0)));
  5645  003B22  0EFA               	movlw	250
  5646  003B24  0100               	movlb	0	; () banked
  5647  003B26  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5648  003B28  0E58               	movlw	88
  5649  003B2A                     u11687:
  5650  003B2A  2EE8               	decfsz	wreg,f,c
  5651  003B2C  D7FE               	bra	u11687
  5652  003B2E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5653  003B30  D7FC               	bra	u11687
  5654  003B32  F000               	nop	
  5655                           
  5656                           ;MOTEapp.c: 1375: _delay((unsigned long)((16)*(48000000/4000.0)));
  5657  003B34  0EFA               	movlw	250
  5658  003B36  0100               	movlb	0	; () banked
  5659  003B38  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5660  003B3A  0E58               	movlw	88
  5661  003B3C                     u11697:
  5662  003B3C  2EE8               	decfsz	wreg,f,c
  5663  003B3E  D7FE               	bra	u11697
  5664  003B40  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5665  003B42  D7FC               	bra	u11697
  5666  003B44  F000               	nop	
  5667                           
  5668                           ;MOTEapp.c: 1376: if (state)
  5669  003B46  0100               	movlb	0	; () banked
  5670  003B48  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5671  003B4A  B4D8               	btfsc	status,2,c
  5672  003B4C  D029               	goto	l723
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;MOTEapp.c: 1377: {
  5676                           ;MOTEapp.c: 1378: sendCommand("sys set pindig GPIO10 1\r\n");
  5677  003B4E  0E23               	movlw	low STR_178
  5678  003B50  6F61               	movwf	sendCommand@string& (0+255),b
  5679  003B52  0E7A               	movlw	high STR_178
  5680  003B54  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5681  003B56  EC3B  F02F         	call	_sendCommand	;wreg free
  5682                           
  5683                           ;MOTEapp.c: 1379: _delay((unsigned long)((16)*(48000000/4000.0)));
  5684  003B5A  0EFA               	movlw	250
  5685  003B5C  0100               	movlb	0	; () banked
  5686  003B5E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5687  003B60  0E58               	movlw	88
  5688  003B62                     u11707:
  5689  003B62  2EE8               	decfsz	wreg,f,c
  5690  003B64  D7FE               	bra	u11707
  5691  003B66  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5692  003B68  D7FC               	bra	u11707
  5693  003B6A  F000               	nop	
  5694                           
  5695                           ;MOTEapp.c: 1380: _delay((unsigned long)((16)*(48000000/4000.0)));
  5696  003B6C  0EFA               	movlw	250
  5697  003B6E  0100               	movlb	0	; () banked
  5698  003B70  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5699  003B72  0E58               	movlw	88
  5700  003B74                     u11717:
  5701  003B74  2EE8               	decfsz	wreg,f,c
  5702  003B76  D7FE               	bra	u11717
  5703  003B78  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5704  003B7A  D7FC               	bra	u11717
  5705  003B7C  F000               	nop	
  5706                           
  5707                           ;MOTEapp.c: 1381: _delay((unsigned long)((16)*(48000000/4000.0)));
  5708  003B7E  0EFA               	movlw	250
  5709  003B80  0100               	movlb	0	; () banked
  5710  003B82  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5711  003B84  0E58               	movlw	88
  5712  003B86                     u11727:
  5713  003B86  2EE8               	decfsz	wreg,f,c
  5714  003B88  D7FE               	bra	u11727
  5715  003B8A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5716  003B8C  D7FC               	bra	u11727
  5717  003B8E  F000               	nop	
  5718                           
  5719                           ;MOTEapp.c: 1382: sendCommand("sys set pindig GPIO11 1\r\n");
  5720  003B90  0E3D               	movlw	low STR_179
  5721  003B92  0100               	movlb	0	; () banked
  5722  003B94  6F61               	movwf	sendCommand@string& (0+255),b
  5723  003B96  0E7A               	movlw	high STR_179
  5724  003B98  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5725  003B9A  EC3B  F02F         	call	_sendCommand	;wreg free
  5726                           
  5727                           ;MOTEapp.c: 1383: }
  5728  003B9E  0012               	return	
  5729  003BA0                     l723:
  5730                           
  5731                           ;MOTEapp.c: 1384: else
  5732                           ;MOTEapp.c: 1385: {
  5733                           ;MOTEapp.c: 1386: sendCommand("sys set pindig GPIO10 0\r\n");
  5734  003BA0  0EEF               	movlw	low STR_180
  5735  003BA2  0100               	movlb	0	; () banked
  5736  003BA4  6F61               	movwf	sendCommand@string& (0+255),b
  5737  003BA6  0E79               	movlw	high STR_180
  5738  003BA8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5739  003BAA  EC3B  F02F         	call	_sendCommand	;wreg free
  5740                           
  5741                           ;MOTEapp.c: 1387: _delay((unsigned long)((16)*(48000000/4000.0)));
  5742  003BAE  0EFA               	movlw	250
  5743  003BB0  0100               	movlb	0	; () banked
  5744  003BB2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5745  003BB4  0E58               	movlw	88
  5746  003BB6                     u11737:
  5747  003BB6  2EE8               	decfsz	wreg,f,c
  5748  003BB8  D7FE               	bra	u11737
  5749  003BBA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5750  003BBC  D7FC               	bra	u11737
  5751  003BBE  F000               	nop	
  5752                           
  5753                           ;MOTEapp.c: 1388: _delay((unsigned long)((16)*(48000000/4000.0)));
  5754  003BC0  0EFA               	movlw	250
  5755  003BC2  0100               	movlb	0	; () banked
  5756  003BC4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5757  003BC6  0E58               	movlw	88
  5758  003BC8                     u11747:
  5759  003BC8  2EE8               	decfsz	wreg,f,c
  5760  003BCA  D7FE               	bra	u11747
  5761  003BCC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5762  003BCE  D7FC               	bra	u11747
  5763  003BD0  F000               	nop	
  5764                           
  5765                           ;MOTEapp.c: 1389: _delay((unsigned long)((16)*(48000000/4000.0)));
  5766  003BD2  0EFA               	movlw	250
  5767  003BD4  0100               	movlb	0	; () banked
  5768  003BD6  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5769  003BD8  0E58               	movlw	88
  5770  003BDA                     u11757:
  5771  003BDA  2EE8               	decfsz	wreg,f,c
  5772  003BDC  D7FE               	bra	u11757
  5773  003BDE  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5774  003BE0  D7FC               	bra	u11757
  5775  003BE2  F000               	nop	
  5776                           
  5777                           ;MOTEapp.c: 1390: sendCommand("sys set pindig GPIO11 0\r\n");
  5778  003BE4  0E09               	movlw	low STR_181
  5779  003BE6  0100               	movlb	0	; () banked
  5780  003BE8  6F61               	movwf	sendCommand@string& (0+255),b
  5781  003BEA  0E7A               	movlw	high STR_181
  5782  003BEC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5783  003BEE  EC3B  F02F         	call	_sendCommand	;wreg free
  5784  003BF2  0012               	return	
  5785  003BF4                     __end_of_moteApp_toggleLeds:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           intcon	equ	0xFF2
  5792                           postinc0	equ	0xFEE
  5793                           wreg	equ	0xFE8
  5794                           postdec1	equ	0xFE5
  5795                           fsr1l	equ	0xFE1
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function _delayms *****************
  5799 ;; Defined at:
  5800 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  t               2    0[BANK0 ] unsigned int 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  i               2    3[BANK0 ] unsigned int 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      void 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5814 ;;      Params:         0       2       0       0       0       0       0       0       0
  5815 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5816 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5817 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5818 ;;Total ram usage:        5 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   11
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_test_comms
  5825 ;;		_test_leds
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text7
  5830  005EDE                     __ptext7:
  5831                           	opt stack 0
  5832  005EDE                     _delayms:
  5833                           	opt stack 17
  5834                           
  5835                           ;poweruptest.c: 56: uint16_t i;
  5836                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5837                           
  5838                           ;incstack = 0
  5839  005EDE  0E00               	movlw	0
  5840  005EE0  0100               	movlb	0	; () banked
  5841  005EE2  6F64               	movwf	(delayms@i+1)& (0+255),b
  5842  005EE4  0E00               	movlw	0
  5843  005EE6  6F63               	movwf	delayms@i& (0+255),b
  5844  005EE8  D00C               	goto	l111
  5845  005EEA                     
  5846                           ; BSR set to: 0
  5847                           ;poweruptest.c: 58: {
  5848                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5849                           
  5850                           ; BSR set to: 0
  5851  005EEA  0E10               	movlw	16
  5852  005EEC  0100               	movlb	0	; () banked
  5853  005EEE  6F62               	movwf	??_delayms& (0+255),b
  5854  005EF0  0E94               	movlw	148
  5855  005EF2                     u11767:
  5856  005EF2  2EE8               	decfsz	wreg,f,c
  5857  005EF4  D7FE               	bra	u11767
  5858  005EF6  2F62               	decfsz	??_delayms& (0+255),f,b
  5859  005EF8  D7FC               	bra	u11767
  5860  005EFA  F000               	nop	
  5861  005EFC  0100               	movlb	0	; () banked
  5862  005EFE  4B63               	infsnz	delayms@i& (0+255),f,b
  5863  005F00  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5864  005F02                     l111:
  5865                           
  5866                           ; BSR set to: 0
  5867  005F02  5160               	movf	delayms@t& (0+255),w,b
  5868  005F04  5D63               	subwf	delayms@i& (0+255),w,b
  5869  005F06  5161               	movf	(delayms@t+1)& (0+255),w,b
  5870  005F08  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5871  005F0A  B0D8               	btfsc	status,0,c
  5872  005F0C  0012               	return	
  5873  005F0E  D7ED               	goto	l112
  5874  005F10                     __end_of_delayms:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           postdec1	equ	0xFE5
  5884                           fsr1l	equ	0xFE1
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _moteApp_testSensors *****************
  5888 ;; Defined at:
  5889 ;;		line 1475 in file "../Includes/Board/MOTEapp.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  dummyValue      2    0        unsigned int 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5905 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5906 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5907 ;;Total ram usage:        1 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:   16
  5910 ;; This function calls:
  5911 ;;		_ADC_TempConversion
  5912 ;;		_moteApp_convertSensorValue
  5913 ;;		_moteApp_getLightValue
  5914 ;;		_moteApp_getTempValue
  5915 ;;		_moteApp_setSensorsInput
  5916 ;;		_oled_clear
  5917 ;;		_oled_putChar
  5918 ;;		_oled_putString
  5919 ;;		_oled_putint8
  5920 ;; This function is called by:
  5921 ;;		_test_powerup
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text8
  5926  003838                     __ptext8:
  5927                           	opt stack 0
  5928  003838                     _moteApp_testSensors:
  5929                           	opt stack 13
  5930                           
  5931                           ;MOTEapp.c: 1478: moteApp_setSensorsInput();
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;incstack = 0
  5935  003838  ECB7  F029         	call	_moteApp_setSensorsInput	;wreg free
  5936                           
  5937                           ;MOTEapp.c: 1480: uint16_t dummyValue;
  5938                           ;MOTEapp.c: 1481: oled_clear();
  5939  00383C  EC5E  F031         	call	_oled_clear	;wreg free
  5940                           
  5941                           ;MOTEapp.c: 1482: oled_putString("ADC Test",0,0);
  5942  003840  0E59               	movlw	low STR_17
  5943  003842  0100               	movlb	0	; () banked
  5944  003844  6F72               	movwf	oled_putString@string& (0+255),b
  5945  003846  0E7F               	movlw	high STR_17
  5946  003848  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5947  00384A  5172               	movf	oled_putString@string& (0+255),w,b
  5948  00384C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5949  00384E  A4D8               	btfss	status,2,c
  5950  003850  0E00               	movlw	low (__mediumconst shr (0+16))
  5951  003852  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5952  003854  0E00               	movlw	0
  5953  003856  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5954  003858  0E00               	movlw	0
  5955  00385A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5956  00385C  ECF3  F029         	call	_oled_putString	;wreg free
  5957                           
  5958                           ;MOTEapp.c: 1483: oled_putString("Light =",0,1);
  5959  003860  0E72               	movlw	low STR_19
  5960  003862  0100               	movlb	0	; () banked
  5961  003864  6F72               	movwf	oled_putString@string& (0+255),b
  5962  003866  0E7F               	movlw	high STR_19
  5963  003868  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5964  00386A  5172               	movf	oled_putString@string& (0+255),w,b
  5965  00386C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5966  00386E  A4D8               	btfss	status,2,c
  5967  003870  0E00               	movlw	low (__mediumconst shr (0+16))
  5968  003872  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5969  003874  0E00               	movlw	0
  5970  003876  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5971  003878  0E01               	movlw	1
  5972  00387A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5973  00387C  ECF3  F029         	call	_oled_putString	;wreg free
  5974                           
  5975                           ;MOTEapp.c: 1484: oled_putString("Temp  =",0,2);
  5976  003880  0E6A               	movlw	low STR_18
  5977  003882  0100               	movlb	0	; () banked
  5978  003884  6F72               	movwf	oled_putString@string& (0+255),b
  5979  003886  0E7F               	movlw	high STR_18
  5980  003888  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5981  00388A  5172               	movf	oled_putString@string& (0+255),w,b
  5982  00388C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5983  00388E  A4D8               	btfss	status,2,c
  5984  003890  0E00               	movlw	low (__mediumconst shr (0+16))
  5985  003892  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5986  003894  0E00               	movlw	0
  5987  003896  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5988  003898  0E02               	movlw	2
  5989  00389A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5990  00389C  ECF3  F029         	call	_oled_putString	;wreg free
  5991                           
  5992                           ;MOTEapp.c: 1485: oled_putChar('C',14,2);
  5993  0038A0  0E0E               	movlw	14
  5994  0038A2  0100               	movlb	0	; () banked
  5995  0038A4  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5996  0038A6  0E02               	movlw	2
  5997  0038A8  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5998  0038AA  0E43               	movlw	67
  5999  0038AC  EC73  F028         	call	_oled_putChar
  6000                           
  6001                           ;MOTEapp.c: 1486: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6002  0038B0  EC11  F02E         	call	_moteApp_getTempValue	;wreg free
  6003  0038B4  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6004  0038B8  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6005  0038BC  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  6006  0038C0  C072  F0DE         	movff	?_moteApp_convertSensorValue,_temperature
  6007  0038C4  C073  F0DF         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6008                           
  6009                           ;MOTEapp.c: 1487: temperature = ADC_TempConversion(temperature);
  6010  0038C8  0100               	movlb	0	; () banked
  6011  0038CA  51DE               	movf	_temperature& (0+255),w,b
  6012  0038CC  EC11  F01D         	call	_ADC_TempConversion
  6013  0038D0  0100               	movlb	0	; () banked
  6014  0038D2  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  6015  0038D4  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  6016  0038D6  6FDE               	movwf	_temperature& (0+255),b
  6017  0038D8  6BDF               	clrf	(_temperature+1)& (0+255),b
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;MOTEapp.c: 1488: oled_putint8(temperature, 10, 2);
  6021  0038DA  0E0A               	movlw	10
  6022  0038DC  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6023  0038DE  0E02               	movlw	2
  6024  0038E0  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6025  0038E2  51DE               	movf	_temperature& (0+255),w,b
  6026  0038E4  EC21  F025         	call	_oled_putint8
  6027                           
  6028                           ;MOTEapp.c: 1489: __nop();
  6029  0038E8  F000               	nop	
  6030                           
  6031                           ;MOTEapp.c: 1490: oled_putString("    ", 10, 1);
  6032  0038EA  0EC8               	movlw	low (STR_40+12)
  6033  0038EC  0100               	movlb	0	; () banked
  6034  0038EE  6F72               	movwf	oled_putString@string& (0+255),b
  6035  0038F0  0E7A               	movlw	high (STR_40+12)
  6036  0038F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6037  0038F4  5172               	movf	oled_putString@string& (0+255),w,b
  6038  0038F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6039  0038F8  A4D8               	btfss	status,2,c
  6040  0038FA  0E00               	movlw	low (__mediumconst shr (0+16))
  6041  0038FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6042  0038FE  0E0A               	movlw	10
  6043  003900  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6044  003902  0E01               	movlw	1
  6045  003904  6F76               	movwf	oled_putString@start_page& (0+255),b
  6046  003906  ECF3  F029         	call	_oled_putString	;wreg free
  6047                           
  6048                           ;MOTEapp.c: 1491: oled_putString(moteApp_getLightValue(), 10, 1);
  6049  00390A  EC14  F02D         	call	_moteApp_getLightValue	;wreg free
  6050  00390E  0100               	movlb	0	; () banked
  6051  003910  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6052  003914  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6053  003918  5172               	movf	oled_putString@string& (0+255),w,b
  6054  00391A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6055  00391C  A4D8               	btfss	status,2,c
  6056  00391E  0E20               	movlw	32
  6057  003920  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6058  003922  0E0A               	movlw	10
  6059  003924  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6060  003926  0E01               	movlw	1
  6061  003928  6F76               	movwf	oled_putString@start_page& (0+255),b
  6062  00392A  ECF3  F029         	call	_oled_putString	;wreg free
  6063  00392E  0012               	return		;funcret
  6064  003930                     __end_of_moteApp_testSensors:
  6065                           	opt stack 0
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           intcon	equ	0xFF2
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           postdec1	equ	0xFE5
  6074                           fsr1l	equ	0xFE1
  6075                           status	equ	0xFD8
  6076                           
  6077 ;; *************** function _moteHandler *****************
  6078 ;; Defined at:
  6079 ;;		line 210 in file "../Includes/Board/MOTEapp.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  readMessage     1   95[BANK0 ] unsigned char 
  6084 ;;  buttonPress     1   94[BANK0 ] enum E5836
  6085 ;;  s2Button        1   93[BANK0 ] unsigned char 
  6086 ;;  gotoNextStat    1   92[BANK0 ] unsigned char 
  6087 ;;  gotoSleep       1   91[BANK0 ] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      enum E6875
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6099 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6100 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6101 ;;Total ram usage:        6 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:   19
  6104 ;; This function calls:
  6105 ;;		_ADC_TempConversion
  6106 ;;		_MOTEapp_TimerBasedTask
  6107 ;;		_MOTEapp_getModuleResponse
  6108 ;;		_TMRapp_ClearBitFlags
  6109 ;;		_TMRapp_Handler
  6110 ;;		_USBapp_exitCDC
  6111 ;;		_USBapp_exitCDCState
  6112 ;;		_moteApp_convertSensorValue
  6113 ;;		_moteApp_getLightValue
  6114 ;;		_moteApp_getTempValue
  6115 ;;		_moteApp_searchFrameGPS
  6116 ;;		_moteJoiningProcess
  6117 ;;		_moteRunningProcess
  6118 ;;		_oled_clear
  6119 ;;		_oled_putString
  6120 ;;		_oled_putint8
  6121 ;;		_service_pushbutton
  6122 ;; This function is called by:
  6123 ;;		_main
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text9
  6128  002456                     __ptext9:
  6129                           	opt stack 0
  6130  002456                     _moteHandler:
  6131                           	opt stack 11
  6132                           
  6133                           ;MOTEapp.c: 212: bool gotoSleep = 0;
  6134                           
  6135                           ;incstack = 0
  6136  002456  0E00               	movlw	0
  6137  002458  0100               	movlb	0	; () banked
  6138  00245A  6FBB               	movwf	moteHandler@gotoSleep& (0+255),b
  6139                           
  6140                           ;MOTEapp.c: 213: bool gotoNextState = 0;
  6141  00245C  0E00               	movlw	0
  6142  00245E  6FBC               	movwf	moteHandler@gotoNextState& (0+255),b
  6143                           
  6144                           ;MOTEapp.c: 214: bool s2Button = 0;
  6145  002460  0E00               	movlw	0
  6146  002462  6FBD               	movwf	moteHandler@s2Button& (0+255),b
  6147                           
  6148                           ;MOTEapp.c: 215: bool readMessage = 0;
  6149  002464  0E00               	movlw	0
  6150  002466  6FBF               	movwf	moteHandler@readMessage& (0+255),b
  6151                           
  6152                           ;MOTEapp.c: 216: buttonStates_t buttonPress = Released;
  6153  002468  0E03               	movlw	3
  6154  00246A  6FBE               	movwf	moteHandler@buttonPress& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;MOTEapp.c: 221: moteApp_searchFrameGPS();
  6158  00246C  EC94  F014         	call	_moteApp_searchFrameGPS	;wreg free
  6159                           
  6160                           ;MOTEapp.c: 224: if (PORTAbits.RA0)
  6161  002470  A080               	btfss	3968,0,c	;volatile
  6162  002472  D009               	goto	l381
  6163                           
  6164                           ;MOTEapp.c: 225: {
  6165                           ;MOTEapp.c: 226: if (USBapp_exitCDC() == NO_USB)
  6166  002474  EC43  F032         	call	_USBapp_exitCDC	;wreg free
  6167  002478  0900               	iorlw	0
  6168  00247A  A4D8               	btfss	status,2,c
  6169  00247C  D007               	goto	l383
  6170                           
  6171                           ;MOTEapp.c: 227: moteState = MOTE_SWAP;
  6172  00247E  0E04               	movlw	4
  6173  002480  0100               	movlb	0	; () banked
  6174  002482  6FFF               	movwf	_moteState& (0+255),b
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;MOTEapp.c: 228: } else {
  6178  002484  D003               	goto	l383
  6179  002486                     l381:
  6180                           
  6181                           ;MOTEapp.c: 229: USBapp_exitCDCState(NO_USB);
  6182                           
  6183                           ; BSR set to: 0
  6184  002486  0E00               	movlw	0
  6185  002488  EC1C  F032         	call	_USBapp_exitCDCState
  6186  00248C                     l383:
  6187                           
  6188                           ;MOTEapp.c: 230: }
  6189                           ;MOTEapp.c: 233: if ( appTimer.mSecTick )
  6190  00248C  0100               	movlb	0	; () banked
  6191  00248E  A1F9               	btfss	_appTimer& (0+255),0,b
  6192  002490  D008               	goto	l384
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;MOTEapp.c: 234: {
  6196                           ;MOTEapp.c: 236: TMRapp_ClearBitFlags();
  6197  002492  EC34  F032         	call	_TMRapp_ClearBitFlags	;wreg free
  6198                           
  6199                           ;MOTEapp.c: 238: TMRapp_Handler();
  6200  002496  EC17  F01B         	call	_TMRapp_Handler	;wreg free
  6201                           
  6202                           ;MOTEapp.c: 239: MOTEapp_TimerBasedTask(appTimer);
  6203  00249A  0100               	movlb	0	; () banked
  6204  00249C  51F9               	movf	_appTimer& (0+255),w,b
  6205  00249E  EC21  F031         	call	_MOTEapp_TimerBasedTask
  6206  0024A2                     l384:
  6207                           
  6208                           ;MOTEapp.c: 240: }
  6209                           ;MOTEapp.c: 243: buttonPress = service_pushbutton();
  6210  0024A2  EC42  F02B         	call	_service_pushbutton	;wreg free
  6211  0024A6  0100               	movlb	0	; () banked
  6212  0024A8  6FBE               	movwf	moteHandler@buttonPress& (0+255),b
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;MOTEapp.c: 244: if (buttonPress == ShortPress1)
  6216  0024AA  05BE               	decf	moteHandler@buttonPress& (0+255),w,b
  6217  0024AC  A4D8               	btfss	status,2,c
  6218  0024AE  D005               	goto	l385
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;MOTEapp.c: 245: {
  6222                           ;MOTEapp.c: 246: secTicker = 0;
  6223  0024B0  0E00               	movlw	0
  6224  0024B2  6FF2               	movwf	_secTicker& (0+255),b
  6225                           
  6226                           ;MOTEapp.c: 247: gotoNextState = 1;
  6227  0024B4  0E01               	movlw	1
  6228  0024B6  6FBC               	movwf	moteHandler@gotoNextState& (0+255),b
  6229                           
  6230                           ;MOTEapp.c: 248: }
  6231  0024B8  D008               	goto	l387
  6232  0024BA                     l385:
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;MOTEapp.c: 249: else if (buttonPress == ShortPress2)
  6236                           
  6237                           ; BSR set to: 0
  6238  0024BA  0E02               	movlw	2
  6239  0024BC  19BE               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6240  0024BE  A4D8               	btfss	status,2,c
  6241  0024C0  D004               	goto	l387
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;MOTEapp.c: 250: {
  6245                           ;MOTEapp.c: 251: secTicker = 0;
  6246  0024C2  0E00               	movlw	0
  6247  0024C4  6FF2               	movwf	_secTicker& (0+255),b
  6248                           
  6249                           ;MOTEapp.c: 252: s2Button = 1;
  6250  0024C6  0E01               	movlw	1
  6251  0024C8  6FBD               	movwf	moteHandler@s2Button& (0+255),b
  6252  0024CA                     l387:
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;MOTEapp.c: 253: }
  6256                           ;MOTEapp.c: 256: if ( MOTEapp_getModuleResponse() )
  6257                           
  6258                           ; BSR set to: 0
  6259                           
  6260                           ; BSR set to: 0
  6261  0024CA  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
  6262  0024CE  0900               	iorlw	0
  6263  0024D0  B4D8               	btfsc	status,2,c
  6264  0024D2  D002               	goto	l388
  6265                           
  6266                           ;MOTEapp.c: 257: readMessage = 1;
  6267  0024D4  0E01               	movlw	1
  6268  0024D6  D001               	goto	L1
  6269  0024D8                     l388:
  6270                           
  6271                           ;MOTEapp.c: 258: else
  6272                           ;MOTEapp.c: 259: readMessage = 0;
  6273                           
  6274                           ; BSR set to: 0
  6275  0024D8  0E00               	movlw	0
  6276  0024DA                     L1:
  6277  0024DA  0100               	movlb	0	; () banked
  6278  0024DC  6FBF               	movwf	moteHandler@readMessage& (0+255),b
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;MOTEapp.c: 262: if (runningState == runningSensorMenu)
  6282                           
  6283                           ; BSR set to: 0
  6284  0024DE  0E02               	movlw	2
  6285  0024E0  19F6               	xorwf	_runningState& (0+255),w,b
  6286  0024E2  A4D8               	btfss	status,2,c
  6287  0024E4  D04B               	goto	l391
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;MOTEapp.c: 263: {
  6291                           ;MOTEapp.c: 265: if (m10SecTicker >= 100)
  6292  0024E6  0101               	movlb	1	; () banked
  6293  0024E8  511B               	movf	(_m10SecTicker+1)& (0+255),w,b
  6294  0024EA  E104               	bnz	u10770
  6295  0024EC  0E64               	movlw	100
  6296  0024EE  5D1A               	subwf	_m10SecTicker& (0+255),w,b
  6297  0024F0  A0D8               	btfss	status,0,c
  6298  0024F2  D044               	goto	l391
  6299  0024F4                     u10770:
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;MOTEapp.c: 266: {
  6303                           ;MOTEapp.c: 267: __nop();
  6304  0024F4  F000               	nop	
  6305                           
  6306                           ;MOTEapp.c: 268: oled_putString("    ", 6, 1);
  6307  0024F6  0EC8               	movlw	low (STR_40+12)
  6308  0024F8  0100               	movlb	0	; () banked
  6309  0024FA  6F72               	movwf	oled_putString@string& (0+255),b
  6310  0024FC  0E7A               	movlw	high (STR_40+12)
  6311  0024FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6312  002500  5172               	movf	oled_putString@string& (0+255),w,b
  6313  002502  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6314  002504  A4D8               	btfss	status,2,c
  6315  002506  0E00               	movlw	low (__mediumconst shr (0+16))
  6316  002508  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6317  00250A  0E06               	movlw	6
  6318  00250C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6319  00250E  0E01               	movlw	1
  6320  002510  6F76               	movwf	oled_putString@start_page& (0+255),b
  6321  002512  ECF3  F029         	call	_oled_putString	;wreg free
  6322                           
  6323                           ;MOTEapp.c: 269: oled_putString(moteApp_getLightValue(), 6, 1);
  6324  002516  EC14  F02D         	call	_moteApp_getLightValue	;wreg free
  6325  00251A  0100               	movlb	0	; () banked
  6326  00251C  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6327  002520  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6328  002524  5172               	movf	oled_putString@string& (0+255),w,b
  6329  002526  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6330  002528  A4D8               	btfss	status,2,c
  6331  00252A  0E20               	movlw	32
  6332  00252C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6333  00252E  0E06               	movlw	6
  6334  002530  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6335  002532  0E01               	movlw	1
  6336  002534  6F76               	movwf	oled_putString@start_page& (0+255),b
  6337  002536  ECF3  F029         	call	_oled_putString	;wreg free
  6338                           
  6339                           ;MOTEapp.c: 270: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6340  00253A  EC11  F02E         	call	_moteApp_getTempValue	;wreg free
  6341  00253E  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6342  002542  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6343  002546  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  6344  00254A  C072  F0DE         	movff	?_moteApp_convertSensorValue,_temperature
  6345  00254E  C073  F0DF         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6346                           
  6347                           ;MOTEapp.c: 271: temperature = ADC_TempConversion(temperature);
  6348  002552  0100               	movlb	0	; () banked
  6349  002554  51DE               	movf	_temperature& (0+255),w,b
  6350  002556  EC11  F01D         	call	_ADC_TempConversion
  6351  00255A  0100               	movlb	0	; () banked
  6352  00255C  6FBA               	movwf	??_moteHandler& (0+255),b
  6353  00255E  51BA               	movf	??_moteHandler& (0+255),w,b
  6354  002560  6FDE               	movwf	_temperature& (0+255),b
  6355  002562  6BDF               	clrf	(_temperature+1)& (0+255),b
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;MOTEapp.c: 272: oled_putint8(temperature, 6, 2);
  6359  002564  0E06               	movlw	6
  6360  002566  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6361  002568  0E02               	movlw	2
  6362  00256A  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6363  00256C  51DE               	movf	_temperature& (0+255),w,b
  6364  00256E  EC21  F025         	call	_oled_putint8
  6365                           
  6366                           ;MOTEapp.c: 273: m10SecTicker = 0;
  6367  002572  0E00               	movlw	0
  6368  002574  0101               	movlb	1	; () banked
  6369  002576  6F1B               	movwf	(_m10SecTicker+1)& (0+255),b
  6370  002578  0E00               	movlw	0
  6371  00257A  6F1A               	movwf	_m10SecTicker& (0+255),b
  6372  00257C                     l391:
  6373                           
  6374                           ;MOTEapp.c: 274: }
  6375                           ;MOTEapp.c: 275: }
  6376                           ;MOTEapp.c: 277: if(secTicker)
  6377                           
  6378                           ; BSR set to: 1
  6379                           
  6380                           ; BSR set to: 1
  6381  00257C  0100               	movlb	0	; () banked
  6382  00257E  51F2               	movf	_secTicker& (0+255),w,b
  6383  002580  B4D8               	btfsc	status,2,c
  6384  002582  D08F               	goto	l394
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;MOTEapp.c: 278: {
  6388                           ;MOTEapp.c: 279: if ((secTicker >= 10) && (menuTimeout))
  6389  002584  0E09               	movlw	9
  6390  002586  65F2               	cpfsgt	_secTicker& (0+255),b
  6391  002588  D08C               	goto	l394
  6392                           
  6393                           ; BSR set to: 0
  6394  00258A  51FC               	movf	_menuTimeout& (0+255),w,b
  6395  00258C  B4D8               	btfsc	status,2,c
  6396  00258E  D089               	goto	l394
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;MOTEapp.c: 280: {
  6400                           ;MOTEapp.c: 281: gotoSleep = 1;
  6401  002590  0E01               	movlw	1
  6402  002592  6FBB               	movwf	moteHandler@gotoSleep& (0+255),b
  6403                           
  6404                           ;MOTEapp.c: 282: secTicker = 0;
  6405  002594  0E00               	movlw	0
  6406  002596  6FF2               	movwf	_secTicker& (0+255),b
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;MOTEapp.c: 283: }
  6410                           ;MOTEapp.c: 284: }
  6411                           ;MOTEapp.c: 286: switch(moteState)
  6412                           
  6413                           ; BSR set to: 0
  6414  002598  D084               	goto	l394
  6415  00259A                     
  6416                           ; BSR set to: 0
  6417                           ;MOTEapp.c: 289: while(1);
  6418  00259A  D7FF               	goto	l395
  6419  00259C                     
  6420                           ;MOTEapp.c: 292: oled_clear();
  6421  00259C  EC5E  F031         	call	_oled_clear	;wreg free
  6422                           
  6423                           ;MOTEapp.c: 293: oled_putString("MOTE Mode",1,0);
  6424  0025A0  0EDF               	movlw	low STR_24
  6425  0025A2  0100               	movlb	0	; () banked
  6426  0025A4  6F72               	movwf	oled_putString@string& (0+255),b
  6427  0025A6  0E7E               	movlw	high STR_24
  6428  0025A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6429  0025AA  5172               	movf	oled_putString@string& (0+255),w,b
  6430  0025AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6431  0025AE  A4D8               	btfss	status,2,c
  6432  0025B0  0E00               	movlw	low (__mediumconst shr (0+16))
  6433  0025B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6434  0025B4  0E01               	movlw	1
  6435  0025B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6436  0025B8  0E00               	movlw	0
  6437  0025BA  6F76               	movwf	oled_putString@start_page& (0+255),b
  6438  0025BC  ECF3  F029         	call	_oled_putString	;wreg free
  6439                           
  6440                           ;MOTEapp.c: 294: oled_putString("Starting",2,1);
  6441  0025C0  0E35               	movlw	low STR_25
  6442  0025C2  0100               	movlb	0	; () banked
  6443  0025C4  6F72               	movwf	oled_putString@string& (0+255),b
  6444  0025C6  0E7F               	movlw	high STR_25
  6445  0025C8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6446  0025CA  5172               	movf	oled_putString@string& (0+255),w,b
  6447  0025CC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6448  0025CE  A4D8               	btfss	status,2,c
  6449  0025D0  0E00               	movlw	low (__mediumconst shr (0+16))
  6450  0025D2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6451  0025D4  0E02               	movlw	2
  6452  0025D6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6453  0025D8  0E01               	movlw	1
  6454  0025DA  6F76               	movwf	oled_putString@start_page& (0+255),b
  6455  0025DC  ECF3  F029         	call	_oled_putString	;wreg free
  6456                           
  6457                           ;MOTEapp.c: 295: oled_putString("ReRun PwrTst<S2>",0,3);
  6458  0025E0  0EAA               	movlw	low STR_26
  6459  0025E2  0100               	movlb	0	; () banked
  6460  0025E4  6F72               	movwf	oled_putString@string& (0+255),b
  6461  0025E6  0E7B               	movlw	high STR_26
  6462  0025E8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6463  0025EA  5172               	movf	oled_putString@string& (0+255),w,b
  6464  0025EC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6465  0025EE  A4D8               	btfss	status,2,c
  6466  0025F0  0E00               	movlw	low (__mediumconst shr (0+16))
  6467  0025F2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6468  0025F4  0E00               	movlw	0
  6469  0025F6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6470  0025F8  0E03               	movlw	3
  6471  0025FA  6F76               	movwf	oled_putString@start_page& (0+255),b
  6472  0025FC  ECF3  F029         	call	_oled_putString	;wreg free
  6473                           
  6474                           ;MOTEapp.c: 296: activeState = moteStartup;
  6475  002600  0E00               	movlw	0
  6476  002602  6E53               	movwf	_activeState,c
  6477                           
  6478                           ;MOTEapp.c: 297: moteState = MOTE_JOINING;
  6479  002604  0E02               	movlw	2
  6480  002606  0100               	movlb	0	; () banked
  6481  002608  D040               	goto	L2
  6482  00260A                     
  6483                           ; BSR set to: 0
  6484                           ;MOTEapp.c: 300: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6485                           
  6486                           ; BSR set to: 0
  6487  00260A  C0BC  F078         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6488  00260E  C0BD  F079         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6489  002612  51BF               	movf	moteHandler@readMessage& (0+255),w,b
  6490  002614  EC8B  F00A         	call	_moteJoiningProcess
  6491  002618  0900               	iorlw	0
  6492  00261A  B4D8               	btfsc	status,2,c
  6493  00261C  D050               	goto	l399
  6494                           
  6495                           ;MOTEapp.c: 301: {
  6496                           ;MOTEapp.c: 302: oled_clear();
  6497  00261E  EC5E  F031         	call	_oled_clear	;wreg free
  6498                           
  6499                           ;MOTEapp.c: 303: oled_putString("Mobile Mote -App",0,0);
  6500  002622  0EFF               	movlw	low STR_27
  6501  002624  0100               	movlb	0	; () banked
  6502  002626  6F72               	movwf	oled_putString@string& (0+255),b
  6503  002628  0E7B               	movlw	high STR_27
  6504  00262A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6505  00262C  5172               	movf	oled_putString@string& (0+255),w,b
  6506  00262E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6507  002630  A4D8               	btfss	status,2,c
  6508  002632  0E00               	movlw	low (__mediumconst shr (0+16))
  6509  002634  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6510  002636  0E00               	movlw	0
  6511  002638  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6512  00263A  0E00               	movlw	0
  6513  00263C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6514  00263E  ECF3  F029         	call	_oled_putString	;wreg free
  6515                           
  6516                           ;MOTEapp.c: 304: oled_putString("Navigate  Select", 0,2);
  6517  002642  0E10               	movlw	low STR_28
  6518  002644  0100               	movlb	0	; () banked
  6519  002646  6F72               	movwf	oled_putString@string& (0+255),b
  6520  002648  0E7C               	movlw	high STR_28
  6521  00264A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6522  00264C  5172               	movf	oled_putString@string& (0+255),w,b
  6523  00264E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6524  002650  A4D8               	btfss	status,2,c
  6525  002652  0E00               	movlw	low (__mediumconst shr (0+16))
  6526  002654  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6527  002656  0E00               	movlw	0
  6528  002658  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6529  00265A  0E02               	movlw	2
  6530  00265C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6531  00265E  ECF3  F029         	call	_oled_putString	;wreg free
  6532                           
  6533                           ;MOTEapp.c: 305: oled_putString(" (S2)      (S3) ", 0,3);
  6534  002662  0E33               	movlw	low STR_29
  6535  002664  0100               	movlb	0	; () banked
  6536  002666  6F72               	movwf	oled_putString@string& (0+255),b
  6537  002668  0E7B               	movlw	high STR_29
  6538  00266A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6539  00266C  5172               	movf	oled_putString@string& (0+255),w,b
  6540  00266E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6541  002670  A4D8               	btfss	status,2,c
  6542  002672  0E00               	movlw	low (__mediumconst shr (0+16))
  6543  002674  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6544  002676  0E00               	movlw	0
  6545  002678  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6546  00267A  0E03               	movlw	3
  6547  00267C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6548  00267E  ECF3  F029         	call	_oled_putString	;wreg free
  6549                           
  6550                           ;MOTEapp.c: 306: runningState = runningEnter;
  6551  002682  0E00               	movlw	0
  6552  002684  0100               	movlb	0	; () banked
  6553  002686  6FF6               	movwf	_runningState& (0+255),b
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;MOTEapp.c: 307: moteState = MOTE_RUNNING;
  6557  002688  0E03               	movlw	3
  6558  00268A                     L2:
  6559  00268A  6FFF               	movwf	_moteState& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;MOTEapp.c: 308: }
  6563                           ;MOTEapp.c: 309: break;
  6564  00268C  D018               	goto	l399
  6565  00268E                     
  6566                           ; BSR set to: 0
  6567                           ;MOTEapp.c: 311: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6568                           
  6569                           ; BSR set to: 0
  6570  00268E  C0BD  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6571  002692  C0BF  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6572  002696  C0BB  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6573  00269A  51BC               	movf	moteHandler@gotoNextState& (0+255),w,b
  6574  00269C  EC81  F000         	call	_moteRunningProcess
  6575                           
  6576                           ;MOTEapp.c: 316: }
  6577                           
  6578                           ;MOTEapp.c: 315: break;
  6579                           
  6580                           ;MOTEapp.c: 313: case MOTE_SWAP:
  6581                           
  6582                           ;MOTEapp.c: 312: break;
  6583  0026A0  D00E               	goto	l399
  6584  0026A2                     l394:
  6585  0026A2  0100               	movlb	0	; () banked
  6586  0026A4  51FF               	movf	_moteState& (0+255),w,b
  6587                           
  6588                           ; Switch size 1, requested type "space"
  6589                           ; Number of cases is 4, Range of values is 1 to 4
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte           13     7 (average)
  6593                           ;	Chosen strategy is simple_byte
  6594  0026A6  0A01               	xorlw	1	; case 1
  6595  0026A8  B4D8               	btfsc	status,2,c
  6596  0026AA  D778               	goto	l400
  6597  0026AC  0A03               	xorlw	3	; case 2
  6598  0026AE  B4D8               	btfsc	status,2,c
  6599  0026B0  D7AC               	goto	l401
  6600  0026B2  0A01               	xorlw	1	; case 3
  6601  0026B4  B4D8               	btfsc	status,2,c
  6602  0026B6  D7EB               	goto	l403
  6603  0026B8  0A07               	xorlw	7	; case 4
  6604  0026BA  A4D8               	btfss	status,2,c
  6605  0026BC  D76E               	goto	l395
  6606  0026BE                     l399:
  6607                           
  6608                           ;MOTEapp.c: 317: return moteState;
  6609                           
  6610                           ; BSR set to: 0
  6611  0026BE  0100               	movlb	0	; () banked
  6612  0026C0  51FF               	movf	_moteState& (0+255),w,b
  6613  0026C2  0012               	return	
  6614  0026C4                     __end_of_moteHandler:
  6615                           	opt stack 0
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           intcon	equ	0xFF2
  6621                           postinc0	equ	0xFEE
  6622                           wreg	equ	0xFE8
  6623                           postdec1	equ	0xFE5
  6624                           fsr1l	equ	0xFE1
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function _moteRunningProcess *****************
  6628 ;; Defined at:
  6629 ;;		line 516 in file "../Includes/Board/MOTEapp.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  changeStates    1    wreg     unsigned char 
  6632 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6633 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6634 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  changeStates    1   89[BANK0 ] unsigned char 
  6637 ;;  counter         1   87[BANK0 ] unsigned char 
  6638 ;;  i               1   86[BANK0 ] unsigned char 
  6639 ;;  i               1   85[BANK0 ] unsigned char 
  6640 ;;  i               1   84[BANK0 ] unsigned char 
  6641 ;;  bufferReadPo    1   88[BANK0 ] unsigned char 
  6642 ;;  sizeOfUpdate    1   83[BANK0 ] unsigned char 
  6643 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6644 ;;  readByte        1   81[BANK0 ] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      enum E6181
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6654 ;;      Params:         0       3       0       0       0       0       0       0       0
  6655 ;;      Locals:         0       9       0       0       0       0       0       0       0
  6656 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6657 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6658 ;;Total ram usage:       14 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:   18
  6661 ;; This function calls:
  6662 ;;		_ADC_TempConversion
  6663 ;;		_MOTEapp_SetDataRateSetting
  6664 ;;		_TMR2_ReadTimer
  6665 ;;		_moteApp_GoToSleep
  6666 ;;		_moteApp_add8bToDataBuffer
  6667 ;;		_moteApp_addToDataBuffer
  6668 ;;		_moteApp_clearBuffers
  6669 ;;		_moteApp_convertSensorValue
  6670 ;;		_moteApp_delayms
  6671 ;;		_moteApp_getLightString
  6672 ;;		_moteApp_getLightValue
  6673 ;;		_moteApp_getTempValue
  6674 ;;		_moteApp_lightStringSize
  6675 ;;		_moteApp_setSensorsInput
  6676 ;;		_oled_clear
  6677 ;;		_oled_putString
  6678 ;;		_oled_putUint8
  6679 ;;		_oled_putint8
  6680 ;;		_sendDataCommand
  6681 ;;		_strcmp
  6682 ;;		_strncmp
  6683 ;; This function is called by:
  6684 ;;		_moteHandler
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text10
  6689  000102                     __ptext10:
  6690                           	opt stack 0
  6691  000102                     _moteRunningProcess:
  6692                           	opt stack 11
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;incstack = 0
  6696                           ;moteRunningProcess@changeStates stored from wreg
  6697  000102  0100               	movlb	0	; () banked
  6698  000104  6FB9               	movwf	moteRunningProcess@changeStates& (0+255),b
  6699                           
  6700                           ;MOTEapp.c: 518: uint8_t readByte = 0;
  6701  000106  0E00               	movlw	0
  6702  000108  0100               	movlb	0	; () banked
  6703  00010A  6FB1               	movwf	moteRunningProcess@readByte& (0+255),b
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;MOTEapp.c: 520: if ((sleepEvent) && (periodicState))
  6707  00010C  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6708  00010E  B4D8               	btfsc	status,2,c
  6709  000110  EF5D  F00A         	goto	l489
  6710                           
  6711                           ; BSR set to: 0
  6712  000114  51FB               	movf	_periodicState& (0+255),w,b
  6713  000116  B4D8               	btfsc	status,2,c
  6714  000118  EF5D  F00A         	goto	l489
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;MOTEapp.c: 521: {
  6718                           ;MOTEapp.c: 522: if (sleepTicker >= periodicTimerValue)
  6719  00011C  505C               	movf	_periodicTimerValue,w,c
  6720  00011E  5C52               	subwf	_sleepTicker,w,c
  6721  000120  A0D8               	btfss	status,0,c
  6722  000122  D11D               	goto	l477
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;MOTEapp.c: 523: {
  6726                           ;MOTEapp.c: 525: moteApp_clearBuffers();
  6727  000124  EC5F  F027         	call	_moteApp_clearBuffers	;wreg free
  6728                           
  6729                           ;MOTEapp.c: 528: light = 0;
  6730  000128  0E00               	movlw	0
  6731  00012A  0101               	movlb	1	; () banked
  6732  00012C  6F1D               	movwf	(_light+1)& (0+255),b
  6733  00012E  0E00               	movlw	0
  6734  000130  6F1C               	movwf	_light& (0+255),b
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;MOTEapp.c: 529: temperature = 0;
  6738  000132  0E00               	movlw	0
  6739  000134  0100               	movlb	0	; () banked
  6740  000136  6FDF               	movwf	(_temperature+1)& (0+255),b
  6741  000138  0E00               	movlw	0
  6742  00013A  6FDE               	movwf	_temperature& (0+255),b
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;MOTEapp.c: 530: __nop();
  6746  00013C  F000               	nop	
  6747                           
  6748                           ;MOTEapp.c: 532: moteApp_setSensorsInput();
  6749  00013E  ECB7  F029         	call	_moteApp_setSensorsInput	;wreg free
  6750                           
  6751                           ;MOTEapp.c: 533: uint8_t sizeOfUpdate = 0;
  6752  000142  0E00               	movlw	0
  6753  000144  0100               	movlb	0	; () banked
  6754  000146  6FB2               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;MOTEapp.c: 534: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6758  000148  EC14  F02D         	call	_moteApp_getLightValue	;wreg free
  6759  00014C  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6760  000150  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6761  000154  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  6762  000158  C072  F11C         	movff	?_moteApp_convertSensorValue,_light
  6763  00015C  C073  F11D         	movff	?_moteApp_convertSensorValue+1,_light+1
  6764                           
  6765                           ;MOTEapp.c: 535: oled_putString(moteApp_getLightString(), 6, 1);
  6766  000160  EC05  F032         	call	_moteApp_getLightString	;wreg free
  6767  000164  0100               	movlb	0	; () banked
  6768  000166  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6769  00016A  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6770  00016E  5172               	movf	oled_putString@string& (0+255),w,b
  6771  000170  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6772  000172  A4D8               	btfss	status,2,c
  6773  000174  0E20               	movlw	32
  6774  000176  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6775  000178  0E06               	movlw	6
  6776  00017A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6777  00017C  0E01               	movlw	1
  6778  00017E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6779  000180  ECF3  F029         	call	_oled_putString	;wreg free
  6780                           
  6781                           ;MOTEapp.c: 536: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6782  000184  EC05  F032         	call	_moteApp_getLightString	;wreg free
  6783  000188  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6784  00018C  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6785  000190  0E04               	movlw	4
  6786  000192  0100               	movlb	0	; () banked
  6787  000194  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6788  000196  ECDE  F02B         	call	_moteApp_addToDataBuffer	;wreg free
  6789  00019A  0100               	movlb	0	; () banked
  6790  00019C  6FB2               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;MOTEapp.c: 538: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6794  00019E  EC11  F02E         	call	_moteApp_getTempValue	;wreg free
  6795  0001A2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6796  0001A6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6797  0001AA  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  6798  0001AE  C072  F0DE         	movff	?_moteApp_convertSensorValue,_temperature
  6799  0001B2  C073  F0DF         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6800                           
  6801                           ;MOTEapp.c: 539: temperature = ADC_TempConversion(temperature);
  6802  0001B6  0100               	movlb	0	; () banked
  6803  0001B8  51DE               	movf	_temperature& (0+255),w,b
  6804  0001BA  EC11  F01D         	call	_ADC_TempConversion
  6805  0001BE  0100               	movlb	0	; () banked
  6806  0001C0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6807  0001C2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6808  0001C4  6FDE               	movwf	_temperature& (0+255),b
  6809  0001C6  6BDF               	clrf	(_temperature+1)& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;MOTEapp.c: 540: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6813  0001C8  EC4C  F032         	call	_moteApp_lightStringSize	;wreg free
  6814  0001CC  0F05               	addlw	5
  6815  0001CE  0100               	movlb	0	; () banked
  6816  0001D0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6817  0001D2  51DE               	movf	_temperature& (0+255),w,b
  6818  0001D4  ECC6  F024         	call	_moteApp_add8bToDataBuffer
  6819                           
  6820                           ;MOTEapp.c: 543: sleepTicker = 0;
  6821  0001D8  0E00               	movlw	0
  6822  0001DA  6E52               	movwf	_sleepTicker,c
  6823                           
  6824                           ;MOTEapp.c: 544: oled_clear();
  6825  0001DC  EC5E  F031         	call	_oled_clear	;wreg free
  6826                           
  6827                           ;MOTEapp.c: 545: oled_putString("Send Periodic Tx",0,0);
  6828  0001E0  0E32               	movlw	low STR_71
  6829  0001E2  0100               	movlb	0	; () banked
  6830  0001E4  6F72               	movwf	oled_putString@string& (0+255),b
  6831  0001E6  0E7C               	movlw	high STR_71
  6832  0001E8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6833  0001EA  5172               	movf	oled_putString@string& (0+255),w,b
  6834  0001EC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6835  0001EE  A4D8               	btfss	status,2,c
  6836  0001F0  0E00               	movlw	low (__mediumconst shr (0+16))
  6837  0001F2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6838  0001F4  0E00               	movlw	0
  6839  0001F6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6840  0001F8  0E00               	movlw	0
  6841  0001FA  6F76               	movwf	oled_putString@start_page& (0+255),b
  6842  0001FC  ECF3  F029         	call	_oled_putString	;wreg free
  6843                           
  6844                           ;MOTEapp.c: 546: oled_putString("On Port #: ",0,1);
  6845  000200  0E35               	movlw	low STR_72
  6846  000202  0100               	movlb	0	; () banked
  6847  000204  6F72               	movwf	oled_putString@string& (0+255),b
  6848  000206  0E7E               	movlw	high STR_72
  6849  000208  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6850  00020A  5172               	movf	oled_putString@string& (0+255),w,b
  6851  00020C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6852  00020E  A4D8               	btfss	status,2,c
  6853  000210  0E00               	movlw	low (__mediumconst shr (0+16))
  6854  000212  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6855  000214  0E00               	movlw	0
  6856  000216  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6857  000218  0E01               	movlw	1
  6858  00021A  6F76               	movwf	oled_putString@start_page& (0+255),b
  6859  00021C  ECF3  F029         	call	_oled_putString	;wreg free
  6860                           
  6861                           ;MOTEapp.c: 547: oled_putString("L:       T: ",0,2);
  6862  000220  0E73               	movlw	low STR_73
  6863  000222  0100               	movlb	0	; () banked
  6864  000224  6F72               	movwf	oled_putString@string& (0+255),b
  6865  000226  0E7D               	movlw	high STR_73
  6866  000228  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6867  00022A  5172               	movf	oled_putString@string& (0+255),w,b
  6868  00022C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6869  00022E  A4D8               	btfss	status,2,c
  6870  000230  0E00               	movlw	low (__mediumconst shr (0+16))
  6871  000232  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6872  000234  0E00               	movlw	0
  6873  000236  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6874  000238  0E02               	movlw	2
  6875  00023A  6F76               	movwf	oled_putString@start_page& (0+255),b
  6876  00023C  ECF3  F029         	call	_oled_putString	;wreg free
  6877                           
  6878                           ;MOTEapp.c: 548: oled_putString(moteApp_getLightString(), 3, 2);
  6879  000240  EC05  F032         	call	_moteApp_getLightString	;wreg free
  6880  000244  0100               	movlb	0	; () banked
  6881  000246  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6882  00024A  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6883  00024E  5172               	movf	oled_putString@string& (0+255),w,b
  6884  000250  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6885  000252  A4D8               	btfss	status,2,c
  6886  000254  0E20               	movlw	32
  6887  000256  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6888  000258  0E03               	movlw	3
  6889  00025A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6890  00025C  0E02               	movlw	2
  6891  00025E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6892  000260  ECF3  F029         	call	_oled_putString	;wreg free
  6893                           
  6894                           ;MOTEapp.c: 549: oled_putint8(temperature,11,2);
  6895  000264  0E0B               	movlw	11
  6896  000266  0100               	movlb	0	; () banked
  6897  000268  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6898  00026A  0E02               	movlw	2
  6899  00026C  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6900  00026E  51DE               	movf	_temperature& (0+255),w,b
  6901  000270  EC21  F025         	call	_oled_putint8
  6902                           
  6903                           ;MOTEapp.c: 551: randomPortNum = TMR2_ReadTimer();
  6904  000274  EC17  F032         	call	_TMR2_ReadTimer	;wreg free
  6905  000278  0100               	movlb	0	; () banked
  6906  00027A  6FF3               	movwf	_randomPortNum& (0+255),b
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;MOTEapp.c: 553: if (!randomPortNum)
  6910  00027C  51F3               	movf	_randomPortNum& (0+255),w,b
  6911  00027E  A4D8               	btfss	status,2,c
  6912  000280  D002               	goto	l478
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;MOTEapp.c: 554: randomPortNum = 5;
  6916  000282  0E05               	movlw	5
  6917  000284  D005               	goto	L3
  6918  000286                     l478:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;MOTEapp.c: 555: else if (randomPortNum > 223)
  6922                           
  6923                           ; BSR set to: 0
  6924  000286  0EDF               	movlw	223
  6925  000288  65F3               	cpfsgt	_randomPortNum& (0+255),b
  6926  00028A  D003               	goto	l480
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;MOTEapp.c: 556: randomPortNum = randomPortNum - 50;
  6930  00028C  51F3               	movf	_randomPortNum& (0+255),w,b
  6931  00028E  0FCE               	addlw	206
  6932  000290                     L3:
  6933  000290  6FF3               	movwf	_randomPortNum& (0+255),b
  6934  000292                     l480:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;MOTEapp.c: 558: oled_putUint8(randomPortNum,10,1);
  6938                           
  6939                           ; BSR set to: 0
  6940                           
  6941                           ; BSR set to: 0
  6942  000292  0E0A               	movlw	10
  6943  000294  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  6944  000296  0E01               	movlw	1
  6945  000298  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  6946  00029A  51F3               	movf	_randomPortNum& (0+255),w,b
  6947  00029C  ECCB  F026         	call	_oled_putUint8
  6948                           
  6949                           ;MOTEapp.c: 560: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6950  0002A0  0E00               	movlw	0
  6951  0002A2  0100               	movlb	0	; () banked
  6952  0002A4  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6953  0002A6  51F3               	movf	_randomPortNum& (0+255),w,b
  6954  0002A8  ECC6  F024         	call	_moteApp_add8bToDataBuffer
  6955                           
  6956                           ;MOTEapp.c: 561: dataBuffer[3] = 0x20;
  6957  0002AC  0E20               	movlw	32
  6958  0002AE  0101               	movlb	1	; () banked
  6959  0002B0  6F2F               	movwf	(_dataBuffer+3)& (0+255),b
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;MOTEapp.c: 564: if(lengthDataGPS)
  6963  0002B2  0100               	movlb	0	; () banked
  6964  0002B4  51F0               	movf	_lengthDataGPS& (0+255),w,b
  6965  0002B6  B4D8               	btfsc	status,2,c
  6966  0002B8  D02D               	goto	l481
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;MOTEapp.c: 565: {
  6970                           ;MOTEapp.c: 566: for(uint8_t i = 0; i < lengthDataGPS; i++ )
  6971  0002BA  0E00               	movlw	0
  6972  0002BC  6FB4               	movwf	moteRunningProcess@i& (0+255),b
  6973  0002BE  D018               	goto	l482
  6974  0002C0                     
  6975                           ; BSR set to: 0
  6976                           ;MOTEapp.c: 567: {
  6977                           ;MOTEapp.c: 568: dataBuffer[4 + i] = dataFrameGPS[i];
  6978                           
  6979                           ; BSR set to: 0
  6980  0002C0  51B4               	movf	moteRunningProcess@i& (0+255),w,b
  6981  0002C2  0D01               	mullw	1
  6982  0002C4  0E00               	movlw	low _dataFrameGPS
  6983  0002C6  24F3               	addwf	prodl,w,c
  6984  0002C8  6ED9               	movwf	fsr2l,c
  6985  0002CA  0E06               	movlw	high _dataFrameGPS
  6986  0002CC  20F4               	addwfc	prodh,w,c
  6987  0002CE  6EDA               	movwf	fsr2h,c
  6988  0002D0  51B4               	movf	moteRunningProcess@i& (0+255),w,b
  6989  0002D2  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6990  0002D4  6BB0               	clrf	(??_moteRunningProcess+1)& (0+255),b
  6991  0002D6  0E04               	movlw	4
  6992  0002D8  27AF               	addwf	??_moteRunningProcess& (0+255),f,b
  6993  0002DA  0E00               	movlw	0
  6994  0002DC  23B0               	addwfc	(??_moteRunningProcess+1)& (0+255),f,b
  6995  0002DE  0E2C               	movlw	low _dataBuffer
  6996  0002E0  25AF               	addwf	??_moteRunningProcess& (0+255),w,b
  6997  0002E2  6EE1               	movwf	fsr1l,c
  6998  0002E4  0E01               	movlw	high _dataBuffer
  6999  0002E6  21B0               	addwfc	(??_moteRunningProcess+1)& (0+255),w,b
  7000  0002E8  6EE2               	movwf	fsr1h,c
  7001  0002EA  CFDF FFE7          	movff	indf2,indf1
  7002                           
  7003                           ; BSR set to: 0
  7004  0002EE  2BB4               	incf	moteRunningProcess@i& (0+255),f,b
  7005  0002F0                     l482:
  7006                           
  7007                           ; BSR set to: 0
  7008                           
  7009                           ; BSR set to: 0
  7010  0002F0  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7011  0002F2  5DB4               	subwf	moteRunningProcess@i& (0+255),w,b
  7012  0002F4  A0D8               	btfss	status,0,c
  7013  0002F6  D7E4               	goto	l483
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;MOTEapp.c: 569: }
  7017                           ;MOTEapp.c: 570: sendDataCommand("mac tx uncnf ", dataBuffer, lengthDataGPS+4);
  7018                           
  7019                           ; BSR set to: 0
  7020  0002F8  0E2E               	movlw	low STR_74
  7021  0002FA  6F61               	movwf	sendDataCommand@string& (0+255),b
  7022  0002FC  0E7D               	movlw	high STR_74
  7023  0002FE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7024  000300  0E2C               	movlw	low _dataBuffer
  7025  000302  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7026  000304  0E01               	movlw	high _dataBuffer
  7027  000306  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7028  000308  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7029  00030A  0F04               	addlw	4
  7030  00030C  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7031  00030E  EC91  F022         	call	_sendDataCommand	;wreg free
  7032                           
  7033                           ;MOTEapp.c: 571: }
  7034  000312  D01E               	goto	l485
  7035  000314                     l481:
  7036                           
  7037                           ;MOTEapp.c: 572: else
  7038                           ;MOTEapp.c: 573: {
  7039                           ;MOTEapp.c: 574: dataBuffer[4] = 'E';
  7040  000314  0E45               	movlw	69
  7041  000316  0101               	movlb	1	; () banked
  7042  000318  6F30               	movwf	(_dataBuffer+4)& (0+255),b
  7043                           
  7044                           ;MOTEapp.c: 575: dataBuffer[5] = 'R';
  7045  00031A  0E52               	movlw	82
  7046  00031C  6F31               	movwf	(_dataBuffer+5)& (0+255),b
  7047                           
  7048                           ;MOTEapp.c: 576: dataBuffer[6] = 'R';
  7049  00031E  0E52               	movlw	82
  7050  000320  6F32               	movwf	(_dataBuffer+6)& (0+255),b
  7051                           
  7052                           ;MOTEapp.c: 577: dataBuffer[7] = 'O';
  7053  000322  0E4F               	movlw	79
  7054  000324  6F33               	movwf	(_dataBuffer+7)& (0+255),b
  7055                           
  7056                           ;MOTEapp.c: 578: dataBuffer[8] = 'R';
  7057  000326  0E52               	movlw	82
  7058  000328  6F34               	movwf	(_dataBuffer+8)& (0+255),b
  7059                           
  7060                           ;MOTEapp.c: 579: dataBuffer[9] = '-';
  7061  00032A  0E2D               	movlw	45
  7062  00032C  6F35               	movwf	(_dataBuffer+9)& (0+255),b
  7063                           
  7064                           ;MOTEapp.c: 580: dataBuffer[10] = 'C';
  7065  00032E  0E43               	movlw	67
  7066  000330  6F36               	movwf	(_dataBuffer+10)& (0+255),b
  7067                           
  7068                           ;MOTEapp.c: 581: dataBuffer[11] = 'S';
  7069  000332  0E53               	movlw	83
  7070  000334  6F37               	movwf	(_dataBuffer+11)& (0+255),b
  7071                           
  7072                           ; BSR set to: 1
  7073                           ;MOTEapp.c: 582: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7074  000336  0E2E               	movlw	low STR_74
  7075  000338  0100               	movlb	0	; () banked
  7076  00033A  6F61               	movwf	sendDataCommand@string& (0+255),b
  7077  00033C  0E7D               	movlw	high STR_74
  7078  00033E  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7079  000340  0E2C               	movlw	low _dataBuffer
  7080  000342  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7081  000344  0E01               	movlw	high _dataBuffer
  7082  000346  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7083  000348  0E0C               	movlw	12
  7084  00034A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7085  00034C  EC91  F022         	call	_sendDataCommand	;wreg free
  7086  000350                     l485:
  7087                           
  7088                           ;MOTEapp.c: 583: }
  7089                           ;MOTEapp.c: 585: secTicker = 10 - (10 / 3);
  7090  000350  0E07               	movlw	7
  7091  000352  0100               	movlb	0	; () banked
  7092  000354  6FF2               	movwf	_secTicker& (0+255),b
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;MOTEapp.c: 586: runningState = runningUplinkTransmit;
  7096  000356  0E08               	movlw	8
  7097  000358  6FF6               	movwf	_runningState& (0+255),b
  7098                           
  7099                           ;MOTEapp.c: 587: }
  7100  00035A  EF5D  F00A         	goto	l489
  7101  00035E                     l477:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;MOTEapp.c: 588: else
  7105                           ;MOTEapp.c: 589: {
  7106                           ;MOTEapp.c: 590: if (menuTimeout)
  7107                           
  7108                           ; BSR set to: 0
  7109  00035E  51FC               	movf	_menuTimeout& (0+255),w,b
  7110  000360  B4D8               	btfsc	status,2,c
  7111  000362  D007               	goto	l487
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;MOTEapp.c: 591: {
  7115                           ;MOTEapp.c: 592: sleepTicker++;
  7116  000364  2A52               	incf	_sleepTicker,f,c
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;MOTEapp.c: 593: runningState = runningSleep;
  7120  000366  0E0F               	movlw	15
  7121  000368  6FF6               	movwf	_runningState& (0+255),b
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;MOTEapp.c: 594: selectButton = 1;
  7125  00036A  0E01               	movlw	1
  7126  00036C  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  7127                           
  7128                           ;MOTEapp.c: 595: } else {
  7129  00036E  EF5D  F00A         	goto	l489
  7130  000372                     l487:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;MOTEapp.c: 596: sleepTicker = 0;
  7134                           
  7135                           ; BSR set to: 0
  7136  000372  0E00               	movlw	0
  7137  000374  6E52               	movwf	_sleepTicker,c
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;MOTEapp.c: 597: }
  7141                           ;MOTEapp.c: 598: }
  7142                           ;MOTEapp.c: 599: }
  7143                           ;MOTEapp.c: 602: switch(runningState)
  7144                           
  7145                           ; BSR set to: 0
  7146                           
  7147                           ; BSR set to: 0
  7148  000376  EF5D  F00A         	goto	l489
  7149  00037A                     
  7150                           ; BSR set to: 0
  7151                           ;MOTEapp.c: 605: while(1);
  7152  00037A  D7FF               	goto	l490
  7153  00037C                     
  7154                           ;MOTEapp.c: 608: if ( (changeStates) || (selectButton) )
  7155  00037C  0100               	movlb	0	; () banked
  7156  00037E  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7157  000380  A4D8               	btfss	status,2,c
  7158  000382  D003               	goto	u9780
  7159                           
  7160                           ; BSR set to: 0
  7161  000384  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7162  000386  B4D8               	btfsc	status,2,c
  7163  000388  0012               	return	
  7164  00038A                     u9780:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;MOTEapp.c: 609: {
  7168                           ;MOTEapp.c: 610: oled_clear();
  7169                           
  7170                           ; BSR set to: 0
  7171  00038A  EC5E  F031         	call	_oled_clear	;wreg free
  7172                           
  7173                           ;MOTEapp.c: 611: oled_putString("  Issue Uplink  ",0,0);
  7174  00038E  0E22               	movlw	low STR_76
  7175  000390  0100               	movlb	0	; () banked
  7176  000392  6F72               	movwf	oled_putString@string& (0+255),b
  7177  000394  0E7B               	movlw	high STR_76
  7178  000396  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7179  000398  5172               	movf	oled_putString@string& (0+255),w,b
  7180  00039A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7181  00039C  A4D8               	btfss	status,2,c
  7182  00039E  0E00               	movlw	low (__mediumconst shr (0+16))
  7183  0003A0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7184  0003A2  0E00               	movlw	0
  7185  0003A4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7186  0003A6  0E00               	movlw	0
  7187  0003A8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7188  0003AA  ECF3  F029         	call	_oled_putString	;wreg free
  7189                           
  7190                           ;MOTEapp.c: 612: oled_putString(" LoRaWAN Packet ",0,1);
  7191  0003AE  0E88               	movlw	low STR_77
  7192  0003B0  0100               	movlb	0	; () banked
  7193  0003B2  6F72               	movwf	oled_putString@string& (0+255),b
  7194  0003B4  0E7B               	movlw	high STR_77
  7195  0003B6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7196  0003B8  5172               	movf	oled_putString@string& (0+255),w,b
  7197  0003BA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7198  0003BC  A4D8               	btfss	status,2,c
  7199  0003BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7200  0003C0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7201  0003C2  0E00               	movlw	0
  7202  0003C4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7203  0003C6  0E01               	movlw	1
  7204  0003C8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7205  0003CA  ECF3  F029         	call	_oled_putString	;wreg free
  7206                           
  7207                           ;MOTEapp.c: 613: oled_putString("(NAV)    (SEL) ",0,3);
  7208  0003CE  0E84               	movlw	low STR_78
  7209  0003D0  0100               	movlb	0	; () banked
  7210  0003D2  6F72               	movwf	oled_putString@string& (0+255),b
  7211  0003D4  0E7C               	movlw	high STR_78
  7212  0003D6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7213  0003D8  5172               	movf	oled_putString@string& (0+255),w,b
  7214  0003DA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7215  0003DC  A4D8               	btfss	status,2,c
  7216  0003DE  0E00               	movlw	low (__mediumconst shr (0+16))
  7217  0003E0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7218  0003E2  0E00               	movlw	0
  7219  0003E4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7220  0003E6  0E03               	movlw	3
  7221  0003E8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7222  0003EA  ECF3  F029         	call	_oled_putString	;wreg free
  7223                           
  7224                           ;MOTEapp.c: 614: runningState = runningUplink;
  7225  0003EE  0E06               	movlw	6
  7226  0003F0  0100               	movlb	0	; () banked
  7227  0003F2  6FF6               	movwf	_runningState& (0+255),b
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;MOTEapp.c: 615: }
  7231                           ;MOTEapp.c: 616: break;
  7232  0003F4  0012               	return	
  7233  0003F6                     
  7234                           ; BSR set to: 0
  7235                           ;MOTEapp.c: 618: if (changeStates)
  7236                           
  7237                           ; BSR set to: 0
  7238  0003F6  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7239  0003F8  B4D8               	btfsc	status,2,c
  7240  0003FA  D036               	goto	l500
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;MOTEapp.c: 619: {
  7244                           ;MOTEapp.c: 620: oled_clear();
  7245  0003FC  EC5E  F031         	call	_oled_clear	;wreg free
  7246                           
  7247                           ;MOTEapp.c: 621: oled_putString(" View Downlink  ",0,0);
  7248  000400  0E11               	movlw	low STR_79
  7249  000402  0100               	movlb	0	; () banked
  7250  000404  6F72               	movwf	oled_putString@string& (0+255),b
  7251  000406  0E7B               	movlw	high STR_79
  7252  000408  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7253  00040A  5172               	movf	oled_putString@string& (0+255),w,b
  7254  00040C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7255  00040E  A4D8               	btfss	status,2,c
  7256  000410  0E00               	movlw	low (__mediumconst shr (0+16))
  7257  000412  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7258  000414  0E00               	movlw	0
  7259  000416  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7260  000418  0E00               	movlw	0
  7261  00041A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7262  00041C  ECF3  F029         	call	_oled_putString	;wreg free
  7263                           
  7264                           ;MOTEapp.c: 622: oled_putString("  Last Message  ",0,1);
  7265  000420  0E00               	movlw	low STR_80
  7266  000422  0100               	movlb	0	; () banked
  7267  000424  6F72               	movwf	oled_putString@string& (0+255),b
  7268  000426  0E7B               	movlw	high STR_80
  7269  000428  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7270  00042A  5172               	movf	oled_putString@string& (0+255),w,b
  7271  00042C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7272  00042E  A4D8               	btfss	status,2,c
  7273  000430  0E00               	movlw	low (__mediumconst shr (0+16))
  7274  000432  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7275  000434  0E00               	movlw	0
  7276  000436  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7277  000438  0E01               	movlw	1
  7278  00043A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7279  00043C  ECF3  F029         	call	_oled_putString	;wreg free
  7280                           
  7281                           ;MOTEapp.c: 623: oled_putString("(NAV)    (SEL) ",0,3);
  7282  000440  0E84               	movlw	low STR_78
  7283  000442  0100               	movlb	0	; () banked
  7284  000444  6F72               	movwf	oled_putString@string& (0+255),b
  7285  000446  0E7C               	movlw	high STR_78
  7286  000448  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7287  00044A  5172               	movf	oled_putString@string& (0+255),w,b
  7288  00044C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7289  00044E  A4D8               	btfss	status,2,c
  7290  000450  0E00               	movlw	low (__mediumconst shr (0+16))
  7291  000452  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7292  000454  0E00               	movlw	0
  7293  000456  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7294  000458  0E03               	movlw	3
  7295  00045A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7296  00045C  ECF3  F029         	call	_oled_putString	;wreg free
  7297                           
  7298                           ;MOTEapp.c: 624: runningState = runningDownlink;
  7299  000460  0E0A               	movlw	10
  7300  000462  0100               	movlb	0	; () banked
  7301  000464  6FF6               	movwf	_runningState& (0+255),b
  7302                           
  7303                           ;MOTEapp.c: 625: }
  7304  000466  0012               	return	
  7305  000468                     l500:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;MOTEapp.c: 626: else if (selectButton)
  7309                           
  7310                           ; BSR set to: 0
  7311  000468  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7312  00046A  B4D8               	btfsc	status,2,c
  7313  00046C  0012               	return	
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;MOTEapp.c: 627: {
  7317                           ;MOTEapp.c: 628: sleepTicker = 0;
  7318  00046E  0E00               	movlw	0
  7319  000470  6E52               	movwf	_sleepTicker,c
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;MOTEapp.c: 630: oled_clear();
  7323  000472  EC5E  F031         	call	_oled_clear	;wreg free
  7324                           
  7325                           ;MOTEapp.c: 631: oled_putString("Uplink Pckt Type",0,0);
  7326  000476  0EDD               	movlw	low STR_82
  7327  000478  0100               	movlb	0	; () banked
  7328  00047A  6F72               	movwf	oled_putString@string& (0+255),b
  7329  00047C  0E7B               	movlw	high STR_82
  7330  00047E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7331  000480  5172               	movf	oled_putString@string& (0+255),w,b
  7332  000482  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7333  000484  A4D8               	btfss	status,2,c
  7334  000486  0E00               	movlw	low (__mediumconst shr (0+16))
  7335  000488  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7336  00048A  0E00               	movlw	0
  7337  00048C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7338  00048E  0E00               	movlw	0
  7339  000490  6F76               	movwf	oled_putString@start_page& (0+255),b
  7340  000492  ECF3  F029         	call	_oled_putString	;wreg free
  7341                           
  7342                           ;MOTEapp.c: 632: oled_putString("Throu Port# ",0,1);
  7343  000496  0E66               	movlw	low STR_83
  7344  000498  0100               	movlb	0	; () banked
  7345  00049A  6F72               	movwf	oled_putString@string& (0+255),b
  7346  00049C  0E7D               	movlw	high STR_83
  7347  00049E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7348  0004A0  5172               	movf	oled_putString@string& (0+255),w,b
  7349  0004A2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7350  0004A4  A4D8               	btfss	status,2,c
  7351  0004A6  0E00               	movlw	low (__mediumconst shr (0+16))
  7352  0004A8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7353  0004AA  0E00               	movlw	0
  7354  0004AC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7355  0004AE  0E01               	movlw	1
  7356  0004B0  6F76               	movwf	oled_putString@start_page& (0+255),b
  7357  0004B2  ECF3  F029         	call	_oled_putString	;wreg free
  7358                           
  7359                           ;MOTEapp.c: 634: oled_putString("(UNCNF)    (CNF) ",0,3);
  7360  0004B6  0EAA               	movlw	low STR_84
  7361  0004B8  0100               	movlb	0	; () banked
  7362  0004BA  6F72               	movwf	oled_putString@string& (0+255),b
  7363  0004BC  0E7A               	movlw	high STR_84
  7364  0004BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7365  0004C0  5172               	movf	oled_putString@string& (0+255),w,b
  7366  0004C2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7367  0004C4  A4D8               	btfss	status,2,c
  7368  0004C6  0E00               	movlw	low (__mediumconst shr (0+16))
  7369  0004C8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7370  0004CA  0E00               	movlw	0
  7371  0004CC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7372  0004CE  0E03               	movlw	3
  7373  0004D0  6F76               	movwf	oled_putString@start_page& (0+255),b
  7374  0004D2  ECF3  F029         	call	_oled_putString	;wreg free
  7375                           
  7376                           ;MOTEapp.c: 636: moteApp_clearBuffers();
  7377  0004D6  EC5F  F027         	call	_moteApp_clearBuffers	;wreg free
  7378                           
  7379                           ;MOTEapp.c: 637: randomPortNum = TMR2_ReadTimer();
  7380  0004DA  EC17  F032         	call	_TMR2_ReadTimer	;wreg free
  7381  0004DE  0100               	movlb	0	; () banked
  7382  0004E0  6FF3               	movwf	_randomPortNum& (0+255),b
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;MOTEapp.c: 639: if (!randomPortNum)
  7386  0004E2  51F3               	movf	_randomPortNum& (0+255),w,b
  7387  0004E4  A4D8               	btfss	status,2,c
  7388  0004E6  D002               	goto	l503
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;MOTEapp.c: 640: randomPortNum = 5;
  7392  0004E8  0E05               	movlw	5
  7393  0004EA  D005               	goto	L4
  7394  0004EC                     l503:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;MOTEapp.c: 641: else if (randomPortNum > 223)
  7398                           
  7399                           ; BSR set to: 0
  7400  0004EC  0EDF               	movlw	223
  7401  0004EE  65F3               	cpfsgt	_randomPortNum& (0+255),b
  7402  0004F0  D003               	goto	l505
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;MOTEapp.c: 642: randomPortNum = randomPortNum - 50;
  7406  0004F2  51F3               	movf	_randomPortNum& (0+255),w,b
  7407  0004F4  0FCE               	addlw	206
  7408  0004F6                     L4:
  7409  0004F6  6FF3               	movwf	_randomPortNum& (0+255),b
  7410  0004F8                     l505:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;MOTEapp.c: 643: oled_putUint8(randomPortNum,12,1);
  7414                           
  7415                           ; BSR set to: 0
  7416                           
  7417                           ; BSR set to: 0
  7418  0004F8  0E0C               	movlw	12
  7419  0004FA  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7420  0004FC  0E01               	movlw	1
  7421  0004FE  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7422  000500  51F3               	movf	_randomPortNum& (0+255),w,b
  7423  000502  ECCB  F026         	call	_oled_putUint8
  7424                           
  7425                           ;MOTEapp.c: 644: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7426  000506  0E00               	movlw	0
  7427  000508  0100               	movlb	0	; () banked
  7428  00050A  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7429  00050C  51F3               	movf	_randomPortNum& (0+255),w,b
  7430  00050E  ECC6  F024         	call	_moteApp_add8bToDataBuffer
  7431                           
  7432                           ;MOTEapp.c: 645: dataBuffer[3] = 0x20;
  7433  000512  0E20               	movlw	32
  7434  000514  0101               	movlb	1	; () banked
  7435  000516  6F2F               	movwf	(_dataBuffer+3)& (0+255),b
  7436                           
  7437                           ; BSR set to: 1
  7438                           ;MOTEapp.c: 647: light = 0;
  7439  000518  0E00               	movlw	0
  7440  00051A  6F1D               	movwf	(_light+1)& (0+255),b
  7441  00051C  0E00               	movlw	0
  7442  00051E  6F1C               	movwf	_light& (0+255),b
  7443                           
  7444                           ; BSR set to: 1
  7445                           ;MOTEapp.c: 648: temperature = 0;
  7446  000520  0E00               	movlw	0
  7447  000522  0100               	movlb	0	; () banked
  7448  000524  6FDF               	movwf	(_temperature+1)& (0+255),b
  7449  000526  0E00               	movlw	0
  7450  000528  6FDE               	movwf	_temperature& (0+255),b
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;MOTEapp.c: 649: __nop();
  7454  00052A  F000               	nop	
  7455                           
  7456                           ;MOTEapp.c: 650: moteApp_setSensorsInput();
  7457  00052C  ECB7  F029         	call	_moteApp_setSensorsInput	;wreg free
  7458                           
  7459                           ;MOTEapp.c: 651: moteApp_delayms(500);
  7460  000530  0E01               	movlw	1
  7461  000532  0100               	movlb	0	; () banked
  7462  000534  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7463  000536  0EF4               	movlw	244
  7464  000538  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7465  00053A  EC88  F02F         	call	_moteApp_delayms	;wreg free
  7466                           
  7467                           ;MOTEapp.c: 652: uint8_t sizeOfUpdate = 0;
  7468  00053E  0E00               	movlw	0
  7469  000540  0100               	movlb	0	; () banked
  7470  000542  6FB3               	movwf	moteRunningProcess@sizeOfUpdate_1526& (0+255),b
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;MOTEapp.c: 653: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7474  000544  EC14  F02D         	call	_moteApp_getLightValue	;wreg free
  7475  000548  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7476  00054C  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7477  000550  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  7478  000554  C072  F11C         	movff	?_moteApp_convertSensorValue,_light
  7479  000558  C073  F11D         	movff	?_moteApp_convertSensorValue+1,_light+1
  7480                           
  7481                           ;MOTEapp.c: 654: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7482  00055C  EC14  F02D         	call	_moteApp_getLightValue	;wreg free
  7483  000560  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7484  000564  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7485  000568  0E04               	movlw	4
  7486  00056A  0100               	movlb	0	; () banked
  7487  00056C  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7488  00056E  ECDE  F02B         	call	_moteApp_addToDataBuffer	;wreg free
  7489  000572  0100               	movlb	0	; () banked
  7490  000574  6FB3               	movwf	moteRunningProcess@sizeOfUpdate_1526& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;MOTEapp.c: 655: __nop();
  7494  000576  F000               	nop	
  7495                           
  7496                           ;MOTEapp.c: 656: __nop();
  7497  000578  F000               	nop	
  7498                           
  7499                           ;MOTEapp.c: 657: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7500  00057A  EC11  F02E         	call	_moteApp_getTempValue	;wreg free
  7501  00057E  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7502  000582  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7503  000586  EC78  F029         	call	_moteApp_convertSensorValue	;wreg free
  7504  00058A  C072  F0DE         	movff	?_moteApp_convertSensorValue,_temperature
  7505  00058E  C073  F0DF         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7506                           
  7507                           ;MOTEapp.c: 658: temperature = ADC_TempConversion(temperature);
  7508  000592  0100               	movlb	0	; () banked
  7509  000594  51DE               	movf	_temperature& (0+255),w,b
  7510  000596  EC11  F01D         	call	_ADC_TempConversion
  7511  00059A  0100               	movlb	0	; () banked
  7512  00059C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7513  00059E  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7514  0005A0  6FDE               	movwf	_temperature& (0+255),b
  7515  0005A2  6BDF               	clrf	(_temperature+1)& (0+255),b
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;MOTEapp.c: 659: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7519  0005A4  EC4C  F032         	call	_moteApp_lightStringSize	;wreg free
  7520  0005A8  0F05               	addlw	5
  7521  0005AA  0100               	movlb	0	; () banked
  7522  0005AC  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7523  0005AE  51DE               	movf	_temperature& (0+255),w,b
  7524  0005B0  ECC6  F024         	call	_moteApp_add8bToDataBuffer
  7525                           
  7526                           ;MOTEapp.c: 660: __nop();
  7527  0005B4  F000               	nop	
  7528                           
  7529                           ;MOTEapp.c: 662: runningState = runningUplinkSelect;
  7530  0005B6  0E07               	movlw	7
  7531  0005B8  0100               	movlb	0	; () banked
  7532  0005BA  6FF6               	movwf	_runningState& (0+255),b
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;MOTEapp.c: 663: }
  7536                           ;MOTEapp.c: 664: break;
  7537                           
  7538                           ; BSR set to: 0
  7539  0005BC  0012               	return	
  7540  0005BE                     
  7541                           ; BSR set to: 0
  7542                           ;MOTEapp.c: 666: if (changeStates)
  7543                           
  7544                           ; BSR set to: 0
  7545  0005BE  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7546  0005C0  B4D8               	btfsc	status,2,c
  7547  0005C2  D04E               	goto	l512
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;MOTEapp.c: 667: {
  7551                           ;MOTEapp.c: 668: if(lengthDataGPS)
  7552  0005C4  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7553  0005C6  B4D8               	btfsc	status,2,c
  7554  0005C8  D02D               	goto	l508
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;MOTEapp.c: 669: {
  7558                           ;MOTEapp.c: 670: for(uint8_t i = 0; i < lengthDataGPS; i++ )
  7559  0005CA  0E00               	movlw	0
  7560  0005CC  6FB5               	movwf	moteRunningProcess@i_1527& (0+255),b
  7561  0005CE  D018               	goto	l509
  7562  0005D0                     
  7563                           ; BSR set to: 0
  7564                           ;MOTEapp.c: 671: {
  7565                           ;MOTEapp.c: 672: dataBuffer[4 + i] = dataFrameGPS[i];
  7566                           
  7567                           ; BSR set to: 0
  7568  0005D0  51B5               	movf	moteRunningProcess@i_1527& (0+255),w,b
  7569  0005D2  0D01               	mullw	1
  7570  0005D4  0E00               	movlw	low _dataFrameGPS
  7571  0005D6  24F3               	addwf	prodl,w,c
  7572  0005D8  6ED9               	movwf	fsr2l,c
  7573  0005DA  0E06               	movlw	high _dataFrameGPS
  7574  0005DC  20F4               	addwfc	prodh,w,c
  7575  0005DE  6EDA               	movwf	fsr2h,c
  7576  0005E0  51B5               	movf	moteRunningProcess@i_1527& (0+255),w,b
  7577  0005E2  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7578  0005E4  6BB0               	clrf	(??_moteRunningProcess+1)& (0+255),b
  7579  0005E6  0E04               	movlw	4
  7580  0005E8  27AF               	addwf	??_moteRunningProcess& (0+255),f,b
  7581  0005EA  0E00               	movlw	0
  7582  0005EC  23B0               	addwfc	(??_moteRunningProcess+1)& (0+255),f,b
  7583  0005EE  0E2C               	movlw	low _dataBuffer
  7584  0005F0  25AF               	addwf	??_moteRunningProcess& (0+255),w,b
  7585  0005F2  6EE1               	movwf	fsr1l,c
  7586  0005F4  0E01               	movlw	high _dataBuffer
  7587  0005F6  21B0               	addwfc	(??_moteRunningProcess+1)& (0+255),w,b
  7588  0005F8  6EE2               	movwf	fsr1h,c
  7589  0005FA  CFDF FFE7          	movff	indf2,indf1
  7590                           
  7591                           ; BSR set to: 0
  7592  0005FE  2BB5               	incf	moteRunningProcess@i_1527& (0+255),f,b
  7593  000600                     l509:
  7594                           
  7595                           ; BSR set to: 0
  7596                           
  7597                           ; BSR set to: 0
  7598  000600  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7599  000602  5DB5               	subwf	moteRunningProcess@i_1527& (0+255),w,b
  7600  000604  A0D8               	btfss	status,0,c
  7601  000606  D7E4               	goto	l510
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;MOTEapp.c: 673: }
  7605                           ;MOTEapp.c: 674: sendDataCommand("mac tx uncnf ", dataBuffer, lengthDataGPS+4);
  7606                           
  7607                           ; BSR set to: 0
  7608  000608  0E2E               	movlw	low STR_74
  7609  00060A  6F61               	movwf	sendDataCommand@string& (0+255),b
  7610  00060C  0E7D               	movlw	high STR_74
  7611  00060E  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7612  000610  0E2C               	movlw	low _dataBuffer
  7613  000612  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7614  000614  0E01               	movlw	high _dataBuffer
  7615  000616  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7616  000618  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7617  00061A  0F04               	addlw	4
  7618  00061C  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7619  00061E  EC91  F022         	call	_sendDataCommand	;wreg free
  7620                           
  7621                           ;MOTEapp.c: 675: }
  7622  000622  D01E               	goto	l512
  7623  000624                     l508:
  7624                           
  7625                           ;MOTEapp.c: 676: else
  7626                           ;MOTEapp.c: 677: {
  7627                           ;MOTEapp.c: 678: dataBuffer[4] = 'E';
  7628  000624  0E45               	movlw	69
  7629  000626  0101               	movlb	1	; () banked
  7630  000628  6F30               	movwf	(_dataBuffer+4)& (0+255),b
  7631                           
  7632                           ;MOTEapp.c: 679: dataBuffer[5] = 'R';
  7633  00062A  0E52               	movlw	82
  7634  00062C  6F31               	movwf	(_dataBuffer+5)& (0+255),b
  7635                           
  7636                           ;MOTEapp.c: 680: dataBuffer[6] = 'R';
  7637  00062E  0E52               	movlw	82
  7638  000630  6F32               	movwf	(_dataBuffer+6)& (0+255),b
  7639                           
  7640                           ;MOTEapp.c: 681: dataBuffer[7] = 'O';
  7641  000632  0E4F               	movlw	79
  7642  000634  6F33               	movwf	(_dataBuffer+7)& (0+255),b
  7643                           
  7644                           ;MOTEapp.c: 682: dataBuffer[8] = 'R';
  7645  000636  0E52               	movlw	82
  7646  000638  6F34               	movwf	(_dataBuffer+8)& (0+255),b
  7647                           
  7648                           ;MOTEapp.c: 683: dataBuffer[9] = '-';
  7649  00063A  0E2D               	movlw	45
  7650  00063C  6F35               	movwf	(_dataBuffer+9)& (0+255),b
  7651                           
  7652                           ;MOTEapp.c: 684: dataBuffer[10] = 'C';
  7653  00063E  0E43               	movlw	67
  7654  000640  6F36               	movwf	(_dataBuffer+10)& (0+255),b
  7655                           
  7656                           ;MOTEapp.c: 685: dataBuffer[11] = 'S';
  7657  000642  0E53               	movlw	83
  7658  000644  6F37               	movwf	(_dataBuffer+11)& (0+255),b
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;MOTEapp.c: 686: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7662  000646  0E2E               	movlw	low STR_74
  7663  000648  0100               	movlb	0	; () banked
  7664  00064A  6F61               	movwf	sendDataCommand@string& (0+255),b
  7665  00064C  0E7D               	movlw	high STR_74
  7666  00064E  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7667  000650  0E2C               	movlw	low _dataBuffer
  7668  000652  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7669  000654  0E01               	movlw	high _dataBuffer
  7670  000656  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7671  000658  0E0C               	movlw	12
  7672  00065A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7673  00065C  EC91  F022         	call	_sendDataCommand	;wreg free
  7674  000660                     l512:
  7675                           
  7676                           ;MOTEapp.c: 687: }
  7677                           ;MOTEapp.c: 688: }
  7678                           ;MOTEapp.c: 689: if (selectButton)
  7679  000660  0100               	movlb	0	; () banked
  7680  000662  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7681  000664  B4D8               	btfsc	status,2,c
  7682  000666  D04E               	goto	l518
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;MOTEapp.c: 690: {
  7686                           ;MOTEapp.c: 691: if(lengthDataGPS)
  7687  000668  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7688  00066A  B4D8               	btfsc	status,2,c
  7689  00066C  D02D               	goto	l514
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;MOTEapp.c: 692: {
  7693                           ;MOTEapp.c: 693: for(uint8_t i = 0; i < lengthDataGPS; i++ )
  7694  00066E  0E00               	movlw	0
  7695  000670  6FB6               	movwf	moteRunningProcess@i_1530& (0+255),b
  7696  000672  D018               	goto	l515
  7697  000674                     
  7698                           ; BSR set to: 0
  7699                           ;MOTEapp.c: 694: {
  7700                           ;MOTEapp.c: 695: dataBuffer[4 + i] = dataFrameGPS[i];
  7701                           
  7702                           ; BSR set to: 0
  7703  000674  51B6               	movf	moteRunningProcess@i_1530& (0+255),w,b
  7704  000676  0D01               	mullw	1
  7705  000678  0E00               	movlw	low _dataFrameGPS
  7706  00067A  24F3               	addwf	prodl,w,c
  7707  00067C  6ED9               	movwf	fsr2l,c
  7708  00067E  0E06               	movlw	high _dataFrameGPS
  7709  000680  20F4               	addwfc	prodh,w,c
  7710  000682  6EDA               	movwf	fsr2h,c
  7711  000684  51B6               	movf	moteRunningProcess@i_1530& (0+255),w,b
  7712  000686  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7713  000688  6BB0               	clrf	(??_moteRunningProcess+1)& (0+255),b
  7714  00068A  0E04               	movlw	4
  7715  00068C  27AF               	addwf	??_moteRunningProcess& (0+255),f,b
  7716  00068E  0E00               	movlw	0
  7717  000690  23B0               	addwfc	(??_moteRunningProcess+1)& (0+255),f,b
  7718  000692  0E2C               	movlw	low _dataBuffer
  7719  000694  25AF               	addwf	??_moteRunningProcess& (0+255),w,b
  7720  000696  6EE1               	movwf	fsr1l,c
  7721  000698  0E01               	movlw	high _dataBuffer
  7722  00069A  21B0               	addwfc	(??_moteRunningProcess+1)& (0+255),w,b
  7723  00069C  6EE2               	movwf	fsr1h,c
  7724  00069E  CFDF FFE7          	movff	indf2,indf1
  7725                           
  7726                           ; BSR set to: 0
  7727  0006A2  2BB6               	incf	moteRunningProcess@i_1530& (0+255),f,b
  7728  0006A4                     l515:
  7729                           
  7730                           ; BSR set to: 0
  7731                           
  7732                           ; BSR set to: 0
  7733  0006A4  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7734  0006A6  5DB6               	subwf	moteRunningProcess@i_1530& (0+255),w,b
  7735  0006A8  A0D8               	btfss	status,0,c
  7736  0006AA  D7E4               	goto	l516
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;MOTEapp.c: 696: }
  7740                           ;MOTEapp.c: 697: sendDataCommand("mac tx cnf ", dataBuffer, lengthDataGPS+4);
  7741                           
  7742                           ; BSR set to: 0
  7743  0006AC  0E65               	movlw	low STR_87
  7744  0006AE  6F61               	movwf	sendDataCommand@string& (0+255),b
  7745  0006B0  0E7E               	movlw	high STR_87
  7746  0006B2  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7747  0006B4  0E2C               	movlw	low _dataBuffer
  7748  0006B6  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7749  0006B8  0E01               	movlw	high _dataBuffer
  7750  0006BA  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7751  0006BC  51F0               	movf	_lengthDataGPS& (0+255),w,b
  7752  0006BE  0F04               	addlw	4
  7753  0006C0  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7754  0006C2  EC91  F022         	call	_sendDataCommand	;wreg free
  7755                           
  7756                           ;MOTEapp.c: 698: }
  7757  0006C6  D01E               	goto	l518
  7758  0006C8                     l514:
  7759                           
  7760                           ;MOTEapp.c: 699: else
  7761                           ;MOTEapp.c: 700: {
  7762                           ;MOTEapp.c: 701: dataBuffer[4] = 'E';
  7763  0006C8  0E45               	movlw	69
  7764  0006CA  0101               	movlb	1	; () banked
  7765  0006CC  6F30               	movwf	(_dataBuffer+4)& (0+255),b
  7766                           
  7767                           ;MOTEapp.c: 702: dataBuffer[5] = 'R';
  7768  0006CE  0E52               	movlw	82
  7769  0006D0  6F31               	movwf	(_dataBuffer+5)& (0+255),b
  7770                           
  7771                           ;MOTEapp.c: 703: dataBuffer[6] = 'R';
  7772  0006D2  0E52               	movlw	82
  7773  0006D4  6F32               	movwf	(_dataBuffer+6)& (0+255),b
  7774                           
  7775                           ;MOTEapp.c: 704: dataBuffer[7] = 'O';
  7776  0006D6  0E4F               	movlw	79
  7777  0006D8  6F33               	movwf	(_dataBuffer+7)& (0+255),b
  7778                           
  7779                           ;MOTEapp.c: 705: dataBuffer[8] = 'R';
  7780  0006DA  0E52               	movlw	82
  7781  0006DC  6F34               	movwf	(_dataBuffer+8)& (0+255),b
  7782                           
  7783                           ;MOTEapp.c: 706: dataBuffer[9] = '-';
  7784  0006DE  0E2D               	movlw	45
  7785  0006E0  6F35               	movwf	(_dataBuffer+9)& (0+255),b
  7786                           
  7787                           ;MOTEapp.c: 707: dataBuffer[10] = 'C';
  7788  0006E2  0E43               	movlw	67
  7789  0006E4  6F36               	movwf	(_dataBuffer+10)& (0+255),b
  7790                           
  7791                           ;MOTEapp.c: 708: dataBuffer[11] = 'S';
  7792  0006E6  0E53               	movlw	83
  7793  0006E8  6F37               	movwf	(_dataBuffer+11)& (0+255),b
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;MOTEapp.c: 709: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7797  0006EA  0E65               	movlw	low STR_87
  7798  0006EC  0100               	movlb	0	; () banked
  7799  0006EE  6F61               	movwf	sendDataCommand@string& (0+255),b
  7800  0006F0  0E7E               	movlw	high STR_87
  7801  0006F2  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7802  0006F4  0E2C               	movlw	low _dataBuffer
  7803  0006F6  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7804  0006F8  0E01               	movlw	high _dataBuffer
  7805  0006FA  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7806  0006FC  0E0C               	movlw	12
  7807  0006FE  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7808  000700  EC91  F022         	call	_sendDataCommand	;wreg free
  7809  000704                     l518:
  7810                           
  7811                           ;MOTEapp.c: 710: }
  7812                           ;MOTEapp.c: 711: }
  7813                           ;MOTEapp.c: 713: if ( (changeStates) || (selectButton) )
  7814  000704  0100               	movlb	0	; () banked
  7815  000706  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7816  000708  A4D8               	btfss	status,2,c
  7817  00070A  D003               	goto	u9900
  7818                           
  7819                           ; BSR set to: 0
  7820  00070C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7821  00070E  B4D8               	btfsc	status,2,c
  7822  000710  0012               	return	
  7823  000712                     u9900:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;MOTEapp.c: 714: {
  7827                           ;MOTEapp.c: 715: oled_clear();
  7828                           
  7829                           ; BSR set to: 0
  7830  000712  EC5E  F031         	call	_oled_clear	;wreg free
  7831                           
  7832                           ;MOTEapp.c: 716: oled_putString("Sent Data: ",0,0);
  7833  000716  0E4D               	movlw	low STR_89
  7834  000718  0100               	movlb	0	; () banked
  7835  00071A  6F72               	movwf	oled_putString@string& (0+255),b
  7836  00071C  0E7E               	movlw	high STR_89
  7837  00071E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7838  000720  5172               	movf	oled_putString@string& (0+255),w,b
  7839  000722  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7840  000724  A4D8               	btfss	status,2,c
  7841  000726  0E00               	movlw	low (__mediumconst shr (0+16))
  7842  000728  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7843  00072A  0E00               	movlw	0
  7844  00072C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7845  00072E  0E00               	movlw	0
  7846  000730  6F76               	movwf	oled_putString@start_page& (0+255),b
  7847  000732  ECF3  F029         	call	_oled_putString	;wreg free
  7848                           
  7849                           ;MOTEapp.c: 717: oled_putString("Tx Port #: ",0,1);
  7850  000736  0E41               	movlw	low STR_90
  7851  000738  0100               	movlb	0	; () banked
  7852  00073A  6F72               	movwf	oled_putString@string& (0+255),b
  7853  00073C  0E7E               	movlw	high STR_90
  7854  00073E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7855  000740  5172               	movf	oled_putString@string& (0+255),w,b
  7856  000742  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7857  000744  A4D8               	btfss	status,2,c
  7858  000746  0E00               	movlw	low (__mediumconst shr (0+16))
  7859  000748  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7860  00074A  0E00               	movlw	0
  7861  00074C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7862  00074E  0E01               	movlw	1
  7863  000750  6F76               	movwf	oled_putString@start_page& (0+255),b
  7864  000752  ECF3  F029         	call	_oled_putString	;wreg free
  7865                           
  7866                           ;MOTEapp.c: 718: oled_putUint8(randomPortNum,12,1);
  7867  000756  0E0C               	movlw	12
  7868  000758  0100               	movlb	0	; () banked
  7869  00075A  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7870  00075C  0E01               	movlw	1
  7871  00075E  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7872  000760  51F3               	movf	_randomPortNum& (0+255),w,b
  7873  000762  ECCB  F026         	call	_oled_putUint8
  7874                           
  7875                           ;MOTEapp.c: 719: oled_putString("L:       T: ",0,2);
  7876  000766  0E73               	movlw	low STR_73
  7877  000768  0100               	movlb	0	; () banked
  7878  00076A  6F72               	movwf	oled_putString@string& (0+255),b
  7879  00076C  0E7D               	movlw	high STR_73
  7880  00076E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7881  000770  5172               	movf	oled_putString@string& (0+255),w,b
  7882  000772  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7883  000774  A4D8               	btfss	status,2,c
  7884  000776  0E00               	movlw	low (__mediumconst shr (0+16))
  7885  000778  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7886  00077A  0E00               	movlw	0
  7887  00077C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7888  00077E  0E02               	movlw	2
  7889  000780  6F76               	movwf	oled_putString@start_page& (0+255),b
  7890  000782  ECF3  F029         	call	_oled_putString	;wreg free
  7891                           
  7892                           ;MOTEapp.c: 720: oled_putString(moteApp_getLightString(), 3, 2);
  7893  000786  EC05  F032         	call	_moteApp_getLightString	;wreg free
  7894  00078A  0100               	movlb	0	; () banked
  7895  00078C  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7896  000790  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7897  000794  5172               	movf	oled_putString@string& (0+255),w,b
  7898  000796  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7899  000798  A4D8               	btfss	status,2,c
  7900  00079A  0E20               	movlw	32
  7901  00079C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7902  00079E  0E03               	movlw	3
  7903  0007A0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7904  0007A2  0E02               	movlw	2
  7905  0007A4  6F76               	movwf	oled_putString@start_page& (0+255),b
  7906  0007A6  ECF3  F029         	call	_oled_putString	;wreg free
  7907                           
  7908                           ;MOTEapp.c: 721: oled_putint8(temperature,11,2);
  7909  0007AA  0E0B               	movlw	11
  7910  0007AC  0100               	movlb	0	; () banked
  7911  0007AE  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  7912  0007B0  0E02               	movlw	2
  7913  0007B2  6F79               	movwf	oled_putint8@start_page& (0+255),b
  7914  0007B4  51DE               	movf	_temperature& (0+255),w,b
  7915  0007B6  EC21  F025         	call	_oled_putint8
  7916                           
  7917                           ;MOTEapp.c: 722: LATAbits.LATA6 = 0;
  7918  0007BA  9C89               	bcf	3977,6,c	;volatile
  7919                           
  7920                           ;MOTEapp.c: 723: runningState = runningUplinkTransmit;
  7921  0007BC  0E08               	movlw	8
  7922  0007BE  0100               	movlb	0	; () banked
  7923  0007C0  6FF6               	movwf	_runningState& (0+255),b
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;MOTEapp.c: 724: }
  7927                           ;MOTEapp.c: 725: break;
  7928  0007C2  0012               	return	
  7929  0007C4                     
  7930                           ; BSR set to: 0
  7931                           ;MOTEapp.c: 727: if ( messageReady )
  7932                           
  7933                           ; BSR set to: 0
  7934  0007C4  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7935  0007C6  B4D8               	btfsc	status,2,c
  7936  0007C8  D11C               	goto	l523
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;MOTEapp.c: 728: {
  7940                           ;MOTEapp.c: 729: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7941  0007CA  0E90               	movlw	low _moduleResonseBuffer
  7942  0007CC  6F60               	movwf	strcmp@s1& (0+255),b
  7943  0007CE  0E01               	movlw	high _moduleResonseBuffer
  7944  0007D0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7945  0007D2  0EF8               	movlw	low STR_44
  7946  0007D4  6F62               	movwf	strcmp@s2& (0+255),b
  7947  0007D6  0E7F               	movlw	high STR_44
  7948  0007D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7949  0007DA  EC3B  F02D         	call	_strcmp	;wreg free
  7950  0007DE  0100               	movlb	0	; () banked
  7951  0007E0  5160               	movf	?_strcmp& (0+255),w,b
  7952  0007E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7953  0007E4  A4D8               	btfss	status,2,c
  7954  0007E6  D003               	goto	l524
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;MOTEapp.c: 730: {
  7958                           ;MOTEapp.c: 731: LATAbits.LATA6 = 1;
  7959  0007E8  8C89               	bsf	3977,6,c	;volatile
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;MOTEapp.c: 732: runningState = runningUplinkTransmit;
  7963  0007EA  0E08               	movlw	8
  7964  0007EC  6FF6               	movwf	_runningState& (0+255),b
  7965  0007EE                     l524:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;MOTEapp.c: 733: }
  7969                           ;MOTEapp.c: 734: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7970                           
  7971                           ; BSR set to: 0
  7972  0007EE  0E90               	movlw	low _moduleResonseBuffer
  7973  0007F0  6F60               	movwf	strncmp@s1& (0+255),b
  7974  0007F2  0E01               	movlw	high _moduleResonseBuffer
  7975  0007F4  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7976  0007F6  0EAB               	movlw	low STR_93
  7977  0007F8  6F62               	movwf	strncmp@s2& (0+255),b
  7978  0007FA  0E7F               	movlw	high STR_93
  7979  0007FC  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7980  0007FE  0E00               	movlw	0
  7981  000800  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7982  000802  0E06               	movlw	6
  7983  000804  6F64               	movwf	strncmp@len& (0+255),b
  7984  000806  ECA8  F027         	call	_strncmp	;wreg free
  7985  00080A  0100               	movlb	0	; () banked
  7986  00080C  5160               	movf	?_strncmp& (0+255),w,b
  7987  00080E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7988  000810  A4D8               	btfss	status,2,c
  7989  000812  D082               	goto	l525
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;MOTEapp.c: 735: {
  7993                           ;MOTEapp.c: 736: uint8_t bufferReadPos = 7;
  7994  000814  0E07               	movlw	7
  7995  000816  6FB8               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;MOTEapp.c: 740: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7999  000818  51B8               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8000  00081A  0D01               	mullw	1
  8001  00081C  0E90               	movlw	low _moduleResonseBuffer
  8002  00081E  24F3               	addwf	prodl,w,c
  8003  000820  6ED9               	movwf	fsr2l,c
  8004  000822  0E01               	movlw	high _moduleResonseBuffer
  8005  000824  20F4               	addwfc	prodh,w,c
  8006  000826  6EDA               	movwf	fsr2h,c
  8007  000828  50DF               	movf	indf2,w,c
  8008  00082A  0101               	movlb	1	; () banked
  8009  00082C  6FF3               	movwf	_responsePortNum& (0+255),b
  8010                           
  8011                           ; BSR set to: 1
  8012  00082E  0100               	movlb	0	; () banked
  8013  000830  2BB8               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;MOTEapp.c: 741: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  8017  000832  51B8               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8018  000834  0D01               	mullw	1
  8019  000836  0E90               	movlw	low _moduleResonseBuffer
  8020  000838  24F3               	addwf	prodl,w,c
  8021  00083A  6ED9               	movwf	fsr2l,c
  8022  00083C  0E01               	movlw	high _moduleResonseBuffer
  8023  00083E  20F4               	addwfc	prodh,w,c
  8024  000840  6EDA               	movwf	fsr2h,c
  8025  000842  50DF               	movf	indf2,w,c
  8026  000844  0101               	movlb	1	; () banked
  8027  000846  6FF4               	movwf	(_responsePortNum+1)& (0+255),b
  8028                           
  8029                           ; BSR set to: 1
  8030  000848  0100               	movlb	0	; () banked
  8031  00084A  2BB8               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;MOTEapp.c: 742: if (responsePortNum[1] != ' ')
  8035  00084C  0E20               	movlw	32
  8036  00084E  0101               	movlb	1	; () banked
  8037  000850  19F4               	xorwf	(_responsePortNum+1)& (0+255),w,b
  8038  000852  B4D8               	btfsc	status,2,c
  8039  000854  D015               	goto	l527
  8040                           
  8041                           ; BSR set to: 1
  8042                           ;MOTEapp.c: 743: {
  8043                           ;MOTEapp.c: 744: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  8044  000856  0100               	movlb	0	; () banked
  8045  000858  51B8               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8046  00085A  0D01               	mullw	1
  8047  00085C  0E90               	movlw	low _moduleResonseBuffer
  8048  00085E  24F3               	addwf	prodl,w,c
  8049  000860  6ED9               	movwf	fsr2l,c
  8050  000862  0E01               	movlw	high _moduleResonseBuffer
  8051  000864  20F4               	addwfc	prodh,w,c
  8052  000866  6EDA               	movwf	fsr2h,c
  8053  000868  50DF               	movf	indf2,w,c
  8054  00086A  0101               	movlb	1	; () banked
  8055  00086C  6FF5               	movwf	(_responsePortNum+2)& (0+255),b
  8056                           
  8057                           ; BSR set to: 1
  8058  00086E  0100               	movlb	0	; () banked
  8059  000870  2BB8               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;MOTEapp.c: 745: if (responsePortNum[2] != ' ')
  8063  000872  0E20               	movlw	32
  8064  000874  0101               	movlb	1	; () banked
  8065  000876  19F5               	xorwf	(_responsePortNum+2)& (0+255),w,b
  8066  000878  B4D8               	btfsc	status,2,c
  8067  00087A  D002               	goto	l527
  8068                           
  8069                           ; BSR set to: 1
  8070                           ;MOTEapp.c: 746: {
  8071                           ;MOTEapp.c: 747: bufferReadPos++;
  8072  00087C  0100               	movlb	0	; () banked
  8073  00087E  2BB8               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8074  000880                     l527:
  8075                           
  8076                           ;MOTEapp.c: 748: }
  8077                           ;MOTEapp.c: 749: }
  8078                           ;MOTEapp.c: 751: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  8079                           
  8080                           ; BSR set to: 0
  8081                           
  8082                           ; BSR set to: 0
  8083  000880  0E00               	movlw	0
  8084  000882  0100               	movlb	0	; () banked
  8085  000884  6FB7               	movwf	moteRunningProcess@counter& (0+255),b
  8086  000886                     l11253:
  8087                           
  8088                           ; BSR set to: 0
  8089  000886  0E3F               	movlw	63
  8090  000888  65B7               	cpfsgt	moteRunningProcess@counter& (0+255),b
  8091  00088A  D001               	goto	l528
  8092  00088C  D023               	goto	u9980
  8093  00088E                     l528:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;MOTEapp.c: 752: {
  8097                           ;MOTEapp.c: 753: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  8098                           
  8099                           ; BSR set to: 0
  8100  00088E  51B8               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8101  000890  0D01               	mullw	1
  8102  000892  0E90               	movlw	low _moduleResonseBuffer
  8103  000894  24F3               	addwf	prodl,w,c
  8104  000896  6ED9               	movwf	fsr2l,c
  8105  000898  0E01               	movlw	high _moduleResonseBuffer
  8106  00089A  20F4               	addwfc	prodh,w,c
  8107  00089C  6EDA               	movwf	fsr2h,c
  8108  00089E  51B7               	movf	moteRunningProcess@counter& (0+255),w,b
  8109  0008A0  0D01               	mullw	1
  8110  0008A2  0EC0               	movlw	low _responseData
  8111  0008A4  24F3               	addwf	prodl,w,c
  8112  0008A6  6EE1               	movwf	fsr1l,c
  8113  0008A8  0E02               	movlw	high _responseData
  8114  0008AA  20F4               	addwfc	prodh,w,c
  8115  0008AC  6EE2               	movwf	fsr1h,c
  8116  0008AE  CFDF FFE7          	movff	indf2,indf1
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;MOTEapp.c: 755: if (responseData[counter] != 0x00)
  8120  0008B2  51B7               	movf	moteRunningProcess@counter& (0+255),w,b
  8121  0008B4  0D01               	mullw	1
  8122  0008B6  0EC0               	movlw	low _responseData
  8123  0008B8  24F3               	addwf	prodl,w,c
  8124  0008BA  6ED9               	movwf	fsr2l,c
  8125  0008BC  0E02               	movlw	high _responseData
  8126  0008BE  20F4               	addwfc	prodh,w,c
  8127  0008C0  6EDA               	movwf	fsr2h,c
  8128  0008C2  50DF               	movf	indf2,w,c
  8129  0008C4  B4D8               	btfsc	status,2,c
  8130  0008C6  D002               	goto	l530
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;MOTEapp.c: 756: {
  8134                           ;MOTEapp.c: 757: bufferReadPos++;
  8135  0008C8  2BB8               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8136                           
  8137                           ;MOTEapp.c: 758: } else {
  8138  0008CA  D002               	goto	l531
  8139  0008CC                     l530:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;MOTEapp.c: 759: counter = sizeof(moduleResonseBuffer);
  8143                           
  8144                           ; BSR set to: 0
  8145  0008CC  0E40               	movlw	64
  8146  0008CE  6FB7               	movwf	moteRunningProcess@counter& (0+255),b
  8147  0008D0                     l531:
  8148                           
  8149                           ; BSR set to: 0
  8150                           
  8151                           ; BSR set to: 0
  8152  0008D0  2BB7               	incf	moteRunningProcess@counter& (0+255),f,b
  8153  0008D2  D7D9               	goto	l11253
  8154  0008D4                     u9980:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;MOTEapp.c: 760: }
  8158                           ;MOTEapp.c: 761: }
  8159                           ;MOTEapp.c: 763: LATAbits.LATA7 = 1;
  8160  0008D4  8E89               	bsf	3977,7,c	;volatile
  8161                           
  8162                           ;MOTEapp.c: 764: LATAbits.LATA6 = 0;
  8163  0008D6  9C89               	bcf	3977,6,c	;volatile
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;MOTEapp.c: 766: oled_putString("Server Response ",0,2);
  8167  0008D8  0E55               	movlw	low STR_94
  8168  0008DA  6F72               	movwf	oled_putString@string& (0+255),b
  8169  0008DC  0E7B               	movlw	high STR_94
  8170  0008DE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8171  0008E0  5172               	movf	oled_putString@string& (0+255),w,b
  8172  0008E2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8173  0008E4  A4D8               	btfss	status,2,c
  8174  0008E6  0E00               	movlw	low (__mediumconst shr (0+16))
  8175  0008E8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8176  0008EA  0E00               	movlw	0
  8177  0008EC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8178  0008EE  0E02               	movlw	2
  8179  0008F0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8180  0008F2  ECF3  F029         	call	_oled_putString	;wreg free
  8181                           
  8182                           ;MOTEapp.c: 767: oled_putString("    Received    ",0,3);
  8183  0008F6  0ECD               	movlw	low STR_95
  8184  0008F8  0100               	movlb	0	; () banked
  8185  0008FA  6F72               	movwf	oled_putString@string& (0+255),b
  8186  0008FC  0E7A               	movlw	high STR_95
  8187  0008FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8188  000900  5172               	movf	oled_putString@string& (0+255),w,b
  8189  000902  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8190  000904  A4D8               	btfss	status,2,c
  8191  000906  0E00               	movlw	low (__mediumconst shr (0+16))
  8192  000908  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8193  00090A  0E00               	movlw	0
  8194  00090C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8195  00090E  0E03               	movlw	3
  8196  000910  6F76               	movwf	oled_putString@start_page& (0+255),b
  8197  000912  ECF3  F029         	call	_oled_putString	;wreg free
  8198                           
  8199                           ;MOTEapp.c: 768: }
  8200  000916  D06C               	goto	l537
  8201  000918                     l525:
  8202                           
  8203                           ;MOTEapp.c: 769: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  8204  000918  0E90               	movlw	low _moduleResonseBuffer
  8205  00091A  0100               	movlb	0	; () banked
  8206  00091C  6F60               	movwf	strncmp@s1& (0+255),b
  8207  00091E  0E01               	movlw	high _moduleResonseBuffer
  8208  000920  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  8209  000922  0EB2               	movlw	low STR_96
  8210  000924  6F62               	movwf	strncmp@s2& (0+255),b
  8211  000926  0E7F               	movlw	high STR_96
  8212  000928  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  8213  00092A  0E00               	movlw	0
  8214  00092C  6F65               	movwf	(strncmp@len+1)& (0+255),b
  8215  00092E  0E06               	movlw	6
  8216  000930  6F64               	movwf	strncmp@len& (0+255),b
  8217  000932  ECA8  F027         	call	_strncmp	;wreg free
  8218  000936  0100               	movlb	0	; () banked
  8219  000938  5160               	movf	?_strncmp& (0+255),w,b
  8220  00093A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  8221  00093C  A4D8               	btfss	status,2,c
  8222  00093E  D011               	goto	l533
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;MOTEapp.c: 770: {
  8226                           ;MOTEapp.c: 771: LATAbits.LATA6 = 0;
  8227  000940  9C89               	bcf	3977,6,c	;volatile
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;MOTEapp.c: 772: oled_putString("Data Transmitted",0,3);
  8231  000942  0EBB               	movlw	low STR_97
  8232  000944  6F72               	movwf	oled_putString@string& (0+255),b
  8233  000946  0E7B               	movlw	high STR_97
  8234  000948  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8235  00094A  5172               	movf	oled_putString@string& (0+255),w,b
  8236  00094C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8237  00094E  A4D8               	btfss	status,2,c
  8238  000950  0E00               	movlw	low (__mediumconst shr (0+16))
  8239  000952  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8240  000954  0E00               	movlw	0
  8241  000956  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8242  000958  0E03               	movlw	3
  8243  00095A  6F76               	movwf	oled_putString@start_page& (0+255),b
  8244  00095C  ECF3  F029         	call	_oled_putString	;wreg free
  8245                           
  8246                           ;MOTEapp.c: 773: }
  8247  000960  D047               	goto	l537
  8248  000962                     l533:
  8249                           
  8250                           ;MOTEapp.c: 774: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  8251  000962  0E90               	movlw	low _moduleResonseBuffer
  8252  000964  0100               	movlb	0	; () banked
  8253  000966  6F60               	movwf	strncmp@s1& (0+255),b
  8254  000968  0E01               	movlw	high _moduleResonseBuffer
  8255  00096A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  8256  00096C  0EA4               	movlw	low STR_98
  8257  00096E  6F62               	movwf	strncmp@s2& (0+255),b
  8258  000970  0E7F               	movlw	high STR_98
  8259  000972  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  8260  000974  0E00               	movlw	0
  8261  000976  6F65               	movwf	(strncmp@len+1)& (0+255),b
  8262  000978  0E06               	movlw	6
  8263  00097A  6F64               	movwf	strncmp@len& (0+255),b
  8264  00097C  ECA8  F027         	call	_strncmp	;wreg free
  8265  000980  0100               	movlb	0	; () banked
  8266  000982  5160               	movf	?_strncmp& (0+255),w,b
  8267  000984  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  8268  000986  A4D8               	btfss	status,2,c
  8269  000988  D010               	goto	l535
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;MOTEapp.c: 775: {
  8273                           ;MOTEapp.c: 776: oled_putString("Mac Error Occurred",0,3);
  8274  00098A  0E97               	movlw	low STR_99
  8275  00098C  6F72               	movwf	oled_putString@string& (0+255),b
  8276  00098E  0E7A               	movlw	high STR_99
  8277  000990  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8278  000992  5172               	movf	oled_putString@string& (0+255),w,b
  8279  000994  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8280  000996  A4D8               	btfss	status,2,c
  8281  000998  0E00               	movlw	low (__mediumconst shr (0+16))
  8282  00099A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8283  00099C  0E00               	movlw	0
  8284  00099E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8285  0009A0  0E03               	movlw	3
  8286  0009A2  6F76               	movwf	oled_putString@start_page& (0+255),b
  8287  0009A4  ECF3  F029         	call	_oled_putString	;wreg free
  8288                           
  8289                           ;MOTEapp.c: 777: }
  8290  0009A8  D023               	goto	l537
  8291  0009AA                     l535:
  8292                           
  8293                           ;MOTEapp.c: 778: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  8294  0009AA  0E90               	movlw	low _moduleResonseBuffer
  8295  0009AC  0100               	movlb	0	; () banked
  8296  0009AE  6F60               	movwf	strncmp@s1& (0+255),b
  8297  0009B0  0E01               	movlw	high _moduleResonseBuffer
  8298  0009B2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  8299  0009B4  0E9D               	movlw	low STR_100
  8300  0009B6  6F62               	movwf	strncmp@s2& (0+255),b
  8301  0009B8  0E7F               	movlw	high STR_100
  8302  0009BA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  8303  0009BC  0E00               	movlw	0
  8304  0009BE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  8305  0009C0  0E06               	movlw	6
  8306  0009C2  6F64               	movwf	strncmp@len& (0+255),b
  8307  0009C4  ECA8  F027         	call	_strncmp	;wreg free
  8308  0009C8  0100               	movlb	0	; () banked
  8309  0009CA  5160               	movf	?_strncmp& (0+255),w,b
  8310  0009CC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  8311  0009CE  A4D8               	btfss	status,2,c
  8312  0009D0  D00F               	goto	l537
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;MOTEapp.c: 779: {
  8316                           ;MOTEapp.c: 780: oled_putString("No Free Channel",0,3);
  8317  0009D2  0EB4               	movlw	low STR_101
  8318  0009D4  6F72               	movwf	oled_putString@string& (0+255),b
  8319  0009D6  0E7C               	movlw	high STR_101
  8320  0009D8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8321  0009DA  5172               	movf	oled_putString@string& (0+255),w,b
  8322  0009DC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8323  0009DE  A4D8               	btfss	status,2,c
  8324  0009E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8325  0009E2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8326  0009E4  0E00               	movlw	0
  8327  0009E6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8328  0009E8  0E03               	movlw	3
  8329  0009EA  6F76               	movwf	oled_putString@start_page& (0+255),b
  8330  0009EC  ECF3  F029         	call	_oled_putString	;wreg free
  8331  0009F0                     l537:
  8332                           
  8333                           ;MOTEapp.c: 781: }
  8334                           ;MOTEapp.c: 782: _delay((unsigned long)((16)*(48000000/4000.0)));
  8335  0009F0  0EFA               	movlw	250
  8336  0009F2  0100               	movlb	0	; () banked
  8337  0009F4  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  8338  0009F6  0E58               	movlw	88
  8339  0009F8                     u11777:
  8340  0009F8  2EE8               	decfsz	wreg,f,c
  8341  0009FA  D7FE               	bra	u11777
  8342  0009FC  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  8343  0009FE  D7FC               	bra	u11777
  8344  000A00  F000               	nop	
  8345  000A02                     l523:
  8346                           
  8347                           ;MOTEapp.c: 783: }
  8348                           ;MOTEapp.c: 784: if ( (changeStates) || (selectButton) )
  8349  000A02  0100               	movlb	0	; () banked
  8350  000A04  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8351  000A06  A4D8               	btfss	status,2,c
  8352  000A08  D003               	goto	u10030
  8353                           
  8354                           ; BSR set to: 0
  8355  000A0A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8356  000A0C  B4D8               	btfsc	status,2,c
  8357  000A0E  0012               	return	
  8358  000A10                     u10030:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;MOTEapp.c: 785: {
  8362                           ;MOTEapp.c: 786: oled_clear();
  8363                           
  8364                           ; BSR set to: 0
  8365  000A10  EC5E  F031         	call	_oled_clear	;wreg free
  8366                           
  8367                           ;MOTEapp.c: 787: oled_putString("  Issue Uplink  ",0,0);
  8368  000A14  0E22               	movlw	low STR_76
  8369  000A16  0100               	movlb	0	; () banked
  8370  000A18  6F72               	movwf	oled_putString@string& (0+255),b
  8371  000A1A  0E7B               	movlw	high STR_76
  8372  000A1C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8373  000A1E  5172               	movf	oled_putString@string& (0+255),w,b
  8374  000A20  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8375  000A22  A4D8               	btfss	status,2,c
  8376  000A24  0E00               	movlw	low (__mediumconst shr (0+16))
  8377  000A26  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8378  000A28  0E00               	movlw	0
  8379  000A2A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8380  000A2C  0E00               	movlw	0
  8381  000A2E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8382  000A30  ECF3  F029         	call	_oled_putString	;wreg free
  8383                           
  8384                           ;MOTEapp.c: 788: oled_putString(" LoRaWAN Packet ",0,1);
  8385  000A34  0E88               	movlw	low STR_77
  8386  000A36  0100               	movlb	0	; () banked
  8387  000A38  6F72               	movwf	oled_putString@string& (0+255),b
  8388  000A3A  0E7B               	movlw	high STR_77
  8389  000A3C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8390  000A3E  5172               	movf	oled_putString@string& (0+255),w,b
  8391  000A40  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8392  000A42  A4D8               	btfss	status,2,c
  8393  000A44  0E00               	movlw	low (__mediumconst shr (0+16))
  8394  000A46  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8395  000A48  0E00               	movlw	0
  8396  000A4A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8397  000A4C  0E01               	movlw	1
  8398  000A4E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8399  000A50  ECF3  F029         	call	_oled_putString	;wreg free
  8400                           
  8401                           ;MOTEapp.c: 789: oled_putString("(NAV)    (SEL) ",0,3);
  8402  000A54  0E84               	movlw	low STR_78
  8403  000A56  0100               	movlb	0	; () banked
  8404  000A58  6F72               	movwf	oled_putString@string& (0+255),b
  8405  000A5A  0E7C               	movlw	high STR_78
  8406  000A5C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8407  000A5E  5172               	movf	oled_putString@string& (0+255),w,b
  8408  000A60  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8409  000A62  A4D8               	btfss	status,2,c
  8410  000A64  0E00               	movlw	low (__mediumconst shr (0+16))
  8411  000A66  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8412  000A68  0E00               	movlw	0
  8413  000A6A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8414  000A6C  0E03               	movlw	3
  8415  000A6E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8416  000A70  ECF3  F029         	call	_oled_putString	;wreg free
  8417                           
  8418                           ;MOTEapp.c: 790: runningState = runningUplink;
  8419  000A74  0E06               	movlw	6
  8420  000A76  0100               	movlb	0	; () banked
  8421  000A78  6FF6               	movwf	_runningState& (0+255),b
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;MOTEapp.c: 791: }
  8425                           ;MOTEapp.c: 792: break;
  8426  000A7A  0012               	return	
  8427  000A7C                     
  8428                           ; BSR set to: 0
  8429                           ;MOTEapp.c: 794: if (changeStates)
  8430                           
  8431                           ; BSR set to: 0
  8432  000A7C  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8433  000A7E  B4D8               	btfsc	status,2,c
  8434  000A80  D036               	goto	l542
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;MOTEapp.c: 795: {
  8438                           ;MOTEapp.c: 796: oled_clear();
  8439  000A82  EC5E  F031         	call	_oled_clear	;wreg free
  8440                           
  8441                           ;MOTEapp.c: 797: oled_putString("  Sensor Data  ",0,0);
  8442  000A86  0E64               	movlw	low STR_105
  8443  000A88  0100               	movlb	0	; () banked
  8444  000A8A  6F72               	movwf	oled_putString@string& (0+255),b
  8445  000A8C  0E7C               	movlw	high STR_105
  8446  000A8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8447  000A90  5172               	movf	oled_putString@string& (0+255),w,b
  8448  000A92  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8449  000A94  A4D8               	btfss	status,2,c
  8450  000A96  0E00               	movlw	low (__mediumconst shr (0+16))
  8451  000A98  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8452  000A9A  0E00               	movlw	0
  8453  000A9C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8454  000A9E  0E00               	movlw	0
  8455  000AA0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8456  000AA2  ECF3  F029         	call	_oled_putString	;wreg free
  8457                           
  8458                           ;MOTEapp.c: 798: oled_putString("    Display    ",0,1);
  8459  000AA6  0E54               	movlw	low STR_106
  8460  000AA8  0100               	movlb	0	; () banked
  8461  000AAA  6F72               	movwf	oled_putString@string& (0+255),b
  8462  000AAC  0E7C               	movlw	high STR_106
  8463  000AAE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8464  000AB0  5172               	movf	oled_putString@string& (0+255),w,b
  8465  000AB2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8466  000AB4  A4D8               	btfss	status,2,c
  8467  000AB6  0E00               	movlw	low (__mediumconst shr (0+16))
  8468  000AB8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8469  000ABA  0E00               	movlw	0
  8470  000ABC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8471  000ABE  0E01               	movlw	1
  8472  000AC0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8473  000AC2  ECF3  F029         	call	_oled_putString	;wreg free
  8474                           
  8475                           ;MOTEapp.c: 799: oled_putString("(NAV)    (SEL) ",0,3);
  8476  000AC6  0E84               	movlw	low STR_78
  8477  000AC8  0100               	movlb	0	; () banked
  8478  000ACA  6F72               	movwf	oled_putString@string& (0+255),b
  8479  000ACC  0E7C               	movlw	high STR_78
  8480  000ACE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8481  000AD0  5172               	movf	oled_putString@string& (0+255),w,b
  8482  000AD2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8483  000AD4  A4D8               	btfss	status,2,c
  8484  000AD6  0E00               	movlw	low (__mediumconst shr (0+16))
  8485  000AD8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8486  000ADA  0E00               	movlw	0
  8487  000ADC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8488  000ADE  0E03               	movlw	3
  8489  000AE0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8490  000AE2  ECF3  F029         	call	_oled_putString	;wreg free
  8491                           
  8492                           ;MOTEapp.c: 800: runningState = runningSensor;
  8493  000AE6  0E01               	movlw	1
  8494  000AE8  0100               	movlb	0	; () banked
  8495  000AEA  6FF6               	movwf	_runningState& (0+255),b
  8496                           
  8497                           ;MOTEapp.c: 801: }
  8498  000AEC  0012               	return	
  8499  000AEE                     l542:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;MOTEapp.c: 802: else if (selectButton)
  8503                           
  8504                           ; BSR set to: 0
  8505  000AEE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8506  000AF0  B4D8               	btfsc	status,2,c
  8507  000AF2  0012               	return	
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;MOTEapp.c: 803: {
  8511                           ;MOTEapp.c: 805: oled_clear();
  8512  000AF4  EC5E  F031         	call	_oled_clear	;wreg free
  8513                           
  8514                           ;MOTEapp.c: 807: LATAbits.LATA7 = 0;
  8515  000AF8  9E89               	bcf	3977,7,c	;volatile
  8516                           
  8517                           ;MOTEapp.c: 809: oled_putString("Downlink Display",0,0);
  8518  000AFA  0E43               	movlw	low STR_108
  8519  000AFC  0100               	movlb	0	; () banked
  8520  000AFE  6F72               	movwf	oled_putString@string& (0+255),b
  8521  000B00  0E7C               	movlw	high STR_108
  8522  000B02  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8523  000B04  5172               	movf	oled_putString@string& (0+255),w,b
  8524  000B06  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8525  000B08  A4D8               	btfss	status,2,c
  8526  000B0A  0E00               	movlw	low (__mediumconst shr (0+16))
  8527  000B0C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8528  000B0E  0E00               	movlw	0
  8529  000B10  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8530  000B12  0E00               	movlw	0
  8531  000B14  6F76               	movwf	oled_putString@start_page& (0+255),b
  8532  000B16  ECF3  F029         	call	_oled_putString	;wreg free
  8533                           
  8534                           ;MOTEapp.c: 811: oled_putString("Rx Port# ",0,1);
  8535  000B1A  0ECB               	movlw	low STR_109
  8536  000B1C  0100               	movlb	0	; () banked
  8537  000B1E  6F72               	movwf	oled_putString@string& (0+255),b
  8538  000B20  0E7E               	movlw	high STR_109
  8539  000B22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8540  000B24  5172               	movf	oled_putString@string& (0+255),w,b
  8541  000B26  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8542  000B28  A4D8               	btfss	status,2,c
  8543  000B2A  0E00               	movlw	low (__mediumconst shr (0+16))
  8544  000B2C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8545  000B2E  0E00               	movlw	0
  8546  000B30  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8547  000B32  0E01               	movlw	1
  8548  000B34  6F76               	movwf	oled_putString@start_page& (0+255),b
  8549  000B36  ECF3  F029         	call	_oled_putString	;wreg free
  8550                           
  8551                           ;MOTEapp.c: 812: oled_putString(&responsePortNum,9,1);
  8552  000B3A  0EF3               	movlw	low _responsePortNum
  8553  000B3C  0100               	movlb	0	; () banked
  8554  000B3E  6F72               	movwf	oled_putString@string& (0+255),b
  8555  000B40  0E01               	movlw	high _responsePortNum
  8556  000B42  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8557  000B44  5172               	movf	oled_putString@string& (0+255),w,b
  8558  000B46  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8559  000B48  A4D8               	btfss	status,2,c
  8560  000B4A  0E20               	movlw	32
  8561  000B4C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8562  000B4E  0E09               	movlw	9
  8563  000B50  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8564  000B52  0E01               	movlw	1
  8565  000B54  6F76               	movwf	oled_putString@start_page& (0+255),b
  8566  000B56  ECF3  F029         	call	_oled_putString	;wreg free
  8567                           
  8568                           ;MOTEapp.c: 814: oled_putString("Data: ",0,2);
  8569  000B5A  0E52               	movlw	low (STR_89+5)
  8570  000B5C  0100               	movlb	0	; () banked
  8571  000B5E  6F72               	movwf	oled_putString@string& (0+255),b
  8572  000B60  0E7E               	movlw	high (STR_89+5)
  8573  000B62  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8574  000B64  5172               	movf	oled_putString@string& (0+255),w,b
  8575  000B66  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8576  000B68  A4D8               	btfss	status,2,c
  8577  000B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  8578  000B6C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8579  000B6E  0E00               	movlw	0
  8580  000B70  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8581  000B72  0E02               	movlw	2
  8582  000B74  6F76               	movwf	oled_putString@start_page& (0+255),b
  8583  000B76  ECF3  F029         	call	_oled_putString	;wreg free
  8584                           
  8585                           ;MOTEapp.c: 815: oled_putString(&responseData[0],6,2);
  8586  000B7A  0EC0               	movlw	low _responseData
  8587  000B7C  0100               	movlb	0	; () banked
  8588  000B7E  6F72               	movwf	oled_putString@string& (0+255),b
  8589  000B80  0E02               	movlw	high _responseData
  8590  000B82  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8591  000B84  5172               	movf	oled_putString@string& (0+255),w,b
  8592  000B86  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8593  000B88  A4D8               	btfss	status,2,c
  8594  000B8A  0E20               	movlw	32
  8595  000B8C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8596  000B8E  0E06               	movlw	6
  8597  000B90  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8598  000B92  0E02               	movlw	2
  8599  000B94  6F76               	movwf	oled_putString@start_page& (0+255),b
  8600  000B96  ECF3  F029         	call	_oled_putString	;wreg free
  8601                           
  8602                           ;MOTEapp.c: 817: oled_putString(&responseData[10],0,3);
  8603  000B9A  0ECA               	movlw	low (_responseData+10)
  8604  000B9C  0100               	movlb	0	; () banked
  8605  000B9E  6F72               	movwf	oled_putString@string& (0+255),b
  8606  000BA0  0E02               	movlw	high (_responseData+10)
  8607  000BA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8608  000BA4  5172               	movf	oled_putString@string& (0+255),w,b
  8609  000BA6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8610  000BA8  A4D8               	btfss	status,2,c
  8611  000BAA  0E20               	movlw	32
  8612  000BAC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8613  000BAE  0E00               	movlw	0
  8614  000BB0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8615  000BB2  0E03               	movlw	3
  8616  000BB4  6F76               	movwf	oled_putString@start_page& (0+255),b
  8617  000BB6  ECF3  F029         	call	_oled_putString	;wreg free
  8618                           
  8619                           ;MOTEapp.c: 819: runningState = runningDownlinkDisplay;
  8620  000BBA  0E0B               	movlw	11
  8621  000BBC  0100               	movlb	0	; () banked
  8622  000BBE  6FF6               	movwf	_runningState& (0+255),b
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;MOTEapp.c: 820: }
  8626                           ;MOTEapp.c: 821: break;
  8627                           
  8628                           ; BSR set to: 0
  8629  000BC0  0012               	return	
  8630  000BC2                     
  8631                           ; BSR set to: 0
  8632                           ;MOTEapp.c: 823: if ( (changeStates) || (selectButton) )
  8633                           
  8634                           ; BSR set to: 0
  8635  000BC2  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8636  000BC4  A4D8               	btfss	status,2,c
  8637  000BC6  D003               	goto	u10070
  8638                           
  8639                           ; BSR set to: 0
  8640  000BC8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8641  000BCA  B4D8               	btfsc	status,2,c
  8642  000BCC  0012               	return	
  8643  000BCE                     u10070:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;MOTEapp.c: 824: {
  8647                           ;MOTEapp.c: 825: oled_clear();
  8648                           
  8649                           ; BSR set to: 0
  8650  000BCE  EC5E  F031         	call	_oled_clear	;wreg free
  8651                           
  8652                           ;MOTEapp.c: 826: oled_putString(" View Downlink  ",0,0);
  8653  000BD2  0E11               	movlw	low STR_79
  8654  000BD4  0100               	movlb	0	; () banked
  8655  000BD6  6F72               	movwf	oled_putString@string& (0+255),b
  8656  000BD8  0E7B               	movlw	high STR_79
  8657  000BDA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8658  000BDC  5172               	movf	oled_putString@string& (0+255),w,b
  8659  000BDE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8660  000BE0  A4D8               	btfss	status,2,c
  8661  000BE2  0E00               	movlw	low (__mediumconst shr (0+16))
  8662  000BE4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8663  000BE6  0E00               	movlw	0
  8664  000BE8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8665  000BEA  0E00               	movlw	0
  8666  000BEC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8667  000BEE  ECF3  F029         	call	_oled_putString	;wreg free
  8668                           
  8669                           ;MOTEapp.c: 827: oled_putString("  Last Message  ",0,1);
  8670  000BF2  0E00               	movlw	low STR_80
  8671  000BF4  0100               	movlb	0	; () banked
  8672  000BF6  6F72               	movwf	oled_putString@string& (0+255),b
  8673  000BF8  0E7B               	movlw	high STR_80
  8674  000BFA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8675  000BFC  5172               	movf	oled_putString@string& (0+255),w,b
  8676  000BFE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8677  000C00  A4D8               	btfss	status,2,c
  8678  000C02  0E00               	movlw	low (__mediumconst shr (0+16))
  8679  000C04  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8680  000C06  0E00               	movlw	0
  8681  000C08  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8682  000C0A  0E01               	movlw	1
  8683  000C0C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8684  000C0E  ECF3  F029         	call	_oled_putString	;wreg free
  8685                           
  8686                           ;MOTEapp.c: 828: oled_putString("(NAV)    (SEL) ",0,3);
  8687  000C12  0E84               	movlw	low STR_78
  8688  000C14  0100               	movlb	0	; () banked
  8689  000C16  6F72               	movwf	oled_putString@string& (0+255),b
  8690  000C18  0E7C               	movlw	high STR_78
  8691  000C1A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8692  000C1C  5172               	movf	oled_putString@string& (0+255),w,b
  8693  000C1E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8694  000C20  A4D8               	btfss	status,2,c
  8695  000C22  0E00               	movlw	low (__mediumconst shr (0+16))
  8696  000C24  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8697  000C26  0E00               	movlw	0
  8698  000C28  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8699  000C2A  0E03               	movlw	3
  8700  000C2C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8701  000C2E  ECF3  F029         	call	_oled_putString	;wreg free
  8702                           
  8703                           ;MOTEapp.c: 829: runningState = runningDownlink;
  8704  000C32  0E0A               	movlw	10
  8705  000C34  0100               	movlb	0	; () banked
  8706  000C36  6FF6               	movwf	_runningState& (0+255),b
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;MOTEapp.c: 830: }
  8710                           ;MOTEapp.c: 831: break;
  8711  000C38  0012               	return	
  8712  000C3A                     
  8713                           ; BSR set to: 0
  8714                           ;MOTEapp.c: 833: if (changeStates)
  8715                           
  8716                           ; BSR set to: 0
  8717  000C3A  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8718  000C3C  B4D8               	btfsc	status,2,c
  8719  000C3E  D04A               	goto	l550
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;MOTEapp.c: 834: {
  8723                           ;MOTEapp.c: 835: oled_clear();
  8724  000C40  EC5E  F031         	call	_oled_clear	;wreg free
  8725                           
  8726                           ;MOTEapp.c: 836: oled_putString("Menu Has Timeout",0,0);
  8727  000C44  0E21               	movlw	low STR_114
  8728  000C46  0100               	movlb	0	; () banked
  8729  000C48  6F72               	movwf	oled_putString@string& (0+255),b
  8730  000C4A  0E7C               	movlw	high STR_114
  8731  000C4C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8732  000C4E  5172               	movf	oled_putString@string& (0+255),w,b
  8733  000C50  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8734  000C52  A4D8               	btfss	status,2,c
  8735  000C54  0E00               	movlw	low (__mediumconst shr (0+16))
  8736  000C56  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8737  000C58  0E00               	movlw	0
  8738  000C5A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8739  000C5C  0E00               	movlw	0
  8740  000C5E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8741  000C60  ECF3  F029         	call	_oled_putString	;wreg free
  8742                           
  8743                           ;MOTEapp.c: 837: if (menuTimeout)
  8744  000C64  0100               	movlb	0	; () banked
  8745  000C66  51FC               	movf	_menuTimeout& (0+255),w,b
  8746  000C68  B4D8               	btfsc	status,2,c
  8747  000C6A  D010               	goto	l551
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;MOTEapp.c: 838: oled_putString("    Enabled   ", 0,2);
  8751  000C6C  0ED4               	movlw	low STR_115
  8752  000C6E  6F72               	movwf	oled_putString@string& (0+255),b
  8753  000C70  0E7C               	movlw	high STR_115
  8754  000C72  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8755  000C74  5172               	movf	oled_putString@string& (0+255),w,b
  8756  000C76  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8757  000C78  A4D8               	btfss	status,2,c
  8758  000C7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8759  000C7C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8760  000C7E  0E00               	movlw	0
  8761  000C80  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8762  000C82  0E02               	movlw	2
  8763  000C84  6F76               	movwf	oled_putString@start_page& (0+255),b
  8764  000C86  ECF3  F029         	call	_oled_putString	;wreg free
  8765  000C8A  D010               	goto	l552
  8766  000C8C                     l551:
  8767                           
  8768                           ;MOTEapp.c: 839: else
  8769                           ;MOTEapp.c: 840: oled_putString("    Disabled  ", 0,2);
  8770  000C8C  0EE3               	movlw	low STR_116
  8771  000C8E  0100               	movlb	0	; () banked
  8772  000C90  6F72               	movwf	oled_putString@string& (0+255),b
  8773  000C92  0E7C               	movlw	high STR_116
  8774  000C94  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8775  000C96  5172               	movf	oled_putString@string& (0+255),w,b
  8776  000C98  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8777  000C9A  A4D8               	btfss	status,2,c
  8778  000C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  8779  000C9E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8780  000CA0  0E00               	movlw	0
  8781  000CA2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8782  000CA4  0E02               	movlw	2
  8783  000CA6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8784  000CA8  ECF3  F029         	call	_oled_putString	;wreg free
  8785  000CAC                     l552:
  8786                           
  8787                           ;MOTEapp.c: 841: oled_putString("(NAV)    (CNG) ",0,3);
  8788  000CAC  0E74               	movlw	low STR_117
  8789  000CAE  0100               	movlb	0	; () banked
  8790  000CB0  6F72               	movwf	oled_putString@string& (0+255),b
  8791  000CB2  0E7C               	movlw	high STR_117
  8792  000CB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8793  000CB6  5172               	movf	oled_putString@string& (0+255),w,b
  8794  000CB8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8795  000CBA  A4D8               	btfss	status,2,c
  8796  000CBC  0E00               	movlw	low (__mediumconst shr (0+16))
  8797  000CBE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8798  000CC0  0E00               	movlw	0
  8799  000CC2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8800  000CC4  0E03               	movlw	3
  8801  000CC6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8802  000CC8  ECF3  F029         	call	_oled_putString	;wreg free
  8803                           
  8804                           ;MOTEapp.c: 842: runningState = runningMenuTimeout;
  8805  000CCC  0E0C               	movlw	12
  8806  000CCE  0100               	movlb	0	; () banked
  8807  000CD0  6FF6               	movwf	_runningState& (0+255),b
  8808                           
  8809                           ;MOTEapp.c: 843: }
  8810  000CD2  0012               	return	
  8811  000CD4                     l550:
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;MOTEapp.c: 844: else if (selectButton)
  8815                           
  8816                           ; BSR set to: 0
  8817  000CD4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8818  000CD6  B4D8               	btfsc	status,2,c
  8819  000CD8  0012               	return	
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;MOTEapp.c: 845: {
  8823                           ;MOTEapp.c: 846: oled_clear();
  8824  000CDA  EC5E  F031         	call	_oled_clear	;wreg free
  8825                           
  8826                           ;MOTEapp.c: 847: oled_putString("  Sensor Data  ",0,0);
  8827  000CDE  0E64               	movlw	low STR_105
  8828  000CE0  0100               	movlb	0	; () banked
  8829  000CE2  6F72               	movwf	oled_putString@string& (0+255),b
  8830  000CE4  0E7C               	movlw	high STR_105
  8831  000CE6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8832  000CE8  5172               	movf	oled_putString@string& (0+255),w,b
  8833  000CEA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8834  000CEC  A4D8               	btfss	status,2,c
  8835  000CEE  0E00               	movlw	low (__mediumconst shr (0+16))
  8836  000CF0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8837  000CF2  0E00               	movlw	0
  8838  000CF4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8839  000CF6  0E00               	movlw	0
  8840  000CF8  6F76               	movwf	oled_putString@start_page& (0+255),b
  8841  000CFA  ECF3  F029         	call	_oled_putString	;wreg free
  8842                           
  8843                           ;MOTEapp.c: 848: oled_putString("Light:",0,1);
  8844  000CFE  0E81               	movlw	low STR_119
  8845  000D00  0100               	movlb	0	; () banked
  8846  000D02  6F72               	movwf	oled_putString@string& (0+255),b
  8847  000D04  0E7F               	movlw	high STR_119
  8848  000D06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8849  000D08  5172               	movf	oled_putString@string& (0+255),w,b
  8850  000D0A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8851  000D0C  A4D8               	btfss	status,2,c
  8852  000D0E  0E00               	movlw	low (__mediumconst shr (0+16))
  8853  000D10  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8854  000D12  0E00               	movlw	0
  8855  000D14  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8856  000D16  0E01               	movlw	1
  8857  000D18  6F76               	movwf	oled_putString@start_page& (0+255),b
  8858  000D1A  ECF3  F029         	call	_oled_putString	;wreg free
  8859                           
  8860                           ;MOTEapp.c: 849: oled_putString("Temp :",0,2);
  8861  000D1E  0E7A               	movlw	low STR_120
  8862  000D20  0100               	movlb	0	; () banked
  8863  000D22  6F72               	movwf	oled_putString@string& (0+255),b
  8864  000D24  0E7F               	movlw	high STR_120
  8865  000D26  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8866  000D28  5172               	movf	oled_putString@string& (0+255),w,b
  8867  000D2A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8868  000D2C  A4D8               	btfss	status,2,c
  8869  000D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  8870  000D30  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8871  000D32  0E00               	movlw	0
  8872  000D34  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8873  000D36  0E02               	movlw	2
  8874  000D38  6F76               	movwf	oled_putString@start_page& (0+255),b
  8875  000D3A  ECF3  F029         	call	_oled_putString	;wreg free
  8876                           
  8877                           ;MOTEapp.c: 850: oled_putString("C",10,2);
  8878  000D3E  0EFB               	movlw	low STR_121
  8879  000D40  0100               	movlb	0	; () banked
  8880  000D42  6F72               	movwf	oled_putString@string& (0+255),b
  8881  000D44  0E7F               	movlw	high STR_121
  8882  000D46  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8883  000D48  5172               	movf	oled_putString@string& (0+255),w,b
  8884  000D4A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8885  000D4C  A4D8               	btfss	status,2,c
  8886  000D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8887  000D50  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8888  000D52  0E0A               	movlw	10
  8889  000D54  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8890  000D56  0E02               	movlw	2
  8891  000D58  6F76               	movwf	oled_putString@start_page& (0+255),b
  8892  000D5A  ECF3  F029         	call	_oled_putString	;wreg free
  8893                           
  8894                           ;MOTEapp.c: 852: moteApp_setSensorsInput();
  8895  000D5E  ECB7  F029         	call	_moteApp_setSensorsInput	;wreg free
  8896                           
  8897                           ;MOTEapp.c: 853: runningState = runningSensorMenu;
  8898  000D62  0E02               	movlw	2
  8899  000D64  0100               	movlb	0	; () banked
  8900  000D66  6FF6               	movwf	_runningState& (0+255),b
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;MOTEapp.c: 854: }
  8904                           ;MOTEapp.c: 855: break;
  8905                           
  8906                           ; BSR set to: 0
  8907  000D68  0012               	return	
  8908  000D6A                     
  8909                           ; BSR set to: 0
  8910                           ;MOTEapp.c: 857: if (changeStates)
  8911                           
  8912                           ; BSR set to: 0
  8913  000D6A  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8914  000D6C  B4D8               	btfsc	status,2,c
  8915  000D6E  D0D2               	goto	l556
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;MOTEapp.c: 858: {
  8919                           ;MOTEapp.c: 859: oled_clear();
  8920  000D70  EC5E  F031         	call	_oled_clear	;wreg free
  8921                           
  8922                           ;MOTEapp.c: 860: oled_putString("Periodic Uplink ",0,0);
  8923  000D74  0E77               	movlw	low STR_122
  8924  000D76  0100               	movlb	0	; () banked
  8925  000D78  6F72               	movwf	oled_putString@string& (0+255),b
  8926  000D7A  0E7B               	movlw	high STR_122
  8927  000D7C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8928  000D7E  5172               	movf	oled_putString@string& (0+255),w,b
  8929  000D80  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8930  000D82  A4D8               	btfss	status,2,c
  8931  000D84  0E00               	movlw	low (__mediumconst shr (0+16))
  8932  000D86  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8933  000D88  0E00               	movlw	0
  8934  000D8A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8935  000D8C  0E00               	movlw	0
  8936  000D8E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8937  000D90  ECF3  F029         	call	_oled_putString	;wreg free
  8938                           
  8939                           ;MOTEapp.c: 861: oled_putString("Tx Event Timing ",0,1);
  8940  000D94  0E66               	movlw	low STR_123
  8941  000D96  0100               	movlb	0	; () banked
  8942  000D98  6F72               	movwf	oled_putString@string& (0+255),b
  8943  000D9A  0E7B               	movlw	high STR_123
  8944  000D9C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8945  000D9E  5172               	movf	oled_putString@string& (0+255),w,b
  8946  000DA0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8947  000DA2  A4D8               	btfss	status,2,c
  8948  000DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8949  000DA6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8950  000DA8  0E00               	movlw	0
  8951  000DAA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8952  000DAC  0E01               	movlw	1
  8953  000DAE  6F76               	movwf	oled_putString@start_page& (0+255),b
  8954  000DB0  ECF3  F029         	call	_oled_putString	;wreg free
  8955                           
  8956                           ;MOTEapp.c: 862: oled_putString("Every:",0,2);
  8957  000DB4  0E88               	movlw	low STR_124
  8958  000DB6  0100               	movlb	0	; () banked
  8959  000DB8  6F72               	movwf	oled_putString@string& (0+255),b
  8960  000DBA  0E7F               	movlw	high STR_124
  8961  000DBC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8962  000DBE  5172               	movf	oled_putString@string& (0+255),w,b
  8963  000DC0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8964  000DC2  A4D8               	btfss	status,2,c
  8965  000DC4  0E00               	movlw	low (__mediumconst shr (0+16))
  8966  000DC6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8967  000DC8  0E00               	movlw	0
  8968  000DCA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8969  000DCC  0E02               	movlw	2
  8970  000DCE  6F76               	movwf	oled_putString@start_page& (0+255),b
  8971  000DD0  ECF3  F029         	call	_oled_putString	;wreg free
  8972                           
  8973                           ;MOTEapp.c: 863: oled_putString("Mins",12,2);
  8974  000DD4  0EC3               	movlw	low STR_125
  8975  000DD6  0100               	movlb	0	; () banked
  8976  000DD8  6F72               	movwf	oled_putString@string& (0+255),b
  8977  000DDA  0E7F               	movlw	high STR_125
  8978  000DDC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8979  000DDE  5172               	movf	oled_putString@string& (0+255),w,b
  8980  000DE0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8981  000DE2  A4D8               	btfss	status,2,c
  8982  000DE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8983  000DE6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8984  000DE8  0E0C               	movlw	12
  8985  000DEA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8986  000DEC  0E02               	movlw	2
  8987  000DEE  6F76               	movwf	oled_putString@start_page& (0+255),b
  8988  000DF0  ECF3  F029         	call	_oled_putString	;wreg free
  8989                           
  8990                           ;MOTEapp.c: 865: switch (periodicUpValue)
  8991  000DF4  D066               	goto	l557
  8992  000DF6                     
  8993                           ;MOTEapp.c: 869: oled_putString("5",7,2);
  8994                           
  8995                           ;MOTEapp.c: 868: case 0:
  8996  000DF6  0ECC               	movlw	low (STR_172+11)
  8997  000DF8  0100               	movlb	0	; () banked
  8998  000DFA  6F72               	movwf	oled_putString@string& (0+255),b
  8999  000DFC  0E7D               	movlw	high (STR_172+11)
  9000  000DFE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9001  000E00  5172               	movf	oled_putString@string& (0+255),w,b
  9002  000E02  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9003  000E04  A4D8               	btfss	status,2,c
  9004  000E06  0E00               	movlw	low (__mediumconst shr (0+16))
  9005  000E08  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9006  000E0A  0E07               	movlw	7
  9007  000E0C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9008  000E0E  0E02               	movlw	2
  9009  000E10  6F76               	movwf	oled_putString@start_page& (0+255),b
  9010  000E12  ECF3  F029         	call	_oled_putString	;wreg free
  9011                           
  9012                           ;MOTEapp.c: 870: break;
  9013  000E16  D06A               	goto	l560
  9014  000E18                     
  9015                           ;MOTEapp.c: 872: oled_putString("10",7,2);
  9016  000E18  0EE1               	movlw	low (STR_149+1)
  9017  000E1A  0100               	movlb	0	; () banked
  9018  000E1C  6F72               	movwf	oled_putString@string& (0+255),b
  9019  000E1E  0E7F               	movlw	high (STR_149+1)
  9020  000E20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9021  000E22  5172               	movf	oled_putString@string& (0+255),w,b
  9022  000E24  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9023  000E26  A4D8               	btfss	status,2,c
  9024  000E28  0E00               	movlw	low (__mediumconst shr (0+16))
  9025  000E2A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9026  000E2C  0E07               	movlw	7
  9027  000E2E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9028  000E30  0E02               	movlw	2
  9029  000E32  6F76               	movwf	oled_putString@start_page& (0+255),b
  9030  000E34  ECF3  F029         	call	_oled_putString	;wreg free
  9031                           
  9032                           ;MOTEapp.c: 873: break;
  9033  000E38  D059               	goto	l560
  9034  000E3A                     
  9035                           ;MOTEapp.c: 875: oled_putString("15",7,2);
  9036  000E3A  0EED               	movlw	low (STR_150+1)
  9037  000E3C  0100               	movlb	0	; () banked
  9038  000E3E  6F72               	movwf	oled_putString@string& (0+255),b
  9039  000E40  0E7F               	movlw	high (STR_150+1)
  9040  000E42  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9041  000E44  5172               	movf	oled_putString@string& (0+255),w,b
  9042  000E46  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9043  000E48  A4D8               	btfss	status,2,c
  9044  000E4A  0E00               	movlw	low (__mediumconst shr (0+16))
  9045  000E4C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9046  000E4E  0E07               	movlw	7
  9047  000E50  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9048  000E52  0E02               	movlw	2
  9049  000E54  6F76               	movwf	oled_putString@start_page& (0+255),b
  9050  000E56  ECF3  F029         	call	_oled_putString	;wreg free
  9051                           
  9052                           ;MOTEapp.c: 876: break;
  9053  000E5A  D048               	goto	l560
  9054  000E5C                     
  9055                           ;MOTEapp.c: 878: oled_putString("30",7,2);
  9056  000E5C  0EE5               	movlw	low (STR_151+1)
  9057  000E5E  0100               	movlb	0	; () banked
  9058  000E60  6F72               	movwf	oled_putString@string& (0+255),b
  9059  000E62  0E7F               	movlw	high (STR_151+1)
  9060  000E64  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9061  000E66  5172               	movf	oled_putString@string& (0+255),w,b
  9062  000E68  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9063  000E6A  A4D8               	btfss	status,2,c
  9064  000E6C  0E00               	movlw	low (__mediumconst shr (0+16))
  9065  000E6E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9066  000E70  0E07               	movlw	7
  9067  000E72  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9068  000E74  0E02               	movlw	2
  9069  000E76  6F76               	movwf	oled_putString@start_page& (0+255),b
  9070  000E78  ECF3  F029         	call	_oled_putString	;wreg free
  9071                           
  9072                           ;MOTEapp.c: 879: break;
  9073  000E7C  D037               	goto	l560
  9074  000E7E                     
  9075                           ;MOTEapp.c: 881: oled_putString("60",7,2);
  9076  000E7E  0EE9               	movlw	low (STR_152+1)
  9077  000E80  0100               	movlb	0	; () banked
  9078  000E82  6F72               	movwf	oled_putString@string& (0+255),b
  9079  000E84  0E7F               	movlw	high (STR_152+1)
  9080  000E86  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9081  000E88  5172               	movf	oled_putString@string& (0+255),w,b
  9082  000E8A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9083  000E8C  A4D8               	btfss	status,2,c
  9084  000E8E  0E00               	movlw	low (__mediumconst shr (0+16))
  9085  000E90  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9086  000E92  0E07               	movlw	7
  9087  000E94  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9088  000E96  0E02               	movlw	2
  9089  000E98  6F76               	movwf	oled_putString@start_page& (0+255),b
  9090  000E9A  ECF3  F029         	call	_oled_putString	;wreg free
  9091                           
  9092                           ;MOTEapp.c: 882: break;
  9093  000E9E  D026               	goto	l560
  9094  000EA0                     
  9095                           ;MOTEapp.c: 884: oled_putString("OFF",7,2);
  9096  000EA0  0EF0               	movlw	low STR_131
  9097  000EA2  0100               	movlb	0	; () banked
  9098  000EA4  6F72               	movwf	oled_putString@string& (0+255),b
  9099  000EA6  0E7F               	movlw	high STR_131
  9100  000EA8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9101  000EAA  5172               	movf	oled_putString@string& (0+255),w,b
  9102  000EAC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9103  000EAE  A4D8               	btfss	status,2,c
  9104  000EB0  0E00               	movlw	low (__mediumconst shr (0+16))
  9105  000EB2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9106  000EB4  0E07               	movlw	7
  9107  000EB6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9108  000EB8  0E02               	movlw	2
  9109  000EBA  6F76               	movwf	oled_putString@start_page& (0+255),b
  9110  000EBC  ECF3  F029         	call	_oled_putString	;wreg free
  9111                           
  9112                           ;MOTEapp.c: 886: }
  9113                           
  9114                           ;MOTEapp.c: 885: break;
  9115  000EC0  D015               	goto	l560
  9116  000EC2                     l557:
  9117  000EC2  0100               	movlb	0	; () banked
  9118  000EC4  51FE               	movf	_periodicUpValue& (0+255),w,b
  9119                           
  9120                           ; Switch size 1, requested type "space"
  9121                           ; Number of cases is 6, Range of values is 0 to 5
  9122                           ; switch strategies available:
  9123                           ; Name         Instructions Cycles
  9124                           ; simple_byte           19    10 (average)
  9125                           ;	Chosen strategy is simple_byte
  9126  000EC6  0A00               	xorlw	0	; case 0
  9127  000EC8  B4D8               	btfsc	status,2,c
  9128  000ECA  D795               	goto	l558
  9129  000ECC  0A01               	xorlw	1	; case 1
  9130  000ECE  B4D8               	btfsc	status,2,c
  9131  000ED0  D7A3               	goto	l561
  9132  000ED2  0A03               	xorlw	3	; case 2
  9133  000ED4  B4D8               	btfsc	status,2,c
  9134  000ED6  D7B1               	goto	l562
  9135  000ED8  0A01               	xorlw	1	; case 3
  9136  000EDA  B4D8               	btfsc	status,2,c
  9137  000EDC  D7BF               	goto	l563
  9138  000EDE  0A07               	xorlw	7	; case 4
  9139  000EE0  B4D8               	btfsc	status,2,c
  9140  000EE2  D7CD               	goto	l564
  9141  000EE4  0A01               	xorlw	1	; case 5
  9142  000EE6  B4D8               	btfsc	status,2,c
  9143  000EE8  D7DB               	goto	l565
  9144  000EEA  D785               	goto	l558
  9145  000EEC                     l560:
  9146                           
  9147                           ;MOTEapp.c: 887: oled_putString("(NAV)    (CNG) ",0,3);
  9148                           
  9149                           ; BSR set to: 0
  9150  000EEC  0E74               	movlw	low STR_117
  9151  000EEE  0100               	movlb	0	; () banked
  9152  000EF0  6F72               	movwf	oled_putString@string& (0+255),b
  9153  000EF2  0E7C               	movlw	high STR_117
  9154  000EF4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9155  000EF6  5172               	movf	oled_putString@string& (0+255),w,b
  9156  000EF8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9157  000EFA  A4D8               	btfss	status,2,c
  9158  000EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  9159  000EFE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9160  000F00  0E00               	movlw	0
  9161  000F02  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9162  000F04  0E03               	movlw	3
  9163  000F06  6F76               	movwf	oled_putString@start_page& (0+255),b
  9164  000F08  ECF3  F029         	call	_oled_putString	;wreg free
  9165                           
  9166                           ;MOTEapp.c: 888: runningState = runningPeriodicWakeUpLength;
  9167  000F0C  0E0D               	movlw	13
  9168  000F0E  0100               	movlb	0	; () banked
  9169  000F10  6FF6               	movwf	_runningState& (0+255),b
  9170                           
  9171                           ;MOTEapp.c: 889: }
  9172  000F12  0012               	return	
  9173  000F14                     l556:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;MOTEapp.c: 890: else if (selectButton)
  9177                           
  9178                           ; BSR set to: 0
  9179  000F14  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9180  000F16  B4D8               	btfsc	status,2,c
  9181  000F18  0012               	return	
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;MOTEapp.c: 891: {
  9185                           ;MOTEapp.c: 892: if (menuTimeout)
  9186  000F1A  51FC               	movf	_menuTimeout& (0+255),w,b
  9187  000F1C  B4D8               	btfsc	status,2,c
  9188  000F1E  D012               	goto	l568
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;MOTEapp.c: 893: {
  9192                           ;MOTEapp.c: 894: menuTimeout = 0;
  9193  000F20  0E00               	movlw	0
  9194  000F22  6FFC               	movwf	_menuTimeout& (0+255),b
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;MOTEapp.c: 895: oled_putString("    Disabled  ", 0,2);
  9198  000F24  0EE3               	movlw	low STR_116
  9199  000F26  6F72               	movwf	oled_putString@string& (0+255),b
  9200  000F28  0E7C               	movlw	high STR_116
  9201  000F2A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9202  000F2C  5172               	movf	oled_putString@string& (0+255),w,b
  9203  000F2E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9204  000F30  A4D8               	btfss	status,2,c
  9205  000F32  0E00               	movlw	low (__mediumconst shr (0+16))
  9206  000F34  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9207  000F36  0E00               	movlw	0
  9208  000F38  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9209  000F3A  0E02               	movlw	2
  9210  000F3C  6F76               	movwf	oled_putString@start_page& (0+255),b
  9211  000F3E  ECF3  F029         	call	_oled_putString	;wreg free
  9212                           
  9213                           ;MOTEapp.c: 896: }
  9214  000F42  0012               	return	
  9215  000F44                     l568:
  9216                           
  9217                           ;MOTEapp.c: 897: else
  9218                           ;MOTEapp.c: 898: {
  9219                           ;MOTEapp.c: 899: menuTimeout = 1;
  9220  000F44  0E01               	movlw	1
  9221  000F46  0100               	movlb	0	; () banked
  9222  000F48  6FFC               	movwf	_menuTimeout& (0+255),b
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;MOTEapp.c: 900: oled_putString("    Enabled   ", 0,2);
  9226  000F4A  0ED4               	movlw	low STR_115
  9227  000F4C  6F72               	movwf	oled_putString@string& (0+255),b
  9228  000F4E  0E7C               	movlw	high STR_115
  9229  000F50  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9230  000F52  5172               	movf	oled_putString@string& (0+255),w,b
  9231  000F54  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9232  000F56  A4D8               	btfss	status,2,c
  9233  000F58  0E00               	movlw	low (__mediumconst shr (0+16))
  9234  000F5A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9235  000F5C  0E00               	movlw	0
  9236  000F5E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9237  000F60  0E02               	movlw	2
  9238  000F62  6F76               	movwf	oled_putString@start_page& (0+255),b
  9239  000F64  ECF3  F029         	call	_oled_putString	;wreg free
  9240                           
  9241                           ;MOTEapp.c: 901: }
  9242                           ;MOTEapp.c: 902: }
  9243                           ;MOTEapp.c: 903: break;
  9244  000F68  0012               	return	
  9245  000F6A                     
  9246                           ;MOTEapp.c: 906: if ( (changeStates) || (selectButton) )
  9247  000F6A  0100               	movlb	0	; () banked
  9248  000F6C  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9249  000F6E  A4D8               	btfss	status,2,c
  9250  000F70  D003               	goto	u10150
  9251                           
  9252                           ; BSR set to: 0
  9253  000F72  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9254  000F74  B4D8               	btfsc	status,2,c
  9255  000F76  0012               	return	
  9256  000F78                     u10150:
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;MOTEapp.c: 907: {
  9260                           ;MOTEapp.c: 908: oled_clear();
  9261                           
  9262                           ; BSR set to: 0
  9263  000F78  EC5E  F031         	call	_oled_clear	;wreg free
  9264                           
  9265                           ;MOTEapp.c: 909: oled_putString("  Sensor Data  ",0,0);
  9266  000F7C  0E64               	movlw	low STR_105
  9267  000F7E  0100               	movlb	0	; () banked
  9268  000F80  6F72               	movwf	oled_putString@string& (0+255),b
  9269  000F82  0E7C               	movlw	high STR_105
  9270  000F84  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9271  000F86  5172               	movf	oled_putString@string& (0+255),w,b
  9272  000F88  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9273  000F8A  A4D8               	btfss	status,2,c
  9274  000F8C  0E00               	movlw	low (__mediumconst shr (0+16))
  9275  000F8E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9276  000F90  0E00               	movlw	0
  9277  000F92  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9278  000F94  0E00               	movlw	0
  9279  000F96  6F76               	movwf	oled_putString@start_page& (0+255),b
  9280  000F98  ECF3  F029         	call	_oled_putString	;wreg free
  9281                           
  9282                           ;MOTEapp.c: 910: oled_putString("    Display    ",0,1);
  9283  000F9C  0E54               	movlw	low STR_106
  9284  000F9E  0100               	movlb	0	; () banked
  9285  000FA0  6F72               	movwf	oled_putString@string& (0+255),b
  9286  000FA2  0E7C               	movlw	high STR_106
  9287  000FA4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9288  000FA6  5172               	movf	oled_putString@string& (0+255),w,b
  9289  000FA8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9290  000FAA  A4D8               	btfss	status,2,c
  9291  000FAC  0E00               	movlw	low (__mediumconst shr (0+16))
  9292  000FAE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9293  000FB0  0E00               	movlw	0
  9294  000FB2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9295  000FB4  0E01               	movlw	1
  9296  000FB6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9297  000FB8  ECF3  F029         	call	_oled_putString	;wreg free
  9298                           
  9299                           ;MOTEapp.c: 911: oled_putString("(NAV)    (SEL) ",0,3);
  9300  000FBC  0E84               	movlw	low STR_78
  9301  000FBE  0100               	movlb	0	; () banked
  9302  000FC0  6F72               	movwf	oled_putString@string& (0+255),b
  9303  000FC2  0E7C               	movlw	high STR_78
  9304  000FC4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9305  000FC6  5172               	movf	oled_putString@string& (0+255),w,b
  9306  000FC8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9307  000FCA  A4D8               	btfss	status,2,c
  9308  000FCC  0E00               	movlw	low (__mediumconst shr (0+16))
  9309  000FCE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9310  000FD0  0E00               	movlw	0
  9311  000FD2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9312  000FD4  0E03               	movlw	3
  9313  000FD6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9314  000FD8  ECF3  F029         	call	_oled_putString	;wreg free
  9315                           
  9316                           ;MOTEapp.c: 912: runningState = runningSensor;
  9317  000FDC  0E01               	movlw	1
  9318  000FDE  0100               	movlb	0	; () banked
  9319  000FE0  6FF6               	movwf	_runningState& (0+255),b
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;MOTEapp.c: 913: }
  9323                           ;MOTEapp.c: 914: break;
  9324  000FE2  0012               	return	
  9325  000FE4                     
  9326                           ; BSR set to: 0
  9327                           ;MOTEapp.c: 916: if (changeStates)
  9328                           
  9329                           ; BSR set to: 0
  9330  000FE4  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9331  000FE6  B4D8               	btfsc	status,2,c
  9332  000FE8  D0C4               	goto	l579
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;MOTEapp.c: 917: {
  9336                           ;MOTEapp.c: 918: oled_clear();
  9337  000FEA  EC5E  F031         	call	_oled_clear	;wreg free
  9338                           
  9339                           ;MOTEapp.c: 919: oled_putString("Select Data Rate",0,0);
  9340  000FEE  0EEE               	movlw	low STR_138
  9341  000FF0  0100               	movlb	0	; () banked
  9342  000FF2  6F72               	movwf	oled_putString@string& (0+255),b
  9343  000FF4  0E7B               	movlw	high STR_138
  9344  000FF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9345  000FF8  5172               	movf	oled_putString@string& (0+255),w,b
  9346  000FFA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9347  000FFC  A4D8               	btfss	status,2,c
  9348  000FFE  0E00               	movlw	low (__mediumconst shr (0+16))
  9349  001000  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9350  001002  0E00               	movlw	0
  9351  001004  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9352  001006  0E00               	movlw	0
  9353  001008  6F76               	movwf	oled_putString@start_page& (0+255),b
  9354  00100A  ECF3  F029         	call	_oled_putString	;wreg free
  9355                           
  9356                           ;MOTEapp.c: 920: oled_putString("Data Rate: ",0,2);
  9357  00100E  0E59               	movlw	low STR_139
  9358  001010  0100               	movlb	0	; () banked
  9359  001012  6F72               	movwf	oled_putString@string& (0+255),b
  9360  001014  0E7E               	movlw	high STR_139
  9361  001016  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9362  001018  5172               	movf	oled_putString@string& (0+255),w,b
  9363  00101A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9364  00101C  A4D8               	btfss	status,2,c
  9365  00101E  0E00               	movlw	low (__mediumconst shr (0+16))
  9366  001020  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9367  001022  0E00               	movlw	0
  9368  001024  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9369  001026  0E02               	movlw	2
  9370  001028  6F76               	movwf	oled_putString@start_page& (0+255),b
  9371  00102A  ECF3  F029         	call	_oled_putString	;wreg free
  9372                           
  9373                           ;MOTEapp.c: 921: oled_putString("(NAV)    (CNG) ",0,3);
  9374  00102E  0E74               	movlw	low STR_117
  9375  001030  0100               	movlb	0	; () banked
  9376  001032  6F72               	movwf	oled_putString@string& (0+255),b
  9377  001034  0E7C               	movlw	high STR_117
  9378  001036  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9379  001038  5172               	movf	oled_putString@string& (0+255),w,b
  9380  00103A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9381  00103C  A4D8               	btfss	status,2,c
  9382  00103E  0E00               	movlw	low (__mediumconst shr (0+16))
  9383  001040  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9384  001042  0E00               	movlw	0
  9385  001044  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9386  001046  0E03               	movlw	3
  9387  001048  6F76               	movwf	oled_putString@start_page& (0+255),b
  9388  00104A  ECF3  F029         	call	_oled_putString	;wreg free
  9389                           
  9390                           ;MOTEapp.c: 922: runningState = runningDataRateDisplay;
  9391  00104E  0E03               	movlw	3
  9392  001050  0100               	movlb	0	; () banked
  9393  001052  6FF6               	movwf	_runningState& (0+255),b
  9394                           
  9395                           ;MOTEapp.c: 925: switch (dataRateValue)
  9396  001054  D076               	goto	l576
  9397  001056                     
  9398                           ; BSR set to: 0
  9399                           ;MOTEapp.c: 929: oled_putString(" 0 ",10,2);
  9400                           
  9401                           ; BSR set to: 0
  9402                           
  9403                           ;MOTEapp.c: 928: case 0:
  9404                           
  9405                           ; BSR set to: 0
  9406  001056  0EC8               	movlw	low STR_141
  9407  001058  6F72               	movwf	oled_putString@string& (0+255),b
  9408  00105A  0E7F               	movlw	high STR_141
  9409  00105C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9410  00105E  5172               	movf	oled_putString@string& (0+255),w,b
  9411  001060  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9412  001062  A4D8               	btfss	status,2,c
  9413  001064  0E00               	movlw	low (__mediumconst shr (0+16))
  9414  001066  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9415  001068  0E0A               	movlw	10
  9416  00106A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9417  00106C  0E02               	movlw	2
  9418  00106E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9419  001070  ECF3  F029         	call	_oled_putString	;wreg free
  9420                           
  9421                           ;MOTEapp.c: 930: break;
  9422  001074  D07E               	goto	l579
  9423  001076                     
  9424                           ;MOTEapp.c: 932: oled_putString(" 1 ",10,2);
  9425  001076  0ECC               	movlw	low STR_142
  9426  001078  0100               	movlb	0	; () banked
  9427  00107A  6F72               	movwf	oled_putString@string& (0+255),b
  9428  00107C  0E7F               	movlw	high STR_142
  9429  00107E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9430  001080  5172               	movf	oled_putString@string& (0+255),w,b
  9431  001082  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9432  001084  A4D8               	btfss	status,2,c
  9433  001086  0E00               	movlw	low (__mediumconst shr (0+16))
  9434  001088  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9435  00108A  0E0A               	movlw	10
  9436  00108C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9437  00108E  0E02               	movlw	2
  9438  001090  6F76               	movwf	oled_putString@start_page& (0+255),b
  9439  001092  ECF3  F029         	call	_oled_putString	;wreg free
  9440                           
  9441                           ;MOTEapp.c: 933: break;
  9442  001096  D06D               	goto	l579
  9443  001098                     
  9444                           ;MOTEapp.c: 935: oled_putString(" 2 ",10,2);
  9445  001098  0ED0               	movlw	low STR_143
  9446  00109A  0100               	movlb	0	; () banked
  9447  00109C  6F72               	movwf	oled_putString@string& (0+255),b
  9448  00109E  0E7F               	movlw	high STR_143
  9449  0010A0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9450  0010A2  5172               	movf	oled_putString@string& (0+255),w,b
  9451  0010A4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9452  0010A6  A4D8               	btfss	status,2,c
  9453  0010A8  0E00               	movlw	low (__mediumconst shr (0+16))
  9454  0010AA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9455  0010AC  0E0A               	movlw	10
  9456  0010AE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9457  0010B0  0E02               	movlw	2
  9458  0010B2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9459  0010B4  ECF3  F029         	call	_oled_putString	;wreg free
  9460                           
  9461                           ;MOTEapp.c: 936: break;
  9462  0010B8  D05C               	goto	l579
  9463  0010BA                     
  9464                           ;MOTEapp.c: 938: oled_putString(" 3 ",10,2);
  9465  0010BA  0ED4               	movlw	low STR_144
  9466  0010BC  0100               	movlb	0	; () banked
  9467  0010BE  6F72               	movwf	oled_putString@string& (0+255),b
  9468  0010C0  0E7F               	movlw	high STR_144
  9469  0010C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9470  0010C4  5172               	movf	oled_putString@string& (0+255),w,b
  9471  0010C6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9472  0010C8  A4D8               	btfss	status,2,c
  9473  0010CA  0E00               	movlw	low (__mediumconst shr (0+16))
  9474  0010CC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9475  0010CE  0E0A               	movlw	10
  9476  0010D0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9477  0010D2  0E02               	movlw	2
  9478  0010D4  6F76               	movwf	oled_putString@start_page& (0+255),b
  9479  0010D6  ECF3  F029         	call	_oled_putString	;wreg free
  9480                           
  9481                           ;MOTEapp.c: 939: break;
  9482  0010DA  D04B               	goto	l579
  9483  0010DC                     
  9484                           ;MOTEapp.c: 941: oled_putString(" 4 ",10,2);
  9485  0010DC  0ED8               	movlw	low STR_145
  9486  0010DE  0100               	movlb	0	; () banked
  9487  0010E0  6F72               	movwf	oled_putString@string& (0+255),b
  9488  0010E2  0E7F               	movlw	high STR_145
  9489  0010E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9490  0010E6  5172               	movf	oled_putString@string& (0+255),w,b
  9491  0010E8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9492  0010EA  A4D8               	btfss	status,2,c
  9493  0010EC  0E00               	movlw	low (__mediumconst shr (0+16))
  9494  0010EE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9495  0010F0  0E0A               	movlw	10
  9496  0010F2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9497  0010F4  0E02               	movlw	2
  9498  0010F6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9499  0010F8  ECF3  F029         	call	_oled_putString	;wreg free
  9500                           
  9501                           ;MOTEapp.c: 942: break;
  9502  0010FC  D03A               	goto	l579
  9503  0010FE                     
  9504                           ;MOTEapp.c: 944: oled_putString(" 5 ",10,2);
  9505  0010FE  0EDC               	movlw	low STR_146
  9506  001100  0100               	movlb	0	; () banked
  9507  001102  6F72               	movwf	oled_putString@string& (0+255),b
  9508  001104  0E7F               	movlw	high STR_146
  9509  001106  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9510  001108  5172               	movf	oled_putString@string& (0+255),w,b
  9511  00110A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9512  00110C  A4D8               	btfss	status,2,c
  9513  00110E  0E00               	movlw	low (__mediumconst shr (0+16))
  9514  001110  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9515  001112  0E0A               	movlw	10
  9516  001114  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9517  001116  0E02               	movlw	2
  9518  001118  6F76               	movwf	oled_putString@start_page& (0+255),b
  9519  00111A  ECF3  F029         	call	_oled_putString	;wreg free
  9520                           
  9521                           ;MOTEapp.c: 945: break;
  9522  00111E  D029               	goto	l579
  9523  001120                     
  9524                           ;MOTEapp.c: 947: oled_putString("ADR",10,2);
  9525  001120  0EF4               	movlw	low STR_147
  9526  001122  0100               	movlb	0	; () banked
  9527  001124  6F72               	movwf	oled_putString@string& (0+255),b
  9528  001126  0E7F               	movlw	high STR_147
  9529  001128  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9530  00112A  5172               	movf	oled_putString@string& (0+255),w,b
  9531  00112C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9532  00112E  A4D8               	btfss	status,2,c
  9533  001130  0E00               	movlw	low (__mediumconst shr (0+16))
  9534  001132  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9535  001134  0E0A               	movlw	10
  9536  001136  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9537  001138  0E02               	movlw	2
  9538  00113A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9539  00113C  ECF3  F029         	call	_oled_putString	;wreg free
  9540                           
  9541                           ;MOTEapp.c: 949: }
  9542                           
  9543                           ;MOTEapp.c: 948: break;
  9544  001140  D018               	goto	l579
  9545  001142                     l576:
  9546  001142  0100               	movlb	0	; () banked
  9547  001144  51FD               	movf	_dataRateValue& (0+255),w,b
  9548                           
  9549                           ; Switch size 1, requested type "space"
  9550                           ; Number of cases is 7, Range of values is 0 to 6
  9551                           ; switch strategies available:
  9552                           ; Name         Instructions Cycles
  9553                           ; simple_byte           22    12 (average)
  9554                           ;	Chosen strategy is simple_byte
  9555  001146  0A00               	xorlw	0	; case 0
  9556  001148  B4D8               	btfsc	status,2,c
  9557  00114A  D785               	goto	l577
  9558  00114C  0A01               	xorlw	1	; case 1
  9559  00114E  B4D8               	btfsc	status,2,c
  9560  001150  D792               	goto	l580
  9561  001152  0A03               	xorlw	3	; case 2
  9562  001154  B4D8               	btfsc	status,2,c
  9563  001156  D7A0               	goto	l581
  9564  001158  0A01               	xorlw	1	; case 3
  9565  00115A  B4D8               	btfsc	status,2,c
  9566  00115C  D7AE               	goto	l582
  9567  00115E  0A07               	xorlw	7	; case 4
  9568  001160  B4D8               	btfsc	status,2,c
  9569  001162  D7BC               	goto	l583
  9570  001164  0A01               	xorlw	1	; case 5
  9571  001166  B4D8               	btfsc	status,2,c
  9572  001168  D7CA               	goto	l584
  9573  00116A  0A03               	xorlw	3	; case 6
  9574  00116C  B4D8               	btfsc	status,2,c
  9575  00116E  D7D8               	goto	l585
  9576  001170  D772               	goto	l577
  9577  001172                     l579:
  9578                           
  9579                           ;MOTEapp.c: 950: }
  9580                           ;MOTEapp.c: 951: if (selectButton)
  9581                           
  9582                           ; BSR set to: 0
  9583                           
  9584                           ; BSR set to: 0
  9585  001172  0100               	movlb	0	; () banked
  9586  001174  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9587  001176  B4D8               	btfsc	status,2,c
  9588  001178  0012               	return	
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;MOTEapp.c: 952: {
  9592                           ;MOTEapp.c: 953: if (periodicUpValue < 5)
  9593  00117A  0E05               	movlw	5
  9594  00117C  61FE               	cpfslt	_periodicUpValue& (0+255),b
  9595  00117E  D002               	goto	l587
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;MOTEapp.c: 954: {
  9599                           ;MOTEapp.c: 955: periodicUpValue++;
  9600  001180  2BFE               	incf	_periodicUpValue& (0+255),f,b
  9601                           
  9602                           ;MOTEapp.c: 956: } else {
  9603  001182  D072               	goto	l589
  9604  001184                     l587:
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;MOTEapp.c: 957: periodicUpValue = 0;
  9608                           
  9609                           ; BSR set to: 0
  9610  001184  0E00               	movlw	0
  9611  001186  6FFE               	movwf	_periodicUpValue& (0+255),b
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;MOTEapp.c: 958: }
  9615                           ;MOTEapp.c: 960: switch (periodicUpValue)
  9616  001188  D06F               	goto	l589
  9617  00118A                     
  9618                           ; BSR set to: 0
  9619                           ;MOTEapp.c: 964: periodicTimerValue = 9;
  9620                           
  9621                           ; BSR set to: 0
  9622                           
  9623                           ;MOTEapp.c: 963: case 0:
  9624                           
  9625                           ; BSR set to: 0
  9626  00118A  0E09               	movlw	9
  9627  00118C  6E5C               	movwf	_periodicTimerValue,c
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;MOTEapp.c: 965: oled_putString(" 5 ",7,2);
  9631  00118E  0EDC               	movlw	low STR_146
  9632  001190  6F72               	movwf	oled_putString@string& (0+255),b
  9633  001192  0E7F               	movlw	high STR_146
  9634  001194  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9635  001196  5172               	movf	oled_putString@string& (0+255),w,b
  9636  001198  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9637  00119A  A4D8               	btfss	status,2,c
  9638  00119C  0E00               	movlw	low (__mediumconst shr (0+16))
  9639  00119E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9640  0011A0  0E07               	movlw	7
  9641  0011A2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9642  0011A4  0E02               	movlw	2
  9643  0011A6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9644  0011A8  ECF3  F029         	call	_oled_putString	;wreg free
  9645                           
  9646                           ;MOTEapp.c: 966: break;
  9647  0011AC  0012               	return	
  9648  0011AE                     
  9649                           ;MOTEapp.c: 968: periodicTimerValue = 18;
  9650  0011AE  0E12               	movlw	18
  9651  0011B0  6E5C               	movwf	_periodicTimerValue,c
  9652                           
  9653                           ;MOTEapp.c: 969: oled_putString(" 10",7,2);
  9654  0011B2  0EE0               	movlw	low STR_149
  9655  0011B4  0100               	movlb	0	; () banked
  9656  0011B6  6F72               	movwf	oled_putString@string& (0+255),b
  9657  0011B8  0E7F               	movlw	high STR_149
  9658  0011BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9659  0011BC  5172               	movf	oled_putString@string& (0+255),w,b
  9660  0011BE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9661  0011C0  A4D8               	btfss	status,2,c
  9662  0011C2  0E00               	movlw	low (__mediumconst shr (0+16))
  9663  0011C4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9664  0011C6  0E07               	movlw	7
  9665  0011C8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9666  0011CA  0E02               	movlw	2
  9667  0011CC  6F76               	movwf	oled_putString@start_page& (0+255),b
  9668  0011CE  ECF3  F029         	call	_oled_putString	;wreg free
  9669                           
  9670                           ;MOTEapp.c: 970: break;
  9671  0011D2  0012               	return	
  9672  0011D4                     
  9673                           ;MOTEapp.c: 972: periodicTimerValue = 27;
  9674  0011D4  0E1B               	movlw	27
  9675  0011D6  6E5C               	movwf	_periodicTimerValue,c
  9676                           
  9677                           ;MOTEapp.c: 973: oled_putString(" 15",7,2);
  9678  0011D8  0EEC               	movlw	low STR_150
  9679  0011DA  0100               	movlb	0	; () banked
  9680  0011DC  6F72               	movwf	oled_putString@string& (0+255),b
  9681  0011DE  0E7F               	movlw	high STR_150
  9682  0011E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9683  0011E2  5172               	movf	oled_putString@string& (0+255),w,b
  9684  0011E4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9685  0011E6  A4D8               	btfss	status,2,c
  9686  0011E8  0E00               	movlw	low (__mediumconst shr (0+16))
  9687  0011EA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9688  0011EC  0E07               	movlw	7
  9689  0011EE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9690  0011F0  0E02               	movlw	2
  9691  0011F2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9692  0011F4  ECF3  F029         	call	_oled_putString	;wreg free
  9693                           
  9694                           ;MOTEapp.c: 974: break;
  9695  0011F8  0012               	return	
  9696  0011FA                     
  9697                           ;MOTEapp.c: 976: periodicTimerValue = 54;
  9698  0011FA  0E36               	movlw	54
  9699  0011FC  6E5C               	movwf	_periodicTimerValue,c
  9700                           
  9701                           ;MOTEapp.c: 977: oled_putString(" 30",7,2);
  9702  0011FE  0EE4               	movlw	low STR_151
  9703  001200  0100               	movlb	0	; () banked
  9704  001202  6F72               	movwf	oled_putString@string& (0+255),b
  9705  001204  0E7F               	movlw	high STR_151
  9706  001206  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9707  001208  5172               	movf	oled_putString@string& (0+255),w,b
  9708  00120A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9709  00120C  A4D8               	btfss	status,2,c
  9710  00120E  0E00               	movlw	low (__mediumconst shr (0+16))
  9711  001210  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9712  001212  0E07               	movlw	7
  9713  001214  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9714  001216  0E02               	movlw	2
  9715  001218  6F76               	movwf	oled_putString@start_page& (0+255),b
  9716  00121A  ECF3  F029         	call	_oled_putString	;wreg free
  9717                           
  9718                           ;MOTEapp.c: 978: break;
  9719  00121E  0012               	return	
  9720  001220                     
  9721                           ;MOTEapp.c: 980: periodicTimerValue = 108;
  9722  001220  0E6C               	movlw	108
  9723  001222  6E5C               	movwf	_periodicTimerValue,c
  9724                           
  9725                           ;MOTEapp.c: 981: oled_putString(" 60",7,2);
  9726  001224  0EE8               	movlw	low STR_152
  9727  001226  0100               	movlb	0	; () banked
  9728  001228  6F72               	movwf	oled_putString@string& (0+255),b
  9729  00122A  0E7F               	movlw	high STR_152
  9730  00122C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9731  00122E  5172               	movf	oled_putString@string& (0+255),w,b
  9732  001230  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9733  001232  A4D8               	btfss	status,2,c
  9734  001234  0E00               	movlw	low (__mediumconst shr (0+16))
  9735  001236  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9736  001238  0E07               	movlw	7
  9737  00123A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9738  00123C  0E02               	movlw	2
  9739  00123E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9740  001240  ECF3  F029         	call	_oled_putString	;wreg free
  9741                           
  9742                           ;MOTEapp.c: 982: break;
  9743  001244  0012               	return	
  9744  001246                     l597:
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;MOTEapp.c: 984: periodicTimerValue = 255;
  9748  001246  685C               	setf	_periodicTimerValue,c
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;MOTEapp.c: 985: oled_putString("OFF",7,2);
  9752  001248  0EF0               	movlw	low STR_131
  9753  00124A  6F72               	movwf	oled_putString@string& (0+255),b
  9754  00124C  0E7F               	movlw	high STR_131
  9755  00124E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9756  001250  5172               	movf	oled_putString@string& (0+255),w,b
  9757  001252  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9758  001254  A4D8               	btfss	status,2,c
  9759  001256  0E00               	movlw	low (__mediumconst shr (0+16))
  9760  001258  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9761  00125A  0E07               	movlw	7
  9762  00125C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9763  00125E  0E02               	movlw	2
  9764  001260  6F76               	movwf	oled_putString@start_page& (0+255),b
  9765  001262  ECF3  F029         	call	_oled_putString	;wreg free
  9766                           
  9767                           ;MOTEapp.c: 987: }
  9768                           
  9769                           ;MOTEapp.c: 986: break;
  9770  001266  0012               	return	
  9771  001268                     l589:
  9772  001268  0100               	movlb	0	; () banked
  9773  00126A  51FE               	movf	_periodicUpValue& (0+255),w,b
  9774                           
  9775                           ; Switch size 1, requested type "space"
  9776                           ; Number of cases is 6, Range of values is 0 to 5
  9777                           ; switch strategies available:
  9778                           ; Name         Instructions Cycles
  9779                           ; simple_byte           19    10 (average)
  9780                           ;	Chosen strategy is simple_byte
  9781  00126C  0A00               	xorlw	0	; case 0
  9782  00126E  B4D8               	btfsc	status,2,c
  9783  001270  D78C               	goto	l590
  9784  001272  0A01               	xorlw	1	; case 1
  9785  001274  B4D8               	btfsc	status,2,c
  9786  001276  D79B               	goto	l593
  9787  001278  0A03               	xorlw	3	; case 2
  9788  00127A  B4D8               	btfsc	status,2,c
  9789  00127C  D7AB               	goto	l594
  9790  00127E  0A01               	xorlw	1	; case 3
  9791  001280  B4D8               	btfsc	status,2,c
  9792  001282  D7BB               	goto	l595
  9793  001284  0A07               	xorlw	7	; case 4
  9794  001286  B4D8               	btfsc	status,2,c
  9795  001288  D7CB               	goto	l596
  9796  00128A  0A01               	xorlw	1	; case 5
  9797  00128C  B4D8               	btfsc	status,2,c
  9798  00128E  D7DB               	goto	l597
  9799  001290  D77C               	goto	l590
  9800  001292                     
  9801                           ; BSR set to: 0
  9802                           ;MOTEapp.c: 991: if (changeStates)
  9803                           
  9804                           ; BSR set to: 0
  9805  001292  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9806  001294  B4D8               	btfsc	status,2,c
  9807  001296  D028               	goto	l599
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;MOTEapp.c: 992: {
  9811                           ;MOTEapp.c: 994: MOTEapp_SetDataRateSetting(dataRateValue);
  9812  001298  51FD               	movf	_dataRateValue& (0+255),w,b
  9813  00129A  EC82  F015         	call	_MOTEapp_SetDataRateSetting
  9814                           
  9815                           ;MOTEapp.c: 996: oled_clear();
  9816  00129E  EC5E  F031         	call	_oled_clear	;wreg free
  9817                           
  9818                           ;MOTEapp.c: 997: oled_putString("Enter Sleep Mode",0,0);
  9819  0012A2  0ECC               	movlw	low STR_154
  9820  0012A4  0100               	movlb	0	; () banked
  9821  0012A6  6F72               	movwf	oled_putString@string& (0+255),b
  9822  0012A8  0E7B               	movlw	high STR_154
  9823  0012AA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9824  0012AC  5172               	movf	oled_putString@string& (0+255),w,b
  9825  0012AE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9826  0012B0  A4D8               	btfss	status,2,c
  9827  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9828  0012B4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9829  0012B6  0E00               	movlw	0
  9830  0012B8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9831  0012BA  0E00               	movlw	0
  9832  0012BC  6F76               	movwf	oled_putString@start_page& (0+255),b
  9833  0012BE  ECF3  F029         	call	_oled_putString	;wreg free
  9834                           
  9835                           ;MOTEapp.c: 998: oled_putString("(NAV)    (SLP) ",0,3);
  9836  0012C2  0E94               	movlw	low STR_155
  9837  0012C4  0100               	movlb	0	; () banked
  9838  0012C6  6F72               	movwf	oled_putString@string& (0+255),b
  9839  0012C8  0E7C               	movlw	high STR_155
  9840  0012CA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9841  0012CC  5172               	movf	oled_putString@string& (0+255),w,b
  9842  0012CE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9843  0012D0  A4D8               	btfss	status,2,c
  9844  0012D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9845  0012D4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9846  0012D6  0E00               	movlw	0
  9847  0012D8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9848  0012DA  0E03               	movlw	3
  9849  0012DC  6F76               	movwf	oled_putString@start_page& (0+255),b
  9850  0012DE  ECF3  F029         	call	_oled_putString	;wreg free
  9851                           
  9852                           ;MOTEapp.c: 999: runningState = runningSleep;
  9853  0012E2  0E0F               	movlw	15
  9854  0012E4  0100               	movlb	0	; () banked
  9855  0012E6  6FF6               	movwf	_runningState& (0+255),b
  9856  0012E8                     l599:
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;MOTEapp.c: 1000: }
  9860                           ;MOTEapp.c: 1001: if (selectButton)
  9861                           
  9862                           ; BSR set to: 0
  9863  0012E8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9864  0012EA  B4D8               	btfsc	status,2,c
  9865  0012EC  0012               	return	
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;MOTEapp.c: 1002: {
  9869                           ;MOTEapp.c: 1003: if (dataRateValue < 6)
  9870  0012EE  0E06               	movlw	6
  9871  0012F0  61FD               	cpfslt	_dataRateValue& (0+255),b
  9872  0012F2  D00A               	goto	l601
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;MOTEapp.c: 1004: {
  9876                           ;MOTEapp.c: 1005: if ((rnModule == rn2903) && (dataRateValue > 3))
  9877  0012F4  0451               	decf	_rnModule,w,c
  9878  0012F6  A4D8               	btfss	status,2,c
  9879  0012F8  D005               	goto	l602
  9880                           
  9881                           ; BSR set to: 0
  9882  0012FA  0E03               	movlw	3
  9883  0012FC  65FD               	cpfsgt	_dataRateValue& (0+255),b
  9884  0012FE  D002               	goto	l602
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;MOTEapp.c: 1006: dataRateValue = 6;
  9888  001300  0E06               	movlw	6
  9889  001302  D003               	goto	L5
  9890  001304                     l602:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;MOTEapp.c: 1007: else
  9894                           ;MOTEapp.c: 1008: dataRateValue++;
  9895                           
  9896                           ; BSR set to: 0
  9897  001304  2BFD               	incf	_dataRateValue& (0+255),f,b
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;MOTEapp.c: 1009: }
  9901  001306  D079               	goto	l605
  9902  001308                     l601:
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;MOTEapp.c: 1010: else {
  9906                           ;MOTEapp.c: 1011: dataRateValue = 0;
  9907                           
  9908                           ; BSR set to: 0
  9909  001308  0E00               	movlw	0
  9910  00130A                     L5:
  9911  00130A  6FFD               	movwf	_dataRateValue& (0+255),b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;MOTEapp.c: 1012: }
  9915                           ;MOTEapp.c: 1014: switch (dataRateValue)
  9916  00130C  D076               	goto	l605
  9917  00130E                     
  9918                           ; BSR set to: 0
  9919                           ;MOTEapp.c: 1018: oled_putString(" 0 ",10,2);
  9920                           
  9921                           ; BSR set to: 0
  9922                           
  9923                           ;MOTEapp.c: 1017: case 0:
  9924                           
  9925                           ; BSR set to: 0
  9926  00130E  0EC8               	movlw	low STR_141
  9927  001310  6F72               	movwf	oled_putString@string& (0+255),b
  9928  001312  0E7F               	movlw	high STR_141
  9929  001314  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9930  001316  5172               	movf	oled_putString@string& (0+255),w,b
  9931  001318  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9932  00131A  A4D8               	btfss	status,2,c
  9933  00131C  0E00               	movlw	low (__mediumconst shr (0+16))
  9934  00131E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9935  001320  0E0A               	movlw	10
  9936  001322  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9937  001324  0E02               	movlw	2
  9938  001326  6F76               	movwf	oled_putString@start_page& (0+255),b
  9939  001328  ECF3  F029         	call	_oled_putString	;wreg free
  9940                           
  9941                           ;MOTEapp.c: 1019: break;
  9942  00132C  0012               	return	
  9943  00132E                     
  9944                           ;MOTEapp.c: 1021: oled_putString(" 1 ",10,2);
  9945  00132E  0ECC               	movlw	low STR_142
  9946  001330  0100               	movlb	0	; () banked
  9947  001332  6F72               	movwf	oled_putString@string& (0+255),b
  9948  001334  0E7F               	movlw	high STR_142
  9949  001336  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9950  001338  5172               	movf	oled_putString@string& (0+255),w,b
  9951  00133A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9952  00133C  A4D8               	btfss	status,2,c
  9953  00133E  0E00               	movlw	low (__mediumconst shr (0+16))
  9954  001340  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9955  001342  0E0A               	movlw	10
  9956  001344  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9957  001346  0E02               	movlw	2
  9958  001348  6F76               	movwf	oled_putString@start_page& (0+255),b
  9959  00134A  ECF3  F029         	call	_oled_putString	;wreg free
  9960                           
  9961                           ;MOTEapp.c: 1022: break;
  9962  00134E  0012               	return	
  9963  001350                     
  9964                           ;MOTEapp.c: 1024: oled_putString(" 2 ",10,2);
  9965  001350  0ED0               	movlw	low STR_143
  9966  001352  0100               	movlb	0	; () banked
  9967  001354  6F72               	movwf	oled_putString@string& (0+255),b
  9968  001356  0E7F               	movlw	high STR_143
  9969  001358  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9970  00135A  5172               	movf	oled_putString@string& (0+255),w,b
  9971  00135C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9972  00135E  A4D8               	btfss	status,2,c
  9973  001360  0E00               	movlw	low (__mediumconst shr (0+16))
  9974  001362  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9975  001364  0E0A               	movlw	10
  9976  001366  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9977  001368  0E02               	movlw	2
  9978  00136A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9979  00136C  ECF3  F029         	call	_oled_putString	;wreg free
  9980                           
  9981                           ;MOTEapp.c: 1025: break;
  9982  001370  0012               	return	
  9983  001372                     
  9984                           ;MOTEapp.c: 1027: oled_putString(" 3 ",10,2);
  9985  001372  0ED4               	movlw	low STR_144
  9986  001374  0100               	movlb	0	; () banked
  9987  001376  6F72               	movwf	oled_putString@string& (0+255),b
  9988  001378  0E7F               	movlw	high STR_144
  9989  00137A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9990  00137C  5172               	movf	oled_putString@string& (0+255),w,b
  9991  00137E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9992  001380  A4D8               	btfss	status,2,c
  9993  001382  0E00               	movlw	low (__mediumconst shr (0+16))
  9994  001384  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9995  001386  0E0A               	movlw	10
  9996  001388  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9997  00138A  0E02               	movlw	2
  9998  00138C  6F76               	movwf	oled_putString@start_page& (0+255),b
  9999  00138E  ECF3  F029         	call	_oled_putString	;wreg free
 10000                           
 10001                           ;MOTEapp.c: 1028: break;
 10002  001392  0012               	return	
 10003  001394                     
 10004                           ;MOTEapp.c: 1030: oled_putString(" 4 ",10,2);
 10005  001394  0ED8               	movlw	low STR_145
 10006  001396  0100               	movlb	0	; () banked
 10007  001398  6F72               	movwf	oled_putString@string& (0+255),b
 10008  00139A  0E7F               	movlw	high STR_145
 10009  00139C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10010  00139E  5172               	movf	oled_putString@string& (0+255),w,b
 10011  0013A0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10012  0013A2  A4D8               	btfss	status,2,c
 10013  0013A4  0E00               	movlw	low (__mediumconst shr (0+16))
 10014  0013A6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10015  0013A8  0E0A               	movlw	10
 10016  0013AA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10017  0013AC  0E02               	movlw	2
 10018  0013AE  6F76               	movwf	oled_putString@start_page& (0+255),b
 10019  0013B0  ECF3  F029         	call	_oled_putString	;wreg free
 10020                           
 10021                           ;MOTEapp.c: 1031: break;
 10022  0013B4  0012               	return	
 10023  0013B6                     
 10024                           ;MOTEapp.c: 1033: oled_putString(" 5 ",10,2);
 10025  0013B6  0EDC               	movlw	low STR_146
 10026  0013B8  0100               	movlb	0	; () banked
 10027  0013BA  6F72               	movwf	oled_putString@string& (0+255),b
 10028  0013BC  0E7F               	movlw	high STR_146
 10029  0013BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10030  0013C0  5172               	movf	oled_putString@string& (0+255),w,b
 10031  0013C2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10032  0013C4  A4D8               	btfss	status,2,c
 10033  0013C6  0E00               	movlw	low (__mediumconst shr (0+16))
 10034  0013C8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10035  0013CA  0E0A               	movlw	10
 10036  0013CC  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10037  0013CE  0E02               	movlw	2
 10038  0013D0  6F76               	movwf	oled_putString@start_page& (0+255),b
 10039  0013D2  ECF3  F029         	call	_oled_putString	;wreg free
 10040                           
 10041                           ;MOTEapp.c: 1034: break;
 10042  0013D6  0012               	return	
 10043  0013D8                     
 10044                           ;MOTEapp.c: 1036: oled_putString("ADR",10,2);
 10045  0013D8  0EF4               	movlw	low STR_147
 10046  0013DA  0100               	movlb	0	; () banked
 10047  0013DC  6F72               	movwf	oled_putString@string& (0+255),b
 10048  0013DE  0E7F               	movlw	high STR_147
 10049  0013E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10050  0013E2  5172               	movf	oled_putString@string& (0+255),w,b
 10051  0013E4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10052  0013E6  A4D8               	btfss	status,2,c
 10053  0013E8  0E00               	movlw	low (__mediumconst shr (0+16))
 10054  0013EA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10055  0013EC  0E0A               	movlw	10
 10056  0013EE  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10057  0013F0  0E02               	movlw	2
 10058  0013F2  6F76               	movwf	oled_putString@start_page& (0+255),b
 10059  0013F4  ECF3  F029         	call	_oled_putString	;wreg free
 10060                           
 10061                           ;MOTEapp.c: 1038: }
 10062                           
 10063                           ;MOTEapp.c: 1037: break;
 10064  0013F8  0012               	return	
 10065  0013FA                     l605:
 10066  0013FA  0100               	movlb	0	; () banked
 10067  0013FC  51FD               	movf	_dataRateValue& (0+255),w,b
 10068                           
 10069                           ; Switch size 1, requested type "space"
 10070                           ; Number of cases is 7, Range of values is 0 to 6
 10071                           ; switch strategies available:
 10072                           ; Name         Instructions Cycles
 10073                           ; simple_byte           22    12 (average)
 10074                           ;	Chosen strategy is simple_byte
 10075  0013FE  0A00               	xorlw	0	; case 0
 10076  001400  B4D8               	btfsc	status,2,c
 10077  001402  D785               	goto	l606
 10078  001404  0A01               	xorlw	1	; case 1
 10079  001406  B4D8               	btfsc	status,2,c
 10080  001408  D792               	goto	l609
 10081  00140A  0A03               	xorlw	3	; case 2
 10082  00140C  B4D8               	btfsc	status,2,c
 10083  00140E  D7A0               	goto	l610
 10084  001410  0A01               	xorlw	1	; case 3
 10085  001412  B4D8               	btfsc	status,2,c
 10086  001414  D7AE               	goto	l611
 10087  001416  0A07               	xorlw	7	; case 4
 10088  001418  B4D8               	btfsc	status,2,c
 10089  00141A  D7BC               	goto	l612
 10090  00141C  0A01               	xorlw	1	; case 5
 10091  00141E  B4D8               	btfsc	status,2,c
 10092  001420  D7CA               	goto	l613
 10093  001422  0A03               	xorlw	3	; case 6
 10094  001424  B4D8               	btfsc	status,2,c
 10095  001426  D7D8               	goto	l614
 10096  001428  D772               	goto	l606
 10097  00142A                     
 10098                           ; BSR set to: 0
 10099                           ;MOTEapp.c: 1042: if (selectButton)
 10100                           
 10101                           ; BSR set to: 0
 10102  00142A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
 10103  00142C  B4D8               	btfsc	status,2,c
 10104  00142E  D00C               	goto	l618
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;MOTEapp.c: 1043: {
 10108                           ;MOTEapp.c: 1044: if( moteApp_GoToSleep() )
 10109  001430  EC29  F020         	call	_moteApp_GoToSleep	;wreg free
 10110  001434  0900               	iorlw	0
 10111  001436  B4D8               	btfsc	status,2,c
 10112  001438  D004               	goto	l617
 10113                           
 10114                           ;MOTEapp.c: 1045: {
 10115                           ;MOTEapp.c: 1046: changeStates = 1;
 10116  00143A  0E01               	movlw	1
 10117  00143C  0100               	movlb	0	; () banked
 10118  00143E  6FB9               	movwf	moteRunningProcess@changeStates& (0+255),b
 10119                           
 10120                           ;MOTEapp.c: 1047: }
 10121  001440  D003               	goto	l618
 10122  001442                     l617:
 10123                           
 10124                           ;MOTEapp.c: 1048: else
 10125                           ;MOTEapp.c: 1049: {
 10126                           ;MOTEapp.c: 1050: secTicker = 10 - 1;
 10127                           
 10128                           ; BSR set to: 0
 10129  001442  0E09               	movlw	9
 10130  001444  0100               	movlb	0	; () banked
 10131  001446  6FF2               	movwf	_secTicker& (0+255),b
 10132  001448                     l618:
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;MOTEapp.c: 1051: }
 10136                           ;MOTEapp.c: 1052: }
 10137                           ;MOTEapp.c: 1053: if (changeStates)
 10138                           
 10139                           ; BSR set to: 0
 10140  001448  51B9               	movf	moteRunningProcess@changeStates& (0+255),w,b
 10141  00144A  B4D8               	btfsc	status,2,c
 10142  00144C  0012               	return	
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;MOTEapp.c: 1054: {
 10146                           ;MOTEapp.c: 1055: oled_clear();
 10147  00144E  EC5E  F031         	call	_oled_clear	;wreg free
 10148                           
 10149                           ;MOTEapp.c: 1056: oled_putString("  Issue Uplink  ",0,0);
 10150  001452  0E22               	movlw	low STR_76
 10151  001454  0100               	movlb	0	; () banked
 10152  001456  6F72               	movwf	oled_putString@string& (0+255),b
 10153  001458  0E7B               	movlw	high STR_76
 10154  00145A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10155  00145C  5172               	movf	oled_putString@string& (0+255),w,b
 10156  00145E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10157  001460  A4D8               	btfss	status,2,c
 10158  001462  0E00               	movlw	low (__mediumconst shr (0+16))
 10159  001464  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10160  001466  0E00               	movlw	0
 10161  001468  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10162  00146A  0E00               	movlw	0
 10163  00146C  6F76               	movwf	oled_putString@start_page& (0+255),b
 10164  00146E  ECF3  F029         	call	_oled_putString	;wreg free
 10165                           
 10166                           ;MOTEapp.c: 1057: oled_putString(" LoRaWAN Packet ",0,1);
 10167  001472  0E88               	movlw	low STR_77
 10168  001474  0100               	movlb	0	; () banked
 10169  001476  6F72               	movwf	oled_putString@string& (0+255),b
 10170  001478  0E7B               	movlw	high STR_77
 10171  00147A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10172  00147C  5172               	movf	oled_putString@string& (0+255),w,b
 10173  00147E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10174  001480  A4D8               	btfss	status,2,c
 10175  001482  0E00               	movlw	low (__mediumconst shr (0+16))
 10176  001484  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10177  001486  0E00               	movlw	0
 10178  001488  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10179  00148A  0E01               	movlw	1
 10180  00148C  6F76               	movwf	oled_putString@start_page& (0+255),b
 10181  00148E  ECF3  F029         	call	_oled_putString	;wreg free
 10182                           
 10183                           ;MOTEapp.c: 1058: oled_putString("(NAV)    (SEL) ",0,3);
 10184  001492  0E84               	movlw	low STR_78
 10185  001494  0100               	movlb	0	; () banked
 10186  001496  6F72               	movwf	oled_putString@string& (0+255),b
 10187  001498  0E7C               	movlw	high STR_78
 10188  00149A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10189  00149C  5172               	movf	oled_putString@string& (0+255),w,b
 10190  00149E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10191  0014A0  A4D8               	btfss	status,2,c
 10192  0014A2  0E00               	movlw	low (__mediumconst shr (0+16))
 10193  0014A4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10194  0014A6  0E00               	movlw	0
 10195  0014A8  6F75               	movwf	oled_putString@station_dot& (0+255),b
 10196  0014AA  0E03               	movlw	3
 10197  0014AC  6F76               	movwf	oled_putString@start_page& (0+255),b
 10198  0014AE  ECF3  F029         	call	_oled_putString	;wreg free
 10199                           
 10200                           ;MOTEapp.c: 1059: runningState = runningUplink;
 10201  0014B2  0E06               	movlw	6
 10202  0014B4  0100               	movlb	0	; () banked
 10203  0014B6  6FF6               	movwf	_runningState& (0+255),b
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;MOTEapp.c: 1062: }
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;MOTEapp.c: 1060: }
 10210                           ;MOTEapp.c: 1061: break;
 10211  0014B8  0012               	return	
 10212  0014BA                     l489:
 10213                           
 10214                           ; BSR set to: 0
 10215                           
 10216                           ; BSR set to: 0
 10217  0014BA  51F6               	movf	_runningState& (0+255),w,b
 10218                           
 10219                           ; Switch size 1, requested type "space"
 10220                           ; Number of cases is 12, Range of values is 0 to 15
 10221                           ; switch strategies available:
 10222                           ; Name         Instructions Cycles
 10223                           ; simple_byte           37    19 (average)
 10224                           ;	Chosen strategy is simple_byte
 10225  0014BC  0A00               	xorlw	0	; case 0
 10226  0014BE  B4D8               	btfsc	status,2,c
 10227  0014C0  EFBE  F001         	goto	l495
 10228  0014C4  0A01               	xorlw	1	; case 1
 10229  0014C6  B4D8               	btfsc	status,2,c
 10230  0014C8  EF1D  F006         	goto	l549
 10231  0014CC  0A03               	xorlw	3	; case 2
 10232  0014CE  B4D8               	btfsc	status,2,c
 10233  0014D0  D54C               	goto	l570
 10234  0014D2  0A01               	xorlw	1	; case 3
 10235  0014D4  B4D8               	btfsc	status,2,c
 10236  0014D6  D6DD               	goto	l598
 10237  0014D8  0A05               	xorlw	5	; case 6
 10238  0014DA  B4D8               	btfsc	status,2,c
 10239  0014DC  EFFB  F001         	goto	l499
 10240  0014E0  0A01               	xorlw	1	; case 7
 10241  0014E2  B4D8               	btfsc	status,2,c
 10242  0014E4  EFDF  F002         	goto	l506
 10243  0014E8  0A0F               	xorlw	15	; case 8
 10244  0014EA  B4D8               	btfsc	status,2,c
 10245  0014EC  EFE2  F003         	goto	l522
 10246  0014F0  0A02               	xorlw	2	; case 10
 10247  0014F2  B4D8               	btfsc	status,2,c
 10248  0014F4  EF3E  F005         	goto	l541
 10249  0014F8  0A01               	xorlw	1	; case 11
 10250  0014FA  B4D8               	btfsc	status,2,c
 10251  0014FC  EFE1  F005         	goto	l545
 10252  001500  0A07               	xorlw	7	; case 12
 10253  001502  B4D8               	btfsc	status,2,c
 10254  001504  D432               	goto	l555
 10255  001506  0A01               	xorlw	1	; case 13
 10256  001508  B4D8               	btfsc	status,2,c
 10257  00150A  D56C               	goto	l574
 10258  00150C  0A02               	xorlw	2	; case 15
 10259  00150E  B4D8               	btfsc	status,2,c
 10260  001510  D78C               	goto	l615
 10261  001512  EFBD  F001         	goto	l490
 10262  001516                     __end_of_moteRunningProcess:
 10263                           	opt stack 0
 10264                           tblptru	equ	0xFF8
 10265                           tblptrh	equ	0xFF7
 10266                           tblptrl	equ	0xFF6
 10267                           tablat	equ	0xFF5
 10268                           prodh	equ	0xFF4
 10269                           prodl	equ	0xFF3
 10270                           intcon	equ	0xFF2
 10271                           postinc0	equ	0xFEE
 10272                           wreg	equ	0xFE8
 10273                           indf1	equ	0xFE7
 10274                           postdec1	equ	0xFE5
 10275                           fsr1h	equ	0xFE2
 10276                           fsr1l	equ	0xFE1
 10277                           indf2	equ	0xFDF
 10278                           fsr2h	equ	0xFDA
 10279                           fsr2l	equ	0xFD9
 10280                           status	equ	0xFD8
 10281                           
 10282 ;; *************** function _sendDataCommand *****************
 10283 ;; Defined at:
 10284 ;;		line 1231 in file "../Includes/Board/MOTEapp.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 10287 ;;		 -> STR_88(12), STR_87(12), STR_86(14), STR_85(14), 
 10288 ;;		 -> STR_75(14), STR_74(14), 
 10289 ;;  appData         2    3[BANK0 ] PTR unsigned char 
 10290 ;;		 -> dataBuffer(100), 
 10291 ;;  dataLength      1    5[BANK0 ] unsigned char 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  byteCount       1    8[BANK0 ] unsigned char 
 10294 ;;  byteCount       1    7[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10304 ;;      Params:         0       5       0       0       0       0       0       0       0
 10305 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10306 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10307 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10308 ;;Total ram usage:        8 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:   13
 10311 ;; This function calls:
 10312 ;;		_EUSART_Write
 10313 ;;		_EndLine
 10314 ;;		_hexToStr
 10315 ;; This function is called by:
 10316 ;;		_moteRunningProcess
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text11
 10321  004522                     __ptext11:
 10322                           	opt stack 0
 10323  004522                     _sendDataCommand:
 10324                           	opt stack 15
 10325                           
 10326                           ;MOTEapp.c: 1234: while (*string)
 10327                           
 10328                           ;incstack = 0
 10329  004522  D00C               	goto	l686
 10330  004524                     
 10331                           ;MOTEapp.c: 1235: {
 10332                           ;MOTEapp.c: 1236: EUSART_Write(*string++);
 10333  004524  C061  FFF6         	movff	sendDataCommand@string,tblptrl
 10334  004528  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
 10335  00452C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10336  00452C  6AF8               	clrf	tblptru,c
 10337  00452E                     	endif
 10338  00452E                     	if	0	;tblptru may be non-zero
 10339  00452E                     	endif
 10340  00452E  0008               	tblrd		*
 10341  004530  50F5               	movf	tablat,w,c
 10342  004532  EC50  F02E         	call	_EUSART_Write
 10343  004536  0100               	movlb	0	; () banked
 10344  004538  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
 10345  00453A  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
 10346  00453C                     l686:
 10347                           
 10348                           ; BSR set to: 0
 10349  00453C  C061  FFF6         	movff	sendDataCommand@string,tblptrl
 10350  004540  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
 10351  004544                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10352  004544  6AF8               	clrf	tblptru,c
 10353  004546                     	endif
 10354  004546                     	if	0	;tblptru may be non-zero
 10355  004546                     	endif
 10356  004546  0008               	tblrd		*
 10357  004548  50F5               	movf	tablat,w,c
 10358  00454A  0900               	iorlw	0
 10359  00454C  A4D8               	btfss	status,2,c
 10360  00454E  D7EA               	goto	l687
 10361                           
 10362                           ;MOTEapp.c: 1237: }
 10363                           ;MOTEapp.c: 1239: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
 10364  004550  0E00               	movlw	0
 10365  004552  0100               	movlb	0	; () banked
 10366  004554  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
 10367  004556                     l10019:
 10368                           
 10369                           ; BSR set to: 0
 10370  004556  0E02               	movlw	2
 10371  004558  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
 10372  00455A  D001               	goto	l689
 10373  00455C  D00E               	goto	u8570
 10374  00455E                     l689:
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;MOTEapp.c: 1240: {
 10378                           ;MOTEapp.c: 1241: EUSART_Write(appData[byteCount]);
 10379                           
 10380                           ; BSR set to: 0
 10381  00455E  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
 10382  004560  0D01               	mullw	1
 10383  004562  50F3               	movf	prodl,w,c
 10384  004564  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10385  004566  6ED9               	movwf	fsr2l,c
 10386  004568  50F4               	movf	prodh,w,c
 10387  00456A  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10388  00456C  6EDA               	movwf	fsr2h,c
 10389  00456E  50DF               	movf	indf2,w,c
 10390  004570  EC50  F02E         	call	_EUSART_Write
 10391  004574  0100               	movlb	0	; () banked
 10392  004576  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
 10393  004578  D7EE               	goto	l10019
 10394  00457A                     u8570:
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;MOTEapp.c: 1242: }
 10398                           ;MOTEapp.c: 1244: EUSART_Write(appData[3]);
 10399                           
 10400                           ; BSR set to: 0
 10401  00457A  EE20 F003          	lfsr	2,3
 10402  00457E  5163               	movf	sendDataCommand@appData& (0+255),w,b
 10403  004580  26D9               	addwf	fsr2l,f,c
 10404  004582  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
 10405  004584  22DA               	addwfc	fsr2h,f,c
 10406  004586  50DF               	movf	indf2,w,c
 10407  004588  EC50  F02E         	call	_EUSART_Write
 10408                           
 10409                           ;MOTEapp.c: 1246: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
 10410  00458C  0E04               	movlw	4
 10411  00458E  0100               	movlb	0	; () banked
 10412  004590  6F68               	movwf	sendDataCommand@byteCount_1666& (0+255),b
 10413  004592  D021               	goto	l691
 10414  004594                     
 10415                           ; BSR set to: 0
 10416                           ;MOTEapp.c: 1247: {
 10417                           ;MOTEapp.c: 1248: EUSART_Write(hexToStr(appData[byteCount] >> 4));
 10418                           
 10419                           ; BSR set to: 0
 10420  004594  5168               	movf	sendDataCommand@byteCount_1666& (0+255),w,b
 10421  004596  0D01               	mullw	1
 10422  004598  50F3               	movf	prodl,w,c
 10423  00459A  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10424  00459C  6ED9               	movwf	fsr2l,c
 10425  00459E  50F4               	movf	prodh,w,c
 10426  0045A0  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10427  0045A2  6EDA               	movwf	fsr2h,c
 10428  0045A4  50DF               	movf	indf2,w,c
 10429  0045A6  6F66               	movwf	??_sendDataCommand& (0+255),b
 10430  0045A8  3966               	swapf	??_sendDataCommand& (0+255),w,b
 10431  0045AA  0B0F               	andlw	15
 10432  0045AC  EC32  F030         	call	_hexToStr
 10433  0045B0  EC50  F02E         	call	_EUSART_Write
 10434                           
 10435                           ;MOTEapp.c: 1249: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
 10436  0045B4  0100               	movlb	0	; () banked
 10437  0045B6  5168               	movf	sendDataCommand@byteCount_1666& (0+255),w,b
 10438  0045B8  0D01               	mullw	1
 10439  0045BA  50F3               	movf	prodl,w,c
 10440  0045BC  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10441  0045BE  6ED9               	movwf	fsr2l,c
 10442  0045C0  50F4               	movf	prodh,w,c
 10443  0045C2  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10444  0045C4  6EDA               	movwf	fsr2h,c
 10445  0045C6  50DF               	movf	indf2,w,c
 10446  0045C8  0B0F               	andlw	15
 10447  0045CA  EC32  F030         	call	_hexToStr
 10448  0045CE  EC50  F02E         	call	_EUSART_Write
 10449  0045D2  0100               	movlb	0	; () banked
 10450  0045D4  2B68               	incf	sendDataCommand@byteCount_1666& (0+255),f,b
 10451  0045D6                     l691:
 10452                           
 10453                           ; BSR set to: 0
 10454                           
 10455                           ; BSR set to: 0
 10456  0045D6  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
 10457  0045D8  5D68               	subwf	sendDataCommand@byteCount_1666& (0+255),w,b
 10458  0045DA  A0D8               	btfss	status,0,c
 10459  0045DC  D7DB               	goto	l692
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;MOTEapp.c: 1250: }
 10463                           ;MOTEapp.c: 1251: EndLine();
 10464                           
 10465                           ; BSR set to: 0
 10466  0045DE  ECFE  F031         	call	_EndLine	;wreg free
 10467  0045E2  0012               	return		;funcret
 10468  0045E4                     __end_of_sendDataCommand:
 10469                           	opt stack 0
 10470                           tblptru	equ	0xFF8
 10471                           tblptrh	equ	0xFF7
 10472                           tblptrl	equ	0xFF6
 10473                           tablat	equ	0xFF5
 10474                           prodh	equ	0xFF4
 10475                           prodl	equ	0xFF3
 10476                           intcon	equ	0xFF2
 10477                           postinc0	equ	0xFEE
 10478                           wreg	equ	0xFE8
 10479                           indf1	equ	0xFE7
 10480                           postdec1	equ	0xFE5
 10481                           fsr1h	equ	0xFE2
 10482                           fsr1l	equ	0xFE1
 10483                           indf2	equ	0xFDF
 10484                           fsr2h	equ	0xFDA
 10485                           fsr2l	equ	0xFD9
 10486                           status	equ	0xFD8
 10487                           
 10488 ;; *************** function _hexToStr *****************
 10489 ;; Defined at:
 10490 ;;		line 1263 in file "../Includes/Board/MOTEapp.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  character       1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  character       1    0[BANK0 ] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      unsigned char 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0
 10505 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10507 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10508 ;;Total ram usage:        1 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:   11
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_sendDataCommand
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text12
 10519  006064                     __ptext12:
 10520                           	opt stack 0
 10521  006064                     _hexToStr:
 10522                           	opt stack 16
 10523                           
 10524                           ;incstack = 0
 10525                           ;hexToStr@character stored from wreg
 10526  006064  0100               	movlb	0	; () banked
 10527  006066  6F60               	movwf	hexToStr@character& (0+255),b
 10528                           
 10529                           ;MOTEapp.c: 1266: character = character & 0x0F;
 10530  006068  0100               	movlb	0	; () banked
 10531  00606A  5160               	movf	hexToStr@character& (0+255),w,b
 10532  00606C  0B0F               	andlw	15
 10533  00606E  6F60               	movwf	hexToStr@character& (0+255),b
 10534                           
 10535                           ;MOTEapp.c: 1268: if (character < 0x0A)
 10536  006070  0E0A               	movlw	10
 10537  006072  6160               	cpfslt	hexToStr@character& (0+255),b
 10538  006074  D003               	goto	l702
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;MOTEapp.c: 1269: {
 10542                           ;MOTEapp.c: 1270: return character + '0';
 10543  006076  5160               	movf	hexToStr@character& (0+255),w,b
 10544  006078  0F30               	addlw	48
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;MOTEapp.c: 1271: }
 10548                           
 10549                           ; BSR set to: 0
 10550  00607A  0012               	return	
 10551  00607C                     l702:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;MOTEapp.c: 1272: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10555                           
 10556                           ; BSR set to: 0
 10557  00607C  0E09               	movlw	9
 10558  00607E  6560               	cpfsgt	hexToStr@character& (0+255),b
 10559  006080  D006               	goto	l705
 10560                           
 10561                           ; BSR set to: 0
 10562  006082  0E10               	movlw	16
 10563  006084  6160               	cpfslt	hexToStr@character& (0+255),b
 10564  006086  D003               	goto	l705
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;MOTEapp.c: 1273: {
 10568                           ;MOTEapp.c: 1274: return character + '0' + 7;
 10569  006088  5160               	movf	hexToStr@character& (0+255),w,b
 10570  00608A  0F37               	addlw	55
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;MOTEapp.c: 1275: }
 10574                           
 10575                           ; BSR set to: 0
 10576  00608C  0012               	return	
 10577  00608E                     l705:
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;MOTEapp.c: 1276: else
 10581                           ;MOTEapp.c: 1277: {
 10582                           ;MOTEapp.c: 1278: return 0;
 10583                           
 10584                           ; BSR set to: 0
 10585  00608E  0E00               	movlw	0
 10586                           
 10587                           ; BSR set to: 0
 10588                           
 10589                           ; BSR set to: 0
 10590  006090  0012               	return	
 10591  006092                     __end_of_hexToStr:
 10592                           	opt stack 0
 10593                           tblptru	equ	0xFF8
 10594                           tblptrh	equ	0xFF7
 10595                           tblptrl	equ	0xFF6
 10596                           tablat	equ	0xFF5
 10597                           prodh	equ	0xFF4
 10598                           prodl	equ	0xFF3
 10599                           intcon	equ	0xFF2
 10600                           postinc0	equ	0xFEE
 10601                           wreg	equ	0xFE8
 10602                           indf1	equ	0xFE7
 10603                           postdec1	equ	0xFE5
 10604                           fsr1h	equ	0xFE2
 10605                           fsr1l	equ	0xFE1
 10606                           indf2	equ	0xFDF
 10607                           fsr2h	equ	0xFDA
 10608                           fsr2l	equ	0xFD9
 10609                           status	equ	0xFD8
 10610                           
 10611 ;; *************** function _oled_putUint8 *****************
 10612 ;; Defined at:
 10613 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  number          1    wreg     unsigned char 
 10616 ;;  station_dot     1   24[BANK0 ] unsigned char 
 10617 ;;  start_page      1   25[BANK0 ] unsigned char 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;  number          1   26[BANK0 ] unsigned char 
 10620 ;;  numData         6   27[BANK0 ] struct .
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      void 
 10623 ;; Registers used:
 10624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10630 ;;      Params:         0       2       0       0       0       0       0       0       0
 10631 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10633 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10634 ;;Total ram usage:        9 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:   15
 10637 ;; This function calls:
 10638 ;;		___awmod
 10639 ;;		___lbdiv
 10640 ;;		_oled_putString
 10641 ;; This function is called by:
 10642 ;;		_moteRunningProcess
 10643 ;;		_test_adc
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text13
 10648  004D96                     __ptext13:
 10649                           	opt stack 0
 10650  004D96                     _oled_putUint8:
 10651                           	opt stack 13
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;incstack = 0
 10655                           ;oled_putUint8@number stored from wreg
 10656  004D96  0100               	movlb	0	; () banked
 10657  004D98  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10658                           
 10659                           ;SSD1306oLED.c: 266: display_data_t numData;
 10660                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10661  004D9A  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10662  004D9E  0100               	movlb	0	; () banked
 10663  004DA0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10664  004DA2  0E00               	movlw	0
 10665  004DA4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10666  004DA6  0E0A               	movlw	10
 10667  004DA8  6F62               	movwf	___awmod@divisor& (0+255),b
 10668  004DAA  EC9F  F02A         	call	___awmod	;wreg free
 10669  004DAE  0100               	movlb	0	; () banked
 10670  004DB0  5160               	movf	?___awmod& (0+255),w,b
 10671  004DB2  0F30               	addlw	48
 10672  004DB4  6F7D               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10673                           
 10674                           ;SSD1306oLED.c: 268: number /= 10;
 10675  004DB6  0E0A               	movlw	10
 10676  004DB8  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10677  004DBA  517A               	movf	oled_putUint8@number& (0+255),w,b
 10678  004DBC  EC31  F02E         	call	___lbdiv
 10679  004DC0  0100               	movlb	0	; () banked
 10680  004DC2  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10681                           
 10682                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10683  004DC4  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10684  004DC8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10685  004DCA  0E00               	movlw	0
 10686  004DCC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10687  004DCE  0E0A               	movlw	10
 10688  004DD0  6F62               	movwf	___awmod@divisor& (0+255),b
 10689  004DD2  EC9F  F02A         	call	___awmod	;wreg free
 10690  004DD6  0100               	movlb	0	; () banked
 10691  004DD8  5160               	movf	?___awmod& (0+255),w,b
 10692  004DDA  0F30               	addlw	48
 10693  004DDC  6F7C               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10694                           
 10695                           ;SSD1306oLED.c: 270: number /= 10;
 10696  004DDE  0E0A               	movlw	10
 10697  004DE0  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10698  004DE2  517A               	movf	oled_putUint8@number& (0+255),w,b
 10699  004DE4  EC31  F02E         	call	___lbdiv
 10700  004DE8  0100               	movlb	0	; () banked
 10701  004DEA  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10702                           
 10703                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10704  004DEC  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10705  004DF0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10706  004DF2  0E00               	movlw	0
 10707  004DF4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10708  004DF6  0E0A               	movlw	10
 10709  004DF8  6F62               	movwf	___awmod@divisor& (0+255),b
 10710  004DFA  EC9F  F02A         	call	___awmod	;wreg free
 10711  004DFE  0100               	movlb	0	; () banked
 10712  004E00  5160               	movf	?___awmod& (0+255),w,b
 10713  004E02  0F30               	addlw	48
 10714  004E04  6F7B               	movwf	oled_putUint8@numData& (0+255),b
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10718  004E06  0E00               	movlw	0
 10719  004E08  6F7E               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10723  004E0A  0E7B               	movlw	low oled_putUint8@numData
 10724  004E0C  6F72               	movwf	oled_putString@string& (0+255),b
 10725  004E0E  0E00               	movlw	high oled_putUint8@numData
 10726  004E10  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10727  004E12  5172               	movf	oled_putString@string& (0+255),w,b
 10728  004E14  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10729  004E16  A4D8               	btfss	status,2,c
 10730  004E18  0E20               	movlw	32
 10731  004E1A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10732  004E1C  C078  F075         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10733  004E20  C079  F076         	movff	oled_putUint8@start_page,oled_putString@start_page
 10734  004E24  ECF3  F029         	call	_oled_putString	;wreg free
 10735  004E28  0012               	return		;funcret
 10736  004E2A                     __end_of_oled_putUint8:
 10737                           	opt stack 0
 10738                           tblptru	equ	0xFF8
 10739                           tblptrh	equ	0xFF7
 10740                           tblptrl	equ	0xFF6
 10741                           tablat	equ	0xFF5
 10742                           prodh	equ	0xFF4
 10743                           prodl	equ	0xFF3
 10744                           intcon	equ	0xFF2
 10745                           postinc0	equ	0xFEE
 10746                           wreg	equ	0xFE8
 10747                           indf1	equ	0xFE7
 10748                           postdec1	equ	0xFE5
 10749                           fsr1h	equ	0xFE2
 10750                           fsr1l	equ	0xFE1
 10751                           indf2	equ	0xFDF
 10752                           fsr2h	equ	0xFDA
 10753                           fsr2l	equ	0xFD9
 10754                           status	equ	0xFD8
 10755                           
 10756 ;; *************** function _moteApp_setSensorsInput *****************
 10757 ;; Defined at:
 10758 ;;		line 1494 in file "../Includes/Board/MOTEapp.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0
 10773 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10775 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10776 ;;Total ram usage:        2 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:   14
 10779 ;; This function calls:
 10780 ;;		_MOTEapp_getModuleResponse
 10781 ;;		_moteApp_delayms
 10782 ;;		_sendCommand
 10783 ;; This function is called by:
 10784 ;;		_moteRunningProcess
 10785 ;;		_moteApp_testSensors
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text14
 10790  00536E                     __ptext14:
 10791                           	opt stack 0
 10792  00536E                     _moteApp_setSensorsInput:
 10793                           	opt stack 14
 10794                           
 10795                           ;MOTEapp.c: 1496: uint16_t escapeCounter = 0;
 10796                           
 10797                           ;incstack = 0
 10798  00536E  0E00               	movlw	0
 10799  005370  0100               	movlb	0	; () banked
 10800  005372  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10801  005374  0E00               	movlw	0
 10802  005376  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;MOTEapp.c: 1497: sendCommand("sys set pinmode GPIO13 ana");
 10806  005378  0ED4               	movlw	low STR_186
 10807  00537A  6F61               	movwf	sendCommand@string& (0+255),b
 10808  00537C  0E79               	movlw	high STR_186
 10809  00537E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10810  005380  EC3B  F02F         	call	_sendCommand	;wreg free
 10811                           
 10812                           ;MOTEapp.c: 1498: while ( !MOTEapp_getModuleResponse() )
 10813  005384  D009               	goto	l765
 10814  005386                     
 10815                           ;MOTEapp.c: 1499: {
 10816                           ;MOTEapp.c: 1500: if (++escapeCounter > 50000)
 10817  005386  0100               	movlb	0	; () banked
 10818  005388  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10819  00538A  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10820  00538C  0E51               	movlw	81
 10821  00538E  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10822  005390  0EC3               	movlw	195
 10823  005392  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10824  005394  B0D8               	btfsc	status,0,c
 10825  005396  D005               	goto	u8490
 10826  005398                     l765:
 10827                           
 10828                           ; BSR set to: 0
 10829                           
 10830                           ; BSR set to: 0
 10831  005398  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
 10832  00539C  0900               	iorlw	0
 10833  00539E  B4D8               	btfsc	status,2,c
 10834  0053A0  D7F2               	goto	l764
 10835  0053A2                     u8490:
 10836                           
 10837                           ;MOTEapp.c: 1502: }
 10838                           ;MOTEapp.c: 1503: escapeCounter = 0;
 10839  0053A2  0E00               	movlw	0
 10840  0053A4  0100               	movlb	0	; () banked
 10841  0053A6  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10842  0053A8  0E00               	movlw	0
 10843  0053AA  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;MOTEapp.c: 1504: sendCommand("sys set pinmode GPIO12 ana");
 10847  0053AC  0EB9               	movlw	low STR_187
 10848  0053AE  6F61               	movwf	sendCommand@string& (0+255),b
 10849  0053B0  0E79               	movlw	high STR_187
 10850  0053B2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10851  0053B4  EC3B  F02F         	call	_sendCommand	;wreg free
 10852                           
 10853                           ;MOTEapp.c: 1505: while ( !MOTEapp_getModuleResponse() )
 10854  0053B8  D009               	goto	l769
 10855  0053BA                     
 10856                           ;MOTEapp.c: 1506: {
 10857                           ;MOTEapp.c: 1507: if (++escapeCounter > 50000)
 10858  0053BA  0100               	movlb	0	; () banked
 10859  0053BC  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10860  0053BE  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10861  0053C0  0E51               	movlw	81
 10862  0053C2  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10863  0053C4  0EC3               	movlw	195
 10864  0053C6  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10865  0053C8  B0D8               	btfsc	status,0,c
 10866  0053CA  D005               	goto	u8510
 10867  0053CC                     l769:
 10868                           
 10869                           ; BSR set to: 0
 10870                           
 10871                           ; BSR set to: 0
 10872  0053CC  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
 10873  0053D0  0900               	iorlw	0
 10874  0053D2  B4D8               	btfsc	status,2,c
 10875  0053D4  D7F2               	goto	l768
 10876  0053D6                     u8510:
 10877                           
 10878                           ;MOTEapp.c: 1509: }
 10879                           ;MOTEapp.c: 1510: moteApp_delayms(100);
 10880  0053D6  0E00               	movlw	0
 10881  0053D8  0100               	movlb	0	; () banked
 10882  0053DA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10883  0053DC  0E64               	movlw	100
 10884  0053DE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10885  0053E0  EC88  F02F         	call	_moteApp_delayms	;wreg free
 10886  0053E4  0012               	return		;funcret
 10887  0053E6                     __end_of_moteApp_setSensorsInput:
 10888                           	opt stack 0
 10889                           tblptru	equ	0xFF8
 10890                           tblptrh	equ	0xFF7
 10891                           tblptrl	equ	0xFF6
 10892                           tablat	equ	0xFF5
 10893                           prodh	equ	0xFF4
 10894                           prodl	equ	0xFF3
 10895                           intcon	equ	0xFF2
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           indf1	equ	0xFE7
 10899                           postdec1	equ	0xFE5
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           fsr2h	equ	0xFDA
 10904                           fsr2l	equ	0xFD9
 10905                           status	equ	0xFD8
 10906                           
 10907 ;; *************** function _moteApp_lightStringSize *****************
 10908 ;; Defined at:
 10909 ;;		line 1559 in file "../Includes/Board/MOTEapp.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      unsigned char 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10927 ;;Total ram usage:        0 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:   11
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_moteRunningProcess
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text15
 10938  006498                     __ptext15:
 10939                           	opt stack 0
 10940  006498                     _moteApp_lightStringSize:
 10941                           	opt stack 17
 10942                           
 10943                           ;MOTEapp.c: 1561: return lightStringSize;
 10944                           
 10945                           ;incstack = 0
 10946  006498  5050               	movf	_lightStringSize,w,c
 10947  00649A  0012               	return	
 10948  00649C                     __end_of_moteApp_lightStringSize:
 10949                           	opt stack 0
 10950                           tblptru	equ	0xFF8
 10951                           tblptrh	equ	0xFF7
 10952                           tblptrl	equ	0xFF6
 10953                           tablat	equ	0xFF5
 10954                           prodh	equ	0xFF4
 10955                           prodl	equ	0xFF3
 10956                           intcon	equ	0xFF2
 10957                           postinc0	equ	0xFEE
 10958                           wreg	equ	0xFE8
 10959                           indf1	equ	0xFE7
 10960                           postdec1	equ	0xFE5
 10961                           fsr1h	equ	0xFE2
 10962                           fsr1l	equ	0xFE1
 10963                           indf2	equ	0xFDF
 10964                           fsr2h	equ	0xFDA
 10965                           fsr2l	equ	0xFD9
 10966                           status	equ	0xFD8
 10967                           
 10968 ;; *************** function _moteApp_getTempValue *****************
 10969 ;; Defined at:
 10970 ;;		line 1512 in file "../Includes/Board/MOTEapp.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;		None
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  2    3[BANK0 ] PTR unsigned char 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10984 ;;      Params:         0       2       0       0       0       0       0       0       0
 10985 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10987 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10988 ;;Total ram usage:        4 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:   14
 10991 ;; This function calls:
 10992 ;;		_MOTEapp_getModuleResponse
 10993 ;;		_sendCommand
 10994 ;; This function is called by:
 10995 ;;		_moteHandler
 10996 ;;		_moteRunningProcess
 10997 ;;		_moteApp_testSensors
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text16
 11002  005C22                     __ptext16:
 11003                           	opt stack 0
 11004  005C22                     _moteApp_getTempValue:
 11005                           	opt stack 14
 11006                           
 11007                           ;MOTEapp.c: 1514: uint16_t escapeCounter = 0;
 11008                           
 11009                           ;incstack = 0
 11010  005C22  0E00               	movlw	0
 11011  005C24  0100               	movlb	0	; () banked
 11012  005C26  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 11013  005C28  0E00               	movlw	0
 11014  005C2A  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;MOTEapp.c: 1516: sendCommand("sys get pinana GPIO12");
 11018  005C2C  0E57               	movlw	low STR_188
 11019  005C2E  6F61               	movwf	sendCommand@string& (0+255),b
 11020  005C30  0E7A               	movlw	high STR_188
 11021  005C32  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11022  005C34  EC3B  F02F         	call	_sendCommand	;wreg free
 11023                           
 11024                           ;MOTEapp.c: 1517: while ( !MOTEapp_getModuleResponse() )
 11025  005C38  D009               	goto	l776
 11026  005C3A                     
 11027                           ;MOTEapp.c: 1518: {
 11028                           ;MOTEapp.c: 1519: if (++escapeCounter > 50000)
 11029  005C3A  0100               	movlb	0	; () banked
 11030  005C3C  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 11031  005C3E  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 11032  005C40  0E51               	movlw	81
 11033  005C42  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 11034  005C44  0EC3               	movlw	195
 11035  005C46  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 11036  005C48  B0D8               	btfsc	status,0,c
 11037  005C4A  D005               	goto	u8280
 11038  005C4C                     l776:
 11039                           
 11040                           ; BSR set to: 0
 11041                           
 11042                           ; BSR set to: 0
 11043  005C4C  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
 11044  005C50  0900               	iorlw	0
 11045  005C52  B4D8               	btfsc	status,2,c
 11046  005C54  D7F2               	goto	l775
 11047  005C56                     u8280:
 11048                           
 11049                           ;MOTEapp.c: 1521: }
 11050                           ;MOTEapp.c: 1523: return &moduleResonseBuffer;
 11051  005C56  0E90               	movlw	low _moduleResonseBuffer
 11052  005C58  0100               	movlb	0	; () banked
 11053  005C5A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 11054  005C5C  0E01               	movlw	high _moduleResonseBuffer
 11055  005C5E  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 11056  005C60  0012               	return	
 11057  005C62                     __end_of_moteApp_getTempValue:
 11058                           	opt stack 0
 11059                           tblptru	equ	0xFF8
 11060                           tblptrh	equ	0xFF7
 11061                           tblptrl	equ	0xFF6
 11062                           tablat	equ	0xFF5
 11063                           prodh	equ	0xFF4
 11064                           prodl	equ	0xFF3
 11065                           intcon	equ	0xFF2
 11066                           postinc0	equ	0xFEE
 11067                           wreg	equ	0xFE8
 11068                           indf1	equ	0xFE7
 11069                           postdec1	equ	0xFE5
 11070                           fsr1h	equ	0xFE2
 11071                           fsr1l	equ	0xFE1
 11072                           indf2	equ	0xFDF
 11073                           fsr2h	equ	0xFDA
 11074                           fsr2l	equ	0xFD9
 11075                           status	equ	0xFD8
 11076                           
 11077 ;; *************** function _moteApp_getLightValue *****************
 11078 ;; Defined at:
 11079 ;;		line 1526 in file "../Includes/Board/MOTEapp.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;		None
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  2   14[BANK0 ] PTR unsigned char 
 11086 ;; Registers used:
 11087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11093 ;;      Params:         0       2       0       0       0       0       0       0       0
 11094 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11096 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11097 ;;Total ram usage:        4 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:   14
 11100 ;; This function calls:
 11101 ;;		_MOTEapp_getModuleResponse
 11102 ;;		_moteApp_setLightString
 11103 ;;		_sendCommand
 11104 ;; This function is called by:
 11105 ;;		_moteHandler
 11106 ;;		_moteRunningProcess
 11107 ;;		_moteApp_testSensors
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           	psect	text17
 11112  005A28                     __ptext17:
 11113                           	opt stack 0
 11114  005A28                     _moteApp_getLightValue:
 11115                           	opt stack 14
 11116                           
 11117                           ;MOTEapp.c: 1528: uint16_t escapeCounter = 0;
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;incstack = 0
 11121  005A28  0E00               	movlw	0
 11122  005A2A  0100               	movlb	0	; () banked
 11123  005A2C  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 11124  005A2E  0E00               	movlw	0
 11125  005A30  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;MOTEapp.c: 1530: sendCommand("sys get pinana GPIO13");
 11129  005A32  0E6D               	movlw	low STR_189
 11130  005A34  6F61               	movwf	sendCommand@string& (0+255),b
 11131  005A36  0E7A               	movlw	high STR_189
 11132  005A38  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 11133  005A3A  EC3B  F02F         	call	_sendCommand	;wreg free
 11134                           
 11135                           ;MOTEapp.c: 1531: while ( !MOTEapp_getModuleResponse() )
 11136  005A3E  D009               	goto	l783
 11137  005A40                     
 11138                           ;MOTEapp.c: 1532: {
 11139                           ;MOTEapp.c: 1533: if (++escapeCounter > 50000)
 11140  005A40  0100               	movlb	0	; () banked
 11141  005A42  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 11142  005A44  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 11143  005A46  0E51               	movlw	81
 11144  005A48  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 11145  005A4A  0EC3               	movlw	195
 11146  005A4C  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 11147  005A4E  B0D8               	btfsc	status,0,c
 11148  005A50  D005               	goto	u8260
 11149  005A52                     l783:
 11150                           
 11151                           ; BSR set to: 0
 11152                           
 11153                           ; BSR set to: 0
 11154  005A52  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
 11155  005A56  0900               	iorlw	0
 11156  005A58  B4D8               	btfsc	status,2,c
 11157  005A5A  D7F2               	goto	l782
 11158  005A5C                     u8260:
 11159                           
 11160                           ;MOTEapp.c: 1535: }
 11161                           ;MOTEapp.c: 1536: moteApp_setLightString(moduleResonseBuffer);
 11162  005A5C  0E90               	movlw	low _moduleResonseBuffer
 11163  005A5E  0100               	movlb	0	; () banked
 11164  005A60  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 11165  005A62  0E01               	movlw	high _moduleResonseBuffer
 11166  005A64  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 11167  005A66  EC0D  F02B         	call	_moteApp_setLightString	;wreg free
 11168                           
 11169                           ;MOTEapp.c: 1537: return &moduleResonseBuffer;
 11170  005A6A  0E90               	movlw	low _moduleResonseBuffer
 11171  005A6C  0100               	movlb	0	; () banked
 11172  005A6E  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 11173  005A70  0E01               	movlw	high _moduleResonseBuffer
 11174  005A72  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 11175  005A74  0012               	return	
 11176  005A76                     __end_of_moteApp_getLightValue:
 11177                           	opt stack 0
 11178                           tblptru	equ	0xFF8
 11179                           tblptrh	equ	0xFF7
 11180                           tblptrl	equ	0xFF6
 11181                           tablat	equ	0xFF5
 11182                           prodh	equ	0xFF4
 11183                           prodl	equ	0xFF3
 11184                           intcon	equ	0xFF2
 11185                           postinc0	equ	0xFEE
 11186                           wreg	equ	0xFE8
 11187                           indf1	equ	0xFE7
 11188                           postdec1	equ	0xFE5
 11189                           fsr1h	equ	0xFE2
 11190                           fsr1l	equ	0xFE1
 11191                           indf2	equ	0xFDF
 11192                           fsr2h	equ	0xFDA
 11193                           fsr2l	equ	0xFD9
 11194                           status	equ	0xFD8
 11195                           
 11196 ;; *************** function _moteApp_setLightString *****************
 11197 ;; Defined at:
 11198 ;;		line 1544 in file "../Includes/Board/MOTEapp.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 11201 ;;		 -> moduleResonseBuffer(64), 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  stingPos        1   13[BANK0 ] unsigned char 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11213 ;;      Params:         0       2       0       0       0       0       0       0       0
 11214 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11215 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11216 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11217 ;;Total ram usage:        3 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:   12
 11220 ;; This function calls:
 11221 ;;		_memcpy
 11222 ;; This function is called by:
 11223 ;;		_moteApp_getLightValue
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text18
 11228  00561A                     __ptext18:
 11229                           	opt stack 0
 11230  00561A                     _moteApp_setLightString:
 11231                           	opt stack 15
 11232                           
 11233                           ;MOTEapp.c: 1546: memcpy(storedLight, clearLight, sizeof(storedLight));
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;incstack = 0
 11237  00561A  0EEE               	movlw	low _storedLight
 11238  00561C  0100               	movlb	0	; () banked
 11239  00561E  6F60               	movwf	memcpy@d1& (0+255),b
 11240  005620  0E01               	movlw	high _storedLight
 11241  005622  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11242  005624  0EE9               	movlw	low _clearLight
 11243  005626  6F62               	movwf	memcpy@s1& (0+255),b
 11244  005628  0E01               	movlw	high _clearLight
 11245  00562A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11246  00562C  0E00               	movlw	0
 11247  00562E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11248  005630  0E05               	movlw	5
 11249  005632  6F64               	movwf	memcpy@n& (0+255),b
 11250  005634  EC89  F02D         	call	_memcpy	;wreg free
 11251                           
 11252                           ;MOTEapp.c: 1547: memcpy(storedLight, lightString, sizeof(storedLight));
 11253  005638  0EEE               	movlw	low _storedLight
 11254  00563A  0100               	movlb	0	; () banked
 11255  00563C  6F60               	movwf	memcpy@d1& (0+255),b
 11256  00563E  0E01               	movlw	high _storedLight
 11257  005640  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11258  005642  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 11259  005646  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 11260  00564A  0E00               	movlw	0
 11261  00564C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11262  00564E  0E05               	movlw	5
 11263  005650  6F64               	movwf	memcpy@n& (0+255),b
 11264  005652  EC89  F02D         	call	_memcpy	;wreg free
 11265                           
 11266                           ;MOTEapp.c: 1549: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 11267  005656  0E00               	movlw	0
 11268  005658  0100               	movlb	0	; () banked
 11269  00565A  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 11270  00565C                     l8881:
 11271                           
 11272                           ; BSR set to: 0
 11273  00565C  0E04               	movlw	4
 11274  00565E  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11275  005660  D001               	goto	l794
 11276  005662  D00E               	goto	u6890
 11277  005664                     l794:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;MOTEapp.c: 1550: {
 11281                           ;MOTEapp.c: 1551: if (storedLight[stingPos] == 0x00)
 11282                           
 11283                           ; BSR set to: 0
 11284  005664  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 11285  005666  0D01               	mullw	1
 11286  005668  0EEE               	movlw	low _storedLight
 11287  00566A  24F3               	addwf	prodl,w,c
 11288  00566C  6ED9               	movwf	fsr2l,c
 11289  00566E  0E01               	movlw	high _storedLight
 11290  005670  20F4               	addwfc	prodh,w,c
 11291  005672  6EDA               	movwf	fsr2h,c
 11292  005674  50DF               	movf	indf2,w,c
 11293  005676  B4D8               	btfsc	status,2,c
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;MOTEapp.c: 1552: {
 11297                           ;MOTEapp.c: 1553: lightStringSize = stingPos;
 11298  005678  C06D  F050         	movff	moteApp_setLightString@stingPos,_lightStringSize
 11299                           
 11300                           ; BSR set to: 0
 11301                           
 11302                           ; BSR set to: 0
 11303  00567C  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 11304  00567E  D7EE               	goto	l8881
 11305  005680                     u6890:
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;MOTEapp.c: 1554: }
 11309                           ;MOTEapp.c: 1555: }
 11310                           ;MOTEapp.c: 1556: __nop();
 11311  005680  F000               	nop	
 11312  005682  0012               	return		;funcret
 11313  005684                     __end_of_moteApp_setLightString:
 11314                           	opt stack 0
 11315                           tblptru	equ	0xFF8
 11316                           tblptrh	equ	0xFF7
 11317                           tblptrl	equ	0xFF6
 11318                           tablat	equ	0xFF5
 11319                           prodh	equ	0xFF4
 11320                           prodl	equ	0xFF3
 11321                           intcon	equ	0xFF2
 11322                           postinc0	equ	0xFEE
 11323                           wreg	equ	0xFE8
 11324                           indf1	equ	0xFE7
 11325                           postdec1	equ	0xFE5
 11326                           fsr1h	equ	0xFE2
 11327                           fsr1l	equ	0xFE1
 11328                           indf2	equ	0xFDF
 11329                           fsr2h	equ	0xFDA
 11330                           fsr2l	equ	0xFD9
 11331                           status	equ	0xFD8
 11332                           
 11333 ;; *************** function _memcpy *****************
 11334 ;; Defined at:
 11335 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  d1              2    0[BANK0 ] PTR void 
 11338 ;;		 -> storedLight(5), 
 11339 ;;  s1              2    2[BANK0 ] PTR const void 
 11340 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11341 ;;  n               2    4[BANK0 ] unsigned int 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 11344 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11345 ;;  d               2    6[BANK0 ] PTR unsigned char 
 11346 ;;		 -> storedLight(5), 
 11347 ;;  tmp             1   10[BANK0 ] unsigned char 
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  2    0[BANK0 ] PTR void 
 11350 ;; Registers used:
 11351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11357 ;;      Params:         0       6       0       0       0       0       0       0       0
 11358 ;;      Locals:         0       5       0       0       0       0       0       0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11360 ;;      Totals:         0      11       0       0       0       0       0       0       0
 11361 ;;Total ram usage:       11 bytes
 11362 ;; Hardware stack levels used:    1
 11363 ;; Hardware stack levels required when called:   11
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_moteApp_setLightString
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text19
 11372  005B12                     __ptext19:
 11373                           	opt stack 0
 11374  005B12                     _memcpy:
 11375                           	opt stack 15
 11376                           
 11377                           ;incstack = 0
 11378  005B12  C062  F068         	movff	memcpy@s1,memcpy@s
 11379  005B16  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 11380  005B1A  C060  F066         	movff	memcpy@d1,memcpy@d
 11381  005B1E  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 11382  005B22  D011               	goto	l2780
 11383  005B24                     l8449:
 11384  005B24  C068  FFD9         	movff	memcpy@s,fsr2l
 11385  005B28  C069  FFDA         	movff	memcpy@s+1,fsr2h
 11386  005B2C  50DF               	movf	indf2,w,c
 11387  005B2E  0100               	movlb	0	; () banked
 11388  005B30  6F6A               	movwf	memcpy@tmp& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391  005B32  4B68               	infsnz	memcpy@s& (0+255),f,b
 11392  005B34  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 11393                           
 11394                           ; BSR set to: 0
 11395  005B36  C066  FFD9         	movff	memcpy@d,fsr2l
 11396  005B3A  C067  FFDA         	movff	memcpy@d+1,fsr2h
 11397  005B3E  C06A  FFDF         	movff	memcpy@tmp,indf2
 11398                           
 11399                           ; BSR set to: 0
 11400  005B42  4B66               	infsnz	memcpy@d& (0+255),f,b
 11401  005B44  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 11402  005B46                     l2780:
 11403                           
 11404                           ; BSR set to: 0
 11405  005B46  0100               	movlb	0	; () banked
 11406  005B48  0764               	decf	memcpy@n& (0+255),f,b
 11407  005B4A  A0D8               	btfss	status,0,c
 11408  005B4C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 11409  005B4E  2964               	incf	memcpy@n& (0+255),w,b
 11410  005B50  E1E9               	bnz	l8449
 11411  005B52  2965               	incf	(memcpy@n+1)& (0+255),w,b
 11412  005B54  B4D8               	btfsc	status,2,c
 11413  005B56  0012               	return	
 11414  005B58  D7E5               	goto	l2781
 11415  005B5A                     __end_of_memcpy:
 11416                           	opt stack 0
 11417                           tblptru	equ	0xFF8
 11418                           tblptrh	equ	0xFF7
 11419                           tblptrl	equ	0xFF6
 11420                           tablat	equ	0xFF5
 11421                           prodh	equ	0xFF4
 11422                           prodl	equ	0xFF3
 11423                           intcon	equ	0xFF2
 11424                           postinc0	equ	0xFEE
 11425                           wreg	equ	0xFE8
 11426                           indf1	equ	0xFE7
 11427                           postdec1	equ	0xFE5
 11428                           fsr1h	equ	0xFE2
 11429                           fsr1l	equ	0xFE1
 11430                           indf2	equ	0xFDF
 11431                           fsr2h	equ	0xFDA
 11432                           fsr2l	equ	0xFD9
 11433                           status	equ	0xFD8
 11434                           
 11435 ;; *************** function _moteApp_getLightString *****************
 11436 ;; Defined at:
 11437 ;;		line 1563 in file "../Includes/Board/MOTEapp.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;		None
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;		None
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  2    0[BANK0 ] PTR unsigned char 
 11444 ;; Registers used:
 11445 ;;		wreg, status,2, status,0
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11451 ;;      Params:         0       2       0       0       0       0       0       0       0
 11452 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11454 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11455 ;;Total ram usage:        2 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:   11
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		_moteRunningProcess
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text20
 11466  00640A                     __ptext20:
 11467                           	opt stack 0
 11468  00640A                     _moteApp_getLightString:
 11469                           	opt stack 17
 11470                           
 11471                           ;MOTEapp.c: 1565: return &storedLight;
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;incstack = 0
 11475  00640A  0EEE               	movlw	low _storedLight
 11476  00640C  0100               	movlb	0	; () banked
 11477  00640E  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11478  006410  0E01               	movlw	high _storedLight
 11479  006412  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11480  006414  0012               	return	
 11481  006416                     __end_of_moteApp_getLightString:
 11482                           	opt stack 0
 11483                           tblptru	equ	0xFF8
 11484                           tblptrh	equ	0xFF7
 11485                           tblptrl	equ	0xFF6
 11486                           tablat	equ	0xFF5
 11487                           prodh	equ	0xFF4
 11488                           prodl	equ	0xFF3
 11489                           intcon	equ	0xFF2
 11490                           postinc0	equ	0xFEE
 11491                           wreg	equ	0xFE8
 11492                           indf1	equ	0xFE7
 11493                           postdec1	equ	0xFE5
 11494                           fsr1h	equ	0xFE2
 11495                           fsr1l	equ	0xFE1
 11496                           indf2	equ	0xFDF
 11497                           fsr2h	equ	0xFDA
 11498                           fsr2l	equ	0xFD9
 11499                           status	equ	0xFD8
 11500                           
 11501 ;; *************** function _moteApp_convertSensorValue *****************
 11502 ;; Defined at:
 11503 ;;		line 1454 in file "../Includes/Board/MOTEapp.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11506 ;;		 -> moduleResonseBuffer(64), 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11509 ;;  index           1   25[BANK0 ] unsigned char 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2   18[BANK0 ] unsigned int 
 11512 ;; Registers used:
 11513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11519 ;;      Params:         0       2       0       0       0       0       0       0       0
 11520 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11521 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11522 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11523 ;;Total ram usage:        8 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; Hardware stack levels required when called:   12
 11526 ;; This function calls:
 11527 ;;		___wmul
 11528 ;; This function is called by:
 11529 ;;		_moteHandler
 11530 ;;		_moteRunningProcess
 11531 ;;		_moteApp_testSensors
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text21
 11536  0052F0                     __ptext21:
 11537                           	opt stack 0
 11538  0052F0                     _moteApp_convertSensorValue:
 11539                           	opt stack 16
 11540                           
 11541                           ;MOTEapp.c: 1456: uint8_t index;
 11542                           ;MOTEapp.c: 1457: uint16_t convertedValue = 0;
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;incstack = 0
 11546  0052F0  0E00               	movlw	0
 11547  0052F2  0100               	movlb	0	; () banked
 11548  0052F4  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11549  0052F6  0E00               	movlw	0
 11550  0052F8  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11551                           
 11552                           ;MOTEapp.c: 1458: for(index = 0; index < 4; index++)
 11553  0052FA  0E00               	movlw	0
 11554  0052FC  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11555  0052FE                     l9821:
 11556                           
 11557                           ; BSR set to: 0
 11558  0052FE  0E03               	movlw	3
 11559  005300  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11560  005302  D001               	goto	l752
 11561  005304  D02F               	goto	u8320
 11562  005306                     l752:
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;MOTEapp.c: 1459: {
 11566                           ;MOTEapp.c: 1460: if (*string != 0)
 11567                           
 11568                           ; BSR set to: 0
 11569  005306  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11570  00530A  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11571  00530E  50DF               	movf	indf2,w,c
 11572  005310  B4D8               	btfsc	status,2,c
 11573  005312  D028               	goto	u8320
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;MOTEapp.c: 1461: {
 11577                           ;MOTEapp.c: 1462: if (index != 0)
 11578  005314  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11579  005316  B4D8               	btfsc	status,2,c
 11580  005318  D00E               	goto	l755
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;MOTEapp.c: 1463: convertedValue = convertedValue * 10;
 11584  00531A  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11585  00531E  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11586  005322  0E00               	movlw	0
 11587  005324  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11588  005326  0E0A               	movlw	10
 11589  005328  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11590  00532A  ECA0  F030         	call	___wmul	;wreg free
 11591  00532E  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11592  005332  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11593  005336                     l755:
 11594                           
 11595                           ;MOTEapp.c: 1465: convertedValue = (*string++ - '0') + convertedValue;
 11596  005336  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11597  00533A  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11598  00533E  50DF               	movf	indf2,w,c
 11599  005340  0100               	movlb	0	; () banked
 11600  005342  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11601  005344  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11602  005346  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11603  005348  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11604  00534A  0E00               	movlw	0
 11605  00534C  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11606  00534E  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11607  005350  0ED0               	movlw	208
 11608  005352  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11609  005354  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11610  005356  0EFF               	movlw	255
 11611  005358  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11612  00535A  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11613                           
 11614                           ; BSR set to: 0
 11615  00535C  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11616  00535E  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11617                           
 11618                           ; BSR set to: 0
 11619                           
 11620                           ; BSR set to: 0
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;MOTEapp.c: 1467: else
 11624                           ;MOTEapp.c: 1468: {
 11625                           ;MOTEapp.c: 1469: break;
 11626                           
 11627                           ;MOTEapp.c: 1466: }
 11628  005360  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11629  005362  D7CD               	goto	l9821
 11630  005364                     u8320:
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;MOTEapp.c: 1470: }
 11634                           ;MOTEapp.c: 1471: }
 11635                           ;MOTEapp.c: 1472: return convertedValue;
 11636  005364  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11637  005368  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11638                           
 11639                           ; BSR set to: 0
 11640  00536C  0012               	return		;funcret
 11641  00536E                     __end_of_moteApp_convertSensorValue:
 11642                           	opt stack 0
 11643                           tblptru	equ	0xFF8
 11644                           tblptrh	equ	0xFF7
 11645                           tblptrl	equ	0xFF6
 11646                           tablat	equ	0xFF5
 11647                           prodh	equ	0xFF4
 11648                           prodl	equ	0xFF3
 11649                           intcon	equ	0xFF2
 11650                           postinc0	equ	0xFEE
 11651                           wreg	equ	0xFE8
 11652                           indf1	equ	0xFE7
 11653                           postdec1	equ	0xFE5
 11654                           fsr1h	equ	0xFE2
 11655                           fsr1l	equ	0xFE1
 11656                           indf2	equ	0xFDF
 11657                           fsr2h	equ	0xFDA
 11658                           fsr2l	equ	0xFD9
 11659                           status	equ	0xFD8
 11660                           
 11661 ;; *************** function ___wmul *****************
 11662 ;; Defined at:
 11663 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11666 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  product         2    4[BANK0 ] unsigned int 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  2    0[BANK0 ] unsigned int 
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, status,0, prodl, prodh
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11678 ;;      Params:         0       4       0       0       0       0       0       0       0
 11679 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11680 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11681 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11682 ;;Total ram usage:        6 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:   11
 11685 ;; This function calls:
 11686 ;;		Nothing
 11687 ;; This function is called by:
 11688 ;;		_moteApp_convertSensorValue
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text22
 11693  006140                     __ptext22:
 11694                           	opt stack 0
 11695  006140                     ___wmul:
 11696                           	opt stack 16
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;incstack = 0
 11700  006140  0100               	movlb	0	; () banked
 11701  006142  5160               	movf	___wmul@multiplier& (0+255),w,b
 11702  006144  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11703  006146  CFF3 F064          	movff	prodl,___wmul@product
 11704  00614A  CFF4 F065          	movff	prodh,___wmul@product+1
 11705  00614E  5160               	movf	___wmul@multiplier& (0+255),w,b
 11706  006150  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11707  006152  50F3               	movf	prodl,w,c
 11708  006154  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11709  006156  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11710  006158  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11711  00615A  50F3               	movf	prodl,w,c
 11712  00615C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11713                           
 11714                           ; BSR set to: 0
 11715  00615E  C064  F060         	movff	___wmul@product,?___wmul
 11716  006162  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11717  006166  0012               	return	
 11718  006168                     __end_of___wmul:
 11719                           	opt stack 0
 11720                           tblptru	equ	0xFF8
 11721                           tblptrh	equ	0xFF7
 11722                           tblptrl	equ	0xFF6
 11723                           tablat	equ	0xFF5
 11724                           prodh	equ	0xFF4
 11725                           prodl	equ	0xFF3
 11726                           intcon	equ	0xFF2
 11727                           postinc0	equ	0xFEE
 11728                           wreg	equ	0xFE8
 11729                           indf1	equ	0xFE7
 11730                           postdec1	equ	0xFE5
 11731                           fsr1h	equ	0xFE2
 11732                           fsr1l	equ	0xFE1
 11733                           indf2	equ	0xFDF
 11734                           fsr2h	equ	0xFDA
 11735                           fsr2l	equ	0xFD9
 11736                           status	equ	0xFD8
 11737                           
 11738 ;; *************** function _moteApp_clearBuffers *****************
 11739 ;; Defined at:
 11740 ;;		line 1394 in file "../Includes/Board/MOTEapp.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;		None
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  counter         1    3[BANK0 ] unsigned char 
 11745 ;;  counter         1    2[BANK0 ] unsigned char 
 11746 ;;  counter         1    1[BANK0 ] unsigned char 
 11747 ;;  counter         1    0[BANK0 ] unsigned char 
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0
 11758 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11760 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11761 ;;Total ram usage:        4 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:   11
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_moteRunningProcess
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text23
 11772  004EBE                     __ptext23:
 11773                           	opt stack 0
 11774  004EBE                     _moteApp_clearBuffers:
 11775                           	opt stack 17
 11776                           
 11777                           ;MOTEapp.c: 1396: for (uint8_t counter = 0; counter < 3; counter++)
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;incstack = 0
 11781  004EBE  0E00               	movlw	0
 11782  004EC0  0100               	movlb	0	; () banked
 11783  004EC2  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11784  004EC4                     l9895:
 11785                           
 11786                           ; BSR set to: 0
 11787  004EC4  0E02               	movlw	2
 11788  004EC6  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11789  004EC8  D001               	goto	l728
 11790  004ECA  D00C               	goto	u8410
 11791  004ECC                     l728:
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;MOTEapp.c: 1397: {
 11795                           ;MOTEapp.c: 1398: responsePortNum[counter] = 0;
 11796                           
 11797                           ; BSR set to: 0
 11798  004ECC  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11799  004ECE  0D01               	mullw	1
 11800  004ED0  0EF3               	movlw	low _responsePortNum
 11801  004ED2  24F3               	addwf	prodl,w,c
 11802  004ED4  6ED9               	movwf	fsr2l,c
 11803  004ED6  0E01               	movlw	high _responsePortNum
 11804  004ED8  20F4               	addwfc	prodh,w,c
 11805  004EDA  6EDA               	movwf	fsr2h,c
 11806  004EDC  0E00               	movlw	0
 11807  004EDE  6EDF               	movwf	indf2,c
 11808                           
 11809                           ; BSR set to: 0
 11810  004EE0  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11811  004EE2  D7F0               	goto	l9895
 11812  004EE4                     u8410:
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;MOTEapp.c: 1399: }
 11816                           ;MOTEapp.c: 1400: for (uint8_t counter = 0; counter < 34; counter++)
 11817                           
 11818                           ; BSR set to: 0
 11819  004EE4  0E00               	movlw	0
 11820  004EE6  6F61               	movwf	moteApp_clearBuffers@counter_1753& (0+255),b
 11821  004EE8                     l9907:
 11822                           
 11823                           ; BSR set to: 0
 11824  004EE8  0E21               	movlw	33
 11825  004EEA  6561               	cpfsgt	moteApp_clearBuffers@counter_1753& (0+255),b
 11826  004EEC  D001               	goto	l730
 11827  004EEE  D00C               	goto	u8430
 11828  004EF0                     l730:
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;MOTEapp.c: 1401: {
 11832                           ;MOTEapp.c: 1402: responseId[counter] = 0;
 11833                           
 11834                           ; BSR set to: 0
 11835  004EF0  5161               	movf	moteApp_clearBuffers@counter_1753& (0+255),w,b
 11836  004EF2  0D01               	mullw	1
 11837  004EF4  0E70               	movlw	low _responseId
 11838  004EF6  24F3               	addwf	prodl,w,c
 11839  004EF8  6ED9               	movwf	fsr2l,c
 11840  004EFA  0E02               	movlw	high _responseId
 11841  004EFC  20F4               	addwfc	prodh,w,c
 11842  004EFE  6EDA               	movwf	fsr2h,c
 11843  004F00  0E00               	movlw	0
 11844  004F02  6EDF               	movwf	indf2,c
 11845                           
 11846                           ; BSR set to: 0
 11847  004F04  2B61               	incf	moteApp_clearBuffers@counter_1753& (0+255),f,b
 11848  004F06  D7F0               	goto	l9907
 11849  004F08                     u8430:
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;MOTEapp.c: 1403: }
 11853                           ;MOTEapp.c: 1404: for (uint8_t counter = 0; counter < 32; counter++)
 11854                           
 11855                           ; BSR set to: 0
 11856  004F08  0E00               	movlw	0
 11857  004F0A  6F62               	movwf	moteApp_clearBuffers@counter_1754& (0+255),b
 11858  004F0C                     l9919:
 11859                           
 11860                           ; BSR set to: 0
 11861  004F0C  0E1F               	movlw	31
 11862  004F0E  6562               	cpfsgt	moteApp_clearBuffers@counter_1754& (0+255),b
 11863  004F10  D001               	goto	l732
 11864  004F12  D00C               	goto	u8450
 11865  004F14                     l732:
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;MOTEapp.c: 1405: {
 11869                           ;MOTEapp.c: 1406: responseData[counter] = 0;
 11870                           
 11871                           ; BSR set to: 0
 11872  004F14  5162               	movf	moteApp_clearBuffers@counter_1754& (0+255),w,b
 11873  004F16  0D01               	mullw	1
 11874  004F18  0EC0               	movlw	low _responseData
 11875  004F1A  24F3               	addwf	prodl,w,c
 11876  004F1C  6ED9               	movwf	fsr2l,c
 11877  004F1E  0E02               	movlw	high _responseData
 11878  004F20  20F4               	addwfc	prodh,w,c
 11879  004F22  6EDA               	movwf	fsr2h,c
 11880  004F24  0E00               	movlw	0
 11881  004F26  6EDF               	movwf	indf2,c
 11882                           
 11883                           ; BSR set to: 0
 11884  004F28  2B62               	incf	moteApp_clearBuffers@counter_1754& (0+255),f,b
 11885  004F2A  D7F0               	goto	l9919
 11886  004F2C                     u8450:
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;MOTEapp.c: 1407: }
 11890                           ;MOTEapp.c: 1408: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11891                           
 11892                           ; BSR set to: 0
 11893  004F2C  0E00               	movlw	0
 11894  004F2E  6F63               	movwf	moteApp_clearBuffers@counter_1755& (0+255),b
 11895  004F30                     l9931:
 11896                           
 11897                           ; BSR set to: 0
 11898  004F30  0E63               	movlw	99
 11899  004F32  6563               	cpfsgt	moteApp_clearBuffers@counter_1755& (0+255),b
 11900  004F34  D001               	goto	l734
 11901  004F36  0012               	return	
 11902  004F38                     l734:
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;MOTEapp.c: 1409: {
 11906                           ;MOTEapp.c: 1410: dataBuffer[counter] = 0;
 11907                           
 11908                           ; BSR set to: 0
 11909  004F38  5163               	movf	moteApp_clearBuffers@counter_1755& (0+255),w,b
 11910  004F3A  0D01               	mullw	1
 11911  004F3C  0E2C               	movlw	low _dataBuffer
 11912  004F3E  24F3               	addwf	prodl,w,c
 11913  004F40  6ED9               	movwf	fsr2l,c
 11914  004F42  0E01               	movlw	high _dataBuffer
 11915  004F44  20F4               	addwfc	prodh,w,c
 11916  004F46  6EDA               	movwf	fsr2h,c
 11917  004F48  0E00               	movlw	0
 11918  004F4A  6EDF               	movwf	indf2,c
 11919                           
 11920                           ; BSR set to: 0
 11921  004F4C  2B63               	incf	moteApp_clearBuffers@counter_1755& (0+255),f,b
 11922  004F4E  D7F0               	goto	l9931
 11923  004F50                     __end_of_moteApp_clearBuffers:
 11924                           	opt stack 0
 11925                           tblptru	equ	0xFF8
 11926                           tblptrh	equ	0xFF7
 11927                           tblptrl	equ	0xFF6
 11928                           tablat	equ	0xFF5
 11929                           prodh	equ	0xFF4
 11930                           prodl	equ	0xFF3
 11931                           intcon	equ	0xFF2
 11932                           postinc0	equ	0xFEE
 11933                           wreg	equ	0xFE8
 11934                           indf1	equ	0xFE7
 11935                           postdec1	equ	0xFE5
 11936                           fsr1h	equ	0xFE2
 11937                           fsr1l	equ	0xFE1
 11938                           indf2	equ	0xFDF
 11939                           fsr2h	equ	0xFDA
 11940                           fsr2l	equ	0xFD9
 11941                           status	equ	0xFD8
 11942                           
 11943 ;; *************** function _moteApp_addToDataBuffer *****************
 11944 ;; Defined at:
 11945 ;;		line 1436 in file "../Includes/Board/MOTEapp.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11948 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11949 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  index           1   21[BANK0 ] unsigned char 
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      unsigned char 
 11954 ;; Registers used:
 11955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11961 ;;      Params:         0       3       0       0       0       0       0       0       0
 11962 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11964 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11965 ;;Total ram usage:        4 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:   11
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_moteRunningProcess
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text24
 11976  0057BC                     __ptext24:
 11977                           	opt stack 0
 11978  0057BC                     _moteApp_addToDataBuffer:
 11979                           	opt stack 17
 11980                           
 11981                           ;MOTEapp.c: 1438: uint8_t index;
 11982                           ;MOTEapp.c: 1439: for(index = 0; index < 6; index++)
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;incstack = 0
 11986  0057BC  0E00               	movlw	0
 11987  0057BE  0100               	movlb	0	; () banked
 11988  0057C0  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11989  0057C2                     l9969:
 11990                           
 11991                           ; BSR set to: 0
 11992  0057C2  0E05               	movlw	5
 11993  0057C4  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11994  0057C6  D001               	goto	l745
 11995  0057C8  D026               	goto	u8540
 11996  0057CA                     l745:
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;MOTEapp.c: 1440: {
 12000                           ;MOTEapp.c: 1441: if (*string != 0)
 12001                           
 12002                           ; BSR set to: 0
 12003  0057CA  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12004  0057CE  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12005  0057D2  50DF               	movf	indf2,w,c
 12006  0057D4  B4D8               	btfsc	status,2,c
 12007  0057D6  D012               	goto	l747
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;MOTEapp.c: 1442: {
 12011                           ;MOTEapp.c: 1443: dataBuffer[bufferLocation++] = *string++;
 12012  0057D8  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12013  0057DC  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12014  0057E0  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12015  0057E2  0D01               	mullw	1
 12016  0057E4  0E2C               	movlw	low _dataBuffer
 12017  0057E6  24F3               	addwf	prodl,w,c
 12018  0057E8  6EE1               	movwf	fsr1l,c
 12019  0057EA  0E01               	movlw	high _dataBuffer
 12020  0057EC  20F4               	addwfc	prodh,w,c
 12021  0057EE  6EE2               	movwf	fsr1h,c
 12022  0057F0  CFDF FFE7          	movff	indf2,indf1
 12023                           
 12024                           ; BSR set to: 0
 12025  0057F4  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 12026  0057F6  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 12027                           
 12028                           ; BSR set to: 0
 12029  0057F8  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 12030                           
 12031                           ;MOTEapp.c: 1444: }
 12032  0057FA  D00B               	goto	l748
 12033  0057FC                     l747:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;MOTEapp.c: 1445: else
 12037                           ;MOTEapp.c: 1446: {
 12038                           ;MOTEapp.c: 1447: dataBuffer[bufferLocation] = 0x20;
 12039                           
 12040                           ; BSR set to: 0
 12041  0057FC  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12042  0057FE  0D01               	mullw	1
 12043  005800  0E2C               	movlw	low _dataBuffer
 12044  005802  24F3               	addwf	prodl,w,c
 12045  005804  6ED9               	movwf	fsr2l,c
 12046  005806  0E01               	movlw	high _dataBuffer
 12047  005808  20F4               	addwfc	prodh,w,c
 12048  00580A  6EDA               	movwf	fsr2h,c
 12049  00580C  0E20               	movlw	32
 12050  00580E  6EDF               	movwf	indf2,c
 12051                           
 12052                           ;MOTEapp.c: 1448: break;
 12053  005810  D002               	goto	u8540
 12054  005812                     l748:
 12055                           
 12056                           ; BSR set to: 0
 12057                           
 12058                           ; BSR set to: 0
 12059  005812  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 12060  005814  D7D6               	goto	l9969
 12061  005816                     u8540:
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;MOTEapp.c: 1449: }
 12065                           ;MOTEapp.c: 1450: }
 12066                           ;MOTEapp.c: 1451: return index;
 12067                           
 12068                           ; BSR set to: 0
 12069  005816  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 12070  005818  0012               	return	
 12071  00581A                     __end_of_moteApp_addToDataBuffer:
 12072                           	opt stack 0
 12073                           tblptru	equ	0xFF8
 12074                           tblptrh	equ	0xFF7
 12075                           tblptrl	equ	0xFF6
 12076                           tablat	equ	0xFF5
 12077                           prodh	equ	0xFF4
 12078                           prodl	equ	0xFF3
 12079                           intcon	equ	0xFF2
 12080                           postinc0	equ	0xFEE
 12081                           wreg	equ	0xFE8
 12082                           indf1	equ	0xFE7
 12083                           postdec1	equ	0xFE5
 12084                           fsr1h	equ	0xFE2
 12085                           fsr1l	equ	0xFE1
 12086                           indf2	equ	0xFDF
 12087                           fsr2h	equ	0xFDA
 12088                           fsr2l	equ	0xFD9
 12089                           status	equ	0xFD8
 12090                           
 12091 ;; *************** function _moteApp_add8bToDataBuffer *****************
 12092 ;; Defined at:
 12093 ;;		line 1414 in file "../Includes/Board/MOTEapp.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;  number          1    wreg     unsigned char 
 12096 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  number          1    9[BANK0 ] unsigned char 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1    wreg      void 
 12101 ;; Registers used:
 12102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12108 ;;      Params:         0       1       0       0       0       0       0       0       0
 12109 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12110 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12111 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12112 ;;Total ram usage:        4 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:   12
 12115 ;; This function calls:
 12116 ;;		___awmod
 12117 ;;		___lbdiv
 12118 ;; This function is called by:
 12119 ;;		_moteRunningProcess
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text25
 12124  00498C                     __ptext25:
 12125                           	opt stack 0
 12126  00498C                     _moteApp_add8bToDataBuffer:
 12127                           	opt stack 16
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;incstack = 0
 12131                           ;moteApp_add8bToDataBuffer@number stored from wreg
 12132  00498C  0100               	movlb	0	; () banked
 12133  00498E  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12134                           
 12135                           ;MOTEapp.c: 1416: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 12136  004990  0100               	movlb	0	; () banked
 12137  004992  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12138  004994  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12139  004996  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12140  004998  0E02               	movlw	2
 12141  00499A  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12142  00499C  0E00               	movlw	0
 12143  00499E  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12144  0049A0  0E2C               	movlw	low _dataBuffer
 12145  0049A2  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12146  0049A4  6ED9               	movwf	fsr2l,c
 12147  0049A6  0E01               	movlw	high _dataBuffer
 12148  0049A8  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12149  0049AA  6EDA               	movwf	fsr2h,c
 12150  0049AC  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12151  0049B0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12152  0049B2  0E00               	movlw	0
 12153  0049B4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12154  0049B6  0E0A               	movlw	10
 12155  0049B8  6F62               	movwf	___awmod@divisor& (0+255),b
 12156  0049BA  EC9F  F02A         	call	___awmod	;wreg free
 12157  0049BE  0100               	movlb	0	; () banked
 12158  0049C0  5160               	movf	?___awmod& (0+255),w,b
 12159  0049C2  0F30               	addlw	48
 12160  0049C4  6EDF               	movwf	indf2,c
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;MOTEapp.c: 1417: number /= 10;
 12164  0049C6  0E0A               	movlw	10
 12165  0049C8  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12166  0049CA  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12167  0049CC  EC31  F02E         	call	___lbdiv
 12168  0049D0  0100               	movlb	0	; () banked
 12169  0049D2  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;MOTEapp.c: 1418: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 12173  0049D4  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12174  0049D6  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12175  0049D8  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12176  0049DA  0E01               	movlw	1
 12177  0049DC  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12178  0049DE  0E00               	movlw	0
 12179  0049E0  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12180  0049E2  0E2C               	movlw	low _dataBuffer
 12181  0049E4  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12182  0049E6  6ED9               	movwf	fsr2l,c
 12183  0049E8  0E01               	movlw	high _dataBuffer
 12184  0049EA  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12185  0049EC  6EDA               	movwf	fsr2h,c
 12186  0049EE  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12187  0049F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12188  0049F4  0E00               	movlw	0
 12189  0049F6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12190  0049F8  0E0A               	movlw	10
 12191  0049FA  6F62               	movwf	___awmod@divisor& (0+255),b
 12192  0049FC  EC9F  F02A         	call	___awmod	;wreg free
 12193  004A00  0100               	movlb	0	; () banked
 12194  004A02  5160               	movf	?___awmod& (0+255),w,b
 12195  004A04  0F30               	addlw	48
 12196  004A06  6EDF               	movwf	indf2,c
 12197                           
 12198                           ;MOTEapp.c: 1419: number /= 10;
 12199  004A08  0E0A               	movlw	10
 12200  004A0A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12201  004A0C  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12202  004A0E  EC31  F02E         	call	___lbdiv
 12203  004A12  0100               	movlb	0	; () banked
 12204  004A14  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;MOTEapp.c: 1420: dataBuffer[bufferLocation] = '0' + (number % 10);
 12208  004A16  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12209  004A18  0D01               	mullw	1
 12210  004A1A  0E2C               	movlw	low _dataBuffer
 12211  004A1C  24F3               	addwf	prodl,w,c
 12212  004A1E  6ED9               	movwf	fsr2l,c
 12213  004A20  0E01               	movlw	high _dataBuffer
 12214  004A22  20F4               	addwfc	prodh,w,c
 12215  004A24  6EDA               	movwf	fsr2h,c
 12216  004A26  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12217  004A2A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12218  004A2C  0E00               	movlw	0
 12219  004A2E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12220  004A30  0E0A               	movlw	10
 12221  004A32  6F62               	movwf	___awmod@divisor& (0+255),b
 12222  004A34  EC9F  F02A         	call	___awmod	;wreg free
 12223  004A38  0100               	movlb	0	; () banked
 12224  004A3A  5160               	movf	?___awmod& (0+255),w,b
 12225  004A3C  0F30               	addlw	48
 12226  004A3E  6EDF               	movwf	indf2,c
 12227                           
 12228                           ; BSR set to: 0
 12229  004A40  0012               	return		;funcret
 12230  004A42                     __end_of_moteApp_add8bToDataBuffer:
 12231                           	opt stack 0
 12232                           tblptru	equ	0xFF8
 12233                           tblptrh	equ	0xFF7
 12234                           tblptrl	equ	0xFF6
 12235                           tablat	equ	0xFF5
 12236                           prodh	equ	0xFF4
 12237                           prodl	equ	0xFF3
 12238                           intcon	equ	0xFF2
 12239                           postinc0	equ	0xFEE
 12240                           wreg	equ	0xFE8
 12241                           indf1	equ	0xFE7
 12242                           postdec1	equ	0xFE5
 12243                           fsr1h	equ	0xFE2
 12244                           fsr1l	equ	0xFE1
 12245                           indf2	equ	0xFDF
 12246                           fsr2h	equ	0xFDA
 12247                           fsr2l	equ	0xFD9
 12248                           status	equ	0xFD8
 12249                           
 12250 ;; *************** function _moteApp_GoToSleep *****************
 12251 ;; Defined at:
 12252 ;;		line 1282 in file "../Includes/Board/MOTEapp.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  status          1   14[BANK0 ] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      unsigned char 
 12259 ;; Registers used:
 12260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0
 12267 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12269 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12270 ;;Total ram usage:        1 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:   17
 12273 ;; This function calls:
 12274 ;;		_EUSART_FlushBuffer
 12275 ;;		_PIN_MANAGER_Initialize
 12276 ;;		_moduleResync
 12277 ;;		_moduleSleep
 12278 ;;		_moteApp_delayms
 12279 ;;		_oled_displayOff
 12280 ;;		_oled_init
 12281 ;; This function is called by:
 12282 ;;		_moteRunningProcess
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           	psect	text26
 12287  004052                     __ptext26:
 12288                           	opt stack 0
 12289  004052                     _moteApp_GoToSleep:
 12290                           	opt stack 11
 12291                           
 12292                           ;MOTEapp.c: 1284: uint8_t status = 0;
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;incstack = 0
 12296  004052  0E00               	movlw	0
 12297  004054  0100               	movlb	0	; () banked
 12298  004056  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12299  004058                     
 12300                           ; BSR set to: 0
 12301  004058  A081               	btfss	3969,0,c	;volatile
 12302  00405A  D7FE               	goto	l710
 12303                           
 12304                           ;MOTEapp.c: 1286: moduleSleep();
 12305  00405C  ECC8  F030         	call	_moduleSleep	;wreg free
 12306                           
 12307                           ;MOTEapp.c: 1287: oled_displayOff(1);
 12308  004060  0E01               	movlw	1
 12309  004062  EC30  F032         	call	_oled_displayOff
 12310                           
 12311                           ;MOTEapp.c: 1288: ADCON0bits.ADON = 0;
 12312  004066  90C2               	bcf	4034,0,c	;volatile
 12313                           
 12314                           ;MOTEapp.c: 1289: INTCONbits.GIE = 0;
 12315  004068  9EF2               	bcf	intcon,7,c	;volatile
 12316                           
 12317                           ;MOTEapp.c: 1290: GIE = 0;
 12318  00406A  9EF2               	bcf	intcon,7,c	;volatile
 12319                           
 12320                           ;MOTEapp.c: 1291: PEIE = 0;
 12321  00406C  9CF2               	bcf	intcon,6,c	;volatile
 12322                           
 12323                           ;MOTEapp.c: 1293: LATEbits.LATE2 = 0;
 12324  00406E  948D               	bcf	3981,2,c	;volatile
 12325                           
 12326                           ;MOTEapp.c: 1294: PIE2bits.TMR3IE = 0;
 12327  004070  92A0               	bcf	4000,1,c	;volatile
 12328                           
 12329                           ;MOTEapp.c: 1296: ANSELAbits.ANSA0 = 1;
 12330  004072  010F               	movlb	15	; () banked
 12331  004074  815B               	bsf	91,0,b	;volatile
 12332                           
 12333                           ; BSR set to: 15
 12334                           ;MOTEapp.c: 1298: PIE2bits.C1IE = 1;
 12335  004076  8CA0               	bsf	4000,6,c	;volatile
 12336                           
 12337                           ; BSR set to: 15
 12338                           ;MOTEapp.c: 1299: INTCON3bits.INT1IE = 1;
 12339  004078  86F0               	bsf	intcon3,3,c	;volatile
 12340                           
 12341                           ; BSR set to: 15
 12342                           ;MOTEapp.c: 1300: INTCONbits.INT0IE = 1;
 12343  00407A  88F2               	bsf	intcon,4,c	;volatile
 12344                           
 12345                           ; BSR set to: 15
 12346                           ;MOTEapp.c: 1301: IOCCbits.IOCC2 = 1;
 12347  00407C  8487               	bsf	3975,2,c	;volatile
 12348                           
 12349                           ; BSR set to: 15
 12350                           ;MOTEapp.c: 1304: status = PORTBbits.RB1;
 12351  00407E  0E00               	movlw	0
 12352  004080  B281               	btfsc	3969,1,c	;volatile
 12353  004082  0E01               	movlw	1
 12354  004084  0100               	movlb	0	; () banked
 12355  004086  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;MOTEapp.c: 1305: status = PORTBbits.RB0;
 12359  004088  0E00               	movlw	0
 12360  00408A  B081               	btfsc	3969,0,c	;volatile
 12361  00408C  0E01               	movlw	1
 12362  00408E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;MOTEapp.c: 1306: status = PORTCbits.RC2;
 12366  004090  0E00               	movlw	0
 12367  004092  B482               	btfsc	3970,2,c	;volatile
 12368  004094  0E01               	movlw	1
 12369  004096  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;MOTEapp.c: 1308: if (periodicState)
 12373  004098  51FB               	movf	_periodicState& (0+255),w,b
 12374  00409A  A4D8               	btfss	status,2,c
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;MOTEapp.c: 1309: {
 12378                           ;MOTEapp.c: 1310: WDTCONbits.SWDTEN = 1;
 12379  00409C  80D1               	bsf	4049,0,c	;volatile
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;MOTEapp.c: 1311: }
 12383                           ;MOTEapp.c: 1314: INTCONbits.INT0IF = 0;
 12384  00409E  92F2               	bcf	intcon,1,c	;volatile
 12385                           
 12386                           ;MOTEapp.c: 1315: INTCON3bits.INT1IF = 0;
 12387  0040A0  90F0               	bcf	intcon3,0,c	;volatile
 12388                           
 12389                           ;MOTEapp.c: 1316: PIR2bits.C1IF = 0;
 12390  0040A2  9CA1               	bcf	4001,6,c	;volatile
 12391                           
 12392                           ;MOTEapp.c: 1317: __nop();
 12393  0040A4  F000               	nop	
 12394  0040A6  0003               	sleep		;# 
 12395                           
 12396                           ;MOTEapp.c: 1319: __nop();
 12397  0040A8  F000               	nop	
 12398                           
 12399                           ;MOTEapp.c: 1321: WDTCONbits.SWDTEN = 0;
 12400  0040AA  90D1               	bcf	4049,0,c	;volatile
 12401                           
 12402                           ;MOTEapp.c: 1322: EUSART_FlushBuffer();
 12403  0040AC  ECCF  F02D         	call	_EUSART_FlushBuffer	;wreg free
 12404                           
 12405                           ;MOTEapp.c: 1325: INTCON3bits.INT1IE = 0;
 12406  0040B0  96F0               	bcf	intcon3,3,c	;volatile
 12407                           
 12408                           ;MOTEapp.c: 1326: INTCONbits.INT0IE = 0;
 12409  0040B2  98F2               	bcf	intcon,4,c	;volatile
 12410                           
 12411                           ;MOTEapp.c: 1327: IOCCbits.IOCC2 = 0;
 12412  0040B4  9487               	bcf	3975,2,c	;volatile
 12413                           
 12414                           ;MOTEapp.c: 1328: PIE2bits.C1IE = 0;
 12415  0040B6  9CA0               	bcf	4000,6,c	;volatile
 12416                           
 12417                           ;MOTEapp.c: 1329: GIE = 1;
 12418  0040B8  8EF2               	bsf	intcon,7,c	;volatile
 12419                           
 12420                           ;MOTEapp.c: 1331: PIN_MANAGER_Initialize();
 12421  0040BA  ECC1  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
 12422                           
 12423                           ;MOTEapp.c: 1333: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 12424  0040BE  A2F2               	btfss	intcon,1,c	;volatile
 12425  0040C0  B0F0               	btfsc	intcon3,0,c	;volatile
 12426  0040C2  D002               	goto	u8640
 12427  0040C4  ACA1               	btfss	4001,6,c	;volatile
 12428  0040C6  D011               	goto	l713
 12429  0040C8                     u8640:
 12430                           
 12431                           ;MOTEapp.c: 1334: {
 12432                           ;MOTEapp.c: 1336: INTCONbits.INT0IF = 0;
 12433  0040C8  92F2               	bcf	intcon,1,c	;volatile
 12434                           
 12435                           ;MOTEapp.c: 1337: INTCON3bits.INT1IF = 0;
 12436  0040CA  90F0               	bcf	intcon3,0,c	;volatile
 12437                           
 12438                           ;MOTEapp.c: 1338: status = 1;
 12439  0040CC  0E01               	movlw	1
 12440  0040CE  0100               	movlb	0	; () banked
 12441  0040D0  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;MOTEapp.c: 1341: oled_displayOff(0);
 12445  0040D2  0E00               	movlw	0
 12446  0040D4  EC30  F032         	call	_oled_displayOff
 12447                           
 12448                           ;MOTEapp.c: 1342: oled_init();
 12449  0040D8  ECBA  F02F         	call	_oled_init	;wreg free
 12450                           
 12451                           ;MOTEapp.c: 1344: LATEbits.LATE2 = 1;
 12452  0040DC  848D               	bsf	3981,2,c	;volatile
 12453                           
 12454                           ;MOTEapp.c: 1345: TMR3H = 0xFB;
 12455  0040DE  0EFB               	movlw	251
 12456  0040E0  6EB3               	movwf	4019,c	;volatile
 12457                           
 12458                           ;MOTEapp.c: 1346: TMR3L = 0x50;
 12459  0040E2  0E50               	movlw	80
 12460  0040E4  6EB2               	movwf	4018,c	;volatile
 12461                           
 12462                           ;MOTEapp.c: 1347: PIE2bits.TMR3IE = 1;
 12463  0040E6  82A0               	bsf	4000,1,c	;volatile
 12464                           
 12465                           ;MOTEapp.c: 1348: }
 12466  0040E8  D007               	goto	l716
 12467  0040EA                     l713:
 12468                           
 12469                           ;MOTEapp.c: 1349: else
 12470                           ;MOTEapp.c: 1350: {
 12471                           ;MOTEapp.c: 1351: secTicker = 10;
 12472  0040EA  0E0A               	movlw	10
 12473  0040EC  0100               	movlb	0	; () banked
 12474  0040EE  6FF2               	movwf	_secTicker& (0+255),b
 12475                           
 12476                           ;MOTEapp.c: 1352: status = 0;
 12477  0040F0  0E00               	movlw	0
 12478  0040F2  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;MOTEapp.c: 1354: LATEbits.LATE2 = 0;
 12482  0040F4  948D               	bcf	3981,2,c	;volatile
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;MOTEapp.c: 1355: PIE2bits.TMR3IE = 0;
 12486  0040F6  92A0               	bcf	4000,1,c	;volatile
 12487  0040F8                     l716:
 12488                           
 12489                           ;MOTEapp.c: 1356: }
 12490                           ;MOTEapp.c: 1357: ANSELAbits.ANSA0 = 0;
 12491                           
 12492                           ; BSR set to: 0
 12493  0040F8  010F               	movlb	15	; () banked
 12494  0040FA  915B               	bcf	91,0,b	;volatile
 12495                           
 12496                           ; BSR set to: 15
 12497                           ;MOTEapp.c: 1359: moduleResync();
 12498  0040FC  EC31  F028         	call	_moduleResync	;wreg free
 12499                           
 12500                           ;MOTEapp.c: 1360: moteApp_delayms(40);
 12501  004100  0E00               	movlw	0
 12502  004102  0100               	movlb	0	; () banked
 12503  004104  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12504  004106  0E28               	movlw	40
 12505  004108  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12506  00410A  EC88  F02F         	call	_moteApp_delayms	;wreg free
 12507                           
 12508                           ;MOTEapp.c: 1361: moduleResync();
 12509  00410E  EC31  F028         	call	_moduleResync	;wreg free
 12510                           
 12511                           ;MOTEapp.c: 1362: moteApp_delayms(40);
 12512  004112  0E00               	movlw	0
 12513  004114  0100               	movlb	0	; () banked
 12514  004116  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12515  004118  0E28               	movlw	40
 12516  00411A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12517  00411C  EC88  F02F         	call	_moteApp_delayms	;wreg free
 12518                           
 12519                           ;MOTEapp.c: 1363: return status;
 12520  004120  0100               	movlb	0	; () banked
 12521  004122  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12522  004124  0012               	return	
 12523  004126                     __end_of_moteApp_GoToSleep:
 12524                           	opt stack 0
 12525                           tblptru	equ	0xFF8
 12526                           tblptrh	equ	0xFF7
 12527                           tblptrl	equ	0xFF6
 12528                           tablat	equ	0xFF5
 12529                           prodh	equ	0xFF4
 12530                           prodl	equ	0xFF3
 12531                           intcon	equ	0xFF2
 12532                           intcon3	equ	0xFF0
 12533                           postinc0	equ	0xFEE
 12534                           wreg	equ	0xFE8
 12535                           indf1	equ	0xFE7
 12536                           postdec1	equ	0xFE5
 12537                           fsr1h	equ	0xFE2
 12538                           fsr1l	equ	0xFE1
 12539                           indf2	equ	0xFDF
 12540                           fsr2h	equ	0xFDA
 12541                           fsr2l	equ	0xFD9
 12542                           status	equ	0xFD8
 12543                           
 12544 ;; *************** function _oled_init *****************
 12545 ;; Defined at:
 12546 ;;		line 389 in file "../Includes/Drivers/SSD1306oLED.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;		None
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12560 ;;      Params:         0       0       0       0       0       0       0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12563 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12564 ;;Total ram usage:        0 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:   16
 12567 ;; This function calls:
 12568 ;;		_oled_clear
 12569 ;;		_oled_devInit
 12570 ;;		_oled_setDisplay
 12571 ;;		_oled_setFont
 12572 ;; This function is called by:
 12573 ;;		_main
 12574 ;;		_moteApp_GoToSleep
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text27
 12579  005F74                     __ptext27:
 12580                           	opt stack 0
 12581  005F74                     _oled_init:
 12582                           	opt stack 14
 12583                           
 12584                           ;SSD1306oLED.c: 392: TRISEbits.TRISE2 = 0;
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;incstack = 0
 12588  005F74  9496               	bcf	3990,2,c	;volatile
 12589                           
 12590                           ;SSD1306oLED.c: 393: LATEbits.LATE2 = 1;
 12591  005F76  848D               	bsf	3981,2,c	;volatile
 12592                           
 12593                           ;SSD1306oLED.c: 394: TRISBbits.TRISB2 = 0;
 12594  005F78  9493               	bcf	3987,2,c	;volatile
 12595                           
 12596                           ;SSD1306oLED.c: 395: TRISBbits.TRISB3 = 0;
 12597  005F7A  9693               	bcf	3987,3,c	;volatile
 12598                           
 12599                           ;SSD1306oLED.c: 396: TRISBbits.TRISB4 = 0;
 12600  005F7C  9893               	bcf	3987,4,c	;volatile
 12601                           
 12602                           ;SSD1306oLED.c: 397: TRISCbits.TRISC0 = 0;
 12603  005F7E  9094               	bcf	3988,0,c	;volatile
 12604                           
 12605                           ;SSD1306oLED.c: 398: TRISCbits.TRISC1 = 0;
 12606  005F80  9294               	bcf	3988,1,c	;volatile
 12607                           
 12608                           ;SSD1306oLED.c: 400: LATBbits.LATB3 = 1;
 12609  005F82  868A               	bsf	3978,3,c	;volatile
 12610                           
 12611                           ;SSD1306oLED.c: 402: LATBbits.LATB4 = 0;
 12612  005F84  988A               	bcf	3978,4,c	;volatile
 12613                           
 12614                           ;SSD1306oLED.c: 404: oled_devInit();
 12615  005F86  EC38  F029         	call	_oled_devInit	;wreg free
 12616                           
 12617                           ;SSD1306oLED.c: 406: oled_setDisplay(Inverse);
 12618  005F8A  0E01               	movlw	1
 12619  005F8C  ECB4  F030         	call	_oled_setDisplay
 12620                           
 12621                           ;SSD1306oLED.c: 407: oled_setFont(OledFont0);
 12622  005F90  0EF8               	movlw	low _OledFont0
 12623  005F92  0100               	movlb	0	; () banked
 12624  005F94  6F60               	movwf	oled_setFont@font& (0+255),b
 12625  005F96  0E75               	movlw	high _OledFont0
 12626  005F98  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12627  005F9A  ECA4  F031         	call	_oled_setFont	;wreg free
 12628                           
 12629                           ;SSD1306oLED.c: 408: oled_clear();
 12630  005F9E  EC5E  F031         	call	_oled_clear	;wreg free
 12631  005FA2  0012               	return		;funcret
 12632  005FA4                     __end_of_oled_init:
 12633                           	opt stack 0
 12634                           tblptru	equ	0xFF8
 12635                           tblptrh	equ	0xFF7
 12636                           tblptrl	equ	0xFF6
 12637                           tablat	equ	0xFF5
 12638                           prodh	equ	0xFF4
 12639                           prodl	equ	0xFF3
 12640                           intcon	equ	0xFF2
 12641                           intcon3	equ	0xFF0
 12642                           postinc0	equ	0xFEE
 12643                           wreg	equ	0xFE8
 12644                           indf1	equ	0xFE7
 12645                           postdec1	equ	0xFE5
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           indf2	equ	0xFDF
 12649                           fsr2h	equ	0xFDA
 12650                           fsr2l	equ	0xFD9
 12651                           status	equ	0xFD8
 12652                           
 12653 ;; *************** function _oled_setFont *****************
 12654 ;; Defined at:
 12655 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12658 ;;		 -> OledFont0(768), 
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;		None
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12670 ;;      Params:         0       2       0       0       0       0       0       0       0
 12671 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12673 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12674 ;;Total ram usage:        2 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; Hardware stack levels required when called:   11
 12677 ;; This function calls:
 12678 ;;		Nothing
 12679 ;; This function is called by:
 12680 ;;		_oled_init
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text28
 12685  006348                     __ptext28:
 12686                           	opt stack 0
 12687  006348                     _oled_setFont:
 12688                           	opt stack 18
 12689                           
 12690                           ;SSD1306oLED.c: 258: if(font!=0)
 12691                           
 12692                           ;incstack = 0
 12693  006348  0100               	movlb	0	; () banked
 12694  00634A  5160               	movf	oled_setFont@font& (0+255),w,b
 12695  00634C  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12696  00634E  B4D8               	btfsc	status,2,c
 12697  006350  0012               	return	
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;SSD1306oLED.c: 259: {
 12701                           ;SSD1306oLED.c: 260: selectedFont=font;
 12702  006352  C060  F1F6         	movff	oled_setFont@font,_selectedFont
 12703  006356  C061  F1F7         	movff	oled_setFont@font+1,_selectedFont+1
 12704  00635A  0012               	return	
 12705  00635C                     __end_of_oled_setFont:
 12706                           	opt stack 0
 12707                           tblptru	equ	0xFF8
 12708                           tblptrh	equ	0xFF7
 12709                           tblptrl	equ	0xFF6
 12710                           tablat	equ	0xFF5
 12711                           prodh	equ	0xFF4
 12712                           prodl	equ	0xFF3
 12713                           intcon	equ	0xFF2
 12714                           intcon3	equ	0xFF0
 12715                           postinc0	equ	0xFEE
 12716                           wreg	equ	0xFE8
 12717                           indf1	equ	0xFE7
 12718                           postdec1	equ	0xFE5
 12719                           fsr1h	equ	0xFE2
 12720                           fsr1l	equ	0xFE1
 12721                           indf2	equ	0xFDF
 12722                           fsr2h	equ	0xFDA
 12723                           fsr2l	equ	0xFD9
 12724                           status	equ	0xFD8
 12725                           
 12726 ;; *************** function _oled_setDisplay *****************
 12727 ;; Defined at:
 12728 ;;		line 434 in file "../Includes/Drivers/SSD1306oLED.c"
 12729 ;; Parameters:    Size  Location     Type
 12730 ;;  displayType     1    wreg     enum E5868
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;  displayType     1    1[BANK0 ] enum E5868
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  1    wreg      void 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, cstack
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12742 ;;      Params:         0       0       0       0       0       0       0       0       0
 12743 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12745 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12746 ;;Total ram usage:        1 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:   12
 12749 ;; This function calls:
 12750 ;;		_oled_writeCommand
 12751 ;; This function is called by:
 12752 ;;		_oled_init
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text29
 12757  006168                     __ptext29:
 12758                           	opt stack 0
 12759  006168                     _oled_setDisplay:
 12760                           	opt stack 17
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;incstack = 0
 12764                           ;oled_setDisplay@displayType stored from wreg
 12765  006168  0100               	movlb	0	; () banked
 12766  00616A  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12767                           
 12768                           ;SSD1306oLED.c: 436: if (displayType == Normal)
 12769  00616C  0100               	movlb	0	; () banked
 12770  00616E  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12771  006170  A4D8               	btfss	status,2,c
 12772  006172  D007               	goto	l1152
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;SSD1306oLED.c: 437: {
 12776                           ;SSD1306oLED.c: 438: oled_writeCommand(0xa0);
 12777  006174  0EA0               	movlw	160
 12778  006176  EC83  F031         	call	_oled_writeCommand
 12779                           
 12780                           ;SSD1306oLED.c: 439: oled_writeCommand(0xc8);
 12781  00617A  0EC8               	movlw	200
 12782  00617C  EC83  F031         	call	_oled_writeCommand
 12783                           
 12784                           ;SSD1306oLED.c: 440: }
 12785  006180  0012               	return	
 12786  006182                     l1152:
 12787                           
 12788                           ;SSD1306oLED.c: 441: else
 12789                           ;SSD1306oLED.c: 442: {
 12790                           ;SSD1306oLED.c: 443: oled_writeCommand(0xa1);
 12791  006182  0EA1               	movlw	161
 12792  006184  EC83  F031         	call	_oled_writeCommand
 12793                           
 12794                           ;SSD1306oLED.c: 444: oled_writeCommand(0xc0);
 12795  006188  0EC0               	movlw	192
 12796  00618A  EC83  F031         	call	_oled_writeCommand
 12797  00618E  0012               	return	
 12798  006190                     __end_of_oled_setDisplay:
 12799                           	opt stack 0
 12800                           tblptru	equ	0xFF8
 12801                           tblptrh	equ	0xFF7
 12802                           tblptrl	equ	0xFF6
 12803                           tablat	equ	0xFF5
 12804                           prodh	equ	0xFF4
 12805                           prodl	equ	0xFF3
 12806                           intcon	equ	0xFF2
 12807                           intcon3	equ	0xFF0
 12808                           postinc0	equ	0xFEE
 12809                           wreg	equ	0xFE8
 12810                           indf1	equ	0xFE7
 12811                           postdec1	equ	0xFE5
 12812                           fsr1h	equ	0xFE2
 12813                           fsr1l	equ	0xFE1
 12814                           indf2	equ	0xFDF
 12815                           fsr2h	equ	0xFDA
 12816                           fsr2l	equ	0xFD9
 12817                           status	equ	0xFD8
 12818                           
 12819 ;; *************** function _oled_devInit *****************
 12820 ;; Defined at:
 12821 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;		None
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1    wreg      void 
 12828 ;; Registers used:
 12829 ;;		wreg, status,2, status,0, cstack
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12837 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12838 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12839 ;;Total ram usage:        1 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; Hardware stack levels required when called:   13
 12842 ;; This function calls:
 12843 ;;		_oled_initialDispayLine
 12844 ;;		_oled_powerControl
 12845 ;;		_oled_regulorResistorSelect
 12846 ;;		_oled_setContrastControlRegister
 12847 ;;		_oled_writeCommand
 12848 ;; This function is called by:
 12849 ;;		_oled_init
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text30
 12854  005270                     __ptext30:
 12855                           	opt stack 0
 12856  005270                     _oled_devInit:
 12857                           	opt stack 16
 12858                           
 12859                           ;SSD1306oLED.c: 413: oled_writeCommand(0xe2);
 12860                           
 12861                           ;incstack = 0
 12862  005270  0EE2               	movlw	226
 12863  005272  EC83  F031         	call	_oled_writeCommand
 12864                           
 12865                           ;SSD1306oLED.c: 414: LATBbits.LATB2=1;
 12866  005276  848A               	bsf	3978,2,c	;volatile
 12867                           
 12868                           ;SSD1306oLED.c: 415: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12869  005278  0E04               	movlw	4
 12870  00527A  0100               	movlb	0	; () banked
 12871  00527C  6F62               	movwf	??_oled_devInit& (0+255),b
 12872  00527E  0E1C               	movlw	28
 12873  005280                     u11787:
 12874  005280  2EE8               	decfsz	wreg,f,c
 12875  005282  D7FE               	bra	u11787
 12876  005284  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12877  005286  D7FC               	bra	u11787
 12878  005288  F000               	nop	
 12879                           
 12880                           ;SSD1306oLED.c: 416: LATBbits.LATB2=0;
 12881  00528A  948A               	bcf	3978,2,c	;volatile
 12882                           
 12883                           ;SSD1306oLED.c: 417: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12884  00528C  0E20               	movlw	32
 12885  00528E  0100               	movlb	0	; () banked
 12886  005290  6F62               	movwf	??_oled_devInit& (0+255),b
 12887  005292  0E29               	movlw	41
 12888  005294                     u11797:
 12889  005294  2EE8               	decfsz	wreg,f,c
 12890  005296  D7FE               	bra	u11797
 12891  005298  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12892  00529A  D7FC               	bra	u11797
 12893  00529C  D000               	nop2	
 12894                           
 12895                           ;SSD1306oLED.c: 418: LATBbits.LATB2=1;
 12896  00529E  848A               	bsf	3978,2,c	;volatile
 12897                           
 12898                           ;SSD1306oLED.c: 419: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12899  0052A0  0E10               	movlw	16
 12900  0052A2  0100               	movlb	0	; () banked
 12901  0052A4  6F62               	movwf	??_oled_devInit& (0+255),b
 12902  0052A6  0E94               	movlw	148
 12903  0052A8                     u11807:
 12904  0052A8  2EE8               	decfsz	wreg,f,c
 12905  0052AA  D7FE               	bra	u11807
 12906  0052AC  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12907  0052AE  D7FC               	bra	u11807
 12908  0052B0  F000               	nop	
 12909                           
 12910                           ;SSD1306oLED.c: 421: oled_writeCommand(0xa1);
 12911  0052B2  0EA1               	movlw	161
 12912  0052B4  EC83  F031         	call	_oled_writeCommand
 12913                           
 12914                           ;SSD1306oLED.c: 422: oled_writeCommand(0xc0);
 12915  0052B8  0EC0               	movlw	192
 12916  0052BA  EC83  F031         	call	_oled_writeCommand
 12917                           
 12918                           ;SSD1306oLED.c: 423: oled_writeCommand(0xa3);
 12919  0052BE  0EA3               	movlw	163
 12920  0052C0  EC83  F031         	call	_oled_writeCommand
 12921                           
 12922                           ;SSD1306oLED.c: 424: oled_powerControl(0x07);
 12923  0052C4  0E07               	movlw	7
 12924  0052C6  ECE6  F031         	call	_oled_powerControl
 12925                           
 12926                           ;SSD1306oLED.c: 425: oled_regulorResistorSelect(0x05);
 12927  0052CA  0E05               	movlw	5
 12928  0052CC  ECDE  F031         	call	_oled_regulorResistorSelect
 12929                           
 12930                           ;SSD1306oLED.c: 426: oled_setContrastControlRegister(Contrast_level);
 12931  0052D0  505B               	movf	_Contrast_level,w,c
 12932  0052D2  ECAE  F031         	call	_oled_setContrastControlRegister
 12933                           
 12934                           ;SSD1306oLED.c: 427: oled_initialDispayLine(0x00);
 12935  0052D6  0E00               	movlw	0
 12936  0052D8  ECEE  F031         	call	_oled_initialDispayLine
 12937                           
 12938                           ;SSD1306oLED.c: 428: oled_writeCommand(0xF8);
 12939  0052DC  0EF8               	movlw	248
 12940  0052DE  EC83  F031         	call	_oled_writeCommand
 12941                           
 12942                           ;SSD1306oLED.c: 429: oled_writeCommand(0x00);
 12943  0052E2  0E00               	movlw	0
 12944  0052E4  EC83  F031         	call	_oled_writeCommand
 12945                           
 12946                           ;SSD1306oLED.c: 430: oled_writeCommand(0xaf);
 12947  0052E8  0EAF               	movlw	175
 12948  0052EA  EC83  F031         	call	_oled_writeCommand
 12949  0052EE  0012               	return		;funcret
 12950  0052F0                     __end_of_oled_devInit:
 12951                           	opt stack 0
 12952                           tblptru	equ	0xFF8
 12953                           tblptrh	equ	0xFF7
 12954                           tblptrl	equ	0xFF6
 12955                           tablat	equ	0xFF5
 12956                           prodh	equ	0xFF4
 12957                           prodl	equ	0xFF3
 12958                           intcon	equ	0xFF2
 12959                           intcon3	equ	0xFF0
 12960                           postinc0	equ	0xFEE
 12961                           wreg	equ	0xFE8
 12962                           indf1	equ	0xFE7
 12963                           postdec1	equ	0xFE5
 12964                           fsr1h	equ	0xFE2
 12965                           fsr1l	equ	0xFE1
 12966                           indf2	equ	0xFDF
 12967                           fsr2h	equ	0xFDA
 12968                           fsr2l	equ	0xFD9
 12969                           status	equ	0xFD8
 12970                           
 12971 ;; *************** function _oled_setContrastControlRegister *****************
 12972 ;; Defined at:
 12973 ;;		line 477 in file "../Includes/Drivers/SSD1306oLED.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  mod             1    wreg     unsigned char 
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  mod             1    1[BANK0 ] unsigned char 
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  1    wreg      void 
 12980 ;; Registers used:
 12981 ;;		wreg, status,2, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12987 ;;      Params:         0       0       0       0       0       0       0       0       0
 12988 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12990 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12991 ;;Total ram usage:        1 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:   12
 12994 ;; This function calls:
 12995 ;;		_oled_writeCommand
 12996 ;; This function is called by:
 12997 ;;		_oled_devInit
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text31
 13002  00635C                     __ptext31:
 13003                           	opt stack 0
 13004  00635C                     _oled_setContrastControlRegister:
 13005                           	opt stack 16
 13006                           
 13007                           ;incstack = 0
 13008                           ;oled_setContrastControlRegister@mod stored from wreg
 13009  00635C  0100               	movlb	0	; () banked
 13010  00635E  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13011                           
 13012                           ;SSD1306oLED.c: 479: oled_writeCommand(0x81);
 13013  006360  0E81               	movlw	129
 13014  006362  EC83  F031         	call	_oled_writeCommand
 13015                           
 13016                           ;SSD1306oLED.c: 480: oled_writeCommand(mod);
 13017  006366  0100               	movlb	0	; () banked
 13018  006368  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13019  00636A  EC83  F031         	call	_oled_writeCommand
 13020  00636E  0012               	return	
 13021  006370                     __end_of_oled_setContrastControlRegister:
 13022                           	opt stack 0
 13023                           tblptru	equ	0xFF8
 13024                           tblptrh	equ	0xFF7
 13025                           tblptrl	equ	0xFF6
 13026                           tablat	equ	0xFF5
 13027                           prodh	equ	0xFF4
 13028                           prodl	equ	0xFF3
 13029                           intcon	equ	0xFF2
 13030                           intcon3	equ	0xFF0
 13031                           postinc0	equ	0xFEE
 13032                           wreg	equ	0xFE8
 13033                           indf1	equ	0xFE7
 13034                           postdec1	equ	0xFE5
 13035                           fsr1h	equ	0xFE2
 13036                           fsr1l	equ	0xFE1
 13037                           indf2	equ	0xFDF
 13038                           fsr2h	equ	0xFDA
 13039                           fsr2l	equ	0xFD9
 13040                           status	equ	0xFD8
 13041                           
 13042 ;; *************** function _oled_regulorResistorSelect *****************
 13043 ;; Defined at:
 13044 ;;		line 505 in file "../Includes/Drivers/SSD1306oLED.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;  r               1    wreg     unsigned char 
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;  r               1    1[BANK0 ] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0
 13059 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13061 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13062 ;;Total ram usage:        1 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   12
 13065 ;; This function calls:
 13066 ;;		_oled_writeCommand
 13067 ;; This function is called by:
 13068 ;;		_oled_devInit
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text32
 13073  0063BC                     __ptext32:
 13074                           	opt stack 0
 13075  0063BC                     _oled_regulorResistorSelect:
 13076                           	opt stack 16
 13077                           
 13078                           ;incstack = 0
 13079                           ;oled_regulorResistorSelect@r stored from wreg
 13080  0063BC  0100               	movlb	0	; () banked
 13081  0063BE  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13082                           
 13083                           ;SSD1306oLED.c: 507: oled_writeCommand((0x20|r));
 13084  0063C0  0100               	movlb	0	; () banked
 13085  0063C2  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13086  0063C4  0920               	iorlw	32
 13087  0063C6  EC83  F031         	call	_oled_writeCommand
 13088  0063CA  0012               	return	
 13089  0063CC                     __end_of_oled_regulorResistorSelect:
 13090                           	opt stack 0
 13091                           tblptru	equ	0xFF8
 13092                           tblptrh	equ	0xFF7
 13093                           tblptrl	equ	0xFF6
 13094                           tablat	equ	0xFF5
 13095                           prodh	equ	0xFF4
 13096                           prodl	equ	0xFF3
 13097                           intcon	equ	0xFF2
 13098                           intcon3	equ	0xFF0
 13099                           postinc0	equ	0xFEE
 13100                           wreg	equ	0xFE8
 13101                           indf1	equ	0xFE7
 13102                           postdec1	equ	0xFE5
 13103                           fsr1h	equ	0xFE2
 13104                           fsr1l	equ	0xFE1
 13105                           indf2	equ	0xFDF
 13106                           fsr2h	equ	0xFDA
 13107                           fsr2l	equ	0xFD9
 13108                           status	equ	0xFD8
 13109                           
 13110 ;; *************** function _oled_powerControl *****************
 13111 ;; Defined at:
 13112 ;;		line 492 in file "../Includes/Drivers/SSD1306oLED.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  vol             1    wreg     unsigned char 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  vol             1    1[BANK0 ] unsigned char 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		wreg, status,2, status,0, cstack
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13126 ;;      Params:         0       0       0       0       0       0       0       0       0
 13127 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13129 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13130 ;;Total ram usage:        1 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:   12
 13133 ;; This function calls:
 13134 ;;		_oled_writeCommand
 13135 ;; This function is called by:
 13136 ;;		_oled_devInit
 13137 ;; This function uses a non-reentrant model
 13138 ;;
 13139                           
 13140                           	psect	text33
 13141  0063CC                     __ptext33:
 13142                           	opt stack 0
 13143  0063CC                     _oled_powerControl:
 13144                           	opt stack 16
 13145                           
 13146                           ;incstack = 0
 13147                           ;oled_powerControl@vol stored from wreg
 13148  0063CC  0100               	movlb	0	; () banked
 13149  0063CE  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13150                           
 13151                           ;SSD1306oLED.c: 494: oled_writeCommand((0x28|vol));
 13152  0063D0  0100               	movlb	0	; () banked
 13153  0063D2  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13154  0063D4  0928               	iorlw	40
 13155  0063D6  EC83  F031         	call	_oled_writeCommand
 13156  0063DA  0012               	return	
 13157  0063DC                     __end_of_oled_powerControl:
 13158                           	opt stack 0
 13159                           tblptru	equ	0xFF8
 13160                           tblptrh	equ	0xFF7
 13161                           tblptrl	equ	0xFF6
 13162                           tablat	equ	0xFF5
 13163                           prodh	equ	0xFF4
 13164                           prodl	equ	0xFF3
 13165                           intcon	equ	0xFF2
 13166                           intcon3	equ	0xFF0
 13167                           postinc0	equ	0xFEE
 13168                           wreg	equ	0xFE8
 13169                           indf1	equ	0xFE7
 13170                           postdec1	equ	0xFE5
 13171                           fsr1h	equ	0xFE2
 13172                           fsr1l	equ	0xFE1
 13173                           indf2	equ	0xFDF
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function _oled_initialDispayLine *****************
 13179 ;; Defined at:
 13180 ;;		line 485 in file "../Includes/Drivers/SSD1306oLED.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  line            1    wreg     unsigned char 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  line            1    1[BANK0 ] unsigned char 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0, cstack
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13194 ;;      Params:         0       0       0       0       0       0       0       0       0
 13195 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13197 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13198 ;;Total ram usage:        1 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:   12
 13201 ;; This function calls:
 13202 ;;		_oled_writeCommand
 13203 ;; This function is called by:
 13204 ;;		_oled_devInit
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text34
 13209  0063DC                     __ptext34:
 13210                           	opt stack 0
 13211  0063DC                     _oled_initialDispayLine:
 13212                           	opt stack 16
 13213                           
 13214                           ;incstack = 0
 13215                           ;oled_initialDispayLine@line stored from wreg
 13216  0063DC  0100               	movlb	0	; () banked
 13217  0063DE  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13218                           
 13219                           ;SSD1306oLED.c: 487: line|=0x40;
 13220  0063E0  0100               	movlb	0	; () banked
 13221  0063E2  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;SSD1306oLED.c: 488: oled_writeCommand(line);
 13225  0063E4  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13226  0063E6  EC83  F031         	call	_oled_writeCommand
 13227  0063EA  0012               	return	
 13228  0063EC                     __end_of_oled_initialDispayLine:
 13229                           	opt stack 0
 13230                           tblptru	equ	0xFF8
 13231                           tblptrh	equ	0xFF7
 13232                           tblptrl	equ	0xFF6
 13233                           tablat	equ	0xFF5
 13234                           prodh	equ	0xFF4
 13235                           prodl	equ	0xFF3
 13236                           intcon	equ	0xFF2
 13237                           intcon3	equ	0xFF0
 13238                           postinc0	equ	0xFEE
 13239                           wreg	equ	0xFE8
 13240                           indf1	equ	0xFE7
 13241                           postdec1	equ	0xFE5
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           indf2	equ	0xFDF
 13245                           fsr2h	equ	0xFDA
 13246                           fsr2l	equ	0xFD9
 13247                           status	equ	0xFD8
 13248                           
 13249 ;; *************** function _oled_displayOff *****************
 13250 ;; Defined at:
 13251 ;;		line 448 in file "../Includes/Drivers/SSD1306oLED.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  state           1    wreg     unsigned char 
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;  state           1    0[COMRAM] unsigned char 
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      void 
 13258 ;; Registers used:
 13259 ;;		wreg, cstack
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13265 ;;      Params:         0       0       0       0       0       0       0       0       0
 13266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13269 ;;Total ram usage:        0 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:   12
 13272 ;; This function calls:
 13273 ;;		_oled_writeCommand
 13274 ;; This function is called by:
 13275 ;;		_moteApp_GoToSleep
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           	psect	text35
 13280  006460                     __ptext35:
 13281                           	opt stack 0
 13282  006460                     _oled_displayOff:
 13283                           	opt stack 15
 13284                           
 13285                           ;SSD1306oLED.c: 450: oled_writeCommand(0xae);
 13286                           
 13287                           ;incstack = 0
 13288  006460  0EAE               	movlw	174
 13289  006462  EC83  F031         	call	_oled_writeCommand
 13290  006466  0012               	return		;funcret
 13291  006468                     __end_of_oled_displayOff:
 13292                           	opt stack 0
 13293                           tblptru	equ	0xFF8
 13294                           tblptrh	equ	0xFF7
 13295                           tblptrl	equ	0xFF6
 13296                           tablat	equ	0xFF5
 13297                           prodh	equ	0xFF4
 13298                           prodl	equ	0xFF3
 13299                           intcon	equ	0xFF2
 13300                           intcon3	equ	0xFF0
 13301                           postinc0	equ	0xFEE
 13302                           wreg	equ	0xFE8
 13303                           indf1	equ	0xFE7
 13304                           postdec1	equ	0xFE5
 13305                           fsr1h	equ	0xFE2
 13306                           fsr1l	equ	0xFE1
 13307                           indf2	equ	0xFDF
 13308                           fsr2h	equ	0xFDA
 13309                           fsr2l	equ	0xFD9
 13310                           status	equ	0xFD8
 13311                           
 13312 ;; *************** function _moduleSleep *****************
 13313 ;; Defined at:
 13314 ;;		line 197 in file "../Includes/Board/MOTEapp.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13328 ;;      Params:         0       0       0       0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13330 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13331 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13332 ;;Total ram usage:        1 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:   14
 13335 ;; This function calls:
 13336 ;;		_sendCommand
 13337 ;; This function is called by:
 13338 ;;		_moteApp_GoToSleep
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text36
 13343  006190                     __ptext36:
 13344                           	opt stack 0
 13345  006190                     _moduleSleep:
 13346                           	opt stack 13
 13347                           
 13348                           ;MOTEapp.c: 199: sendCommand("sys sleep 999999999");
 13349                           
 13350                           ;incstack = 0
 13351  006190  0E83               	movlw	low STR_22
 13352  006192  0100               	movlb	0	; () banked
 13353  006194  6F61               	movwf	sendCommand@string& (0+255),b
 13354  006196  0E7A               	movlw	high STR_22
 13355  006198  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13356  00619A  EC3B  F02F         	call	_sendCommand	;wreg free
 13357  00619E                     
 13358                           ;MOTEapp.c: 201: ;
 13359  00619E  B89D               	btfsc	3997,4,c	;volatile
 13360  0061A0  D7FE               	goto	l373
 13361                           
 13362                           ;MOTEapp.c: 202: _delay((unsigned long)((16)*(48000000/4000.0)));
 13363  0061A2  0EFA               	movlw	250
 13364  0061A4  0100               	movlb	0	; () banked
 13365  0061A6  6F63               	movwf	??_moduleSleep& (0+255),b
 13366  0061A8  0E58               	movlw	88
 13367  0061AA                     u11817:
 13368  0061AA  2EE8               	decfsz	wreg,f,c
 13369  0061AC  D7FE               	bra	u11817
 13370  0061AE  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13371  0061B0  D7FC               	bra	u11817
 13372  0061B2  F000               	nop	
 13373  0061B4  0012               	return		;funcret
 13374  0061B6                     __end_of_moduleSleep:
 13375                           	opt stack 0
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodh	equ	0xFF4
 13381                           prodl	equ	0xFF3
 13382                           intcon	equ	0xFF2
 13383                           intcon3	equ	0xFF0
 13384                           postinc0	equ	0xFEE
 13385                           wreg	equ	0xFE8
 13386                           indf1	equ	0xFE7
 13387                           postdec1	equ	0xFE5
 13388                           fsr1h	equ	0xFE2
 13389                           fsr1l	equ	0xFE1
 13390                           indf2	equ	0xFDF
 13391                           fsr2h	equ	0xFDA
 13392                           fsr2l	equ	0xFD9
 13393                           status	equ	0xFD8
 13394                           
 13395 ;; *************** function _moduleResync *****************
 13396 ;; Defined at:
 13397 ;;		line 156 in file "../Includes/Board/MOTEapp.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13402 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  1    wreg      void 
 13405 ;; Registers used:
 13406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13412 ;;      Params:         0       0       0       0       0       0       0       0       0
 13413 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13415 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13416 ;;Total ram usage:        3 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:   14
 13419 ;; This function calls:
 13420 ;;		_MOTEapp_getModuleResponse
 13421 ;;		_moteApp_delayms
 13422 ;;		_sendCommand
 13423 ;; This function is called by:
 13424 ;;		_main
 13425 ;;		_moteApp_GoToSleep
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text37
 13430  005062                     __ptext37:
 13431                           	opt stack 0
 13432  005062                     _moduleResync:
 13433                           	opt stack 13
 13434                           
 13435                           ;MOTEapp.c: 158: bool escapeEvent = 0;
 13436                           
 13437                           ;incstack = 0
 13438  005062  0E00               	movlw	0
 13439  005064  0100               	movlb	0	; () banked
 13440  005066  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13441                           
 13442                           ;MOTEapp.c: 159: uint16_t escapeCounter = 0;
 13443  005068  0E00               	movlw	0
 13444  00506A  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13445  00506C  0E00               	movlw	0
 13446  00506E  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;MOTEapp.c: 167: TXSTAbits.TXEN = 0;
 13450  005070  9AAC               	bcf	4012,5,c	;volatile
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;MOTEapp.c: 168: LATCbits.LATC6 = 0;
 13454  005072  9C8B               	bcf	3979,6,c	;volatile
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;MOTEapp.c: 169: moteApp_delayms(10);
 13458  005074  0E00               	movlw	0
 13459  005076  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13460  005078  0E0A               	movlw	10
 13461  00507A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13462  00507C  EC88  F02F         	call	_moteApp_delayms	;wreg free
 13463                           
 13464                           ;MOTEapp.c: 170: TXSTAbits.TXEN = 1;
 13465  005080  8AAC               	bsf	4012,5,c	;volatile
 13466                           
 13467                           ;MOTEapp.c: 171: moteApp_delayms(5);
 13468  005082  0E00               	movlw	0
 13469  005084  0100               	movlb	0	; () banked
 13470  005086  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13471  005088  0E05               	movlw	5
 13472  00508A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13473  00508C  EC88  F02F         	call	_moteApp_delayms	;wreg free
 13474                           
 13475                           ;MOTEapp.c: 173: TXREG = 0x55;
 13476  005090  0E55               	movlw	85
 13477  005092  6EAD               	movwf	4013,c	;volatile
 13478  005094                     
 13479                           ;MOTEapp.c: 175: {};
 13480  005094  A2AC               	btfss	4012,1,c	;volatile
 13481  005096  D7FE               	goto	l355
 13482                           
 13483                           ;MOTEapp.c: 177: sendCommand("z");
 13484  005098  0EFD               	movlw	low STR_21
 13485  00509A  0100               	movlb	0	; () banked
 13486  00509C  6F61               	movwf	sendCommand@string& (0+255),b
 13487  00509E  0E7F               	movlw	high STR_21
 13488  0050A0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13489  0050A2  EC3B  F02F         	call	_sendCommand	;wreg free
 13490                           
 13491                           ;MOTEapp.c: 179: moteApp_delayms(40);
 13492  0050A6  0E00               	movlw	0
 13493  0050A8  0100               	movlb	0	; () banked
 13494  0050AA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13495  0050AC  0E28               	movlw	40
 13496  0050AE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13497  0050B0  EC88  F02F         	call	_moteApp_delayms	;wreg free
 13498                           
 13499                           ;MOTEapp.c: 180: while (escapeEvent)
 13500  0050B4  D013               	goto	l361
 13501  0050B6                     
 13502                           ;MOTEapp.c: 181: {
 13503                           ;MOTEapp.c: 182: if(MOTEapp_getModuleResponse())
 13504  0050B6  ECAB  F02B         	call	_MOTEapp_getModuleResponse	;wreg free
 13505  0050BA  0900               	iorlw	0
 13506  0050BC  B4D8               	btfsc	status,2,c
 13507  0050BE  D003               	goto	l359
 13508                           
 13509                           ;MOTEapp.c: 183: escapeEvent = 1;
 13510  0050C0  0E01               	movlw	1
 13511  0050C2  0100               	movlb	0	; () banked
 13512  0050C4  D00A               	goto	L6
 13513  0050C6                     l359:
 13514                           
 13515                           ;MOTEapp.c: 184: else if (++escapeCounter > 5000)
 13516                           
 13517                           ; BSR set to: 0
 13518  0050C6  0100               	movlb	0	; () banked
 13519  0050C8  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13520  0050CA  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13521  0050CC  0E89               	movlw	137
 13522  0050CE  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13523  0050D0  0E13               	movlw	19
 13524  0050D2  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13525  0050D4  A0D8               	btfss	status,0,c
 13526  0050D6  D002               	goto	l361
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;MOTEapp.c: 185: escapeEvent = 1;
 13530  0050D8  0E01               	movlw	1
 13531  0050DA                     L6:
 13532  0050DA  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13533  0050DC                     l361:
 13534                           
 13535                           ; BSR set to: 0
 13536                           
 13537                           ; BSR set to: 0
 13538  0050DC  0100               	movlb	0	; () banked
 13539  0050DE  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13540  0050E0  B4D8               	btfsc	status,2,c
 13541  0050E2  0012               	return	
 13542  0050E4  D7E8               	goto	l358
 13543  0050E6                     __end_of_moduleResync:
 13544                           	opt stack 0
 13545                           tblptru	equ	0xFF8
 13546                           tblptrh	equ	0xFF7
 13547                           tblptrl	equ	0xFF6
 13548                           tablat	equ	0xFF5
 13549                           prodh	equ	0xFF4
 13550                           prodl	equ	0xFF3
 13551                           intcon	equ	0xFF2
 13552                           intcon3	equ	0xFF0
 13553                           postinc0	equ	0xFEE
 13554                           wreg	equ	0xFE8
 13555                           indf1	equ	0xFE7
 13556                           postdec1	equ	0xFE5
 13557                           fsr1h	equ	0xFE2
 13558                           fsr1l	equ	0xFE1
 13559                           indf2	equ	0xFDF
 13560                           fsr2h	equ	0xFDA
 13561                           fsr2l	equ	0xFD9
 13562                           status	equ	0xFD8
 13563                           
 13564 ;; *************** function _MOTEapp_getModuleResponse *****************
 13565 ;; Defined at:
 13566 ;;		line 1159 in file "../Includes/Board/MOTEapp.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;		None
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13571 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  1    wreg      unsigned char 
 13574 ;; Registers used:
 13575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0
 13582 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13584 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13585 ;;Total ram usage:        2 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:   12
 13588 ;; This function calls:
 13589 ;;		_EUSART_Read
 13590 ;; This function is called by:
 13591 ;;		_moduleResync
 13592 ;;		_moteHandler
 13593 ;;		_moteApp_setSensorsInput
 13594 ;;		_moteApp_getTempValue
 13595 ;;		_moteApp_getLightValue
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text38
 13600  005756                     __ptext38:
 13601                           	opt stack 0
 13602  005756                     _MOTEapp_getModuleResponse:
 13603                           	opt stack 15
 13604                           
 13605                           ;MOTEapp.c: 1161: bool terminatorReceived = 0;
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;incstack = 0
 13609  005756  0E00               	movlw	0
 13610  005758  0100               	movlb	0	; () banked
 13611  00575A  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13612                           
 13613                           ;MOTEapp.c: 1163: if ((eusartRxCount))
 13614  00575C  51F7               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13615  00575E  B4D8               	btfsc	status,2,c
 13616  005760  D02B               	goto	l659
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;MOTEapp.c: 1164: {
 13620                           ;MOTEapp.c: 1165: uint8_t bufferByte = 0;
 13621  005762  0E00               	movlw	0
 13622  005764  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;MOTEapp.c: 1166: bufferByte = EUSART_Read();
 13626  005766  ECCA  F02E         	call	_EUSART_Read	;wreg free
 13627  00576A  0100               	movlb	0	; () banked
 13628  00576C  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;MOTEapp.c: 1168: if (bufferByte == 0x0D)
 13632  00576E  0E0D               	movlw	13
 13633  005770  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13634  005772  A4D8               	btfss	status,2,c
 13635  005774  D00F               	goto	l654
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;MOTEapp.c: 1169: {
 13639                           ;MOTEapp.c: 1170: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13640  005776  51F4               	movf	_moduleBufferIndex& (0+255),w,b
 13641  005778  0D01               	mullw	1
 13642  00577A  0E90               	movlw	low _moduleResonseBuffer
 13643  00577C  24F3               	addwf	prodl,w,c
 13644  00577E  6ED9               	movwf	fsr2l,c
 13645  005780  0E01               	movlw	high _moduleResonseBuffer
 13646  005782  20F4               	addwfc	prodh,w,c
 13647  005784  6EDA               	movwf	fsr2h,c
 13648  005786  0E00               	movlw	0
 13649  005788  6EDF               	movwf	indf2,c
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;MOTEapp.c: 1171: terminatorReceived = 1;
 13653  00578A  0E01               	movlw	1
 13654  00578C  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;MOTEapp.c: 1172: moduleBufferIndex = 0;
 13658  00578E  0E00               	movlw	0
 13659  005790  6FF4               	movwf	_moduleBufferIndex& (0+255),b
 13660                           
 13661                           ;MOTEapp.c: 1173: }
 13662  005792  D012               	goto	l659
 13663  005794                     l654:
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;MOTEapp.c: 1174: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13667                           
 13668                           ; BSR set to: 0
 13669  005794  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13670  005796  B4D8               	btfsc	status,2,c
 13671  005798  D00F               	goto	l659
 13672                           
 13673                           ; BSR set to: 0
 13674  00579A  0E0A               	movlw	10
 13675  00579C  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13676  00579E  B4D8               	btfsc	status,2,c
 13677  0057A0  D00B               	goto	l659
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;MOTEapp.c: 1178: else
 13681                           ;MOTEapp.c: 1179: {
 13682                           ;MOTEapp.c: 1180: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13683                           
 13684                           ; BSR set to: 0
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;MOTEapp.c: 1175: {
 13688                           ;MOTEapp.c: 1177: }
 13689  0057A2  51F4               	movf	_moduleBufferIndex& (0+255),w,b
 13690  0057A4  0D01               	mullw	1
 13691  0057A6  0E90               	movlw	low _moduleResonseBuffer
 13692  0057A8  24F3               	addwf	prodl,w,c
 13693  0057AA  6ED9               	movwf	fsr2l,c
 13694  0057AC  0E01               	movlw	high _moduleResonseBuffer
 13695  0057AE  20F4               	addwfc	prodh,w,c
 13696  0057B0  6EDA               	movwf	fsr2h,c
 13697  0057B2  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;MOTEapp.c: 1182: moduleBufferIndex++;
 13701  0057B6  2BF4               	incf	_moduleBufferIndex& (0+255),f,b
 13702  0057B8                     l659:
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;MOTEapp.c: 1183: }
 13706                           ;MOTEapp.c: 1184: }
 13707                           ;MOTEapp.c: 1185: return terminatorReceived;
 13708                           
 13709                           ; BSR set to: 0
 13710                           
 13711                           ; BSR set to: 0
 13712                           
 13713                           ; BSR set to: 0
 13714  0057B8  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13715  0057BA  0012               	return	
 13716  0057BC                     __end_of_MOTEapp_getModuleResponse:
 13717                           	opt stack 0
 13718                           tblptru	equ	0xFF8
 13719                           tblptrh	equ	0xFF7
 13720                           tblptrl	equ	0xFF6
 13721                           tablat	equ	0xFF5
 13722                           prodh	equ	0xFF4
 13723                           prodl	equ	0xFF3
 13724                           intcon	equ	0xFF2
 13725                           intcon3	equ	0xFF0
 13726                           postinc0	equ	0xFEE
 13727                           wreg	equ	0xFE8
 13728                           indf1	equ	0xFE7
 13729                           postdec1	equ	0xFE5
 13730                           fsr1h	equ	0xFE2
 13731                           fsr1l	equ	0xFE1
 13732                           indf2	equ	0xFDF
 13733                           fsr2h	equ	0xFDA
 13734                           fsr2l	equ	0xFD9
 13735                           status	equ	0xFD8
 13736                           
 13737 ;; *************** function _EUSART_FlushBuffer *****************
 13738 ;; Defined at:
 13739 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13740 ;; Parameters:    Size  Location     Type
 13741 ;;		None
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;  index           1    0[BANK0 ] unsigned char 
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  1    wreg      void 
 13746 ;; Registers used:
 13747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13753 ;;      Params:         0       0       0       0       0       0       0       0       0
 13754 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13756 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13757 ;;Total ram usage:        1 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:   11
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_test_powerup
 13764 ;;		_moteApp_GoToSleep
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           	psect	text39
 13769  005B9E                     __ptext39:
 13770                           	opt stack 0
 13771  005B9E                     _EUSART_FlushBuffer:
 13772                           	opt stack 18
 13773                           
 13774                           ;eusart.c: 204: uint8_t index;
 13775                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;incstack = 0
 13779  005B9E  0E00               	movlw	0
 13780  005BA0  0100               	movlb	0	; () banked
 13781  005BA2  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13782  005BA4                     l8803:
 13783                           
 13784                           ; BSR set to: 0
 13785  005BA4  0E3F               	movlw	63
 13786  005BA6  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13787  005BA8  D001               	goto	l1349
 13788  005BAA  D00C               	goto	u6820
 13789  005BAC                     l1349:
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;eusart.c: 206: {
 13793                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13794                           
 13795                           ; BSR set to: 0
 13796  005BAC  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13797  005BAE  0D01               	mullw	1
 13798  005BB0  0E00               	movlw	low _eusartRxBuffer
 13799  005BB2  24F3               	addwf	prodl,w,c
 13800  005BB4  6ED9               	movwf	fsr2l,c
 13801  005BB6  0E02               	movlw	high _eusartRxBuffer
 13802  005BB8  20F4               	addwfc	prodh,w,c
 13803  005BBA  6EDA               	movwf	fsr2h,c
 13804  005BBC  0E00               	movlw	0
 13805  005BBE  6EDF               	movwf	indf2,c
 13806                           
 13807                           ; BSR set to: 0
 13808  005BC0  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13809  005BC2  D7F0               	goto	l8803
 13810  005BC4                     u6820:
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;eusart.c: 208: }
 13814                           ;eusart.c: 209: eusartRxHead = 0;
 13815                           
 13816                           ; BSR set to: 0
 13817  005BC4  0E00               	movlw	0
 13818  005BC6  6FE3               	movwf	_eusartRxHead& (0+255),b
 13819                           
 13820                           ;eusart.c: 210: eusartRxTail = 0;
 13821  005BC8  0E00               	movlw	0
 13822  005BCA  6FE2               	movwf	_eusartRxTail& (0+255),b
 13823                           
 13824                           ;eusart.c: 211: eusartRxCount = 0;
 13825  005BCC  0E00               	movlw	0
 13826  005BCE  6FF7               	movwf	_eusartRxCount& (0+255),b	;volatile
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13830  005BD0  989D               	bcf	3997,4,c	;volatile
 13831                           
 13832                           ;eusart.c: 214: eusartTxHead = 0;
 13833  005BD2  0E00               	movlw	0
 13834  005BD4  6FE6               	movwf	_eusartTxHead& (0+255),b
 13835                           
 13836                           ;eusart.c: 215: eusartTxTail = 0;
 13837  005BD6  0E00               	movlw	0
 13838  005BD8  6FE5               	movwf	_eusartTxTail& (0+255),b
 13839                           
 13840                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13841  005BDA  0E40               	movlw	64
 13842  005BDC  6FE4               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13843                           
 13844                           ; BSR set to: 0
 13845  005BDE  0012               	return		;funcret
 13846  005BE0                     __end_of_EUSART_FlushBuffer:
 13847                           	opt stack 0
 13848                           tblptru	equ	0xFF8
 13849                           tblptrh	equ	0xFF7
 13850                           tblptrl	equ	0xFF6
 13851                           tablat	equ	0xFF5
 13852                           prodh	equ	0xFF4
 13853                           prodl	equ	0xFF3
 13854                           intcon	equ	0xFF2
 13855                           intcon3	equ	0xFF0
 13856                           postinc0	equ	0xFEE
 13857                           wreg	equ	0xFE8
 13858                           indf1	equ	0xFE7
 13859                           postdec1	equ	0xFE5
 13860                           fsr1h	equ	0xFE2
 13861                           fsr1l	equ	0xFE1
 13862                           indf2	equ	0xFDF
 13863                           fsr2h	equ	0xFDA
 13864                           fsr2l	equ	0xFD9
 13865                           status	equ	0xFD8
 13866                           
 13867 ;; *************** function _TMR2_ReadTimer *****************
 13868 ;; Defined at:
 13869 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;		None
 13872 ;; Auto vars:     Size  Location     Type
 13873 ;;  readVal         1    0[BANK0 ] unsigned char 
 13874 ;; Return value:  Size  Location     Type
 13875 ;;                  1    wreg      unsigned char 
 13876 ;; Registers used:
 13877 ;;		wreg, status,2
 13878 ;; Tracked objects:
 13879 ;;		On entry : 0/0
 13880 ;;		On exit  : 0/0
 13881 ;;		Unchanged: 0/0
 13882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13883 ;;      Params:         0       0       0       0       0       0       0       0       0
 13884 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13885 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13886 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13887 ;;Total ram usage:        1 bytes
 13888 ;; Hardware stack levels used:    1
 13889 ;; Hardware stack levels required when called:   11
 13890 ;; This function calls:
 13891 ;;		Nothing
 13892 ;; This function is called by:
 13893 ;;		_moteRunningProcess
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text40
 13898  00642E                     __ptext40:
 13899                           	opt stack 0
 13900  00642E                     _TMR2_ReadTimer:
 13901                           	opt stack 17
 13902                           
 13903                           ;tmr2.c: 88: uint8_t readVal;
 13904                           ;tmr2.c: 90: readVal = TMR2;
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;incstack = 0
 13908  00642E  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13909                           
 13910                           ;tmr2.c: 92: return readVal;
 13911  006432  0100               	movlb	0	; () banked
 13912  006434  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13913  006436  0012               	return	
 13914  006438                     __end_of_TMR2_ReadTimer:
 13915                           	opt stack 0
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           intcon3	equ	0xFF0
 13924                           postinc0	equ	0xFEE
 13925                           wreg	equ	0xFE8
 13926                           indf1	equ	0xFE7
 13927                           postdec1	equ	0xFE5
 13928                           fsr1h	equ	0xFE2
 13929                           fsr1l	equ	0xFE1
 13930                           indf2	equ	0xFDF
 13931                           fsr2h	equ	0xFDA
 13932                           fsr2l	equ	0xFD9
 13933                           status	equ	0xFD8
 13934                           
 13935 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13936 ;; Defined at:
 13937 ;;		line 1066 in file "../Includes/Board/MOTEapp.c"
 13938 ;; Parameters:    Size  Location     Type
 13939 ;;  dr              1    wreg     unsigned char 
 13940 ;; Auto vars:     Size  Location     Type
 13941 ;;  dr              1    4[BANK0 ] unsigned char 
 13942 ;; Return value:  Size  Location     Type
 13943 ;;                  1    wreg      void 
 13944 ;; Registers used:
 13945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13946 ;; Tracked objects:
 13947 ;;		On entry : 0/0
 13948 ;;		On exit  : 0/0
 13949 ;;		Unchanged: 0/0
 13950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13951 ;;      Params:         0       0       0       0       0       0       0       0       0
 13952 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13953 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13954 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13955 ;;Total ram usage:        2 bytes
 13956 ;; Hardware stack levels used:    1
 13957 ;; Hardware stack levels required when called:   14
 13958 ;; This function calls:
 13959 ;;		_sendCommand
 13960 ;; This function is called by:
 13961 ;;		_moteRunningProcess
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965                           	psect	text41
 13966  002B04                     __ptext41:
 13967                           	opt stack 0
 13968  002B04                     _MOTEapp_SetDataRateSetting:
 13969                           	opt stack 14
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;incstack = 0
 13973                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13974  002B04  0100               	movlb	0	; () banked
 13975  002B06  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13976                           
 13977                           ;MOTEapp.c: 1068: if (dr != 8)
 13978  002B08  0E08               	movlw	8
 13979  002B0A  0100               	movlb	0	; () banked
 13980  002B0C  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13981  002B0E  B4D8               	btfsc	status,2,c
 13982  002B10  D06A               	goto	l624
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;MOTEapp.c: 1069: {
 13986                           ;MOTEapp.c: 1070: sendCommand("mac set adr off");
 13987  002B12  0EA4               	movlw	low STR_166
 13988  002B14  6F61               	movwf	sendCommand@string& (0+255),b
 13989  002B16  0E7C               	movlw	high STR_166
 13990  002B18  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13991  002B1A  EC3B  F02F         	call	_sendCommand	;wreg free
 13992                           
 13993                           ;MOTEapp.c: 1071: _delay((unsigned long)((16)*(48000000/4000.0)));
 13994  002B1E  0EFA               	movlw	250
 13995  002B20  0100               	movlb	0	; () banked
 13996  002B22  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13997  002B24  0E58               	movlw	88
 13998  002B26                     u11827:
 13999  002B26  2EE8               	decfsz	wreg,f,c
 14000  002B28  D7FE               	bra	u11827
 14001  002B2A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14002  002B2C  D7FC               	bra	u11827
 14003  002B2E  F000               	nop	
 14004                           
 14005                           ;MOTEapp.c: 1072: _delay((unsigned long)((16)*(48000000/4000.0)));
 14006  002B30  0EFA               	movlw	250
 14007  002B32  0100               	movlb	0	; () banked
 14008  002B34  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14009  002B36  0E58               	movlw	88
 14010  002B38                     u11837:
 14011  002B38  2EE8               	decfsz	wreg,f,c
 14012  002B3A  D7FE               	bra	u11837
 14013  002B3C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14014  002B3E  D7FC               	bra	u11837
 14015  002B40  F000               	nop	
 14016                           
 14017                           ;MOTEapp.c: 1073: _delay((unsigned long)((16)*(48000000/4000.0)));
 14018  002B42  0EFA               	movlw	250
 14019  002B44  0100               	movlb	0	; () banked
 14020  002B46  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14021  002B48  0E58               	movlw	88
 14022  002B4A                     u11847:
 14023  002B4A  2EE8               	decfsz	wreg,f,c
 14024  002B4C  D7FE               	bra	u11847
 14025  002B4E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14026  002B50  D7FC               	bra	u11847
 14027  002B52  F000               	nop	
 14028                           
 14029                           ;MOTEapp.c: 1074: }
 14030                           ;MOTEapp.c: 1076: switch (dr)
 14031  002B54  D048               	goto	l624
 14032  002B56                     
 14033                           ;MOTEapp.c: 1079: sendCommand("mac set dr 0");
 14034  002B56  0E80               	movlw	low STR_167
 14035  002B58  0100               	movlb	0	; () banked
 14036  002B5A  6F61               	movwf	sendCommand@string& (0+255),b
 14037  002B5C  0E7D               	movlw	high STR_167
 14038  002B5E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14039  002B60  EC3B  F02F         	call	_sendCommand	;wreg free
 14040                           
 14041                           ;MOTEapp.c: 1080: break;
 14042  002B64  D05D               	goto	l626
 14043  002B66                     
 14044                           ;MOTEapp.c: 1082: sendCommand("mac set dr 1");
 14045  002B66  0E8D               	movlw	low STR_168
 14046  002B68  0100               	movlb	0	; () banked
 14047  002B6A  6F61               	movwf	sendCommand@string& (0+255),b
 14048  002B6C  0E7D               	movlw	high STR_168
 14049  002B6E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14050  002B70  EC3B  F02F         	call	_sendCommand	;wreg free
 14051                           
 14052                           ;MOTEapp.c: 1083: break;
 14053  002B74  D055               	goto	l626
 14054  002B76                     
 14055                           ;MOTEapp.c: 1085: sendCommand("mac set dr 2");
 14056  002B76  0E9A               	movlw	low STR_169
 14057  002B78  0100               	movlb	0	; () banked
 14058  002B7A  6F61               	movwf	sendCommand@string& (0+255),b
 14059  002B7C  0E7D               	movlw	high STR_169
 14060  002B7E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14061  002B80  EC3B  F02F         	call	_sendCommand	;wreg free
 14062                           
 14063                           ;MOTEapp.c: 1086: break;
 14064  002B84  D04D               	goto	l626
 14065  002B86                     
 14066                           ;MOTEapp.c: 1088: sendCommand("mac set dr 3");
 14067  002B86  0EA7               	movlw	low STR_170
 14068  002B88  0100               	movlb	0	; () banked
 14069  002B8A  6F61               	movwf	sendCommand@string& (0+255),b
 14070  002B8C  0E7D               	movlw	high STR_170
 14071  002B8E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14072  002B90  EC3B  F02F         	call	_sendCommand	;wreg free
 14073                           
 14074                           ;MOTEapp.c: 1089: break;
 14075  002B94  D045               	goto	l626
 14076  002B96                     
 14077                           ;MOTEapp.c: 1091: sendCommand("mac set dr 4");
 14078  002B96  0EB4               	movlw	low STR_171
 14079  002B98  0100               	movlb	0	; () banked
 14080  002B9A  6F61               	movwf	sendCommand@string& (0+255),b
 14081  002B9C  0E7D               	movlw	high STR_171
 14082  002B9E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14083  002BA0  EC3B  F02F         	call	_sendCommand	;wreg free
 14084                           
 14085                           ;MOTEapp.c: 1092: break;
 14086  002BA4  D03D               	goto	l626
 14087  002BA6                     
 14088                           ;MOTEapp.c: 1094: sendCommand("mac set dr 5");
 14089  002BA6  0EC1               	movlw	low STR_172
 14090  002BA8  0100               	movlb	0	; () banked
 14091  002BAA  6F61               	movwf	sendCommand@string& (0+255),b
 14092  002BAC  0E7D               	movlw	high STR_172
 14093  002BAE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14094  002BB0  EC3B  F02F         	call	_sendCommand	;wreg free
 14095                           
 14096                           ;MOTEapp.c: 1095: break;
 14097  002BB4  D035               	goto	l626
 14098  002BB6                     
 14099                           ;MOTEapp.c: 1097: sendCommand("mac set dr 6");
 14100  002BB6  0ECE               	movlw	low STR_173
 14101  002BB8  0100               	movlb	0	; () banked
 14102  002BBA  6F61               	movwf	sendCommand@string& (0+255),b
 14103  002BBC  0E7D               	movlw	high STR_173
 14104  002BBE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14105  002BC0  EC3B  F02F         	call	_sendCommand	;wreg free
 14106                           
 14107                           ;MOTEapp.c: 1098: break;
 14108  002BC4  D02D               	goto	l626
 14109  002BC6                     
 14110                           ;MOTEapp.c: 1100: sendCommand("mac set dr 7");
 14111  002BC6  0EDB               	movlw	low STR_174
 14112  002BC8  0100               	movlb	0	; () banked
 14113  002BCA  6F61               	movwf	sendCommand@string& (0+255),b
 14114  002BCC  0E7D               	movlw	high STR_174
 14115  002BCE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14116  002BD0  EC3B  F02F         	call	_sendCommand	;wreg free
 14117                           
 14118                           ;MOTEapp.c: 1101: break;
 14119  002BD4  D025               	goto	l626
 14120  002BD6                     
 14121                           ;MOTEapp.c: 1103: sendCommand("mac set adr on");
 14122  002BD6  0EF2               	movlw	low STR_175
 14123  002BD8  0100               	movlb	0	; () banked
 14124  002BDA  6F61               	movwf	sendCommand@string& (0+255),b
 14125  002BDC  0E7C               	movlw	high STR_175
 14126  002BDE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14127  002BE0  EC3B  F02F         	call	_sendCommand	;wreg free
 14128                           
 14129                           ;MOTEapp.c: 1105: }
 14130                           
 14131                           ;MOTEapp.c: 1104: break;
 14132  002BE4  D01D               	goto	l626
 14133  002BE6                     l624:
 14134  002BE6  0100               	movlb	0	; () banked
 14135  002BE8  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14136                           
 14137                           ; Switch size 1, requested type "space"
 14138                           ; Number of cases is 9, Range of values is 0 to 8
 14139                           ; switch strategies available:
 14140                           ; Name         Instructions Cycles
 14141                           ; simple_byte           28    15 (average)
 14142                           ;	Chosen strategy is simple_byte
 14143  002BEA  0A00               	xorlw	0	; case 0
 14144  002BEC  B4D8               	btfsc	status,2,c
 14145  002BEE  D7B3               	goto	l625
 14146  002BF0  0A01               	xorlw	1	; case 1
 14147  002BF2  B4D8               	btfsc	status,2,c
 14148  002BF4  D7B8               	goto	l627
 14149  002BF6  0A03               	xorlw	3	; case 2
 14150  002BF8  B4D8               	btfsc	status,2,c
 14151  002BFA  D7BD               	goto	l628
 14152  002BFC  0A01               	xorlw	1	; case 3
 14153  002BFE  B4D8               	btfsc	status,2,c
 14154  002C00  D7C2               	goto	l629
 14155  002C02  0A07               	xorlw	7	; case 4
 14156  002C04  B4D8               	btfsc	status,2,c
 14157  002C06  D7C7               	goto	l630
 14158  002C08  0A01               	xorlw	1	; case 5
 14159  002C0A  B4D8               	btfsc	status,2,c
 14160  002C0C  D7CC               	goto	l631
 14161  002C0E  0A03               	xorlw	3	; case 6
 14162  002C10  B4D8               	btfsc	status,2,c
 14163  002C12  D7D1               	goto	l632
 14164  002C14  0A01               	xorlw	1	; case 7
 14165  002C16  B4D8               	btfsc	status,2,c
 14166  002C18  D7D6               	goto	l633
 14167  002C1A  0A0F               	xorlw	15	; case 8
 14168  002C1C  B4D8               	btfsc	status,2,c
 14169  002C1E  D7DB               	goto	l634
 14170  002C20                     l626:
 14171                           
 14172                           ;MOTEapp.c: 1106: _delay((unsigned long)((16)*(48000000/4000.0)));
 14173                           
 14174                           ; BSR set to: 0
 14175  002C20  0EFA               	movlw	250
 14176  002C22  0100               	movlb	0	; () banked
 14177  002C24  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14178  002C26  0E58               	movlw	88
 14179  002C28                     u11857:
 14180  002C28  2EE8               	decfsz	wreg,f,c
 14181  002C2A  D7FE               	bra	u11857
 14182  002C2C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14183  002C2E  D7FC               	bra	u11857
 14184  002C30  F000               	nop	
 14185                           
 14186                           ;MOTEapp.c: 1107: _delay((unsigned long)((16)*(48000000/4000.0)));
 14187  002C32  0EFA               	movlw	250
 14188  002C34  0100               	movlb	0	; () banked
 14189  002C36  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14190  002C38  0E58               	movlw	88
 14191  002C3A                     u11867:
 14192  002C3A  2EE8               	decfsz	wreg,f,c
 14193  002C3C  D7FE               	bra	u11867
 14194  002C3E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14195  002C40  D7FC               	bra	u11867
 14196  002C42  F000               	nop	
 14197                           
 14198                           ;MOTEapp.c: 1108: _delay((unsigned long)((16)*(48000000/4000.0)));
 14199  002C44  0EFA               	movlw	250
 14200  002C46  0100               	movlb	0	; () banked
 14201  002C48  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14202  002C4A  0E58               	movlw	88
 14203  002C4C                     u11877:
 14204  002C4C  2EE8               	decfsz	wreg,f,c
 14205  002C4E  D7FE               	bra	u11877
 14206  002C50  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14207  002C52  D7FC               	bra	u11877
 14208  002C54  F000               	nop	
 14209                           
 14210                           ;MOTEapp.c: 1109: sendCommand("mac save");
 14211  002C56  0E2C               	movlw	low STR_176
 14212  002C58  0100               	movlb	0	; () banked
 14213  002C5A  6F61               	movwf	sendCommand@string& (0+255),b
 14214  002C5C  0E7F               	movlw	high STR_176
 14215  002C5E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14216  002C60  EC3B  F02F         	call	_sendCommand	;wreg free
 14217  002C64  0012               	return		;funcret
 14218  002C66                     __end_of_MOTEapp_SetDataRateSetting:
 14219                           	opt stack 0
 14220                           tblptru	equ	0xFF8
 14221                           tblptrh	equ	0xFF7
 14222                           tblptrl	equ	0xFF6
 14223                           tablat	equ	0xFF5
 14224                           prodh	equ	0xFF4
 14225                           prodl	equ	0xFF3
 14226                           intcon	equ	0xFF2
 14227                           intcon3	equ	0xFF0
 14228                           postinc0	equ	0xFEE
 14229                           wreg	equ	0xFE8
 14230                           indf1	equ	0xFE7
 14231                           postdec1	equ	0xFE5
 14232                           fsr1h	equ	0xFE2
 14233                           fsr1l	equ	0xFE1
 14234                           indf2	equ	0xFDF
 14235                           fsr2h	equ	0xFDA
 14236                           fsr2l	equ	0xFD9
 14237                           status	equ	0xFD8
 14238                           
 14239 ;; *************** function _ADC_TempConversion *****************
 14240 ;; Defined at:
 14241 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14242 ;; Parameters:    Size  Location     Type
 14243 ;;  tempRaw         1    wreg     enum E5749
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;  tempRaw         1   70[BANK0 ] enum E5749
 14246 ;;  val             4   72[BANK0 ] enum E5749
 14247 ;;  temp            1   71[BANK0 ] unsigned char 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  1    wreg      unsigned char 
 14250 ;; Registers used:
 14251 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0
 14258 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14260 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14261 ;;Total ram usage:        6 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:   12
 14264 ;; This function calls:
 14265 ;;		___fladd
 14266 ;;		___fldiv
 14267 ;;		___flmul
 14268 ;;		___fltol
 14269 ;;		___xxtofl
 14270 ;; This function is called by:
 14271 ;;		_moteHandler
 14272 ;;		_moteRunningProcess
 14273 ;;		_moteApp_testSensors
 14274 ;;		_test_adc
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text42
 14279  003A22                     __ptext42:
 14280                           	opt stack 0
 14281  003A22                     _ADC_TempConversion:
 14282                           	opt stack 16
 14283                           
 14284                           ;incstack = 0
 14285                           ;ADC_TempConversion@tempRaw stored from wreg
 14286  003A22  0100               	movlb	0	; () banked
 14287  003A24  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14288                           
 14289                           ;adc.c: 138: uint8_t temp;
 14290                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14291  003A26  0ECD               	movlw	205
 14292  003A28  0100               	movlb	0	; () banked
 14293  003A2A  6F78               	movwf	___flmul@a& (0+255),b
 14294  003A2C  0ECC               	movlw	204
 14295  003A2E  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14296  003A30  0E4C               	movlw	76
 14297  003A32  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14298  003A34  0E40               	movlw	64
 14299  003A36  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14300  003A38  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14301  003A3A  6F60               	movwf	___xxtofl@val& (0+255),b
 14302  003A3C  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 14303  003A3E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 14304  003A40  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 14305  003A42  0E00               	movlw	0
 14306  003A44  EC33  F016         	call	___xxtofl
 14307  003A48  C060  F074         	movff	?___xxtofl,___flmul@b
 14308  003A4C  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 14309  003A50  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 14310  003A54  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 14311  003A58  EC88  F00D         	call	___flmul	;wreg free
 14312  003A5C  C074  F08D         	movff	?___flmul,___fldiv@b
 14313  003A60  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 14314  003A64  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 14315  003A68  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 14316  003A6C  0E00               	movlw	0
 14317  003A6E  0100               	movlb	0	; () banked
 14318  003A70  6F91               	movwf	___fldiv@a& (0+255),b
 14319  003A72  0E00               	movlw	0
 14320  003A74  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 14321  003A76  0E80               	movlw	128
 14322  003A78  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 14323  003A7A  0E44               	movlw	68
 14324  003A7C  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 14325  003A7E  ECD0  F010         	call	___fldiv	;wreg free
 14326  003A82  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 14327  003A86  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14328  003A8A  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14329  003A8E  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14330                           
 14331                           ;adc.c: 141: val = ((val - 0.5)*100);
 14332  003A92  0E00               	movlw	0
 14333  003A94  0100               	movlb	0	; () banked
 14334  003A96  6F64               	movwf	___fladd@a& (0+255),b
 14335  003A98  0E00               	movlw	0
 14336  003A9A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14337  003A9C  0E00               	movlw	0
 14338  003A9E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14339  003AA0  0EBF               	movlw	191
 14340  003AA2  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14341  003AA4  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 14342  003AA8  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 14343  003AAC  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 14344  003AB0  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 14345  003AB4  EC31  F00F         	call	___fladd	;wreg free
 14346  003AB8  C060  F074         	movff	?___fladd,___flmul@b
 14347  003ABC  C061  F075         	movff	?___fladd+1,___flmul@b+1
 14348  003AC0  C062  F076         	movff	?___fladd+2,___flmul@b+2
 14349  003AC4  C063  F077         	movff	?___fladd+3,___flmul@b+3
 14350  003AC8  0E00               	movlw	0
 14351  003ACA  0100               	movlb	0	; () banked
 14352  003ACC  6F78               	movwf	___flmul@a& (0+255),b
 14353  003ACE  0E00               	movlw	0
 14354  003AD0  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14355  003AD2  0EC8               	movlw	200
 14356  003AD4  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14357  003AD6  0E42               	movlw	66
 14358  003AD8  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14359  003ADA  EC88  F00D         	call	___flmul	;wreg free
 14360  003ADE  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 14361  003AE2  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 14362  003AE6  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 14363  003AEA  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 14364                           
 14365                           ;adc.c: 142: temp = (uint8_t) val;
 14366  003AEE  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 14367  003AF2  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 14368  003AF6  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 14369  003AFA  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 14370  003AFE  EC4C  F01F         	call	___fltol	;wreg free
 14371  003B02  0100               	movlb	0	; () banked
 14372  003B04  5160               	movf	?___fltol& (0+255),w,b
 14373  003B06  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;adc.c: 144: return temp;
 14377  003B08  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 14378  003B0A  0012               	return	
 14379  003B0C                     __end_of_ADC_TempConversion:
 14380                           	opt stack 0
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           intcon3	equ	0xFF0
 14389                           postinc0	equ	0xFEE
 14390                           wreg	equ	0xFE8
 14391                           indf1	equ	0xFE7
 14392                           postdec1	equ	0xFE5
 14393                           fsr1h	equ	0xFE2
 14394                           fsr1l	equ	0xFE1
 14395                           indf2	equ	0xFDF
 14396                           fsr2h	equ	0xFDA
 14397                           fsr2l	equ	0xFD9
 14398                           status	equ	0xFD8
 14399                           
 14400 ;; *************** function ___xxtofl *****************
 14401 ;; Defined at:
 14402 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;  sign            1    wreg     unsigned char 
 14405 ;;  val             4    0[BANK0 ] long 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  sign            1    8[BANK0 ] unsigned char 
 14408 ;;  arg             4   10[BANK0 ] unsigned long 
 14409 ;;  exp             1    9[BANK0 ] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  4    0[BANK0 ] unsigned char 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14419 ;;      Params:         0       4       0       0       0       0       0       0       0
 14420 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14421 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14422 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14423 ;;Total ram usage:       14 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:   11
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		_ADC_TempConversion
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text43
 14434  002C66                     __ptext43:
 14435                           	opt stack 0
 14436  002C66                     ___xxtofl:
 14437                           	opt stack 16
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;incstack = 0
 14441                           ;___xxtofl@sign stored from wreg
 14442  002C66  0100               	movlb	0	; () banked
 14443  002C68  6F68               	movwf	___xxtofl@sign& (0+255),b
 14444  002C6A  0100               	movlb	0	; () banked
 14445  002C6C  5168               	movf	___xxtofl@sign& (0+255),w,b
 14446  002C6E  A4D8               	btfss	status,2,c
 14447                           
 14448                           ; BSR set to: 0
 14449  002C70  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14450  002C72  D01A               	goto	l2929
 14451                           
 14452                           ; BSR set to: 0
 14453  002C74  C060  F064         	movff	___xxtofl@val,??___xxtofl
 14454  002C78  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 14455  002C7C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 14456  002C80  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 14457  002C84  1F64               	comf	??___xxtofl& (0+255),f,b
 14458  002C86  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 14459  002C88  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 14460  002C8A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 14461  002C8C  2B64               	incf	??___xxtofl& (0+255),f,b
 14462  002C8E  0E00               	movlw	0
 14463  002C90  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14464  002C92  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14465  002C94  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14466  002C96  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 14467  002C9A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 14468  002C9E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 14469  002CA2  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 14470  002CA6  D008               	goto	l2930
 14471  002CA8                     l2929:
 14472                           
 14473                           ; BSR set to: 0
 14474  002CA8  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 14475  002CAC  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14476  002CB0  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14477  002CB4  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14478  002CB8                     l2930:
 14479                           
 14480                           ; BSR set to: 0
 14481                           
 14482                           ; BSR set to: 0
 14483  002CB8  5160               	movf	___xxtofl@val& (0+255),w,b
 14484  002CBA  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14485  002CBC  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14486  002CBE  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14487  002CC0  A4D8               	btfss	status,2,c
 14488  002CC2  D009               	goto	l2931
 14489                           
 14490                           ; BSR set to: 0
 14491  002CC4  0E00               	movlw	0
 14492  002CC6  6F60               	movwf	?___xxtofl& (0+255),b
 14493  002CC8  0E00               	movlw	0
 14494  002CCA  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 14495  002CCC  0E00               	movlw	0
 14496  002CCE  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 14497  002CD0  0E00               	movlw	0
 14498  002CD2  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 14499                           
 14500                           ; BSR set to: 0
 14501  002CD4  0012               	return	
 14502  002CD6                     l2931:
 14503                           
 14504                           ; BSR set to: 0
 14505                           
 14506                           ; BSR set to: 0
 14507  002CD6  0E96               	movlw	150
 14508  002CD8  6F69               	movwf	___xxtofl@exp& (0+255),b
 14509  002CDA  D006               	goto	l2933
 14510  002CDC                     
 14511                           ; BSR set to: 0
 14512                           
 14513                           ; BSR set to: 0
 14514  002CDC  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14515  002CDE  90D8               	bcf	status,0,c
 14516  002CE0  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14517  002CE2  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14518  002CE4  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14519  002CE6  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14520  002CE8                     l2933:
 14521                           
 14522                           ; BSR set to: 0
 14523                           
 14524                           ; BSR set to: 0
 14525  002CE8  0E00               	movlw	0
 14526  002CEA  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14527  002CEC  6F64               	movwf	??___xxtofl& (0+255),b
 14528  002CEE  0E00               	movlw	0
 14529  002CF0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14530  002CF2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14531  002CF4  0E00               	movlw	0
 14532  002CF6  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14533  002CF8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14534  002CFA  0EFE               	movlw	254
 14535  002CFC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14536  002CFE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14537  002D00  5164               	movf	??___xxtofl& (0+255),w,b
 14538  002D02  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14539  002D04  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14540  002D06  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14541  002D08  B4D8               	btfsc	status,2,c
 14542  002D0A  D00D               	goto	l2936
 14543  002D0C  D7E7               	goto	l2934
 14544  002D0E                     
 14545                           ; BSR set to: 0
 14546                           
 14547                           ; BSR set to: 0
 14548  002D0E  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14549                           
 14550                           ; BSR set to: 0
 14551  002D10  0E01               	movlw	1
 14552  002D12  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14553  002D14  0E00               	movlw	0
 14554  002D16  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14555  002D18  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14556  002D1A  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14557                           
 14558                           ; BSR set to: 0
 14559  002D1C  90D8               	bcf	status,0,c
 14560  002D1E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14561  002D20  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14562  002D22  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14563  002D24  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14564  002D26                     l2936:
 14565                           
 14566                           ; BSR set to: 0
 14567  002D26  0E00               	movlw	0
 14568  002D28  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14569  002D2A  6F64               	movwf	??___xxtofl& (0+255),b
 14570  002D2C  0E00               	movlw	0
 14571  002D2E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14572  002D30  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14573  002D32  0E00               	movlw	0
 14574  002D34  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14575  002D36  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14576  002D38  0EFF               	movlw	255
 14577  002D3A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14578  002D3C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14579  002D3E  5164               	movf	??___xxtofl& (0+255),w,b
 14580  002D40  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14581  002D42  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14582  002D44  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14583  002D46  B4D8               	btfsc	status,2,c
 14584  002D48  D007               	goto	l2939
 14585  002D4A  D7E1               	goto	l2937
 14586  002D4C                     
 14587                           ; BSR set to: 0
 14588                           
 14589                           ; BSR set to: 0
 14590  002D4C  0769               	decf	___xxtofl@exp& (0+255),f,b
 14591  002D4E  90D8               	bcf	status,0,c
 14592  002D50  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14593  002D52  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14594  002D54  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14595  002D56  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14596  002D58                     l2939:
 14597                           
 14598                           ; BSR set to: 0
 14599                           
 14600                           ; BSR set to: 0
 14601  002D58  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14602  002D5A  D003               	goto	u8170
 14603                           
 14604                           ; BSR set to: 0
 14605  002D5C  0E02               	movlw	2
 14606  002D5E  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14607  002D60  D7F5               	goto	l2940
 14608  002D62                     u8170:
 14609                           
 14610                           ; BSR set to: 0
 14611                           
 14612                           ; BSR set to: 0
 14613  002D62  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14614  002D64  D008               	goto	l2944
 14615                           
 14616                           ; BSR set to: 0
 14617  002D66  0EFF               	movlw	255
 14618  002D68  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14619  002D6A  0EFF               	movlw	255
 14620  002D6C  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14621  002D6E  0E7F               	movlw	127
 14622  002D70  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14623  002D72  0EFF               	movlw	255
 14624  002D74  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14625  002D76                     l2944:
 14626                           
 14627                           ; BSR set to: 0
 14628  002D76  90D8               	bcf	status,0,c
 14629  002D78  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14630  002D7A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14631  002D7E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14632  002D80  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14633  002D82  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14634  002D84  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14635  002D88  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14636  002D8A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14637  002D8C  6B64               	clrf	??___xxtofl& (0+255),b
 14638  002D8E  5164               	movf	??___xxtofl& (0+255),w,b
 14639  002D90  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14640  002D92  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14641  002D94  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14642  002D96  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14643  002D98  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14644  002D9A  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14645  002D9C  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14646                           
 14647                           ; BSR set to: 0
 14648  002D9E  5168               	movf	___xxtofl@sign& (0+255),w,b
 14649  002DA0  A4D8               	btfss	status,2,c
 14650                           
 14651                           ; BSR set to: 0
 14652  002DA2  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14653  002DA4  D001               	goto	l2945
 14654                           
 14655                           ; BSR set to: 0
 14656  002DA6  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14657  002DA8                     l2945:
 14658                           
 14659                           ; BSR set to: 0
 14660                           
 14661                           ; BSR set to: 0
 14662  002DA8  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14663  002DAC  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14664  002DB0  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14665  002DB4  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14666  002DB8  0012               	return	
 14667  002DBA                     __end_of___xxtofl:
 14668                           	opt stack 0
 14669                           tblptru	equ	0xFF8
 14670                           tblptrh	equ	0xFF7
 14671                           tblptrl	equ	0xFF6
 14672                           tablat	equ	0xFF5
 14673                           prodh	equ	0xFF4
 14674                           prodl	equ	0xFF3
 14675                           intcon	equ	0xFF2
 14676                           intcon3	equ	0xFF0
 14677                           postinc0	equ	0xFEE
 14678                           wreg	equ	0xFE8
 14679                           indf1	equ	0xFE7
 14680                           postdec1	equ	0xFE5
 14681                           fsr1h	equ	0xFE2
 14682                           fsr1l	equ	0xFE1
 14683                           indf2	equ	0xFDF
 14684                           fsr2h	equ	0xFDA
 14685                           fsr2l	equ	0xFD9
 14686                           status	equ	0xFD8
 14687                           
 14688 ;; *************** function ___fltol *****************
 14689 ;; Defined at:
 14690 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;  f1              4    0[BANK0 ] unsigned char 
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;  exp1            1    9[BANK0 ] unsigned char 
 14695 ;;  sign1           1    8[BANK0 ] unsigned char 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  4    0[BANK0 ] long 
 14698 ;; Registers used:
 14699 ;;		wreg, status,2, status,0
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14705 ;;      Params:         0       4       0       0       0       0       0       0       0
 14706 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14707 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14708 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14709 ;;Total ram usage:       10 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:   11
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		_ADC_TempConversion
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           	psect	text44
 14720  003E98                     __ptext44:
 14721                           	opt stack 0
 14722  003E98                     ___fltol:
 14723                           	opt stack 16
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;incstack = 0
 14727  003E98  0100               	movlb	0	; () banked
 14728  003E9A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14729  003E9C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14730  003E9E  6F69               	movwf	___fltol@exp1& (0+255),b
 14731  003EA0  5169               	movf	___fltol@exp1& (0+255),w,b
 14732  003EA2  A4D8               	btfss	status,2,c
 14733  003EA4  D009               	goto	l2582
 14734                           
 14735                           ; BSR set to: 0
 14736  003EA6  0E00               	movlw	0
 14737  003EA8  6F60               	movwf	?___fltol& (0+255),b
 14738  003EAA  0E00               	movlw	0
 14739  003EAC  6F61               	movwf	(?___fltol+1)& (0+255),b
 14740  003EAE  0E00               	movlw	0
 14741  003EB0  6F62               	movwf	(?___fltol+2)& (0+255),b
 14742  003EB2  0E00               	movlw	0
 14743  003EB4  6F63               	movwf	(?___fltol+3)& (0+255),b
 14744                           
 14745                           ; BSR set to: 0
 14746  003EB6  0012               	return	
 14747  003EB8                     l2582:
 14748                           
 14749                           ; BSR set to: 0
 14750                           
 14751                           ; BSR set to: 0
 14752  003EB8  C060  F064         	movff	___fltol@f1,??___fltol
 14753  003EBC  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14754  003EC0  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14755  003EC4  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14756  003EC8  0E20               	movlw	32
 14757  003ECA  D005               	goto	u8020
 14758  003ECC                     u8025:
 14759  003ECC  90D8               	bcf	status,0,c
 14760  003ECE  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14761  003ED0  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14762  003ED2  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14763  003ED4  3364               	rrcf	??___fltol& (0+255),f,b
 14764  003ED6                     u8020:
 14765  003ED6  2EE8               	decfsz	wreg,f,c
 14766  003ED8  D7F9               	goto	u8025
 14767  003EDA  5164               	movf	??___fltol& (0+255),w,b
 14768  003EDC  6F68               	movwf	___fltol@sign1& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  003EDE  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14772                           
 14773                           ; BSR set to: 0
 14774  003EE0  0EFF               	movlw	255
 14775  003EE2  1760               	andwf	___fltol@f1& (0+255),f,b
 14776  003EE4  0EFF               	movlw	255
 14777  003EE6  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14778  003EE8  0EFF               	movlw	255
 14779  003EEA  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14780  003EEC  0E00               	movlw	0
 14781  003EEE  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14782                           
 14783                           ; BSR set to: 0
 14784  003EF0  0E96               	movlw	150
 14785  003EF2  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14786                           
 14787                           ; BSR set to: 0
 14788  003EF4  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14789  003EF6  D016               	goto	l2584
 14790                           
 14791                           ; BSR set to: 0
 14792  003EF8  5169               	movf	___fltol@exp1& (0+255),w,b
 14793  003EFA  0A80               	xorlw	128
 14794  003EFC  0F97               	addlw	151
 14795  003EFE  B0D8               	btfsc	status,0,c
 14796  003F00  D009               	goto	l2585
 14797                           
 14798                           ; BSR set to: 0
 14799  003F02  0E00               	movlw	0
 14800  003F04  6F60               	movwf	?___fltol& (0+255),b
 14801  003F06  0E00               	movlw	0
 14802  003F08  6F61               	movwf	(?___fltol+1)& (0+255),b
 14803  003F0A  0E00               	movlw	0
 14804  003F0C  6F62               	movwf	(?___fltol+2)& (0+255),b
 14805  003F0E  0E00               	movlw	0
 14806  003F10  6F63               	movwf	(?___fltol+3)& (0+255),b
 14807                           
 14808                           ; BSR set to: 0
 14809  003F12  0012               	return	
 14810  003F14                     l2585:
 14811                           
 14812                           ; BSR set to: 0
 14813                           
 14814                           ; BSR set to: 0
 14815                           
 14816                           ; BSR set to: 0
 14817  003F14  90D8               	bcf	status,0,c
 14818  003F16  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14819  003F18  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14820  003F1A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14821  003F1C  3360               	rrcf	___fltol@f1& (0+255),f,b
 14822                           
 14823                           ; BSR set to: 0
 14824  003F1E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14825  003F20  D7F9               	goto	l2585
 14826                           
 14827                           ; BSR set to: 0
 14828  003F22  D015               	goto	u8060
 14829  003F24                     l2584:
 14830                           
 14831                           ; BSR set to: 0
 14832                           
 14833                           ; BSR set to: 0
 14834  003F24  0E1F               	movlw	31
 14835  003F26  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14836  003F28  D00F               	goto	l2590
 14837                           
 14838                           ; BSR set to: 0
 14839  003F2A  0E00               	movlw	0
 14840  003F2C  6F60               	movwf	?___fltol& (0+255),b
 14841  003F2E  0E00               	movlw	0
 14842  003F30  6F61               	movwf	(?___fltol+1)& (0+255),b
 14843  003F32  0E00               	movlw	0
 14844  003F34  6F62               	movwf	(?___fltol+2)& (0+255),b
 14845  003F36  0E00               	movlw	0
 14846  003F38  6F63               	movwf	(?___fltol+3)& (0+255),b
 14847                           
 14848                           ; BSR set to: 0
 14849  003F3A  0012               	return	
 14850  003F3C                     
 14851                           ; BSR set to: 0
 14852                           
 14853                           ; BSR set to: 0
 14854  003F3C  90D8               	bcf	status,0,c
 14855  003F3E  3760               	rlcf	___fltol@f1& (0+255),f,b
 14856  003F40  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14857  003F42  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14858  003F44  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14859  003F46  0769               	decf	___fltol@exp1& (0+255),f,b
 14860  003F48                     l2590:
 14861                           
 14862                           ; BSR set to: 0
 14863                           
 14864                           ; BSR set to: 0
 14865  003F48  5169               	movf	___fltol@exp1& (0+255),w,b
 14866  003F4A  A4D8               	btfss	status,2,c
 14867  003F4C  D7F7               	goto	l2591
 14868  003F4E                     u8060:
 14869                           
 14870                           ; BSR set to: 0
 14871                           
 14872                           ; BSR set to: 0
 14873                           
 14874                           ; BSR set to: 0
 14875  003F4E  5168               	movf	___fltol@sign1& (0+255),w,b
 14876  003F50  B4D8               	btfsc	status,2,c
 14877  003F52  D008               	goto	l2593
 14878                           
 14879                           ; BSR set to: 0
 14880  003F54  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14881  003F56  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14882  003F58  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14883  003F5A  6D60               	negf	___fltol@f1& (0+255),b
 14884  003F5C  0E00               	movlw	0
 14885  003F5E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14886  003F60  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14887  003F62  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14888  003F64                     l2593:
 14889                           
 14890                           ; BSR set to: 0
 14891                           
 14892                           ; BSR set to: 0
 14893  003F64  C060  F060         	movff	___fltol@f1,?___fltol
 14894  003F68  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14895  003F6C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14896  003F70  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14897  003F74  0012               	return	
 14898  003F76                     __end_of___fltol:
 14899                           	opt stack 0
 14900                           tblptru	equ	0xFF8
 14901                           tblptrh	equ	0xFF7
 14902                           tblptrl	equ	0xFF6
 14903                           tablat	equ	0xFF5
 14904                           prodh	equ	0xFF4
 14905                           prodl	equ	0xFF3
 14906                           intcon	equ	0xFF2
 14907                           intcon3	equ	0xFF0
 14908                           postinc0	equ	0xFEE
 14909                           wreg	equ	0xFE8
 14910                           indf1	equ	0xFE7
 14911                           postdec1	equ	0xFE5
 14912                           fsr1h	equ	0xFE2
 14913                           fsr1l	equ	0xFE1
 14914                           indf2	equ	0xFDF
 14915                           fsr2h	equ	0xFDA
 14916                           fsr2l	equ	0xFD9
 14917                           status	equ	0xFD8
 14918                           
 14919 ;; *************** function ___flmul *****************
 14920 ;; Defined at:
 14921 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;  b               4   20[BANK0 ] long 
 14924 ;;  a               4   24[BANK0 ] long 
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;  prod            4   39[BANK0 ] struct .
 14927 ;;  grs             4   33[BANK0 ] unsigned long 
 14928 ;;  temp            2   43[BANK0 ] struct .
 14929 ;;  bexp            1   38[BANK0 ] unsigned char 
 14930 ;;  aexp            1   37[BANK0 ] unsigned char 
 14931 ;;  sign            1   32[BANK0 ] unsigned char 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  4   20[BANK0 ] unsigned char 
 14934 ;; Registers used:
 14935 ;;		wreg, status,2, status,0, prodl, prodh
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14941 ;;      Params:         0       8       0       0       0       0       0       0       0
 14942 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14943 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14944 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14945 ;;Total ram usage:       25 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:   11
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_ADC_TempConversion
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           	psect	text45
 14956  001B10                     __ptext45:
 14957                           	opt stack 0
 14958  001B10                     ___flmul:
 14959                           	opt stack 16
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;incstack = 0
 14963  001B10  0100               	movlb	0	; () banked
 14964  001B12  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14965  001B14  0B80               	andlw	128
 14966  001B16  6F80               	movwf	___flmul@sign& (0+255),b
 14967  001B18  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14968  001B1A  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14969  001B1C  6F86               	movwf	___flmul@bexp& (0+255),b
 14970                           
 14971                           ; BSR set to: 0
 14972  001B1E  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14973                           
 14974                           ; BSR set to: 0
 14975  001B20  8186               	bsf	___flmul@bexp& (0+255),0,b
 14976                           
 14977                           ; BSR set to: 0
 14978                           
 14979                           ; BSR set to: 0
 14980  001B22  5186               	movf	___flmul@bexp& (0+255),w,b
 14981  001B24  B4D8               	btfsc	status,2,c
 14982  001B26  D00D               	goto	l2884
 14983                           
 14984                           ; BSR set to: 0
 14985  001B28  2986               	incf	___flmul@bexp& (0+255),w,b
 14986  001B2A  A4D8               	btfss	status,2,c
 14987  001B2C  D008               	goto	l2885
 14988                           
 14989                           ; BSR set to: 0
 14990  001B2E  0E00               	movlw	0
 14991  001B30  6F74               	movwf	___flmul@b& (0+255),b
 14992  001B32  0E00               	movlw	0
 14993  001B34  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14994  001B36  0E00               	movlw	0
 14995  001B38  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14996  001B3A  0E00               	movlw	0
 14997  001B3C  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14998  001B3E                     l2885:
 14999                           
 15000                           ; BSR set to: 0
 15001                           
 15002                           ; BSR set to: 0
 15003  001B3E  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15004  001B40  D008               	goto	l2886
 15005  001B42                     l2884:
 15006                           
 15007                           ; BSR set to: 0
 15008                           
 15009                           ; BSR set to: 0
 15010  001B42  0E00               	movlw	0
 15011  001B44  6F74               	movwf	___flmul@b& (0+255),b
 15012  001B46  0E00               	movlw	0
 15013  001B48  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15014  001B4A  0E00               	movlw	0
 15015  001B4C  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15016  001B4E  0E00               	movlw	0
 15017  001B50  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15018  001B52                     l2886:
 15019                           
 15020                           ; BSR set to: 0
 15021                           
 15022                           ; BSR set to: 0
 15023  001B52  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15024  001B54  0B80               	andlw	128
 15025  001B56  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15026                           
 15027                           ; BSR set to: 0
 15028  001B58  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15029  001B5A  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15030  001B5C  6F85               	movwf	___flmul@aexp& (0+255),b
 15031                           
 15032                           ; BSR set to: 0
 15033  001B5E  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 15034                           
 15035                           ; BSR set to: 0
 15036  001B60  8185               	bsf	___flmul@aexp& (0+255),0,b
 15037                           
 15038                           ; BSR set to: 0
 15039                           
 15040                           ; BSR set to: 0
 15041  001B62  5185               	movf	___flmul@aexp& (0+255),w,b
 15042  001B64  B4D8               	btfsc	status,2,c
 15043  001B66  D00D               	goto	l2888
 15044                           
 15045                           ; BSR set to: 0
 15046  001B68  2985               	incf	___flmul@aexp& (0+255),w,b
 15047  001B6A  A4D8               	btfss	status,2,c
 15048  001B6C  D008               	goto	l2889
 15049                           
 15050                           ; BSR set to: 0
 15051  001B6E  0E00               	movlw	0
 15052  001B70  6F78               	movwf	___flmul@a& (0+255),b
 15053  001B72  0E00               	movlw	0
 15054  001B74  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15055  001B76  0E00               	movlw	0
 15056  001B78  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15057  001B7A  0E00               	movlw	0
 15058  001B7C  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15059  001B7E                     l2889:
 15060                           
 15061                           ; BSR set to: 0
 15062                           
 15063                           ; BSR set to: 0
 15064  001B7E  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15065  001B80  D008               	goto	l2890
 15066  001B82                     l2888:
 15067                           
 15068                           ; BSR set to: 0
 15069                           
 15070                           ; BSR set to: 0
 15071  001B82  0E00               	movlw	0
 15072  001B84  6F78               	movwf	___flmul@a& (0+255),b
 15073  001B86  0E00               	movlw	0
 15074  001B88  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15075  001B8A  0E00               	movlw	0
 15076  001B8C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15077  001B8E  0E00               	movlw	0
 15078  001B90  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15079  001B92                     l2890:
 15080                           
 15081                           ; BSR set to: 0
 15082  001B92  5185               	movf	___flmul@aexp& (0+255),w,b
 15083  001B94  B4D8               	btfsc	status,2,c
 15084  001B96  D003               	goto	u7770
 15085                           
 15086                           ; BSR set to: 0
 15087  001B98  5186               	movf	___flmul@bexp& (0+255),w,b
 15088  001B9A  A4D8               	btfss	status,2,c
 15089  001B9C  D009               	goto	l2891
 15090  001B9E                     u7770:
 15091                           
 15092                           ; BSR set to: 0
 15093                           
 15094                           ; BSR set to: 0
 15095  001B9E  0E00               	movlw	0
 15096  001BA0  6F74               	movwf	?___flmul& (0+255),b
 15097  001BA2  0E00               	movlw	0
 15098  001BA4  6F75               	movwf	(?___flmul+1)& (0+255),b
 15099  001BA6  0E00               	movlw	0
 15100  001BA8  6F76               	movwf	(?___flmul+2)& (0+255),b
 15101  001BAA  0E00               	movlw	0
 15102  001BAC  6F77               	movwf	(?___flmul+3)& (0+255),b
 15103                           
 15104                           ; BSR set to: 0
 15105  001BAE  0012               	return	
 15106  001BB0                     l2891:
 15107                           
 15108                           ; BSR set to: 0
 15109                           
 15110                           ; BSR set to: 0
 15111  001BB0  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15112  001BB2  0374               	mulwf	___flmul@b& (0+255),b
 15113  001BB4  CFF3 F08B          	movff	prodl,___flmul@temp
 15114  001BB8  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15115                           
 15116                           ; BSR set to: 0
 15117  001BBC  518B               	movf	___flmul@temp& (0+255),w,b
 15118  001BBE  6F81               	movwf	___flmul@grs& (0+255),b
 15119  001BC0  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 15120  001BC2  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 15121  001BC4  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 15122                           
 15123                           ; BSR set to: 0
 15124  001BC6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15125  001BC8  6F87               	movwf	___flmul@prod& (0+255),b
 15126  001BCA  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 15127  001BCC  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 15128  001BCE  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 15129  001BD0  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15130  001BD2  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15131  001BD4  CFF3 F08B          	movff	prodl,___flmul@temp
 15132  001BD8  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15133                           
 15134                           ; BSR set to: 0
 15135  001BDC  518B               	movf	___flmul@temp& (0+255),w,b
 15136  001BDE  2781               	addwf	___flmul@grs& (0+255),f,b
 15137  001BE0  0E00               	movlw	0
 15138  001BE2  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15139  001BE4  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15140  001BE6  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15141                           
 15142                           ; BSR set to: 0
 15143  001BE8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15144  001BEA  2787               	addwf	___flmul@prod& (0+255),f,b
 15145  001BEC  0E00               	movlw	0
 15146  001BEE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15147  001BF0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15148  001BF2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15149  001BF4  5178               	movf	___flmul@a& (0+255),w,b
 15150  001BF6  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15151  001BF8  CFF3 F08B          	movff	prodl,___flmul@temp
 15152  001BFC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15153                           
 15154                           ; BSR set to: 0
 15155  001C00  518B               	movf	___flmul@temp& (0+255),w,b
 15156  001C02  2781               	addwf	___flmul@grs& (0+255),f,b
 15157  001C04  0E00               	movlw	0
 15158  001C06  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15159  001C08  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15160  001C0A  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15161                           
 15162                           ; BSR set to: 0
 15163  001C0C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15164  001C0E  2787               	addwf	___flmul@prod& (0+255),f,b
 15165  001C10  0E00               	movlw	0
 15166  001C12  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15167  001C14  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15168  001C16  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15169                           
 15170                           ; BSR set to: 0
 15171  001C18  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15172  001C1C  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15173  001C20  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15174  001C24  6B81               	clrf	___flmul@grs& (0+255),b
 15175                           
 15176                           ; BSR set to: 0
 15177  001C26  5178               	movf	___flmul@a& (0+255),w,b
 15178  001C28  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15179  001C2A  CFF3 F08B          	movff	prodl,___flmul@temp
 15180  001C2E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15181                           
 15182                           ; BSR set to: 0
 15183  001C32  518B               	movf	___flmul@temp& (0+255),w,b
 15184  001C34  2781               	addwf	___flmul@grs& (0+255),f,b
 15185  001C36  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15186  001C38  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15187  001C3A  0E00               	movlw	0
 15188  001C3C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15189  001C3E  0E00               	movlw	0
 15190  001C40  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15191                           
 15192                           ; BSR set to: 0
 15193  001C42  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15194  001C44  0374               	mulwf	___flmul@b& (0+255),b
 15195  001C46  CFF3 F08B          	movff	prodl,___flmul@temp
 15196  001C4A  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15197                           
 15198                           ; BSR set to: 0
 15199  001C4E  518B               	movf	___flmul@temp& (0+255),w,b
 15200  001C50  2781               	addwf	___flmul@grs& (0+255),f,b
 15201  001C52  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15202  001C54  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15203  001C56  0E00               	movlw	0
 15204  001C58  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15205  001C5A  0E00               	movlw	0
 15206  001C5C  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15207                           
 15208                           ; BSR set to: 0
 15209  001C5E  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15210  001C62  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15211  001C66  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15212  001C6A  6B81               	clrf	___flmul@grs& (0+255),b
 15213  001C6C  5178               	movf	___flmul@a& (0+255),w,b
 15214  001C6E  0374               	mulwf	___flmul@b& (0+255),b
 15215  001C70  CFF3 F08B          	movff	prodl,___flmul@temp
 15216  001C74  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15217                           
 15218                           ; BSR set to: 0
 15219  001C78  518B               	movf	___flmul@temp& (0+255),w,b
 15220  001C7A  2781               	addwf	___flmul@grs& (0+255),f,b
 15221  001C7C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15222  001C7E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15223  001C80  0E00               	movlw	0
 15224  001C82  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15225  001C84  0E00               	movlw	0
 15226  001C86  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15227                           
 15228                           ; BSR set to: 0
 15229  001C88  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15230  001C8A  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15231  001C8C  CFF3 F08B          	movff	prodl,___flmul@temp
 15232  001C90  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15233  001C94  518B               	movf	___flmul@temp& (0+255),w,b
 15234  001C96  2787               	addwf	___flmul@prod& (0+255),f,b
 15235  001C98  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15236  001C9A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15237  001C9C  0E00               	movlw	0
 15238  001C9E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15239  001CA0  0E00               	movlw	0
 15240  001CA2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15241                           
 15242                           ; BSR set to: 0
 15243  001CA4  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15244  001CA6  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15245  001CA8  CFF3 F08B          	movff	prodl,___flmul@temp
 15246  001CAC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15247                           
 15248                           ; BSR set to: 0
 15249  001CB0  518B               	movf	___flmul@temp& (0+255),w,b
 15250  001CB2  2787               	addwf	___flmul@prod& (0+255),f,b
 15251  001CB4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15252  001CB6  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15253  001CB8  0E00               	movlw	0
 15254  001CBA  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15255  001CBC  0E00               	movlw	0
 15256  001CBE  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15257  001CC0  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15258  001CC2  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15259  001CC4  CFF3 F08B          	movff	prodl,___flmul@temp
 15260  001CC8  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15261                           
 15262                           ; BSR set to: 0
 15263  001CCC  518B               	movf	___flmul@temp& (0+255),w,b
 15264  001CCE  6F7C               	movwf	??___flmul& (0+255),b
 15265  001CD0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15266  001CD2  6F7D               	movwf	(??___flmul+1)& (0+255),b
 15267  001CD4  6B7E               	clrf	(??___flmul+2)& (0+255),b
 15268  001CD6  6B7F               	clrf	(??___flmul+3)& (0+255),b
 15269  001CD8  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 15270  001CDC  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 15271  001CE0  C07C  F07D         	movff	??___flmul,??___flmul+1
 15272  001CE4  6B7C               	clrf	??___flmul& (0+255),b
 15273  001CE6  517C               	movf	??___flmul& (0+255),w,b
 15274  001CE8  2787               	addwf	___flmul@prod& (0+255),f,b
 15275  001CEA  517D               	movf	(??___flmul+1)& (0+255),w,b
 15276  001CEC  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15277  001CEE  517E               	movf	(??___flmul+2)& (0+255),w,b
 15278  001CF0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15279  001CF2  517F               	movf	(??___flmul+3)& (0+255),w,b
 15280  001CF4  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15281                           
 15282                           ; BSR set to: 0
 15283  001CF6  C081  F07C         	movff	___flmul@grs,??___flmul
 15284  001CFA  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 15285  001CFE  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 15286  001D02  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 15287  001D06  0E19               	movlw	25
 15288  001D08  D005               	goto	u7780
 15289  001D0A                     u7785:
 15290  001D0A  90D8               	bcf	status,0,c
 15291  001D0C  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 15292  001D0E  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 15293  001D10  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 15294  001D12  337C               	rrcf	??___flmul& (0+255),f,b
 15295  001D14                     u7780:
 15296  001D14  2EE8               	decfsz	wreg,f,c
 15297  001D16  D7F9               	goto	u7785
 15298  001D18  517C               	movf	??___flmul& (0+255),w,b
 15299  001D1A  2787               	addwf	___flmul@prod& (0+255),f,b
 15300  001D1C  517D               	movf	(??___flmul+1)& (0+255),w,b
 15301  001D1E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15302  001D20  517E               	movf	(??___flmul+2)& (0+255),w,b
 15303  001D22  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15304  001D24  517F               	movf	(??___flmul+3)& (0+255),w,b
 15305  001D26  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15306                           
 15307                           ; BSR set to: 0
 15308  001D28  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15309  001D2C  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15310  001D30  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15311  001D34  6B81               	clrf	___flmul@grs& (0+255),b
 15312                           
 15313                           ; BSR set to: 0
 15314  001D36  5185               	movf	___flmul@aexp& (0+255),w,b
 15315  001D38  C086  F07C         	movff	___flmul@bexp,??___flmul
 15316  001D3C  6B7D               	clrf	(??___flmul+1)& (0+255),b
 15317  001D3E  277C               	addwf	??___flmul& (0+255),f,b
 15318  001D40  0E00               	movlw	0
 15319  001D42  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 15320  001D44  0E82               	movlw	130
 15321  001D46  257C               	addwf	??___flmul& (0+255),w,b
 15322  001D48  6F8B               	movwf	___flmul@temp& (0+255),b
 15323  001D4A  0EFF               	movlw	255
 15324  001D4C  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 15325  001D4E  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 15326  001D50  D00F               	goto	l2895
 15327  001D52                     
 15328                           ; BSR set to: 0
 15329                           
 15330                           ; BSR set to: 0
 15331  001D52  90D8               	bcf	status,0,c
 15332  001D54  3787               	rlcf	___flmul@prod& (0+255),f,b
 15333  001D56  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15334  001D58  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15335  001D5A  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15336                           
 15337                           ; BSR set to: 0
 15338  001D5C  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 15339                           
 15340                           ; BSR set to: 0
 15341  001D5E  8187               	bsf	___flmul@prod& (0+255),0,b
 15342                           
 15343                           ; BSR set to: 0
 15344  001D60  90D8               	bcf	status,0,c
 15345  001D62  3781               	rlcf	___flmul@grs& (0+255),f,b
 15346  001D64  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15347  001D66  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15348  001D68  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15349  001D6A  078B               	decf	___flmul@temp& (0+255),f,b
 15350  001D6C  A0D8               	btfss	status,0,c
 15351  001D6E  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 15352  001D70                     l2895:
 15353                           
 15354                           ; BSR set to: 0
 15355                           
 15356                           ; BSR set to: 0
 15357  001D70  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 15358  001D72  D7EF               	goto	l2896
 15359                           
 15360                           ; BSR set to: 0
 15361                           
 15362                           ; BSR set to: 0
 15363  001D74  0E00               	movlw	0
 15364  001D76  6F85               	movwf	___flmul@aexp& (0+255),b
 15365                           
 15366                           ; BSR set to: 0
 15367  001D78  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 15368  001D7A  D016               	goto	l2902
 15369                           
 15370                           ; BSR set to: 0
 15371  001D7C  0EFF               	movlw	255
 15372  001D7E  1581               	andwf	___flmul@grs& (0+255),w,b
 15373  001D80  6F7C               	movwf	??___flmul& (0+255),b
 15374  001D82  0EFF               	movlw	255
 15375  001D84  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 15376  001D86  6F7D               	movwf	(??___flmul+1)& (0+255),b
 15377  001D88  0EFF               	movlw	255
 15378  001D8A  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 15379  001D8C  6F7E               	movwf	(??___flmul+2)& (0+255),b
 15380  001D8E  0E7F               	movlw	127
 15381  001D90  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 15382  001D92  6F7F               	movwf	(??___flmul+3)& (0+255),b
 15383  001D94  517C               	movf	??___flmul& (0+255),w,b
 15384  001D96  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 15385  001D98  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 15386  001D9A  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 15387  001D9C  A4D8               	btfss	status,2,c
 15388  001D9E  D002               	goto	u7830
 15389                           
 15390                           ; BSR set to: 0
 15391                           
 15392                           ; BSR set to: 0
 15393  001DA0  A187               	btfss	___flmul@prod& (0+255),0,b
 15394  001DA2  D002               	goto	l2902
 15395  001DA4                     u7830:
 15396                           
 15397                           ; BSR set to: 0
 15398  001DA4  0E01               	movlw	1
 15399  001DA6  6F85               	movwf	___flmul@aexp& (0+255),b
 15400  001DA8                     l2902:
 15401                           
 15402                           ; BSR set to: 0
 15403                           
 15404                           ; BSR set to: 0
 15405                           
 15406                           ; BSR set to: 0
 15407  001DA8  5185               	movf	___flmul@aexp& (0+255),w,b
 15408  001DAA  B4D8               	btfsc	status,2,c
 15409  001DAC  D01F               	goto	l2904
 15410                           
 15411                           ; BSR set to: 0
 15412  001DAE  0E01               	movlw	1
 15413  001DB0  2787               	addwf	___flmul@prod& (0+255),f,b
 15414  001DB2  0E00               	movlw	0
 15415  001DB4  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15416  001DB6  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15417  001DB8  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15418                           
 15419                           ; BSR set to: 0
 15420  001DBA  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15421  001DBC  D017               	goto	l2904
 15422                           
 15423                           ; BSR set to: 0
 15424  001DBE  C087  F07C         	movff	___flmul@prod,??___flmul
 15425  001DC2  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 15426  001DC6  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 15427  001DCA  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 15428  001DCE  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 15429  001DD0  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 15430  001DD2  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 15431  001DD4  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 15432  001DD6  337C               	rrcf	??___flmul& (0+255),f,b
 15433  001DD8  C07C  F087         	movff	??___flmul,___flmul@prod
 15434  001DDC  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 15435  001DE0  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 15436  001DE4  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 15437                           
 15438                           ; BSR set to: 0
 15439  001DE8  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 15440  001DEA  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 15441  001DEC                     l2904:
 15442                           
 15443                           ; BSR set to: 0
 15444                           
 15445                           ; BSR set to: 0
 15446                           
 15447                           ; BSR set to: 0
 15448  001DEC  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15449  001DEE  D00D               	goto	l2905
 15450  001DF0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15451  001DF2  E103               	bnz	u7860
 15452  001DF4  298B               	incf	___flmul@temp& (0+255),w,b
 15453  001DF6  A0D8               	btfss	status,0,c
 15454  001DF8  D008               	goto	l2905
 15455  001DFA                     u7860:
 15456                           
 15457                           ; BSR set to: 0
 15458  001DFA  0E00               	movlw	0
 15459  001DFC  6F87               	movwf	___flmul@prod& (0+255),b
 15460  001DFE  0E00               	movlw	0
 15461  001E00  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15462  001E02  0E80               	movlw	128
 15463  001E04  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15464  001E06  0E7F               	movlw	127
 15465  001E08  D020               	goto	L7
 15466  001E0A                     l2905:
 15467                           
 15468                           ; BSR set to: 0
 15469                           
 15470                           ; BSR set to: 0
 15471  001E0A  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15472  001E0C  D005               	goto	u7870
 15473  001E0E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15474  001E10  E10E               	bnz	l2907
 15475  001E12  058B               	decf	___flmul@temp& (0+255),w,b
 15476  001E14  B0D8               	btfsc	status,0,c
 15477  001E16  D00B               	goto	l2907
 15478  001E18                     u7870:
 15479                           
 15480                           ; BSR set to: 0
 15481  001E18  0E00               	movlw	0
 15482  001E1A  6F87               	movwf	___flmul@prod& (0+255),b
 15483  001E1C  0E00               	movlw	0
 15484  001E1E  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15485  001E20  0E00               	movlw	0
 15486  001E22  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15487  001E24  0E00               	movlw	0
 15488  001E26  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15489  001E28  0E00               	movlw	0
 15490  001E2A  6F80               	movwf	___flmul@sign& (0+255),b
 15491  001E2C  D00F               	goto	l2908
 15492  001E2E                     l2907:
 15493                           
 15494                           ; BSR set to: 0
 15495  001E2E  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 15496                           
 15497                           ; BSR set to: 0
 15498  001E32  0EFF               	movlw	255
 15499  001E34  1787               	andwf	___flmul@prod& (0+255),f,b
 15500  001E36  0EFF               	movlw	255
 15501  001E38  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 15502  001E3A  0E7F               	movlw	127
 15503  001E3C  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 15504  001E3E  0E00               	movlw	0
 15505  001E40  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15506                           
 15507                           ; BSR set to: 0
 15508  001E42  B186               	btfsc	___flmul@bexp& (0+255),0,b
 15509                           
 15510                           ; BSR set to: 0
 15511  001E44  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 15512                           
 15513                           ; BSR set to: 0
 15514                           
 15515                           ; BSR set to: 0
 15516  001E46  90D8               	bcf	status,0,c
 15517  001E48  3186               	rrcf	___flmul@bexp& (0+255),w,b
 15518  001E4A                     L7:
 15519  001E4A  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15520  001E4C                     l2908:
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525                           
 15526                           ; BSR set to: 0
 15527  001E4C  5180               	movf	___flmul@sign& (0+255),w,b
 15528  001E4E  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15529                           
 15530                           ; BSR set to: 0
 15531  001E50  C087  F074         	movff	___flmul@prod,?___flmul
 15532  001E54  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 15533  001E58  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 15534  001E5C  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 15535  001E60  0012               	return	
 15536  001E62                     __end_of___flmul:
 15537                           	opt stack 0
 15538                           tblptru	equ	0xFF8
 15539                           tblptrh	equ	0xFF7
 15540                           tblptrl	equ	0xFF6
 15541                           tablat	equ	0xFF5
 15542                           prodh	equ	0xFF4
 15543                           prodl	equ	0xFF3
 15544                           intcon	equ	0xFF2
 15545                           intcon3	equ	0xFF0
 15546                           postinc0	equ	0xFEE
 15547                           wreg	equ	0xFE8
 15548                           indf1	equ	0xFE7
 15549                           postdec1	equ	0xFE5
 15550                           fsr1h	equ	0xFE2
 15551                           fsr1l	equ	0xFE1
 15552                           indf2	equ	0xFDF
 15553                           fsr2h	equ	0xFDA
 15554                           fsr2l	equ	0xFD9
 15555                           status	equ	0xFD8
 15556                           
 15557 ;; *************** function ___fldiv *****************
 15558 ;; Defined at:
 15559 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;  b               4   45[BANK0 ] unsigned char 
 15562 ;;  a               4   49[BANK0 ] unsigned char 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;  grs             4   64[BANK0 ] unsigned long 
 15565 ;;  rem             4   58[BANK0 ] unsigned long 
 15566 ;;  new_exp         2   62[BANK0 ] int 
 15567 ;;  aexp            1   69[BANK0 ] unsigned char 
 15568 ;;  bexp            1   68[BANK0 ] unsigned char 
 15569 ;;  sign            1   57[BANK0 ] unsigned char 
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  4   45[BANK0 ] unsigned char 
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15579 ;;      Params:         0       8       0       0       0       0       0       0       0
 15580 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15581 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15582 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15583 ;;Total ram usage:       25 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   11
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_ADC_TempConversion
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text46
 15594  0021A0                     __ptext46:
 15595                           	opt stack 0
 15596  0021A0                     ___fldiv:
 15597                           	opt stack 16
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;incstack = 0
 15601  0021A0  0100               	movlb	0	; () banked
 15602  0021A2  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15603  0021A4  0B80               	andlw	128
 15604  0021A6  6F99               	movwf	___fldiv@sign& (0+255),b
 15605  0021A8  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15606  0021AA  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15607  0021AC  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15608                           
 15609                           ; BSR set to: 0
 15610  0021AE  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15611                           
 15612                           ; BSR set to: 0
 15613  0021B0  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15614                           
 15615                           ; BSR set to: 0
 15616                           
 15617                           ; BSR set to: 0
 15618  0021B2  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15619  0021B4  B4D8               	btfsc	status,2,c
 15620  0021B6  D00D               	goto	l2850
 15621                           
 15622                           ; BSR set to: 0
 15623  0021B8  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15624  0021BA  A4D8               	btfss	status,2,c
 15625  0021BC  D008               	goto	l2851
 15626                           
 15627                           ; BSR set to: 0
 15628  0021BE  0E00               	movlw	0
 15629  0021C0  6F8D               	movwf	___fldiv@b& (0+255),b
 15630  0021C2  0E00               	movlw	0
 15631  0021C4  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15632  0021C6  0E00               	movlw	0
 15633  0021C8  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15634  0021CA  0E00               	movlw	0
 15635  0021CC  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15636  0021CE                     l2851:
 15637                           
 15638                           ; BSR set to: 0
 15639                           
 15640                           ; BSR set to: 0
 15641  0021CE  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15642  0021D0  D006               	goto	L8
 15643  0021D2                     l2850:
 15644                           
 15645                           ; BSR set to: 0
 15646                           
 15647                           ; BSR set to: 0
 15648  0021D2  0E00               	movlw	0
 15649  0021D4  6F8D               	movwf	___fldiv@b& (0+255),b
 15650  0021D6  0E00               	movlw	0
 15651  0021D8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15652  0021DA  0E00               	movlw	0
 15653  0021DC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15654  0021DE                     L8:
 15655  0021DE  0E00               	movlw	0
 15656  0021E0  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15657                           
 15658                           ; BSR set to: 0
 15659                           
 15660                           ; BSR set to: 0
 15661  0021E2  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15662  0021E4  0B80               	andlw	128
 15663  0021E6  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15664                           
 15665                           ; BSR set to: 0
 15666  0021E8  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15667  0021EA  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15668  0021EC  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15669                           
 15670                           ; BSR set to: 0
 15671  0021EE  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15672                           
 15673                           ; BSR set to: 0
 15674  0021F0  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15675                           
 15676                           ; BSR set to: 0
 15677                           
 15678                           ; BSR set to: 0
 15679  0021F2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15680  0021F4  B4D8               	btfsc	status,2,c
 15681  0021F6  D00D               	goto	l2854
 15682                           
 15683                           ; BSR set to: 0
 15684  0021F8  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15685  0021FA  A4D8               	btfss	status,2,c
 15686  0021FC  D008               	goto	l2855
 15687                           
 15688                           ; BSR set to: 0
 15689  0021FE  0E00               	movlw	0
 15690  002200  6F91               	movwf	___fldiv@a& (0+255),b
 15691  002202  0E00               	movlw	0
 15692  002204  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15693  002206  0E00               	movlw	0
 15694  002208  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15695  00220A  0E00               	movlw	0
 15696  00220C  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15697  00220E                     l2855:
 15698                           
 15699                           ; BSR set to: 0
 15700                           
 15701                           ; BSR set to: 0
 15702  00220E  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15703  002210  D006               	goto	L9
 15704  002212                     l2854:
 15705                           
 15706                           ; BSR set to: 0
 15707                           
 15708                           ; BSR set to: 0
 15709  002212  0E00               	movlw	0
 15710  002214  6F91               	movwf	___fldiv@a& (0+255),b
 15711  002216  0E00               	movlw	0
 15712  002218  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15713  00221A  0E00               	movlw	0
 15714  00221C  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15715  00221E                     L9:
 15716  00221E  0E00               	movlw	0
 15717  002220  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15718                           
 15719                           ; BSR set to: 0
 15720                           
 15721                           ; BSR set to: 0
 15722  002222  5191               	movf	___fldiv@a& (0+255),w,b
 15723  002224  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15724  002226  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15725  002228  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15726  00222A  A4D8               	btfss	status,2,c
 15727  00222C  D015               	goto	l2857
 15728                           
 15729                           ; BSR set to: 0
 15730  00222E  0E00               	movlw	0
 15731  002230  6F8D               	movwf	___fldiv@b& (0+255),b
 15732  002232  0E00               	movlw	0
 15733  002234  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15734  002236  0E00               	movlw	0
 15735  002238  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15736  00223A  0E00               	movlw	0
 15737  00223C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15738                           
 15739                           ; BSR set to: 0
 15740  00223E  0E80               	movlw	128
 15741  002240  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15742  002242  0E7F               	movlw	127
 15743  002244  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15744                           
 15745                           ; BSR set to: 0
 15746  002246  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15747  00224A  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15748  00224E  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15749  002252  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15750                           
 15751                           ; BSR set to: 0
 15752  002256  0012               	return	
 15753  002258                     l2857:
 15754                           
 15755                           ; BSR set to: 0
 15756                           
 15757                           ; BSR set to: 0
 15758  002258  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15759  00225A  A4D8               	btfss	status,2,c
 15760  00225C  D011               	goto	l2859
 15761                           
 15762                           ; BSR set to: 0
 15763  00225E  0E00               	movlw	0
 15764  002260  6F8D               	movwf	___fldiv@b& (0+255),b
 15765  002262  0E00               	movlw	0
 15766  002264  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15767  002266  0E00               	movlw	0
 15768  002268  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15769  00226A  0E00               	movlw	0
 15770  00226C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15771                           
 15772                           ; BSR set to: 0
 15773  00226E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15774  002272  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15775  002276  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15776  00227A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15777                           
 15778                           ; BSR set to: 0
 15779  00227E  0012               	return	
 15780  002280                     l2859:
 15781                           
 15782                           ; BSR set to: 0
 15783                           
 15784                           ; BSR set to: 0
 15785  002280  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15786  002282  6F95               	movwf	??___fldiv& (0+255),b
 15787  002284  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15788  002286  1F95               	comf	??___fldiv& (0+255),f,b
 15789  002288  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15790  00228A  4B95               	infsnz	??___fldiv& (0+255),f,b
 15791  00228C  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15792  00228E  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15793  002290  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15794  002292  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15795  002294  5195               	movf	??___fldiv& (0+255),w,b
 15796  002296  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15797  002298  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15798  00229A  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15799  00229C  0E7F               	movlw	127
 15800  00229E  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15801  0022A0  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15802  0022A2  0E00               	movlw	0
 15803  0022A4  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15804  0022A6  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15805                           
 15806                           ; BSR set to: 0
 15807  0022A8  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15808  0022AC  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15809  0022B0  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15810  0022B4  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15811                           
 15812                           ; BSR set to: 0
 15813  0022B8  0E00               	movlw	0
 15814  0022BA  6F8D               	movwf	___fldiv@b& (0+255),b
 15815  0022BC  0E00               	movlw	0
 15816  0022BE  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15817  0022C0  0E00               	movlw	0
 15818  0022C2  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15819  0022C4  0E00               	movlw	0
 15820  0022C6  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15821                           
 15822                           ; BSR set to: 0
 15823  0022C8  0E00               	movlw	0
 15824  0022CA  6FA0               	movwf	___fldiv@grs& (0+255),b
 15825  0022CC  0E00               	movlw	0
 15826  0022CE  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15827  0022D0  0E00               	movlw	0
 15828  0022D2  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15829  0022D4  0E00               	movlw	0
 15830  0022D6  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15831                           
 15832                           ; BSR set to: 0
 15833  0022D8  0E00               	movlw	0
 15834  0022DA  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15835  0022DC  D028               	goto	l2860
 15836  0022DE                     
 15837                           ; BSR set to: 0
 15838                           
 15839                           ; BSR set to: 0
 15840  0022DE  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15841  0022E0  B4D8               	btfsc	status,2,c
 15842  0022E2  D011               	goto	l2862
 15843                           
 15844                           ; BSR set to: 0
 15845  0022E4  90D8               	bcf	status,0,c
 15846  0022E6  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15847  0022E8  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15848  0022EA  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15849  0022EC  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15850  0022EE  90D8               	bcf	status,0,c
 15851  0022F0  378D               	rlcf	___fldiv@b& (0+255),f,b
 15852  0022F2  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15853  0022F4  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15854  0022F6  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15855                           
 15856                           ; BSR set to: 0
 15857  0022F8  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15858                           
 15859                           ; BSR set to: 0
 15860  0022FA  818D               	bsf	___fldiv@b& (0+255),0,b
 15861                           
 15862                           ; BSR set to: 0
 15863  0022FC  90D8               	bcf	status,0,c
 15864  0022FE  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15865  002300  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15866  002302  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15867  002304  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15868  002306                     l2862:
 15869                           
 15870                           ; BSR set to: 0
 15871                           
 15872                           ; BSR set to: 0
 15873  002306  5191               	movf	___fldiv@a& (0+255),w,b
 15874  002308  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15875  00230A  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15876  00230C  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15877  00230E  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15878  002310  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15879  002312  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15880  002314  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15881  002316  A0D8               	btfss	status,0,c
 15882  002318  D009               	goto	l2864
 15883                           
 15884                           ; BSR set to: 0
 15885  00231A  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15886                           
 15887                           ; BSR set to: 0
 15888  00231C  5191               	movf	___fldiv@a& (0+255),w,b
 15889  00231E  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15890  002320  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15891  002322  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15892  002324  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15893  002326  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15894  002328  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15895  00232A  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15896  00232C                     l2864:
 15897                           
 15898                           ; BSR set to: 0
 15899                           
 15900                           ; BSR set to: 0
 15901  00232C  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15902  00232E                     l2860:
 15903                           
 15904                           ; BSR set to: 0
 15905  00232E  0E19               	movlw	25
 15906  002330  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15907  002332  D7D5               	goto	l2861
 15908                           
 15909                           ; BSR set to: 0
 15910                           
 15911                           ; BSR set to: 0
 15912  002334  519A               	movf	___fldiv@rem& (0+255),w,b
 15913  002336  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15914  002338  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15915  00233A  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15916  00233C  B4D8               	btfsc	status,2,c
 15917  00233E  D011               	goto	l2867
 15918                           
 15919                           ; BSR set to: 0
 15920  002340  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15921                           
 15922                           ; BSR set to: 0
 15923  002342  D00F               	goto	l2867
 15924  002344                     
 15925                           ; BSR set to: 0
 15926                           
 15927                           ; BSR set to: 0
 15928  002344  90D8               	bcf	status,0,c
 15929  002346  378D               	rlcf	___fldiv@b& (0+255),f,b
 15930  002348  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15931  00234A  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15932  00234C  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15933                           
 15934                           ; BSR set to: 0
 15935  00234E  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15936                           
 15937                           ; BSR set to: 0
 15938  002350  818D               	bsf	___fldiv@b& (0+255),0,b
 15939                           
 15940                           ; BSR set to: 0
 15941  002352  90D8               	bcf	status,0,c
 15942  002354  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15943  002356  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15944  002358  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15945  00235A  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15946  00235C  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15947  00235E  A0D8               	btfss	status,0,c
 15948  002360  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15949  002362                     l2867:
 15950                           
 15951                           ; BSR set to: 0
 15952                           
 15953                           ; BSR set to: 0
 15954  002362  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15955  002364  D7EF               	goto	l2868
 15956                           
 15957                           ; BSR set to: 0
 15958                           
 15959                           ; BSR set to: 0
 15960  002366  0E00               	movlw	0
 15961  002368  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15962                           
 15963                           ; BSR set to: 0
 15964  00236A  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15965  00236C  D016               	goto	l2874
 15966                           
 15967                           ; BSR set to: 0
 15968  00236E  0EFF               	movlw	255
 15969  002370  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15970  002372  6F95               	movwf	??___fldiv& (0+255),b
 15971  002374  0EFF               	movlw	255
 15972  002376  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15973  002378  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15974  00237A  0EFF               	movlw	255
 15975  00237C  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15976  00237E  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15977  002380  0E7F               	movlw	127
 15978  002382  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15979  002384  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15980  002386  5195               	movf	??___fldiv& (0+255),w,b
 15981  002388  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15982  00238A  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15983  00238C  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15984  00238E  A4D8               	btfss	status,2,c
 15985  002390  D002               	goto	u7640
 15986                           
 15987                           ; BSR set to: 0
 15988                           
 15989                           ; BSR set to: 0
 15990  002392  A18D               	btfss	___fldiv@b& (0+255),0,b
 15991  002394  D002               	goto	l2874
 15992  002396                     u7640:
 15993                           
 15994                           ; BSR set to: 0
 15995  002396  0E01               	movlw	1
 15996  002398  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15997  00239A                     l2874:
 15998                           
 15999                           ; BSR set to: 0
 16000                           
 16001                           ; BSR set to: 0
 16002                           
 16003                           ; BSR set to: 0
 16004  00239A  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16005  00239C  B4D8               	btfsc	status,2,c
 16006  00239E  D01F               	goto	l2876
 16007                           
 16008                           ; BSR set to: 0
 16009  0023A0  0E01               	movlw	1
 16010  0023A2  278D               	addwf	___fldiv@b& (0+255),f,b
 16011  0023A4  0E00               	movlw	0
 16012  0023A6  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16013  0023A8  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16014  0023AA  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16015                           
 16016                           ; BSR set to: 0
 16017  0023AC  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 16018  0023AE  D017               	goto	l2876
 16019                           
 16020                           ; BSR set to: 0
 16021  0023B0  C08D  F095         	movff	___fldiv@b,??___fldiv
 16022  0023B4  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 16023  0023B8  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 16024  0023BC  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 16025  0023C0  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 16026  0023C2  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 16027  0023C4  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 16028  0023C6  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 16029  0023C8  3395               	rrcf	??___fldiv& (0+255),f,b
 16030  0023CA  C095  F08D         	movff	??___fldiv,___fldiv@b
 16031  0023CE  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 16032  0023D2  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 16033  0023D6  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 16034                           
 16035                           ; BSR set to: 0
 16036  0023DA  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 16037  0023DC  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16038  0023DE                     l2876:
 16039                           
 16040                           ; BSR set to: 0
 16041                           
 16042                           ; BSR set to: 0
 16043                           
 16044                           ; BSR set to: 0
 16045  0023DE  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16046  0023E0  D010               	goto	l2877
 16047  0023E2  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16048  0023E4  E103               	bnz	u7670
 16049  0023E6  299E               	incf	___fldiv@new_exp& (0+255),w,b
 16050  0023E8  A0D8               	btfss	status,0,c
 16051  0023EA  D00B               	goto	l2877
 16052  0023EC                     u7670:
 16053                           
 16054                           ; BSR set to: 0
 16055  0023EC  0E00               	movlw	0
 16056  0023EE  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16057  0023F0  699E               	setf	___fldiv@new_exp& (0+255),b
 16058  0023F2  0E00               	movlw	0
 16059  0023F4  6F8D               	movwf	___fldiv@b& (0+255),b
 16060  0023F6  0E00               	movlw	0
 16061  0023F8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16062  0023FA  0E00               	movlw	0
 16063  0023FC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16064  0023FE  0E00               	movlw	0
 16065  002400  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16066  002402                     l2877:
 16067                           
 16068                           ; BSR set to: 0
 16069                           
 16070                           ; BSR set to: 0
 16071  002402  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16072  002404  D005               	goto	u7680
 16073  002406  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16074  002408  E111               	bnz	l9387
 16075  00240A  059E               	decf	___fldiv@new_exp& (0+255),w,b
 16076  00240C  B0D8               	btfsc	status,0,c
 16077  00240E  D00E               	goto	l2878
 16078  002410                     u7680:
 16079                           
 16080                           ; BSR set to: 0
 16081  002410  0E00               	movlw	0
 16082  002412  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16083  002414  0E00               	movlw	0
 16084  002416  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16085  002418  0E00               	movlw	0
 16086  00241A  6F8D               	movwf	___fldiv@b& (0+255),b
 16087  00241C  0E00               	movlw	0
 16088  00241E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16089  002420  0E00               	movlw	0
 16090  002422  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16091  002424  0E00               	movlw	0
 16092  002426  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16093  002428  0E00               	movlw	0
 16094  00242A  6F99               	movwf	___fldiv@sign& (0+255),b
 16095  00242C                     l2878:
 16096  00242C                     l9387:
 16097                           
 16098                           ; BSR set to: 0
 16099  00242C  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 16100                           
 16101                           ; BSR set to: 0
 16102  002430  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 16103  002432  D002               	goto	l2879
 16104                           
 16105                           ; BSR set to: 0
 16106  002434  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16107  002436  D001               	goto	l2880
 16108  002438                     l2879:
 16109                           
 16110                           ; BSR set to: 0
 16111                           
 16112                           ; BSR set to: 0
 16113  002438  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16114  00243A                     l2880:
 16115                           
 16116                           ; BSR set to: 0
 16117                           
 16118                           ; BSR set to: 0
 16119  00243A  90D8               	bcf	status,0,c
 16120  00243C  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 16121  00243E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16122                           
 16123                           ; BSR set to: 0
 16124  002440  5199               	movf	___fldiv@sign& (0+255),w,b
 16125  002442  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16126                           
 16127                           ; BSR set to: 0
 16128  002444  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16129  002448  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16130  00244C  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16131  002450  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16132  002454  0012               	return	
 16133  002456                     __end_of___fldiv:
 16134                           	opt stack 0
 16135                           tblptru	equ	0xFF8
 16136                           tblptrh	equ	0xFF7
 16137                           tblptrl	equ	0xFF6
 16138                           tablat	equ	0xFF5
 16139                           prodh	equ	0xFF4
 16140                           prodl	equ	0xFF3
 16141                           intcon	equ	0xFF2
 16142                           intcon3	equ	0xFF0
 16143                           postinc0	equ	0xFEE
 16144                           wreg	equ	0xFE8
 16145                           indf1	equ	0xFE7
 16146                           postdec1	equ	0xFE5
 16147                           fsr1h	equ	0xFE2
 16148                           fsr1l	equ	0xFE1
 16149                           indf2	equ	0xFDF
 16150                           fsr2h	equ	0xFDA
 16151                           fsr2l	equ	0xFD9
 16152                           status	equ	0xFD8
 16153                           
 16154 ;; *************** function ___fladd *****************
 16155 ;; Defined at:
 16156 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 16157 ;; Parameters:    Size  Location     Type
 16158 ;;  b               4    0[BANK0 ] unsigned char 
 16159 ;;  a               4    4[BANK0 ] unsigned char 
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;  grs             1   19[BANK0 ] unsigned char 
 16162 ;;  bexp            1   18[BANK0 ] unsigned char 
 16163 ;;  aexp            1   17[BANK0 ] unsigned char 
 16164 ;;  signs           1   16[BANK0 ] unsigned char 
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  4    0[BANK0 ] unsigned char 
 16167 ;; Registers used:
 16168 ;;		wreg, status,2, status,0
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16174 ;;      Params:         0       8       0       0       0       0       0       0       0
 16175 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16176 ;;      Temps:          0       8       0       0       0       0       0       0       0
 16177 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16178 ;;Total ram usage:       20 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:   11
 16181 ;; This function calls:
 16182 ;;		Nothing
 16183 ;; This function is called by:
 16184 ;;		_ADC_TempConversion
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text47
 16189  001E62                     __ptext47:
 16190                           	opt stack 0
 16191  001E62                     ___fladd:
 16192                           	opt stack 16
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;incstack = 0
 16196  001E62  0100               	movlb	0	; () banked
 16197  001E64  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16198  001E66  0B80               	andlw	128
 16199  001E68  6F70               	movwf	___fladd@signs& (0+255),b
 16200  001E6A  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16201  001E6C  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 16202  001E6E  6F72               	movwf	___fladd@bexp& (0+255),b
 16203                           
 16204                           ; BSR set to: 0
 16205  001E70  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 16206                           
 16207                           ; BSR set to: 0
 16208  001E72  8172               	bsf	___fladd@bexp& (0+255),0,b
 16209                           
 16210                           ; BSR set to: 0
 16211                           
 16212                           ; BSR set to: 0
 16213  001E74  5172               	movf	___fladd@bexp& (0+255),w,b
 16214  001E76  B4D8               	btfsc	status,2,c
 16215  001E78  D00D               	goto	l2793
 16216                           
 16217                           ; BSR set to: 0
 16218  001E7A  2972               	incf	___fladd@bexp& (0+255),w,b
 16219  001E7C  A4D8               	btfss	status,2,c
 16220  001E7E  D008               	goto	l2794
 16221                           
 16222                           ; BSR set to: 0
 16223  001E80  0E00               	movlw	0
 16224  001E82  6F60               	movwf	___fladd@b& (0+255),b
 16225  001E84  0E00               	movlw	0
 16226  001E86  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16227  001E88  0E00               	movlw	0
 16228  001E8A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16229  001E8C  0E00               	movlw	0
 16230  001E8E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16231  001E90                     l2794:
 16232                           
 16233                           ; BSR set to: 0
 16234                           
 16235                           ; BSR set to: 0
 16236  001E90  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16237  001E92  D006               	goto	L10
 16238  001E94                     l2793:
 16239                           
 16240                           ; BSR set to: 0
 16241                           
 16242                           ; BSR set to: 0
 16243  001E94  0E00               	movlw	0
 16244  001E96  6F60               	movwf	___fladd@b& (0+255),b
 16245  001E98  0E00               	movlw	0
 16246  001E9A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16247  001E9C  0E00               	movlw	0
 16248  001E9E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16249  001EA0                     L10:
 16250  001EA0  0E00               	movlw	0
 16251  001EA2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16252                           
 16253                           ; BSR set to: 0
 16254                           
 16255                           ; BSR set to: 0
 16256  001EA4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16257  001EA6  0B80               	andlw	128
 16258  001EA8  6F71               	movwf	___fladd@aexp& (0+255),b
 16259                           
 16260                           ; BSR set to: 0
 16261  001EAA  5170               	movf	___fladd@signs& (0+255),w,b
 16262  001EAC  1971               	xorwf	___fladd@aexp& (0+255),w,b
 16263  001EAE  A4D8               	btfss	status,2,c
 16264                           
 16265                           ; BSR set to: 0
 16266  001EB0  8D70               	bsf	___fladd@signs& (0+255),6,b
 16267                           
 16268                           ; BSR set to: 0
 16269                           
 16270                           ; BSR set to: 0
 16271  001EB2  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16272  001EB4  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 16273  001EB6  6F71               	movwf	___fladd@aexp& (0+255),b
 16274                           
 16275                           ; BSR set to: 0
 16276  001EB8  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 16277                           
 16278                           ; BSR set to: 0
 16279  001EBA  8171               	bsf	___fladd@aexp& (0+255),0,b
 16280                           
 16281                           ; BSR set to: 0
 16282                           
 16283                           ; BSR set to: 0
 16284  001EBC  5171               	movf	___fladd@aexp& (0+255),w,b
 16285  001EBE  B4D8               	btfsc	status,2,c
 16286  001EC0  D00D               	goto	l2798
 16287                           
 16288                           ; BSR set to: 0
 16289  001EC2  2971               	incf	___fladd@aexp& (0+255),w,b
 16290  001EC4  A4D8               	btfss	status,2,c
 16291  001EC6  D008               	goto	l2799
 16292                           
 16293                           ; BSR set to: 0
 16294  001EC8  0E00               	movlw	0
 16295  001ECA  6F64               	movwf	___fladd@a& (0+255),b
 16296  001ECC  0E00               	movlw	0
 16297  001ECE  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16298  001ED0  0E00               	movlw	0
 16299  001ED2  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16300  001ED4  0E00               	movlw	0
 16301  001ED6  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16302  001ED8                     l2799:
 16303                           
 16304                           ; BSR set to: 0
 16305                           
 16306                           ; BSR set to: 0
 16307  001ED8  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 16308  001EDA  D006               	goto	L11
 16309  001EDC                     l2798:
 16310                           
 16311                           ; BSR set to: 0
 16312                           
 16313                           ; BSR set to: 0
 16314  001EDC  0E00               	movlw	0
 16315  001EDE  6F64               	movwf	___fladd@a& (0+255),b
 16316  001EE0  0E00               	movlw	0
 16317  001EE2  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16318  001EE4  0E00               	movlw	0
 16319  001EE6  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16320  001EE8                     L11:
 16321  001EE8  0E00               	movlw	0
 16322  001EEA  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325                           
 16326                           ; BSR set to: 0
 16327  001EEC  5172               	movf	___fladd@bexp& (0+255),w,b
 16328  001EEE  5D71               	subwf	___fladd@aexp& (0+255),w,b
 16329  001EF0  B0D8               	btfsc	status,0,c
 16330  001EF2  D022               	goto	l2801
 16331                           
 16332                           ; BSR set to: 0
 16333  001EF4  AD70               	btfss	___fladd@signs& (0+255),6,b
 16334  001EF6  D002               	goto	l2802
 16335                           
 16336                           ; BSR set to: 0
 16337  001EF8  0E80               	movlw	128
 16338  001EFA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16339  001EFC                     l2802:
 16340                           
 16341                           ; BSR set to: 0
 16342                           
 16343                           ; BSR set to: 0
 16344  001EFC  C072  F073         	movff	___fladd@bexp,___fladd@grs
 16345                           
 16346                           ; BSR set to: 0
 16347  001F00  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 16348                           
 16349                           ; BSR set to: 0
 16350  001F04  C073  F071         	movff	___fladd@grs,___fladd@aexp
 16351                           
 16352                           ; BSR set to: 0
 16353  001F08  C060  F073         	movff	___fladd@b,___fladd@grs
 16354                           
 16355                           ; BSR set to: 0
 16356  001F0C  C064  F060         	movff	___fladd@a,___fladd@b
 16357                           
 16358                           ; BSR set to: 0
 16359  001F10  C073  F064         	movff	___fladd@grs,___fladd@a
 16360                           
 16361                           ; BSR set to: 0
 16362  001F14  C061  F073         	movff	___fladd@b+1,___fladd@grs
 16363                           
 16364                           ; BSR set to: 0
 16365  001F18  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 16366                           
 16367                           ; BSR set to: 0
 16368  001F1C  C073  F065         	movff	___fladd@grs,___fladd@a+1
 16369                           
 16370                           ; BSR set to: 0
 16371  001F20  C062  F073         	movff	___fladd@b+2,___fladd@grs
 16372                           
 16373                           ; BSR set to: 0
 16374  001F24  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 16375                           
 16376                           ; BSR set to: 0
 16377  001F28  C073  F066         	movff	___fladd@grs,___fladd@a+2
 16378                           
 16379                           ; BSR set to: 0
 16380  001F2C  C063  F073         	movff	___fladd@b+3,___fladd@grs
 16381                           
 16382                           ; BSR set to: 0
 16383  001F30  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 16384                           
 16385                           ; BSR set to: 0
 16386  001F34  C073  F067         	movff	___fladd@grs,___fladd@a+3
 16387  001F38                     l2801:
 16388                           
 16389                           ; BSR set to: 0
 16390                           
 16391                           ; BSR set to: 0
 16392  001F38  0E00               	movlw	0
 16393  001F3A  6F73               	movwf	___fladd@grs& (0+255),b
 16394                           
 16395                           ; BSR set to: 0
 16396  001F3C  5172               	movf	___fladd@bexp& (0+255),w,b
 16397  001F3E  6F68               	movwf	??___fladd& (0+255),b
 16398  001F40  6B69               	clrf	(??___fladd+1)& (0+255),b
 16399  001F42  1F68               	comf	??___fladd& (0+255),f,b
 16400  001F44  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16401  001F46  4B68               	infsnz	??___fladd& (0+255),f,b
 16402  001F48  2B69               	incf	(??___fladd+1)& (0+255),f,b
 16403  001F4A  5171               	movf	___fladd@aexp& (0+255),w,b
 16404  001F4C  6F6A               	movwf	(??___fladd+2)& (0+255),b
 16405  001F4E  6B6B               	clrf	(??___fladd+3)& (0+255),b
 16406  001F50  5168               	movf	??___fladd& (0+255),w,b
 16407  001F52  276A               	addwf	(??___fladd+2)& (0+255),f,b
 16408  001F54  5169               	movf	(??___fladd+1)& (0+255),w,b
 16409  001F56  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16410  001F58  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 16411  001F5A  D02C               	goto	l2805
 16412  001F5C  516B               	movf	(??___fladd+3)& (0+255),w,b
 16413  001F5E  E104               	bnz	u7170
 16414  001F60  0E1A               	movlw	26
 16415  001F62  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 16416  001F64  A0D8               	btfss	status,0,c
 16417  001F66  D026               	goto	l2805
 16418  001F68                     u7170:
 16419                           
 16420                           ; BSR set to: 0
 16421  001F68  5160               	movf	___fladd@b& (0+255),w,b
 16422  001F6A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16423  001F6C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16424  001F6E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16425  001F70  B4D8               	btfsc	status,2,c
 16426  001F72  D002               	goto	u7180
 16427  001F74  0E01               	movlw	1
 16428  001F76  D001               	goto	u7190
 16429  001F78                     u7180:
 16430  001F78  0E00               	movlw	0
 16431  001F7A                     u7190:
 16432  001F7A  6F73               	movwf	___fladd@grs& (0+255),b
 16433                           
 16434                           ; BSR set to: 0
 16435  001F7C  0E00               	movlw	0
 16436  001F7E  6F60               	movwf	___fladd@b& (0+255),b
 16437  001F80  0E00               	movlw	0
 16438  001F82  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16439  001F84  0E00               	movlw	0
 16440  001F86  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16441  001F88  0E00               	movlw	0
 16442  001F8A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16443                           
 16444                           ; BSR set to: 0
 16445  001F8C  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 16446  001F90  D015               	goto	u7220
 16447  001F92                     l2806:
 16448                           
 16449                           ; BSR set to: 0
 16450  001F92  A173               	btfss	___fladd@grs& (0+255),0,b
 16451  001F94  D005               	goto	l2807
 16452                           
 16453                           ; BSR set to: 0
 16454  001F96  90D8               	bcf	status,0,c
 16455  001F98  3173               	rrcf	___fladd@grs& (0+255),w,b
 16456  001F9A  0901               	iorlw	1
 16457  001F9C  6F73               	movwf	___fladd@grs& (0+255),b
 16458  001F9E  D002               	goto	l2808
 16459  001FA0                     l2807:
 16460                           
 16461                           ; BSR set to: 0
 16462                           
 16463                           ; BSR set to: 0
 16464  001FA0  90D8               	bcf	status,0,c
 16465  001FA2  3373               	rrcf	___fladd@grs& (0+255),f,b
 16466  001FA4                     l2808:
 16467                           
 16468                           ; BSR set to: 0
 16469                           
 16470                           ; BSR set to: 0
 16471  001FA4  B160               	btfsc	___fladd@b& (0+255),0,b
 16472                           
 16473                           ; BSR set to: 0
 16474  001FA6  8F73               	bsf	___fladd@grs& (0+255),7,b
 16475                           
 16476                           ; BSR set to: 0
 16477                           
 16478                           ; BSR set to: 0
 16479  001FA8  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16480  001FAA  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16481  001FAC  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16482  001FAE  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16483  001FB0  3360               	rrcf	___fladd@b& (0+255),f,b
 16484                           
 16485                           ; BSR set to: 0
 16486  001FB2  2B72               	incf	___fladd@bexp& (0+255),f,b
 16487  001FB4                     l2805:
 16488                           
 16489                           ; BSR set to: 0
 16490  001FB4  5171               	movf	___fladd@aexp& (0+255),w,b
 16491  001FB6  5D72               	subwf	___fladd@bexp& (0+255),w,b
 16492  001FB8  A0D8               	btfss	status,0,c
 16493  001FBA  D7EB               	goto	l2806
 16494  001FBC                     u7220:
 16495                           
 16496                           ; BSR set to: 0
 16497                           
 16498                           ; BSR set to: 0
 16499  001FBC  BD70               	btfsc	___fladd@signs& (0+255),6,b
 16500  001FBE  D029               	goto	l2811
 16501                           
 16502                           ; BSR set to: 0
 16503  001FC0  5172               	movf	___fladd@bexp& (0+255),w,b
 16504  001FC2  A4D8               	btfss	status,2,c
 16505  001FC4  D009               	goto	l2812
 16506                           
 16507                           ; BSR set to: 0
 16508  001FC6  0E00               	movlw	0
 16509  001FC8  6F60               	movwf	?___fladd& (0+255),b
 16510  001FCA  0E00               	movlw	0
 16511  001FCC  6F61               	movwf	(?___fladd+1)& (0+255),b
 16512  001FCE  0E00               	movlw	0
 16513  001FD0  6F62               	movwf	(?___fladd+2)& (0+255),b
 16514  001FD2  0E00               	movlw	0
 16515  001FD4  6F63               	movwf	(?___fladd+3)& (0+255),b
 16516                           
 16517                           ; BSR set to: 0
 16518  001FD6  0012               	return	
 16519  001FD8                     l2812:
 16520                           
 16521                           ; BSR set to: 0
 16522                           
 16523                           ; BSR set to: 0
 16524  001FD8  5164               	movf	___fladd@a& (0+255),w,b
 16525  001FDA  2760               	addwf	___fladd@b& (0+255),f,b
 16526  001FDC  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16527  001FDE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16528  001FE0  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16529  001FE2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16530  001FE4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16531  001FE6  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16532                           
 16533                           ; BSR set to: 0
 16534  001FE8  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16535  001FEA  D083               	goto	u7350
 16536                           
 16537                           ; BSR set to: 0
 16538  001FEC  A173               	btfss	___fladd@grs& (0+255),0,b
 16539  001FEE  D006               	goto	l2815
 16540                           
 16541                           ; BSR set to: 0
 16542  001FF0  90D8               	bcf	status,0,c
 16543  001FF2  3373               	rrcf	___fladd@grs& (0+255),f,b
 16544  001FF4  5173               	movf	___fladd@grs& (0+255),w,b
 16545  001FF6  0901               	iorlw	1
 16546  001FF8  6F73               	movwf	___fladd@grs& (0+255),b
 16547  001FFA  D002               	goto	l2816
 16548  001FFC                     l2815:
 16549                           
 16550                           ; BSR set to: 0
 16551                           
 16552                           ; BSR set to: 0
 16553  001FFC  90D8               	bcf	status,0,c
 16554  001FFE  3373               	rrcf	___fladd@grs& (0+255),f,b
 16555  002000                     l2816:
 16556                           
 16557                           ; BSR set to: 0
 16558                           
 16559                           ; BSR set to: 0
 16560  002000  B160               	btfsc	___fladd@b& (0+255),0,b
 16561                           
 16562                           ; BSR set to: 0
 16563  002002  8F73               	bsf	___fladd@grs& (0+255),7,b
 16564                           
 16565                           ; BSR set to: 0
 16566                           
 16567                           ; BSR set to: 0
 16568  002004  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16569  002006  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16570  002008  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16571  00200A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16572  00200C  3360               	rrcf	___fladd@b& (0+255),f,b
 16573                           
 16574                           ; BSR set to: 0
 16575  00200E  2B72               	incf	___fladd@bexp& (0+255),f,b
 16576                           
 16577                           ; BSR set to: 0
 16578  002010  D070               	goto	u7350
 16579  002012                     l2811:
 16580                           
 16581                           ; BSR set to: 0
 16582                           
 16583                           ; BSR set to: 0
 16584  002012  5164               	movf	___fladd@a& (0+255),w,b
 16585  002014  5D60               	subwf	___fladd@b& (0+255),w,b
 16586  002016  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16587  002018  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16588  00201A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16589  00201C  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16590  00201E  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16591  002020  0A80               	xorlw	128
 16592  002022  6F68               	movwf	??___fladd& (0+255),b
 16593  002024  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16594  002026  0A80               	xorlw	128
 16595  002028  5968               	subwfb	??___fladd& (0+255),w,b
 16596  00202A  B0D8               	btfsc	status,0,c
 16597  00202C  D036               	goto	l2819
 16598                           
 16599                           ; BSR set to: 0
 16600  00202E  C060  F068         	movff	___fladd@b,??___fladd
 16601  002032  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16602  002036  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16603  00203A  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16604  00203E  1F68               	comf	??___fladd& (0+255),f,b
 16605  002040  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16606  002042  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16607  002044  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16608  002046  2B68               	incf	??___fladd& (0+255),f,b
 16609  002048  0E00               	movlw	0
 16610  00204A  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16611  00204C  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16612  00204E  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16613  002050  5164               	movf	___fladd@a& (0+255),w,b
 16614  002052  2568               	addwf	??___fladd& (0+255),w,b
 16615  002054  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16616  002056  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16617  002058  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16618  00205A  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16619  00205C  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16620  00205E  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16621  002060  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16622  002062  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16623  002064  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16624  002066  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16625  002068  0EFF               	movlw	255
 16626  00206A  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16627  00206C  6F60               	movwf	___fladd@b& (0+255),b
 16628  00206E  0EFF               	movlw	255
 16629  002070  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16630  002072  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16631  002074  0EFF               	movlw	255
 16632  002076  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16633  002078  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16634  00207A  0EFF               	movlw	255
 16635  00207C  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16636  00207E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16637  002080  0E80               	movlw	128
 16638  002082  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16639                           
 16640                           ; BSR set to: 0
 16641  002084  6D73               	negf	___fladd@grs& (0+255),b
 16642                           
 16643                           ; BSR set to: 0
 16644  002086  5173               	movf	___fladd@grs& (0+255),w,b
 16645  002088  A4D8               	btfss	status,2,c
 16646  00208A  D00F               	goto	l2821
 16647                           
 16648                           ; BSR set to: 0
 16649  00208C  0E01               	movlw	1
 16650  00208E  2760               	addwf	___fladd@b& (0+255),f,b
 16651  002090  0E00               	movlw	0
 16652  002092  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16653  002094  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16654  002096  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16655                           
 16656                           ; BSR set to: 0
 16657  002098  D008               	goto	l2821
 16658  00209A                     l2819:
 16659                           
 16660                           ; BSR set to: 0
 16661                           
 16662                           ; BSR set to: 0
 16663  00209A  5164               	movf	___fladd@a& (0+255),w,b
 16664  00209C  5F60               	subwf	___fladd@b& (0+255),f,b
 16665  00209E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16666  0020A0  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16667  0020A2  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16668  0020A4  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16669  0020A6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16670  0020A8  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16671  0020AA                     l2821:
 16672                           
 16673                           ; BSR set to: 0
 16674  0020AA  5160               	movf	___fladd@b& (0+255),w,b
 16675  0020AC  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16676  0020AE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16677  0020B0  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16678  0020B2  A4D8               	btfss	status,2,c
 16679  0020B4  D01C               	goto	l2828
 16680                           
 16681                           ; BSR set to: 0
 16682  0020B6  5173               	movf	___fladd@grs& (0+255),w,b
 16683  0020B8  A4D8               	btfss	status,2,c
 16684  0020BA  D019               	goto	l2828
 16685                           
 16686                           ; BSR set to: 0
 16687  0020BC  0E00               	movlw	0
 16688  0020BE  6F60               	movwf	?___fladd& (0+255),b
 16689  0020C0  0E00               	movlw	0
 16690  0020C2  6F61               	movwf	(?___fladd+1)& (0+255),b
 16691  0020C4  0E00               	movlw	0
 16692  0020C6  6F62               	movwf	(?___fladd+2)& (0+255),b
 16693  0020C8  0E00               	movlw	0
 16694  0020CA  6F63               	movwf	(?___fladd+3)& (0+255),b
 16695                           
 16696                           ; BSR set to: 0
 16697  0020CC  0012               	return	
 16698  0020CE                     
 16699                           ; BSR set to: 0
 16700                           
 16701                           ; BSR set to: 0
 16702  0020CE  90D8               	bcf	status,0,c
 16703  0020D0  3760               	rlcf	___fladd@b& (0+255),f,b
 16704  0020D2  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16705  0020D4  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16706  0020D6  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16707                           
 16708                           ; BSR set to: 0
 16709  0020D8  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16710                           
 16711                           ; BSR set to: 0
 16712  0020DA  8160               	bsf	___fladd@b& (0+255),0,b
 16713                           
 16714                           ; BSR set to: 0
 16715                           
 16716                           ; BSR set to: 0
 16717  0020DC  A173               	btfss	___fladd@grs& (0+255),0,b
 16718  0020DE  D002               	goto	l2826
 16719                           
 16720                           ; BSR set to: 0
 16721  0020E0  80D8               	bsf	status,0,c
 16722  0020E2  D001               	goto	L12
 16723  0020E4                     l2826:
 16724                           
 16725                           ; BSR set to: 0
 16726                           
 16727                           ; BSR set to: 0
 16728  0020E4  90D8               	bcf	status,0,c
 16729  0020E6                     L12:
 16730  0020E6  3773               	rlcf	___fladd@grs& (0+255),f,b
 16731                           
 16732                           ; BSR set to: 0
 16733                           
 16734                           ; BSR set to: 0
 16735  0020E8  5172               	movf	___fladd@bexp& (0+255),w,b
 16736  0020EA  A4D8               	btfss	status,2,c
 16737                           
 16738                           ; BSR set to: 0
 16739  0020EC  0772               	decf	___fladd@bexp& (0+255),f,b
 16740  0020EE                     l2828:
 16741                           
 16742                           ; BSR set to: 0
 16743                           
 16744                           ; BSR set to: 0
 16745                           
 16746                           ; BSR set to: 0
 16747  0020EE  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16748  0020F0  D7EE               	goto	l2824
 16749  0020F2                     u7350:
 16750                           
 16751                           ; BSR set to: 0
 16752                           
 16753                           ; BSR set to: 0
 16754                           
 16755                           ; BSR set to: 0
 16756  0020F2  0E00               	movlw	0
 16757  0020F4  6F71               	movwf	___fladd@aexp& (0+255),b
 16758                           
 16759                           ; BSR set to: 0
 16760  0020F6  AF73               	btfss	___fladd@grs& (0+255),7,b
 16761  0020F8  D00A               	goto	l2833
 16762                           
 16763                           ; BSR set to: 0
 16764  0020FA  C073  F068         	movff	___fladd@grs,??___fladd
 16765  0020FE  0E7F               	movlw	127
 16766  002100  1768               	andwf	??___fladd& (0+255),f,b
 16767  002102  A4D8               	btfss	status,2,c
 16768  002104  D002               	goto	u7380
 16769                           
 16770                           ; BSR set to: 0
 16771                           
 16772                           ; BSR set to: 0
 16773  002106  A160               	btfss	___fladd@b& (0+255),0,b
 16774  002108  D002               	goto	l2833
 16775  00210A                     u7380:
 16776                           
 16777                           ; BSR set to: 0
 16778  00210A  0E01               	movlw	1
 16779  00210C  6F71               	movwf	___fladd@aexp& (0+255),b
 16780  00210E                     l2833:
 16781                           
 16782                           ; BSR set to: 0
 16783                           
 16784                           ; BSR set to: 0
 16785                           
 16786                           ; BSR set to: 0
 16787  00210E  5171               	movf	___fladd@aexp& (0+255),w,b
 16788  002110  B4D8               	btfsc	status,2,c
 16789  002112  D020               	goto	l2836
 16790                           
 16791                           ; BSR set to: 0
 16792  002114  0E01               	movlw	1
 16793  002116  2760               	addwf	___fladd@b& (0+255),f,b
 16794  002118  0E00               	movlw	0
 16795  00211A  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16796  00211C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16797  00211E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16798                           
 16799                           ; BSR set to: 0
 16800  002120  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16801  002122  D018               	goto	l2836
 16802                           
 16803                           ; BSR set to: 0
 16804  002124  C060  F068         	movff	___fladd@b,??___fladd
 16805  002128  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16806  00212C  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16807  002130  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16808  002134  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16809  002136  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16810  002138  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16811  00213A  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16812  00213C  3368               	rrcf	??___fladd& (0+255),f,b
 16813  00213E  C068  F060         	movff	??___fladd,___fladd@b
 16814  002142  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16815  002146  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16816  00214A  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16817  00214E  2972               	incf	___fladd@bexp& (0+255),w,b
 16818  002150  A4D8               	btfss	status,2,c
 16819                           
 16820                           ; BSR set to: 0
 16821  002152  2B72               	incf	___fladd@bexp& (0+255),f,b
 16822  002154                     l2836:
 16823                           
 16824                           ; BSR set to: 0
 16825                           
 16826                           ; BSR set to: 0
 16827                           
 16828                           ; BSR set to: 0
 16829                           
 16830                           ; BSR set to: 0
 16831  002154  2972               	incf	___fladd@bexp& (0+255),w,b
 16832  002156  B4D8               	btfsc	status,2,c
 16833  002158  D003               	goto	u7430
 16834                           
 16835                           ; BSR set to: 0
 16836  00215A  5172               	movf	___fladd@bexp& (0+255),w,b
 16837  00215C  A4D8               	btfss	status,2,c
 16838  00215E  D00D               	goto	l2840
 16839  002160                     u7430:
 16840                           
 16841                           ; BSR set to: 0
 16842                           
 16843                           ; BSR set to: 0
 16844  002160  0E00               	movlw	0
 16845  002162  6F60               	movwf	___fladd@b& (0+255),b
 16846  002164  0E00               	movlw	0
 16847  002166  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16848  002168  0E00               	movlw	0
 16849  00216A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16850  00216C  0E00               	movlw	0
 16851  00216E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16852  002170  5172               	movf	___fladd@bexp& (0+255),w,b
 16853  002172  A4D8               	btfss	status,2,c
 16854  002174  D002               	goto	l2840
 16855                           
 16856                           ; BSR set to: 0
 16857  002176  0E00               	movlw	0
 16858  002178  6F70               	movwf	___fladd@signs& (0+255),b
 16859  00217A                     l2840:
 16860                           
 16861                           ; BSR set to: 0
 16862                           
 16863                           ; BSR set to: 0
 16864                           
 16865                           ; BSR set to: 0
 16866  00217A  A172               	btfss	___fladd@bexp& (0+255),0,b
 16867  00217C  D002               	goto	l2841
 16868                           
 16869                           ; BSR set to: 0
 16870  00217E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16871  002180  D001               	goto	l2842
 16872  002182                     l2841:
 16873                           
 16874                           ; BSR set to: 0
 16875                           
 16876                           ; BSR set to: 0
 16877  002182  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16878  002184                     l2842:
 16879                           
 16880                           ; BSR set to: 0
 16881                           
 16882                           ; BSR set to: 0
 16883  002184  90D8               	bcf	status,0,c
 16884  002186  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16885  002188  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16886                           
 16887                           ; BSR set to: 0
 16888  00218A  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16889                           
 16890                           ; BSR set to: 0
 16891  00218C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16892                           
 16893                           ; BSR set to: 0
 16894                           
 16895                           ; BSR set to: 0
 16896  00218E  C060  F060         	movff	___fladd@b,?___fladd
 16897  002192  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16898  002196  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16899  00219A  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16900  00219E  0012               	return	
 16901  0021A0                     __end_of___fladd:
 16902                           	opt stack 0
 16903                           tblptru	equ	0xFF8
 16904                           tblptrh	equ	0xFF7
 16905                           tblptrl	equ	0xFF6
 16906                           tablat	equ	0xFF5
 16907                           prodh	equ	0xFF4
 16908                           prodl	equ	0xFF3
 16909                           intcon	equ	0xFF2
 16910                           intcon3	equ	0xFF0
 16911                           postinc0	equ	0xFEE
 16912                           wreg	equ	0xFE8
 16913                           indf1	equ	0xFE7
 16914                           postdec1	equ	0xFE5
 16915                           fsr1h	equ	0xFE2
 16916                           fsr1l	equ	0xFE1
 16917                           indf2	equ	0xFDF
 16918                           fsr2h	equ	0xFDA
 16919                           fsr2l	equ	0xFD9
 16920                           status	equ	0xFD8
 16921                           
 16922 ;; *************** function _moteJoiningProcess *****************
 16923 ;; Defined at:
 16924 ;;		line 320 in file "../Includes/Board/MOTEapp.c"
 16925 ;; Parameters:    Size  Location     Type
 16926 ;;  messageReady    1    wreg     unsigned char 
 16927 ;;  changeStates    1   24[BANK0 ] unsigned char 
 16928 ;;  selectButton    1   25[BANK0 ] unsigned char 
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;  messageReady    1   29[BANK0 ] unsigned char 
 16931 ;;  readDataRate    1   27[BANK0 ] unsigned char 
 16932 ;;  joiningCompl    1   28[BANK0 ] unsigned char 
 16933 ;; Return value:  Size  Location     Type
 16934 ;;                  1    wreg      enum E6161
 16935 ;; Registers used:
 16936 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16937 ;; Tracked objects:
 16938 ;;		On entry : 0/0
 16939 ;;		On exit  : 0/0
 16940 ;;		Unchanged: 0/0
 16941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16942 ;;      Params:         0       2       0       0       0       0       0       0       0
 16943 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16944 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16945 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16946 ;;Total ram usage:        6 bytes
 16947 ;; Hardware stack levels used:    1
 16948 ;; Hardware stack levels required when called:   16
 16949 ;; This function calls:
 16950 ;;		_DATAEE_WriteByte
 16951 ;;		_moteApp_delayms
 16952 ;;		_oled_clear
 16953 ;;		_oled_putString
 16954 ;;		_sendCommand
 16955 ;;		_strcmp
 16956 ;;		_strncmp
 16957 ;; This function is called by:
 16958 ;;		_moteHandler
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text48
 16963  001516                     __ptext48:
 16964                           	opt stack 0
 16965  001516                     _moteJoiningProcess:
 16966                           	opt stack 13
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;incstack = 0
 16970                           ;moteJoiningProcess@messageReady stored from wreg
 16971  001516  0100               	movlb	0	; () banked
 16972  001518  6F7D               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16973                           
 16974                           ;MOTEapp.c: 322: bool joiningComplete = 0;
 16975  00151A  0E00               	movlw	0
 16976  00151C  0100               	movlb	0	; () banked
 16977  00151E  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16978                           
 16979                           ;MOTEapp.c: 324: switch (activeState)
 16980  001520  D2D1               	goto	l408
 16981  001522                     
 16982                           ; BSR set to: 0
 16983                           ;MOTEapp.c: 327: while(1);
 16984  001522  D7FF               	goto	l409
 16985  001524                     
 16986                           ;MOTEapp.c: 330: sendCommand("sys reset");
 16987  001524  0EFD               	movlw	low STR_30
 16988  001526  0100               	movlb	0	; () banked
 16989  001528  6F61               	movwf	sendCommand@string& (0+255),b
 16990  00152A  0E7E               	movlw	high STR_30
 16991  00152C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16992  00152E  EC3B  F02F         	call	_sendCommand	;wreg free
 16993  001532  D17D               	goto	l10893
 16994  001534                     
 16995                           ;MOTEapp.c: 334: if (selectButton)
 16996  001534  0100               	movlb	0	; () banked
 16997  001536  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16998  001538  B4D8               	btfsc	status,2,c
 16999  00153A  D002               	goto	l416
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;MOTEapp.c: 335: {
 17003                           ;MOTEapp.c: 336: activeState = moteComFailure;
 17004  00153C  0E0A               	movlw	10
 17005  00153E  6E53               	movwf	_activeState,c
 17006  001540                     l416:
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;MOTEapp.c: 337: }
 17010                           ;MOTEapp.c: 338: if ( messageReady )
 17011  001540  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17012  001542  B4D8               	btfsc	status,2,c
 17013  001544  D2E2               	goto	l413
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;MOTEapp.c: 339: {
 17017                           ;MOTEapp.c: 340: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 17018  001546  0E90               	movlw	low _moduleResonseBuffer
 17019  001548  6F60               	movwf	strncmp@s1& (0+255),b
 17020  00154A  0E01               	movlw	high _moduleResonseBuffer
 17021  00154C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 17022  00154E  0EB9               	movlw	low STR_31
 17023  001550  6F62               	movwf	strncmp@s2& (0+255),b
 17024  001552  0E7F               	movlw	high STR_31
 17025  001554  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17026  001556  0E00               	movlw	0
 17027  001558  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17028  00155A  0E04               	movlw	4
 17029  00155C  6F64               	movwf	strncmp@len& (0+255),b
 17030  00155E  ECA8  F027         	call	_strncmp	;wreg free
 17031  001562  0100               	movlb	0	; () banked
 17032  001564  5160               	movf	?_strncmp& (0+255),w,b
 17033  001566  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17034  001568  A4D8               	btfss	status,2,c
 17035  00156A  D037               	goto	l418
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;MOTEapp.c: 341: {
 17039                           ;MOTEapp.c: 342: rnModule = rn2483;
 17040  00156C  0E00               	movlw	0
 17041  00156E  6E51               	movwf	_rnModule,c
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;MOTEapp.c: 343: oled_clear();
 17045  001570  EC5E  F031         	call	_oled_clear	;wreg free
 17046                           
 17047                           ;MOTEapp.c: 344: oled_putString(" Joining Method ",0,0);
 17048  001574  0E44               	movlw	low STR_32
 17049  001576  0100               	movlb	0	; () banked
 17050  001578  6F72               	movwf	oled_putString@string& (0+255),b
 17051  00157A  0E7B               	movlw	high STR_32
 17052  00157C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17053  00157E  5172               	movf	oled_putString@string& (0+255),w,b
 17054  001580  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17055  001582  A4D8               	btfss	status,2,c
 17056  001584  0E00               	movlw	low (__mediumconst shr (0+16))
 17057  001586  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17058  001588  0E00               	movlw	0
 17059  00158A  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17060  00158C  0E00               	movlw	0
 17061  00158E  6F76               	movwf	oled_putString@start_page& (0+255),b
 17062  001590  ECF3  F029         	call	_oled_putString	;wreg free
 17063                           
 17064                           ;MOTEapp.c: 345: oled_putString("<- ABP   OTAA ->", 0,2);
 17065  001594  0E99               	movlw	low STR_33
 17066  001596  0100               	movlb	0	; () banked
 17067  001598  6F72               	movwf	oled_putString@string& (0+255),b
 17068  00159A  0E7B               	movlw	high STR_33
 17069  00159C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17070  00159E  5172               	movf	oled_putString@string& (0+255),w,b
 17071  0015A0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17072  0015A2  A4D8               	btfss	status,2,c
 17073  0015A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17074  0015A6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17075  0015A8  0E00               	movlw	0
 17076  0015AA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17077  0015AC  0E02               	movlw	2
 17078  0015AE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17079  0015B0  ECF3  F029         	call	_oled_putString	;wreg free
 17080                           
 17081                           ;MOTEapp.c: 346: oled_putString("  (S2)   (S3)   ", 0,3);
 17082  0015B4  0EEF               	movlw	low STR_34
 17083  0015B6  0100               	movlb	0	; () banked
 17084  0015B8  6F72               	movwf	oled_putString@string& (0+255),b
 17085  0015BA  0E7A               	movlw	high STR_34
 17086  0015BC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17087  0015BE  5172               	movf	oled_putString@string& (0+255),w,b
 17088  0015C0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17089  0015C2  A4D8               	btfss	status,2,c
 17090  0015C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17091  0015C6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17092  0015C8  0E00               	movlw	0
 17093  0015CA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17094  0015CC  0E03               	movlw	3
 17095  0015CE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17096  0015D0  ECF3  F029         	call	_oled_putString	;wreg free
 17097  0015D4  D04A               	goto	l10831
 17098  0015D6                     L13:
 17099  0015D6  6E53               	movwf	_activeState,c
 17100                           
 17101                           ;MOTEapp.c: 348: }
 17102  0015D8  D298               	goto	l413
 17103  0015DA                     l418:
 17104                           
 17105                           ;MOTEapp.c: 349: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 17106  0015DA  0E90               	movlw	low _moduleResonseBuffer
 17107  0015DC  0100               	movlb	0	; () banked
 17108  0015DE  6F60               	movwf	strncmp@s1& (0+255),b
 17109  0015E0  0E01               	movlw	high _moduleResonseBuffer
 17110  0015E2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 17111  0015E4  0EBE               	movlw	low STR_35
 17112  0015E6  6F62               	movwf	strncmp@s2& (0+255),b
 17113  0015E8  0E7F               	movlw	high STR_35
 17114  0015EA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17115  0015EC  0E00               	movlw	0
 17116  0015EE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17117  0015F0  0E04               	movlw	4
 17118  0015F2  6F64               	movwf	strncmp@len& (0+255),b
 17119  0015F4  ECA8  F027         	call	_strncmp	;wreg free
 17120  0015F8  0100               	movlb	0	; () banked
 17121  0015FA  5160               	movf	?_strncmp& (0+255),w,b
 17122  0015FC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17123  0015FE  A4D8               	btfss	status,2,c
 17124  001600  D036               	goto	l420
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;MOTEapp.c: 350: {
 17128                           ;MOTEapp.c: 351: rnModule = rn2903;
 17129  001602  0E01               	movlw	1
 17130  001604  6E51               	movwf	_rnModule,c
 17131                           
 17132                           ; BSR set to: 0
 17133                           ;MOTEapp.c: 352: oled_clear();
 17134  001606  EC5E  F031         	call	_oled_clear	;wreg free
 17135                           
 17136                           ;MOTEapp.c: 353: oled_putString(" Joining Method ",0,0);
 17137  00160A  0E44               	movlw	low STR_32
 17138  00160C  0100               	movlb	0	; () banked
 17139  00160E  6F72               	movwf	oled_putString@string& (0+255),b
 17140  001610  0E7B               	movlw	high STR_32
 17141  001612  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17142  001614  5172               	movf	oled_putString@string& (0+255),w,b
 17143  001616  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17144  001618  A4D8               	btfss	status,2,c
 17145  00161A  0E00               	movlw	low (__mediumconst shr (0+16))
 17146  00161C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17147  00161E  0E00               	movlw	0
 17148  001620  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17149  001622  0E00               	movlw	0
 17150  001624  6F76               	movwf	oled_putString@start_page& (0+255),b
 17151  001626  ECF3  F029         	call	_oled_putString	;wreg free
 17152                           
 17153                           ;MOTEapp.c: 354: oled_putString("<- ABP   OTAA ->", 0,2);
 17154  00162A  0E99               	movlw	low STR_33
 17155  00162C  0100               	movlb	0	; () banked
 17156  00162E  6F72               	movwf	oled_putString@string& (0+255),b
 17157  001630  0E7B               	movlw	high STR_33
 17158  001632  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17159  001634  5172               	movf	oled_putString@string& (0+255),w,b
 17160  001636  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17161  001638  A4D8               	btfss	status,2,c
 17162  00163A  0E00               	movlw	low (__mediumconst shr (0+16))
 17163  00163C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17164  00163E  0E00               	movlw	0
 17165  001640  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17166  001642  0E02               	movlw	2
 17167  001644  6F76               	movwf	oled_putString@start_page& (0+255),b
 17168  001646  ECF3  F029         	call	_oled_putString	;wreg free
 17169                           
 17170                           ;MOTEapp.c: 355: oled_putString("  (S2)   (S3)   ", 0,3);
 17171  00164A  0EEF               	movlw	low STR_34
 17172  00164C  0100               	movlb	0	; () banked
 17173  00164E  6F72               	movwf	oled_putString@string& (0+255),b
 17174  001650  0E7A               	movlw	high STR_34
 17175  001652  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17176  001654  5172               	movf	oled_putString@string& (0+255),w,b
 17177  001656  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17178  001658  A4D8               	btfss	status,2,c
 17179  00165A  0E00               	movlw	low (__mediumconst shr (0+16))
 17180  00165C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17181  00165E  0E00               	movlw	0
 17182  001660  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17183  001662  0E03               	movlw	3
 17184  001664  6F76               	movwf	oled_putString@start_page& (0+255),b
 17185  001666  ECF3  F029         	call	_oled_putString	;wreg free
 17186  00166A                     l10831:
 17187                           
 17188                           ;MOTEapp.c: 356: activeState = moteJoinMethod;
 17189  00166A  0E02               	movlw	2
 17190  00166C  D7B4               	goto	L13
 17191  00166E                     l420:
 17192                           
 17193                           ;MOTEapp.c: 358: else
 17194                           ;MOTEapp.c: 359: {
 17195                           ;MOTEapp.c: 360: sendCommand("sys reset");
 17196  00166E  0EFD               	movlw	low STR_30
 17197  001670  0100               	movlb	0	; () banked
 17198  001672  6F61               	movwf	sendCommand@string& (0+255),b
 17199  001674  0E7E               	movlw	high STR_30
 17200  001676  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17201  001678  EC3B  F02F         	call	_sendCommand	;wreg free
 17202                           
 17203                           ;MOTEapp.c: 361: moteApp_delayms(25);
 17204  00167C  0E00               	movlw	0
 17205  00167E  0100               	movlb	0	; () banked
 17206  001680  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17207  001682  0E19               	movlw	25
 17208  001684  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17209  001686  EC88  F02F         	call	_moteApp_delayms	;wreg free
 17210  00168A  D1C0               	goto	u9630
 17211  00168C                     
 17212                           ;MOTEapp.c: 367: if (changeStates)
 17213  00168C  0100               	movlb	0	; () banked
 17214  00168E  5178               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 17215  001690  B4D8               	btfsc	status,2,c
 17216  001692  D01E               	goto	l423
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;MOTEapp.c: 368: {
 17220                           ;MOTEapp.c: 369: oled_putString("  (S2)          ", 0,3);
 17221  001694  0EBC               	movlw	low STR_40
 17222  001696  6F72               	movwf	oled_putString@string& (0+255),b
 17223  001698  0E7A               	movlw	high STR_40
 17224  00169A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17225  00169C  5172               	movf	oled_putString@string& (0+255),w,b
 17226  00169E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17227  0016A0  A4D8               	btfss	status,2,c
 17228  0016A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17229  0016A4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17230  0016A6  0E00               	movlw	0
 17231  0016A8  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17232  0016AA  0E03               	movlw	3
 17233  0016AC  6F76               	movwf	oled_putString@start_page& (0+255),b
 17234  0016AE  ECF3  F029         	call	_oled_putString	;wreg free
 17235                           
 17236                           ;MOTEapp.c: 370: moteApp_delayms(500);
 17237  0016B2  0E01               	movlw	1
 17238  0016B4  0100               	movlb	0	; () banked
 17239  0016B6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17240  0016B8  0EF4               	movlw	244
 17241  0016BA  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17242  0016BC  EC88  F02F         	call	_moteApp_delayms	;wreg free
 17243                           
 17244                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 17245  0016C0  0EE8               	movlw	low STR_41
 17246  0016C2  0100               	movlb	0	; () banked
 17247  0016C4  6F61               	movwf	sendCommand@string& (0+255),b
 17248  0016C6  0E7D               	movlw	high STR_41
 17249  0016C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17250  0016CA  EC3B  F02F         	call	_sendCommand	;wreg free
 17251  0016CE  D070               	goto	l10877
 17252  0016D0                     l423:
 17253                           
 17254                           ;MOTEapp.c: 374: else if (selectButton)
 17255  0016D0  0100               	movlb	0	; () banked
 17256  0016D2  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17257  0016D4  B4D8               	btfsc	status,2,c
 17258  0016D6  D219               	goto	l413
 17259                           
 17260                           ; BSR set to: 0
 17261                           ;MOTEapp.c: 375: {
 17262                           ;MOTEapp.c: 376: oled_putString("         (S3)   ", 0,3);
 17263  0016D8  0EDE               	movlw	low STR_42
 17264  0016DA  6F72               	movwf	oled_putString@string& (0+255),b
 17265  0016DC  0E7A               	movlw	high STR_42
 17266  0016DE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17267  0016E0  5172               	movf	oled_putString@string& (0+255),w,b
 17268  0016E2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17269  0016E4  A4D8               	btfss	status,2,c
 17270  0016E6  0E00               	movlw	low (__mediumconst shr (0+16))
 17271  0016E8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17272  0016EA  0E00               	movlw	0
 17273  0016EC  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17274  0016EE  0E03               	movlw	3
 17275  0016F0  6F76               	movwf	oled_putString@start_page& (0+255),b
 17276  0016F2  ECF3  F029         	call	_oled_putString	;wreg free
 17277                           
 17278                           ;MOTEapp.c: 377: moteApp_delayms(500);
 17279  0016F6  0E01               	movlw	1
 17280  0016F8  0100               	movlb	0	; () banked
 17281  0016FA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17282  0016FC  0EF4               	movlw	244
 17283  0016FE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17284  001700  EC88  F02F         	call	_moteApp_delayms	;wreg free
 17285                           
 17286                           ;MOTEapp.c: 378: sendCommand("mac join otaa");
 17287  001704  0E3C               	movlw	low STR_43
 17288  001706  0100               	movlb	0	; () banked
 17289  001708  6F61               	movwf	sendCommand@string& (0+255),b
 17290  00170A  0E7D               	movlw	high STR_43
 17291  00170C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17292  00170E  EC3B  F02F         	call	_sendCommand	;wreg free
 17293  001712  D16A               	goto	l10943
 17294  001714                     
 17295                           ;MOTEapp.c: 383: if ( messageReady )
 17296  001714  0100               	movlb	0	; () banked
 17297  001716  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17298  001718  B4D8               	btfsc	status,2,c
 17299  00171A  D1F7               	goto	l413
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;MOTEapp.c: 384: {
 17303                           ;MOTEapp.c: 385: if(strcmp(moduleResonseBuffer, "ok") == 0)
 17304  00171C  0E90               	movlw	low _moduleResonseBuffer
 17305  00171E  6F60               	movwf	strcmp@s1& (0+255),b
 17306  001720  0E01               	movlw	high _moduleResonseBuffer
 17307  001722  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17308  001724  0EF8               	movlw	low STR_44
 17309  001726  6F62               	movwf	strcmp@s2& (0+255),b
 17310  001728  0E7F               	movlw	high STR_44
 17311  00172A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17312  00172C  EC3B  F02D         	call	_strcmp	;wreg free
 17313  001730  0100               	movlb	0	; () banked
 17314  001732  5160               	movf	?_strcmp& (0+255),w,b
 17315  001734  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17316  001736  A4D8               	btfss	status,2,c
 17317  001738  D002               	goto	l428
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;MOTEapp.c: 386: {
 17321                           ;MOTEapp.c: 387: activeState = moteWaitAbp;
 17322  00173A  0E04               	movlw	4
 17323  00173C  D74C               	goto	L13
 17324  00173E                     l428:
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;MOTEapp.c: 389: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 17328                           
 17329                           ; BSR set to: 0
 17330  00173E  0E90               	movlw	low _moduleResonseBuffer
 17331  001740  6F60               	movwf	strcmp@s1& (0+255),b
 17332  001742  0E01               	movlw	high _moduleResonseBuffer
 17333  001744  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17334  001746  0E58               	movlw	low STR_45
 17335  001748  6F62               	movwf	strcmp@s2& (0+255),b
 17336  00174A  0E7D               	movlw	high STR_45
 17337  00174C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17338  00174E  EC3B  F02D         	call	_strcmp	;wreg free
 17339  001752  0100               	movlb	0	; () banked
 17340  001754  5160               	movf	?_strcmp& (0+255),w,b
 17341  001756  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17342  001758  A4D8               	btfss	status,2,c
 17343  00175A  D023               	goto	l430
 17344                           
 17345                           ; BSR set to: 0
 17346                           ;MOTEapp.c: 390: {
 17347                           ;MOTEapp.c: 391: oled_clear();
 17348  00175C  EC5E  F031         	call	_oled_clear	;wreg free
 17349                           
 17350                           ;MOTEapp.c: 392: oled_putString("Valid Keys",0,0);
 17351  001760  0EB5               	movlw	low STR_46
 17352  001762  0100               	movlb	0	; () banked
 17353  001764  6F72               	movwf	oled_putString@string& (0+255),b
 17354  001766  0E7E               	movlw	high STR_46
 17355  001768  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17356  00176A  5172               	movf	oled_putString@string& (0+255),w,b
 17357  00176C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17358  00176E  A4D8               	btfss	status,2,c
 17359  001770  0E00               	movlw	low (__mediumconst shr (0+16))
 17360  001772  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17361  001774  0E00               	movlw	0
 17362  001776  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17363  001778  0E00               	movlw	0
 17364  00177A  6F76               	movwf	oled_putString@start_page& (0+255),b
 17365  00177C  ECF3  F029         	call	_oled_putString	;wreg free
 17366                           
 17367                           ;MOTEapp.c: 393: oled_putString("Required",0,1);
 17368  001780  0E1A               	movlw	low STR_47
 17369  001782  0100               	movlb	0	; () banked
 17370  001784  6F72               	movwf	oled_putString@string& (0+255),b
 17371  001786  0E7F               	movlw	high STR_47
 17372  001788  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17373  00178A  5172               	movf	oled_putString@string& (0+255),w,b
 17374  00178C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17375  00178E  A4D8               	btfss	status,2,c
 17376  001790  0E00               	movlw	low (__mediumconst shr (0+16))
 17377  001792  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17378  001794  0E00               	movlw	0
 17379  001796  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17380  001798  0E01               	movlw	1
 17381  00179A  6F76               	movwf	oled_putString@start_page& (0+255),b
 17382  00179C  ECF3  F029         	call	_oled_putString	;wreg free
 17383  0017A0  D08E               	goto	l10909
 17384  0017A2                     l430:
 17385                           
 17386                           ;MOTEapp.c: 396: else
 17387                           ;MOTEapp.c: 397: {
 17388                           ;MOTEapp.c: 398: sendCommand("mac join abp");
 17389  0017A2  0EE8               	movlw	low STR_41
 17390  0017A4  0100               	movlb	0	; () banked
 17391  0017A6  6F61               	movwf	sendCommand@string& (0+255),b
 17392  0017A8  0E7D               	movlw	high STR_41
 17393  0017AA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17394  0017AC  EC3B  F02F         	call	_sendCommand	;wreg free
 17395  0017B0                     l10877:
 17396                           
 17397                           ;MOTEapp.c: 399: activeState = moteCheckAbp;
 17398  0017B0  0E03               	movlw	3
 17399  0017B2  D711               	goto	L13
 17400  0017B4                     
 17401                           ;MOTEapp.c: 404: if ( messageReady )
 17402  0017B4  0100               	movlb	0	; () banked
 17403  0017B6  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17404  0017B8  B4D8               	btfsc	status,2,c
 17405  0017BA  D1A7               	goto	l413
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;MOTEapp.c: 405: {
 17409                           ;MOTEapp.c: 406: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17410  0017BC  0E90               	movlw	low _moduleResonseBuffer
 17411  0017BE  6F60               	movwf	strcmp@s1& (0+255),b
 17412  0017C0  0E01               	movlw	high _moduleResonseBuffer
 17413  0017C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17414  0017C4  0E23               	movlw	low STR_49
 17415  0017C6  6F62               	movwf	strcmp@s2& (0+255),b
 17416  0017C8  0E7F               	movlw	high STR_49
 17417  0017CA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17418  0017CC  EC3B  F02D         	call	_strcmp	;wreg free
 17419  0017D0  0100               	movlb	0	; () banked
 17420  0017D2  5160               	movf	?_strcmp& (0+255),w,b
 17421  0017D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17422  0017D6  A4D8               	btfss	status,2,c
 17423  0017D8  D023               	goto	l434
 17424                           
 17425                           ; BSR set to: 0
 17426                           ;MOTEapp.c: 407: {
 17427                           ;MOTEapp.c: 408: oled_clear();
 17428  0017DA  EC5E  F031         	call	_oled_clear	;wreg free
 17429                           
 17430                           ;MOTEapp.c: 409: oled_putString("ABP Join ",0,0);
 17431  0017DE  0ED5               	movlw	low STR_50
 17432  0017E0  0100               	movlb	0	; () banked
 17433  0017E2  6F72               	movwf	oled_putString@string& (0+255),b
 17434  0017E4  0E7E               	movlw	high STR_50
 17435  0017E6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17436  0017E8  5172               	movf	oled_putString@string& (0+255),w,b
 17437  0017EA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17438  0017EC  A4D8               	btfss	status,2,c
 17439  0017EE  0E00               	movlw	low (__mediumconst shr (0+16))
 17440  0017F0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17441  0017F2  0E00               	movlw	0
 17442  0017F4  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17443  0017F6  0E00               	movlw	0
 17444  0017F8  6F76               	movwf	oled_putString@start_page& (0+255),b
 17445  0017FA  ECF3  F029         	call	_oled_putString	;wreg free
 17446                           
 17447                           ;MOTEapp.c: 410: oled_putString("Successful",0,1);
 17448  0017FE  0E9F               	movlw	low STR_51
 17449  001800  0100               	movlb	0	; () banked
 17450  001802  6F72               	movwf	oled_putString@string& (0+255),b
 17451  001804  0E7E               	movlw	high STR_51
 17452  001806  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17453  001808  5172               	movf	oled_putString@string& (0+255),w,b
 17454  00180A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17455  00180C  A4D8               	btfss	status,2,c
 17456  00180E  0E00               	movlw	low (__mediumconst shr (0+16))
 17457  001810  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17458  001812  0E00               	movlw	0
 17459  001814  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17460  001816  0E01               	movlw	1
 17461  001818  6F76               	movwf	oled_putString@start_page& (0+255),b
 17462  00181A  ECF3  F029         	call	_oled_putString	;wreg free
 17463  00181E  D0A9               	goto	l10931
 17464  001820                     l434:
 17465                           
 17466                           ;MOTEapp.c: 413: else
 17467                           ;MOTEapp.c: 414: {
 17468                           ;MOTEapp.c: 415: sendCommand("mac reset");
 17469  001820  0EF3               	movlw	low STR_52
 17470  001822  0100               	movlb	0	; () banked
 17471  001824  6F61               	movwf	sendCommand@string& (0+255),b
 17472  001826  0E7E               	movlw	high STR_52
 17473  001828  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17474  00182A  EC3B  F02F         	call	_sendCommand	;wreg free
 17475  00182E                     l10893:
 17476                           
 17477                           ;MOTEapp.c: 416: activeState = moteReset;
 17478  00182E  0E01               	movlw	1
 17479  001830  D6D2               	goto	L13
 17480  001832                     
 17481                           ;MOTEapp.c: 422: if ( messageReady )
 17482  001832  0100               	movlb	0	; () banked
 17483  001834  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17484  001836  B4D8               	btfsc	status,2,c
 17485  001838  D168               	goto	l413
 17486                           
 17487                           ; BSR set to: 0
 17488                           ;MOTEapp.c: 423: {
 17489                           ;MOTEapp.c: 424: if(strcmp(moduleResonseBuffer, "ok") == 0)
 17490  00183A  0E90               	movlw	low _moduleResonseBuffer
 17491  00183C  6F60               	movwf	strcmp@s1& (0+255),b
 17492  00183E  0E01               	movlw	high _moduleResonseBuffer
 17493  001840  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17494  001842  0EF8               	movlw	low STR_44
 17495  001844  6F62               	movwf	strcmp@s2& (0+255),b
 17496  001846  0E7F               	movlw	high STR_44
 17497  001848  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17498  00184A  EC3B  F02D         	call	_strcmp	;wreg free
 17499  00184E  0100               	movlb	0	; () banked
 17500  001850  5160               	movf	?_strcmp& (0+255),w,b
 17501  001852  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17502  001854  A4D8               	btfss	status,2,c
 17503  001856  D002               	goto	l438
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;MOTEapp.c: 425: {
 17507                           ;MOTEapp.c: 426: activeState = moteWaitOtaa;
 17508  001858  0E06               	movlw	6
 17509  00185A  D6BD               	goto	L13
 17510  00185C                     l438:
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;MOTEapp.c: 428: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 17514                           
 17515                           ; BSR set to: 0
 17516  00185C  0E90               	movlw	low _moduleResonseBuffer
 17517  00185E  6F60               	movwf	strcmp@s1& (0+255),b
 17518  001860  0E01               	movlw	high _moduleResonseBuffer
 17519  001862  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17520  001864  0E58               	movlw	low STR_45
 17521  001866  6F62               	movwf	strcmp@s2& (0+255),b
 17522  001868  0E7D               	movlw	high STR_45
 17523  00186A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17524  00186C  EC3B  F02D         	call	_strcmp	;wreg free
 17525  001870  0100               	movlb	0	; () banked
 17526  001872  5160               	movf	?_strcmp& (0+255),w,b
 17527  001874  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17528  001876  A4D8               	btfss	status,2,c
 17529  001878  D024               	goto	l440
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;MOTEapp.c: 429: {
 17533                           ;MOTEapp.c: 430: oled_clear();
 17534  00187A  EC5E  F031         	call	_oled_clear	;wreg free
 17535                           
 17536                           ;MOTEapp.c: 431: oled_putString("Valid Keys",0,0);
 17537  00187E  0EB5               	movlw	low STR_46
 17538  001880  0100               	movlb	0	; () banked
 17539  001882  6F72               	movwf	oled_putString@string& (0+255),b
 17540  001884  0E7E               	movlw	high STR_46
 17541  001886  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17542  001888  5172               	movf	oled_putString@string& (0+255),w,b
 17543  00188A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17544  00188C  A4D8               	btfss	status,2,c
 17545  00188E  0E00               	movlw	low (__mediumconst shr (0+16))
 17546  001890  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17547  001892  0E00               	movlw	0
 17548  001894  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17549  001896  0E00               	movlw	0
 17550  001898  6F76               	movwf	oled_putString@start_page& (0+255),b
 17551  00189A  ECF3  F029         	call	_oled_putString	;wreg free
 17552                           
 17553                           ;MOTEapp.c: 432: oled_putString("Required",0,1);
 17554  00189E  0E1A               	movlw	low STR_47
 17555  0018A0  0100               	movlb	0	; () banked
 17556  0018A2  6F72               	movwf	oled_putString@string& (0+255),b
 17557  0018A4  0E7F               	movlw	high STR_47
 17558  0018A6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17559  0018A8  5172               	movf	oled_putString@string& (0+255),w,b
 17560  0018AA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17561  0018AC  A4D8               	btfss	status,2,c
 17562  0018AE  0E00               	movlw	low (__mediumconst shr (0+16))
 17563  0018B0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17564  0018B2  0E00               	movlw	0
 17565  0018B4  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17566  0018B6  0E01               	movlw	1
 17567  0018B8  6F76               	movwf	oled_putString@start_page& (0+255),b
 17568  0018BA  ECF3  F029         	call	_oled_putString	;wreg free
 17569  0018BE                     l10909:
 17570                           
 17571                           ;MOTEapp.c: 433: activeState = moteNeedKeys;
 17572  0018BE  0E09               	movlw	9
 17573  0018C0  D68A               	goto	L13
 17574  0018C2                     l440:
 17575                           
 17576                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17577  0018C2  0E90               	movlw	low _moduleResonseBuffer
 17578  0018C4  0100               	movlb	0	; () banked
 17579  0018C6  6F60               	movwf	strcmp@s1& (0+255),b
 17580  0018C8  0E01               	movlw	high _moduleResonseBuffer
 17581  0018CA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17582  0018CC  0E4A               	movlw	low STR_57
 17583  0018CE  6F62               	movwf	strcmp@s2& (0+255),b
 17584  0018D0  0E7D               	movlw	high STR_57
 17585  0018D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17586  0018D4  EC3B  F02D         	call	_strcmp	;wreg free
 17587  0018D8  0100               	movlb	0	; () banked
 17588  0018DA  5160               	movf	?_strcmp& (0+255),w,b
 17589  0018DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17590  0018DE  A4D8               	btfss	status,2,c
 17591  0018E0  D007               	goto	l442
 17592                           
 17593                           ; BSR set to: 0
 17594                           ;MOTEapp.c: 436: {
 17595                           ;MOTEapp.c: 437: sendCommand("mac join otaa");
 17596  0018E2  0E3C               	movlw	low STR_43
 17597  0018E4  6F61               	movwf	sendCommand@string& (0+255),b
 17598  0018E6  0E7D               	movlw	high STR_43
 17599  0018E8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17600  0018EA  EC3B  F02F         	call	_sendCommand	;wreg free
 17601  0018EE  D07C               	goto	l10943
 17602  0018F0                     l442:
 17603                           
 17604                           ;MOTEapp.c: 440: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17605  0018F0  0E90               	movlw	low _moduleResonseBuffer
 17606  0018F2  0100               	movlb	0	; () banked
 17607  0018F4  6F60               	movwf	strcmp@s1& (0+255),b
 17608  0018F6  0E01               	movlw	high _moduleResonseBuffer
 17609  0018F8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17610  0018FA  0E94               	movlw	low STR_59
 17611  0018FC  6F62               	movwf	strcmp@s2& (0+255),b
 17612  0018FE  0E7E               	movlw	high STR_59
 17613  001900  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17614  001902  EC3B  F02D         	call	_strcmp	;wreg free
 17615  001906  D07D               	goto	L14
 17616  001908                     
 17617                           ;MOTEapp.c: 447: if ( messageReady )
 17618                           
 17619                           ; BSR set to: 0
 17620  001908  0100               	movlb	0	; () banked
 17621  00190A  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17622  00190C  B4D8               	btfsc	status,2,c
 17623  00190E  D0FD               	goto	l413
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;MOTEapp.c: 448: {
 17627                           ;MOTEapp.c: 449: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17628  001910  0E90               	movlw	low _moduleResonseBuffer
 17629  001912  6F60               	movwf	strcmp@s1& (0+255),b
 17630  001914  0E01               	movlw	high _moduleResonseBuffer
 17631  001916  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17632  001918  0E23               	movlw	low STR_49
 17633  00191A  6F62               	movwf	strcmp@s2& (0+255),b
 17634  00191C  0E7F               	movlw	high STR_49
 17635  00191E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17636  001920  EC3B  F02D         	call	_strcmp	;wreg free
 17637  001924  0100               	movlb	0	; () banked
 17638  001926  5160               	movf	?_strcmp& (0+255),w,b
 17639  001928  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17640  00192A  A4D8               	btfss	status,2,c
 17641  00192C  D024               	goto	l447
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;MOTEapp.c: 450: {
 17645                           ;MOTEapp.c: 451: oled_clear();
 17646  00192E  EC5E  F031         	call	_oled_clear	;wreg free
 17647                           
 17648                           ;MOTEapp.c: 452: oled_putString("OTAA Join ",0,0);
 17649  001932  0E89               	movlw	low STR_61
 17650  001934  0100               	movlb	0	; () banked
 17651  001936  6F72               	movwf	oled_putString@string& (0+255),b
 17652  001938  0E7E               	movlw	high STR_61
 17653  00193A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17654  00193C  5172               	movf	oled_putString@string& (0+255),w,b
 17655  00193E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17656  001940  A4D8               	btfss	status,2,c
 17657  001942  0E00               	movlw	low (__mediumconst shr (0+16))
 17658  001944  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17659  001946  0E00               	movlw	0
 17660  001948  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17661  00194A  0E00               	movlw	0
 17662  00194C  6F76               	movwf	oled_putString@start_page& (0+255),b
 17663  00194E  ECF3  F029         	call	_oled_putString	;wreg free
 17664                           
 17665                           ;MOTEapp.c: 453: oled_putString("Successful",0,1);
 17666  001952  0E9F               	movlw	low STR_51
 17667  001954  0100               	movlb	0	; () banked
 17668  001956  6F72               	movwf	oled_putString@string& (0+255),b
 17669  001958  0E7E               	movlw	high STR_51
 17670  00195A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17671  00195C  5172               	movf	oled_putString@string& (0+255),w,b
 17672  00195E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17673  001960  A4D8               	btfss	status,2,c
 17674  001962  0E00               	movlw	low (__mediumconst shr (0+16))
 17675  001964  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17676  001966  0E00               	movlw	0
 17677  001968  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17678  00196A  0E01               	movlw	1
 17679  00196C  6F76               	movwf	oled_putString@start_page& (0+255),b
 17680  00196E  ECF3  F029         	call	_oled_putString	;wreg free
 17681  001972                     l10931:
 17682                           
 17683                           ;MOTEapp.c: 454: activeState = moteJoined;
 17684  001972  0E07               	movlw	7
 17685  001974  D630               	goto	L13
 17686  001976                     l447:
 17687                           
 17688                           ;MOTEapp.c: 456: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17689  001976  0E90               	movlw	low _moduleResonseBuffer
 17690  001978  0100               	movlb	0	; () banked
 17691  00197A  6F60               	movwf	strcmp@s1& (0+255),b
 17692  00197C  0E01               	movlw	high _moduleResonseBuffer
 17693  00197E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17694  001980  0E96               	movlw	low STR_63
 17695  001982  6F62               	movwf	strcmp@s2& (0+255),b
 17696  001984  0E7F               	movlw	high STR_63
 17697  001986  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17698  001988  EC3B  F02D         	call	_strcmp	;wreg free
 17699  00198C  0100               	movlb	0	; () banked
 17700  00198E  5160               	movf	?_strcmp& (0+255),w,b
 17701  001990  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17702  001992  A4D8               	btfss	status,2,c
 17703  001994  D02B               	goto	l449
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;MOTEapp.c: 457: {
 17707                           ;MOTEapp.c: 458: oled_clear();
 17708  001996  EC5E  F031         	call	_oled_clear	;wreg free
 17709                           
 17710                           ;MOTEapp.c: 459: oled_putString("OTAA Join",1,0);
 17711  00199A  0EE9               	movlw	low STR_64
 17712  00199C  0100               	movlb	0	; () banked
 17713  00199E  6F72               	movwf	oled_putString@string& (0+255),b
 17714  0019A0  0E7E               	movlw	high STR_64
 17715  0019A2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17716  0019A4  5172               	movf	oled_putString@string& (0+255),w,b
 17717  0019A6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17718  0019A8  A4D8               	btfss	status,2,c
 17719  0019AA  0E00               	movlw	low (__mediumconst shr (0+16))
 17720  0019AC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17721  0019AE  0E01               	movlw	1
 17722  0019B0  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17723  0019B2  0E00               	movlw	0
 17724  0019B4  6F76               	movwf	oled_putString@start_page& (0+255),b
 17725  0019B6  ECF3  F029         	call	_oled_putString	;wreg free
 17726                           
 17727                           ;MOTEapp.c: 460: oled_putString("Denied",2,1);
 17728  0019BA  0E8F               	movlw	low STR_65
 17729  0019BC  0100               	movlb	0	; () banked
 17730  0019BE  6F72               	movwf	oled_putString@string& (0+255),b
 17731  0019C0  0E7F               	movlw	high STR_65
 17732  0019C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17733  0019C4  5172               	movf	oled_putString@string& (0+255),w,b
 17734  0019C6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17735  0019C8  A4D8               	btfss	status,2,c
 17736  0019CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17737  0019CC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17738  0019CE  0E02               	movlw	2
 17739  0019D0  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17740  0019D2  0E01               	movlw	1
 17741  0019D4  6F76               	movwf	oled_putString@start_page& (0+255),b
 17742  0019D6  ECF3  F029         	call	_oled_putString	;wreg free
 17743                           
 17744                           ;MOTEapp.c: 461: sendCommand("mac join otaa");
 17745  0019DA  0E3C               	movlw	low STR_43
 17746  0019DC  0100               	movlb	0	; () banked
 17747  0019DE  6F61               	movwf	sendCommand@string& (0+255),b
 17748  0019E0  0E7D               	movlw	high STR_43
 17749  0019E2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17750  0019E4  EC3B  F02F         	call	_sendCommand	;wreg free
 17751  0019E8                     l10943:
 17752                           
 17753                           ;MOTEapp.c: 462: activeState = moteCheckOtaa;
 17754  0019E8  0E05               	movlw	5
 17755  0019EA  D5F5               	goto	L13
 17756  0019EC                     l449:
 17757                           
 17758                           ;MOTEapp.c: 464: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17759  0019EC  0E90               	movlw	low _moduleResonseBuffer
 17760  0019EE  0100               	movlb	0	; () banked
 17761  0019F0  6F60               	movwf	strcmp@s1& (0+255),b
 17762  0019F2  0E01               	movlw	high _moduleResonseBuffer
 17763  0019F4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17764  0019F6  0E94               	movlw	low STR_59
 17765  0019F8  6F62               	movwf	strcmp@s2& (0+255),b
 17766  0019FA  0E7E               	movlw	high STR_59
 17767  0019FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17768  0019FE  EC3B  F02D         	call	_strcmp	;wreg free
 17769  001A02                     L14:
 17770  001A02  0100               	movlb	0	; () banked
 17771  001A04  5160               	movf	?_strcmp& (0+255),w,b
 17772  001A06  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17773  001A08  A4D8               	btfss	status,2,c
 17774  001A0A  D07F               	goto	l413
 17775  001A0C                     u9630:
 17776                           
 17777                           ; BSR set to: 0
 17778                           ;MOTEapp.c: 465: {
 17779                           ;MOTEapp.c: 466: activeState = moteStartup;
 17780  001A0C  0E00               	movlw	0
 17781  001A0E  D5E3               	goto	L13
 17782  001A10                     
 17783                           ;MOTEapp.c: 471: sendCommand("mac get dr");
 17784                           
 17785                           ; BSR set to: 0
 17786  001A10  0EAA               	movlw	low STR_68
 17787  001A12  0100               	movlb	0	; () banked
 17788  001A14  6F61               	movwf	sendCommand@string& (0+255),b
 17789  001A16  0E7E               	movlw	high STR_68
 17790  001A18  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17791  001A1A  EC3B  F02F         	call	_sendCommand	;wreg free
 17792  001A1E  D019               	goto	l10959
 17793  001A20                     
 17794                           ;MOTEapp.c: 475: if ( messageReady )
 17795  001A20  0100               	movlb	0	; () banked
 17796  001A22  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17797  001A24  B4D8               	btfsc	status,2,c
 17798  001A26  D071               	goto	l413
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;MOTEapp.c: 476: {
 17802                           ;MOTEapp.c: 477: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17803  001A28  0E90               	movlw	low _moduleResonseBuffer
 17804  001A2A  6F60               	movwf	strcmp@s1& (0+255),b
 17805  001A2C  0E01               	movlw	high _moduleResonseBuffer
 17806  001A2E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17807  001A30  0E4A               	movlw	low STR_57
 17808  001A32  6F62               	movwf	strcmp@s2& (0+255),b
 17809  001A34  0E7D               	movlw	high STR_57
 17810  001A36  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17811  001A38  EC3B  F02D         	call	_strcmp	;wreg free
 17812  001A3C  0100               	movlb	0	; () banked
 17813  001A3E  5160               	movf	?_strcmp& (0+255),w,b
 17814  001A40  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17815  001A42  A4D8               	btfss	status,2,c
 17816  001A44  D008               	goto	l455
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;MOTEapp.c: 478: {
 17820                           ;MOTEapp.c: 479: sendCommand("mac get dr");
 17821  001A46  0EAA               	movlw	low STR_68
 17822  001A48  6F61               	movwf	sendCommand@string& (0+255),b
 17823  001A4A  0E7E               	movlw	high STR_68
 17824  001A4C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17825  001A4E  EC3B  F02F         	call	_sendCommand	;wreg free
 17826  001A52                     l10959:
 17827                           
 17828                           ;MOTEapp.c: 480: activeState = moteGetDr;
 17829  001A52  0E08               	movlw	8
 17830  001A54  D5C0               	goto	L13
 17831  001A56                     l455:
 17832                           
 17833                           ;MOTEapp.c: 482: else
 17834                           ;MOTEapp.c: 483: {
 17835                           ;MOTEapp.c: 484: uint8_t readDataRate;
 17836                           ;MOTEapp.c: 485: readDataRate = moduleResonseBuffer[0] - '0';
 17837  001A56  0101               	movlb	1	; () banked
 17838  001A58  5190               	movf	_moduleResonseBuffer& (0+255),w,b
 17839  001A5A  0FD0               	addlw	208
 17840  001A5C  0100               	movlb	0	; () banked
 17841  001A5E  6F7B               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17842                           
 17843                           ; BSR set to: 0
 17844                           ;MOTEapp.c: 486: dataRateValue = readDataRate;
 17845  001A60  C07B  F0FD         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17846                           
 17847                           ; BSR set to: 0
 17848                           ;MOTEapp.c: 487: joiningComplete = 1;
 17849  001A64  0E01               	movlw	1
 17850  001A66  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;MOTEapp.c: 488: }
 17854                           ;MOTEapp.c: 489: }
 17855                           ;MOTEapp.c: 490: break;
 17856                           
 17857                           ; BSR set to: 0
 17858  001A68  D050               	goto	l413
 17859  001A6A                     
 17860                           ;MOTEapp.c: 492: if (selectButton)
 17861                           
 17862                           ; BSR set to: 0
 17863  001A6A  0100               	movlb	0	; () banked
 17864  001A6C  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17865  001A6E  B4D8               	btfsc	status,2,c
 17866  001A70  D04C               	goto	l413
 17867                           
 17868                           ; BSR set to: 0
 17869                           ;MOTEapp.c: 493: {
 17870                           ;MOTEapp.c: 494: activeState = moteComFailure;
 17871  001A72  0E0A               	movlw	10
 17872  001A74  D5B0               	goto	L13
 17873  001A76                     
 17874                           ;MOTEapp.c: 499: DATAEE_WriteByte(0x00, 0x00);
 17875                           
 17876                           ; BSR set to: 0
 17877  001A76  0E00               	movlw	0
 17878  001A78  0100               	movlb	0	; () banked
 17879  001A7A  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17880  001A7C  0E00               	movlw	0
 17881  001A7E  EC8E  F02E         	call	_DATAEE_WriteByte
 17882  001A82  B281               	btfsc	3969,1,c	;volatile
 17883  001A84  D002               	goto	u9680
 17884  001A86  A081               	btfss	3969,0,c	;volatile
 17885  001A88  D7FC               	goto	l461
 17886  001A8A                     u9680:
 17887                           
 17888                           ;MOTEapp.c: 501: _delay((unsigned long)((16)*(48000000/4000.0)));
 17889  001A8A  0EFA               	movlw	250
 17890  001A8C  0100               	movlb	0	; () banked
 17891  001A8E  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17892  001A90  0E58               	movlw	88
 17893  001A92                     u11887:
 17894  001A92  2EE8               	decfsz	wreg,f,c
 17895  001A94  D7FE               	bra	u11887
 17896  001A96  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17897  001A98  D7FC               	bra	u11887
 17898  001A9A  F000               	nop	
 17899                           
 17900                           ;MOTEapp.c: 502: _delay((unsigned long)((16)*(48000000/4000.0)));
 17901  001A9C  0EFA               	movlw	250
 17902  001A9E  0100               	movlb	0	; () banked
 17903  001AA0  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17904  001AA2  0E58               	movlw	88
 17905  001AA4                     u11897:
 17906  001AA4  2EE8               	decfsz	wreg,f,c
 17907  001AA6  D7FE               	bra	u11897
 17908  001AA8  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17909  001AAA  D7FC               	bra	u11897
 17910  001AAC  F000               	nop	
 17911                           
 17912                           ;MOTEapp.c: 503: _delay((unsigned long)((16)*(48000000/4000.0)));
 17913  001AAE  0EFA               	movlw	250
 17914  001AB0  0100               	movlb	0	; () banked
 17915  001AB2  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17916  001AB4  0E58               	movlw	88
 17917  001AB6                     u11907:
 17918  001AB6  2EE8               	decfsz	wreg,f,c
 17919  001AB8  D7FE               	bra	u11907
 17920  001ABA  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17921  001ABC  D7FC               	bra	u11907
 17922  001ABE  F000               	nop	
 17923  001AC0  00FF               	reset		;# 
 17924                           
 17925                           ;MOTEapp.c: 507: }
 17926                           
 17927                           ;MOTEapp.c: 506: break;
 17928  001AC2  D023               	goto	l413
 17929  001AC4                     l408:
 17930  001AC4  5053               	movf	_activeState,w,c
 17931                           
 17932                           ; Switch size 1, requested type "space"
 17933                           ; Number of cases is 11, Range of values is 0 to 10
 17934                           ; switch strategies available:
 17935                           ; Name         Instructions Cycles
 17936                           ; simple_byte           34    18 (average)
 17937                           ;	Chosen strategy is simple_byte
 17938  001AC6  0A00               	xorlw	0	; case 0
 17939  001AC8  B4D8               	btfsc	status,2,c
 17940  001ACA  D52C               	goto	l414
 17941  001ACC  0A01               	xorlw	1	; case 1
 17942  001ACE  B4D8               	btfsc	status,2,c
 17943  001AD0  D531               	goto	l415
 17944  001AD2  0A03               	xorlw	3	; case 2
 17945  001AD4  B4D8               	btfsc	status,2,c
 17946  001AD6  D5DA               	goto	l422
 17947  001AD8  0A01               	xorlw	1	; case 3
 17948  001ADA  B4D8               	btfsc	status,2,c
 17949  001ADC  D61B               	goto	l426
 17950  001ADE  0A07               	xorlw	7	; case 4
 17951  001AE0  B4D8               	btfsc	status,2,c
 17952  001AE2  D668               	goto	l432
 17953  001AE4  0A01               	xorlw	1	; case 5
 17954  001AE6  B4D8               	btfsc	status,2,c
 17955  001AE8  D6A4               	goto	l436
 17956  001AEA  0A03               	xorlw	3	; case 6
 17957  001AEC  B4D8               	btfsc	status,2,c
 17958  001AEE  D70C               	goto	l445
 17959  001AF0  0A01               	xorlw	1	; case 7
 17960  001AF2  B4D8               	btfsc	status,2,c
 17961  001AF4  D78D               	goto	l452
 17962  001AF6  0A0F               	xorlw	15	; case 8
 17963  001AF8  B4D8               	btfsc	status,2,c
 17964  001AFA  D792               	goto	l453
 17965  001AFC  0A01               	xorlw	1	; case 9
 17966  001AFE  B4D8               	btfsc	status,2,c
 17967  001B00  D7B4               	goto	l457
 17968  001B02  0A03               	xorlw	3	; case 10
 17969  001B04  B4D8               	btfsc	status,2,c
 17970  001B06  D7B7               	goto	l459
 17971  001B08  D50C               	goto	l409
 17972  001B0A                     l413:
 17973                           
 17974                           ;MOTEapp.c: 508: return joiningComplete;
 17975  001B0A  0100               	movlb	0	; () banked
 17976  001B0C  517C               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17977  001B0E  0012               	return	
 17978  001B10                     __end_of_moteJoiningProcess:
 17979                           	opt stack 0
 17980                           tblptru	equ	0xFF8
 17981                           tblptrh	equ	0xFF7
 17982                           tblptrl	equ	0xFF6
 17983                           tablat	equ	0xFF5
 17984                           prodh	equ	0xFF4
 17985                           prodl	equ	0xFF3
 17986                           intcon	equ	0xFF2
 17987                           intcon3	equ	0xFF0
 17988                           postinc0	equ	0xFEE
 17989                           wreg	equ	0xFE8
 17990                           indf1	equ	0xFE7
 17991                           postdec1	equ	0xFE5
 17992                           fsr1h	equ	0xFE2
 17993                           fsr1l	equ	0xFE1
 17994                           indf2	equ	0xFDF
 17995                           fsr2h	equ	0xFDA
 17996                           fsr2l	equ	0xFD9
 17997                           status	equ	0xFD8
 17998                           
 17999 ;; *************** function _strncmp *****************
 18000 ;; Defined at:
 18001 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 18002 ;; Parameters:    Size  Location     Type
 18003 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18004 ;;		 -> moduleResonseBuffer(64), 
 18005 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18006 ;;		 -> STR_100(7), STR_98(7), STR_96(7), STR_93(7), 
 18007 ;;		 -> STR_35(5), STR_31(5), 
 18008 ;;  len             2    4[BANK0 ] unsigned int 
 18009 ;; Auto vars:     Size  Location     Type
 18010 ;;		None
 18011 ;; Return value:  Size  Location     Type
 18012 ;;                  2    0[BANK0 ] int 
 18013 ;; Registers used:
 18014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18015 ;; Tracked objects:
 18016 ;;		On entry : 0/0
 18017 ;;		On exit  : 0/0
 18018 ;;		Unchanged: 0/0
 18019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18020 ;;      Params:         0       6       0       0       0       0       0       0       0
 18021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18022 ;;      Temps:          0       3       0       0       0       0       0       0       0
 18023 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18024 ;;Total ram usage:        9 bytes
 18025 ;; Hardware stack levels used:    1
 18026 ;; Hardware stack levels required when called:   11
 18027 ;; This function calls:
 18028 ;;		Nothing
 18029 ;; This function is called by:
 18030 ;;		_moteJoiningProcess
 18031 ;;		_moteRunningProcess
 18032 ;; This function uses a non-reentrant model
 18033 ;;
 18034                           
 18035                           	psect	text49
 18036  004F50                     __ptext49:
 18037                           	opt stack 0
 18038  004F50                     _strncmp:
 18039                           	opt stack 17
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;incstack = 0
 18043  004F50  D037               	goto	l2920
 18044  004F52                     l9865:
 18045  004F52  C060  FFD9         	movff	strncmp@s1,fsr2l
 18046  004F56  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18047  004F5A  50DF               	movf	indf2,w,c
 18048  004F5C  B4D8               	btfsc	status,2,c
 18049  004F5E  D011               	goto	u8360
 18050  004F60  C060  FFD9         	movff	strncmp@s1,fsr2l
 18051  004F64  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18052  004F68  50DF               	movf	indf2,w,c
 18053  004F6A  0100               	movlb	0	; () banked
 18054  004F6C  6F66               	movwf	??_strncmp& (0+255),b
 18055  004F6E  C062  FFF6         	movff	strncmp@s2,tblptrl
 18056  004F72  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 18057  004F76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18058  004F76  6AF8               	clrf	tblptru,c
 18059  004F78                     	endif
 18060  004F78                     	if	0	;tblptru may be non-zero
 18061  004F78                     	endif
 18062  004F78  0008               	tblrd		*
 18063  004F7A  50F5               	movf	tablat,w,c
 18064  004F7C  1966               	xorwf	??_strncmp& (0+255),w,b
 18065  004F7E  B4D8               	btfsc	status,2,c
 18066  004F80  D01B               	goto	l2922
 18067  004F82                     u8360:
 18068                           
 18069                           ; BSR set to: 0
 18070  004F82  C062  FFF6         	movff	strncmp@s2,tblptrl
 18071  004F86  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 18072  004F8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18073  004F8A  6AF8               	clrf	tblptru,c
 18074  004F8C                     	endif
 18075  004F8C                     	if	0	;tblptru may be non-zero
 18076  004F8C                     	endif
 18077  004F8C  0008               	tblrd		*
 18078  004F8E  50F5               	movf	tablat,w,c
 18079  004F90  0100               	movlb	0	; () banked
 18080  004F92  6F66               	movwf	??_strncmp& (0+255),b
 18081  004F94  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18082  004F96  1F66               	comf	??_strncmp& (0+255),f,b
 18083  004F98  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18084  004F9A  4B66               	infsnz	??_strncmp& (0+255),f,b
 18085  004F9C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18086  004F9E  C060  FFD9         	movff	strncmp@s1,fsr2l
 18087  004FA2  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18088  004FA6  50DF               	movf	indf2,w,c
 18089  004FA8  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18090  004FAA  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18091  004FAC  2566               	addwf	??_strncmp& (0+255),w,b
 18092  004FAE  6F60               	movwf	?_strncmp& (0+255),b
 18093  004FB0  0E00               	movlw	0
 18094  004FB2  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18095  004FB4  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18096                           
 18097                           ; BSR set to: 0
 18098  004FB6  0012               	return	
 18099  004FB8                     l2922:
 18100                           
 18101                           ; BSR set to: 0
 18102                           
 18103                           ; BSR set to: 0
 18104  004FB8  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18105  004FBA  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18106  004FBC  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18107  004FBE  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18108  004FC0                     l2920:
 18109                           
 18110                           ; BSR set to: 0
 18111  004FC0  0100               	movlb	0	; () banked
 18112  004FC2  0764               	decf	strncmp@len& (0+255),f,b
 18113  004FC4  A0D8               	btfss	status,0,c
 18114  004FC6  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18115  004FC8  2964               	incf	strncmp@len& (0+255),w,b
 18116  004FCA  E1C3               	bnz	l9865
 18117  004FCC  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18118  004FCE  A4D8               	btfss	status,2,c
 18119  004FD0  D7C0               	goto	l2921
 18120                           
 18121                           ; BSR set to: 0
 18122                           
 18123                           ; BSR set to: 0
 18124  004FD2  0E00               	movlw	0
 18125  004FD4  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18126  004FD6  0E00               	movlw	0
 18127  004FD8  6F60               	movwf	?_strncmp& (0+255),b
 18128  004FDA  0012               	return	
 18129  004FDC                     __end_of_strncmp:
 18130                           	opt stack 0
 18131                           tblptru	equ	0xFF8
 18132                           tblptrh	equ	0xFF7
 18133                           tblptrl	equ	0xFF6
 18134                           tablat	equ	0xFF5
 18135                           prodh	equ	0xFF4
 18136                           prodl	equ	0xFF3
 18137                           intcon	equ	0xFF2
 18138                           intcon3	equ	0xFF0
 18139                           postinc0	equ	0xFEE
 18140                           wreg	equ	0xFE8
 18141                           indf1	equ	0xFE7
 18142                           postdec1	equ	0xFE5
 18143                           fsr1h	equ	0xFE2
 18144                           fsr1l	equ	0xFE1
 18145                           indf2	equ	0xFDF
 18146                           fsr2h	equ	0xFDA
 18147                           fsr2l	equ	0xFD9
 18148                           status	equ	0xFD8
 18149                           
 18150 ;; *************** function _strcmp *****************
 18151 ;; Defined at:
 18152 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18155 ;;		 -> moduleResonseBuffer(64), 
 18156 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18157 ;;		 -> STR_92(3), STR_69(14), STR_67(11), STR_63(7), 
 18158 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 18159 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 18160 ;; Auto vars:     Size  Location     Type
 18161 ;;  r               1    5[BANK0 ] char 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  2    0[BANK0 ] int 
 18164 ;; Registers used:
 18165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18171 ;;      Params:         0       4       0       0       0       0       0       0       0
 18172 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18173 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18174 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18175 ;;Total ram usage:        6 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; Hardware stack levels required when called:   11
 18178 ;; This function calls:
 18179 ;;		Nothing
 18180 ;; This function is called by:
 18181 ;;		_moteJoiningProcess
 18182 ;;		_moteRunningProcess
 18183 ;; This function uses a non-reentrant model
 18184 ;;
 18185                           
 18186                           	psect	text50
 18187  005A76                     __ptext50:
 18188                           	opt stack 0
 18189  005A76                     _strcmp:
 18190                           	opt stack 17
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;incstack = 0
 18194  005A76  D005               	goto	l2912
 18195  005A78  0100               	movlb	0	; () banked
 18196  005A7A  4B60               	infsnz	strcmp@s1& (0+255),f,b
 18197  005A7C  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 18198  005A7E  4B62               	infsnz	strcmp@s2& (0+255),f,b
 18199  005A80  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 18200  005A82                     l2912:
 18201                           
 18202                           ; BSR set to: 0
 18203  005A82  C060  FFD9         	movff	strcmp@s1,fsr2l
 18204  005A86  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 18205  005A8A  50DF               	movf	indf2,w,c
 18206  005A8C  0100               	movlb	0	; () banked
 18207  005A8E  6F64               	movwf	??_strcmp& (0+255),b
 18208  005A90  C062  FFF6         	movff	strcmp@s2,tblptrl
 18209  005A94  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 18210  005A98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18211  005A98  6AF8               	clrf	tblptru,c
 18212  005A9A                     	endif
 18213  005A9A                     	if	0	;tblptru may be non-zero
 18214  005A9A                     	endif
 18215  005A9A  0008               	tblrd		*
 18216  005A9C  50F5               	movf	tablat,w,c
 18217  005A9E  0800               	sublw	0
 18218  005AA0  2564               	addwf	??_strcmp& (0+255),w,b
 18219  005AA2  6F65               	movwf	strcmp@r& (0+255),b
 18220  005AA4  5165               	movf	strcmp@r& (0+255),w,b
 18221  005AA6  A4D8               	btfss	status,2,c
 18222  005AA8  D007               	goto	u8390
 18223                           
 18224                           ; BSR set to: 0
 18225  005AAA  C060  FFD9         	movff	strcmp@s1,fsr2l
 18226  005AAE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 18227  005AB2  50DF               	movf	indf2,w,c
 18228  005AB4  A4D8               	btfss	status,2,c
 18229  005AB6  D7E0               	goto	l2913
 18230  005AB8                     u8390:
 18231                           
 18232                           ; BSR set to: 0
 18233                           
 18234                           ; BSR set to: 0
 18235                           
 18236                           ; BSR set to: 0
 18237  005AB8  5165               	movf	strcmp@r& (0+255),w,b
 18238  005ABA  6F60               	movwf	?_strcmp& (0+255),b
 18239  005ABC  6B61               	clrf	(?_strcmp+1)& (0+255),b
 18240  005ABE  BF60               	btfsc	?_strcmp& (0+255),7,b
 18241  005AC0  0761               	decf	(?_strcmp+1)& (0+255),f,b
 18242  005AC2  0012               	return	
 18243  005AC4                     __end_of_strcmp:
 18244                           	opt stack 0
 18245                           tblptru	equ	0xFF8
 18246                           tblptrh	equ	0xFF7
 18247                           tblptrl	equ	0xFF6
 18248                           tablat	equ	0xFF5
 18249                           prodh	equ	0xFF4
 18250                           prodl	equ	0xFF3
 18251                           intcon	equ	0xFF2
 18252                           intcon3	equ	0xFF0
 18253                           postinc0	equ	0xFEE
 18254                           wreg	equ	0xFE8
 18255                           indf1	equ	0xFE7
 18256                           postdec1	equ	0xFE5
 18257                           fsr1h	equ	0xFE2
 18258                           fsr1l	equ	0xFE1
 18259                           indf2	equ	0xFDF
 18260                           fsr2h	equ	0xFDA
 18261                           fsr2l	equ	0xFD9
 18262                           status	equ	0xFD8
 18263                           
 18264 ;; *************** function _moteApp_delayms *****************
 18265 ;; Defined at:
 18266 ;;		line 189 in file "../Includes/Board/MOTEapp.c"
 18267 ;; Parameters:    Size  Location     Type
 18268 ;;  length          2    0[BANK0 ] unsigned int 
 18269 ;; Auto vars:     Size  Location     Type
 18270 ;;  counter         2    3[BANK0 ] unsigned int 
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1    wreg      void 
 18273 ;; Registers used:
 18274 ;;		wreg, status,2, status,0
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18280 ;;      Params:         0       2       0       0       0       0       0       0       0
 18281 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18282 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18283 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18284 ;;Total ram usage:        5 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:   11
 18287 ;; This function calls:
 18288 ;;		Nothing
 18289 ;; This function is called by:
 18290 ;;		_main
 18291 ;;		_test_powerup
 18292 ;;		_moduleResync
 18293 ;;		_moteJoiningProcess
 18294 ;;		_moteRunningProcess
 18295 ;;		_moteApp_GoToSleep
 18296 ;;		_moteApp_setSensorsInput
 18297 ;; This function uses a non-reentrant model
 18298 ;;
 18299                           
 18300                           	psect	text51
 18301  005F10                     __ptext51:
 18302                           	opt stack 0
 18303  005F10                     _moteApp_delayms:
 18304                           	opt stack 16
 18305                           
 18306                           ;MOTEapp.c: 191: uint16_t counter;
 18307                           ;MOTEapp.c: 192: for(counter = 0; counter < length; counter++)
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;incstack = 0
 18311  005F10  0E00               	movlw	0
 18312  005F12  0100               	movlb	0	; () banked
 18313  005F14  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 18314  005F16  0E00               	movlw	0
 18315  005F18  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 18316  005F1A  D00C               	goto	l366
 18317  005F1C                     
 18318                           ; BSR set to: 0
 18319                           ;MOTEapp.c: 193: {
 18320                           ;MOTEapp.c: 194: _delay((unsigned long)((1)*(48000000/4000.0)));
 18321                           
 18322                           ; BSR set to: 0
 18323  005F1C  0E10               	movlw	16
 18324  005F1E  0100               	movlb	0	; () banked
 18325  005F20  6F62               	movwf	??_moteApp_delayms& (0+255),b
 18326  005F22  0E94               	movlw	148
 18327  005F24                     u11917:
 18328  005F24  2EE8               	decfsz	wreg,f,c
 18329  005F26  D7FE               	bra	u11917
 18330  005F28  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 18331  005F2A  D7FC               	bra	u11917
 18332  005F2C  F000               	nop	
 18333  005F2E  0100               	movlb	0	; () banked
 18334  005F30  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 18335  005F32  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 18336  005F34                     l366:
 18337                           
 18338                           ; BSR set to: 0
 18339  005F34  5160               	movf	moteApp_delayms@length& (0+255),w,b
 18340  005F36  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 18341  005F38  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 18342  005F3A  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 18343  005F3C  B0D8               	btfsc	status,0,c
 18344  005F3E  0012               	return	
 18345  005F40  D7ED               	goto	l367
 18346  005F42                     __end_of_moteApp_delayms:
 18347                           	opt stack 0
 18348                           tblptru	equ	0xFF8
 18349                           tblptrh	equ	0xFF7
 18350                           tblptrl	equ	0xFF6
 18351                           tablat	equ	0xFF5
 18352                           prodh	equ	0xFF4
 18353                           prodl	equ	0xFF3
 18354                           intcon	equ	0xFF2
 18355                           intcon3	equ	0xFF0
 18356                           postinc0	equ	0xFEE
 18357                           wreg	equ	0xFE8
 18358                           indf1	equ	0xFE7
 18359                           postdec1	equ	0xFE5
 18360                           fsr1h	equ	0xFE2
 18361                           fsr1l	equ	0xFE1
 18362                           indf2	equ	0xFDF
 18363                           fsr2h	equ	0xFDA
 18364                           fsr2l	equ	0xFD9
 18365                           status	equ	0xFD8
 18366                           
 18367 ;; *************** function _DATAEE_WriteByte *****************
 18368 ;; Defined at:
 18369 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 18370 ;; Parameters:    Size  Location     Type
 18371 ;;  bAdd            1    wreg     unsigned char 
 18372 ;;  bData           1    0[BANK0 ] unsigned char 
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;  bAdd            1    1[BANK0 ] unsigned char 
 18375 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      void 
 18378 ;; Registers used:
 18379 ;;		wreg, status,2
 18380 ;; Tracked objects:
 18381 ;;		On entry : 0/0
 18382 ;;		On exit  : 0/0
 18383 ;;		Unchanged: 0/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18385 ;;      Params:         0       1       0       0       0       0       0       0       0
 18386 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18388 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18389 ;;Total ram usage:        3 bytes
 18390 ;; Hardware stack levels used:    1
 18391 ;; Hardware stack levels required when called:   11
 18392 ;; This function calls:
 18393 ;;		Nothing
 18394 ;; This function is called by:
 18395 ;;		_main
 18396 ;;		_moteJoiningProcess
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text52
 18401  005D1C                     __ptext52:
 18402                           	opt stack 0
 18403  005D1C                     _DATAEE_WriteByte:
 18404                           	opt stack 17
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;incstack = 0
 18408                           ;DATAEE_WriteByte@bAdd stored from wreg
 18409  005D1C  0100               	movlb	0	; () banked
 18410  005D1E  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 18411                           
 18412                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 18413  005D20  0E00               	movlw	0
 18414  005D22  BEF2               	btfsc	intcon,7,c	;volatile
 18415  005D24  0E01               	movlw	1
 18416  005D26  0100               	movlb	0	; () banked
 18417  005D28  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 18421  005D2A  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;memory.c: 171: EEDATA = bData;
 18425  005D2E  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 18429  005D32  9EA6               	bcf	4006,7,c	;volsfr
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;memory.c: 173: EECON1bits.CFGS = 0;
 18433  005D34  9CA6               	bcf	4006,6,c	;volsfr
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;memory.c: 174: EECON1bits.WREN = 1;
 18437  005D36  84A6               	bsf	4006,2,c	;volsfr
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;memory.c: 175: INTCONbits.GIE = 0;
 18441  005D38  9EF2               	bcf	intcon,7,c	;volatile
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;memory.c: 176: EECON2 = 0x55;
 18445  005D3A  0E55               	movlw	85
 18446  005D3C  6EA7               	movwf	4007,c	;volsfr
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;memory.c: 177: EECON2 = 0xAA;
 18450  005D3E  0EAA               	movlw	170
 18451  005D40  6EA7               	movwf	4007,c	;volsfr
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;memory.c: 178: EECON1bits.WR = 1;
 18455  005D42  82A6               	bsf	4006,1,c	;volsfr
 18456  005D44                     
 18457                           ; BSR set to: 0
 18458                           ;memory.c: 181: {
 18459  005D44  B2A6               	btfsc	4006,1,c	;volsfr
 18460  005D46  D7FE               	goto	l1657
 18461                           
 18462                           ;memory.c: 182: }
 18463                           ;memory.c: 184: EECON1bits.WREN = 0;
 18464  005D48  94A6               	bcf	4006,2,c	;volsfr
 18465                           
 18466                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 18467  005D4A  0100               	movlb	0	; () banked
 18468  005D4C  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 18469  005D4E  D002               	bra	u8225
 18470  005D50  9EF2               	bcf	intcon,7,c	;volatile
 18471  005D52  D001               	bra	u8226
 18472  005D54                     u8225:
 18473  005D54  8EF2               	bsf	intcon,7,c	;volatile
 18474  005D56                     u8226:
 18475  005D56  0012               	return		;funcret
 18476  005D58                     __end_of_DATAEE_WriteByte:
 18477                           	opt stack 0
 18478                           tblptru	equ	0xFF8
 18479                           tblptrh	equ	0xFF7
 18480                           tblptrl	equ	0xFF6
 18481                           tablat	equ	0xFF5
 18482                           prodh	equ	0xFF4
 18483                           prodl	equ	0xFF3
 18484                           intcon	equ	0xFF2
 18485                           intcon3	equ	0xFF0
 18486                           postinc0	equ	0xFEE
 18487                           wreg	equ	0xFE8
 18488                           indf1	equ	0xFE7
 18489                           postdec1	equ	0xFE5
 18490                           fsr1h	equ	0xFE2
 18491                           fsr1l	equ	0xFE1
 18492                           indf2	equ	0xFDF
 18493                           fsr2h	equ	0xFDA
 18494                           fsr2l	equ	0xFD9
 18495                           status	equ	0xFD8
 18496                           
 18497 ;; *************** function _moteApp_searchFrameGPS *****************
 18498 ;; Defined at:
 18499 ;;		line 1611 in file "../Includes/Board/MOTEapp.c"
 18500 ;; Parameters:    Size  Location     Type
 18501 ;;		None
 18502 ;; Auto vars:     Size  Location     Type
 18503 ;;  i               1   39[BANK0 ] unsigned char 
 18504 ;;  c               1   38[BANK0 ] unsigned char 
 18505 ;;  cs              1   37[BANK0 ] unsigned char 
 18506 ;;  ccs             1   36[BANK0 ] unsigned char 
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  1    wreg      void 
 18509 ;; Registers used:
 18510 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18516 ;;      Params:         0       0       0       0       0       0       0       0       0
 18517 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18518 ;;      Temps:          0       2       0       0       0       0       0       0       0
 18519 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18520 ;;Total ram usage:        6 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:   16
 18523 ;; This function calls:
 18524 ;;		_emptyFIFO
 18525 ;;		_oled_clear
 18526 ;;		_oled_putStringLineN
 18527 ;;		_oled_putint8
 18528 ;;		_outFIFO
 18529 ;;		_unhex
 18530 ;; This function is called by:
 18531 ;;		_moteHandler
 18532 ;; This function uses a non-reentrant model
 18533 ;;
 18534                           
 18535                           	psect	text53
 18536  002928                     __ptext53:
 18537                           	opt stack 0
 18538  002928                     _moteApp_searchFrameGPS:
 18539                           	opt stack 13
 18540                           
 18541                           ;MOTEapp.c: 1613: uint8_t c;
 18542                           ;MOTEapp.c: 1614: uint8_t i, cs, ccs;
 18543                           ;MOTEapp.c: 1616: switch(statusSSFG)
 18544                           
 18545                           ;incstack = 0
 18546  002928  D0E0               	goto	l809
 18547  00292A                     
 18548                           ;MOTEapp.c: 1621: {
 18549                           ;MOTEapp.c: 1622: c = outFIFO();
 18550  00292A  ECE7  F02E         	call	_outFIFO	;wreg free
 18551  00292E  0100               	movlb	0	; () banked
 18552  002930  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;MOTEapp.c: 1623: if( c == '$')
 18556  002932  0E24               	movlw	36
 18557  002934  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18558  002936  A4D8               	btfss	status,2,c
 18559  002938  D004               	goto	l813
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;MOTEapp.c: 1624: {
 18563                           ;MOTEapp.c: 1625: countSearchFrameGPS = 0;
 18564  00293A  0E00               	movlw	0
 18565  00293C  6FF1               	movwf	_countSearchFrameGPS& (0+255),b
 18566                           
 18567                           ;MOTEapp.c: 1626: statusSSFG = SSFG_SENTENCE;
 18568  00293E  0E01               	movlw	1
 18569  002940  6FF5               	movwf	_statusSSFG& (0+255),b
 18570  002942                     l813:
 18571                           
 18572                           ; BSR set to: 0
 18573                           
 18574                           ; BSR set to: 0
 18575  002942  ECCC  F031         	call	_emptyFIFO	;wreg free
 18576  002946  06E8               	decf	wreg,f,c
 18577  002948  A4D8               	btfss	status,2,c
 18578  00294A  D7EF               	goto	l812
 18579                           
 18580                           ;MOTEapp.c: 1627: }
 18581                           ;MOTEapp.c: 1628: }
 18582                           ;MOTEapp.c: 1629: if(statusSSFG != SSFG_SENTENCE)
 18583  00294C  0100               	movlb	0	; () banked
 18584  00294E  05F5               	decf	_statusSSFG& (0+255),w,b
 18585  002950  A4D8               	btfss	status,2,c
 18586  002952  0012               	return	
 18587  002954  D021               	goto	l822
 18588  002956                     
 18589                           ;MOTEapp.c: 1636: {
 18590                           ;MOTEapp.c: 1637: c = outFIFO();
 18591                           
 18592                           ; BSR set to: 0
 18593  002956  ECE7  F02E         	call	_outFIFO	;wreg free
 18594  00295A  0100               	movlb	0	; () banked
 18595  00295C  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;MOTEapp.c: 1638: if( c == sentenceName[countSearchFrameGPS] )
 18599  00295E  51F1               	movf	_countSearchFrameGPS& (0+255),w,b
 18600  002960  0D01               	mullw	1
 18601  002962  0EF1               	movlw	low _sentenceName
 18602  002964  24F3               	addwf	prodl,w,c
 18603  002966  6EF6               	movwf	tblptrl,c
 18604  002968  0E75               	movlw	high _sentenceName
 18605  00296A  20F4               	addwfc	prodh,w,c
 18606  00296C  6EF7               	movwf	tblptrh,c
 18607  00296E                     	if	1	;There are 3 active tblptr bytes
 18608  00296E  6AF8               	clrf	tblptru,c
 18609  002970  0E00               	movlw	low (__mediumconst shr (0+16))
 18610  002972  22F8               	addwfc	tblptru,f,c
 18611  002974                     	endif
 18612  002974  0008               	tblrd		*
 18613  002976  50F5               	movf	tablat,w,c
 18614  002978  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18615  00297A  A4D8               	btfss	status,2,c
 18616  00297C  D00A               	goto	l820
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;MOTEapp.c: 1639: {
 18620                           ;MOTEapp.c: 1640: countSearchFrameGPS++;
 18621  00297E  2BF1               	incf	_countSearchFrameGPS& (0+255),f,b
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;MOTEapp.c: 1641: if( countSearchFrameGPS == 5 )
 18625  002980  0E05               	movlw	5
 18626  002982  19F1               	xorwf	_countSearchFrameGPS& (0+255),w,b
 18627  002984  A4D8               	btfss	status,2,c
 18628  002986  D008               	goto	l822
 18629                           
 18630                           ; BSR set to: 0
 18631                           ;MOTEapp.c: 1642: {
 18632                           ;MOTEapp.c: 1643: countSearchFrameGPS = 0;
 18633  002988  0E00               	movlw	0
 18634  00298A  6FF1               	movwf	_countSearchFrameGPS& (0+255),b
 18635                           
 18636                           ;MOTEapp.c: 1644: statusSSFG = SSFG_GET_DATA;
 18637  00298C  0E02               	movlw	2
 18638  00298E  6FF5               	movwf	_statusSSFG& (0+255),b
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;MOTEapp.c: 1645: }
 18642                           ;MOTEapp.c: 1646: }
 18643  002990  D003               	goto	l822
 18644  002992                     l820:
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;MOTEapp.c: 1647: else
 18648                           ;MOTEapp.c: 1648: {
 18649                           ;MOTEapp.c: 1649: statusSSFG = SSFG_BEBIN;
 18650                           
 18651                           ; BSR set to: 0
 18652  002992  0E00               	movlw	0
 18653  002994  6FF5               	movwf	_statusSSFG& (0+255),b
 18654                           
 18655                           ;MOTEapp.c: 1650: break;
 18656  002996  0012               	return	
 18657  002998                     l822:
 18658                           
 18659                           ; BSR set to: 0
 18660                           
 18661                           ; BSR set to: 0
 18662                           
 18663                           ; BSR set to: 0
 18664  002998  ECCC  F031         	call	_emptyFIFO	;wreg free
 18665  00299C  06E8               	decf	wreg,f,c
 18666  00299E  B4D8               	btfsc	status,2,c
 18667  0029A0  0012               	return	
 18668  0029A2  D7D9               	goto	l819
 18669  0029A4                     
 18670                           ;MOTEapp.c: 1660: {
 18671                           ;MOTEapp.c: 1661: c = outFIFO();
 18672  0029A4  ECE7  F02E         	call	_outFIFO	;wreg free
 18673  0029A8  0100               	movlb	0	; () banked
 18674  0029AA  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;MOTEapp.c: 1662: if(c == '\r')
 18678  0029AC  0E0D               	movlw	13
 18679  0029AE  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18680  0029B0  A4D8               	btfss	status,2,c
 18681  0029B2  D00D               	goto	l828
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;MOTEapp.c: 1663: {
 18685                           ;MOTEapp.c: 1664: dataFrameGPS[countSearchFrameGPS] = 0;
 18686  0029B4  51F1               	movf	_countSearchFrameGPS& (0+255),w,b
 18687  0029B6  0D01               	mullw	1
 18688  0029B8  0E00               	movlw	low _dataFrameGPS
 18689  0029BA  24F3               	addwf	prodl,w,c
 18690  0029BC  6ED9               	movwf	fsr2l,c
 18691  0029BE  0E06               	movlw	high _dataFrameGPS
 18692  0029C0  20F4               	addwfc	prodh,w,c
 18693  0029C2  6EDA               	movwf	fsr2h,c
 18694  0029C4  0E00               	movlw	0
 18695  0029C6  6EDF               	movwf	indf2,c
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;MOTEapp.c: 1665: statusSSFG = SSFG_CHECK;
 18699  0029C8  0E03               	movlw	3
 18700  0029CA  6FF5               	movwf	_statusSSFG& (0+255),b
 18701                           
 18702                           ;MOTEapp.c: 1666: }
 18703  0029CC  D00B               	goto	l829
 18704  0029CE                     l828:
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;MOTEapp.c: 1667: else
 18708                           ;MOTEapp.c: 1668: {
 18709                           ;MOTEapp.c: 1669: dataFrameGPS[countSearchFrameGPS] = c;
 18710                           
 18711                           ; BSR set to: 0
 18712  0029CE  51F1               	movf	_countSearchFrameGPS& (0+255),w,b
 18713  0029D0  0D01               	mullw	1
 18714  0029D2  0E00               	movlw	low _dataFrameGPS
 18715  0029D4  24F3               	addwf	prodl,w,c
 18716  0029D6  6ED9               	movwf	fsr2l,c
 18717  0029D8  0E06               	movlw	high _dataFrameGPS
 18718  0029DA  20F4               	addwfc	prodh,w,c
 18719  0029DC  6EDA               	movwf	fsr2h,c
 18720  0029DE  C086  FFDF         	movff	moteApp_searchFrameGPS@c,indf2
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;MOTEapp.c: 1670: countSearchFrameGPS ++;
 18724  0029E2  2BF1               	incf	_countSearchFrameGPS& (0+255),f,b
 18725  0029E4                     l829:
 18726                           
 18727                           ; BSR set to: 0
 18728                           
 18729                           ; BSR set to: 0
 18730  0029E4  ECCC  F031         	call	_emptyFIFO	;wreg free
 18731  0029E8  06E8               	decf	wreg,f,c
 18732  0029EA  A4D8               	btfss	status,2,c
 18733  0029EC  D7DB               	goto	l827
 18734                           
 18735                           ;MOTEapp.c: 1671: }
 18736                           ;MOTEapp.c: 1672: }
 18737                           ;MOTEapp.c: 1673: if(statusSSFG != SSFG_CHECK)
 18738  0029EE  0E03               	movlw	3
 18739  0029F0  0100               	movlb	0	; () banked
 18740  0029F2  19F5               	xorwf	_statusSSFG& (0+255),w,b
 18741  0029F4  A4D8               	btfss	status,2,c
 18742  0029F6  0012               	return	
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;MOTEapp.c: 1678: i = 0;
 18746                           
 18747                           ; BSR set to: 0
 18748                           
 18749                           ;MOTEapp.c: 1676: }
 18750                           ;MOTEapp.c: 1677: case SSFG_CHECK:
 18751                           
 18752                           ; BSR set to: 0
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;MOTEapp.c: 1674: {
 18756                           ;MOTEapp.c: 1675: break;
 18757  0029F8  0E00               	movlw	0
 18758  0029FA  6F87               	movwf	moteApp_searchFrameGPS@i& (0+255),b
 18759                           
 18760                           ;MOTEapp.c: 1679: cs = 0;
 18761  0029FC  0E00               	movlw	0
 18762  0029FE  6F85               	movwf	moteApp_searchFrameGPS@cs& (0+255),b
 18763                           
 18764                           ; BSR set to: 0
 18765                           ;MOTEapp.c: 1681: cs ^= 'G';
 18766  002A00  0E47               	movlw	71
 18767  002A02  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;MOTEapp.c: 1682: cs ^= 'P';
 18771  002A04  0E50               	movlw	80
 18772  002A06  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;MOTEapp.c: 1683: cs ^= 'G';
 18776  002A08  0E47               	movlw	71
 18777  002A0A  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18778                           
 18779                           ; BSR set to: 0
 18780                           ;MOTEapp.c: 1684: cs ^= 'L';
 18781  002A0C  0E4C               	movlw	76
 18782  002A0E  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;MOTEapp.c: 1685: cs ^= 'L';
 18786  002A10  0E4C               	movlw	76
 18787  002A12  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18788  002A14                     
 18789                           ; BSR set to: 0
 18790                           ;MOTEapp.c: 1688: {
 18791                           ;MOTEapp.c: 1689: if(i >= countSearchFrameGPS)
 18792                           
 18793                           ; BSR set to: 0
 18794  002A14  51F1               	movf	_countSearchFrameGPS& (0+255),w,b
 18795  002A16  5D87               	subwf	moteApp_searchFrameGPS@i& (0+255),w,b
 18796  002A18  B0D8               	btfsc	status,0,c
 18797  002A1A  D04B               	goto	l835
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;MOTEapp.c: 1692: }
 18801                           ;MOTEapp.c: 1693: if(dataFrameGPS[i] == '*')
 18802                           
 18803                           ; BSR set to: 0
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;MOTEapp.c: 1690: {
 18807                           ;MOTEapp.c: 1691: break;
 18808  002A1C  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18809  002A1E  0D01               	mullw	1
 18810  002A20  0E00               	movlw	low _dataFrameGPS
 18811  002A22  24F3               	addwf	prodl,w,c
 18812  002A24  6ED9               	movwf	fsr2l,c
 18813  002A26  0E06               	movlw	high _dataFrameGPS
 18814  002A28  20F4               	addwfc	prodh,w,c
 18815  002A2A  6EDA               	movwf	fsr2h,c
 18816  002A2C  0E2A               	movlw	42
 18817  002A2E  18DE               	xorwf	postinc2,w,c
 18818  002A30  A4D8               	btfss	status,2,c
 18819  002A32  D033               	goto	l836
 18820                           
 18821                           ; BSR set to: 0
 18822                           ;MOTEapp.c: 1694: {
 18823                           ;MOTEapp.c: 1695: ccs = unhex(dataFrameGPS[i + 1])*16;
 18824  002A34  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18825  002A36  6F82               	movwf	??_moteApp_searchFrameGPS& (0+255),b
 18826  002A38  6B83               	clrf	(??_moteApp_searchFrameGPS+1)& (0+255),b
 18827  002A3A  0E01               	movlw	1
 18828  002A3C  2782               	addwf	??_moteApp_searchFrameGPS& (0+255),f,b
 18829  002A3E  0E00               	movlw	0
 18830  002A40  2383               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),f,b
 18831  002A42  0E00               	movlw	low _dataFrameGPS
 18832  002A44  2582               	addwf	??_moteApp_searchFrameGPS& (0+255),w,b
 18833  002A46  6ED9               	movwf	fsr2l,c
 18834  002A48  0E06               	movlw	high _dataFrameGPS
 18835  002A4A  2183               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),w,b
 18836  002A4C  6EDA               	movwf	fsr2h,c
 18837  002A4E  50DF               	movf	indf2,w,c
 18838  002A50  EC49  F030         	call	_unhex
 18839  002A54  0D10               	mullw	16
 18840  002A56  CFF3 F084          	movff	prodl,moteApp_searchFrameGPS@ccs
 18841                           
 18842                           ;MOTEapp.c: 1696: ccs += unhex(dataFrameGPS[i + 2]);
 18843  002A5A  0100               	movlb	0	; () banked
 18844  002A5C  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18845  002A5E  6F82               	movwf	??_moteApp_searchFrameGPS& (0+255),b
 18846  002A60  6B83               	clrf	(??_moteApp_searchFrameGPS+1)& (0+255),b
 18847  002A62  0E02               	movlw	2
 18848  002A64  2782               	addwf	??_moteApp_searchFrameGPS& (0+255),f,b
 18849  002A66  0E00               	movlw	0
 18850  002A68  2383               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),f,b
 18851  002A6A  0E00               	movlw	low _dataFrameGPS
 18852  002A6C  2582               	addwf	??_moteApp_searchFrameGPS& (0+255),w,b
 18853  002A6E  6ED9               	movwf	fsr2l,c
 18854  002A70  0E06               	movlw	high _dataFrameGPS
 18855  002A72  2183               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),w,b
 18856  002A74  6EDA               	movwf	fsr2h,c
 18857  002A76  50DF               	movf	indf2,w,c
 18858  002A78  EC49  F030         	call	_unhex
 18859  002A7C  0100               	movlb	0	; () banked
 18860  002A7E  2784               	addwf	moteApp_searchFrameGPS@ccs& (0+255),f,b
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;MOTEapp.c: 1697: lengthDataGPS = i;
 18864  002A80  C087  F0F0         	movff	moteApp_searchFrameGPS@i,_lengthDataGPS
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;MOTEapp.c: 1698: dataFrameGPS[i] = 0;
 18868  002A84  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18869  002A86  0D01               	mullw	1
 18870  002A88  0E00               	movlw	low _dataFrameGPS
 18871  002A8A  24F3               	addwf	prodl,w,c
 18872  002A8C  6ED9               	movwf	fsr2l,c
 18873  002A8E  0E06               	movlw	high _dataFrameGPS
 18874  002A90  20F4               	addwfc	prodh,w,c
 18875  002A92  6EDA               	movwf	fsr2h,c
 18876  002A94  0E00               	movlw	0
 18877  002A96  6EDF               	movwf	indf2,c
 18878                           
 18879                           ;MOTEapp.c: 1699: break;
 18880  002A98  D00C               	goto	l835
 18881  002A9A                     l836:
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;MOTEapp.c: 1701: else
 18885                           ;MOTEapp.c: 1702: {
 18886                           ;MOTEapp.c: 1703: cs ^= dataFrameGPS[i];
 18887                           
 18888                           ; BSR set to: 0
 18889  002A9A  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18890  002A9C  0D01               	mullw	1
 18891  002A9E  0E00               	movlw	low _dataFrameGPS
 18892  002AA0  24F3               	addwf	prodl,w,c
 18893  002AA2  6ED9               	movwf	fsr2l,c
 18894  002AA4  0E06               	movlw	high _dataFrameGPS
 18895  002AA6  20F4               	addwfc	prodh,w,c
 18896  002AA8  6EDA               	movwf	fsr2h,c
 18897  002AAA  50DF               	movf	indf2,w,c
 18898  002AAC  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;MOTEapp.c: 1704: i++;
 18902  002AAE  2B87               	incf	moteApp_searchFrameGPS@i& (0+255),f,b
 18903                           
 18904                           ; BSR set to: 0
 18905                           
 18906                           ; BSR set to: 0
 18907  002AB0  D7B1               	goto	l833
 18908  002AB2                     l835:
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;MOTEapp.c: 1705: }
 18912                           ;MOTEapp.c: 1706: }
 18913                           ;MOTEapp.c: 1707: oled_clear();
 18914                           
 18915                           ; BSR set to: 0
 18916  002AB2  EC5E  F031         	call	_oled_clear	;wreg free
 18917                           
 18918                           ;MOTEapp.c: 1708: if(cs == ccs)
 18919  002AB6  0100               	movlb	0	; () banked
 18920  002AB8  5184               	movf	moteApp_searchFrameGPS@ccs& (0+255),w,b
 18921  002ABA  1985               	xorwf	moteApp_searchFrameGPS@cs& (0+255),w,b
 18922  002ABC  A4D8               	btfss	status,2,c
 18923  002ABE  D007               	goto	l839
 18924                           
 18925                           ; BSR set to: 0
 18926                           ;MOTEapp.c: 1709: {
 18927                           ;MOTEapp.c: 1710: oled_putStringLineN(dataFrameGPS);
 18928  002AC0  0E00               	movlw	low _dataFrameGPS
 18929  002AC2  6F6C               	movwf	oled_putStringLineN@string& (0+255),b
 18930  002AC4  0E06               	movlw	high _dataFrameGPS
 18931  002AC6  6F6D               	movwf	(oled_putStringLineN@string+1)& (0+255),b
 18932  002AC8  ECEB  F02C         	call	_oled_putStringLineN	;wreg free
 18933                           
 18934                           ;MOTEapp.c: 1711: }
 18935  002ACC  D00A               	goto	l840
 18936  002ACE                     l839:
 18937                           
 18938                           ;MOTEapp.c: 1712: else
 18939                           ;MOTEapp.c: 1713: {
 18940                           ;MOTEapp.c: 1714: lengthDataGPS = 0;
 18941  002ACE  0E00               	movlw	0
 18942  002AD0  0100               	movlb	0	; () banked
 18943  002AD2  6FF0               	movwf	_lengthDataGPS& (0+255),b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;MOTEapp.c: 1715: oled_putint8(ccs, 0, 0);
 18947  002AD4  0E00               	movlw	0
 18948  002AD6  6F78               	movwf	oled_putint8@station_dot& (0+255),b
 18949  002AD8  0E00               	movlw	0
 18950  002ADA  6F79               	movwf	oled_putint8@start_page& (0+255),b
 18951  002ADC  5184               	movf	moteApp_searchFrameGPS@ccs& (0+255),w,b
 18952  002ADE  EC21  F025         	call	_oled_putint8
 18953  002AE2                     l840:
 18954                           
 18955                           ;MOTEapp.c: 1716: }
 18956                           ;MOTEapp.c: 1717: statusSSFG = SSFG_BEBIN;
 18957  002AE2  0E00               	movlw	0
 18958  002AE4  0100               	movlb	0	; () banked
 18959  002AE6  6FF5               	movwf	_statusSSFG& (0+255),b
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;MOTEapp.c: 1719: }
 18963                           
 18964                           ;MOTEapp.c: 1718: break;
 18965  002AE8  0012               	return	
 18966  002AEA                     l809:
 18967                           
 18968                           ; BSR set to: 0
 18969  002AEA  0100               	movlb	0	; () banked
 18970  002AEC  51F5               	movf	_statusSSFG& (0+255),w,b
 18971                           
 18972                           ; Switch size 1, requested type "space"
 18973                           ; Number of cases is 4, Range of values is 0 to 3
 18974                           ; switch strategies available:
 18975                           ; Name         Instructions Cycles
 18976                           ; simple_byte           13     7 (average)
 18977                           ;	Chosen strategy is simple_byte
 18978  002AEE  0A00               	xorlw	0	; case 0
 18979  002AF0  B4D8               	btfsc	status,2,c
 18980  002AF2  D727               	goto	l813
 18981  002AF4  0A01               	xorlw	1	; case 1
 18982  002AF6  B4D8               	btfsc	status,2,c
 18983  002AF8  D74F               	goto	l822
 18984  002AFA  0A03               	xorlw	3	; case 2
 18985  002AFC  B4D8               	btfsc	status,2,c
 18986  002AFE  D772               	goto	l829
 18987  002B00  0A01               	xorlw	1	; case 3
 18988  002B02  D778               	goto	L15
 18989  002B04                     __end_of_moteApp_searchFrameGPS:
 18990                           	opt stack 0
 18991                           tblptru	equ	0xFF8
 18992                           tblptrh	equ	0xFF7
 18993                           tblptrl	equ	0xFF6
 18994                           tablat	equ	0xFF5
 18995                           prodh	equ	0xFF4
 18996                           prodl	equ	0xFF3
 18997                           intcon	equ	0xFF2
 18998                           intcon3	equ	0xFF0
 18999                           postinc0	equ	0xFEE
 19000                           wreg	equ	0xFE8
 19001                           indf1	equ	0xFE7
 19002                           postdec1	equ	0xFE5
 19003                           fsr1h	equ	0xFE2
 19004                           fsr1l	equ	0xFE1
 19005                           indf2	equ	0xFDF
 19006                           postinc2	equ	0xFDE
 19007                           fsr2h	equ	0xFDA
 19008                           fsr2l	equ	0xFD9
 19009                           status	equ	0xFD8
 19010                           
 19011 ;; *************** function _unhex *****************
 19012 ;; Defined at:
 19013 ;;		line 1254 in file "../Includes/Board/MOTEapp.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;  c               1    wreg     unsigned char 
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;  c               1    0[BANK0 ] unsigned char 
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  1    wreg      unsigned char 
 19020 ;; Registers used:
 19021 ;;		wreg, status,2, status,0
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19027 ;;      Params:         0       0       0       0       0       0       0       0       0
 19028 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19030 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19031 ;;Total ram usage:        1 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; Hardware stack levels required when called:   11
 19034 ;; This function calls:
 19035 ;;		Nothing
 19036 ;; This function is called by:
 19037 ;;		_moteApp_searchFrameGPS
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text54
 19042  006092                     __ptext54:
 19043                           	opt stack 0
 19044  006092                     _unhex:
 19045                           	opt stack 17
 19046                           
 19047                           ;incstack = 0
 19048                           ;unhex@c stored from wreg
 19049  006092  0100               	movlb	0	; () banked
 19050  006094  6F60               	movwf	unhex@c& (0+255),b
 19051                           
 19052                           ;MOTEapp.c: 1256: if (c >= '0' && c <= '9')
 19053  006096  0E2F               	movlw	47
 19054  006098  0100               	movlb	0	; () banked
 19055  00609A  6560               	cpfsgt	unhex@c& (0+255),b
 19056  00609C  D006               	goto	l697
 19057                           
 19058                           ; BSR set to: 0
 19059  00609E  0E3A               	movlw	58
 19060  0060A0  6160               	cpfslt	unhex@c& (0+255),b
 19061  0060A2  D003               	goto	l697
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;MOTEapp.c: 1257: return c - '0';
 19065  0060A4  5160               	movf	unhex@c& (0+255),w,b
 19066  0060A6  0FD0               	addlw	208
 19067                           
 19068                           ; BSR set to: 0
 19069  0060A8  0012               	return	
 19070  0060AA                     l697:
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;MOTEapp.c: 1258: if (c >= 'A' && c <= 'F')
 19074                           
 19075                           ; BSR set to: 0
 19076  0060AA  0E40               	movlw	64
 19077  0060AC  6560               	cpfsgt	unhex@c& (0+255),b
 19078  0060AE  D006               	goto	l699
 19079                           
 19080                           ; BSR set to: 0
 19081  0060B0  0E47               	movlw	71
 19082  0060B2  6160               	cpfslt	unhex@c& (0+255),b
 19083  0060B4  D003               	goto	l699
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;MOTEapp.c: 1259: return c - 'A' + 10;
 19087  0060B6  5160               	movf	unhex@c& (0+255),w,b
 19088  0060B8  0FC9               	addlw	201
 19089                           
 19090                           ; BSR set to: 0
 19091  0060BA  0012               	return	
 19092  0060BC                     l699:
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;MOTEapp.c: 1260: return '-';
 19096                           
 19097                           ; BSR set to: 0
 19098  0060BC  0E2D               	movlw	45
 19099  0060BE  0012               	return	
 19100  0060C0                     __end_of_unhex:
 19101                           	opt stack 0
 19102                           tblptru	equ	0xFF8
 19103                           tblptrh	equ	0xFF7
 19104                           tblptrl	equ	0xFF6
 19105                           tablat	equ	0xFF5
 19106                           prodh	equ	0xFF4
 19107                           prodl	equ	0xFF3
 19108                           intcon	equ	0xFF2
 19109                           intcon3	equ	0xFF0
 19110                           postinc0	equ	0xFEE
 19111                           wreg	equ	0xFE8
 19112                           indf1	equ	0xFE7
 19113                           postdec1	equ	0xFE5
 19114                           fsr1h	equ	0xFE2
 19115                           fsr1l	equ	0xFE1
 19116                           indf2	equ	0xFDF
 19117                           postinc2	equ	0xFDE
 19118                           fsr2h	equ	0xFDA
 19119                           fsr2l	equ	0xFD9
 19120                           status	equ	0xFD8
 19121                           
 19122 ;; *************** function _outFIFO *****************
 19123 ;; Defined at:
 19124 ;;		line 272 in file "../Includes/Drivers/swUart.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;		None
 19127 ;; Auto vars:     Size  Location     Type
 19128 ;;  retVal          1    0[BANK0 ] unsigned char 
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  1    wreg      unsigned char 
 19131 ;; Registers used:
 19132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19133 ;; Tracked objects:
 19134 ;;		On entry : 0/0
 19135 ;;		On exit  : 0/0
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19138 ;;      Params:         0       0       0       0       0       0       0       0       0
 19139 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19141 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19142 ;;Total ram usage:        1 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:   11
 19145 ;; This function calls:
 19146 ;;		Nothing
 19147 ;; This function is called by:
 19148 ;;		_moteApp_searchFrameGPS
 19149 ;; This function uses a non-reentrant model
 19150 ;;
 19151                           
 19152                           	psect	text55
 19153  005DCE                     __ptext55:
 19154                           	opt stack 0
 19155  005DCE                     _outFIFO:
 19156                           	opt stack 17
 19157                           
 19158                           ;swUart.c: 274: uint8_t retVal = 0;
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;incstack = 0
 19162  005DCE  0E00               	movlw	0
 19163  005DD0  0100               	movlb	0	; () banked
 19164  005DD2  6F60               	movwf	outFIFO@retVal& (0+255),b
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;swUart.c: 275: (INTCONbits.GIE = 0);
 19168  005DD4  9EF2               	bcf	intcon,7,c	;volatile
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;swUart.c: 276: if(countIn != countOut)
 19172  005DD6  51E8               	movf	_countOut& (0+255),w,b
 19173  005DD8  19E7               	xorwf	_countIn& (0+255),w,b
 19174  005DDA  B4D8               	btfsc	status,2,c
 19175  005DDC  D011               	goto	l1270
 19176                           
 19177                           ; BSR set to: 0
 19178                           ;swUart.c: 277: {
 19179                           ;swUart.c: 278: retVal = buffer_rx[countOut];
 19180  005DDE  51E8               	movf	_countOut& (0+255),w,b
 19181  005DE0  0D01               	mullw	1
 19182  005DE2  0E00               	movlw	low _buffer_rx
 19183  005DE4  24F3               	addwf	prodl,w,c
 19184  005DE6  6ED9               	movwf	fsr2l,c
 19185  005DE8  0E07               	movlw	high _buffer_rx
 19186  005DEA  20F4               	addwfc	prodh,w,c
 19187  005DEC  6EDA               	movwf	fsr2h,c
 19188  005DEE  50DF               	movf	indf2,w,c
 19189  005DF0  6F60               	movwf	outFIFO@retVal& (0+255),b
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;swUart.c: 279: countOut ++;
 19193  005DF2  2BE8               	incf	_countOut& (0+255),f,b
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;swUart.c: 280: if(countOut == 200){
 19197  005DF4  0EC8               	movlw	200
 19198  005DF6  19E8               	xorwf	_countOut& (0+255),w,b
 19199  005DF8  A4D8               	btfss	status,2,c
 19200  005DFA  D002               	goto	l1270
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;swUart.c: 281: countOut = 0;
 19204  005DFC  0E00               	movlw	0
 19205  005DFE  6FE8               	movwf	_countOut& (0+255),b
 19206  005E00                     l1270:
 19207                           
 19208                           ; BSR set to: 0
 19209                           ;swUart.c: 282: }
 19210                           ;swUart.c: 283: }
 19211                           ;swUart.c: 284: (INTCONbits.GIE = 1);
 19212                           
 19213                           ; BSR set to: 0
 19214                           
 19215                           ; BSR set to: 0
 19216  005E00  8EF2               	bsf	intcon,7,c	;volatile
 19217                           
 19218                           ;swUart.c: 285: return retVal;
 19219  005E02  5160               	movf	outFIFO@retVal& (0+255),w,b
 19220  005E04  0012               	return	
 19221  005E06                     __end_of_outFIFO:
 19222                           	opt stack 0
 19223                           tblptru	equ	0xFF8
 19224                           tblptrh	equ	0xFF7
 19225                           tblptrl	equ	0xFF6
 19226                           tablat	equ	0xFF5
 19227                           prodh	equ	0xFF4
 19228                           prodl	equ	0xFF3
 19229                           intcon	equ	0xFF2
 19230                           intcon3	equ	0xFF0
 19231                           postinc0	equ	0xFEE
 19232                           wreg	equ	0xFE8
 19233                           indf1	equ	0xFE7
 19234                           postdec1	equ	0xFE5
 19235                           fsr1h	equ	0xFE2
 19236                           fsr1l	equ	0xFE1
 19237                           indf2	equ	0xFDF
 19238                           postinc2	equ	0xFDE
 19239                           fsr2h	equ	0xFDA
 19240                           fsr2l	equ	0xFD9
 19241                           status	equ	0xFD8
 19242                           
 19243 ;; *************** function _oled_putint8 *****************
 19244 ;; Defined at:
 19245 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 19246 ;; Parameters:    Size  Location     Type
 19247 ;;  number          1    wreg     unsigned char 
 19248 ;;  station_dot     1   24[BANK0 ] unsigned char 
 19249 ;;  start_page      1   25[BANK0 ] unsigned char 
 19250 ;; Auto vars:     Size  Location     Type
 19251 ;;  number          1   33[BANK0 ] unsigned char 
 19252 ;;  numData         6   27[BANK0 ] struct .
 19253 ;;  negative        1   26[BANK0 ] unsigned char 
 19254 ;; Return value:  Size  Location     Type
 19255 ;;                  1    wreg      void 
 19256 ;; Registers used:
 19257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19258 ;; Tracked objects:
 19259 ;;		On entry : 0/0
 19260 ;;		On exit  : 0/0
 19261 ;;		Unchanged: 0/0
 19262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19263 ;;      Params:         0       2       0       0       0       0       0       0       0
 19264 ;;      Locals:         0       8       0       0       0       0       0       0       0
 19265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19266 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19267 ;;Total ram usage:       10 bytes
 19268 ;; Hardware stack levels used:    1
 19269 ;; Hardware stack levels required when called:   15
 19270 ;; This function calls:
 19271 ;;		___awmod
 19272 ;;		___lbdiv
 19273 ;;		_oled_putString
 19274 ;; This function is called by:
 19275 ;;		_moteHandler
 19276 ;;		_moteRunningProcess
 19277 ;;		_moteApp_testSensors
 19278 ;;		_moteApp_searchFrameGPS
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text56
 19283  004A42                     __ptext56:
 19284                           	opt stack 0
 19285  004A42                     _oled_putint8:
 19286                           	opt stack 13
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;incstack = 0
 19290                           ;oled_putint8@number stored from wreg
 19291  004A42  0100               	movlb	0	; () banked
 19292  004A44  6F81               	movwf	oled_putint8@number& (0+255),b
 19293                           
 19294                           ;SSD1306oLED.c: 280: display_data_t numData;
 19295                           ;SSD1306oLED.c: 281: bool negative = 0;
 19296  004A46  0E00               	movlw	0
 19297  004A48  0100               	movlb	0	; () banked
 19298  004A4A  6F7A               	movwf	oled_putint8@negative& (0+255),b
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;SSD1306oLED.c: 283: if(number & 0x80)
 19302  004A4C  AF81               	btfss	oled_putint8@number& (0+255),7,b
 19303  004A4E  D002               	goto	l1111
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;SSD1306oLED.c: 284: negative = 1;
 19307  004A50  0E01               	movlw	1
 19308  004A52  6F7A               	movwf	oled_putint8@negative& (0+255),b
 19309  004A54                     l1111:
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 19313                           
 19314                           ; BSR set to: 0
 19315  004A54  5181               	movf	oled_putint8@number& (0+255),w,b
 19316  004A56  0B7F               	andlw	127
 19317  004A58  6F81               	movwf	oled_putint8@number& (0+255),b
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 19321  004A5A  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 19322  004A5E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19323  004A60  0E00               	movlw	0
 19324  004A62  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19325  004A64  0E0A               	movlw	10
 19326  004A66  6F62               	movwf	___awmod@divisor& (0+255),b
 19327  004A68  EC9F  F02A         	call	___awmod	;wreg free
 19328  004A6C  0100               	movlb	0	; () banked
 19329  004A6E  5160               	movf	?___awmod& (0+255),w,b
 19330  004A70  0F30               	addlw	48
 19331  004A72  6F7D               	movwf	(oled_putint8@numData+2)& (0+255),b
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;SSD1306oLED.c: 288: number /= 10;
 19335  004A74  0E0A               	movlw	10
 19336  004A76  6F60               	movwf	___lbdiv@divisor& (0+255),b
 19337  004A78  5181               	movf	oled_putint8@number& (0+255),w,b
 19338  004A7A  EC31  F02E         	call	___lbdiv
 19339  004A7E  0100               	movlb	0	; () banked
 19340  004A80  6F81               	movwf	oled_putint8@number& (0+255),b
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 19344  004A82  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 19345  004A86  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19346  004A88  0E00               	movlw	0
 19347  004A8A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19348  004A8C  0E0A               	movlw	10
 19349  004A8E  6F62               	movwf	___awmod@divisor& (0+255),b
 19350  004A90  EC9F  F02A         	call	___awmod	;wreg free
 19351  004A94  0100               	movlb	0	; () banked
 19352  004A96  5160               	movf	?___awmod& (0+255),w,b
 19353  004A98  0F30               	addlw	48
 19354  004A9A  6F7C               	movwf	(oled_putint8@numData+1)& (0+255),b
 19355                           
 19356                           ; BSR set to: 0
 19357                           ;SSD1306oLED.c: 290: number /= 10;
 19358  004A9C  0E0A               	movlw	10
 19359  004A9E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 19360  004AA0  5181               	movf	oled_putint8@number& (0+255),w,b
 19361  004AA2  EC31  F02E         	call	___lbdiv
 19362  004AA6  0100               	movlb	0	; () banked
 19363  004AA8  6F81               	movwf	oled_putint8@number& (0+255),b
 19364                           
 19365                           ; BSR set to: 0
 19366                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 19367  004AAA  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 19368  004AAE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19369  004AB0  0E00               	movlw	0
 19370  004AB2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19371  004AB4  0E0A               	movlw	10
 19372  004AB6  6F62               	movwf	___awmod@divisor& (0+255),b
 19373  004AB8  EC9F  F02A         	call	___awmod	;wreg free
 19374  004ABC  0100               	movlb	0	; () banked
 19375  004ABE  5160               	movf	?___awmod& (0+255),w,b
 19376  004AC0  0F30               	addlw	48
 19377  004AC2  6F7B               	movwf	oled_putint8@numData& (0+255),b
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;SSD1306oLED.c: 292: if(negative)
 19381  004AC4  517A               	movf	oled_putint8@negative& (0+255),w,b
 19382  004AC6  B4D8               	btfsc	status,2,c
 19383  004AC8  D002               	goto	l1112
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 19387  004ACA  0E2D               	movlw	45
 19388  004ACC  6F7B               	movwf	oled_putint8@numData& (0+255),b
 19389  004ACE                     l1112:
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 19393  004ACE  0E00               	movlw	0
 19394  004AD0  6F7E               	movwf	(oled_putint8@numData+3)& (0+255),b
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 19398  004AD2  0E7B               	movlw	low oled_putint8@numData
 19399  004AD4  6F72               	movwf	oled_putString@string& (0+255),b
 19400  004AD6  0E00               	movlw	high oled_putint8@numData
 19401  004AD8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19402  004ADA  5172               	movf	oled_putString@string& (0+255),w,b
 19403  004ADC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 19404  004ADE  A4D8               	btfss	status,2,c
 19405  004AE0  0E20               	movlw	32
 19406  004AE2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 19407  004AE4  C078  F075         	movff	oled_putint8@station_dot,oled_putString@station_dot
 19408  004AE8  C079  F076         	movff	oled_putint8@start_page,oled_putString@start_page
 19409  004AEC  ECF3  F029         	call	_oled_putString	;wreg free
 19410  004AF0  0012               	return		;funcret
 19411  004AF2                     __end_of_oled_putint8:
 19412                           	opt stack 0
 19413                           tblptru	equ	0xFF8
 19414                           tblptrh	equ	0xFF7
 19415                           tblptrl	equ	0xFF6
 19416                           tablat	equ	0xFF5
 19417                           prodh	equ	0xFF4
 19418                           prodl	equ	0xFF3
 19419                           intcon	equ	0xFF2
 19420                           intcon3	equ	0xFF0
 19421                           postinc0	equ	0xFEE
 19422                           wreg	equ	0xFE8
 19423                           indf1	equ	0xFE7
 19424                           postdec1	equ	0xFE5
 19425                           fsr1h	equ	0xFE2
 19426                           fsr1l	equ	0xFE1
 19427                           indf2	equ	0xFDF
 19428                           postinc2	equ	0xFDE
 19429                           fsr2h	equ	0xFDA
 19430                           fsr2l	equ	0xFD9
 19431                           status	equ	0xFD8
 19432                           
 19433 ;; *************** function ___lbdiv *****************
 19434 ;; Defined at:
 19435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;  dividend        1    wreg     unsigned char 
 19438 ;;  divisor         1    0[BANK0 ] unsigned char 
 19439 ;; Auto vars:     Size  Location     Type
 19440 ;;  dividend        1    1[BANK0 ] unsigned char 
 19441 ;;  quotient        1    3[BANK0 ] unsigned char 
 19442 ;;  counter         1    2[BANK0 ] unsigned char 
 19443 ;; Return value:  Size  Location     Type
 19444 ;;                  1    wreg      unsigned char 
 19445 ;; Registers used:
 19446 ;;		wreg, status,2, status,0
 19447 ;; Tracked objects:
 19448 ;;		On entry : 0/0
 19449 ;;		On exit  : 0/0
 19450 ;;		Unchanged: 0/0
 19451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19452 ;;      Params:         0       1       0       0       0       0       0       0       0
 19453 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19455 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19456 ;;Total ram usage:        4 bytes
 19457 ;; Hardware stack levels used:    1
 19458 ;; Hardware stack levels required when called:   11
 19459 ;; This function calls:
 19460 ;;		Nothing
 19461 ;; This function is called by:
 19462 ;;		_moteApp_add8bToDataBuffer
 19463 ;;		_oled_putUint8
 19464 ;;		_oled_putint8
 19465 ;; This function uses a non-reentrant model
 19466 ;;
 19467                           
 19468                           	psect	text57
 19469  005C62                     __ptext57:
 19470                           	opt stack 0
 19471  005C62                     ___lbdiv:
 19472                           	opt stack 16
 19473                           
 19474                           ;incstack = 0
 19475                           ;___lbdiv@dividend stored from wreg
 19476  005C62  0100               	movlb	0	; () banked
 19477  005C64  6F61               	movwf	___lbdiv@dividend& (0+255),b
 19478  005C66  0E00               	movlw	0
 19479  005C68  0100               	movlb	0	; () banked
 19480  005C6A  6F63               	movwf	___lbdiv@quotient& (0+255),b
 19481                           
 19482                           ; BSR set to: 0
 19483  005C6C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19484  005C6E  B4D8               	btfsc	status,2,c
 19485  005C70  D015               	goto	l2687
 19486                           
 19487                           ; BSR set to: 0
 19488  005C72  0E01               	movlw	1
 19489  005C74  6F62               	movwf	___lbdiv@counter& (0+255),b
 19490  005C76  D003               	goto	l2682
 19491  005C78                     
 19492                           ; BSR set to: 0
 19493                           
 19494                           ; BSR set to: 0
 19495  005C78  90D8               	bcf	status,0,c
 19496  005C7A  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 19497                           
 19498                           ; BSR set to: 0
 19499  005C7C  2B62               	incf	___lbdiv@counter& (0+255),f,b
 19500  005C7E                     l2682:
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505  005C7E  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 19506  005C80  D7FB               	goto	l2683
 19507  005C82                     u8090:
 19508                           
 19509                           ; BSR set to: 0
 19510                           
 19511                           ; BSR set to: 0
 19512                           
 19513                           ; BSR set to: 0
 19514  005C82  90D8               	bcf	status,0,c
 19515  005C84  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 19516  005C86  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19517  005C88  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 19518  005C8A  A0D8               	btfss	status,0,c
 19519  005C8C  D003               	goto	l2686
 19520                           
 19521                           ; BSR set to: 0
 19522  005C8E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19523  005C90  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 19524                           
 19525                           ; BSR set to: 0
 19526  005C92  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 19527  005C94                     l2686:
 19528                           
 19529                           ; BSR set to: 0
 19530                           
 19531                           ; BSR set to: 0
 19532  005C94  90D8               	bcf	status,0,c
 19533  005C96  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 19534                           
 19535                           ; BSR set to: 0
 19536  005C98  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 19537  005C9A  D7F3               	goto	u8090
 19538  005C9C                     l2687:
 19539                           
 19540                           ; BSR set to: 0
 19541                           
 19542                           ; BSR set to: 0
 19543                           
 19544                           ; BSR set to: 0
 19545  005C9C  5163               	movf	___lbdiv@quotient& (0+255),w,b
 19546  005C9E  0012               	return	
 19547  005CA0                     __end_of___lbdiv:
 19548                           	opt stack 0
 19549                           tblptru	equ	0xFF8
 19550                           tblptrh	equ	0xFF7
 19551                           tblptrl	equ	0xFF6
 19552                           tablat	equ	0xFF5
 19553                           prodh	equ	0xFF4
 19554                           prodl	equ	0xFF3
 19555                           intcon	equ	0xFF2
 19556                           intcon3	equ	0xFF0
 19557                           postinc0	equ	0xFEE
 19558                           wreg	equ	0xFE8
 19559                           indf1	equ	0xFE7
 19560                           postdec1	equ	0xFE5
 19561                           fsr1h	equ	0xFE2
 19562                           fsr1l	equ	0xFE1
 19563                           indf2	equ	0xFDF
 19564                           postinc2	equ	0xFDE
 19565                           fsr2h	equ	0xFDA
 19566                           fsr2l	equ	0xFD9
 19567                           status	equ	0xFD8
 19568                           
 19569 ;; *************** function ___awmod *****************
 19570 ;; Defined at:
 19571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 19572 ;; Parameters:    Size  Location     Type
 19573 ;;  dividend        2    0[BANK0 ] int 
 19574 ;;  divisor         2    2[BANK0 ] int 
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;  sign            1    5[BANK0 ] unsigned char 
 19577 ;;  counter         1    4[BANK0 ] unsigned char 
 19578 ;; Return value:  Size  Location     Type
 19579 ;;                  2    0[BANK0 ] int 
 19580 ;; Registers used:
 19581 ;;		wreg, status,2, status,0
 19582 ;; Tracked objects:
 19583 ;;		On entry : 0/0
 19584 ;;		On exit  : 0/0
 19585 ;;		Unchanged: 0/0
 19586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19587 ;;      Params:         0       4       0       0       0       0       0       0       0
 19588 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19589 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19590 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19591 ;;Total ram usage:        6 bytes
 19592 ;; Hardware stack levels used:    1
 19593 ;; Hardware stack levels required when called:   11
 19594 ;; This function calls:
 19595 ;;		Nothing
 19596 ;; This function is called by:
 19597 ;;		_moteApp_add8bToDataBuffer
 19598 ;;		_oled_putUint8
 19599 ;;		_oled_putint8
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           	psect	text58
 19604  00553E                     __ptext58:
 19605                           	opt stack 0
 19606  00553E                     ___awmod:
 19607                           	opt stack 16
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;incstack = 0
 19611  00553E  0E00               	movlw	0
 19612  005540  0100               	movlb	0	; () banked
 19613  005542  6F65               	movwf	___awmod@sign& (0+255),b
 19614                           
 19615                           ; BSR set to: 0
 19616  005544  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19617  005546  D006               	goto	l2533
 19618                           
 19619                           ; BSR set to: 0
 19620  005548  6D60               	negf	___awmod@dividend& (0+255),b
 19621  00554A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 19622  00554C  B0D8               	btfsc	status,0,c
 19623  00554E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 19624                           
 19625                           ; BSR set to: 0
 19626  005550  0E01               	movlw	1
 19627  005552  6F65               	movwf	___awmod@sign& (0+255),b
 19628  005554                     l2533:
 19629                           
 19630                           ; BSR set to: 0
 19631                           
 19632                           ; BSR set to: 0
 19633  005554  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19634  005556  D004               	goto	l2534
 19635                           
 19636                           ; BSR set to: 0
 19637  005558  6D62               	negf	___awmod@divisor& (0+255),b
 19638  00555A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 19639  00555C  B0D8               	btfsc	status,0,c
 19640  00555E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 19641  005560                     l2534:
 19642                           
 19643                           ; BSR set to: 0
 19644                           
 19645                           ; BSR set to: 0
 19646  005560  5162               	movf	___awmod@divisor& (0+255),w,b
 19647  005562  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19648  005564  B4D8               	btfsc	status,2,c
 19649  005566  D018               	goto	l2541
 19650                           
 19651                           ; BSR set to: 0
 19652  005568  0E01               	movlw	1
 19653  00556A  6F64               	movwf	___awmod@counter& (0+255),b
 19654  00556C  D004               	goto	l2536
 19655  00556E                     
 19656                           ; BSR set to: 0
 19657                           
 19658                           ; BSR set to: 0
 19659  00556E  90D8               	bcf	status,0,c
 19660  005570  3762               	rlcf	___awmod@divisor& (0+255),f,b
 19661  005572  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19662  005574  2B64               	incf	___awmod@counter& (0+255),f,b
 19663  005576                     l2536:
 19664                           
 19665                           ; BSR set to: 0
 19666                           
 19667                           ; BSR set to: 0
 19668  005576  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19669  005578  D7FA               	goto	l2537
 19670  00557A                     u7980:
 19671                           
 19672                           ; BSR set to: 0
 19673                           
 19674                           ; BSR set to: 0
 19675                           
 19676                           ; BSR set to: 0
 19677  00557A  5162               	movf	___awmod@divisor& (0+255),w,b
 19678  00557C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 19679  00557E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 19680  005580  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19681  005582  A0D8               	btfss	status,0,c
 19682  005584  D004               	goto	l2540
 19683                           
 19684                           ; BSR set to: 0
 19685  005586  5162               	movf	___awmod@divisor& (0+255),w,b
 19686  005588  5F60               	subwf	___awmod@dividend& (0+255),f,b
 19687  00558A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 19688  00558C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19689  00558E                     l2540:
 19690                           
 19691                           ; BSR set to: 0
 19692                           
 19693                           ; BSR set to: 0
 19694  00558E  90D8               	bcf	status,0,c
 19695  005590  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19696  005592  3362               	rrcf	___awmod@divisor& (0+255),f,b
 19697                           
 19698                           ; BSR set to: 0
 19699  005594  2F64               	decfsz	___awmod@counter& (0+255),f,b
 19700  005596  D7F1               	goto	u7980
 19701  005598                     l2541:
 19702                           
 19703                           ; BSR set to: 0
 19704                           
 19705                           ; BSR set to: 0
 19706                           
 19707                           ; BSR set to: 0
 19708  005598  5165               	movf	___awmod@sign& (0+255),w,b
 19709  00559A  B4D8               	btfsc	status,2,c
 19710  00559C  D004               	goto	l2542
 19711                           
 19712                           ; BSR set to: 0
 19713  00559E  6D60               	negf	___awmod@dividend& (0+255),b
 19714  0055A0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 19715  0055A2  B0D8               	btfsc	status,0,c
 19716  0055A4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 19717  0055A6                     l2542:
 19718                           
 19719                           ; BSR set to: 0
 19720                           
 19721                           ; BSR set to: 0
 19722  0055A6  C060  F060         	movff	___awmod@dividend,?___awmod
 19723  0055AA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 19724  0055AE  0012               	return	
 19725  0055B0                     __end_of___awmod:
 19726                           	opt stack 0
 19727                           tblptru	equ	0xFF8
 19728                           tblptrh	equ	0xFF7
 19729                           tblptrl	equ	0xFF6
 19730                           tablat	equ	0xFF5
 19731                           prodh	equ	0xFF4
 19732                           prodl	equ	0xFF3
 19733                           intcon	equ	0xFF2
 19734                           intcon3	equ	0xFF0
 19735                           postinc0	equ	0xFEE
 19736                           wreg	equ	0xFE8
 19737                           indf1	equ	0xFE7
 19738                           postdec1	equ	0xFE5
 19739                           fsr1h	equ	0xFE2
 19740                           fsr1l	equ	0xFE1
 19741                           indf2	equ	0xFDF
 19742                           postinc2	equ	0xFDE
 19743                           fsr2h	equ	0xFDA
 19744                           fsr2l	equ	0xFD9
 19745                           status	equ	0xFD8
 19746                           
 19747 ;; *************** function _oled_putStringLineN *****************
 19748 ;; Defined at:
 19749 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19750 ;; Parameters:    Size  Location     Type
 19751 ;;  string          2   12[BANK0 ] PTR const unsigned char 
 19752 ;;		 -> dataFrameGPS(200), 
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;  index           1   16[BANK0 ] unsigned char 
 19755 ;;  page            1   15[BANK0 ] unsigned char 
 19756 ;;  indexLine       1   14[BANK0 ] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  1    wreg      void 
 19759 ;; Registers used:
 19760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19766 ;;      Params:         0       2       0       0       0       0       0       0       0
 19767 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19769 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19770 ;;Total ram usage:        5 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:   14
 19773 ;; This function calls:
 19774 ;;		___awdiv
 19775 ;;		_oled_putChar
 19776 ;; This function is called by:
 19777 ;;		_moteApp_searchFrameGPS
 19778 ;; This function uses a non-reentrant model
 19779 ;;
 19780                           
 19781                           	psect	text59
 19782  0059D6                     __ptext59:
 19783                           	opt stack 0
 19784  0059D6                     _oled_putStringLineN:
 19785                           	opt stack 14
 19786                           
 19787                           ;SSD1306oLED.c: 333: uint8_t index;
 19788                           ;SSD1306oLED.c: 334: uint8_t indexLine;
 19789                           ;SSD1306oLED.c: 335: uint8_t page;
 19790                           ;SSD1306oLED.c: 337: for(index = 0;; index++)
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;incstack = 0
 19794  0059D6  0E00               	movlw	0
 19795  0059D8  0100               	movlb	0	; () banked
 19796  0059DA  6F70               	movwf	oled_putStringLineN@index& (0+255),b
 19797  0059DC                     
 19798                           ; BSR set to: 0
 19799                           ;SSD1306oLED.c: 338: {
 19800                           ;SSD1306oLED.c: 339: if (*string != 0)
 19801                           
 19802                           ; BSR set to: 0
 19803  0059DC  C06C  FFD9         	movff	oled_putStringLineN@string,fsr2l
 19804  0059E0  C06D  FFDA         	movff	oled_putStringLineN@string+1,fsr2h
 19805  0059E4  50DF               	movf	indf2,w,c
 19806  0059E6  B4D8               	btfsc	status,2,c
 19807  0059E8  0012               	return	
 19808                           
 19809                           ; BSR set to: 0
 19810                           ;SSD1306oLED.c: 340: {
 19811                           ;SSD1306oLED.c: 341: page = index / 16;
 19812  0059EA  C070  F060         	movff	oled_putStringLineN@index,___awdiv@dividend
 19813  0059EE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 19814  0059F0  0E00               	movlw	0
 19815  0059F2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 19816  0059F4  0E10               	movlw	16
 19817  0059F6  6F62               	movwf	___awdiv@divisor& (0+255),b
 19818  0059F8  ECEE  F027         	call	___awdiv	;wreg free
 19819  0059FC  0100               	movlb	0	; () banked
 19820  0059FE  5160               	movf	?___awdiv& (0+255),w,b
 19821  005A00  6F6F               	movwf	oled_putStringLineN@page& (0+255),b
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;SSD1306oLED.c: 342: indexLine = index % 16;
 19825  005A02  5170               	movf	oled_putStringLineN@index& (0+255),w,b
 19826  005A04  0B0F               	andlw	15
 19827  005A06  6F6E               	movwf	oled_putStringLineN@indexLine& (0+255),b
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;SSD1306oLED.c: 344: oled_putChar(*string, indexLine, page);
 19831  005A08  C06E  F062         	movff	oled_putStringLineN@indexLine,oled_putChar@station_dot
 19832  005A0C  C06F  F063         	movff	oled_putStringLineN@page,oled_putChar@start_page
 19833  005A10  C06C  FFD9         	movff	oled_putStringLineN@string,fsr2l
 19834  005A14  C06D  FFDA         	movff	oled_putStringLineN@string+1,fsr2h
 19835  005A18  50DF               	movf	indf2,w,c
 19836  005A1A  EC73  F028         	call	_oled_putChar
 19837                           
 19838                           ;SSD1306oLED.c: 345: *string++;
 19839  005A1E  0100               	movlb	0	; () banked
 19840  005A20  4B6C               	infsnz	oled_putStringLineN@string& (0+255),f,b
 19841  005A22  2B6D               	incf	(oled_putStringLineN@string+1)& (0+255),f,b
 19842                           
 19843                           ; BSR set to: 0
 19844                           
 19845                           ; BSR set to: 0
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;SSD1306oLED.c: 347: else
 19849                           ;SSD1306oLED.c: 348: {
 19850                           ;SSD1306oLED.c: 349: break;
 19851                           
 19852                           ;SSD1306oLED.c: 346: }
 19853  005A24  2B70               	incf	oled_putStringLineN@index& (0+255),f,b
 19854  005A26  D7DA               	goto	l1124
 19855  005A28                     __end_of_oled_putStringLineN:
 19856                           	opt stack 0
 19857                           tblptru	equ	0xFF8
 19858                           tblptrh	equ	0xFF7
 19859                           tblptrl	equ	0xFF6
 19860                           tablat	equ	0xFF5
 19861                           prodh	equ	0xFF4
 19862                           prodl	equ	0xFF3
 19863                           intcon	equ	0xFF2
 19864                           intcon3	equ	0xFF0
 19865                           postinc0	equ	0xFEE
 19866                           wreg	equ	0xFE8
 19867                           indf1	equ	0xFE7
 19868                           postdec1	equ	0xFE5
 19869                           fsr1h	equ	0xFE2
 19870                           fsr1l	equ	0xFE1
 19871                           indf2	equ	0xFDF
 19872                           postinc2	equ	0xFDE
 19873                           fsr2h	equ	0xFDA
 19874                           fsr2l	equ	0xFD9
 19875                           status	equ	0xFD8
 19876                           
 19877 ;; *************** function ___awdiv *****************
 19878 ;; Defined at:
 19879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;  dividend        2    0[BANK0 ] int 
 19882 ;;  divisor         2    2[BANK0 ] int 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  quotient        2    6[BANK0 ] int 
 19885 ;;  sign            1    5[BANK0 ] unsigned char 
 19886 ;;  counter         1    4[BANK0 ] unsigned char 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  2    0[BANK0 ] int 
 19889 ;; Registers used:
 19890 ;;		wreg, status,2, status,0
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19896 ;;      Params:         0       4       0       0       0       0       0       0       0
 19897 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19899 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19900 ;;Total ram usage:        8 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   11
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_oled_putStringLineN
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text60
 19911  004FDC                     __ptext60:
 19912                           	opt stack 0
 19913  004FDC                     ___awdiv:
 19914                           	opt stack 16
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;incstack = 0
 19918  004FDC  0E00               	movlw	0
 19919  004FDE  0100               	movlb	0	; () banked
 19920  004FE0  6F65               	movwf	___awdiv@sign& (0+255),b
 19921                           
 19922                           ; BSR set to: 0
 19923  004FE2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19924  004FE4  D006               	goto	l2520
 19925                           
 19926                           ; BSR set to: 0
 19927  004FE6  6D62               	negf	___awdiv@divisor& (0+255),b
 19928  004FE8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19929  004FEA  B0D8               	btfsc	status,0,c
 19930  004FEC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 0
 19933  004FEE  0E01               	movlw	1
 19934  004FF0  6F65               	movwf	___awdiv@sign& (0+255),b
 19935  004FF2                     l2520:
 19936                           
 19937                           ; BSR set to: 0
 19938                           
 19939                           ; BSR set to: 0
 19940  004FF2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19941  004FF4  D006               	goto	l2521
 19942                           
 19943                           ; BSR set to: 0
 19944  004FF6  6D60               	negf	___awdiv@dividend& (0+255),b
 19945  004FF8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19946  004FFA  B0D8               	btfsc	status,0,c
 19947  004FFC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19948                           
 19949                           ; BSR set to: 0
 19950  004FFE  0E01               	movlw	1
 19951  005000  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 19952  005002                     l2521:
 19953                           
 19954                           ; BSR set to: 0
 19955                           
 19956                           ; BSR set to: 0
 19957  005002  0E00               	movlw	0
 19958  005004  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 19959  005006  0E00               	movlw	0
 19960  005008  6F66               	movwf	___awdiv@quotient& (0+255),b
 19961                           
 19962                           ; BSR set to: 0
 19963  00500A  5162               	movf	___awdiv@divisor& (0+255),w,b
 19964  00500C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19965  00500E  B4D8               	btfsc	status,2,c
 19966  005010  D01C               	goto	l2528
 19967                           
 19968                           ; BSR set to: 0
 19969  005012  0E01               	movlw	1
 19970  005014  6F64               	movwf	___awdiv@counter& (0+255),b
 19971  005016  D004               	goto	l2523
 19972  005018                     
 19973                           ; BSR set to: 0
 19974                           
 19975                           ; BSR set to: 0
 19976  005018  90D8               	bcf	status,0,c
 19977  00501A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 19978  00501C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19979  00501E  2B64               	incf	___awdiv@counter& (0+255),f,b
 19980  005020                     l2523:
 19981                           
 19982                           ; BSR set to: 0
 19983                           
 19984                           ; BSR set to: 0
 19985  005020  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19986  005022  D7FA               	goto	l2524
 19987  005024                     u7920:
 19988                           
 19989                           ; BSR set to: 0
 19990                           
 19991                           ; BSR set to: 0
 19992                           
 19993                           ; BSR set to: 0
 19994  005024  90D8               	bcf	status,0,c
 19995  005026  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 19996  005028  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19997                           
 19998                           ; BSR set to: 0
 19999  00502A  5162               	movf	___awdiv@divisor& (0+255),w,b
 20000  00502C  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 20001  00502E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20002  005030  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20003  005032  A0D8               	btfss	status,0,c
 20004  005034  D005               	goto	l2527
 20005                           
 20006                           ; BSR set to: 0
 20007  005036  5162               	movf	___awdiv@divisor& (0+255),w,b
 20008  005038  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 20009  00503A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20010  00503C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20011                           
 20012                           ; BSR set to: 0
 20013  00503E  8166               	bsf	___awdiv@quotient& (0+255),0,b
 20014  005040                     l2527:
 20015                           
 20016                           ; BSR set to: 0
 20017                           
 20018                           ; BSR set to: 0
 20019  005040  90D8               	bcf	status,0,c
 20020  005042  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20021  005044  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 20022                           
 20023                           ; BSR set to: 0
 20024  005046  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 20025  005048  D7ED               	goto	u7920
 20026  00504A                     l2528:
 20027                           
 20028                           ; BSR set to: 0
 20029                           
 20030                           ; BSR set to: 0
 20031                           
 20032                           ; BSR set to: 0
 20033  00504A  5165               	movf	___awdiv@sign& (0+255),w,b
 20034  00504C  B4D8               	btfsc	status,2,c
 20035  00504E  D004               	goto	l2529
 20036                           
 20037                           ; BSR set to: 0
 20038  005050  6D66               	negf	___awdiv@quotient& (0+255),b
 20039  005052  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20040  005054  B0D8               	btfsc	status,0,c
 20041  005056  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20042  005058                     l2529:
 20043                           
 20044                           ; BSR set to: 0
 20045                           
 20046                           ; BSR set to: 0
 20047  005058  C066  F060         	movff	___awdiv@quotient,?___awdiv
 20048  00505C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 20049  005060  0012               	return	
 20050  005062                     __end_of___awdiv:
 20051                           	opt stack 0
 20052                           tblptru	equ	0xFF8
 20053                           tblptrh	equ	0xFF7
 20054                           tblptrl	equ	0xFF6
 20055                           tablat	equ	0xFF5
 20056                           prodh	equ	0xFF4
 20057                           prodl	equ	0xFF3
 20058                           intcon	equ	0xFF2
 20059                           intcon3	equ	0xFF0
 20060                           postinc0	equ	0xFEE
 20061                           wreg	equ	0xFE8
 20062                           indf1	equ	0xFE7
 20063                           postdec1	equ	0xFE5
 20064                           fsr1h	equ	0xFE2
 20065                           fsr1l	equ	0xFE1
 20066                           indf2	equ	0xFDF
 20067                           postinc2	equ	0xFDE
 20068                           fsr2h	equ	0xFDA
 20069                           fsr2l	equ	0xFD9
 20070                           status	equ	0xFD8
 20071                           
 20072 ;; *************** function _emptyFIFO *****************
 20073 ;; Defined at:
 20074 ;;		line 289 in file "../Includes/Drivers/swUart.c"
 20075 ;; Parameters:    Size  Location     Type
 20076 ;;		None
 20077 ;; Auto vars:     Size  Location     Type
 20078 ;;		None
 20079 ;; Return value:  Size  Location     Type
 20080 ;;                  1    wreg      unsigned char 
 20081 ;; Registers used:
 20082 ;;		wreg, status,2, status,0
 20083 ;; Tracked objects:
 20084 ;;		On entry : 0/0
 20085 ;;		On exit  : 0/0
 20086 ;;		Unchanged: 0/0
 20087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20088 ;;      Params:         0       0       0       0       0       0       0       0       0
 20089 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20090 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20091 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20092 ;;Total ram usage:        0 bytes
 20093 ;; Hardware stack levels used:    1
 20094 ;; Hardware stack levels required when called:   11
 20095 ;; This function calls:
 20096 ;;		Nothing
 20097 ;; This function is called by:
 20098 ;;		_moteApp_searchFrameGPS
 20099 ;; This function uses a non-reentrant model
 20100 ;;
 20101                           
 20102                           	psect	text61
 20103  006398                     __ptext61:
 20104                           	opt stack 0
 20105  006398                     _emptyFIFO:
 20106                           	opt stack 17
 20107                           
 20108                           ;swUart.c: 291: if(countIn == countOut)
 20109                           
 20110                           ; BSR set to: 0
 20111                           ;incstack = 0
 20112  006398  0100               	movlb	0	; () banked
 20113  00639A  51E8               	movf	_countOut& (0+255),w,b
 20114  00639C  19E7               	xorwf	_countIn& (0+255),w,b
 20115  00639E  A4D8               	btfss	status,2,c
 20116  0063A0  D002               	goto	l1274
 20117                           
 20118                           ; BSR set to: 0
 20119                           ;swUart.c: 292: {
 20120                           ;swUart.c: 293: return 1;
 20121  0063A2  0E01               	movlw	1
 20122                           
 20123                           ; BSR set to: 0
 20124  0063A4  0012               	return	
 20125  0063A6                     l1274:
 20126                           
 20127                           ; BSR set to: 0
 20128                           ;swUart.c: 294: }
 20129                           ;swUart.c: 295: return 0;
 20130                           
 20131                           ; BSR set to: 0
 20132  0063A6  0E00               	movlw	0
 20133  0063A8  0012               	return	
 20134  0063AA                     __end_of_emptyFIFO:
 20135                           	opt stack 0
 20136                           tblptru	equ	0xFF8
 20137                           tblptrh	equ	0xFF7
 20138                           tblptrl	equ	0xFF6
 20139                           tablat	equ	0xFF5
 20140                           prodh	equ	0xFF4
 20141                           prodl	equ	0xFF3
 20142                           intcon	equ	0xFF2
 20143                           intcon3	equ	0xFF0
 20144                           postinc0	equ	0xFEE
 20145                           wreg	equ	0xFE8
 20146                           indf1	equ	0xFE7
 20147                           postdec1	equ	0xFE5
 20148                           fsr1h	equ	0xFE2
 20149                           fsr1l	equ	0xFE1
 20150                           indf2	equ	0xFDF
 20151                           postinc2	equ	0xFDE
 20152                           fsr2h	equ	0xFDA
 20153                           fsr2l	equ	0xFD9
 20154                           status	equ	0xFD8
 20155                           
 20156 ;; *************** function _USBapp_exitCDCState *****************
 20157 ;; Defined at:
 20158 ;;		line 139 in file "../Includes/Board/USBapp.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;  usbState        1    wreg     enum E5838
 20161 ;; Auto vars:     Size  Location     Type
 20162 ;;  usbState        1    0[BANK0 ] enum E5838
 20163 ;; Return value:  Size  Location     Type
 20164 ;;                  1    wreg      void 
 20165 ;; Registers used:
 20166 ;;		wreg
 20167 ;; Tracked objects:
 20168 ;;		On entry : 0/0
 20169 ;;		On exit  : 0/0
 20170 ;;		Unchanged: 0/0
 20171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20172 ;;      Params:         0       0       0       0       0       0       0       0       0
 20173 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20175 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20176 ;;Total ram usage:        1 bytes
 20177 ;; Hardware stack levels used:    1
 20178 ;; Hardware stack levels required when called:   11
 20179 ;; This function calls:
 20180 ;;		Nothing
 20181 ;; This function is called by:
 20182 ;;		_moteHandler
 20183 ;; This function uses a non-reentrant model
 20184 ;;
 20185                           
 20186                           	psect	text62
 20187  006438                     __ptext62:
 20188                           	opt stack 0
 20189  006438                     _USBapp_exitCDCState:
 20190                           	opt stack 18
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;incstack = 0
 20194                           ;USBapp_exitCDCState@usbState stored from wreg
 20195  006438  0100               	movlb	0	; () banked
 20196  00643A  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 20197                           
 20198                           ;USBapp.c: 141: exitUSB = usbState;
 20199  00643C  C060  F0FA         	movff	USBapp_exitCDCState@usbState,_exitUSB
 20200  006440  0012               	return		;funcret
 20201  006442                     __end_of_USBapp_exitCDCState:
 20202                           	opt stack 0
 20203                           tblptru	equ	0xFF8
 20204                           tblptrh	equ	0xFF7
 20205                           tblptrl	equ	0xFF6
 20206                           tablat	equ	0xFF5
 20207                           prodh	equ	0xFF4
 20208                           prodl	equ	0xFF3
 20209                           intcon	equ	0xFF2
 20210                           intcon3	equ	0xFF0
 20211                           postinc0	equ	0xFEE
 20212                           wreg	equ	0xFE8
 20213                           indf1	equ	0xFE7
 20214                           postdec1	equ	0xFE5
 20215                           fsr1h	equ	0xFE2
 20216                           fsr1l	equ	0xFE1
 20217                           indf2	equ	0xFDF
 20218                           postinc2	equ	0xFDE
 20219                           fsr2h	equ	0xFDA
 20220                           fsr2l	equ	0xFD9
 20221                           status	equ	0xFD8
 20222                           
 20223 ;; *************** function _USBapp_exitCDC *****************
 20224 ;; Defined at:
 20225 ;;		line 134 in file "../Includes/Board/USBapp.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;		None
 20228 ;; Auto vars:     Size  Location     Type
 20229 ;;		None
 20230 ;; Return value:  Size  Location     Type
 20231 ;;                  1    wreg      enum E5902
 20232 ;; Registers used:
 20233 ;;		wreg, status,2
 20234 ;; Tracked objects:
 20235 ;;		On entry : 0/0
 20236 ;;		On exit  : 0/0
 20237 ;;		Unchanged: 0/0
 20238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20239 ;;      Params:         0       0       0       0       0       0       0       0       0
 20240 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20242 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20243 ;;Total ram usage:        0 bytes
 20244 ;; Hardware stack levels used:    1
 20245 ;; Hardware stack levels required when called:   11
 20246 ;; This function calls:
 20247 ;;		Nothing
 20248 ;; This function is called by:
 20249 ;;		_moteHandler
 20250 ;; This function uses a non-reentrant model
 20251 ;;
 20252                           
 20253                           	psect	text63
 20254  006486                     __ptext63:
 20255                           	opt stack 0
 20256  006486                     _USBapp_exitCDC:
 20257                           	opt stack 18
 20258                           
 20259                           ;USBapp.c: 136: return exitUSB;
 20260                           
 20261                           ;incstack = 0
 20262  006486  0100               	movlb	0	; () banked
 20263  006488  51FA               	movf	_exitUSB& (0+255),w,b
 20264  00648A  0012               	return	
 20265  00648C                     __end_of_USBapp_exitCDC:
 20266                           	opt stack 0
 20267                           tblptru	equ	0xFF8
 20268                           tblptrh	equ	0xFF7
 20269                           tblptrl	equ	0xFF6
 20270                           tablat	equ	0xFF5
 20271                           prodh	equ	0xFF4
 20272                           prodl	equ	0xFF3
 20273                           intcon	equ	0xFF2
 20274                           intcon3	equ	0xFF0
 20275                           postinc0	equ	0xFEE
 20276                           wreg	equ	0xFE8
 20277                           indf1	equ	0xFE7
 20278                           postdec1	equ	0xFE5
 20279                           fsr1h	equ	0xFE2
 20280                           fsr1l	equ	0xFE1
 20281                           indf2	equ	0xFDF
 20282                           postinc2	equ	0xFDE
 20283                           fsr2h	equ	0xFDA
 20284                           fsr2l	equ	0xFD9
 20285                           status	equ	0xFD8
 20286                           
 20287 ;; *************** function _TMRapp_Handler *****************
 20288 ;; Defined at:
 20289 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 20290 ;; Parameters:    Size  Location     Type
 20291 ;;		None
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;		None
 20294 ;; Return value:  Size  Location     Type
 20295 ;;                  1    wreg      void 
 20296 ;; Registers used:
 20297 ;;		wreg, status,2, status,0, cstack
 20298 ;; Tracked objects:
 20299 ;;		On entry : 0/0
 20300 ;;		On exit  : 0/0
 20301 ;;		Unchanged: 0/0
 20302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20303 ;;      Params:         0       0       0       0       0       0       0       0       0
 20304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20306 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20307 ;;Total ram usage:        0 bytes
 20308 ;; Hardware stack levels used:    1
 20309 ;; Hardware stack levels required when called:   12
 20310 ;; This function calls:
 20311 ;;		___almod
 20312 ;;		___lwmod
 20313 ;; This function is called by:
 20314 ;;		_moteHandler
 20315 ;; This function uses a non-reentrant model
 20316 ;;
 20317                           
 20318                           	psect	text64
 20319  00362E                     __ptext64:
 20320                           	opt stack 0
 20321  00362E                     _TMRapp_Handler:
 20322                           	opt stack 17
 20323                           
 20324                           ;TMRapp.c: 60: timerMsTickCount++;
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;incstack = 0
 20328  00362E  0100               	movlb	0	; () banked
 20329  003630  4BDC               	infsnz	_timerMsTickCount& (0+255),f,b
 20330  003632  2BDD               	incf	(_timerMsTickCount+1)& (0+255),f,b
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 20334  003634  C0DC  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20335  003638  C0DD  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20336  00363C  0E00               	movlw	0
 20337  00363E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20338  003640  0E0A               	movlw	10
 20339  003642  6F62               	movwf	___lwmod@divisor& (0+255),b
 20340  003644  ECAD  F02D         	call	___lwmod	;wreg free
 20341  003648  0100               	movlb	0	; () banked
 20342  00364A  5160               	movf	?___lwmod& (0+255),w,b
 20343  00364C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20344  00364E  A4D8               	btfss	status,2,c
 20345  003650  0012               	return	
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;TMRapp.c: 63: {
 20349                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 20350  003652  83F9               	bsf	_appTimer& (0+255),1,b
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 20354  003654  C0DC  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20355  003658  C0DD  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20356  00365C  0E00               	movlw	0
 20357  00365E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20358  003660  0E64               	movlw	100
 20359  003662  6F62               	movwf	___lwmod@divisor& (0+255),b
 20360  003664  ECAD  F02D         	call	___lwmod	;wreg free
 20361  003668  0100               	movlb	0	; () banked
 20362  00366A  5160               	movf	?___lwmod& (0+255),w,b
 20363  00366C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20364  00366E  A4D8               	btfss	status,2,c
 20365  003670  0012               	return	
 20366                           
 20367                           ; BSR set to: 0
 20368                           ;TMRapp.c: 66: {
 20369                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 20370  003672  85F9               	bsf	_appTimer& (0+255),2,b
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 20374  003674  C0DC  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20375  003678  C0DD  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20376  00367C  0E03               	movlw	3
 20377  00367E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20378  003680  0EE8               	movlw	232
 20379  003682  6F62               	movwf	___lwmod@divisor& (0+255),b
 20380  003684  ECAD  F02D         	call	___lwmod	;wreg free
 20381  003688  0100               	movlb	0	; () banked
 20382  00368A  5160               	movf	?___lwmod& (0+255),w,b
 20383  00368C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20384  00368E  A4D8               	btfss	status,2,c
 20385  003690  0012               	return	
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;TMRapp.c: 69: {
 20389                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 20390  003692  87F9               	bsf	_appTimer& (0+255),3,b
 20391                           
 20392                           ; BSR set to: 0
 20393                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 20394  003694  C0DC  F060         	movff	_timerMsTickCount,___almod@dividend
 20395  003698  C0DD  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 20396  00369C  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 20397  00369E  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 20398  0036A0  0E60               	movlw	96
 20399  0036A2  6F64               	movwf	___almod@divisor& (0+255),b
 20400  0036A4  0EEA               	movlw	234
 20401  0036A6  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 20402  0036A8  0E00               	movlw	0
 20403  0036AA  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20404  0036AC  0E00               	movlw	0
 20405  0036AE  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20406  0036B0  ECD1  F025         	call	___almod	;wreg free
 20407  0036B4  0100               	movlb	0	; () banked
 20408  0036B6  5160               	movf	?___almod& (0+255),w,b
 20409  0036B8  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20410  0036BA  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20411  0036BC  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20412  0036BE  A4D8               	btfss	status,2,c
 20413  0036C0  0012               	return	
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;TMRapp.c: 72: {
 20417                           ;TMRapp.c: 73: timerMinTickCount++;
 20418  0036C2  4A3A               	infsnz	_timerMinTickCount,f,c
 20419  0036C4  2A3B               	incf	_timerMinTickCount+1,f,c
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20423  0036C6  89F9               	bsf	_appTimer& (0+255),4,b
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20427  0036C8  C03A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20428  0036CC  C03B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20429  0036D0  0E00               	movlw	0
 20430  0036D2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20431  0036D4  0E3C               	movlw	60
 20432  0036D6  6F62               	movwf	___lwmod@divisor& (0+255),b
 20433  0036D8  ECAD  F02D         	call	___lwmod	;wreg free
 20434  0036DC  0100               	movlb	0	; () banked
 20435  0036DE  5160               	movf	?___lwmod& (0+255),w,b
 20436  0036E0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20437  0036E2  A4D8               	btfss	status,2,c
 20438  0036E4  0012               	return	
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;TMRapp.c: 76: {
 20442                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20443  0036E6  8BF9               	bsf	_appTimer& (0+255),5,b
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20447  0036E8  C03A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20448  0036EC  C03B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20449  0036F0  0E02               	movlw	2
 20450  0036F2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20451  0036F4  0ED0               	movlw	208
 20452  0036F6  6F62               	movwf	___lwmod@divisor& (0+255),b
 20453  0036F8  ECAD  F02D         	call	___lwmod	;wreg free
 20454  0036FC  0100               	movlb	0	; () banked
 20455  0036FE  5160               	movf	?___lwmod& (0+255),w,b
 20456  003700  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20457  003702  A4D8               	btfss	status,2,c
 20458  003704  0012               	return	
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;TMRapp.c: 79: {
 20462                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20463  003706  8DF9               	bsf	_appTimer& (0+255),6,b
 20464                           
 20465                           ; BSR set to: 0
 20466                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20467  003708  C03A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20468  00370C  C03B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20469  003710  0E05               	movlw	5
 20470  003712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20471  003714  0EA0               	movlw	160
 20472  003716  6F62               	movwf	___lwmod@divisor& (0+255),b
 20473  003718  ECAD  F02D         	call	___lwmod	;wreg free
 20474  00371C  0100               	movlb	0	; () banked
 20475  00371E  5160               	movf	?___lwmod& (0+255),w,b
 20476  003720  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20477  003722  A4D8               	btfss	status,2,c
 20478  003724  0012               	return	
 20479                           
 20480                           ; BSR set to: 0
 20481                           ;TMRapp.c: 82: {
 20482                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20483  003726  8FF9               	bsf	_appTimer& (0+255),7,b
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20487  003728  0E00               	movlw	0
 20488  00372A  6FDD               	movwf	(_timerMsTickCount+1)& (0+255),b
 20489  00372C  0E00               	movlw	0
 20490  00372E  6FDC               	movwf	_timerMsTickCount& (0+255),b
 20491                           
 20492                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20493  003730  0E00               	movlw	0
 20494  003732  6E3B               	movwf	_timerMinTickCount+1,c
 20495  003734  0E00               	movlw	0
 20496  003736  6E3A               	movwf	_timerMinTickCount,c
 20497                           
 20498                           ; BSR set to: 0
 20499                           
 20500                           ; BSR set to: 0
 20501                           
 20502                           ; BSR set to: 0
 20503                           
 20504                           ; BSR set to: 0
 20505                           
 20506                           ; BSR set to: 0
 20507                           
 20508                           ; BSR set to: 0
 20509  003738  0012               	return	
 20510  00373A                     __end_of_TMRapp_Handler:
 20511                           	opt stack 0
 20512                           tblptru	equ	0xFF8
 20513                           tblptrh	equ	0xFF7
 20514                           tblptrl	equ	0xFF6
 20515                           tablat	equ	0xFF5
 20516                           prodh	equ	0xFF4
 20517                           prodl	equ	0xFF3
 20518                           intcon	equ	0xFF2
 20519                           intcon3	equ	0xFF0
 20520                           postinc0	equ	0xFEE
 20521                           wreg	equ	0xFE8
 20522                           indf1	equ	0xFE7
 20523                           postdec1	equ	0xFE5
 20524                           fsr1h	equ	0xFE2
 20525                           fsr1l	equ	0xFE1
 20526                           indf2	equ	0xFDF
 20527                           postinc2	equ	0xFDE
 20528                           fsr2h	equ	0xFDA
 20529                           fsr2l	equ	0xFD9
 20530                           status	equ	0xFD8
 20531                           
 20532 ;; *************** function ___lwmod *****************
 20533 ;; Defined at:
 20534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;  dividend        2    0[BANK0 ] unsigned int 
 20537 ;;  divisor         2    2[BANK0 ] unsigned int 
 20538 ;; Auto vars:     Size  Location     Type
 20539 ;;  counter         1    4[BANK0 ] unsigned char 
 20540 ;; Return value:  Size  Location     Type
 20541 ;;                  2    0[BANK0 ] unsigned int 
 20542 ;; Registers used:
 20543 ;;		wreg, status,2, status,0
 20544 ;; Tracked objects:
 20545 ;;		On entry : 0/0
 20546 ;;		On exit  : 0/0
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20549 ;;      Params:         0       4       0       0       0       0       0       0       0
 20550 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20551 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20552 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20553 ;;Total ram usage:        5 bytes
 20554 ;; Hardware stack levels used:    1
 20555 ;; Hardware stack levels required when called:   11
 20556 ;; This function calls:
 20557 ;;		Nothing
 20558 ;; This function is called by:
 20559 ;;		_TMRapp_Handler
 20560 ;;		_moteApp_add16bToDataBuffer
 20561 ;;		_oled_putUint16
 20562 ;; This function uses a non-reentrant model
 20563 ;;
 20564                           
 20565                           	psect	text65
 20566  005B5A                     __ptext65:
 20567                           	opt stack 0
 20568  005B5A                     ___lwmod:
 20569                           	opt stack 17
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;incstack = 0
 20573  005B5A  0100               	movlb	0	; () banked
 20574  005B5C  5162               	movf	___lwmod@divisor& (0+255),w,b
 20575  005B5E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20576  005B60  B4D8               	btfsc	status,2,c
 20577  005B62  D018               	goto	l2771
 20578                           
 20579                           ; BSR set to: 0
 20580  005B64  0E01               	movlw	1
 20581  005B66  6F64               	movwf	___lwmod@counter& (0+255),b
 20582  005B68  D004               	goto	l2766
 20583  005B6A                     
 20584                           ; BSR set to: 0
 20585                           
 20586                           ; BSR set to: 0
 20587  005B6A  90D8               	bcf	status,0,c
 20588  005B6C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20589  005B6E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20590  005B70  2B64               	incf	___lwmod@counter& (0+255),f,b
 20591  005B72                     l2766:
 20592                           
 20593                           ; BSR set to: 0
 20594                           
 20595                           ; BSR set to: 0
 20596  005B72  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20597  005B74  D7FA               	goto	l2767
 20598  005B76                     u9090:
 20599                           
 20600                           ; BSR set to: 0
 20601                           
 20602                           ; BSR set to: 0
 20603                           
 20604                           ; BSR set to: 0
 20605  005B76  5162               	movf	___lwmod@divisor& (0+255),w,b
 20606  005B78  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20607  005B7A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20608  005B7C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20609  005B7E  A0D8               	btfss	status,0,c
 20610  005B80  D004               	goto	l2770
 20611                           
 20612                           ; BSR set to: 0
 20613  005B82  5162               	movf	___lwmod@divisor& (0+255),w,b
 20614  005B84  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20615  005B86  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20616  005B88  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20617  005B8A                     l2770:
 20618                           
 20619                           ; BSR set to: 0
 20620                           
 20621                           ; BSR set to: 0
 20622  005B8A  90D8               	bcf	status,0,c
 20623  005B8C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20624  005B8E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20625                           
 20626                           ; BSR set to: 0
 20627  005B90  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20628  005B92  D7F1               	goto	u9090
 20629  005B94                     l2771:
 20630                           
 20631                           ; BSR set to: 0
 20632                           
 20633                           ; BSR set to: 0
 20634  005B94  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20635  005B98  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20636                           
 20637                           ; BSR set to: 0
 20638  005B9C  0012               	return		;funcret
 20639  005B9E                     __end_of___lwmod:
 20640                           	opt stack 0
 20641                           tblptru	equ	0xFF8
 20642                           tblptrh	equ	0xFF7
 20643                           tblptrl	equ	0xFF6
 20644                           tablat	equ	0xFF5
 20645                           prodh	equ	0xFF4
 20646                           prodl	equ	0xFF3
 20647                           intcon	equ	0xFF2
 20648                           intcon3	equ	0xFF0
 20649                           postinc0	equ	0xFEE
 20650                           wreg	equ	0xFE8
 20651                           indf1	equ	0xFE7
 20652                           postdec1	equ	0xFE5
 20653                           fsr1h	equ	0xFE2
 20654                           fsr1l	equ	0xFE1
 20655                           indf2	equ	0xFDF
 20656                           postinc2	equ	0xFDE
 20657                           fsr2h	equ	0xFDA
 20658                           fsr2l	equ	0xFD9
 20659                           status	equ	0xFD8
 20660                           
 20661 ;; *************** function ___almod *****************
 20662 ;; Defined at:
 20663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;  dividend        4    0[BANK0 ] long 
 20666 ;;  divisor         4    4[BANK0 ] long 
 20667 ;; Auto vars:     Size  Location     Type
 20668 ;;  sign            1    9[BANK0 ] unsigned char 
 20669 ;;  counter         1    8[BANK0 ] unsigned char 
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  4    0[BANK0 ] long 
 20672 ;; Registers used:
 20673 ;;		wreg, status,2, status,0
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/0
 20676 ;;		On exit  : 0/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20679 ;;      Params:         0       8       0       0       0       0       0       0       0
 20680 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20682 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20683 ;;Total ram usage:       10 bytes
 20684 ;; Hardware stack levels used:    1
 20685 ;; Hardware stack levels required when called:   11
 20686 ;; This function calls:
 20687 ;;		Nothing
 20688 ;; This function is called by:
 20689 ;;		_TMRapp_Handler
 20690 ;; This function uses a non-reentrant model
 20691 ;;
 20692                           
 20693                           	psect	text66
 20694  004BA2                     __ptext66:
 20695                           	opt stack 0
 20696  004BA2                     ___almod:
 20697                           	opt stack 17
 20698                           
 20699                           ; BSR set to: 0
 20700                           ;incstack = 0
 20701  004BA2  0E00               	movlw	0
 20702  004BA4  0100               	movlb	0	; () banked
 20703  004BA6  6F69               	movwf	___almod@sign& (0+255),b
 20704                           
 20705                           ; BSR set to: 0
 20706  004BA8  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 20707  004BAA  D00A               	goto	l2421
 20708                           
 20709                           ; BSR set to: 0
 20710  004BAC  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20711  004BAE  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20712  004BB0  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20713  004BB2  6D60               	negf	___almod@dividend& (0+255),b
 20714  004BB4  0E00               	movlw	0
 20715  004BB6  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20716  004BB8  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20717  004BBA  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20718                           
 20719                           ; BSR set to: 0
 20720  004BBC  0E01               	movlw	1
 20721  004BBE  6F69               	movwf	___almod@sign& (0+255),b
 20722  004BC0                     l2421:
 20723                           
 20724                           ; BSR set to: 0
 20725                           
 20726                           ; BSR set to: 0
 20727  004BC0  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20728  004BC2  D008               	goto	l2422
 20729                           
 20730                           ; BSR set to: 0
 20731  004BC4  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 20732  004BC6  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 20733  004BC8  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 20734  004BCA  6D64               	negf	___almod@divisor& (0+255),b
 20735  004BCC  0E00               	movlw	0
 20736  004BCE  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 20737  004BD0  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 20738  004BD2  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 20739  004BD4                     l2422:
 20740                           
 20741                           ; BSR set to: 0
 20742                           
 20743                           ; BSR set to: 0
 20744  004BD4  5164               	movf	___almod@divisor& (0+255),w,b
 20745  004BD6  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 20746  004BD8  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 20747  004BDA  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 20748  004BDC  B4D8               	btfsc	status,2,c
 20749  004BDE  D024               	goto	l2429
 20750                           
 20751                           ; BSR set to: 0
 20752  004BE0  0E01               	movlw	1
 20753  004BE2  6F68               	movwf	___almod@counter& (0+255),b
 20754  004BE4  D006               	goto	l2424
 20755  004BE6                     
 20756                           ; BSR set to: 0
 20757                           
 20758                           ; BSR set to: 0
 20759  004BE6  90D8               	bcf	status,0,c
 20760  004BE8  3764               	rlcf	___almod@divisor& (0+255),f,b
 20761  004BEA  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 20762  004BEC  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 20763  004BEE  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 20764  004BF0  2B68               	incf	___almod@counter& (0+255),f,b
 20765  004BF2                     l2424:
 20766                           
 20767                           ; BSR set to: 0
 20768                           
 20769                           ; BSR set to: 0
 20770  004BF2  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20771  004BF4  D7F8               	goto	l2425
 20772  004BF6                     u9050:
 20773                           
 20774                           ; BSR set to: 0
 20775                           
 20776                           ; BSR set to: 0
 20777                           
 20778                           ; BSR set to: 0
 20779  004BF6  5164               	movf	___almod@divisor& (0+255),w,b
 20780  004BF8  5D60               	subwf	___almod@dividend& (0+255),w,b
 20781  004BFA  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20782  004BFC  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 20783  004BFE  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20784  004C00  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 20785  004C02  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20786  004C04  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 20787  004C06  A0D8               	btfss	status,0,c
 20788  004C08  D008               	goto	l2428
 20789                           
 20790                           ; BSR set to: 0
 20791  004C0A  5164               	movf	___almod@divisor& (0+255),w,b
 20792  004C0C  5F60               	subwf	___almod@dividend& (0+255),f,b
 20793  004C0E  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20794  004C10  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 20795  004C12  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20796  004C14  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 20797  004C16  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20798  004C18  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 20799  004C1A                     l2428:
 20800                           
 20801                           ; BSR set to: 0
 20802                           
 20803                           ; BSR set to: 0
 20804  004C1A  90D8               	bcf	status,0,c
 20805  004C1C  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 20806  004C1E  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 20807  004C20  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 20808  004C22  3364               	rrcf	___almod@divisor& (0+255),f,b
 20809                           
 20810                           ; BSR set to: 0
 20811  004C24  2F68               	decfsz	___almod@counter& (0+255),f,b
 20812  004C26  D7E7               	goto	u9050
 20813  004C28                     l2429:
 20814                           
 20815                           ; BSR set to: 0
 20816                           
 20817                           ; BSR set to: 0
 20818                           
 20819                           ; BSR set to: 0
 20820  004C28  5169               	movf	___almod@sign& (0+255),w,b
 20821  004C2A  B4D8               	btfsc	status,2,c
 20822  004C2C  D008               	goto	l2430
 20823                           
 20824                           ; BSR set to: 0
 20825  004C2E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20826  004C30  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20827  004C32  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20828  004C34  6D60               	negf	___almod@dividend& (0+255),b
 20829  004C36  0E00               	movlw	0
 20830  004C38  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20831  004C3A  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20832  004C3C  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20833  004C3E                     l2430:
 20834                           
 20835                           ; BSR set to: 0
 20836                           
 20837                           ; BSR set to: 0
 20838  004C3E  C060  F060         	movff	___almod@dividend,?___almod
 20839  004C42  C061  F061         	movff	___almod@dividend+1,?___almod+1
 20840  004C46  C062  F062         	movff	___almod@dividend+2,?___almod+2
 20841  004C4A  C063  F063         	movff	___almod@dividend+3,?___almod+3
 20842  004C4E  0012               	return	
 20843  004C50                     __end_of___almod:
 20844                           	opt stack 0
 20845                           tblptru	equ	0xFF8
 20846                           tblptrh	equ	0xFF7
 20847                           tblptrl	equ	0xFF6
 20848                           tablat	equ	0xFF5
 20849                           prodh	equ	0xFF4
 20850                           prodl	equ	0xFF3
 20851                           intcon	equ	0xFF2
 20852                           intcon3	equ	0xFF0
 20853                           postinc0	equ	0xFEE
 20854                           wreg	equ	0xFE8
 20855                           indf1	equ	0xFE7
 20856                           postdec1	equ	0xFE5
 20857                           fsr1h	equ	0xFE2
 20858                           fsr1l	equ	0xFE1
 20859                           indf2	equ	0xFDF
 20860                           postinc2	equ	0xFDE
 20861                           fsr2h	equ	0xFDA
 20862                           fsr2l	equ	0xFD9
 20863                           status	equ	0xFD8
 20864                           
 20865 ;; *************** function _TMRapp_ClearBitFlags *****************
 20866 ;; Defined at:
 20867 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;		None
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1    wreg      void 
 20874 ;; Registers used:
 20875 ;;		wreg, status,2
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/0
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:   11
 20888 ;; This function calls:
 20889 ;;		Nothing
 20890 ;; This function is called by:
 20891 ;;		_moteHandler
 20892 ;; This function uses a non-reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text67
 20896  006468                     __ptext67:
 20897                           	opt stack 0
 20898  006468                     _TMRapp_ClearBitFlags:
 20899                           	opt stack 18
 20900                           
 20901                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;incstack = 0
 20905  006468  0E00               	movlw	0
 20906  00646A  0100               	movlb	0	; () banked
 20907  00646C  6FF9               	movwf	_appTimer& (0+255),b
 20908                           
 20909                           ; BSR set to: 0
 20910  00646E  0012               	return		;funcret
 20911  006470                     __end_of_TMRapp_ClearBitFlags:
 20912                           	opt stack 0
 20913                           tblptru	equ	0xFF8
 20914                           tblptrh	equ	0xFF7
 20915                           tblptrl	equ	0xFF6
 20916                           tablat	equ	0xFF5
 20917                           prodh	equ	0xFF4
 20918                           prodl	equ	0xFF3
 20919                           intcon	equ	0xFF2
 20920                           intcon3	equ	0xFF0
 20921                           postinc0	equ	0xFEE
 20922                           wreg	equ	0xFE8
 20923                           indf1	equ	0xFE7
 20924                           postdec1	equ	0xFE5
 20925                           fsr1h	equ	0xFE2
 20926                           fsr1l	equ	0xFE1
 20927                           indf2	equ	0xFDF
 20928                           postinc2	equ	0xFDE
 20929                           fsr2h	equ	0xFDA
 20930                           fsr2l	equ	0xFD9
 20931                           status	equ	0xFD8
 20932                           
 20933 ;; *************** function _MOTEapp_TimerBasedTask *****************
 20934 ;; Defined at:
 20935 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;  timerTask       1    wreg     struct .
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;  timerTask       1    0[BANK0 ] struct .
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  1    wreg      void 
 20942 ;; Registers used:
 20943 ;;		wreg, status,2, status,0
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/0
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0
 20950 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20952 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20953 ;;Total ram usage:        1 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:   11
 20956 ;; This function calls:
 20957 ;;		Nothing
 20958 ;; This function is called by:
 20959 ;;		_moteHandler
 20960 ;; This function uses a non-reentrant model
 20961 ;;
 20962                           
 20963                           	psect	text68
 20964  006242                     __ptext68:
 20965                           	opt stack 0
 20966  006242                     _MOTEapp_TimerBasedTask:
 20967                           	opt stack 18
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;incstack = 0
 20971                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 20972  006242  0100               	movlb	0	; () banked
 20973  006244  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 20974                           
 20975                           ;MOTEapp.c: 1117: if (timerTask.mSecTenTick)
 20976  006246  0100               	movlb	0	; () banked
 20977  006248  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 20978  00624A  D003               	goto	l638
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;MOTEapp.c: 1118: {
 20982                           ;MOTEapp.c: 1120: m10SecTicker++;
 20983  00624C  0101               	movlb	1	; () banked
 20984  00624E  4B1A               	infsnz	_m10SecTicker& (0+255),f,b
 20985  006250  2B1B               	incf	(_m10SecTicker+1)& (0+255),f,b
 20986  006252                     l638:
 20987                           
 20988                           ;MOTEapp.c: 1126: }
 20989                           ;MOTEapp.c: 1127: if (timerTask.SecTick)
 20990                           
 20991                           ; BSR set to: 1
 20992                           
 20993                           ;MOTEapp.c: 1123: {
 20994                           
 20995                           ; BSR set to: 1
 20996                           
 20997                           ; BSR set to: 1
 20998  006252  0100               	movlb	0	; () banked
 20999  006254  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 21000                           
 21001                           ; BSR set to: 0
 21002                           ;MOTEapp.c: 1128: {
 21003                           ;MOTEapp.c: 1130: secTicker++;
 21004  006256  2BF2               	incf	_secTicker& (0+255),f,b
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;MOTEapp.c: 1131: }
 21008                           ;MOTEapp.c: 1132: if (timerTask.MinTick)
 21009                           
 21010                           ; BSR set to: 0
 21011  006258  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 21012  00625A  0012               	return	
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;MOTEapp.c: 1133: {
 21016                           ;MOTEapp.c: 1135: minTicker++;
 21017  00625C  0101               	movlb	1	; () banked
 21018  00625E  2B25               	incf	_minTicker& (0+255),f,b
 21019                           
 21020                           ; BSR set to: 1
 21021                           
 21022                           ; BSR set to: 1
 21023                           
 21024                           ;MOTEapp.c: 1142: {
 21025                           
 21026                           ; BSR set to: 1
 21027                           
 21028                           ; BSR set to: 1
 21029                           
 21030                           ;MOTEapp.c: 1138: {
 21031                           
 21032                           ; BSR set to: 1
 21033                           
 21034                           ; BSR set to: 1
 21035  006260  0012               	return	
 21036  006262                     __end_of_MOTEapp_TimerBasedTask:
 21037                           	opt stack 0
 21038                           tblptru	equ	0xFF8
 21039                           tblptrh	equ	0xFF7
 21040                           tblptrl	equ	0xFF6
 21041                           tablat	equ	0xFF5
 21042                           prodh	equ	0xFF4
 21043                           prodl	equ	0xFF3
 21044                           intcon	equ	0xFF2
 21045                           intcon3	equ	0xFF0
 21046                           postinc0	equ	0xFEE
 21047                           wreg	equ	0xFE8
 21048                           indf1	equ	0xFE7
 21049                           postdec1	equ	0xFE5
 21050                           fsr1h	equ	0xFE2
 21051                           fsr1l	equ	0xFE1
 21052                           indf2	equ	0xFDF
 21053                           postinc2	equ	0xFDE
 21054                           fsr2h	equ	0xFDA
 21055                           fsr2l	equ	0xFD9
 21056                           status	equ	0xFD8
 21057                           
 21058 ;; *************** function _moteApp_clearCommand *****************
 21059 ;; Defined at:
 21060 ;;		line 1366 in file "../Includes/Board/MOTEapp.c"
 21061 ;; Parameters:    Size  Location     Type
 21062 ;;		None
 21063 ;; Auto vars:     Size  Location     Type
 21064 ;;		None
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  1    wreg      void 
 21067 ;; Registers used:
 21068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21069 ;; Tracked objects:
 21070 ;;		On entry : 0/0
 21071 ;;		On exit  : 0/0
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21074 ;;      Params:         0       0       0       0       0       0       0       0       0
 21075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21076 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21077 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21078 ;;Total ram usage:        0 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:   14
 21081 ;; This function calls:
 21082 ;;		_sendCommand
 21083 ;; This function is called by:
 21084 ;;		_main
 21085 ;; This function uses a non-reentrant model
 21086 ;;
 21087                           
 21088                           	psect	text69
 21089  0063EC                     __ptext69:
 21090                           	opt stack 0
 21091  0063EC                     _moteApp_clearCommand:
 21092                           	opt stack 16
 21093                           
 21094                           ;MOTEapp.c: 1368: sendCommand("\r\n");
 21095                           
 21096                           ;incstack = 0
 21097  0063EC  0E06               	movlw	low (STR_180+23)
 21098  0063EE  0100               	movlb	0	; () banked
 21099  0063F0  6F61               	movwf	sendCommand@string& (0+255),b
 21100  0063F2  0E7A               	movlw	high (STR_180+23)
 21101  0063F4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 21102  0063F6  EC3B  F02F         	call	_sendCommand	;wreg free
 21103  0063FA  0012               	return		;funcret
 21104  0063FC                     __end_of_moteApp_clearCommand:
 21105                           	opt stack 0
 21106                           tblptru	equ	0xFF8
 21107                           tblptrh	equ	0xFF7
 21108                           tblptrl	equ	0xFF6
 21109                           tablat	equ	0xFF5
 21110                           prodh	equ	0xFF4
 21111                           prodl	equ	0xFF3
 21112                           intcon	equ	0xFF2
 21113                           intcon3	equ	0xFF0
 21114                           postinc0	equ	0xFEE
 21115                           wreg	equ	0xFE8
 21116                           indf1	equ	0xFE7
 21117                           postdec1	equ	0xFE5
 21118                           fsr1h	equ	0xFE2
 21119                           fsr1l	equ	0xFE1
 21120                           indf2	equ	0xFDF
 21121                           postinc2	equ	0xFDE
 21122                           fsr2h	equ	0xFDA
 21123                           fsr2l	equ	0xFD9
 21124                           status	equ	0xFD8
 21125                           
 21126 ;; *************** function _sendCommand *****************
 21127 ;; Defined at:
 21128 ;;		line 1199 in file "../Includes/Board/MOTEapp.c"
 21129 ;; Parameters:    Size  Location     Type
 21130 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 21131 ;;		 -> STR_189(22), STR_188(22), STR_187(27), STR_186(27), 
 21132 ;;		 -> STR_181(26), STR_180(26), STR_179(26), STR_178(26), 
 21133 ;;		 -> STR_177(3), STR_176(9), STR_175(15), STR_174(13), 
 21134 ;;		 -> STR_173(13), STR_172(13), STR_171(13), STR_170(13), 
 21135 ;;		 -> STR_169(13), STR_168(13), STR_167(13), STR_166(16), 
 21136 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 21137 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 21138 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;		None
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  1    wreg      void 
 21143 ;; Registers used:
 21144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21150 ;;      Params:         0       2       0       0       0       0       0       0       0
 21151 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21152 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21153 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21154 ;;Total ram usage:        2 bytes
 21155 ;; Hardware stack levels used:    1
 21156 ;; Hardware stack levels required when called:   13
 21157 ;; This function calls:
 21158 ;;		_EUSART_Write
 21159 ;;		_EndLine
 21160 ;; This function is called by:
 21161 ;;		_moduleResync
 21162 ;;		_moduleSleep
 21163 ;;		_moteJoiningProcess
 21164 ;;		_MOTEapp_SetDataRateSetting
 21165 ;;		_moteApp_clearCommand
 21166 ;;		_moteApp_toggleLeds
 21167 ;;		_moteApp_setSensorsInput
 21168 ;;		_moteApp_getTempValue
 21169 ;;		_moteApp_getLightValue
 21170 ;; This function uses a non-reentrant model
 21171 ;;
 21172                           
 21173                           	psect	text70
 21174  005E76                     __ptext70:
 21175                           	opt stack 0
 21176  005E76                     _sendCommand:
 21177                           	opt stack 14
 21178                           
 21179                           ;MOTEapp.c: 1202: while (*string)
 21180                           
 21181                           ;incstack = 0
 21182  005E76  D00C               	goto	l669
 21183  005E78                     
 21184                           ;MOTEapp.c: 1203: {
 21185                           ;MOTEapp.c: 1204: EUSART_Write(*string++);
 21186  005E78  C061  FFF6         	movff	sendCommand@string,tblptrl
 21187  005E7C  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21188  005E80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21189  005E80  6AF8               	clrf	tblptru,c
 21190  005E82                     	endif
 21191  005E82                     	if	0	;tblptru may be non-zero
 21192  005E82                     	endif
 21193  005E82  0008               	tblrd		*
 21194  005E84  50F5               	movf	tablat,w,c
 21195  005E86  EC50  F02E         	call	_EUSART_Write
 21196  005E8A  0100               	movlb	0	; () banked
 21197  005E8C  4B61               	infsnz	sendCommand@string& (0+255),f,b
 21198  005E8E  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 21199  005E90                     l669:
 21200                           
 21201                           ; BSR set to: 0
 21202  005E90  C061  FFF6         	movff	sendCommand@string,tblptrl
 21203  005E94  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21204  005E98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21205  005E98  6AF8               	clrf	tblptru,c
 21206  005E9A                     	endif
 21207  005E9A                     	if	0	;tblptru may be non-zero
 21208  005E9A                     	endif
 21209  005E9A  0008               	tblrd		*
 21210  005E9C  50F5               	movf	tablat,w,c
 21211  005E9E  0900               	iorlw	0
 21212  005EA0  A4D8               	btfss	status,2,c
 21213  005EA2  D7EA               	goto	l670
 21214                           
 21215                           ;MOTEapp.c: 1205: }
 21216                           ;MOTEapp.c: 1206: EndLine();
 21217  005EA4  ECFE  F031         	call	_EndLine	;wreg free
 21218  005EA8  0012               	return		;funcret
 21219  005EAA                     __end_of_sendCommand:
 21220                           	opt stack 0
 21221                           tblptru	equ	0xFF8
 21222                           tblptrh	equ	0xFF7
 21223                           tblptrl	equ	0xFF6
 21224                           tablat	equ	0xFF5
 21225                           prodh	equ	0xFF4
 21226                           prodl	equ	0xFF3
 21227                           intcon	equ	0xFF2
 21228                           intcon3	equ	0xFF0
 21229                           postinc0	equ	0xFEE
 21230                           wreg	equ	0xFE8
 21231                           indf1	equ	0xFE7
 21232                           postdec1	equ	0xFE5
 21233                           fsr1h	equ	0xFE2
 21234                           fsr1l	equ	0xFE1
 21235                           indf2	equ	0xFDF
 21236                           postinc2	equ	0xFDE
 21237                           fsr2h	equ	0xFDA
 21238                           fsr2l	equ	0xFD9
 21239                           status	equ	0xFD8
 21240                           
 21241 ;; *************** function _EndLine *****************
 21242 ;; Defined at:
 21243 ;;		line 1193 in file "../Includes/Board/MOTEapp.c"
 21244 ;; Parameters:    Size  Location     Type
 21245 ;;		None
 21246 ;; Auto vars:     Size  Location     Type
 21247 ;;		None
 21248 ;; Return value:  Size  Location     Type
 21249 ;;                  1    wreg      void 
 21250 ;; Registers used:
 21251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21252 ;; Tracked objects:
 21253 ;;		On entry : 0/0
 21254 ;;		On exit  : 0/0
 21255 ;;		Unchanged: 0/0
 21256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21257 ;;      Params:         0       0       0       0       0       0       0       0       0
 21258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21260 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21261 ;;Total ram usage:        0 bytes
 21262 ;; Hardware stack levels used:    1
 21263 ;; Hardware stack levels required when called:   12
 21264 ;; This function calls:
 21265 ;;		_EUSART_Write
 21266 ;; This function is called by:
 21267 ;;		_sendCommand
 21268 ;;		_sendDataCommand
 21269 ;;		__sendDataCommand
 21270 ;; This function uses a non-reentrant model
 21271 ;;
 21272                           
 21273                           	psect	text71
 21274  0063FC                     __ptext71:
 21275                           	opt stack 0
 21276  0063FC                     _EndLine:
 21277                           	opt stack 14
 21278                           
 21279                           ;MOTEapp.c: 1195: EUSART_Write(0x0D);
 21280                           
 21281                           ;incstack = 0
 21282  0063FC  0E0D               	movlw	13
 21283  0063FE  EC50  F02E         	call	_EUSART_Write
 21284                           
 21285                           ;MOTEapp.c: 1196: EUSART_Write(0x0A);
 21286  006402  0E0A               	movlw	10
 21287  006404  EC50  F02E         	call	_EUSART_Write
 21288  006408  0012               	return		;funcret
 21289  00640A                     __end_of_EndLine:
 21290                           	opt stack 0
 21291                           tblptru	equ	0xFF8
 21292                           tblptrh	equ	0xFF7
 21293                           tblptrl	equ	0xFF6
 21294                           tablat	equ	0xFF5
 21295                           prodh	equ	0xFF4
 21296                           prodl	equ	0xFF3
 21297                           intcon	equ	0xFF2
 21298                           intcon3	equ	0xFF0
 21299                           postinc0	equ	0xFEE
 21300                           wreg	equ	0xFE8
 21301                           indf1	equ	0xFE7
 21302                           postdec1	equ	0xFE5
 21303                           fsr1h	equ	0xFE2
 21304                           fsr1l	equ	0xFE1
 21305                           indf2	equ	0xFDF
 21306                           postinc2	equ	0xFDE
 21307                           fsr2h	equ	0xFDA
 21308                           fsr2l	equ	0xFD9
 21309                           status	equ	0xFD8
 21310                           
 21311 ;; *************** function _USBapp_handlerState *****************
 21312 ;; Defined at:
 21313 ;;		line 78 in file "../Includes/Board/USBapp.c"
 21314 ;; Parameters:    Size  Location     Type
 21315 ;;  state           1    wreg     enum E5833
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;  state           1    0[BANK0 ] enum E5833
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  1    wreg      void 
 21320 ;; Registers used:
 21321 ;;		wreg
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21327 ;;      Params:         0       0       0       0       0       0       0       0       0
 21328 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21330 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21331 ;;Total ram usage:        1 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:   11
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		_main
 21338 ;; This function uses a non-reentrant model
 21339 ;;
 21340                           
 21341                           	psect	text72
 21342  006442                     __ptext72:
 21343                           	opt stack 0
 21344  006442                     _USBapp_handlerState:
 21345                           	opt stack 19
 21346                           
 21347                           ;incstack = 0
 21348                           ;USBapp_handlerState@state stored from wreg
 21349  006442  0100               	movlb	0	; () banked
 21350  006444  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 21351                           
 21352                           ;USBapp.c: 80: usbState = state;
 21353  006446  C060  F04F         	movff	USBapp_handlerState@state,_usbState
 21354  00644A  0012               	return		;funcret
 21355  00644C                     __end_of_USBapp_handlerState:
 21356                           	opt stack 0
 21357                           tblptru	equ	0xFF8
 21358                           tblptrh	equ	0xFF7
 21359                           tblptrl	equ	0xFF6
 21360                           tablat	equ	0xFF5
 21361                           prodh	equ	0xFF4
 21362                           prodl	equ	0xFF3
 21363                           intcon	equ	0xFF2
 21364                           intcon3	equ	0xFF0
 21365                           postinc0	equ	0xFEE
 21366                           wreg	equ	0xFE8
 21367                           indf1	equ	0xFE7
 21368                           postdec1	equ	0xFE5
 21369                           fsr1h	equ	0xFE2
 21370                           fsr1l	equ	0xFE1
 21371                           indf2	equ	0xFDF
 21372                           postinc2	equ	0xFDE
 21373                           fsr2h	equ	0xFDA
 21374                           fsr2l	equ	0xFD9
 21375                           status	equ	0xFD8
 21376                           
 21377 ;; *************** function _USBapp_Handler *****************
 21378 ;; Defined at:
 21379 ;;		line 86 in file "../Includes/Board/USBapp.c"
 21380 ;; Parameters:    Size  Location     Type
 21381 ;;		None
 21382 ;; Auto vars:     Size  Location     Type
 21383 ;;  buttonPress     1   24[BANK0 ] enum E5867
 21384 ;; Return value:  Size  Location     Type
 21385 ;;                  1    wreg      void 
 21386 ;; Registers used:
 21387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21388 ;; Tracked objects:
 21389 ;;		On entry : 0/0
 21390 ;;		On exit  : 0/0
 21391 ;;		Unchanged: 0/0
 21392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21393 ;;      Params:         0       0       0       0       0       0       0       0       0
 21394 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21396 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21397 ;;Total ram usage:        1 bytes
 21398 ;; Hardware stack levels used:    1
 21399 ;; Hardware stack levels required when called:   16
 21400 ;; This function calls:
 21401 ;;		_USBapp_DeviceCdcEmulatorHandler
 21402 ;;		_oled_clear
 21403 ;;		_oled_putString
 21404 ;;		_service_pushbutton
 21405 ;; This function is called by:
 21406 ;;		_main
 21407 ;; This function uses a non-reentrant model
 21408 ;;
 21409                           
 21410                           	psect	text73
 21411  0041FA                     __ptext73:
 21412                           	opt stack 0
 21413  0041FA                     _USBapp_Handler:
 21414                           	opt stack 14
 21415                           
 21416                           ;USBapp.c: 90: {
 21417                           ;USBapp.c: 91: switch(usbState)
 21418                           
 21419                           ;incstack = 0
 21420                           ;USBapp.c: 89: do
 21421  0041FA  D04D               	goto	l924
 21422  0041FC                     
 21423                           ;USBapp.c: 94: while(1);
 21424  0041FC  D7FF               	goto	l925
 21425  0041FE                     
 21426                           ;USBapp.c: 98: oled_clear();
 21427  0041FE  EC5E  F031         	call	_oled_clear	;wreg free
 21428                           
 21429                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21430  004202  0E11               	movlw	low STR_190
 21431  004204  0100               	movlb	0	; () banked
 21432  004206  6F72               	movwf	oled_putString@string& (0+255),b
 21433  004208  0E7F               	movlw	high STR_190
 21434  00420A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21435  00420C  5172               	movf	oled_putString@string& (0+255),w,b
 21436  00420E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21437  004210  A4D8               	btfss	status,2,c
 21438  004212  0E00               	movlw	low (__mediumconst shr (0+16))
 21439  004214  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21440  004216  0E01               	movlw	1
 21441  004218  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21442  00421A  0E00               	movlw	0
 21443  00421C  6F76               	movwf	oled_putString@start_page& (0+255),b
 21444  00421E  ECF3  F029         	call	_oled_putString	;wreg free
 21445                           
 21446                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21447  004222  0E62               	movlw	low STR_191
 21448  004224  0100               	movlb	0	; () banked
 21449  004226  6F72               	movwf	oled_putString@string& (0+255),b
 21450  004228  0E7F               	movlw	high STR_191
 21451  00422A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21452  00422C  5172               	movf	oled_putString@string& (0+255),w,b
 21453  00422E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21454  004230  A4D8               	btfss	status,2,c
 21455  004232  0E00               	movlw	low (__mediumconst shr (0+16))
 21456  004234  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21457  004236  0E02               	movlw	2
 21458  004238  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21459  00423A  0E01               	movlw	1
 21460  00423C  6F76               	movwf	oled_putString@start_page& (0+255),b
 21461  00423E  ECF3  F029         	call	_oled_putString	;wreg free
 21462                           
 21463                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21464  004242  0E29               	movlw	low STR_192
 21465  004244  0100               	movlb	0	; () banked
 21466  004246  6F72               	movwf	oled_putString@string& (0+255),b
 21467  004248  0E7E               	movlw	high STR_192
 21468  00424A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21469  00424C  5172               	movf	oled_putString@string& (0+255),w,b
 21470  00424E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21471  004250  A4D8               	btfss	status,2,c
 21472  004252  0E00               	movlw	low (__mediumconst shr (0+16))
 21473  004254  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21474  004256  0E00               	movlw	0
 21475  004258  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21476  00425A  0E02               	movlw	2
 21477  00425C  6F76               	movwf	oled_putString@start_page& (0+255),b
 21478  00425E  ECF3  F029         	call	_oled_putString	;wreg free
 21479                           
 21480                           ;USBapp.c: 103: usbState = USB_RUNNING;
 21481  004262  0E01               	movlw	1
 21482  004264  D006               	goto	L16
 21483  004266                     
 21484                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 21485  004266  0E20               	movlw	32
 21486  004268  0100               	movlb	0	; () banked
 21487  00426A  61EF               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 21488  00426C  D001               	goto	l932
 21489  00426E  D01E               	goto	l929
 21490  004270                     l932:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;USBapp.c: 111: }
 21494                           ;USBapp.c: 112: usbState = USB_CDC;
 21495                           
 21496                           ; BSR set to: 0
 21497  004270  0E02               	movlw	2
 21498  004272                     L16:
 21499  004272  6E4F               	movwf	_usbState,c
 21500                           
 21501                           ;USBapp.c: 113: break;
 21502  004274  D01B               	goto	l929
 21503  004276                     
 21504                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 21505                           
 21506                           ; BSR set to: 0
 21507  004276  ECDC  F01E         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 21508                           
 21509                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 21510  00427A  0E03               	movlw	3
 21511  00427C  0100               	movlb	0	; () banked
 21512  00427E  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21513                           
 21514                           ; BSR set to: 0
 21515                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 21516  004280  EC42  F02B         	call	_service_pushbutton	;wreg free
 21517  004284  0100               	movlb	0	; () banked
 21518  004286  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;USBapp.c: 122: if (buttonPress != Released )
 21522  004288  0E03               	movlw	3
 21523  00428A  1978               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 21524  00428C  B4D8               	btfsc	status,2,c
 21525  00428E  D00E               	goto	l929
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;USBapp.c: 123: {
 21529                           ;USBapp.c: 124: exitUSB = USB_BAT;
 21530  004290  0E02               	movlw	2
 21531  004292  6FFA               	movwf	_exitUSB& (0+255),b
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;USBapp.c: 127: }
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;USBapp.c: 125: }
 21538                           ;USBapp.c: 126: break;
 21539  004294  D00B               	goto	l929
 21540  004296                     l924:
 21541                           
 21542                           ; BSR set to: 0
 21543  004296  504F               	movf	_usbState,w,c
 21544                           
 21545                           ; Switch size 1, requested type "space"
 21546                           ; Number of cases is 3, Range of values is 0 to 2
 21547                           ; switch strategies available:
 21548                           ; Name         Instructions Cycles
 21549                           ; simple_byte           10     6 (average)
 21550                           ;	Chosen strategy is simple_byte
 21551  004298  0A00               	xorlw	0	; case 0
 21552  00429A  B4D8               	btfsc	status,2,c
 21553  00429C  D7B0               	goto	l930
 21554  00429E  0A01               	xorlw	1	; case 1
 21555  0042A0  B4D8               	btfsc	status,2,c
 21556  0042A2  D7E1               	goto	l931
 21557  0042A4  0A03               	xorlw	3	; case 2
 21558  0042A6  B4D8               	btfsc	status,2,c
 21559  0042A8  D7E6               	goto	l934
 21560  0042AA  D7A8               	goto	l925
 21561  0042AC                     l929:
 21562                           
 21563                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 21564  0042AC  A080               	btfss	3968,0,c	;volatile
 21565  0042AE  D004               	goto	u10680
 21566  0042B0  0100               	movlb	0	; () banked
 21567  0042B2  51FA               	movf	_exitUSB& (0+255),w,b
 21568  0042B4  B4D8               	btfsc	status,2,c
 21569  0042B6  D7EF               	goto	l924
 21570  0042B8                     u10680:
 21571                           
 21572                           ;USBapp.c: 129: __nop();
 21573                           
 21574                           ; BSR set to: 0
 21575  0042B8  F000               	nop	
 21576                           
 21577                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 21578  0042BA  0E02               	movlw	2
 21579  0042BC  0100               	movlb	0	; () banked
 21580  0042BE  19FA               	xorwf	_exitUSB& (0+255),w,b
 21581  0042C0  B4D8               	btfsc	status,2,c
 21582  0042C2  0012               	return	
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;USBapp.c: 131: exitUSB = NO_USB;
 21586  0042C4  0E00               	movlw	0
 21587  0042C6  6FFA               	movwf	_exitUSB& (0+255),b
 21588  0042C8  0012               	return	
 21589  0042CA                     __end_of_USBapp_Handler:
 21590                           	opt stack 0
 21591                           tblptru	equ	0xFF8
 21592                           tblptrh	equ	0xFF7
 21593                           tblptrl	equ	0xFF6
 21594                           tablat	equ	0xFF5
 21595                           prodh	equ	0xFF4
 21596                           prodl	equ	0xFF3
 21597                           intcon	equ	0xFF2
 21598                           intcon3	equ	0xFF0
 21599                           postinc0	equ	0xFEE
 21600                           wreg	equ	0xFE8
 21601                           indf1	equ	0xFE7
 21602                           postdec1	equ	0xFE5
 21603                           fsr1h	equ	0xFE2
 21604                           fsr1l	equ	0xFE1
 21605                           indf2	equ	0xFDF
 21606                           postinc2	equ	0xFDE
 21607                           fsr2h	equ	0xFDA
 21608                           fsr2l	equ	0xFD9
 21609                           status	equ	0xFD8
 21610                           
 21611 ;; *************** function _service_pushbutton *****************
 21612 ;; Defined at:
 21613 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 21614 ;; Parameters:    Size  Location     Type
 21615 ;;		None
 21616 ;; Auto vars:     Size  Location     Type
 21617 ;;  bs              1    0[BANK0 ] enum E5748
 21618 ;; Return value:  Size  Location     Type
 21619 ;;                  1    wreg      enum E5836
 21620 ;; Registers used:
 21621 ;;		wreg, status,2, status,0
 21622 ;; Tracked objects:
 21623 ;;		On entry : 0/0
 21624 ;;		On exit  : 0/0
 21625 ;;		Unchanged: 0/0
 21626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21627 ;;      Params:         0       0       0       0       0       0       0       0       0
 21628 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21630 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21631 ;;Total ram usage:        1 bytes
 21632 ;; Hardware stack levels used:    1
 21633 ;; Hardware stack levels required when called:   11
 21634 ;; This function calls:
 21635 ;;		Nothing
 21636 ;; This function is called by:
 21637 ;;		_moteHandler
 21638 ;;		_USBapp_Handler
 21639 ;; This function uses a non-reentrant model
 21640 ;;
 21641                           
 21642                           	psect	text74
 21643  005684                     __ptext74:
 21644                           	opt stack 0
 21645  005684                     _service_pushbutton:
 21646                           	opt stack 18
 21647                           
 21648                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 21649                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 21650                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;incstack = 0
 21654  005684  0E00               	movlw	0
 21655  005686  0100               	movlb	0	; () banked
 21656  005688  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 21660  00568A  A281               	btfss	3969,1,c	;volatile
 21661  00568C  D002               	goto	u9400
 21662                           
 21663                           ; BSR set to: 0
 21664  00568E  B081               	btfsc	3969,0,c	;volatile
 21665  005690  D018               	goto	l1017
 21666  005692                     u9400:
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;buttons.c: 56: {
 21670                           ;buttons.c: 57: ++PB_Timer;
 21671                           
 21672                           ; BSR set to: 0
 21673  005692  0E01               	movlw	1
 21674  005694  0101               	movlb	1	; () banked
 21675  005696  270A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 21676  005698  0E00               	movlw	0
 21677  00569A  230B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 21678  00569C  230C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 21679  00569E  230D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 21680                           
 21681                           ;buttons.c: 61: if (PB_Timer == 55)
 21682  0056A0  0E37               	movlw	55
 21683  0056A2  190A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 21684  0056A4  110B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 21685  0056A6  110C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 21686  0056A8  110D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 21687  0056AA  A4D8               	btfss	status,2,c
 21688  0056AC  D008               	goto	l1020
 21689                           
 21690                           ; BSR set to: 1
 21691                           ;buttons.c: 62: {
 21692                           ;buttons.c: 63: Release_Timer = 0;
 21693  0056AE  0E00               	movlw	0
 21694  0056B0  6E4E               	movwf	service_pushbutton@Release_Timer,c
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 21698  0056B2  B281               	btfsc	3969,1,c	;volatile
 21699  0056B4  D002               	goto	l1021
 21700                           
 21701                           ; BSR set to: 1
 21702                           ;buttons.c: 66: {
 21703                           ;buttons.c: 67: bs = ShortPress1;
 21704  0056B6  0E01               	movlw	1
 21705  0056B8  D016               	goto	L19
 21706  0056BA                     l1021:
 21707                           
 21708                           ;buttons.c: 69: else
 21709                           ;buttons.c: 70: {
 21710                           ;buttons.c: 71: bs = ShortPress2;
 21711                           
 21712                           ; BSR set to: 0
 21713  0056BA  0E02               	movlw	2
 21714  0056BC  D014               	goto	L19
 21715  0056BE                     l1020:
 21716                           
 21717                           ;buttons.c: 74: else
 21718                           ;buttons.c: 75: {
 21719                           ;buttons.c: 76: bs = NoButton;
 21720                           
 21721                           ; BSR set to: 0
 21722  0056BE  0E00               	movlw	0
 21723  0056C0  D012               	goto	L19
 21724  0056C2                     l1017:
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;buttons.c: 79: else
 21728                           ;buttons.c: 80: {
 21729                           ;buttons.c: 81: if (Release_Timer == 20)
 21730                           
 21731                           ; BSR set to: 0
 21732  0056C2  0E14               	movlw	20
 21733  0056C4  184E               	xorwf	service_pushbutton@Release_Timer,w,c
 21734  0056C6  A4D8               	btfss	status,2,c
 21735  0056C8  D00C               	goto	l1025
 21736                           
 21737                           ; BSR set to: 0
 21738                           ;buttons.c: 82: {
 21739                           ;buttons.c: 83: PB_Timer = 0;
 21740  0056CA  0E00               	movlw	0
 21741  0056CC  0101               	movlb	1	; () banked
 21742  0056CE  6F0A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 21743  0056D0  0E00               	movlw	0
 21744  0056D2  6F0B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 21745  0056D4  0E00               	movlw	0
 21746  0056D6  6F0C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 21747  0056D8  0E00               	movlw	0
 21748  0056DA  6F0D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 21749                           
 21750                           ;buttons.c: 84: Release_Timer = 0;
 21751  0056DC  0E00               	movlw	0
 21752  0056DE  6E4E               	movwf	service_pushbutton@Release_Timer,c
 21753                           
 21754                           ;buttons.c: 85: }
 21755  0056E0  D001               	goto	l1026
 21756  0056E2                     l1025:
 21757                           
 21758                           ;buttons.c: 86: else
 21759                           ;buttons.c: 87: {
 21760                           ;buttons.c: 88: Release_Timer++;
 21761                           
 21762                           ; BSR set to: 1
 21763  0056E2  2A4E               	incf	service_pushbutton@Release_Timer,f,c
 21764  0056E4                     l1026:
 21765                           
 21766                           ;buttons.c: 89: }
 21767                           ;buttons.c: 90: bs = Released;
 21768  0056E4  0E03               	movlw	3
 21769  0056E6                     L19:
 21770  0056E6  0100               	movlb	0	; () banked
 21771  0056E8  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;buttons.c: 91: }
 21775                           ;buttons.c: 93: return bs;
 21776                           
 21777                           ; BSR set to: 0
 21778  0056EA  5160               	movf	service_pushbutton@bs& (0+255),w,b
 21779  0056EC  0012               	return	
 21780  0056EE                     __end_of_service_pushbutton:
 21781                           	opt stack 0
 21782                           tblptru	equ	0xFF8
 21783                           tblptrh	equ	0xFF7
 21784                           tblptrl	equ	0xFF6
 21785                           tablat	equ	0xFF5
 21786                           prodh	equ	0xFF4
 21787                           prodl	equ	0xFF3
 21788                           intcon	equ	0xFF2
 21789                           intcon3	equ	0xFF0
 21790                           postinc0	equ	0xFEE
 21791                           wreg	equ	0xFE8
 21792                           indf1	equ	0xFE7
 21793                           postdec1	equ	0xFE5
 21794                           fsr1h	equ	0xFE2
 21795                           fsr1l	equ	0xFE1
 21796                           indf2	equ	0xFDF
 21797                           postinc2	equ	0xFDE
 21798                           fsr2h	equ	0xFDA
 21799                           fsr2l	equ	0xFD9
 21800                           status	equ	0xFD8
 21801                           
 21802 ;; *************** function _oled_putString *****************
 21803 ;; Defined at:
 21804 ;;		line 354 in file "../Includes/Drivers/SSD1306oLED.c"
 21805 ;; Parameters:    Size  Location     Type
 21806 ;;  string          3   18[BANK0 ] PTR const unsigned char 
 21807 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), ROM(32767), 
 21808 ;;		 -> STR_192(12), STR_191(8), STR_190(9), storedLight(5), 
 21809 ;;		 -> STR_185(5), STR_184(8), STR_183(8), STR_182(9), 
 21810 ;;		 -> STR_165(16), STR_164(17), STR_163(17), STR_162(4), 
 21811 ;;		 -> STR_161(4), STR_160(4), STR_159(4), STR_158(4), 
 21812 ;;		 -> STR_157(4), STR_156(4), STR_155(16), STR_154(17), 
 21813 ;;		 -> STR_153(4), STR_152(4), STR_151(4), STR_150(4), 
 21814 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 21815 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 21816 ;;		 -> STR_141(4), STR_140(16), STR_139(12), STR_138(17), 
 21817 ;;		 -> STR_137(16), STR_136(16), STR_135(16), STR_134(15), 
 21818 ;;		 -> STR_133(15), STR_132(16), STR_131(4), STR_130(3), 
 21819 ;;		 -> STR_129(3), STR_128(3), STR_127(3), STR_126(2), 
 21820 ;;		 -> STR_125(5), STR_124(7), STR_123(17), STR_122(17), 
 21821 ;;		 -> STR_121(2), STR_120(7), STR_119(7), STR_118(16), 
 21822 ;;		 -> STR_117(16), STR_116(15), STR_115(15), STR_114(17), 
 21823 ;;		 -> STR_113(16), STR_112(17), STR_111(17), STR_110(7), 
 21824 ;;		 -> STR_109(10), STR_108(17), STR_107(16), STR_106(16), 
 21825 ;;		 -> STR_105(16), STR_104(16), STR_103(17), STR_102(17), 
 21826 ;;		 -> STR_101(16), STR_99(19), STR_97(17), STR_95(17), 
 21827 ;;		 -> STR_94(17), responseData(32), responsePortNum(3), STR_91(13), 
 21828 ;;		 -> STR_90(12), STR_89(12), STR_84(18), STR_83(13), 
 21829 ;;		 -> STR_82(17), STR_81(16), STR_80(17), STR_79(17), 
 21830 ;;		 -> STR_78(16), STR_77(17), STR_76(17), STR_73(13), 
 21831 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 21832 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 21833 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 21834 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 21835 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 21836 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 21837 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 21838 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 21839 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 21840 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 21841 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 21842 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 21843 ;;  station_dot     1   21[BANK0 ] unsigned char 
 21844 ;;  start_page      1   22[BANK0 ] unsigned char 
 21845 ;; Auto vars:     Size  Location     Type
 21846 ;;  index           1   23[BANK0 ] unsigned char 
 21847 ;; Return value:  Size  Location     Type
 21848 ;;                  1    wreg      void 
 21849 ;; Registers used:
 21850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21851 ;; Tracked objects:
 21852 ;;		On entry : 0/0
 21853 ;;		On exit  : 0/0
 21854 ;;		Unchanged: 0/0
 21855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21856 ;;      Params:         0       5       0       0       0       0       0       0       0
 21857 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21859 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21860 ;;Total ram usage:        6 bytes
 21861 ;; Hardware stack levels used:    1
 21862 ;; Hardware stack levels required when called:   14
 21863 ;; This function calls:
 21864 ;;		_oled_putChar
 21865 ;; This function is called by:
 21866 ;;		_main
 21867 ;;		_test_oled
 21868 ;;		_test_switch
 21869 ;;		_test_comms
 21870 ;;		_test_leds
 21871 ;;		_moteHandler
 21872 ;;		_moteJoiningProcess
 21873 ;;		_moteRunningProcess
 21874 ;;		_moteApp_testSensors
 21875 ;;		_USBapp_Handler
 21876 ;;		_oled_putUint8
 21877 ;;		_oled_putint8
 21878 ;;		_test_adc
 21879 ;;		_test_rf
 21880 ;;		_oled_putUint16
 21881 ;;		_printfOled
 21882 ;; This function uses a non-reentrant model
 21883 ;;
 21884                           
 21885                           	psect	text75
 21886  0053E6                     __ptext75:
 21887                           	opt stack 0
 21888  0053E6                     _oled_putString:
 21889                           	opt stack 14
 21890                           
 21891                           ;SSD1306oLED.c: 356: uint8_t index;
 21892                           ;SSD1306oLED.c: 357: for(index = station_dot; index < 16; index++)
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;incstack = 0
 21896  0053E6  C075  F077         	movff	oled_putString@station_dot,oled_putString@index
 21897  0053EA  0E0F               	movlw	15
 21898  0053EC  0100               	movlb	0	; () banked
 21899  0053EE  6577               	cpfsgt	oled_putString@index& (0+255),b
 21900  0053F0  D001               	goto	l1131
 21901  0053F2  0012               	return	
 21902  0053F4                     l1131:
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;SSD1306oLED.c: 358: {
 21906                           ;SSD1306oLED.c: 359: if (*string != 0)
 21907                           
 21908                           ; BSR set to: 0
 21909  0053F4  C072  FFF6         	movff	oled_putString@string,tblptrl
 21910  0053F8  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 21911  0053FC  C074  FFF8         	movff	oled_putString@string+2,tblptru
 21912  005400  BAF8               	btfsc	tblptru,5,c
 21913  005402  D003               	bra	u6777
 21914  005404  0008               	tblrd		*
 21915  005406  50F5               	movf	tablat,w,c
 21916  005408  D005               	bra	u6770
 21917  00540A                     u6777:
 21918  00540A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21919  00540E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21920  005412  50EF               	movf	indf0,w,c
 21921  005414                     u6770:
 21922  005414  0900               	iorlw	0
 21923  005416  B4D8               	btfsc	status,2,c
 21924  005418  0012               	return	
 21925                           
 21926                           ;SSD1306oLED.c: 360: {
 21927                           ;SSD1306oLED.c: 361: oled_putChar(*string, index, start_page);
 21928  00541A  C077  F062         	movff	oled_putString@index,oled_putChar@station_dot
 21929  00541E  C076  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 21930  005422  C072  FFF6         	movff	oled_putString@string,tblptrl
 21931  005426  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 21932  00542A  C074  FFF8         	movff	oled_putString@string+2,tblptru
 21933  00542E  BAF8               	btfsc	tblptru,5,c
 21934  005430  D003               	bra	u6797
 21935  005432  0008               	tblrd		*
 21936  005434  50F5               	movf	tablat,w,c
 21937  005436  D005               	bra	u6790
 21938  005438                     u6797:
 21939  005438  CFF6 FFE9          	movff	tblptrl,fsr0l
 21940  00543C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21941  005440  50EF               	movf	indf0,w,c
 21942  005442                     u6790:
 21943  005442  EC73  F028         	call	_oled_putChar
 21944                           
 21945                           ;SSD1306oLED.c: 362: *string++;
 21946  005446  0100               	movlb	0	; () banked
 21947  005448  0E01               	movlw	1
 21948  00544A  2772               	addwf	oled_putString@string& (0+255),f,b
 21949  00544C  0E00               	movlw	0
 21950  00544E  2373               	addwfc	(oled_putString@string+1)& (0+255),f,b
 21951  005450  0E00               	movlw	0
 21952  005452  2374               	addwfc	(oled_putString@string+2)& (0+255),f,b
 21953                           
 21954                           ; BSR set to: 0
 21955                           
 21956                           ; BSR set to: 0
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;SSD1306oLED.c: 364: else
 21960                           ;SSD1306oLED.c: 365: {
 21961                           ;SSD1306oLED.c: 366: break;
 21962                           
 21963                           ;SSD1306oLED.c: 363: }
 21964  005454  2B77               	incf	oled_putString@index& (0+255),f,b
 21965                           
 21966                           ; BSR set to: 0
 21967  005456  0E0F               	movlw	15
 21968  005458  D7CA               	goto	L20
 21969  00545A                     __end_of_oled_putString:
 21970                           	opt stack 0
 21971                           tblptru	equ	0xFF8
 21972                           tblptrh	equ	0xFF7
 21973                           tblptrl	equ	0xFF6
 21974                           tablat	equ	0xFF5
 21975                           prodh	equ	0xFF4
 21976                           prodl	equ	0xFF3
 21977                           intcon	equ	0xFF2
 21978                           intcon3	equ	0xFF0
 21979                           indf0	equ	0xFEF
 21980                           postinc0	equ	0xFEE
 21981                           fsr0h	equ	0xFEA
 21982                           fsr0l	equ	0xFE9
 21983                           wreg	equ	0xFE8
 21984                           indf1	equ	0xFE7
 21985                           postdec1	equ	0xFE5
 21986                           fsr1h	equ	0xFE2
 21987                           fsr1l	equ	0xFE1
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           fsr2h	equ	0xFDA
 21991                           fsr2l	equ	0xFD9
 21992                           status	equ	0xFD8
 21993                           
 21994 ;; *************** function _oled_clear *****************
 21995 ;; Defined at:
 21996 ;;		line 371 in file "../Includes/Drivers/SSD1306oLED.c"
 21997 ;; Parameters:    Size  Location     Type
 21998 ;;		None
 21999 ;; Auto vars:     Size  Location     Type
 22000 ;;		None
 22001 ;; Return value:  Size  Location     Type
 22002 ;;                  1    wreg      void 
 22003 ;; Registers used:
 22004 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22005 ;; Tracked objects:
 22006 ;;		On entry : 0/0
 22007 ;;		On exit  : 0/0
 22008 ;;		Unchanged: 0/0
 22009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22010 ;;      Params:         0       0       0       0       0       0       0       0       0
 22011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22013 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22014 ;;Total ram usage:        0 bytes
 22015 ;; Hardware stack levels used:    1
 22016 ;; Hardware stack levels required when called:   15
 22017 ;; This function calls:
 22018 ;;		_oled_clearRow
 22019 ;; This function is called by:
 22020 ;;		_main
 22021 ;;		_test_powerup
 22022 ;;		_test_oled
 22023 ;;		_test_switch
 22024 ;;		_moteHandler
 22025 ;;		_moteJoiningProcess
 22026 ;;		_moteRunningProcess
 22027 ;;		_moteApp_testSensors
 22028 ;;		_moteApp_searchFrameGPS
 22029 ;;		_USBapp_Handler
 22030 ;;		_oled_init
 22031 ;;		_test_adc
 22032 ;;		_test_rf
 22033 ;;		_printfOled
 22034 ;; This function uses a non-reentrant model
 22035 ;;
 22036                           
 22037                           	psect	text76
 22038  0062BC                     __ptext76:
 22039                           	opt stack 0
 22040  0062BC                     _oled_clear:
 22041                           	opt stack 13
 22042                           
 22043                           ;SSD1306oLED.c: 373: oled_clearRow(0);
 22044                           
 22045                           ;incstack = 0
 22046  0062BC  0E00               	movlw	0
 22047  0062BE  ECDB  F030         	call	_oled_clearRow
 22048                           
 22049                           ;SSD1306oLED.c: 374: oled_clearRow(1);
 22050  0062C2  0E01               	movlw	1
 22051  0062C4  ECDB  F030         	call	_oled_clearRow
 22052                           
 22053                           ;SSD1306oLED.c: 375: oled_clearRow(2);
 22054  0062C8  0E02               	movlw	2
 22055  0062CA  ECDB  F030         	call	_oled_clearRow
 22056                           
 22057                           ;SSD1306oLED.c: 376: oled_clearRow(3);
 22058  0062CE  0E03               	movlw	3
 22059  0062D0  ECDB  F030         	call	_oled_clearRow
 22060  0062D4  0012               	return		;funcret
 22061  0062D6                     __end_of_oled_clear:
 22062                           	opt stack 0
 22063                           tblptru	equ	0xFF8
 22064                           tblptrh	equ	0xFF7
 22065                           tblptrl	equ	0xFF6
 22066                           tablat	equ	0xFF5
 22067                           prodh	equ	0xFF4
 22068                           prodl	equ	0xFF3
 22069                           intcon	equ	0xFF2
 22070                           intcon3	equ	0xFF0
 22071                           indf0	equ	0xFEF
 22072                           postinc0	equ	0xFEE
 22073                           fsr0h	equ	0xFEA
 22074                           fsr0l	equ	0xFE9
 22075                           wreg	equ	0xFE8
 22076                           indf1	equ	0xFE7
 22077                           postdec1	equ	0xFE5
 22078                           fsr1h	equ	0xFE2
 22079                           fsr1l	equ	0xFE1
 22080                           indf2	equ	0xFDF
 22081                           postinc2	equ	0xFDE
 22082                           fsr2h	equ	0xFDA
 22083                           fsr2l	equ	0xFD9
 22084                           status	equ	0xFD8
 22085                           
 22086 ;; *************** function _oled_clearRow *****************
 22087 ;; Defined at:
 22088 ;;		line 379 in file "../Includes/Drivers/SSD1306oLED.c"
 22089 ;; Parameters:    Size  Location     Type
 22090 ;;  page            1    wreg     unsigned char 
 22091 ;; Auto vars:     Size  Location     Type
 22092 ;;  page            1   12[BANK0 ] unsigned char 
 22093 ;;  index           1   13[BANK0 ] unsigned char 
 22094 ;; Return value:  Size  Location     Type
 22095 ;;                  1    wreg      void 
 22096 ;; Registers used:
 22097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22098 ;; Tracked objects:
 22099 ;;		On entry : 0/0
 22100 ;;		On exit  : 0/0
 22101 ;;		Unchanged: 0/0
 22102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22103 ;;      Params:         0       0       0       0       0       0       0       0       0
 22104 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22106 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22107 ;;Total ram usage:        2 bytes
 22108 ;; Hardware stack levels used:    1
 22109 ;; Hardware stack levels required when called:   14
 22110 ;; This function calls:
 22111 ;;		_oled_putChar
 22112 ;; This function is called by:
 22113 ;;		_oled_clear
 22114 ;; This function uses a non-reentrant model
 22115 ;;
 22116                           
 22117                           	psect	text77
 22118  0061B6                     __ptext77:
 22119                           	opt stack 0
 22120  0061B6                     _oled_clearRow:
 22121                           	opt stack 13
 22122                           
 22123                           ;incstack = 0
 22124                           ;oled_clearRow@page stored from wreg
 22125  0061B6  0100               	movlb	0	; () banked
 22126  0061B8  6F6C               	movwf	oled_clearRow@page& (0+255),b
 22127                           
 22128                           ;SSD1306oLED.c: 381: uint8_t index;
 22129                           ;SSD1306oLED.c: 383: for(index = 0; index < 16; index++)
 22130  0061BA  0E00               	movlw	0
 22131  0061BC  0100               	movlb	0	; () banked
 22132  0061BE  6F6D               	movwf	oled_clearRow@index& (0+255),b
 22133  0061C0                     l8299:
 22134                           
 22135                           ; BSR set to: 0
 22136  0061C0  0E0F               	movlw	15
 22137  0061C2  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 22138  0061C4  D001               	goto	l1141
 22139  0061C6  0012               	return	
 22140  0061C8                     l1141:
 22141                           
 22142                           ; BSR set to: 0
 22143                           ;SSD1306oLED.c: 384: {
 22144                           ;SSD1306oLED.c: 385: oled_putChar( ' ', index, page);
 22145                           
 22146                           ; BSR set to: 0
 22147  0061C8  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 22148  0061CC  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 22149  0061D0  0E20               	movlw	32
 22150  0061D2  EC73  F028         	call	_oled_putChar
 22151  0061D6  0100               	movlb	0	; () banked
 22152  0061D8  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 22153  0061DA  D7F2               	goto	l8299
 22154  0061DC                     __end_of_oled_clearRow:
 22155                           	opt stack 0
 22156                           tblptru	equ	0xFF8
 22157                           tblptrh	equ	0xFF7
 22158                           tblptrl	equ	0xFF6
 22159                           tablat	equ	0xFF5
 22160                           prodh	equ	0xFF4
 22161                           prodl	equ	0xFF3
 22162                           intcon	equ	0xFF2
 22163                           intcon3	equ	0xFF0
 22164                           indf0	equ	0xFEF
 22165                           postinc0	equ	0xFEE
 22166                           fsr0h	equ	0xFEA
 22167                           fsr0l	equ	0xFE9
 22168                           wreg	equ	0xFE8
 22169                           indf1	equ	0xFE7
 22170                           postdec1	equ	0xFE5
 22171                           fsr1h	equ	0xFE2
 22172                           fsr1l	equ	0xFE1
 22173                           indf2	equ	0xFDF
 22174                           postinc2	equ	0xFDE
 22175                           fsr2h	equ	0xFDA
 22176                           fsr2l	equ	0xFD9
 22177                           status	equ	0xFD8
 22178                           
 22179 ;; *************** function _oled_putChar *****************
 22180 ;; Defined at:
 22181 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;  k               1    wreg     unsigned char 
 22184 ;;  station_dot     1    2[BANK0 ] unsigned char 
 22185 ;;  start_page      1    3[BANK0 ] unsigned char 
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;  k               1   10[BANK0 ] unsigned char 
 22188 ;;  index           1   11[BANK0 ] unsigned char 
 22189 ;; Return value:  Size  Location     Type
 22190 ;;                  1    wreg      void 
 22191 ;; Registers used:
 22192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22193 ;; Tracked objects:
 22194 ;;		On entry : 0/0
 22195 ;;		On exit  : 0/0
 22196 ;;		Unchanged: 0/0
 22197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22198 ;;      Params:         0       2       0       0       0       0       0       0       0
 22199 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22200 ;;      Temps:          0       6       0       0       0       0       0       0       0
 22201 ;;      Totals:         0      10       0       0       0       0       0       0       0
 22202 ;;Total ram usage:       10 bytes
 22203 ;; Hardware stack levels used:    1
 22204 ;; Hardware stack levels required when called:   13
 22205 ;; This function calls:
 22206 ;;		_Set_Column_Address
 22207 ;;		_Set_Page_Address
 22208 ;;		_oled_writeData
 22209 ;; This function is called by:
 22210 ;;		_moteApp_testSensors
 22211 ;;		_oled_putStringLineN
 22212 ;;		_oled_putString
 22213 ;;		_oled_clearRow
 22214 ;;		_test_adc
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           	psect	text78
 22219  0050E6                     __ptext78:
 22220                           	opt stack 0
 22221  0050E6                     _oled_putChar:
 22222                           	opt stack 14
 22223                           
 22224                           ; BSR set to: 0
 22225                           ;incstack = 0
 22226                           ;oled_putChar@k stored from wreg
 22227  0050E6  0100               	movlb	0	; () banked
 22228  0050E8  6F6A               	movwf	oled_putChar@k& (0+255),b
 22229                           
 22230                           ;SSD1306oLED.c: 320: uint8_t index;
 22231                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 22232  0050EA  0100               	movlb	0	; () banked
 22233  0050EC  5163               	movf	oled_putChar@start_page& (0+255),w,b
 22234  0050EE  ECB8  F031         	call	_Set_Page_Address
 22235                           
 22236                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 22237  0050F2  0100               	movlb	0	; () banked
 22238  0050F4  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 22239  0050F6  0D08               	mullw	8
 22240  0050F8  50F3               	movf	prodl,w,c
 22241  0050FA  0F04               	addlw	4
 22242  0050FC  EC50  F031         	call	_Set_Column_Address
 22243                           
 22244                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 22245  005100  0E00               	movlw	0
 22246  005102  0100               	movlb	0	; () banked
 22247  005104  6F6B               	movwf	oled_putChar@index& (0+255),b
 22248  005106                     l8163:
 22249                           
 22250                           ; BSR set to: 0
 22251  005106  0E07               	movlw	7
 22252  005108  656B               	cpfsgt	oled_putChar@index& (0+255),b
 22253  00510A  D001               	goto	l1119
 22254  00510C  0012               	return	
 22255  00510E                     l1119:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;SSD1306oLED.c: 326: {
 22259                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 22260                           
 22261                           ; BSR set to: 0
 22262  00510E  516B               	movf	oled_putChar@index& (0+255),w,b
 22263  005110  0D01               	mullw	1
 22264  005112  0E00               	movlw	0
 22265  005114  6F64               	movwf	??_oled_putChar& (0+255),b
 22266  005116  0EFF               	movlw	255
 22267  005118  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 22268  00511A  516A               	movf	oled_putChar@k& (0+255),w,b
 22269  00511C  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 22270  00511E  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 22271  005120  90D8               	bcf	status,0,c
 22272  005122  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22273  005124  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22274  005126  90D8               	bcf	status,0,c
 22275  005128  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22276  00512A  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22277  00512C  90D8               	bcf	status,0,c
 22278  00512E  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22279  005130  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22280  005132  5164               	movf	??_oled_putChar& (0+255),w,b
 22281  005134  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 22282  005136  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 22283  005138  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 22284  00513A  C1F6  F068         	movff	_selectedFont,??_oled_putChar+4
 22285  00513E  C1F7  F069         	movff	_selectedFont+1,??_oled_putChar+5
 22286  005142  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 22287  005144  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22288  005146  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 22289  005148  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22290  00514A  50F3               	movf	prodl,w,c
 22291  00514C  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22292  00514E  50F4               	movf	prodh,w,c
 22293  005150  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22294  005152  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 22295  005156  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 22296  00515A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22297  00515A  6AF8               	clrf	tblptru,c
 22298  00515C                     	endif
 22299  00515C                     	if	0	;tblptru may be non-zero
 22300  00515C                     	endif
 22301  00515C  0008               	tblrd		*
 22302  00515E  50F5               	movf	tablat,w,c
 22303  005160  EC78  F031         	call	_oled_writeData
 22304  005164  0100               	movlb	0	; () banked
 22305  005166  2B6B               	incf	oled_putChar@index& (0+255),f,b
 22306  005168  D7CE               	goto	l8163
 22307  00516A                     __end_of_oled_putChar:
 22308                           	opt stack 0
 22309                           tblptru	equ	0xFF8
 22310                           tblptrh	equ	0xFF7
 22311                           tblptrl	equ	0xFF6
 22312                           tablat	equ	0xFF5
 22313                           prodh	equ	0xFF4
 22314                           prodl	equ	0xFF3
 22315                           intcon	equ	0xFF2
 22316                           intcon3	equ	0xFF0
 22317                           indf0	equ	0xFEF
 22318                           postinc0	equ	0xFEE
 22319                           fsr0h	equ	0xFEA
 22320                           fsr0l	equ	0xFE9
 22321                           wreg	equ	0xFE8
 22322                           indf1	equ	0xFE7
 22323                           postdec1	equ	0xFE5
 22324                           fsr1h	equ	0xFE2
 22325                           fsr1l	equ	0xFE1
 22326                           indf2	equ	0xFDF
 22327                           postinc2	equ	0xFDE
 22328                           fsr2h	equ	0xFDA
 22329                           fsr2l	equ	0xFD9
 22330                           status	equ	0xFD8
 22331                           
 22332 ;; *************** function _oled_writeData *****************
 22333 ;; Defined at:
 22334 ;;		line 465 in file "../Includes/Drivers/SSD1306oLED.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;  data            1    wreg     unsigned char 
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;  data            1    0[BANK0 ] unsigned char 
 22339 ;; Return value:  Size  Location     Type
 22340 ;;                  1    wreg      void 
 22341 ;; Registers used:
 22342 ;;		wreg
 22343 ;; Tracked objects:
 22344 ;;		On entry : 0/0
 22345 ;;		On exit  : 0/0
 22346 ;;		Unchanged: 0/0
 22347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22348 ;;      Params:         0       0       0       0       0       0       0       0       0
 22349 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22351 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22352 ;;Total ram usage:        1 bytes
 22353 ;; Hardware stack levels used:    1
 22354 ;; Hardware stack levels required when called:   11
 22355 ;; This function calls:
 22356 ;;		Nothing
 22357 ;; This function is called by:
 22358 ;;		_oled_putChar
 22359 ;; This function uses a non-reentrant model
 22360 ;;
 22361                           
 22362                           	psect	text79
 22363  0062F0                     __ptext79:
 22364                           	opt stack 0
 22365  0062F0                     _oled_writeData:
 22366                           	opt stack 15
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;incstack = 0
 22370                           ;oled_writeData@data stored from wreg
 22371  0062F0  0100               	movlb	0	; () banked
 22372  0062F2  6F60               	movwf	oled_writeData@data& (0+255),b
 22373                           
 22374                           ;SSD1306oLED.c: 467: LATBbits.LATB4=0;
 22375  0062F4  988A               	bcf	3978,4,c	;volatile
 22376                           
 22377                           ;SSD1306oLED.c: 468: LATCbits.LATC0=1;
 22378  0062F6  808B               	bsf	3979,0,c	;volatile
 22379                           
 22380                           ;SSD1306oLED.c: 469: LATD=data;
 22381  0062F8  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 22382                           
 22383                           ;SSD1306oLED.c: 470: LATCbits.LATC1=0;
 22384  0062FC  928B               	bcf	3979,1,c	;volatile
 22385                           
 22386                           ;SSD1306oLED.c: 471: __nop();
 22387  0062FE  F000               	nop	
 22388                           
 22389                           ;SSD1306oLED.c: 472: LATCbits.LATC1=1;
 22390  006300  828B               	bsf	3979,1,c	;volatile
 22391                           
 22392                           ;SSD1306oLED.c: 473: LATBbits.LATB4=1;
 22393  006302  888A               	bsf	3978,4,c	;volatile
 22394  006304  0012               	return	
 22395  006306                     __end_of_oled_writeData:
 22396                           	opt stack 0
 22397                           tblptru	equ	0xFF8
 22398                           tblptrh	equ	0xFF7
 22399                           tblptrl	equ	0xFF6
 22400                           tablat	equ	0xFF5
 22401                           prodh	equ	0xFF4
 22402                           prodl	equ	0xFF3
 22403                           intcon	equ	0xFF2
 22404                           intcon3	equ	0xFF0
 22405                           indf0	equ	0xFEF
 22406                           postinc0	equ	0xFEE
 22407                           fsr0h	equ	0xFEA
 22408                           fsr0l	equ	0xFE9
 22409                           wreg	equ	0xFE8
 22410                           indf1	equ	0xFE7
 22411                           postdec1	equ	0xFE5
 22412                           fsr1h	equ	0xFE2
 22413                           fsr1l	equ	0xFE1
 22414                           indf2	equ	0xFDF
 22415                           postinc2	equ	0xFDE
 22416                           fsr2h	equ	0xFDA
 22417                           fsr2l	equ	0xFD9
 22418                           status	equ	0xFD8
 22419                           
 22420 ;; *************** function _Set_Page_Address *****************
 22421 ;; Defined at:
 22422 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;  address         1    wreg     unsigned char 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;  address         1    1[BANK0 ] unsigned char 
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1    wreg      void 
 22429 ;; Registers used:
 22430 ;;		wreg, status,2, status,0, cstack
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22436 ;;      Params:         0       0       0       0       0       0       0       0       0
 22437 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22439 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22440 ;;Total ram usage:        1 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:   12
 22443 ;; This function calls:
 22444 ;;		_oled_writeCommand
 22445 ;; This function is called by:
 22446 ;;		_oled_putChar
 22447 ;; This function uses a non-reentrant model
 22448 ;;
 22449                           
 22450                           	psect	text80
 22451  006370                     __ptext80:
 22452                           	opt stack 0
 22453  006370                     _Set_Page_Address:
 22454                           	opt stack 14
 22455                           
 22456                           ;incstack = 0
 22457                           ;Set_Page_Address@address stored from wreg
 22458  006370  0100               	movlb	0	; () banked
 22459  006372  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22460                           
 22461                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 22462  006374  0100               	movlb	0	; () banked
 22463  006376  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22464  006378  09B0               	iorlw	176
 22465  00637A  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 22469  00637C  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22470  00637E  EC83  F031         	call	_oled_writeCommand
 22471  006382  0012               	return	
 22472  006384                     __end_of_Set_Page_Address:
 22473                           	opt stack 0
 22474                           tblptru	equ	0xFF8
 22475                           tblptrh	equ	0xFF7
 22476                           tblptrl	equ	0xFF6
 22477                           tablat	equ	0xFF5
 22478                           prodh	equ	0xFF4
 22479                           prodl	equ	0xFF3
 22480                           intcon	equ	0xFF2
 22481                           intcon3	equ	0xFF0
 22482                           indf0	equ	0xFEF
 22483                           postinc0	equ	0xFEE
 22484                           fsr0h	equ	0xFEA
 22485                           fsr0l	equ	0xFE9
 22486                           wreg	equ	0xFE8
 22487                           indf1	equ	0xFE7
 22488                           postdec1	equ	0xFE5
 22489                           fsr1h	equ	0xFE2
 22490                           fsr1l	equ	0xFE1
 22491                           indf2	equ	0xFDF
 22492                           postinc2	equ	0xFDE
 22493                           fsr2h	equ	0xFDA
 22494                           fsr2l	equ	0xFD9
 22495                           status	equ	0xFD8
 22496                           
 22497 ;; *************** function _Set_Column_Address *****************
 22498 ;; Defined at:
 22499 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 22500 ;; Parameters:    Size  Location     Type
 22501 ;;  address         1    wreg     unsigned char 
 22502 ;; Auto vars:     Size  Location     Type
 22503 ;;  address         1    1[BANK0 ] unsigned char 
 22504 ;; Return value:  Size  Location     Type
 22505 ;;                  1    wreg      void 
 22506 ;; Registers used:
 22507 ;;		wreg, status,2, status,0, cstack
 22508 ;; Tracked objects:
 22509 ;;		On entry : 0/0
 22510 ;;		On exit  : 0/0
 22511 ;;		Unchanged: 0/0
 22512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22513 ;;      Params:         0       0       0       0       0       0       0       0       0
 22514 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22515 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22516 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22517 ;;Total ram usage:        1 bytes
 22518 ;; Hardware stack levels used:    1
 22519 ;; Hardware stack levels required when called:   12
 22520 ;; This function calls:
 22521 ;;		_oled_writeCommand
 22522 ;; This function is called by:
 22523 ;;		_oled_putChar
 22524 ;; This function uses a non-reentrant model
 22525 ;;
 22526                           
 22527                           	psect	text81
 22528  0062A0                     __ptext81:
 22529                           	opt stack 0
 22530  0062A0                     _Set_Column_Address:
 22531                           	opt stack 14
 22532                           
 22533                           ;incstack = 0
 22534                           ;Set_Column_Address@address stored from wreg
 22535  0062A0  0100               	movlb	0	; () banked
 22536  0062A2  6F61               	movwf	Set_Column_Address@address& (0+255),b
 22537                           
 22538                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 22539  0062A4  0100               	movlb	0	; () banked
 22540  0062A6  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 22541  0062A8  0B0F               	andlw	15
 22542  0062AA  0910               	iorlw	16
 22543  0062AC  EC83  F031         	call	_oled_writeCommand
 22544                           
 22545                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 22546  0062B0  0100               	movlb	0	; () banked
 22547  0062B2  5161               	movf	Set_Column_Address@address& (0+255),w,b
 22548  0062B4  0B0F               	andlw	15
 22549  0062B6  EC83  F031         	call	_oled_writeCommand
 22550  0062BA  0012               	return	
 22551  0062BC                     __end_of_Set_Column_Address:
 22552                           	opt stack 0
 22553                           tblptru	equ	0xFF8
 22554                           tblptrh	equ	0xFF7
 22555                           tblptrl	equ	0xFF6
 22556                           tablat	equ	0xFF5
 22557                           prodh	equ	0xFF4
 22558                           prodl	equ	0xFF3
 22559                           intcon	equ	0xFF2
 22560                           intcon3	equ	0xFF0
 22561                           indf0	equ	0xFEF
 22562                           postinc0	equ	0xFEE
 22563                           fsr0h	equ	0xFEA
 22564                           fsr0l	equ	0xFE9
 22565                           wreg	equ	0xFE8
 22566                           indf1	equ	0xFE7
 22567                           postdec1	equ	0xFE5
 22568                           fsr1h	equ	0xFE2
 22569                           fsr1l	equ	0xFE1
 22570                           indf2	equ	0xFDF
 22571                           postinc2	equ	0xFDE
 22572                           fsr2h	equ	0xFDA
 22573                           fsr2l	equ	0xFD9
 22574                           status	equ	0xFD8
 22575                           
 22576 ;; *************** function _oled_writeCommand *****************
 22577 ;; Defined at:
 22578 ;;		line 453 in file "../Includes/Drivers/SSD1306oLED.c"
 22579 ;; Parameters:    Size  Location     Type
 22580 ;;  command         1    wreg     unsigned char 
 22581 ;; Auto vars:     Size  Location     Type
 22582 ;;  command         1    0[BANK0 ] unsigned char 
 22583 ;; Return value:  Size  Location     Type
 22584 ;;                  1    wreg      void 
 22585 ;; Registers used:
 22586 ;;		wreg
 22587 ;; Tracked objects:
 22588 ;;		On entry : 0/0
 22589 ;;		On exit  : 0/0
 22590 ;;		Unchanged: 0/0
 22591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22592 ;;      Params:         0       0       0       0       0       0       0       0       0
 22593 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22595 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22596 ;;Total ram usage:        1 bytes
 22597 ;; Hardware stack levels used:    1
 22598 ;; Hardware stack levels required when called:   11
 22599 ;; This function calls:
 22600 ;;		Nothing
 22601 ;; This function is called by:
 22602 ;;		_Set_Page_Address
 22603 ;;		_Set_Column_Address
 22604 ;;		_oled_devInit
 22605 ;;		_oled_setDisplay
 22606 ;;		_oled_displayOff
 22607 ;;		_oled_setContrastControlRegister
 22608 ;;		_oled_initialDispayLine
 22609 ;;		_oled_powerControl
 22610 ;;		_oled_regulorResistorSelect
 22611 ;; This function uses a non-reentrant model
 22612 ;;
 22613                           
 22614                           	psect	text82
 22615  006306                     __ptext82:
 22616                           	opt stack 0
 22617  006306                     _oled_writeCommand:
 22618                           	opt stack 14
 22619                           
 22620                           ;incstack = 0
 22621                           ;oled_writeCommand@command stored from wreg
 22622  006306  0100               	movlb	0	; () banked
 22623  006308  6F60               	movwf	oled_writeCommand@command& (0+255),b
 22624                           
 22625                           ;SSD1306oLED.c: 455: LATBbits.LATB4=0;
 22626  00630A  988A               	bcf	3978,4,c	;volatile
 22627                           
 22628                           ;SSD1306oLED.c: 456: LATCbits.LATC0=0;
 22629  00630C  908B               	bcf	3979,0,c	;volatile
 22630                           
 22631                           ;SSD1306oLED.c: 457: LATD=command;
 22632  00630E  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 22633                           
 22634                           ;SSD1306oLED.c: 458: LATCbits.LATC1=0;
 22635  006312  928B               	bcf	3979,1,c	;volatile
 22636                           
 22637                           ;SSD1306oLED.c: 459: __nop();
 22638  006314  F000               	nop	
 22639                           
 22640                           ;SSD1306oLED.c: 460: LATCbits.LATC1=1;
 22641  006316  828B               	bsf	3979,1,c	;volatile
 22642                           
 22643                           ;SSD1306oLED.c: 461: LATBbits.LATB4=1;
 22644  006318  888A               	bsf	3978,4,c	;volatile
 22645  00631A  0012               	return	
 22646  00631C                     __end_of_oled_writeCommand:
 22647                           	opt stack 0
 22648                           tblptru	equ	0xFF8
 22649                           tblptrh	equ	0xFF7
 22650                           tblptrl	equ	0xFF6
 22651                           tablat	equ	0xFF5
 22652                           prodh	equ	0xFF4
 22653                           prodl	equ	0xFF3
 22654                           intcon	equ	0xFF2
 22655                           intcon3	equ	0xFF0
 22656                           indf0	equ	0xFEF
 22657                           postinc0	equ	0xFEE
 22658                           fsr0h	equ	0xFEA
 22659                           fsr0l	equ	0xFE9
 22660                           wreg	equ	0xFE8
 22661                           indf1	equ	0xFE7
 22662                           postdec1	equ	0xFE5
 22663                           fsr1h	equ	0xFE2
 22664                           fsr1l	equ	0xFE1
 22665                           indf2	equ	0xFDF
 22666                           postinc2	equ	0xFDE
 22667                           fsr2h	equ	0xFDA
 22668                           fsr2l	equ	0xFD9
 22669                           status	equ	0xFD8
 22670                           
 22671 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 22672 ;; Defined at:
 22673 ;;		line 162 in file "../Includes/Board/USBapp.c"
 22674 ;; Parameters:    Size  Location     Type
 22675 ;;		None
 22676 ;; Auto vars:     Size  Location     Type
 22677 ;;		None
 22678 ;; Return value:  Size  Location     Type
 22679 ;;                  1    wreg      void 
 22680 ;; Registers used:
 22681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22682 ;; Tracked objects:
 22683 ;;		On entry : 0/0
 22684 ;;		On exit  : 0/0
 22685 ;;		Unchanged: 0/0
 22686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22687 ;;      Params:         0       0       0       0       0       0       0       0       0
 22688 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22689 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22690 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22691 ;;Total ram usage:        1 bytes
 22692 ;; Hardware stack levels used:    1
 22693 ;; Hardware stack levels required when called:   13
 22694 ;; This function calls:
 22695 ;;		_CDCTxService
 22696 ;;		_EUSART_Read
 22697 ;;		_EUSART_Write
 22698 ;;		_MOTEapp_setResponseReady
 22699 ;;		_USBapp_getrxByteFlag
 22700 ;;		_getsUSBUSART
 22701 ;;		_putUSBUSART
 22702 ;; This function is called by:
 22703 ;;		_USBapp_Handler
 22704 ;; This function uses a non-reentrant model
 22705 ;;
 22706                           
 22707                           	psect	text83
 22708  003DB8                     __ptext83:
 22709                           	opt stack 0
 22710  003DB8                     _USBapp_DeviceCdcEmulatorHandler:
 22711                           	opt stack 16
 22712                           
 22713                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 22714                           
 22715                           ;incstack = 0
 22716  003DB8  0E1F               	movlw	31
 22717  003DBA  0100               	movlb	0	; () banked
 22718  003DBC  65EF               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 22719  003DBE  0012               	return	
 22720                           
 22721                           ; BSR set to: 0
 22722  003DC0  B260               	btfsc	3936,1,c	;volatile
 22723  003DC2  0012               	return	
 22724                           
 22725                           ; BSR set to: 0
 22726                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 22727                           
 22728                           ; BSR set to: 0
 22729                           
 22730                           ; BSR set to: 0
 22731                           ;USBapp.c: 166: return;
 22732  003DC4  51EB               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 22733  003DC6  A4D8               	btfss	status,2,c
 22734  003DC8  D011               	goto	l959
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;USBapp.c: 169: {
 22738                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 22739  003DCA  0E80               	movlw	low _USB_Buffer
 22740  003DCC  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 22741  003DCE  0E02               	movlw	high _USB_Buffer
 22742  003DD0  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 22743  003DD2  0E40               	movlw	64
 22744  003DD4  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22745  003DD6  EC0F  F024         	call	_getsUSBUSART	;wreg free
 22746  003DDA  0100               	movlb	0	; () banked
 22747  003DDC  6FEA               	movwf	_LastRS232Out& (0+255),b
 22748                           
 22749                           ; BSR set to: 0
 22750                           ;USBapp.c: 171: if(LastRS232Out > 0)
 22751  003DDE  51EA               	movf	_LastRS232Out& (0+255),w,b
 22752  003DE0  B4D8               	btfsc	status,2,c
 22753  003DE2  D004               	goto	l959
 22754                           
 22755                           ; BSR set to: 0
 22756                           ;USBapp.c: 172: {
 22757                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 22758  003DE4  0E01               	movlw	1
 22759  003DE6  6FEB               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 22760                           
 22761                           ;USBapp.c: 174: RS232cp = 0;
 22762  003DE8  0E00               	movlw	0
 22763  003DEA  6FE9               	movwf	_RS232cp& (0+255),b
 22764  003DEC                     l959:
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;USBapp.c: 175: }
 22768                           ;USBapp.c: 176: }
 22769                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 22770                           
 22771                           ; BSR set to: 0
 22772  003DEC  51EB               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 22773  003DEE  A4D8               	btfss	status,2,c
 22774                           
 22775                           ; BSR set to: 0
 22776  003DF0  A2AC               	btfss	4012,1,c	;volatile
 22777  003DF2  D013               	goto	l961
 22778                           
 22779                           ; BSR set to: 0
 22780                           ;USBapp.c: 180: {
 22781                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 22782  003DF4  51E9               	movf	_RS232cp& (0+255),w,b
 22783  003DF6  0D01               	mullw	1
 22784  003DF8  0E80               	movlw	low _USB_Buffer
 22785  003DFA  24F3               	addwf	prodl,w,c
 22786  003DFC  6ED9               	movwf	fsr2l,c
 22787  003DFE  0E02               	movlw	high _USB_Buffer
 22788  003E00  20F4               	addwfc	prodh,w,c
 22789  003E02  6EDA               	movwf	fsr2h,c
 22790  003E04  50DF               	movf	indf2,w,c
 22791  003E06  EC50  F02E         	call	_EUSART_Write
 22792                           
 22793                           ;USBapp.c: 183: ++RS232cp;
 22794  003E0A  0100               	movlb	0	; () banked
 22795  003E0C  2BE9               	incf	_RS232cp& (0+255),f,b
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 22799  003E0E  51EA               	movf	_LastRS232Out& (0+255),w,b
 22800  003E10  19E9               	xorwf	_RS232cp& (0+255),w,b
 22801  003E12  A4D8               	btfss	status,2,c
 22802  003E14  D002               	goto	l961
 22803                           
 22804                           ; BSR set to: 0
 22805                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 22806  003E16  0E00               	movlw	0
 22807  003E18  6FEB               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 22808  003E1A                     l961:
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;USBapp.c: 186: }
 22812                           ;USBapp.c: 189: if ((eusartRxCount))
 22813                           
 22814                           ; BSR set to: 0
 22815  003E1A  51F7               	movf	_eusartRxCount& (0+255),w,b	;volatile
 22816  003E1C  B4D8               	btfsc	status,2,c
 22817  003E1E  D025               	goto	l963
 22818                           
 22819                           ; BSR set to: 0
 22820                           ;USBapp.c: 190: {
 22821                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 22822  003E20  EC46  F032         	call	_USBapp_getrxByteFlag	;wreg free
 22823  003E24  0900               	iorlw	0
 22824  003E26  B4D8               	btfsc	status,2,c
 22825  003E28  D020               	goto	l963
 22826  003E2A  0E3F               	movlw	63
 22827  003E2C  0100               	movlb	0	; () banked
 22828  003E2E  61EC               	cpfslt	_NextUSBOut& (0+255),b
 22829  003E30  D01C               	goto	l963
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;USBapp.c: 192: {
 22833                           ;USBapp.c: 193: __nop();
 22834  003E32  F000               	nop	
 22835                           
 22836                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 22837  003E34  ECCA  F02E         	call	_EUSART_Read	;wreg free
 22838  003E38  0100               	movlb	0	; () banked
 22839  003E3A  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 22840  003E3C  51EC               	movf	_NextUSBOut& (0+255),w,b
 22841  003E3E  0D01               	mullw	1
 22842  003E40  0E80               	movlw	low _USB_Buffer
 22843  003E42  24F3               	addwf	prodl,w,c
 22844  003E44  6ED9               	movwf	fsr2l,c
 22845  003E46  0E02               	movlw	high _USB_Buffer
 22846  003E48  20F4               	addwfc	prodh,w,c
 22847  003E4A  6EDA               	movwf	fsr2h,c
 22848  003E4C  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 22849                           
 22850                           ; BSR set to: 0
 22851                           ;USBapp.c: 195: ++NextUSBOut;
 22852  003E50  2BEC               	incf	_NextUSBOut& (0+255),f,b
 22853                           
 22854                           ; BSR set to: 0
 22855                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 22856  003E52  51EC               	movf	_NextUSBOut& (0+255),w,b
 22857  003E54  0D01               	mullw	1
 22858  003E56  0E80               	movlw	low _USB_Buffer
 22859  003E58  24F3               	addwf	prodl,w,c
 22860  003E5A  6ED9               	movwf	fsr2l,c
 22861  003E5C  0E02               	movlw	high _USB_Buffer
 22862  003E5E  20F4               	addwfc	prodh,w,c
 22863  003E60  6EDA               	movwf	fsr2h,c
 22864  003E62  0E00               	movlw	0
 22865  003E64  6EDF               	movwf	indf2,c
 22866                           
 22867                           ; BSR set to: 0
 22868                           ;USBapp.c: 197: rxByteFlag = 0;
 22869  003E66  0E00               	movlw	0
 22870  003E68  6FED               	movwf	_rxByteFlag& (0+255),b	;volatile
 22871  003E6A                     l963:
 22872                           
 22873                           ;USBapp.c: 198: }
 22874                           ;USBapp.c: 199: }
 22875                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 22876                           
 22877                           ; BSR set to: 0
 22878                           
 22879                           ; BSR set to: 0
 22880  003E6A  0100               	movlb	0	; () banked
 22881  003E6C  51EE               	movf	_cdc_trf_state& (0+255),w,b
 22882  003E6E  A4D8               	btfss	status,2,c
 22883  003E70  D010               	goto	l964
 22884                           
 22885                           ; BSR set to: 0
 22886  003E72  51EC               	movf	_NextUSBOut& (0+255),w,b
 22887  003E74  B4D8               	btfsc	status,2,c
 22888  003E76  D00D               	goto	l964
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;USBapp.c: 204: {
 22892                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 22893  003E78  0E80               	movlw	low _USB_Buffer
 22894  003E7A  6F60               	movwf	putUSBUSART@data& (0+255),b
 22895  003E7C  0E02               	movlw	high _USB_Buffer
 22896  003E7E  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 22897  003E80  C0EC  F062         	movff	_NextUSBOut,putUSBUSART@length
 22898  003E84  ECEE  F030         	call	_putUSBUSART	;wreg free
 22899                           
 22900                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 22901  003E88  EC38  F032         	call	_MOTEapp_setResponseReady	;wreg free
 22902                           
 22903                           ;USBapp.c: 207: NextUSBOut = 0;
 22904  003E8C  0E00               	movlw	0
 22905  003E8E  0100               	movlb	0	; () banked
 22906  003E90  6FEC               	movwf	_NextUSBOut& (0+255),b
 22907  003E92                     l964:
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;USBapp.c: 208: }
 22911                           ;USBapp.c: 210: CDCTxService();
 22912                           
 22913                           ; BSR set to: 0
 22914  003E92  ECDD  F016         	call	_CDCTxService	;wreg free
 22915  003E96  0012               	return		;funcret
 22916  003E98                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 22917                           	opt stack 0
 22918                           tblptru	equ	0xFF8
 22919                           tblptrh	equ	0xFF7
 22920                           tblptrl	equ	0xFF6
 22921                           tablat	equ	0xFF5
 22922                           prodh	equ	0xFF4
 22923                           prodl	equ	0xFF3
 22924                           intcon	equ	0xFF2
 22925                           intcon3	equ	0xFF0
 22926                           indf0	equ	0xFEF
 22927                           postinc0	equ	0xFEE
 22928                           fsr0h	equ	0xFEA
 22929                           fsr0l	equ	0xFE9
 22930                           wreg	equ	0xFE8
 22931                           indf1	equ	0xFE7
 22932                           postdec1	equ	0xFE5
 22933                           fsr1h	equ	0xFE2
 22934                           fsr1l	equ	0xFE1
 22935                           indf2	equ	0xFDF
 22936                           postinc2	equ	0xFDE
 22937                           fsr2h	equ	0xFDA
 22938                           fsr2l	equ	0xFD9
 22939                           status	equ	0xFD8
 22940                           
 22941 ;; *************** function _putUSBUSART *****************
 22942 ;; Defined at:
 22943 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  data            2    0[BANK0 ] PTR unsigned char 
 22946 ;;		 -> USB_Buffer(64), 
 22947 ;;  length          1    2[BANK0 ] unsigned char 
 22948 ;; Auto vars:     Size  Location     Type
 22949 ;;		None
 22950 ;; Return value:  Size  Location     Type
 22951 ;;                  1    wreg      void 
 22952 ;; Registers used:
 22953 ;;		wreg, status,2, status,0
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/0
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22959 ;;      Params:         0       3       0       0       0       0       0       0       0
 22960 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22962 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22963 ;;Total ram usage:        3 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; Hardware stack levels required when called:   11
 22966 ;; This function calls:
 22967 ;;		Nothing
 22968 ;; This function is called by:
 22969 ;;		_USBapp_DeviceCdcEmulatorHandler
 22970 ;; This function uses a non-reentrant model
 22971 ;;
 22972                           
 22973                           	psect	text84
 22974  0061DC                     __ptext84:
 22975                           	opt stack 0
 22976  0061DC                     _putUSBUSART:
 22977                           	opt stack 17
 22978                           
 22979                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 22980                           
 22981                           ;incstack = 0
 22982  0061DC  94A3               	bcf	4003,2,c	;volatile
 22983                           
 22984                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 22985  0061DE  0100               	movlb	0	; () banked
 22986  0061E0  51EE               	movf	_cdc_trf_state& (0+255),w,b
 22987  0061E2  A4D8               	btfss	status,2,c
 22988  0061E4  D00A               	goto	l2297
 22989                           
 22990                           ; BSR set to: 0
 22991                           ;usb_device_cdc.c: 530: {
 22992                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 22993  0061E6  C060  F111         	movff	putUSBUSART@data,_pCDCSrc
 22994  0061EA  C061  F112         	movff	putUSBUSART@data+1,_pCDCSrc+1
 22995                           
 22996                           ; BSR set to: 0
 22997  0061EE  C062  F0E0         	movff	putUSBUSART@length,_cdc_tx_len
 22998                           
 22999                           ; BSR set to: 0
 23000  0061F2  0E01               	movlw	1
 23001  0061F4  6E3E               	movwf	_cdc_mem_type,c
 23002                           
 23003                           ; BSR set to: 0
 23004  0061F6  0E01               	movlw	1
 23005  0061F8  6FEE               	movwf	_cdc_trf_state& (0+255),b
 23006  0061FA                     l2297:
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;usb_device_cdc.c: 532: }
 23010                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 23011                           
 23012                           ; BSR set to: 0
 23013  0061FA  84A3               	bsf	4003,2,c	;volatile
 23014                           
 23015                           ; BSR set to: 0
 23016  0061FC  0012               	return		;funcret
 23017  0061FE                     __end_of_putUSBUSART:
 23018                           	opt stack 0
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           intcon3	equ	0xFF0
 23027                           indf0	equ	0xFEF
 23028                           postinc0	equ	0xFEE
 23029                           fsr0h	equ	0xFEA
 23030                           fsr0l	equ	0xFE9
 23031                           wreg	equ	0xFE8
 23032                           indf1	equ	0xFE7
 23033                           postdec1	equ	0xFE5
 23034                           fsr1h	equ	0xFE2
 23035                           fsr1l	equ	0xFE1
 23036                           indf2	equ	0xFDF
 23037                           postinc2	equ	0xFDE
 23038                           fsr2h	equ	0xFDA
 23039                           fsr2l	equ	0xFD9
 23040                           status	equ	0xFD8
 23041                           
 23042 ;; *************** function _getsUSBUSART *****************
 23043 ;; Defined at:
 23044 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23045 ;; Parameters:    Size  Location     Type
 23046 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 23047 ;;		 -> USB_Buffer(64), 
 23048 ;;  len             1    9[BANK0 ] unsigned char 
 23049 ;; Auto vars:     Size  Location     Type
 23050 ;;		None
 23051 ;; Return value:  Size  Location     Type
 23052 ;;                  1    wreg      unsigned char 
 23053 ;; Registers used:
 23054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23055 ;; Tracked objects:
 23056 ;;		On entry : 0/0
 23057 ;;		On exit  : 0/0
 23058 ;;		Unchanged: 0/0
 23059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23060 ;;      Params:         0       3       0       0       0       0       0       0       0
 23061 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23062 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23063 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23064 ;;Total ram usage:        6 bytes
 23065 ;; Hardware stack levels used:    1
 23066 ;; Hardware stack levels required when called:   12
 23067 ;; This function calls:
 23068 ;;		_USBTransferOnePacket
 23069 ;; This function is called by:
 23070 ;;		_USBapp_DeviceCdcEmulatorHandler
 23071 ;; This function uses a non-reentrant model
 23072 ;;
 23073                           
 23074                           	psect	text85
 23075  00481E                     __ptext85:
 23076                           	opt stack 0
 23077  00481E                     _getsUSBUSART:
 23078                           	opt stack 16
 23079                           
 23080                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;incstack = 0
 23084  00481E  0E00               	movlw	0
 23085  004820  0100               	movlb	0	; () banked
 23086  004822  6FE1               	movwf	_cdc_rx_len& (0+255),b
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 23090  004824  51DA               	movf	_CDCDataOutHandle& (0+255),w,b
 23091  004826  11DB               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 23092  004828  B4D8               	btfsc	status,2,c
 23093  00482A  D00F               	goto	l2287
 23094                           
 23095                           ; BSR set to: 0
 23096  00482C  C0DA  FFD9         	movff	_CDCDataOutHandle,fsr2l
 23097  004830  C0DB  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 23098  004834  AEDF               	btfss	indf2,7,c
 23099  004836  D003               	goto	u8740
 23100  004838  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23101  00483A  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 23102  00483C  D002               	goto	u8748
 23103  00483E                     u8740:
 23104  00483E  0100               	movlb	0	; () banked
 23105  004840  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23106  004842                     u8748:
 23107  004842  516A               	movf	??_getsUSBUSART& (0+255),w,b
 23108  004844  6F6B               	movwf	_getsUSBUSART$6682& (0+255),b
 23109  004846  6B6C               	clrf	(_getsUSBUSART$6682+1)& (0+255),b
 23110  004848  D004               	goto	l2289
 23111  00484A                     l2287:
 23112                           
 23113                           ; BSR set to: 0
 23114                           
 23115                           ; BSR set to: 0
 23116  00484A  0E00               	movlw	0
 23117  00484C  6F6C               	movwf	(_getsUSBUSART$6682+1)& (0+255),b
 23118  00484E  0E00               	movlw	0
 23119  004850  6F6B               	movwf	_getsUSBUSART$6682& (0+255),b
 23120  004852                     l2289:
 23121                           
 23122                           ; BSR set to: 0
 23123                           
 23124                           ; BSR set to: 0
 23125  004852  516B               	movf	_getsUSBUSART$6682& (0+255),w,b
 23126  004854  116C               	iorwf	(_getsUSBUSART$6682+1)& (0+255),w,b
 23127  004856  A4D8               	btfss	status,2,c
 23128  004858  D03B               	goto	l2285
 23129                           
 23130                           ; BSR set to: 0
 23131                           ;usb_device_cdc.c: 437: {
 23132                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 23133  00485A  EE20 F001          	lfsr	2,1
 23134  00485E  51DA               	movf	_CDCDataOutHandle& (0+255),w,b
 23135  004860  26D9               	addwf	fsr2l,f,c
 23136  004862  51DB               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23137  004864  22DA               	addwfc	fsr2h,f,c
 23138  004866  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23139  004868  5CDE               	subwf	postinc2,w,c
 23140  00486A  B0D8               	btfsc	status,0,c
 23141  00486C  D008               	goto	l2290
 23142                           
 23143                           ; BSR set to: 0
 23144                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 23145  00486E  EE20 F001          	lfsr	2,1
 23146  004872  51DA               	movf	_CDCDataOutHandle& (0+255),w,b
 23147  004874  26D9               	addwf	fsr2l,f,c
 23148  004876  51DB               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23149  004878  22DA               	addwfc	fsr2h,f,c
 23150  00487A  50DF               	movf	indf2,w,c
 23151  00487C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 23152  00487E                     l2290:
 23153                           
 23154                           ; BSR set to: 0
 23155                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 23156                           
 23157                           ; BSR set to: 0
 23158  00487E  0E00               	movlw	0
 23159  004880  6FE1               	movwf	_cdc_rx_len& (0+255),b
 23160  004882  D013               	goto	l2291
 23161  004884                     
 23162                           ; BSR set to: 0
 23163                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 23164                           
 23165                           ; BSR set to: 0
 23166  004884  51E1               	movf	_cdc_rx_len& (0+255),w,b
 23167  004886  0D01               	mullw	1
 23168  004888  0E40               	movlw	64
 23169  00488A  24F3               	addwf	prodl,w,c
 23170  00488C  6ED9               	movwf	fsr2l,c
 23171  00488E  0E05               	movlw	5
 23172  004890  20F4               	addwfc	prodh,w,c
 23173  004892  6EDA               	movwf	fsr2h,c
 23174  004894  51E1               	movf	_cdc_rx_len& (0+255),w,b
 23175  004896  0D01               	mullw	1
 23176  004898  50F3               	movf	prodl,w,c
 23177  00489A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 23178  00489C  6EE1               	movwf	fsr1l,c
 23179  00489E  50F4               	movf	prodh,w,c
 23180  0048A0  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 23181  0048A2  6EE2               	movwf	fsr1h,c
 23182  0048A4  CFDF FFE7          	movff	indf2,indf1
 23183                           
 23184                           ; BSR set to: 0
 23185  0048A8  2BE1               	incf	_cdc_rx_len& (0+255),f,b
 23186  0048AA                     l2291:
 23187                           
 23188                           ; BSR set to: 0
 23189                           
 23190                           ; BSR set to: 0
 23191  0048AA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23192  0048AC  5DE1               	subwf	_cdc_rx_len& (0+255),w,b
 23193  0048AE  A0D8               	btfss	status,0,c
 23194  0048B0  D7E9               	goto	l2292
 23195                           
 23196                           ; BSR set to: 0
 23197                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23198                           
 23199                           ; BSR set to: 0
 23200  0048B2  0E00               	movlw	0
 23201  0048B4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23202  0048B6  0E40               	movlw	64
 23203  0048B8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23204  0048BA  0E05               	movlw	5
 23205  0048BC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23206  0048BE  0E40               	movlw	64
 23207  0048C0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23208  0048C2  0E02               	movlw	2
 23209  0048C4  EC53  F023         	call	_USBTransferOnePacket
 23210  0048C8  C060  F0DA         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 23211  0048CC  C061  F0DB         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23212  0048D0                     l2285:
 23213                           
 23214                           ;usb_device_cdc.c: 457: }
 23215                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 23216  0048D0  0100               	movlb	0	; () banked
 23217  0048D2  51E1               	movf	_cdc_rx_len& (0+255),w,b
 23218  0048D4  0012               	return	
 23219  0048D6                     __end_of_getsUSBUSART:
 23220                           	opt stack 0
 23221                           tblptru	equ	0xFF8
 23222                           tblptrh	equ	0xFF7
 23223                           tblptrl	equ	0xFF6
 23224                           tablat	equ	0xFF5
 23225                           prodh	equ	0xFF4
 23226                           prodl	equ	0xFF3
 23227                           intcon	equ	0xFF2
 23228                           intcon3	equ	0xFF0
 23229                           indf0	equ	0xFEF
 23230                           postinc0	equ	0xFEE
 23231                           fsr0h	equ	0xFEA
 23232                           fsr0l	equ	0xFE9
 23233                           wreg	equ	0xFE8
 23234                           indf1	equ	0xFE7
 23235                           postdec1	equ	0xFE5
 23236                           fsr1h	equ	0xFE2
 23237                           fsr1l	equ	0xFE1
 23238                           indf2	equ	0xFDF
 23239                           postinc2	equ	0xFDE
 23240                           fsr2h	equ	0xFDA
 23241                           fsr2l	equ	0xFD9
 23242                           status	equ	0xFD8
 23243                           
 23244 ;; *************** function _USBapp_getrxByteFlag *****************
 23245 ;; Defined at:
 23246 ;;		line 268 in file "../Includes/Board/USBapp.c"
 23247 ;; Parameters:    Size  Location     Type
 23248 ;;		None
 23249 ;; Auto vars:     Size  Location     Type
 23250 ;;		None
 23251 ;; Return value:  Size  Location     Type
 23252 ;;                  1    wreg      unsigned char 
 23253 ;; Registers used:
 23254 ;;		wreg, status,2
 23255 ;; Tracked objects:
 23256 ;;		On entry : 0/0
 23257 ;;		On exit  : 0/0
 23258 ;;		Unchanged: 0/0
 23259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23260 ;;      Params:         0       0       0       0       0       0       0       0       0
 23261 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23263 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23264 ;;Total ram usage:        0 bytes
 23265 ;; Hardware stack levels used:    1
 23266 ;; Hardware stack levels required when called:   11
 23267 ;; This function calls:
 23268 ;;		Nothing
 23269 ;; This function is called by:
 23270 ;;		_USBapp_DeviceCdcEmulatorHandler
 23271 ;; This function uses a non-reentrant model
 23272 ;;
 23273                           
 23274                           	psect	text86
 23275  00648C                     __ptext86:
 23276                           	opt stack 0
 23277  00648C                     _USBapp_getrxByteFlag:
 23278                           	opt stack 17
 23279                           
 23280                           ;USBapp.c: 270: return rxByteFlag;
 23281                           
 23282                           ; BSR set to: 0
 23283                           ;incstack = 0
 23284  00648C  0100               	movlb	0	; () banked
 23285  00648E  51ED               	movf	_rxByteFlag& (0+255),w,b	;volatile
 23286  006490  0012               	return	
 23287  006492                     __end_of_USBapp_getrxByteFlag:
 23288                           	opt stack 0
 23289                           tblptru	equ	0xFF8
 23290                           tblptrh	equ	0xFF7
 23291                           tblptrl	equ	0xFF6
 23292                           tablat	equ	0xFF5
 23293                           prodh	equ	0xFF4
 23294                           prodl	equ	0xFF3
 23295                           intcon	equ	0xFF2
 23296                           intcon3	equ	0xFF0
 23297                           indf0	equ	0xFEF
 23298                           postinc0	equ	0xFEE
 23299                           fsr0h	equ	0xFEA
 23300                           fsr0l	equ	0xFE9
 23301                           wreg	equ	0xFE8
 23302                           indf1	equ	0xFE7
 23303                           postdec1	equ	0xFE5
 23304                           fsr1h	equ	0xFE2
 23305                           fsr1l	equ	0xFE1
 23306                           indf2	equ	0xFDF
 23307                           postinc2	equ	0xFDE
 23308                           fsr2h	equ	0xFDA
 23309                           fsr2l	equ	0xFD9
 23310                           status	equ	0xFD8
 23311                           
 23312 ;; *************** function _MOTEapp_setResponseReady *****************
 23313 ;; Defined at:
 23314 ;;		line 1188 in file "../Includes/Board/MOTEapp.c"
 23315 ;; Parameters:    Size  Location     Type
 23316 ;;		None
 23317 ;; Auto vars:     Size  Location     Type
 23318 ;;		None
 23319 ;; Return value:  Size  Location     Type
 23320 ;;                  1    wreg      void 
 23321 ;; Registers used:
 23322 ;;		wreg, status,2
 23323 ;; Tracked objects:
 23324 ;;		On entry : 0/0
 23325 ;;		On exit  : 0/0
 23326 ;;		Unchanged: 0/0
 23327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23328 ;;      Params:         0       0       0       0       0       0       0       0       0
 23329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23331 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23332 ;;Total ram usage:        0 bytes
 23333 ;; Hardware stack levels used:    1
 23334 ;; Hardware stack levels required when called:   11
 23335 ;; This function calls:
 23336 ;;		Nothing
 23337 ;; This function is called by:
 23338 ;;		_USBapp_DeviceCdcEmulatorHandler
 23339 ;; This function uses a non-reentrant model
 23340 ;;
 23341                           
 23342                           	psect	text87
 23343  006470                     __ptext87:
 23344                           	opt stack 0
 23345  006470                     _MOTEapp_setResponseReady:
 23346                           	opt stack 17
 23347                           
 23348                           ;MOTEapp.c: 1190: responseReady = 1;
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;incstack = 0
 23352  006470  0E01               	movlw	1
 23353  006472  0101               	movlb	1	; () banked
 23354  006474  6F28               	movwf	_responseReady& (0+255),b
 23355                           
 23356                           ; BSR set to: 1
 23357  006476  0012               	return		;funcret
 23358  006478                     __end_of_MOTEapp_setResponseReady:
 23359                           	opt stack 0
 23360                           tblptru	equ	0xFF8
 23361                           tblptrh	equ	0xFF7
 23362                           tblptrl	equ	0xFF6
 23363                           tablat	equ	0xFF5
 23364                           prodh	equ	0xFF4
 23365                           prodl	equ	0xFF3
 23366                           intcon	equ	0xFF2
 23367                           intcon3	equ	0xFF0
 23368                           indf0	equ	0xFEF
 23369                           postinc0	equ	0xFEE
 23370                           fsr0h	equ	0xFEA
 23371                           fsr0l	equ	0xFE9
 23372                           wreg	equ	0xFE8
 23373                           indf1	equ	0xFE7
 23374                           postdec1	equ	0xFE5
 23375                           fsr1h	equ	0xFE2
 23376                           fsr1l	equ	0xFE1
 23377                           indf2	equ	0xFDF
 23378                           postinc2	equ	0xFDE
 23379                           fsr2h	equ	0xFDA
 23380                           fsr2l	equ	0xFD9
 23381                           status	equ	0xFD8
 23382                           
 23383 ;; *************** function _EUSART_Write *****************
 23384 ;; Defined at:
 23385 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 23386 ;; Parameters:    Size  Location     Type
 23387 ;;  txData          1    wreg     unsigned char 
 23388 ;; Auto vars:     Size  Location     Type
 23389 ;;  txData          1    0[BANK0 ] unsigned char 
 23390 ;; Return value:  Size  Location     Type
 23391 ;;                  1    wreg      void 
 23392 ;; Registers used:
 23393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23394 ;; Tracked objects:
 23395 ;;		On entry : 0/0
 23396 ;;		On exit  : 0/0
 23397 ;;		Unchanged: 0/0
 23398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23399 ;;      Params:         0       0       0       0       0       0       0       0       0
 23400 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23401 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23402 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23403 ;;Total ram usage:        1 bytes
 23404 ;; Hardware stack levels used:    1
 23405 ;; Hardware stack levels required when called:   11
 23406 ;; This function calls:
 23407 ;;		Nothing
 23408 ;; This function is called by:
 23409 ;;		_EndLine
 23410 ;;		_sendCommand
 23411 ;;		_sendDataCommand
 23412 ;;		_USBapp_DeviceCdcEmulatorHandler
 23413 ;;		__sendDataCommand
 23414 ;; This function uses a non-reentrant model
 23415 ;;
 23416                           
 23417                           	psect	text88
 23418  005CA0                     __ptext88:
 23419                           	opt stack 0
 23420  005CA0                     _EUSART_Write:
 23421                           	opt stack 14
 23422                           
 23423                           ; BSR set to: 1
 23424                           ;incstack = 0
 23425                           ;EUSART_Write@txData stored from wreg
 23426  005CA0  0100               	movlb	0	; () banked
 23427  005CA2  6F60               	movwf	EUSART_Write@txData& (0+255),b
 23428  005CA4                     
 23429                           ;eusart.c: 142: {
 23430                           
 23431                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 23432  005CA4  0100               	movlb	0	; () banked
 23433  005CA6  51E4               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 23434  005CA8  B4D8               	btfsc	status,2,c
 23435  005CAA  D7FC               	goto	l8173
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;eusart.c: 143: }
 23439                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 23440  005CAC  B89D               	btfsc	3997,4,c	;volatile
 23441  005CAE  D003               	goto	l1331
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;eusart.c: 146: {
 23445                           ;eusart.c: 147: TXREG = txData;
 23446  005CB0  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 23447                           
 23448                           ;eusart.c: 148: }
 23449  005CB4  D012               	goto	l1332
 23450  005CB6                     l1331:
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;eusart.c: 149: else
 23454                           ;eusart.c: 150: {
 23455                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 23456  005CB6  989D               	bcf	3997,4,c	;volatile
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 23460  005CB8  51E6               	movf	_eusartTxHead& (0+255),w,b
 23461  005CBA  0D01               	mullw	1
 23462  005CBC  0E00               	movlw	low _eusartTxBuffer
 23463  005CBE  24F3               	addwf	prodl,w,c
 23464  005CC0  6ED9               	movwf	fsr2l,c
 23465  005CC2  0E03               	movlw	high _eusartTxBuffer
 23466  005CC4  20F4               	addwfc	prodh,w,c
 23467  005CC6  6EDA               	movwf	fsr2h,c
 23468  005CC8  C060  FFDF         	movff	EUSART_Write@txData,indf2
 23469                           
 23470                           ; BSR set to: 0
 23471  005CCC  2BE6               	incf	_eusartTxHead& (0+255),f,b
 23472                           
 23473                           ; BSR set to: 0
 23474                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 23475  005CCE  0E3F               	movlw	63
 23476  005CD0  65E6               	cpfsgt	_eusartTxHead& (0+255),b
 23477  005CD2  D002               	goto	l1333
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;eusart.c: 154: {
 23481                           ;eusart.c: 155: eusartTxHead = 0;
 23482  005CD4  0E00               	movlw	0
 23483  005CD6  6FE6               	movwf	_eusartTxHead& (0+255),b
 23484  005CD8                     l1333:
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;eusart.c: 156: }
 23488                           ;eusart.c: 157: eusartTxBufferRemaining--;
 23489                           
 23490                           ; BSR set to: 0
 23491  005CD8  07E4               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 23492  005CDA                     l1332:
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;eusart.c: 158: }
 23496                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 23497                           
 23498                           ; BSR set to: 0
 23499  005CDA  889D               	bsf	3997,4,c	;volatile
 23500                           
 23501                           ; BSR set to: 0
 23502  005CDC  0012               	return		;funcret
 23503  005CDE                     __end_of_EUSART_Write:
 23504                           	opt stack 0
 23505                           tblptru	equ	0xFF8
 23506                           tblptrh	equ	0xFF7
 23507                           tblptrl	equ	0xFF6
 23508                           tablat	equ	0xFF5
 23509                           prodh	equ	0xFF4
 23510                           prodl	equ	0xFF3
 23511                           intcon	equ	0xFF2
 23512                           intcon3	equ	0xFF0
 23513                           indf0	equ	0xFEF
 23514                           postinc0	equ	0xFEE
 23515                           fsr0h	equ	0xFEA
 23516                           fsr0l	equ	0xFE9
 23517                           wreg	equ	0xFE8
 23518                           indf1	equ	0xFE7
 23519                           postdec1	equ	0xFE5
 23520                           fsr1h	equ	0xFE2
 23521                           fsr1l	equ	0xFE1
 23522                           indf2	equ	0xFDF
 23523                           postinc2	equ	0xFDE
 23524                           fsr2h	equ	0xFDA
 23525                           fsr2l	equ	0xFD9
 23526                           status	equ	0xFD8
 23527                           
 23528 ;; *************** function _EUSART_Read *****************
 23529 ;; Defined at:
 23530 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 23531 ;; Parameters:    Size  Location     Type
 23532 ;;		None
 23533 ;; Auto vars:     Size  Location     Type
 23534 ;;  readValue       1    0[BANK0 ] unsigned char 
 23535 ;; Return value:  Size  Location     Type
 23536 ;;                  1    wreg      unsigned char 
 23537 ;; Registers used:
 23538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23539 ;; Tracked objects:
 23540 ;;		On entry : 0/0
 23541 ;;		On exit  : 0/0
 23542 ;;		Unchanged: 0/0
 23543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23544 ;;      Params:         0       0       0       0       0       0       0       0       0
 23545 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23546 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23547 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23548 ;;Total ram usage:        1 bytes
 23549 ;; Hardware stack levels used:    1
 23550 ;; Hardware stack levels required when called:   11
 23551 ;; This function calls:
 23552 ;;		Nothing
 23553 ;; This function is called by:
 23554 ;;		_MOTEapp_getModuleResponse
 23555 ;;		_USBapp_DeviceCdcEmulatorHandler
 23556 ;; This function uses a non-reentrant model
 23557 ;;
 23558                           
 23559                           	psect	text89
 23560  005D94                     __ptext89:
 23561                           	opt stack 0
 23562  005D94                     _EUSART_Read:
 23563                           	opt stack 15
 23564                           
 23565                           ;eusart.c: 119: uint8_t readValue = 0;
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;incstack = 0
 23569  005D94  0E00               	movlw	0
 23570  005D96  0100               	movlb	0	; () banked
 23571  005D98  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23572                           
 23573                           ;eusart.c: 121: while(0 == eusartRxCount)
 23574  005D9A  D001               	goto	l1321
 23575  005D9C                     l1322:
 23576                           
 23577                           ; BSR set to: 0
 23578                           ;eusart.c: 122: {
 23579                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 23580  005D9C  8E89               	bsf	3977,7,c	;volatile
 23581  005D9E                     l1321:
 23582                           
 23583                           ; BSR set to: 0
 23584                           
 23585                           ; BSR set to: 0
 23586  005D9E  51F7               	movf	_eusartRxCount& (0+255),w,b	;volatile
 23587  005DA0  B4D8               	btfsc	status,2,c
 23588  005DA2  D7FC               	goto	l1322
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;eusart.c: 124: }
 23592                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 23593  005DA4  9A9D               	bcf	3997,5,c	;volatile
 23594                           
 23595                           ; BSR set to: 0
 23596                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 23597  005DA6  51E2               	movf	_eusartRxTail& (0+255),w,b
 23598  005DA8  0D01               	mullw	1
 23599  005DAA  0E00               	movlw	low _eusartRxBuffer
 23600  005DAC  24F3               	addwf	prodl,w,c
 23601  005DAE  6ED9               	movwf	fsr2l,c
 23602  005DB0  0E02               	movlw	high _eusartRxBuffer
 23603  005DB2  20F4               	addwfc	prodh,w,c
 23604  005DB4  6EDA               	movwf	fsr2h,c
 23605  005DB6  50DF               	movf	indf2,w,c
 23606  005DB8  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23607                           
 23608                           ; BSR set to: 0
 23609  005DBA  2BE2               	incf	_eusartRxTail& (0+255),f,b
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23613  005DBC  0E3F               	movlw	63
 23614  005DBE  65E2               	cpfsgt	_eusartRxTail& (0+255),b
 23615  005DC0  D002               	goto	l1324
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;eusart.c: 130: {
 23619                           ;eusart.c: 131: eusartRxTail = 0;
 23620  005DC2  0E00               	movlw	0
 23621  005DC4  6FE2               	movwf	_eusartRxTail& (0+255),b
 23622  005DC6                     l1324:
 23623                           
 23624                           ; BSR set to: 0
 23625                           ;eusart.c: 132: }
 23626                           ;eusart.c: 133: eusartRxCount--;
 23627                           
 23628                           ; BSR set to: 0
 23629  005DC6  07F7               	decf	_eusartRxCount& (0+255),f,b	;volatile
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 23633  005DC8  8A9D               	bsf	3997,5,c	;volatile
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;eusart.c: 136: return readValue;
 23637  005DCA  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 23638  005DCC  0012               	return	
 23639  005DCE                     __end_of_EUSART_Read:
 23640                           	opt stack 0
 23641                           tblptru	equ	0xFF8
 23642                           tblptrh	equ	0xFF7
 23643                           tblptrl	equ	0xFF6
 23644                           tablat	equ	0xFF5
 23645                           prodh	equ	0xFF4
 23646                           prodl	equ	0xFF3
 23647                           intcon	equ	0xFF2
 23648                           intcon3	equ	0xFF0
 23649                           indf0	equ	0xFEF
 23650                           postinc0	equ	0xFEE
 23651                           fsr0h	equ	0xFEA
 23652                           fsr0l	equ	0xFE9
 23653                           wreg	equ	0xFE8
 23654                           indf1	equ	0xFE7
 23655                           postdec1	equ	0xFE5
 23656                           fsr1h	equ	0xFE2
 23657                           fsr1l	equ	0xFE1
 23658                           indf2	equ	0xFDF
 23659                           postinc2	equ	0xFDE
 23660                           fsr2h	equ	0xFDA
 23661                           fsr2l	equ	0xFD9
 23662                           status	equ	0xFD8
 23663                           
 23664 ;; *************** function _CDCTxService *****************
 23665 ;; Defined at:
 23666 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23667 ;; Parameters:    Size  Location     Type
 23668 ;;		None
 23669 ;; Auto vars:     Size  Location     Type
 23670 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 23671 ;;  i               1   10[BANK0 ] unsigned char 
 23672 ;; Return value:  Size  Location     Type
 23673 ;;                  1    wreg      void 
 23674 ;; Registers used:
 23675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23676 ;; Tracked objects:
 23677 ;;		On entry : 0/0
 23678 ;;		On exit  : 0/0
 23679 ;;		Unchanged: 0/0
 23680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23681 ;;      Params:         0       0       0       0       0       0       0       0       0
 23682 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23683 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23684 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23685 ;;Total ram usage:        5 bytes
 23686 ;; Hardware stack levels used:    1
 23687 ;; Hardware stack levels required when called:   12
 23688 ;; This function calls:
 23689 ;;		_USBTransferOnePacket
 23690 ;; This function is called by:
 23691 ;;		_USBapp_DeviceCdcEmulatorHandler
 23692 ;; This function uses a non-reentrant model
 23693 ;;
 23694                           
 23695                           	psect	text90
 23696  002DBA                     __ptext90:
 23697                           	opt stack 0
 23698  002DBA                     _CDCTxService:
 23699                           	opt stack 16
 23700                           
 23701                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 23702                           ;usb_device_cdc.c: 786: uint8_t i;
 23703                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 23704                           
 23705                           ; BSR set to: 0
 23706                           ;incstack = 0
 23707  002DBA  94A3               	bcf	4003,2,c	;volatile
 23708                           
 23709                           ;usb_device_cdc.c: 790: {};
 23710                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 23711  002DBC  0101               	movlb	1	; () banked
 23712  002DBE  5114               	movf	_CDCDataInHandle& (0+255),w,b
 23713  002DC0  1115               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 23714  002DC2  B4D8               	btfsc	status,2,c
 23715  002DC4  D010               	goto	l2317
 23716                           
 23717                           ; BSR set to: 1
 23718  002DC6  C114  FFD9         	movff	_CDCDataInHandle,fsr2l
 23719  002DCA  C115  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23720  002DCE  AEDF               	btfss	indf2,7,c
 23721  002DD0  D004               	goto	u8800
 23722  002DD2  0100               	movlb	0	; () banked
 23723  002DD4  6B67               	clrf	??_CDCTxService& (0+255),b
 23724  002DD6  2B67               	incf	??_CDCTxService& (0+255),f,b
 23725  002DD8  D002               	goto	u8808
 23726  002DDA                     u8800:
 23727  002DDA  0100               	movlb	0	; () banked
 23728  002DDC  6B67               	clrf	??_CDCTxService& (0+255),b
 23729  002DDE                     u8808:
 23730  002DDE  5167               	movf	??_CDCTxService& (0+255),w,b
 23731  002DE0  6F68               	movwf	_CDCTxService$6730& (0+255),b
 23732  002DE2  6B69               	clrf	(_CDCTxService$6730+1)& (0+255),b
 23733  002DE4  D005               	goto	l2319
 23734  002DE6                     l2317:
 23735                           
 23736                           ; BSR set to: 0
 23737  002DE6  0E00               	movlw	0
 23738  002DE8  0100               	movlb	0	; () banked
 23739  002DEA  6F69               	movwf	(_CDCTxService$6730+1)& (0+255),b
 23740  002DEC  0E00               	movlw	0
 23741  002DEE  6F68               	movwf	_CDCTxService$6730& (0+255),b
 23742  002DF0                     l2319:
 23743                           
 23744                           ; BSR set to: 0
 23745                           
 23746                           ; BSR set to: 0
 23747  002DF0  5168               	movf	_CDCTxService$6730& (0+255),w,b
 23748  002DF2  1169               	iorwf	(_CDCTxService$6730+1)& (0+255),w,b
 23749  002DF4  B4D8               	btfsc	status,2,c
 23750  002DF6  D002               	goto	l2315
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;usb_device_cdc.c: 793: {
 23754                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 23755  002DF8  84A3               	bsf	4003,2,c	;volatile
 23756                           
 23757                           ;usb_device_cdc.c: 795: return;
 23758  002DFA  0012               	return	
 23759  002DFC                     l2315:
 23760                           
 23761                           ; BSR set to: 0
 23762                           ;usb_device_cdc.c: 796: }
 23763                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 23764                           
 23765                           ; BSR set to: 0
 23766  002DFC  0E03               	movlw	3
 23767  002DFE  19EE               	xorwf	_cdc_trf_state& (0+255),w,b
 23768  002E00  A4D8               	btfss	status,2,c
 23769  002E02  D002               	goto	l2321
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 23773  002E04  0E00               	movlw	0
 23774  002E06  6FEE               	movwf	_cdc_trf_state& (0+255),b
 23775  002E08                     l2321:
 23776                           
 23777                           ; BSR set to: 0
 23778                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 23779  002E08  51EE               	movf	_cdc_trf_state& (0+255),w,b
 23780  002E0A  A4D8               	btfss	status,2,c
 23781  002E0C  D002               	goto	l2322
 23782                           
 23783                           ; BSR set to: 0
 23784                           ;usb_device_cdc.c: 810: {
 23785                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 23786  002E0E  84A3               	bsf	4003,2,c	;volatile
 23787                           
 23788                           ;usb_device_cdc.c: 812: return;
 23789  002E10  0012               	return	
 23790  002E12                     l2322:
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;usb_device_cdc.c: 813: }
 23794                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 23795                           
 23796                           ; BSR set to: 0
 23797  002E12  0E02               	movlw	2
 23798  002E14  19EE               	xorwf	_cdc_trf_state& (0+255),w,b
 23799  002E16  A4D8               	btfss	status,2,c
 23800  002E18  D013               	goto	l2323
 23801                           
 23802                           ; BSR set to: 0
 23803                           ;usb_device_cdc.c: 819: {
 23804                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 23805  002E1A  0E01               	movlw	1
 23806  002E1C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23807  002E1E  0E00               	movlw	0
 23808  002E20  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23809  002E22  0E00               	movlw	0
 23810  002E24  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23811  002E26  0E00               	movlw	0
 23812  002E28  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23813  002E2A  0E02               	movlw	2
 23814  002E2C  EC53  F023         	call	_USBTransferOnePacket
 23815  002E30  C060  F114         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23816  002E34  C061  F115         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23817                           
 23818                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 23819  002E38  0E03               	movlw	3
 23820  002E3A  0100               	movlb	0	; () banked
 23821  002E3C  6FEE               	movwf	_cdc_trf_state& (0+255),b
 23822                           
 23823                           ;usb_device_cdc.c: 823: }
 23824  002E3E  D05F               	goto	l2325
 23825  002E40                     l2323:
 23826                           
 23827                           ; BSR set to: 0
 23828                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 23829                           
 23830                           ; BSR set to: 0
 23831  002E40  05EE               	decf	_cdc_trf_state& (0+255),w,b
 23832  002E42  A4D8               	btfss	status,2,c
 23833  002E44  D05C               	goto	l2325
 23834                           
 23835                           ; BSR set to: 0
 23836                           ;usb_device_cdc.c: 825: {
 23837                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 23838  002E46  0E40               	movlw	64
 23839  002E48  65E0               	cpfsgt	_cdc_tx_len& (0+255),b
 23840  002E4A  D003               	goto	l2326
 23841                           
 23842                           ; BSR set to: 0
 23843                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 23844  002E4C  0E40               	movlw	64
 23845  002E4E  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 23846  002E50  D002               	goto	l2327
 23847  002E52                     l2326:
 23848                           
 23849                           ; BSR set to: 0
 23850                           ;usb_device_cdc.c: 831: else
 23851                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 23852  002E52  C0E0  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23853  002E56                     l2327:
 23854                           
 23855                           ; BSR set to: 0
 23856                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 23857                           
 23858                           ; BSR set to: 0
 23859  002E56  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 23860  002E58  0800               	sublw	0
 23861  002E5A  25E0               	addwf	_cdc_tx_len& (0+255),w,b
 23862  002E5C  6FE0               	movwf	_cdc_tx_len& (0+255),b
 23863                           
 23864                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23865  002E5E  0E00               	movlw	0
 23866  002E60  0101               	movlb	1	; () banked
 23867  002E62  6F0E               	movwf	_pCDCDst& (0+255),b
 23868  002E64  0E05               	movlw	5
 23869  002E66  6F0F               	movwf	(_pCDCDst+1)& (0+255),b
 23870                           
 23871                           ; BSR set to: 1
 23872                           ;usb_device_cdc.c: 841: i = byte_to_send;
 23873  002E68  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23874                           
 23875                           ; BSR set to: 1
 23876                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 23877  002E6C  503E               	movf	_cdc_mem_type,w,c
 23878  002E6E  B4D8               	btfsc	status,2,c
 23879  002E70  D012               	goto	l2329
 23880  002E72  D027               	goto	l2333
 23881  002E74                     
 23882                           ;usb_device_cdc.c: 845: {
 23883                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 23884                           
 23885                           ; BSR set to: 1
 23886  002E74  C111  FFD9         	movff	_pCDCSrc,fsr2l
 23887  002E78  C112  FFDA         	movff	_pCDCSrc+1,fsr2h
 23888  002E7C  C10E  FFE1         	movff	_pCDCDst,fsr1l
 23889  002E80  C10F  FFE2         	movff	_pCDCDst+1,fsr1h
 23890  002E84  CFDF FFE7          	movff	indf2,indf1
 23891                           
 23892                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 23893  002E88  0101               	movlb	1	; () banked
 23894  002E8A  4B0E               	infsnz	_pCDCDst& (0+255),f,b
 23895  002E8C  2B0F               	incf	(_pCDCDst+1)& (0+255),f,b
 23896                           
 23897                           ; BSR set to: 1
 23898                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 23899  002E8E  4B11               	infsnz	_pCDCSrc& (0+255),f,b
 23900  002E90  2B12               	incf	(_pCDCSrc+1)& (0+255),f,b
 23901                           
 23902                           ; BSR set to: 1
 23903                           ;usb_device_cdc.c: 849: i--;
 23904  002E92  0100               	movlb	0	; () banked
 23905  002E94  076A               	decf	CDCTxService@i& (0+255),f,b
 23906  002E96                     l2329:
 23907                           
 23908                           ; BSR set to: 0
 23909  002E96  0100               	movlb	0	; () banked
 23910  002E98  516A               	movf	CDCTxService@i& (0+255),w,b
 23911  002E9A  B4D8               	btfsc	status,2,c
 23912  002E9C  D016               	goto	u8890
 23913  002E9E  D7EA               	goto	l2330
 23914  002EA0                     
 23915                           ; BSR set to: 0
 23916                           ;usb_device_cdc.c: 855: {
 23917                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 23918                           
 23919                           ; BSR set to: 0
 23920  002EA0  C111  FFD9         	movff	_pCDCSrc,fsr2l
 23921  002EA4  C112  FFDA         	movff	_pCDCSrc+1,fsr2h
 23922  002EA8  C10E  FFE1         	movff	_pCDCDst,fsr1l
 23923  002EAC  C10F  FFE2         	movff	_pCDCDst+1,fsr1h
 23924  002EB0  CFDF FFE7          	movff	indf2,indf1
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 23928  002EB4  0101               	movlb	1	; () banked
 23929  002EB6  4B0E               	infsnz	_pCDCDst& (0+255),f,b
 23930  002EB8  2B0F               	incf	(_pCDCDst+1)& (0+255),f,b
 23931                           
 23932                           ; BSR set to: 1
 23933                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 23934  002EBA  4B11               	infsnz	_pCDCSrc& (0+255),f,b
 23935  002EBC  2B12               	incf	(_pCDCSrc+1)& (0+255),f,b
 23936                           
 23937                           ; BSR set to: 1
 23938                           ;usb_device_cdc.c: 859: i--;
 23939  002EBE  0100               	movlb	0	; () banked
 23940  002EC0  076A               	decf	CDCTxService@i& (0+255),f,b
 23941  002EC2                     l2333:
 23942                           
 23943                           ; BSR set to: 0
 23944  002EC2  0100               	movlb	0	; () banked
 23945  002EC4  516A               	movf	CDCTxService@i& (0+255),w,b
 23946  002EC6  A4D8               	btfss	status,2,c
 23947  002EC8  D7EB               	goto	l2334
 23948  002ECA                     u8890:
 23949                           
 23950                           ; BSR set to: 0
 23951                           ;usb_device_cdc.c: 860: }
 23952                           ;usb_device_cdc.c: 861: }
 23953                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 23954                           
 23955                           ; BSR set to: 0
 23956                           
 23957                           ; BSR set to: 0
 23958  002ECA  51E0               	movf	_cdc_tx_len& (0+255),w,b
 23959  002ECC  A4D8               	btfss	status,2,c
 23960  002ECE  D008               	goto	l2338
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;usb_device_cdc.c: 868: {
 23964                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 23965  002ED0  0E40               	movlw	64
 23966  002ED2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 23967  002ED4  A4D8               	btfss	status,2,c
 23968  002ED6  D002               	goto	l2337
 23969                           
 23970                           ; BSR set to: 0
 23971                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 23972  002ED8  0E02               	movlw	2
 23973  002EDA  D001               	goto	L21
 23974  002EDC                     l2337:
 23975                           
 23976                           ; BSR set to: 0
 23977                           ;usb_device_cdc.c: 871: else
 23978                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 23979                           
 23980                           ; BSR set to: 0
 23981  002EDC  0E03               	movlw	3
 23982  002EDE                     L21:
 23983  002EDE  6FEE               	movwf	_cdc_trf_state& (0+255),b
 23984  002EE0                     l2338:
 23985                           
 23986                           ; BSR set to: 0
 23987                           ;usb_device_cdc.c: 873: }
 23988                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 23989                           
 23990                           ; BSR set to: 0
 23991                           
 23992                           ; BSR set to: 0
 23993  002EE0  0E01               	movlw	1
 23994  002EE2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23995  002EE4  0E00               	movlw	0
 23996  002EE6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23997  002EE8  0E05               	movlw	5
 23998  002EEA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23999  002EEC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 24000  002EF0  0E02               	movlw	2
 24001  002EF2  EC53  F023         	call	_USBTransferOnePacket
 24002  002EF6  C060  F114         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 24003  002EFA  C061  F115         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 24004  002EFE                     l2325:
 24005                           
 24006                           ;usb_device_cdc.c: 876: }
 24007                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 24008  002EFE  84A3               	bsf	4003,2,c	;volatile
 24009  002F00  0012               	return		;funcret
 24010  002F02                     __end_of_CDCTxService:
 24011                           	opt stack 0
 24012                           tblptru	equ	0xFF8
 24013                           tblptrh	equ	0xFF7
 24014                           tblptrl	equ	0xFF6
 24015                           tablat	equ	0xFF5
 24016                           prodh	equ	0xFF4
 24017                           prodl	equ	0xFF3
 24018                           intcon	equ	0xFF2
 24019                           intcon3	equ	0xFF0
 24020                           indf0	equ	0xFEF
 24021                           postinc0	equ	0xFEE
 24022                           fsr0h	equ	0xFEA
 24023                           fsr0l	equ	0xFE9
 24024                           wreg	equ	0xFE8
 24025                           indf1	equ	0xFE7
 24026                           postdec1	equ	0xFE5
 24027                           fsr1h	equ	0xFE2
 24028                           fsr1l	equ	0xFE1
 24029                           indf2	equ	0xFDF
 24030                           postinc2	equ	0xFDE
 24031                           fsr2h	equ	0xFDA
 24032                           fsr2l	equ	0xFD9
 24033                           status	equ	0xFD8
 24034                           
 24035 ;; *************** function _USBTransferOnePacket *****************
 24036 ;; Defined at:
 24037 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 24038 ;; Parameters:    Size  Location     Type
 24039 ;;  ep              1    wreg     unsigned char 
 24040 ;;  dir             1    0[BANK0 ] unsigned char 
 24041 ;;  data            2    1[BANK0 ] PTR unsigned char 
 24042 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24043 ;;  len             1    3[BANK0 ] unsigned char 
 24044 ;; Auto vars:     Size  Location     Type
 24045 ;;  ep              1    4[BANK0 ] unsigned char 
 24046 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 24047 ;;		 -> BDT(48), NULL(0), 
 24048 ;; Return value:  Size  Location     Type
 24049 ;;                  2    0[BANK0 ] PTR void 
 24050 ;; Registers used:
 24051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24052 ;; Tracked objects:
 24053 ;;		On entry : 0/0
 24054 ;;		On exit  : 0/0
 24055 ;;		Unchanged: 0/0
 24056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24057 ;;      Params:         0       4       0       0       0       0       0       0       0
 24058 ;;      Locals:         0       3       0       0       0       0       0       0       0
 24059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24060 ;;      Totals:         0       7       0       0       0       0       0       0       0
 24061 ;;Total ram usage:        7 bytes
 24062 ;; Hardware stack levels used:    1
 24063 ;; Hardware stack levels required when called:   11
 24064 ;; This function calls:
 24065 ;;		Nothing
 24066 ;; This function is called by:
 24067 ;;		_getsUSBUSART
 24068 ;;		_CDCTxService
 24069 ;;		_USBCDCEventHandler
 24070 ;; This function uses a non-reentrant model
 24071 ;;
 24072                           
 24073                           	psect	text91
 24074  0046A6                     __ptext91:
 24075                           	opt stack 0
 24076  0046A6                     _USBTransferOnePacket:
 24077                           	opt stack 16
 24078                           
 24079                           ;incstack = 0
 24080                           ;USBTransferOnePacket@ep stored from wreg
 24081  0046A6  0100               	movlb	0	; () banked
 24082  0046A8  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 24083                           
 24084                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 24085                           ;usb_device.c: 762: if(dir != 0)
 24086  0046AA  0100               	movlb	0	; () banked
 24087  0046AC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 24088  0046AE  B4D8               	btfsc	status,2,c
 24089  0046B0  D007               	goto	l2000
 24090                           
 24091                           ; BSR set to: 0
 24092                           ;usb_device.c: 763: {
 24093                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 24094  0046B2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24095  0046B4  0D02               	mullw	2
 24096  0046B6  0ECE               	movlw	low _pBDTEntryIn
 24097  0046B8  24F3               	addwf	prodl,w,c
 24098  0046BA  6ED9               	movwf	fsr2l,c
 24099  0046BC  0E00               	movlw	high _pBDTEntryIn
 24100  0046BE  D006               	goto	L22
 24101  0046C0                     l2000:
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;usb_device.c: 767: else
 24105                           ;usb_device.c: 768: {
 24106                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 24107                           
 24108                           ; BSR set to: 0
 24109  0046C0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24110  0046C2  0D02               	mullw	2
 24111  0046C4  0E00               	movlw	low _pBDTEntryOut
 24112  0046C6  24F3               	addwf	prodl,w,c
 24113  0046C8  6ED9               	movwf	fsr2l,c
 24114  0046CA  0E01               	movlw	high _pBDTEntryOut
 24115  0046CC                     L22:
 24116  0046CC  20F4               	addwfc	prodh,w,c
 24117  0046CE  6EDA               	movwf	fsr2h,c
 24118  0046D0  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 24119  0046D4  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;usb_device.c: 771: }
 24123                           ;usb_device.c: 775: if(handle == 0)
 24124                           
 24125                           ; BSR set to: 0
 24126  0046D8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24127  0046DA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24128  0046DC  A4D8               	btfss	status,2,c
 24129  0046DE  D005               	goto	l2002
 24130                           
 24131                           ; BSR set to: 0
 24132                           ;usb_device.c: 776: {
 24133                           ;usb_device.c: 777: return 0;
 24134  0046E0  0E00               	movlw	0
 24135  0046E2  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 24136  0046E4  0E00               	movlw	0
 24137  0046E6  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 24138                           
 24139                           ; BSR set to: 0
 24140  0046E8  0012               	return	
 24141  0046EA                     l2002:
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;usb_device.c: 778: }
 24145                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 24146                           
 24147                           ; BSR set to: 0
 24148  0046EA  EE20 F002          	lfsr	2,2
 24149  0046EE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24150  0046F0  26D9               	addwf	fsr2l,f,c
 24151  0046F2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24152  0046F4  22DA               	addwfc	fsr2h,f,c
 24153  0046F6  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 24154  0046FA  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 24155                           
 24156                           ;usb_device.c: 781: handle->CNT = len;
 24157  0046FE  EE20 F001          	lfsr	2,1
 24158  004702  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24159  004704  26D9               	addwf	fsr2l,f,c
 24160  004706  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24161  004708  22DA               	addwfc	fsr2h,f,c
 24162  00470A  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 24163                           
 24164                           ; BSR set to: 0
 24165                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 24166  00470E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 24167  004712  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 24168  004716  0E40               	movlw	64
 24169  004718  16DF               	andwf	indf2,f,c
 24170                           
 24171                           ; BSR set to: 0
 24172                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 24173  00471A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 24174  00471E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 24175  004722  0E00               	movlw	0
 24176  004724  86DB               	bsf	plusw2,3,c
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 24180  004726  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 24181  00472A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 24182  00472E  0E00               	movlw	0
 24183  004730  8EDB               	bsf	plusw2,7,c
 24184                           
 24185                           ; BSR set to: 0
 24186                           ;usb_device.c: 787: if(dir != 0)
 24187  004732  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 24188  004734  B4D8               	btfsc	status,2,c
 24189  004736  D007               	goto	l2004
 24190                           
 24191                           ; BSR set to: 0
 24192                           ;usb_device.c: 788: {
 24193                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 24194  004738  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24195  00473A  0D02               	mullw	2
 24196  00473C  0ECE               	movlw	low _pBDTEntryIn
 24197  00473E  24F3               	addwf	prodl,w,c
 24198  004740  6ED9               	movwf	fsr2l,c
 24199  004742  0E00               	movlw	high _pBDTEntryIn
 24200  004744  D006               	goto	L23
 24201  004746                     l2004:
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;usb_device.c: 792: else
 24205                           ;usb_device.c: 793: {
 24206                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 24207                           
 24208                           ; BSR set to: 0
 24209  004746  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24210  004748  0D02               	mullw	2
 24211  00474A  0E00               	movlw	low _pBDTEntryOut
 24212  00474C  24F3               	addwf	prodl,w,c
 24213  00474E  6ED9               	movwf	fsr2l,c
 24214  004750  0E01               	movlw	high _pBDTEntryOut
 24215  004752                     L23:
 24216  004752  20F4               	addwfc	prodh,w,c
 24217  004754  6EDA               	movwf	fsr2h,c
 24218  004756  0E04               	movlw	4
 24219  004758  1ADF               	xorwf	indf2,f,c
 24220                           
 24221                           ; BSR set to: 0
 24222                           ;usb_device.c: 796: }
 24223                           ;usb_device.c: 797: return (void*)handle;
 24224                           
 24225                           ; BSR set to: 0
 24226  00475A  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 24227  00475E  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 24228  004762  0012               	return	
 24229  004764                     __end_of_USBTransferOnePacket:
 24230                           	opt stack 0
 24231                           tblptru	equ	0xFF8
 24232                           tblptrh	equ	0xFF7
 24233                           tblptrl	equ	0xFF6
 24234                           tablat	equ	0xFF5
 24235                           prodh	equ	0xFF4
 24236                           prodl	equ	0xFF3
 24237                           intcon	equ	0xFF2
 24238                           intcon3	equ	0xFF0
 24239                           indf0	equ	0xFEF
 24240                           postinc0	equ	0xFEE
 24241                           fsr0h	equ	0xFEA
 24242                           fsr0l	equ	0xFE9
 24243                           wreg	equ	0xFE8
 24244                           indf1	equ	0xFE7
 24245                           postdec1	equ	0xFE5
 24246                           fsr1h	equ	0xFE2
 24247                           fsr1l	equ	0xFE1
 24248                           indf2	equ	0xFDF
 24249                           postinc2	equ	0xFDE
 24250                           postdec2	equ	0xFDD
 24251                           plusw2	equ	0xFDB
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _USBDeviceInit *****************
 24257 ;; Defined at:
 24258 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;		None
 24261 ;; Auto vars:     Size  Location     Type
 24262 ;;  i               1    8[BANK0 ] unsigned char 
 24263 ;; Return value:  Size  Location     Type
 24264 ;;                  1    wreg      void 
 24265 ;; Registers used:
 24266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24272 ;;      Params:         0       0       0       0       0       0       0       0       0
 24273 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24275 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24276 ;;Total ram usage:        1 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:   12
 24279 ;; This function calls:
 24280 ;;		_memset
 24281 ;; This function is called by:
 24282 ;;		_main
 24283 ;; This function uses a non-reentrant model
 24284 ;;
 24285                           
 24286                           	psect	text92
 24287  0032A2                     __ptext92:
 24288                           	opt stack 0
 24289  0032A2                     _USBDeviceInit:
 24290                           	opt stack 18
 24291                           
 24292                           ;usb_device.c: 239: uint8_t i;
 24293                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24294                           
 24295                           ; BSR set to: 0
 24296                           ;incstack = 0
 24297  0032A2  94A3               	bcf	4003,2,c	;volatile
 24298                           
 24299                           ;usb_device.c: 244: {UEIR = 0;};
 24300  0032A4  0E00               	movlw	0
 24301  0032A6  6E67               	movwf	3943,c	;volatile
 24302                           
 24303                           ;usb_device.c: 247: {UIR = 0;};
 24304  0032A8  0E00               	movlw	0
 24305  0032AA  6E65               	movwf	3941,c	;volatile
 24306                           
 24307                           ;usb_device.c: 250: UEP0 = 0;
 24308  0032AC  0E00               	movlw	0
 24309  0032AE  6E6A               	movwf	3946,c	;volatile
 24310                           
 24311                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24312  0032B0  0E6B               	movlw	107
 24313  0032B2  0100               	movlb	0	; () banked
 24314  0032B4  6F60               	movwf	memset@p1& (0+255),b
 24315  0032B6  0E0F               	movlw	15
 24316  0032B8  6F61               	movwf	(memset@p1+1)& (0+255),b
 24317  0032BA  0E00               	movlw	0
 24318  0032BC  6F63               	movwf	(memset@c+1)& (0+255),b
 24319  0032BE  0E00               	movlw	0
 24320  0032C0  6F62               	movwf	memset@c& (0+255),b
 24321  0032C2  0E00               	movlw	0
 24322  0032C4  6F65               	movwf	(memset@n+1)& (0+255),b
 24323  0032C6  0E02               	movlw	2
 24324  0032C8  6F64               	movwf	memset@n& (0+255),b
 24325  0032CA  ECD2  F02F         	call	_memset	;wreg free
 24326                           
 24327                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24328  0032CE  0E16               	movlw	22
 24329  0032D0  6E62               	movwf	3938,c	;volatile
 24330  0032D2  0E9F               	movlw	159
 24331  0032D4  6E66               	movwf	3942,c	;volatile
 24332  0032D6  0E7B               	movlw	123
 24333  0032D8  6E64               	movwf	3940,c	;volatile
 24334                           
 24335                           ;usb_device.c: 257: ;
 24336                           ;usb_device.c: 260: ;
 24337                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24338  0032DA  0E00               	movlw	0
 24339  0032DC  0100               	movlb	0	; () banked
 24340  0032DE  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24341  0032E0                     l11885:
 24342                           
 24343                           ; BSR set to: 0
 24344  0032E0  0E0B               	movlw	11
 24345  0032E2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24346  0032E4  D001               	goto	l1960
 24347  0032E6  D00E               	goto	u10590
 24348  0032E8                     l1960:
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;usb_device.c: 264: {
 24352                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24353                           
 24354                           ; BSR set to: 0
 24355  0032E8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24356  0032EA  0D04               	mullw	4
 24357  0032EC  0E00               	movlw	0
 24358  0032EE  24F3               	addwf	prodl,w,c
 24359  0032F0  6ED9               	movwf	fsr2l,c
 24360  0032F2  0E04               	movlw	4
 24361  0032F4  20F4               	addwfc	prodh,w,c
 24362  0032F6  6EDA               	movwf	fsr2h,c
 24363  0032F8  6ADE               	clrf	postinc2,c
 24364  0032FA  6ADE               	clrf	postinc2,c
 24365  0032FC  6ADE               	clrf	postinc2,c
 24366  0032FE  6ADD               	clrf	postdec2,c
 24367                           
 24368                           ; BSR set to: 0
 24369  003300  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24370  003302  D7EE               	goto	l11885
 24371  003304                     u10590:
 24372                           
 24373                           ; BSR set to: 0
 24374                           ;usb_device.c: 266: }
 24375                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24376  003304  8C60               	bsf	3936,6,c	;volatile
 24377                           
 24378                           ; BSR set to: 0
 24379                           ;usb_device.c: 272: UADDR = 0x00;
 24380  003306  0E00               	movlw	0
 24381  003308  6E63               	movwf	3939,c	;volatile
 24382                           
 24383                           ; BSR set to: 0
 24384                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24385  00330A  9860               	bcf	3936,4,c	;volatile
 24386                           
 24387                           ; BSR set to: 0
 24388                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24389  00330C  9C60               	bcf	3936,6,c	;volatile
 24390                           
 24391                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24392  00330E  D009               	goto	l1962
 24393  003310                     
 24394                           ; BSR set to: 0
 24395                           ;usb_device.c: 282: {
 24396                           ;usb_device.c: 283: (UIR &= 0xF7);
 24397                           
 24398                           ; BSR set to: 0
 24399  003310  9665               	bcf	3941,3,c	;volatile
 24400                           
 24401                           ; BSR set to: 0
 24402                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24403  003312  0E00               	movlw	0
 24404  003314  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24405                           
 24406                           ; BSR set to: 0
 24407                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24408  003316  0E00               	movlw	0
 24409  003318  6FC3               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24410                           
 24411                           ; BSR set to: 0
 24412                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24413  00331A  0E00               	movlw	0
 24414  00331C  6FC5               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24415  00331E  0E00               	movlw	0
 24416  003320  6FC4               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24417  003322                     l1962:
 24418                           
 24419                           ; BSR set to: 0
 24420                           
 24421                           ; BSR set to: 0
 24422  003322  B665               	btfsc	3941,3,c	;volatile
 24423  003324  D7F5               	goto	l1963
 24424                           
 24425                           ; BSR set to: 0
 24426                           ;usb_device.c: 288: }
 24427                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24428                           
 24429                           ; BSR set to: 0
 24430  003326  0E01               	movlw	1
 24431  003328  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24432                           
 24433                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24434  00332A  0E01               	movlw	1
 24435  00332C  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24436                           
 24437                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24438  00332E  0E00               	movlw	0
 24439  003330  6E40               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24440                           
 24441                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24442  003332  0E00               	movlw	0
 24443  003334  6E3F               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24444                           
 24445                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24446  003336  0E00               	movlw	0
 24447  003338  0101               	movlb	1	; () banked
 24448  00333A  6F1F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24449                           
 24450                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24451  00333C  0E00               	movlw	0
 24452  00333E  0100               	movlb	0	; () banked
 24453  003340  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24454  003342                     l11913:
 24455                           
 24456                           ; BSR set to: 0
 24457  003342  0E02               	movlw	2
 24458  003344  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24459  003346  D001               	goto	l1965
 24460  003348  D02E               	goto	u10620
 24461  00334A                     l1965:
 24462                           
 24463                           ; BSR set to: 0
 24464                           ;usb_device.c: 302: {
 24465                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24466                           
 24467                           ; BSR set to: 0
 24468  00334A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24469  00334C  0D02               	mullw	2
 24470  00334E  0ECE               	movlw	low _pBDTEntryIn
 24471  003350  24F3               	addwf	prodl,w,c
 24472  003352  6ED9               	movwf	fsr2l,c
 24473  003354  0E00               	movlw	high _pBDTEntryIn
 24474  003356  20F4               	addwfc	prodh,w,c
 24475  003358  6EDA               	movwf	fsr2h,c
 24476  00335A  0E00               	movlw	0
 24477  00335C  6EDE               	movwf	postinc2,c
 24478  00335E  0E00               	movlw	0
 24479  003360  6EDD               	movwf	postdec2,c
 24480                           
 24481                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24482  003362  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24483  003364  0D02               	mullw	2
 24484  003366  0E00               	movlw	low _pBDTEntryOut
 24485  003368  24F3               	addwf	prodl,w,c
 24486  00336A  6ED9               	movwf	fsr2l,c
 24487  00336C  0E01               	movlw	high _pBDTEntryOut
 24488  00336E  20F4               	addwfc	prodh,w,c
 24489  003370  6EDA               	movwf	fsr2h,c
 24490  003372  0E00               	movlw	0
 24491  003374  6EDE               	movwf	postinc2,c
 24492  003376  0E00               	movlw	0
 24493  003378  6EDD               	movwf	postdec2,c
 24494                           
 24495                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24496  00337A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24497  00337C  0D01               	mullw	1
 24498  00337E  0ED7               	movlw	low _ep_data_in
 24499  003380  24F3               	addwf	prodl,w,c
 24500  003382  6ED9               	movwf	fsr2l,c
 24501  003384  0E00               	movlw	high _ep_data_in
 24502  003386  20F4               	addwfc	prodh,w,c
 24503  003388  6EDA               	movwf	fsr2h,c
 24504  00338A  0E00               	movlw	0
 24505  00338C  6EDF               	movwf	indf2,c
 24506                           
 24507                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24508  00338E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24509  003390  0D01               	mullw	1
 24510  003392  0ED4               	movlw	low _ep_data_out
 24511  003394  24F3               	addwf	prodl,w,c
 24512  003396  6ED9               	movwf	fsr2l,c
 24513  003398  0E00               	movlw	high _ep_data_out
 24514  00339A  20F4               	addwfc	prodh,w,c
 24515  00339C  6EDA               	movwf	fsr2h,c
 24516  00339E  0E00               	movlw	0
 24517  0033A0  6EDF               	movwf	indf2,c
 24518                           
 24519                           ; BSR set to: 0
 24520  0033A2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24521  0033A4  D7CE               	goto	l11913
 24522  0033A6                     u10620:
 24523                           
 24524                           ; BSR set to: 0
 24525                           ;usb_device.c: 307: }
 24526                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24527                           
 24528                           ; BSR set to: 0
 24529  0033A6  0E08               	movlw	8
 24530  0033A8  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 24531  0033AA  0E04               	movlw	4
 24532  0033AC  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24533                           
 24534                           ; BSR set to: 0
 24535                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24536  0033AE  0E16               	movlw	22
 24537  0033B0  6E6A               	movwf	3946,c	;volatile
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24541  0033B2  0E04               	movlw	4
 24542  0033B4  0104               	movlb	4	; () banked
 24543  0033B6  6F03               	movwf	3,b	;volatile
 24544  0033B8  0E30               	movlw	48
 24545  0033BA  6F02               	movwf	2,b	;volatile
 24546                           
 24547                           ; BSR set to: 4
 24548                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24549  0033BC  0E08               	movlw	8
 24550  0033BE  6F01               	movwf	1,b	;volatile
 24551                           
 24552                           ; BSR set to: 4
 24553                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24554  0033C0  0E04               	movlw	4
 24555  0033C2  6F00               	movwf	0,b	;volatile
 24556                           
 24557                           ; BSR set to: 4
 24558                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24559  0033C4  8F00               	bsf	0,7,b	;volatile
 24560                           
 24561                           ; BSR set to: 4
 24562                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24563  0033C6  0E00               	movlw	0
 24564  0033C8  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 24565                           
 24566                           ; BSR set to: 4
 24567                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24568  0033CA  0E00               	movlw	0
 24569  0033CC  0100               	movlb	0	; () banked
 24570  0033CE  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 24571                           
 24572                           ; BSR set to: 0
 24573  0033D0  0012               	return		;funcret
 24574  0033D2                     __end_of_USBDeviceInit:
 24575                           	opt stack 0
 24576                           tblptru	equ	0xFF8
 24577                           tblptrh	equ	0xFF7
 24578                           tblptrl	equ	0xFF6
 24579                           tablat	equ	0xFF5
 24580                           prodh	equ	0xFF4
 24581                           prodl	equ	0xFF3
 24582                           intcon	equ	0xFF2
 24583                           intcon3	equ	0xFF0
 24584                           indf0	equ	0xFEF
 24585                           postinc0	equ	0xFEE
 24586                           fsr0h	equ	0xFEA
 24587                           fsr0l	equ	0xFE9
 24588                           wreg	equ	0xFE8
 24589                           indf1	equ	0xFE7
 24590                           postdec1	equ	0xFE5
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           indf2	equ	0xFDF
 24594                           postinc2	equ	0xFDE
 24595                           postdec2	equ	0xFDD
 24596                           plusw2	equ	0xFDB
 24597                           fsr2h	equ	0xFDA
 24598                           fsr2l	equ	0xFD9
 24599                           status	equ	0xFD8
 24600                           
 24601 ;; *************** function _memset *****************
 24602 ;; Defined at:
 24603 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;  p1              2    0[BANK0 ] PTR void 
 24606 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24607 ;;  c               2    2[BANK0 ] int 
 24608 ;;  n               2    4[BANK0 ] unsigned int 
 24609 ;; Auto vars:     Size  Location     Type
 24610 ;;  p               2    6[BANK0 ] PTR unsigned char 
 24611 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24612 ;; Return value:  Size  Location     Type
 24613 ;;                  2    0[BANK0 ] PTR void 
 24614 ;; Registers used:
 24615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24616 ;; Tracked objects:
 24617 ;;		On entry : 0/0
 24618 ;;		On exit  : 0/0
 24619 ;;		Unchanged: 0/0
 24620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24621 ;;      Params:         0       6       0       0       0       0       0       0       0
 24622 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24623 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24624 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24625 ;;Total ram usage:        8 bytes
 24626 ;; Hardware stack levels used:    1
 24627 ;; Hardware stack levels required when called:   11
 24628 ;; This function calls:
 24629 ;;		Nothing
 24630 ;; This function is called by:
 24631 ;;		_USBDeviceInit
 24632 ;; This function uses a non-reentrant model
 24633 ;;
 24634                           
 24635                           	psect	text93
 24636  005FA4                     __ptext93:
 24637                           	opt stack 0
 24638  005FA4                     _memset:
 24639                           	opt stack 18
 24640                           
 24641                           ; BSR set to: 0
 24642                           ;incstack = 0
 24643  005FA4  C060  F066         	movff	memset@p1,memset@p
 24644  005FA8  C061  F067         	movff	memset@p1+1,memset@p+1
 24645  005FAC  D009               	goto	l2786
 24646  005FAE                     l11707:
 24647  005FAE  C066  FFD9         	movff	memset@p,fsr2l
 24648  005FB2  C067  FFDA         	movff	memset@p+1,fsr2h
 24649  005FB6  C062  FFDF         	movff	memset@c,indf2
 24650  005FBA  0100               	movlb	0	; () banked
 24651  005FBC  4B66               	infsnz	memset@p& (0+255),f,b
 24652  005FBE  2B67               	incf	(memset@p+1)& (0+255),f,b
 24653  005FC0                     l2786:
 24654                           
 24655                           ; BSR set to: 0
 24656  005FC0  0100               	movlb	0	; () banked
 24657  005FC2  0764               	decf	memset@n& (0+255),f,b
 24658  005FC4  A0D8               	btfss	status,0,c
 24659  005FC6  0765               	decf	(memset@n+1)& (0+255),f,b
 24660  005FC8  2964               	incf	memset@n& (0+255),w,b
 24661  005FCA  E1F1               	bnz	l11707
 24662  005FCC  2965               	incf	(memset@n+1)& (0+255),w,b
 24663  005FCE  B4D8               	btfsc	status,2,c
 24664  005FD0  0012               	return	
 24665  005FD2  D7ED               	goto	l2787
 24666  005FD4                     __end_of_memset:
 24667                           	opt stack 0
 24668                           tblptru	equ	0xFF8
 24669                           tblptrh	equ	0xFF7
 24670                           tblptrl	equ	0xFF6
 24671                           tablat	equ	0xFF5
 24672                           prodh	equ	0xFF4
 24673                           prodl	equ	0xFF3
 24674                           intcon	equ	0xFF2
 24675                           intcon3	equ	0xFF0
 24676                           indf0	equ	0xFEF
 24677                           postinc0	equ	0xFEE
 24678                           fsr0h	equ	0xFEA
 24679                           fsr0l	equ	0xFE9
 24680                           wreg	equ	0xFE8
 24681                           indf1	equ	0xFE7
 24682                           postdec1	equ	0xFE5
 24683                           fsr1h	equ	0xFE2
 24684                           fsr1l	equ	0xFE1
 24685                           indf2	equ	0xFDF
 24686                           postinc2	equ	0xFDE
 24687                           postdec2	equ	0xFDD
 24688                           plusw2	equ	0xFDB
 24689                           fsr2h	equ	0xFDA
 24690                           fsr2l	equ	0xFD9
 24691                           status	equ	0xFD8
 24692                           
 24693 ;; *************** function _USBDeviceAttach *****************
 24694 ;; Defined at:
 24695 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 24696 ;; Parameters:    Size  Location     Type
 24697 ;;		None
 24698 ;; Auto vars:     Size  Location     Type
 24699 ;;		None
 24700 ;; Return value:  Size  Location     Type
 24701 ;;                  1    wreg      void 
 24702 ;; Registers used:
 24703 ;;		wreg, status,2
 24704 ;; Tracked objects:
 24705 ;;		On entry : 0/0
 24706 ;;		On exit  : 0/0
 24707 ;;		Unchanged: 0/0
 24708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24709 ;;      Params:         0       0       0       0       0       0       0       0       0
 24710 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24712 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24713 ;;Total ram usage:        0 bytes
 24714 ;; Hardware stack levels used:    1
 24715 ;; Hardware stack levels required when called:   11
 24716 ;; This function calls:
 24717 ;;		Nothing
 24718 ;; This function is called by:
 24719 ;;		_main
 24720 ;; This function uses a non-reentrant model
 24721 ;;
 24722                           
 24723                           	psect	text94
 24724  005EAA                     __ptext94:
 24725                           	opt stack 0
 24726  005EAA                     _USBDeviceAttach:
 24727                           	opt stack 19
 24728                           
 24729                           ;usb_device.c: 1050: {
 24730                           ;usb_device.c: 1051: if(1 == 1)
 24731                           
 24732                           ; BSR set to: 0
 24733                           ;incstack = 0
 24734  005EAA  0100               	movlb	0	; () banked
 24735  005EAC  51EF               	movf	_USBDeviceState& (0+255),w,b	;volatile
 24736  005EAE  A4D8               	btfss	status,2,c
 24737  005EB0  0012               	return	
 24738                           
 24739                           ; BSR set to: 0
 24740                           ;usb_device.c: 1052: {
 24741                           ;usb_device.c: 1054: UCON = 0;
 24742  005EB2  0E00               	movlw	0
 24743  005EB4  6E60               	movwf	3936,c	;volatile
 24744                           
 24745                           ;usb_device.c: 1057: UIE = 0;
 24746  005EB6  0E00               	movlw	0
 24747  005EB8  6E64               	movwf	3940,c	;volatile
 24748                           
 24749                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 24750  005EBA  0E16               	movlw	22
 24751  005EBC  6E62               	movwf	3938,c	;volatile
 24752  005EBE  0E9F               	movlw	159
 24753  005EC0  6E66               	movwf	3942,c	;volatile
 24754  005EC2  0E7B               	movlw	123
 24755  005EC4  6E64               	movwf	3940,c	;volatile
 24756                           
 24757                           ; BSR set to: 0
 24758                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 24759  005EC6  8ED0               	bsf	4048,7,c	;volatile
 24760                           
 24761                           ; BSR set to: 0
 24762  005EC8  84A5               	bsf	4005,2,c	;volatile
 24763                           
 24764                           ; BSR set to: 0
 24765  005ECA  84A3               	bsf	4003,2,c	;volatile
 24766                           
 24767                           ; BSR set to: 0
 24768  005ECC  8EF2               	bsf	intcon,7,c	;volatile
 24769                           
 24770                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24771  005ECE  D001               	goto	l2022
 24772  005ED0                     l2023:
 24773  005ED0  8660               	bsf	3936,3,c	;volatile
 24774  005ED2                     l2022:
 24775  005ED2  A660               	btfss	3936,3,c	;volatile
 24776  005ED4  D7FD               	goto	l2023
 24777                           
 24778                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 24779  005ED6  0E01               	movlw	1
 24780  005ED8  0100               	movlb	0	; () banked
 24781  005EDA  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 24782                           
 24783                           ; BSR set to: 0
 24784  005EDC  0012               	return	
 24785  005EDE                     __end_of_USBDeviceAttach:
 24786                           	opt stack 0
 24787                           tblptru	equ	0xFF8
 24788                           tblptrh	equ	0xFF7
 24789                           tblptrl	equ	0xFF6
 24790                           tablat	equ	0xFF5
 24791                           prodh	equ	0xFF4
 24792                           prodl	equ	0xFF3
 24793                           intcon	equ	0xFF2
 24794                           intcon3	equ	0xFF0
 24795                           indf0	equ	0xFEF
 24796                           postinc0	equ	0xFEE
 24797                           fsr0h	equ	0xFEA
 24798                           fsr0l	equ	0xFE9
 24799                           wreg	equ	0xFE8
 24800                           indf1	equ	0xFE7
 24801                           postdec1	equ	0xFE5
 24802                           fsr1h	equ	0xFE2
 24803                           fsr1l	equ	0xFE1
 24804                           indf2	equ	0xFDF
 24805                           postinc2	equ	0xFDE
 24806                           postdec2	equ	0xFDD
 24807                           plusw2	equ	0xFDB
 24808                           fsr2h	equ	0xFDA
 24809                           fsr2l	equ	0xFD9
 24810                           status	equ	0xFD8
 24811                           
 24812 ;; *************** function _SYSTEM_Initialize *****************
 24813 ;; Defined at:
 24814 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 24815 ;; Parameters:    Size  Location     Type
 24816 ;;		None
 24817 ;; Auto vars:     Size  Location     Type
 24818 ;;		None
 24819 ;; Return value:  Size  Location     Type
 24820 ;;                  1    wreg      void 
 24821 ;; Registers used:
 24822 ;;		wreg, status,2, status,0, cstack
 24823 ;; Tracked objects:
 24824 ;;		On entry : 0/0
 24825 ;;		On exit  : 0/0
 24826 ;;		Unchanged: 0/0
 24827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24828 ;;      Params:         0       0       0       0       0       0       0       0       0
 24829 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24831 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24832 ;;Total ram usage:        0 bytes
 24833 ;; Hardware stack levels used:    1
 24834 ;; Hardware stack levels required when called:   13
 24835 ;; This function calls:
 24836 ;;		_ADC_Initialize
 24837 ;;		_CMP1_Initialize
 24838 ;;		_EUSART_Initialize
 24839 ;;		_InitSwUart
 24840 ;;		_OSCILLATOR_Initialize
 24841 ;;		_PIN_MANAGER_Initialize
 24842 ;;		_TMR0_Initialize
 24843 ;;		_TMR1_Initialize
 24844 ;;		_TMR2_Initialize
 24845 ;;		_TMR3_Initialize
 24846 ;; This function is called by:
 24847 ;;		_main
 24848 ;; This function uses a non-reentrant model
 24849 ;;
 24850                           
 24851                           	psect	text95
 24852  0060EC                     __ptext95:
 24853                           	opt stack 0
 24854  0060EC                     _SYSTEM_Initialize:
 24855                           	opt stack 17
 24856                           
 24857                           ;mcc.c: 96: OSCILLATOR_Initialize();
 24858                           
 24859                           ; BSR set to: 0
 24860                           ;incstack = 0
 24861  0060EC  EC8E  F031         	call	_OSCILLATOR_Initialize	;wreg free
 24862                           
 24863                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 24864  0060F0  ECC1  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
 24865                           
 24866                           ;mcc.c: 99: TMR1_Initialize();
 24867  0060F4  ECA1  F02F         	call	_TMR1_Initialize	;wreg free
 24868                           
 24869                           ;mcc.c: 100: TMR2_Initialize();
 24870  0060F8  ECC2  F031         	call	_TMR2_Initialize	;wreg free
 24871                           
 24872                           ;mcc.c: 101: TMR3_Initialize();
 24873  0060FC  ECFF  F030         	call	_TMR3_Initialize	;wreg free
 24874                           
 24875                           ;mcc.c: 102: EUSART_Initialize();
 24876  006100  EC03  F02F         	call	_EUSART_Initialize	;wreg free
 24877                           
 24878                           ;mcc.c: 103: TMR0_Initialize();
 24879  006104  EC31  F031         	call	_TMR0_Initialize	;wreg free
 24880                           
 24881                           ;mcc.c: 104: ADC_Initialize();
 24882  006108  EC6B  F031         	call	_ADC_Initialize	;wreg free
 24883                           
 24884                           ;mcc.c: 105: CMP1_Initialize();
 24885  00610C  ECD5  F031         	call	_CMP1_Initialize	;wreg free
 24886                           
 24887                           ;mcc.c: 107: InitSwUart();
 24888  006110  EC10  F031         	call	_InitSwUart	;wreg free
 24889  006114  0012               	return		;funcret
 24890  006116                     __end_of_SYSTEM_Initialize:
 24891                           	opt stack 0
 24892                           tblptru	equ	0xFF8
 24893                           tblptrh	equ	0xFF7
 24894                           tblptrl	equ	0xFF6
 24895                           tablat	equ	0xFF5
 24896                           prodh	equ	0xFF4
 24897                           prodl	equ	0xFF3
 24898                           intcon	equ	0xFF2
 24899                           intcon3	equ	0xFF0
 24900                           indf0	equ	0xFEF
 24901                           postinc0	equ	0xFEE
 24902                           fsr0h	equ	0xFEA
 24903                           fsr0l	equ	0xFE9
 24904                           wreg	equ	0xFE8
 24905                           indf1	equ	0xFE7
 24906                           postdec1	equ	0xFE5
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           indf2	equ	0xFDF
 24910                           postinc2	equ	0xFDE
 24911                           postdec2	equ	0xFDD
 24912                           plusw2	equ	0xFDB
 24913                           fsr2h	equ	0xFDA
 24914                           fsr2l	equ	0xFD9
 24915                           status	equ	0xFD8
 24916                           
 24917 ;; *************** function _TMR3_Initialize *****************
 24918 ;; Defined at:
 24919 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;		None
 24922 ;; Auto vars:     Size  Location     Type
 24923 ;;		None
 24924 ;; Return value:  Size  Location     Type
 24925 ;;                  1    wreg      void 
 24926 ;; Registers used:
 24927 ;;		wreg, status,2, cstack
 24928 ;; Tracked objects:
 24929 ;;		On entry : 0/0
 24930 ;;		On exit  : 0/0
 24931 ;;		Unchanged: 0/0
 24932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24933 ;;      Params:         0       0       0       0       0       0       0       0       0
 24934 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24936 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24937 ;;Total ram usage:        0 bytes
 24938 ;; Hardware stack levels used:    1
 24939 ;; Hardware stack levels required when called:   12
 24940 ;; This function calls:
 24941 ;;		_TMR3_StartTimer
 24942 ;; This function is called by:
 24943 ;;		_SYSTEM_Initialize
 24944 ;; This function uses a non-reentrant model
 24945 ;;
 24946                           
 24947                           	psect	text96
 24948  0061FE                     __ptext96:
 24949                           	opt stack 0
 24950  0061FE                     _TMR3_Initialize:
 24951                           	opt stack 17
 24952                           
 24953                           ;tmr3.c: 72: T3CON = 0x04;
 24954                           
 24955                           ;incstack = 0
 24956  0061FE  0E04               	movlw	4
 24957  006200  6EB1               	movwf	4017,c	;volatile
 24958                           
 24959                           ;tmr3.c: 75: T3GCON = 0x00;
 24960  006202  0E00               	movlw	0
 24961  006204  6EB4               	movwf	4020,c	;volatile
 24962                           
 24963                           ;tmr3.c: 78: TMR3H = 0xD5;
 24964  006206  0ED5               	movlw	213
 24965  006208  6EB3               	movwf	4019,c	;volatile
 24966                           
 24967                           ;tmr3.c: 81: TMR3L = 0xD0;
 24968  00620A  0ED0               	movlw	208
 24969  00620C  6EB2               	movwf	4018,c	;volatile
 24970                           
 24971                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 24972  00620E  CFB2 F036          	movff	4018,_timer3ReloadVal	;volatile
 24973  006212  CFB3 F037          	movff	4019,_timer3ReloadVal+1	;volatile
 24974                           
 24975                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 24976  006216  92A1               	bcf	4001,1,c	;volatile
 24977                           
 24978                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 24979  006218  82A0               	bsf	4000,1,c	;volatile
 24980                           
 24981                           ;tmr3.c: 93: TMR3_StartTimer();
 24982  00621A  EC4E  F032         	call	_TMR3_StartTimer	;wreg free
 24983  00621E  0012               	return		;funcret
 24984  006220                     __end_of_TMR3_Initialize:
 24985                           	opt stack 0
 24986                           tblptru	equ	0xFF8
 24987                           tblptrh	equ	0xFF7
 24988                           tblptrl	equ	0xFF6
 24989                           tablat	equ	0xFF5
 24990                           prodh	equ	0xFF4
 24991                           prodl	equ	0xFF3
 24992                           intcon	equ	0xFF2
 24993                           intcon3	equ	0xFF0
 24994                           indf0	equ	0xFEF
 24995                           postinc0	equ	0xFEE
 24996                           fsr0h	equ	0xFEA
 24997                           fsr0l	equ	0xFE9
 24998                           wreg	equ	0xFE8
 24999                           indf1	equ	0xFE7
 25000                           postdec1	equ	0xFE5
 25001                           fsr1h	equ	0xFE2
 25002                           fsr1l	equ	0xFE1
 25003                           indf2	equ	0xFDF
 25004                           postinc2	equ	0xFDE
 25005                           postdec2	equ	0xFDD
 25006                           plusw2	equ	0xFDB
 25007                           fsr2h	equ	0xFDA
 25008                           fsr2l	equ	0xFD9
 25009                           status	equ	0xFD8
 25010                           
 25011 ;; *************** function _TMR3_StartTimer *****************
 25012 ;; Defined at:
 25013 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 25014 ;; Parameters:    Size  Location     Type
 25015 ;;		None
 25016 ;; Auto vars:     Size  Location     Type
 25017 ;;		None
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  1    wreg      void 
 25020 ;; Registers used:
 25021 ;;		None
 25022 ;; Tracked objects:
 25023 ;;		On entry : 0/0
 25024 ;;		On exit  : 0/0
 25025 ;;		Unchanged: 0/0
 25026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25027 ;;      Params:         0       0       0       0       0       0       0       0       0
 25028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25030 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25031 ;;Total ram usage:        0 bytes
 25032 ;; Hardware stack levels used:    1
 25033 ;; Hardware stack levels required when called:   11
 25034 ;; This function calls:
 25035 ;;		Nothing
 25036 ;; This function is called by:
 25037 ;;		_TMR3_Initialize
 25038 ;; This function uses a non-reentrant model
 25039 ;;
 25040                           
 25041                           	psect	text97
 25042  00649C                     __ptext97:
 25043                           	opt stack 0
 25044  00649C                     _TMR3_StartTimer:
 25045                           	opt stack 17
 25046                           
 25047                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 25048                           
 25049                           ;incstack = 0
 25050  00649C  80B1               	bsf	4017,0,c	;volatile
 25051  00649E  0012               	return		;funcret
 25052  0064A0                     __end_of_TMR3_StartTimer:
 25053                           	opt stack 0
 25054                           tblptru	equ	0xFF8
 25055                           tblptrh	equ	0xFF7
 25056                           tblptrl	equ	0xFF6
 25057                           tablat	equ	0xFF5
 25058                           prodh	equ	0xFF4
 25059                           prodl	equ	0xFF3
 25060                           intcon	equ	0xFF2
 25061                           intcon3	equ	0xFF0
 25062                           indf0	equ	0xFEF
 25063                           postinc0	equ	0xFEE
 25064                           fsr0h	equ	0xFEA
 25065                           fsr0l	equ	0xFE9
 25066                           wreg	equ	0xFE8
 25067                           indf1	equ	0xFE7
 25068                           postdec1	equ	0xFE5
 25069                           fsr1h	equ	0xFE2
 25070                           fsr1l	equ	0xFE1
 25071                           indf2	equ	0xFDF
 25072                           postinc2	equ	0xFDE
 25073                           postdec2	equ	0xFDD
 25074                           plusw2	equ	0xFDB
 25075                           fsr2h	equ	0xFDA
 25076                           fsr2l	equ	0xFD9
 25077                           status	equ	0xFD8
 25078                           
 25079 ;; *************** function _TMR2_Initialize *****************
 25080 ;; Defined at:
 25081 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;		None
 25084 ;; Auto vars:     Size  Location     Type
 25085 ;;		None
 25086 ;; Return value:  Size  Location     Type
 25087 ;;                  1    wreg      void 
 25088 ;; Registers used:
 25089 ;;		wreg, status,2, cstack
 25090 ;; Tracked objects:
 25091 ;;		On entry : 0/0
 25092 ;;		On exit  : 0/0
 25093 ;;		Unchanged: 0/0
 25094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25095 ;;      Params:         0       0       0       0       0       0       0       0       0
 25096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25098 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25099 ;;Total ram usage:        0 bytes
 25100 ;; Hardware stack levels used:    1
 25101 ;; Hardware stack levels required when called:   12
 25102 ;; This function calls:
 25103 ;;		_TMR2_StartTimer
 25104 ;; This function is called by:
 25105 ;;		_SYSTEM_Initialize
 25106 ;; This function uses a non-reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text98
 25110  006384                     __ptext98:
 25111                           	opt stack 0
 25112  006384                     _TMR2_Initialize:
 25113                           	opt stack 17
 25114                           
 25115                           ;tmr2.c: 62: T2CON = 0x7A;
 25116                           
 25117                           ;incstack = 0
 25118  006384  0E7A               	movlw	122
 25119  006386  6EBA               	movwf	4026,c	;volatile
 25120                           
 25121                           ;tmr2.c: 65: PR2 = 0x9B;
 25122  006388  0E9B               	movlw	155
 25123  00638A  6EBB               	movwf	4027,c	;volatile
 25124                           
 25125                           ;tmr2.c: 68: TMR2 = 0x00;
 25126  00638C  0E00               	movlw	0
 25127  00638E  6EBC               	movwf	4028,c	;volatile
 25128                           
 25129                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 25130  006390  929E               	bcf	3998,1,c	;volatile
 25131                           
 25132                           ;tmr2.c: 74: TMR2_StartTimer();
 25133  006392  EC50  F032         	call	_TMR2_StartTimer	;wreg free
 25134  006396  0012               	return		;funcret
 25135  006398                     __end_of_TMR2_Initialize:
 25136                           	opt stack 0
 25137                           tblptru	equ	0xFF8
 25138                           tblptrh	equ	0xFF7
 25139                           tblptrl	equ	0xFF6
 25140                           tablat	equ	0xFF5
 25141                           prodh	equ	0xFF4
 25142                           prodl	equ	0xFF3
 25143                           intcon	equ	0xFF2
 25144                           intcon3	equ	0xFF0
 25145                           indf0	equ	0xFEF
 25146                           postinc0	equ	0xFEE
 25147                           fsr0h	equ	0xFEA
 25148                           fsr0l	equ	0xFE9
 25149                           wreg	equ	0xFE8
 25150                           indf1	equ	0xFE7
 25151                           postdec1	equ	0xFE5
 25152                           fsr1h	equ	0xFE2
 25153                           fsr1l	equ	0xFE1
 25154                           indf2	equ	0xFDF
 25155                           postinc2	equ	0xFDE
 25156                           postdec2	equ	0xFDD
 25157                           plusw2	equ	0xFDB
 25158                           fsr2h	equ	0xFDA
 25159                           fsr2l	equ	0xFD9
 25160                           status	equ	0xFD8
 25161                           
 25162 ;; *************** function _TMR2_StartTimer *****************
 25163 ;; Defined at:
 25164 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 25165 ;; Parameters:    Size  Location     Type
 25166 ;;		None
 25167 ;; Auto vars:     Size  Location     Type
 25168 ;;		None
 25169 ;; Return value:  Size  Location     Type
 25170 ;;                  1    wreg      void 
 25171 ;; Registers used:
 25172 ;;		None
 25173 ;; Tracked objects:
 25174 ;;		On entry : 0/0
 25175 ;;		On exit  : 0/0
 25176 ;;		Unchanged: 0/0
 25177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25178 ;;      Params:         0       0       0       0       0       0       0       0       0
 25179 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25181 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25182 ;;Total ram usage:        0 bytes
 25183 ;; Hardware stack levels used:    1
 25184 ;; Hardware stack levels required when called:   11
 25185 ;; This function calls:
 25186 ;;		Nothing
 25187 ;; This function is called by:
 25188 ;;		_TMR2_Initialize
 25189 ;; This function uses a non-reentrant model
 25190 ;;
 25191                           
 25192                           	psect	text99
 25193  0064A0                     __ptext99:
 25194                           	opt stack 0
 25195  0064A0                     _TMR2_StartTimer:
 25196                           	opt stack 17
 25197                           
 25198                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 25199                           
 25200                           ;incstack = 0
 25201  0064A0  84BA               	bsf	4026,2,c	;volatile
 25202  0064A2  0012               	return		;funcret
 25203  0064A4                     __end_of_TMR2_StartTimer:
 25204                           	opt stack 0
 25205                           tblptru	equ	0xFF8
 25206                           tblptrh	equ	0xFF7
 25207                           tblptrl	equ	0xFF6
 25208                           tablat	equ	0xFF5
 25209                           prodh	equ	0xFF4
 25210                           prodl	equ	0xFF3
 25211                           intcon	equ	0xFF2
 25212                           intcon3	equ	0xFF0
 25213                           indf0	equ	0xFEF
 25214                           postinc0	equ	0xFEE
 25215                           fsr0h	equ	0xFEA
 25216                           fsr0l	equ	0xFE9
 25217                           wreg	equ	0xFE8
 25218                           indf1	equ	0xFE7
 25219                           postdec1	equ	0xFE5
 25220                           fsr1h	equ	0xFE2
 25221                           fsr1l	equ	0xFE1
 25222                           indf2	equ	0xFDF
 25223                           postinc2	equ	0xFDE
 25224                           postdec2	equ	0xFDD
 25225                           plusw2	equ	0xFDB
 25226                           fsr2h	equ	0xFDA
 25227                           fsr2l	equ	0xFD9
 25228                           status	equ	0xFD8
 25229                           
 25230 ;; *************** function _TMR1_Initialize *****************
 25231 ;; Defined at:
 25232 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;		None
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;		None
 25237 ;; Return value:  Size  Location     Type
 25238 ;;                  1    wreg      void 
 25239 ;; Registers used:
 25240 ;;		wreg, status,2, status,0, cstack
 25241 ;; Tracked objects:
 25242 ;;		On entry : 0/0
 25243 ;;		On exit  : 0/0
 25244 ;;		Unchanged: 0/0
 25245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25246 ;;      Params:         0       0       0       0       0       0       0       0       0
 25247 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25248 ;;      Temps:          0       2       0       0       0       0       0       0       0
 25249 ;;      Totals:         0       2       0       0       0       0       0       0       0
 25250 ;;Total ram usage:        2 bytes
 25251 ;; Hardware stack levels used:    1
 25252 ;; Hardware stack levels required when called:   12
 25253 ;; This function calls:
 25254 ;;		_TMR1_StartTimer
 25255 ;; This function is called by:
 25256 ;;		_SYSTEM_Initialize
 25257 ;; This function uses a non-reentrant model
 25258 ;;
 25259                           
 25260                           	psect	text100
 25261  005F42                     __ptext100:
 25262                           	opt stack 0
 25263  005F42                     _TMR1_Initialize:
 25264                           	opt stack 17
 25265                           
 25266                           ;tmr1.c: 68: T1CON = 0x00;
 25267                           
 25268                           ;incstack = 0
 25269  005F42  0E00               	movlw	0
 25270  005F44  6ECD               	movwf	4045,c	;volatile
 25271                           
 25272                           ;tmr1.c: 71: T1GCON = 0x00;
 25273  005F46  0E00               	movlw	0
 25274  005F48  6ECC               	movwf	4044,c	;volatile
 25275                           
 25276                           ;tmr1.c: 74: TMR1H = 0xD0;
 25277  005F4A  0ED0               	movlw	208
 25278  005F4C  6ECF               	movwf	4047,c	;volatile
 25279                           
 25280                           ;tmr1.c: 77: TMR1L = 0x20;
 25281  005F4E  0E20               	movlw	32
 25282  005F50  6ECE               	movwf	4046,c	;volatile
 25283                           
 25284                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 25285  005F52  50CE               	movf	4046,w,c	;volatile
 25286  005F54  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 25287  005F58  0100               	movlb	0	; () banked
 25288  005F5A  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 25289  005F5C  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25290  005F60  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 25291  005F62  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 25292  005F64  6E38               	movwf	_timer1ReloadVal,c	;volatile
 25293  005F66  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 25294  005F68  6E39               	movwf	_timer1ReloadVal+1,c	;volatile
 25295                           
 25296                           ; BSR set to: 0
 25297                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 25298  005F6A  909E               	bcf	3998,0,c	;volatile
 25299                           
 25300                           ; BSR set to: 0
 25301                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 25302  005F6C  809D               	bsf	3997,0,c	;volatile
 25303                           
 25304                           ; BSR set to: 0
 25305                           ;tmr1.c: 89: TMR1_StartTimer();
 25306  005F6E  EC52  F032         	call	_TMR1_StartTimer	;wreg free
 25307  005F72  0012               	return		;funcret
 25308  005F74                     __end_of_TMR1_Initialize:
 25309                           	opt stack 0
 25310                           tblptru	equ	0xFF8
 25311                           tblptrh	equ	0xFF7
 25312                           tblptrl	equ	0xFF6
 25313                           tablat	equ	0xFF5
 25314                           prodh	equ	0xFF4
 25315                           prodl	equ	0xFF3
 25316                           intcon	equ	0xFF2
 25317                           intcon3	equ	0xFF0
 25318                           indf0	equ	0xFEF
 25319                           postinc0	equ	0xFEE
 25320                           fsr0h	equ	0xFEA
 25321                           fsr0l	equ	0xFE9
 25322                           wreg	equ	0xFE8
 25323                           indf1	equ	0xFE7
 25324                           postdec1	equ	0xFE5
 25325                           fsr1h	equ	0xFE2
 25326                           fsr1l	equ	0xFE1
 25327                           indf2	equ	0xFDF
 25328                           postinc2	equ	0xFDE
 25329                           postdec2	equ	0xFDD
 25330                           plusw2	equ	0xFDB
 25331                           fsr2h	equ	0xFDA
 25332                           fsr2l	equ	0xFD9
 25333                           status	equ	0xFD8
 25334                           
 25335 ;; *************** function _TMR1_StartTimer *****************
 25336 ;; Defined at:
 25337 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;		None
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  1    wreg      void 
 25344 ;; Registers used:
 25345 ;;		None
 25346 ;; Tracked objects:
 25347 ;;		On entry : 0/0
 25348 ;;		On exit  : 0/0
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25351 ;;      Params:         0       0       0       0       0       0       0       0       0
 25352 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25354 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25355 ;;Total ram usage:        0 bytes
 25356 ;; Hardware stack levels used:    1
 25357 ;; Hardware stack levels required when called:   11
 25358 ;; This function calls:
 25359 ;;		Nothing
 25360 ;; This function is called by:
 25361 ;;		_TMR1_Initialize
 25362 ;; This function uses a non-reentrant model
 25363 ;;
 25364                           
 25365                           	psect	text101
 25366  0064A4                     __ptext101:
 25367                           	opt stack 0
 25368  0064A4                     _TMR1_StartTimer:
 25369                           	opt stack 17
 25370                           
 25371                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 25372                           
 25373                           ;incstack = 0
 25374  0064A4  80CD               	bsf	4045,0,c	;volatile
 25375  0064A6  0012               	return		;funcret
 25376  0064A8                     __end_of_TMR1_StartTimer:
 25377                           	opt stack 0
 25378                           tblptru	equ	0xFF8
 25379                           tblptrh	equ	0xFF7
 25380                           tblptrl	equ	0xFF6
 25381                           tablat	equ	0xFF5
 25382                           prodh	equ	0xFF4
 25383                           prodl	equ	0xFF3
 25384                           intcon	equ	0xFF2
 25385                           intcon3	equ	0xFF0
 25386                           indf0	equ	0xFEF
 25387                           postinc0	equ	0xFEE
 25388                           fsr0h	equ	0xFEA
 25389                           fsr0l	equ	0xFE9
 25390                           wreg	equ	0xFE8
 25391                           indf1	equ	0xFE7
 25392                           postdec1	equ	0xFE5
 25393                           fsr1h	equ	0xFE2
 25394                           fsr1l	equ	0xFE1
 25395                           indf2	equ	0xFDF
 25396                           postinc2	equ	0xFDE
 25397                           postdec2	equ	0xFDD
 25398                           plusw2	equ	0xFDB
 25399                           fsr2h	equ	0xFDA
 25400                           fsr2l	equ	0xFD9
 25401                           status	equ	0xFD8
 25402                           
 25403 ;; *************** function _TMR0_Initialize *****************
 25404 ;; Defined at:
 25405 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 25406 ;; Parameters:    Size  Location     Type
 25407 ;;		None
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;		None
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, status,2, cstack
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25419 ;;      Params:         0       0       0       0       0       0       0       0       0
 25420 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25422 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25423 ;;Total ram usage:        0 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; Hardware stack levels required when called:   12
 25426 ;; This function calls:
 25427 ;;		_TMR0_StartTimer
 25428 ;; This function is called by:
 25429 ;;		_SYSTEM_Initialize
 25430 ;; This function uses a non-reentrant model
 25431 ;;
 25432                           
 25433                           	psect	text102
 25434  006262                     __ptext102:
 25435                           	opt stack 0
 25436  006262                     _TMR0_Initialize:
 25437                           	opt stack 17
 25438                           
 25439                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 25440                           
 25441                           ;incstack = 0
 25442  006262  9AD5               	bcf	4053,5,c	;volatile
 25443                           
 25444                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 25445  006264  98D5               	bcf	4053,4,c	;volatile
 25446                           
 25447                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 25448  006266  96D5               	bcf	4053,3,c	;volatile
 25449                           
 25450                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 25451  006268  94D5               	bcf	4053,2,c	;volatile
 25452                           
 25453                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 25454  00626A  82D5               	bsf	4053,1,c	;volatile
 25455                           
 25456                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 25457  00626C  90D5               	bcf	4053,0,c	;volatile
 25458                           
 25459                           ;tmr0.c: 77: timer0ReloadVal=110;
 25460  00626E  0E00               	movlw	0
 25461  006270  0101               	movlb	1	; () banked
 25462  006272  6F19               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 25463  006274  0E6E               	movlw	110
 25464  006276  6F18               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 25465                           
 25466                           ; BSR set to: 1
 25467                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 25468  006278  94F2               	bcf	intcon,2,c	;volatile
 25469                           
 25470                           ; BSR set to: 1
 25471                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 25472  00627A  8AF2               	bsf	intcon,5,c	;volatile
 25473                           
 25474                           ; BSR set to: 1
 25475                           ;tmr0.c: 86: TMR0_StartTimer();
 25476  00627C  EC54  F032         	call	_TMR0_StartTimer	;wreg free
 25477  006280  0012               	return		;funcret
 25478  006282                     __end_of_TMR0_Initialize:
 25479                           	opt stack 0
 25480                           tblptru	equ	0xFF8
 25481                           tblptrh	equ	0xFF7
 25482                           tblptrl	equ	0xFF6
 25483                           tablat	equ	0xFF5
 25484                           prodh	equ	0xFF4
 25485                           prodl	equ	0xFF3
 25486                           intcon	equ	0xFF2
 25487                           intcon3	equ	0xFF0
 25488                           indf0	equ	0xFEF
 25489                           postinc0	equ	0xFEE
 25490                           fsr0h	equ	0xFEA
 25491                           fsr0l	equ	0xFE9
 25492                           wreg	equ	0xFE8
 25493                           indf1	equ	0xFE7
 25494                           postdec1	equ	0xFE5
 25495                           fsr1h	equ	0xFE2
 25496                           fsr1l	equ	0xFE1
 25497                           indf2	equ	0xFDF
 25498                           postinc2	equ	0xFDE
 25499                           postdec2	equ	0xFDD
 25500                           plusw2	equ	0xFDB
 25501                           fsr2h	equ	0xFDA
 25502                           fsr2l	equ	0xFD9
 25503                           status	equ	0xFD8
 25504                           
 25505 ;; *************** function _TMR0_StartTimer *****************
 25506 ;; Defined at:
 25507 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 25508 ;; Parameters:    Size  Location     Type
 25509 ;;		None
 25510 ;; Auto vars:     Size  Location     Type
 25511 ;;		None
 25512 ;; Return value:  Size  Location     Type
 25513 ;;                  1    wreg      void 
 25514 ;; Registers used:
 25515 ;;		None
 25516 ;; Tracked objects:
 25517 ;;		On entry : 0/0
 25518 ;;		On exit  : 0/0
 25519 ;;		Unchanged: 0/0
 25520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25521 ;;      Params:         0       0       0       0       0       0       0       0       0
 25522 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25524 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25525 ;;Total ram usage:        0 bytes
 25526 ;; Hardware stack levels used:    1
 25527 ;; Hardware stack levels required when called:   11
 25528 ;; This function calls:
 25529 ;;		Nothing
 25530 ;; This function is called by:
 25531 ;;		_TMR0_Initialize
 25532 ;; This function uses a non-reentrant model
 25533 ;;
 25534                           
 25535                           	psect	text103
 25536  0064A8                     __ptext103:
 25537                           	opt stack 0
 25538  0064A8                     _TMR0_StartTimer:
 25539                           	opt stack 17
 25540                           
 25541                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 25542                           
 25543                           ;incstack = 0
 25544  0064A8  8ED5               	bsf	4053,7,c	;volatile
 25545  0064AA  0012               	return		;funcret
 25546  0064AC                     __end_of_TMR0_StartTimer:
 25547                           	opt stack 0
 25548                           tblptru	equ	0xFF8
 25549                           tblptrh	equ	0xFF7
 25550                           tblptrl	equ	0xFF6
 25551                           tablat	equ	0xFF5
 25552                           prodh	equ	0xFF4
 25553                           prodl	equ	0xFF3
 25554                           intcon	equ	0xFF2
 25555                           intcon3	equ	0xFF0
 25556                           indf0	equ	0xFEF
 25557                           postinc0	equ	0xFEE
 25558                           fsr0h	equ	0xFEA
 25559                           fsr0l	equ	0xFE9
 25560                           wreg	equ	0xFE8
 25561                           indf1	equ	0xFE7
 25562                           postdec1	equ	0xFE5
 25563                           fsr1h	equ	0xFE2
 25564                           fsr1l	equ	0xFE1
 25565                           indf2	equ	0xFDF
 25566                           postinc2	equ	0xFDE
 25567                           postdec2	equ	0xFDD
 25568                           plusw2	equ	0xFDB
 25569                           fsr2h	equ	0xFDA
 25570                           fsr2l	equ	0xFD9
 25571                           status	equ	0xFD8
 25572                           
 25573 ;; *************** function _PIN_MANAGER_Initialize *****************
 25574 ;; Defined at:
 25575 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;		None
 25578 ;; Auto vars:     Size  Location     Type
 25579 ;;		None
 25580 ;; Return value:  Size  Location     Type
 25581 ;;                  1    wreg      void 
 25582 ;; Registers used:
 25583 ;;		wreg, status,2
 25584 ;; Tracked objects:
 25585 ;;		On entry : 0/0
 25586 ;;		On exit  : 0/0
 25587 ;;		Unchanged: 0/0
 25588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25589 ;;      Params:         0       0       0       0       0       0       0       0       0
 25590 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25592 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25593 ;;Total ram usage:        0 bytes
 25594 ;; Hardware stack levels used:    1
 25595 ;; Hardware stack levels required when called:   11
 25596 ;; This function calls:
 25597 ;;		Nothing
 25598 ;; This function is called by:
 25599 ;;		_moteApp_GoToSleep
 25600 ;;		_SYSTEM_Initialize
 25601 ;; This function uses a non-reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text104
 25605  005982                     __ptext104:
 25606                           	opt stack 0
 25607  005982                     _PIN_MANAGER_Initialize:
 25608                           	opt stack 16
 25609                           
 25610                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 25611                           
 25612                           ;incstack = 0
 25613  005982  8092               	bsf	3986,0,c	;volatile
 25614                           
 25615                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 25616  005984  8292               	bsf	3986,1,c	;volatile
 25617                           
 25618                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 25619  005986  8492               	bsf	3986,2,c	;volatile
 25620                           
 25621                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 25622  005988  8692               	bsf	3986,3,c	;volatile
 25623                           
 25624                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 25625  00598A  948D               	bcf	3981,2,c	;volatile
 25626                           
 25627                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 25628  00598C  9496               	bcf	3990,2,c	;volatile
 25629                           
 25630                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 25631  00598E  9A92               	bcf	3986,5,c	;volatile
 25632                           
 25633                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 25634  005990  9C92               	bcf	3986,6,c	;volatile
 25635                           
 25636                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 25637  005992  9E92               	bcf	3986,7,c	;volatile
 25638                           
 25639                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 25640  005994  9EF1               	bcf	intcon2,7,c	;volatile
 25641                           
 25642                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 25643  005996  8E86               	bsf	3974,7,c	;volatile
 25644                           
 25645                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 25646  005998  86F2               	bsf	intcon,3,c	;volatile
 25647                           
 25648                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 25649  00599A  8293               	bsf	3987,1,c	;volatile
 25650                           
 25651                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 25652  00599C  8093               	bsf	3987,0,c	;volatile
 25653                           
 25654                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 25655  00599E  8E93               	bsf	3987,7,c	;volatile
 25656                           
 25657                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 25658  0059A0  9493               	bcf	3987,2,c	;volatile
 25659                           
 25660                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 25661  0059A2  9693               	bcf	3987,3,c	;volatile
 25662                           
 25663                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 25664  0059A4  9893               	bcf	3987,4,c	;volatile
 25665                           
 25666                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 25667  0059A6  9A93               	bcf	3987,5,c	;volatile
 25668                           
 25669                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 25670  0059A8  9094               	bcf	3988,0,c	;volatile
 25671                           
 25672                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 25673  0059AA  9294               	bcf	3988,1,c	;volatile
 25674                           
 25675                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 25676  0059AC  8494               	bsf	3988,2,c	;volatile
 25677                           
 25678                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 25679  0059AE  9C94               	bcf	3988,6,c	;volatile
 25680                           
 25681                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 25682  0059B0  8E94               	bsf	3988,7,c	;volatile
 25683                           
 25684                           ;pin_manager.c: 83: TRISD = 0b00000000;
 25685  0059B2  0E00               	movlw	0
 25686  0059B4  6E95               	movwf	3989,c	;volatile
 25687                           
 25688                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 25689  0059B6  9496               	bcf	3990,2,c	;volatile
 25690                           
 25691                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 25692  0059B8  9A89               	bcf	3977,5,c	;volatile
 25693                           
 25694                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 25695  0059BA  9C89               	bcf	3977,6,c	;volatile
 25696                           
 25697                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 25698  0059BC  9E89               	bcf	3977,7,c	;volatile
 25699                           
 25700                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 25701  0059BE  948A               	bcf	3978,2,c	;volatile
 25702                           
 25703                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 25704  0059C0  948B               	bcf	3979,2,c	;volatile
 25705                           
 25706                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 25707  0059C2  9C8B               	bcf	3979,6,c	;volatile
 25708                           
 25709                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 25710  0059C4  848D               	bsf	3981,2,c	;volatile
 25711                           
 25712                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 25713  0059C6  010F               	movlb	15	; () banked
 25714  0059C8  915B               	bcf	91,0,b	;volatile
 25715                           
 25716                           ; BSR set to: 15
 25717                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 25718  0059CA  835B               	bsf	91,1,b	;volatile
 25719                           
 25720                           ; BSR set to: 15
 25721                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 25722  0059CC  855B               	bsf	91,2,b	;volatile
 25723                           
 25724                           ; BSR set to: 15
 25725                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 25726  0059CE  875B               	bsf	91,3,b	;volatile
 25727                           
 25728                           ; BSR set to: 15
 25729                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 25730  0059D0  9F5D               	bcf	93,7,b	;volatile
 25731                           
 25732                           ; BSR set to: 15
 25733                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 25734  0059D2  9D5D               	bcf	93,6,b	;volatile
 25735                           
 25736                           ; BSR set to: 15
 25737  0059D4  0012               	return		;funcret
 25738  0059D6                     __end_of_PIN_MANAGER_Initialize:
 25739                           	opt stack 0
 25740                           tblptru	equ	0xFF8
 25741                           tblptrh	equ	0xFF7
 25742                           tblptrl	equ	0xFF6
 25743                           tablat	equ	0xFF5
 25744                           prodh	equ	0xFF4
 25745                           prodl	equ	0xFF3
 25746                           intcon	equ	0xFF2
 25747                           intcon2	equ	0xFF1
 25748                           intcon3	equ	0xFF0
 25749                           indf0	equ	0xFEF
 25750                           postinc0	equ	0xFEE
 25751                           fsr0h	equ	0xFEA
 25752                           fsr0l	equ	0xFE9
 25753                           wreg	equ	0xFE8
 25754                           indf1	equ	0xFE7
 25755                           postdec1	equ	0xFE5
 25756                           fsr1h	equ	0xFE2
 25757                           fsr1l	equ	0xFE1
 25758                           indf2	equ	0xFDF
 25759                           postinc2	equ	0xFDE
 25760                           postdec2	equ	0xFDD
 25761                           plusw2	equ	0xFDB
 25762                           fsr2h	equ	0xFDA
 25763                           fsr2l	equ	0xFD9
 25764                           status	equ	0xFD8
 25765                           
 25766 ;; *************** function _OSCILLATOR_Initialize *****************
 25767 ;; Defined at:
 25768 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 25769 ;; Parameters:    Size  Location     Type
 25770 ;;		None
 25771 ;; Auto vars:     Size  Location     Type
 25772 ;;		None
 25773 ;; Return value:  Size  Location     Type
 25774 ;;                  1    wreg      void 
 25775 ;; Registers used:
 25776 ;;		wreg, status,2
 25777 ;; Tracked objects:
 25778 ;;		On entry : 0/0
 25779 ;;		On exit  : 0/0
 25780 ;;		Unchanged: 0/0
 25781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25782 ;;      Params:         0       0       0       0       0       0       0       0       0
 25783 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25784 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25785 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25786 ;;Total ram usage:        0 bytes
 25787 ;; Hardware stack levels used:    1
 25788 ;; Hardware stack levels required when called:   11
 25789 ;; This function calls:
 25790 ;;		Nothing
 25791 ;; This function is called by:
 25792 ;;		_SYSTEM_Initialize
 25793 ;; This function uses a non-reentrant model
 25794 ;;
 25795                           
 25796                           	psect	text105
 25797  00631C                     __ptext105:
 25798                           	opt stack 0
 25799  00631C                     _OSCILLATOR_Initialize:
 25800                           	opt stack 18
 25801                           
 25802                           ;mcc.c: 113: OSCTUNE = 0x80;
 25803                           
 25804                           ; BSR set to: 15
 25805                           ;incstack = 0
 25806  00631C  0E80               	movlw	128
 25807  00631E  6E9B               	movwf	3995,c	;volatile
 25808                           
 25809                           ;mcc.c: 114: OSCCON = 0x70;
 25810  006320  0E70               	movlw	112
 25811  006322  6ED3               	movwf	4051,c	;volatile
 25812                           
 25813                           ;mcc.c: 115: OSCCON2 = 0x10;
 25814  006324  0E10               	movlw	16
 25815  006326  6ED2               	movwf	4050,c	;volatile
 25816  006328  AED2               	btfss	4050,7,c	;volatile
 25817  00632A  D7FE               	goto	l1439
 25818                           
 25819                           ;mcc.c: 117: ACTCON = 0x90;
 25820  00632C  0E90               	movlw	144
 25821  00632E  6EB5               	movwf	4021,c	;volatile
 25822  006330  0012               	return		;funcret
 25823  006332                     __end_of_OSCILLATOR_Initialize:
 25824                           	opt stack 0
 25825                           tblptru	equ	0xFF8
 25826                           tblptrh	equ	0xFF7
 25827                           tblptrl	equ	0xFF6
 25828                           tablat	equ	0xFF5
 25829                           prodh	equ	0xFF4
 25830                           prodl	equ	0xFF3
 25831                           intcon	equ	0xFF2
 25832                           intcon2	equ	0xFF1
 25833                           intcon3	equ	0xFF0
 25834                           indf0	equ	0xFEF
 25835                           postinc0	equ	0xFEE
 25836                           fsr0h	equ	0xFEA
 25837                           fsr0l	equ	0xFE9
 25838                           wreg	equ	0xFE8
 25839                           indf1	equ	0xFE7
 25840                           postdec1	equ	0xFE5
 25841                           fsr1h	equ	0xFE2
 25842                           fsr1l	equ	0xFE1
 25843                           indf2	equ	0xFDF
 25844                           postinc2	equ	0xFDE
 25845                           postdec2	equ	0xFDD
 25846                           plusw2	equ	0xFDB
 25847                           fsr2h	equ	0xFDA
 25848                           fsr2l	equ	0xFD9
 25849                           status	equ	0xFD8
 25850                           
 25851 ;; *************** function _InitSwUart *****************
 25852 ;; Defined at:
 25853 ;;		line 82 in file "../Includes/Drivers/swUart.c"
 25854 ;; Parameters:    Size  Location     Type
 25855 ;;		None
 25856 ;; Auto vars:     Size  Location     Type
 25857 ;;		None
 25858 ;; Return value:  Size  Location     Type
 25859 ;;                  1    wreg      void 
 25860 ;; Registers used:
 25861 ;;		wreg, status,2
 25862 ;; Tracked objects:
 25863 ;;		On entry : 0/0
 25864 ;;		On exit  : 0/0
 25865 ;;		Unchanged: 0/0
 25866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25867 ;;      Params:         0       0       0       0       0       0       0       0       0
 25868 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25869 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25870 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25871 ;;Total ram usage:        0 bytes
 25872 ;; Hardware stack levels used:    1
 25873 ;; Hardware stack levels required when called:   11
 25874 ;; This function calls:
 25875 ;;		Nothing
 25876 ;; This function is called by:
 25877 ;;		_SYSTEM_Initialize
 25878 ;; This function uses a non-reentrant model
 25879 ;;
 25880                           
 25881                           	psect	text106
 25882  006220                     __ptext106:
 25883                           	opt stack 0
 25884  006220                     _InitSwUart:
 25885                           	opt stack 18
 25886                           
 25887                           ;swUart.c: 84: status = SILENT;
 25888                           
 25889                           ;incstack = 0
 25890  006220  0E00               	movlw	0
 25891  006222  6E4D               	movwf	_status,c
 25892                           
 25893                           ;swUart.c: 85: n_bit = 0;
 25894  006224  0E00               	movlw	0
 25895  006226  6E5A               	movwf	_n_bit,c
 25896                           
 25897                           ;swUart.c: 86: rx_data = 0;
 25898  006228  0E00               	movlw	0
 25899  00622A  6E4C               	movwf	_rx_data,c
 25900                           
 25901                           ;swUart.c: 87: cs = 0;
 25902  00622C  0E00               	movlw	0
 25903  00622E  0101               	movlb	1	; () banked
 25904  006230  6F20               	movwf	_cs& (0+255),b
 25905                           
 25906                           ;swUart.c: 88: countBitsSilent = 0;
 25907  006232  0E00               	movlw	0
 25908  006234  6E4B               	movwf	_countBitsSilent,c
 25909                           
 25910                           ;swUart.c: 90: countOut = 0;
 25911  006236  0E00               	movlw	0
 25912  006238  0100               	movlb	0	; () banked
 25913  00623A  6FE8               	movwf	_countOut& (0+255),b
 25914                           
 25915                           ;swUart.c: 91: countIn = 0;
 25916  00623C  0E00               	movlw	0
 25917  00623E  6FE7               	movwf	_countIn& (0+255),b
 25918                           
 25919                           ; BSR set to: 0
 25920  006240  0012               	return		;funcret
 25921  006242                     __end_of_InitSwUart:
 25922                           	opt stack 0
 25923                           tblptru	equ	0xFF8
 25924                           tblptrh	equ	0xFF7
 25925                           tblptrl	equ	0xFF6
 25926                           tablat	equ	0xFF5
 25927                           prodh	equ	0xFF4
 25928                           prodl	equ	0xFF3
 25929                           intcon	equ	0xFF2
 25930                           intcon2	equ	0xFF1
 25931                           intcon3	equ	0xFF0
 25932                           indf0	equ	0xFEF
 25933                           postinc0	equ	0xFEE
 25934                           fsr0h	equ	0xFEA
 25935                           fsr0l	equ	0xFE9
 25936                           wreg	equ	0xFE8
 25937                           indf1	equ	0xFE7
 25938                           postdec1	equ	0xFE5
 25939                           fsr1h	equ	0xFE2
 25940                           fsr1l	equ	0xFE1
 25941                           indf2	equ	0xFDF
 25942                           postinc2	equ	0xFDE
 25943                           postdec2	equ	0xFDD
 25944                           plusw2	equ	0xFDB
 25945                           fsr2h	equ	0xFDA
 25946                           fsr2l	equ	0xFD9
 25947                           status	equ	0xFD8
 25948                           
 25949 ;; *************** function _EUSART_Initialize *****************
 25950 ;; Defined at:
 25951 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 25952 ;; Parameters:    Size  Location     Type
 25953 ;;		None
 25954 ;; Auto vars:     Size  Location     Type
 25955 ;;		None
 25956 ;; Return value:  Size  Location     Type
 25957 ;;                  1    wreg      void 
 25958 ;; Registers used:
 25959 ;;		wreg, status,2
 25960 ;; Tracked objects:
 25961 ;;		On entry : 0/0
 25962 ;;		On exit  : 0/0
 25963 ;;		Unchanged: 0/0
 25964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25965 ;;      Params:         0       0       0       0       0       0       0       0       0
 25966 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25967 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25968 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25969 ;;Total ram usage:        0 bytes
 25970 ;; Hardware stack levels used:    1
 25971 ;; Hardware stack levels required when called:   11
 25972 ;; This function calls:
 25973 ;;		Nothing
 25974 ;; This function is called by:
 25975 ;;		_SYSTEM_Initialize
 25976 ;; This function uses a non-reentrant model
 25977 ;;
 25978                           
 25979                           	psect	text107
 25980  005E06                     __ptext107:
 25981                           	opt stack 0
 25982  005E06                     _EUSART_Initialize:
 25983                           	opt stack 18
 25984                           
 25985                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 25986                           
 25987                           ; BSR set to: 0
 25988                           ;incstack = 0
 25989  005E06  9A9D               	bcf	3997,5,c	;volatile
 25990                           
 25991                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 25992  005E08  989D               	bcf	3997,4,c	;volatile
 25993                           
 25994                           ;eusart.c: 85: BAUDCON = 0x48;
 25995  005E0A  0E48               	movlw	72
 25996  005E0C  6EB8               	movwf	4024,c	;volatile
 25997                           
 25998                           ;eusart.c: 88: RCSTA = 0x90;
 25999  005E0E  0E90               	movlw	144
 26000  005E10  6EAB               	movwf	4011,c	;volatile
 26001                           
 26002                           ;eusart.c: 91: TXSTA = 0x26;
 26003  005E12  0E26               	movlw	38
 26004  005E14  6EAC               	movwf	4012,c	;volatile
 26005                           
 26006                           ;eusart.c: 95: SPBRG = 0xD0;
 26007  005E16  0ED0               	movlw	208
 26008  005E18  6EAF               	movwf	4015,c	;volatile
 26009                           
 26010                           ;eusart.c: 100: SPBRGH = 0x00;
 26011  005E1A  0E00               	movlw	0
 26012  005E1C  6EB0               	movwf	4016,c	;volatile
 26013                           
 26014                           ;eusart.c: 103: eusartTxHead = 0;
 26015  005E1E  0E00               	movlw	0
 26016  005E20  0100               	movlb	0	; () banked
 26017  005E22  6FE6               	movwf	_eusartTxHead& (0+255),b
 26018                           
 26019                           ;eusart.c: 104: eusartTxTail = 0;
 26020  005E24  0E00               	movlw	0
 26021  005E26  6FE5               	movwf	_eusartTxTail& (0+255),b
 26022                           
 26023                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 26024  005E28  0E40               	movlw	64
 26025  005E2A  6FE4               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 26026                           
 26027                           ;eusart.c: 107: eusartRxHead = 0;
 26028  005E2C  0E00               	movlw	0
 26029  005E2E  6FE3               	movwf	_eusartRxHead& (0+255),b
 26030                           
 26031                           ;eusart.c: 108: eusartRxTail = 0;
 26032  005E30  0E00               	movlw	0
 26033  005E32  6FE2               	movwf	_eusartRxTail& (0+255),b
 26034                           
 26035                           ;eusart.c: 109: eusartRxCount = 0;
 26036  005E34  0E00               	movlw	0
 26037  005E36  6FF7               	movwf	_eusartRxCount& (0+255),b	;volatile
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 26041  005E38  8A9D               	bsf	3997,5,c	;volatile
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 26045  005E3A  88AB               	bsf	4011,4,c	;volatile
 26046                           
 26047                           ; BSR set to: 0
 26048  005E3C  0012               	return		;funcret
 26049  005E3E                     __end_of_EUSART_Initialize:
 26050                           	opt stack 0
 26051                           tblptru	equ	0xFF8
 26052                           tblptrh	equ	0xFF7
 26053                           tblptrl	equ	0xFF6
 26054                           tablat	equ	0xFF5
 26055                           prodh	equ	0xFF4
 26056                           prodl	equ	0xFF3
 26057                           intcon	equ	0xFF2
 26058                           intcon2	equ	0xFF1
 26059                           intcon3	equ	0xFF0
 26060                           indf0	equ	0xFEF
 26061                           postinc0	equ	0xFEE
 26062                           fsr0h	equ	0xFEA
 26063                           fsr0l	equ	0xFE9
 26064                           wreg	equ	0xFE8
 26065                           indf1	equ	0xFE7
 26066                           postdec1	equ	0xFE5
 26067                           fsr1h	equ	0xFE2
 26068                           fsr1l	equ	0xFE1
 26069                           indf2	equ	0xFDF
 26070                           postinc2	equ	0xFDE
 26071                           postdec2	equ	0xFDD
 26072                           plusw2	equ	0xFDB
 26073                           fsr2h	equ	0xFDA
 26074                           fsr2l	equ	0xFD9
 26075                           status	equ	0xFD8
 26076                           
 26077 ;; *************** function _CMP1_Initialize *****************
 26078 ;; Defined at:
 26079 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 26080 ;; Parameters:    Size  Location     Type
 26081 ;;		None
 26082 ;; Auto vars:     Size  Location     Type
 26083 ;;		None
 26084 ;; Return value:  Size  Location     Type
 26085 ;;                  1    wreg      void 
 26086 ;; Registers used:
 26087 ;;		wreg, status,2
 26088 ;; Tracked objects:
 26089 ;;		On entry : 0/0
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26093 ;;      Params:         0       0       0       0       0       0       0       0       0
 26094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26096 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26097 ;;Total ram usage:        0 bytes
 26098 ;; Hardware stack levels used:    1
 26099 ;; Hardware stack levels required when called:   11
 26100 ;; This function calls:
 26101 ;;		Nothing
 26102 ;; This function is called by:
 26103 ;;		_SYSTEM_Initialize
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text108
 26108  0063AA                     __ptext108:
 26109                           	opt stack 0
 26110  0063AA                     _CMP1_Initialize:
 26111                           	opt stack 18
 26112                           
 26113                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;incstack = 0
 26117  0063AA  9CA0               	bcf	4000,6,c	;volatile
 26118                           
 26119                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 26120  0063AC  0E9C               	movlw	156
 26121  0063AE  6E98               	movwf	3992,c	;volatile
 26122                           
 26123                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 26124  0063B0  8A9A               	bsf	3994,5,c	;volatile
 26125                           
 26126                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 26127  0063B2  929A               	bcf	3994,1,c	;volatile
 26128                           
 26129                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 26130  0063B4  969A               	bcf	3994,3,c	;volatile
 26131                           
 26132                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 26133  0063B6  9CA1               	bcf	4001,6,c	;volatile
 26134                           
 26135                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 26136  0063B8  9CA0               	bcf	4000,6,c	;volatile
 26137  0063BA  0012               	return		;funcret
 26138  0063BC                     __end_of_CMP1_Initialize:
 26139                           	opt stack 0
 26140                           tblptru	equ	0xFF8
 26141                           tblptrh	equ	0xFF7
 26142                           tblptrl	equ	0xFF6
 26143                           tablat	equ	0xFF5
 26144                           prodh	equ	0xFF4
 26145                           prodl	equ	0xFF3
 26146                           intcon	equ	0xFF2
 26147                           intcon2	equ	0xFF1
 26148                           intcon3	equ	0xFF0
 26149                           indf0	equ	0xFEF
 26150                           postinc0	equ	0xFEE
 26151                           fsr0h	equ	0xFEA
 26152                           fsr0l	equ	0xFE9
 26153                           wreg	equ	0xFE8
 26154                           indf1	equ	0xFE7
 26155                           postdec1	equ	0xFE5
 26156                           fsr1h	equ	0xFE2
 26157                           fsr1l	equ	0xFE1
 26158                           indf2	equ	0xFDF
 26159                           postinc2	equ	0xFDE
 26160                           postdec2	equ	0xFDD
 26161                           plusw2	equ	0xFDB
 26162                           fsr2h	equ	0xFDA
 26163                           fsr2l	equ	0xFD9
 26164                           status	equ	0xFD8
 26165                           
 26166 ;; *************** function _ADC_Initialize *****************
 26167 ;; Defined at:
 26168 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 26169 ;; Parameters:    Size  Location     Type
 26170 ;;		None
 26171 ;; Auto vars:     Size  Location     Type
 26172 ;;		None
 26173 ;; Return value:  Size  Location     Type
 26174 ;;                  1    wreg      void 
 26175 ;; Registers used:
 26176 ;;		wreg, status,2
 26177 ;; Tracked objects:
 26178 ;;		On entry : 0/0
 26179 ;;		On exit  : 0/0
 26180 ;;		Unchanged: 0/0
 26181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26182 ;;      Params:         0       0       0       0       0       0       0       0       0
 26183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26185 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26186 ;;Total ram usage:        0 bytes
 26187 ;; Hardware stack levels used:    1
 26188 ;; Hardware stack levels required when called:   11
 26189 ;; This function calls:
 26190 ;;		Nothing
 26191 ;; This function is called by:
 26192 ;;		_SYSTEM_Initialize
 26193 ;; This function uses a non-reentrant model
 26194 ;;
 26195                           
 26196                           	psect	text109
 26197  0062D6                     __ptext109:
 26198                           	opt stack 0
 26199  0062D6                     _ADC_Initialize:
 26200                           	opt stack 18
 26201                           
 26202                           ;adc.c: 68: VREFCON0 = 0b10100000;
 26203                           
 26204                           ;incstack = 0
 26205  0062D6  0EA0               	movlw	160
 26206  0062D8  6E7D               	movwf	3965,c	;volatile
 26207                           
 26208                           ;adc.c: 70: ADCON0 = 0x01;
 26209  0062DA  0E01               	movlw	1
 26210  0062DC  6EC2               	movwf	4034,c	;volatile
 26211                           
 26212                           ;adc.c: 73: ADCON1 = 0x08;
 26213  0062DE  0E08               	movlw	8
 26214  0062E0  6EC1               	movwf	4033,c	;volatile
 26215                           
 26216                           ;adc.c: 76: ADCON2 = 0b10001110;
 26217  0062E2  0E8E               	movlw	142
 26218  0062E4  6EC0               	movwf	4032,c	;volatile
 26219                           
 26220                           ;adc.c: 79: ADRESL = 0x00;
 26221  0062E6  0E00               	movlw	0
 26222  0062E8  6EC3               	movwf	4035,c	;volatile
 26223                           
 26224                           ;adc.c: 82: ADRESH = 0x00;
 26225  0062EA  0E00               	movlw	0
 26226  0062EC  6EC4               	movwf	4036,c	;volatile
 26227  0062EE  0012               	return		;funcret
 26228  0062F0                     __end_of_ADC_Initialize:
 26229                           	opt stack 0
 26230                           tblptru	equ	0xFF8
 26231                           tblptrh	equ	0xFF7
 26232                           tblptrl	equ	0xFF6
 26233                           tablat	equ	0xFF5
 26234                           prodh	equ	0xFF4
 26235                           prodl	equ	0xFF3
 26236                           intcon	equ	0xFF2
 26237                           intcon2	equ	0xFF1
 26238                           intcon3	equ	0xFF0
 26239                           indf0	equ	0xFEF
 26240                           postinc0	equ	0xFEE
 26241                           fsr0h	equ	0xFEA
 26242                           fsr0l	equ	0xFE9
 26243                           wreg	equ	0xFE8
 26244                           indf1	equ	0xFE7
 26245                           postdec1	equ	0xFE5
 26246                           fsr1h	equ	0xFE2
 26247                           fsr1l	equ	0xFE1
 26248                           indf2	equ	0xFDF
 26249                           postinc2	equ	0xFDE
 26250                           postdec2	equ	0xFDD
 26251                           plusw2	equ	0xFDB
 26252                           fsr2h	equ	0xFDA
 26253                           fsr2l	equ	0xFD9
 26254                           status	equ	0xFD8
 26255                           
 26256 ;; *************** function _MOTEapp_handlerState *****************
 26257 ;; Defined at:
 26258 ;;		line 205 in file "../Includes/Board/MOTEapp.c"
 26259 ;; Parameters:    Size  Location     Type
 26260 ;;  state           1    wreg     enum E5864
 26261 ;; Auto vars:     Size  Location     Type
 26262 ;;  state           1    0[BANK0 ] enum E5864
 26263 ;; Return value:  Size  Location     Type
 26264 ;;                  1    wreg      void 
 26265 ;; Registers used:
 26266 ;;		wreg
 26267 ;; Tracked objects:
 26268 ;;		On entry : 0/0
 26269 ;;		On exit  : 0/0
 26270 ;;		Unchanged: 0/0
 26271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26272 ;;      Params:         0       0       0       0       0       0       0       0       0
 26273 ;;      Locals:         0       1       0       0       0       0       0       0       0
 26274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26275 ;;      Totals:         0       1       0       0       0       0       0       0       0
 26276 ;;Total ram usage:        1 bytes
 26277 ;; Hardware stack levels used:    1
 26278 ;; Hardware stack levels required when called:   11
 26279 ;; This function calls:
 26280 ;;		Nothing
 26281 ;; This function is called by:
 26282 ;;		_main
 26283 ;; This function uses a non-reentrant model
 26284 ;;
 26285                           
 26286                           	psect	text110
 26287  00644C                     __ptext110:
 26288                           	opt stack 0
 26289  00644C                     _MOTEapp_handlerState:
 26290                           	opt stack 19
 26291                           
 26292                           ;incstack = 0
 26293                           ;MOTEapp_handlerState@state stored from wreg
 26294  00644C  0100               	movlb	0	; () banked
 26295  00644E  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 26296                           
 26297                           ;MOTEapp.c: 207: moteState = state;
 26298  006450  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 26299  006454  0012               	return		;funcret
 26300  006456                     __end_of_MOTEapp_handlerState:
 26301                           	opt stack 0
 26302                           tblptru	equ	0xFF8
 26303                           tblptrh	equ	0xFF7
 26304                           tblptrl	equ	0xFF6
 26305                           tablat	equ	0xFF5
 26306                           prodh	equ	0xFF4
 26307                           prodl	equ	0xFF3
 26308                           intcon	equ	0xFF2
 26309                           intcon2	equ	0xFF1
 26310                           intcon3	equ	0xFF0
 26311                           indf0	equ	0xFEF
 26312                           postinc0	equ	0xFEE
 26313                           fsr0h	equ	0xFEA
 26314                           fsr0l	equ	0xFE9
 26315                           wreg	equ	0xFE8
 26316                           indf1	equ	0xFE7
 26317                           postdec1	equ	0xFE5
 26318                           fsr1h	equ	0xFE2
 26319                           fsr1l	equ	0xFE1
 26320                           indf2	equ	0xFDF
 26321                           postinc2	equ	0xFDE
 26322                           postdec2	equ	0xFDD
 26323                           plusw2	equ	0xFDB
 26324                           fsr2h	equ	0xFDA
 26325                           fsr2l	equ	0xFD9
 26326                           status	equ	0xFD8
 26327                           
 26328 ;; *************** function _DATAEE_ReadByte *****************
 26329 ;; Defined at:
 26330 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 26331 ;; Parameters:    Size  Location     Type
 26332 ;;  bAdd            1    wreg     unsigned char 
 26333 ;; Auto vars:     Size  Location     Type
 26334 ;;  bAdd            1    0[BANK0 ] unsigned char 
 26335 ;; Return value:  Size  Location     Type
 26336 ;;                  1    wreg      unsigned char 
 26337 ;; Registers used:
 26338 ;;		wreg, status,2
 26339 ;; Tracked objects:
 26340 ;;		On entry : 0/0
 26341 ;;		On exit  : 0/0
 26342 ;;		Unchanged: 0/0
 26343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26344 ;;      Params:         0       0       0       0       0       0       0       0       0
 26345 ;;      Locals:         0       1       0       0       0       0       0       0       0
 26346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26347 ;;      Totals:         0       1       0       0       0       0       0       0       0
 26348 ;;Total ram usage:        1 bytes
 26349 ;; Hardware stack levels used:    1
 26350 ;; Hardware stack levels required when called:   11
 26351 ;; This function calls:
 26352 ;;		Nothing
 26353 ;; This function is called by:
 26354 ;;		_main
 26355 ;; This function uses a non-reentrant model
 26356 ;;
 26357                           
 26358                           	psect	text111
 26359  006332                     __ptext111:
 26360                           	opt stack 0
 26361  006332                     _DATAEE_ReadByte:
 26362                           	opt stack 19
 26363                           
 26364                           ;incstack = 0
 26365                           ;DATAEE_ReadByte@bAdd stored from wreg
 26366  006332  0100               	movlb	0	; () banked
 26367  006334  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 26368                           
 26369                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 26370  006336  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 26371                           
 26372                           ;memory.c: 191: EECON1bits.CFGS = 0;
 26373  00633A  9CA6               	bcf	4006,6,c	;volsfr
 26374                           
 26375                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 26376  00633C  9EA6               	bcf	4006,7,c	;volsfr
 26377                           
 26378                           ;memory.c: 193: EECON1bits.RD = 1;
 26379  00633E  80A6               	bsf	4006,0,c	;volsfr
 26380                           
 26381                           ;memory.c: 194: __nop();
 26382  006340  F000               	nop	
 26383                           
 26384                           ;memory.c: 195: __nop();
 26385  006342  F000               	nop	
 26386                           
 26387                           ;memory.c: 197: return (EEDATA);
 26388  006344  50A8               	movf	4008,w,c	;volatile
 26389  006346  0012               	return	
 26390  006348                     __end_of_DATAEE_ReadByte:
 26391                           	opt stack 0
 26392                           tblptru	equ	0xFF8
 26393                           tblptrh	equ	0xFF7
 26394                           tblptrl	equ	0xFF6
 26395                           tablat	equ	0xFF5
 26396                           prodh	equ	0xFF4
 26397                           prodl	equ	0xFF3
 26398                           intcon	equ	0xFF2
 26399                           intcon2	equ	0xFF1
 26400                           intcon3	equ	0xFF0
 26401                           indf0	equ	0xFEF
 26402                           postinc0	equ	0xFEE
 26403                           fsr0h	equ	0xFEA
 26404                           fsr0l	equ	0xFE9
 26405                           wreg	equ	0xFE8
 26406                           indf1	equ	0xFE7
 26407                           postdec1	equ	0xFE5
 26408                           fsr1h	equ	0xFE2
 26409                           fsr1l	equ	0xFE1
 26410                           indf2	equ	0xFDF
 26411                           postinc2	equ	0xFDE
 26412                           postdec2	equ	0xFDD
 26413                           plusw2	equ	0xFDB
 26414                           fsr2h	equ	0xFDA
 26415                           fsr2l	equ	0xFD9
 26416                           status	equ	0xFD8
 26417                           
 26418 ;; *************** function _INTERRUPT_InterruptManager *****************
 26419 ;; Defined at:
 26420 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 26421 ;; Parameters:    Size  Location     Type
 26422 ;;		None
 26423 ;; Auto vars:     Size  Location     Type
 26424 ;;  aux             1    0        unsigned char 
 26425 ;; Return value:  Size  Location     Type
 26426 ;;                  1    wreg      void 
 26427 ;; Registers used:
 26428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26429 ;; Tracked objects:
 26430 ;;		On entry : 0/0
 26431 ;;		On exit  : 0/0
 26432 ;;		Unchanged: 0/0
 26433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26434 ;;      Params:         0       0       0       0       0       0       0       0       0
 26435 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26436 ;;      Temps:         18       0       0       0       0       0       0       0       0
 26437 ;;      Totals:        18       0       0       0       0       0       0       0       0
 26438 ;;Total ram usage:       18 bytes
 26439 ;; Hardware stack levels used:    1
 26440 ;; Hardware stack levels required when called:   10
 26441 ;; This function calls:
 26442 ;;		_CMP1_ISR
 26443 ;;		_EUSART_Receive_ISR
 26444 ;;		_EUSART_Transmit_ISR
 26445 ;;		_InterruptPinRX
 26446 ;;		_InterruptTimerUART
 26447 ;;		_TMR0_ISR
 26448 ;;		_TMR1_ISR
 26449 ;;		_TMR3_ISR
 26450 ;;		_TMRapp_Tick
 26451 ;;		_USBDeviceTasks
 26452 ;;		_USBapp_setrxByteFlag
 26453 ;; This function is called by:
 26454 ;;		Interrupt level 2
 26455 ;; This function uses a non-reentrant model
 26456 ;;
 26457                           
 26458                           	psect	intcode
 26459  000008                     __pintcode:
 26460                           	opt stack 0
 26461  000008                     _INTERRUPT_InterruptManager:
 26462                           	opt stack 11
 26463                           
 26464                           ;incstack = 0
 26465  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26466  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 26467  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 26468  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 26469  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 26470  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 26471  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 26472  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 26473  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 26474  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 26475  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 26476  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 26477  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 26478  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 26479  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 26480  000042  C05E  F02E         	movff	btemp,??_INTERRUPT_InterruptManager+14
 26481  000046  C05F  F02F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 26482  00004A  C060  F030         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 26483  00004E  C061  F031         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 26484                           
 26485                           ;interrupt_manager.c: 59: uint8_t aux;
 26486                           ;interrupt_manager.c: 62: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 26487  000052  B09D               	btfsc	3997,0,c	;volatile
 26488  000054  A09E               	btfss	3998,0,c	;volatile
 26489  000056  D004               	goto	i2l1390
 26490                           
 26491                           ;interrupt_manager.c: 63: {
 26492                           ;interrupt_manager.c: 64: TMR1_ISR();
 26493  000058  EC0B  F032         	call	_TMR1_ISR	;wreg free
 26494                           
 26495                           ;interrupt_manager.c: 66: TMRapp_Tick();
 26496  00005C  EC49  F032         	call	_TMRapp_Tick	;wreg free
 26497  000060                     i2l1390:
 26498                           
 26499                           ;interrupt_manager.c: 67: }
 26500                           ;interrupt_manager.c: 68: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 26501  000060  B2A0               	btfsc	4000,1,c	;volatile
 26502  000062  A2A1               	btfss	4001,1,c	;volatile
 26503  000064  D003               	goto	i2l1391
 26504                           
 26505                           ;interrupt_manager.c: 69: {
 26506                           ;interrupt_manager.c: 70: TMR3_ISR();
 26507  000066  EC41  F031         	call	_TMR3_ISR	;wreg free
 26508                           
 26509                           ;interrupt_manager.c: 71: }
 26510  00006A  D013               	goto	i2l1397
 26511  00006C                     i2l1391:
 26512                           
 26513                           ;interrupt_manager.c: 72: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 26514  00006C  BA9D               	btfsc	3997,5,c	;volatile
 26515  00006E  AA9E               	btfss	3998,5,c	;volatile
 26516  000070  D005               	goto	i2l1393
 26517                           
 26518                           ;interrupt_manager.c: 73: {
 26519                           ;interrupt_manager.c: 74: USBapp_setrxByteFlag();
 26520  000072  EC3C  F032         	call	_USBapp_setrxByteFlag	;wreg free
 26521                           
 26522                           ;interrupt_manager.c: 75: EUSART_Receive_ISR();
 26523  000076  EC1A  F030         	call	_EUSART_Receive_ISR	;wreg free
 26524                           
 26525                           ;interrupt_manager.c: 76: }
 26526  00007A  D00B               	goto	i2l1397
 26527  00007C                     i2l1393:
 26528                           
 26529                           ;interrupt_manager.c: 77: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 26530  00007C  B89D               	btfsc	3997,4,c	;volatile
 26531  00007E  A89E               	btfss	3998,4,c	;volatile
 26532  000080  D003               	goto	i2l1395
 26533                           
 26534                           ;interrupt_manager.c: 78: {
 26535                           ;interrupt_manager.c: 79: EUSART_Transmit_ISR();
 26536  000082  EC02  F030         	call	_EUSART_Transmit_ISR	;wreg free
 26537                           
 26538                           ;interrupt_manager.c: 80: }
 26539  000086  D005               	goto	i2l1397
 26540  000088                     i2l1395:
 26541                           
 26542                           ;interrupt_manager.c: 81: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 26543  000088  BCA0               	btfsc	4000,6,c	;volatile
 26544  00008A  ACA1               	btfss	4001,6,c	;volatile
 26545  00008C  D002               	goto	i2l1397
 26546                           
 26547                           ;interrupt_manager.c: 82: {
 26548                           ;interrupt_manager.c: 83: CMP1_ISR();
 26549  00008E  EC5E  F032         	call	_CMP1_ISR	;wreg free
 26550  000092                     i2l1397:
 26551                           
 26552                           ;interrupt_manager.c: 84: }
 26553                           ;interrupt_manager.c: 85: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 26554  000092  BAF2               	btfsc	intcon,5,c	;volatile
 26555  000094  A4F2               	btfss	intcon,2,c	;volatile
 26556  000096  D005               	goto	i2l1398
 26557                           
 26558                           ;interrupt_manager.c: 86: {
 26559                           ;interrupt_manager.c: 87: TMR0_ISR();
 26560  000098  EC56  F032         	call	_TMR0_ISR	;wreg free
 26561                           
 26562                           ;interrupt_manager.c: 88: InterruptTimerUART();
 26563  00009C  ECF2  F022         	call	_InterruptTimerUART	;wreg free
 26564                           
 26565                           ;interrupt_manager.c: 91: }
 26566  0000A0  D008               	goto	i2l1401
 26567  0000A2                     i2l1398:
 26568                           
 26569                           ;interrupt_manager.c: 92: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 26570  0000A2  B6F2               	btfsc	intcon,3,c	;volatile
 26571  0000A4  A0F2               	btfss	intcon,0,c	;volatile
 26572  0000A6  D003               	goto	i2l1400
 26573                           
 26574                           ;interrupt_manager.c: 93: {
 26575                           ;interrupt_manager.c: 103: InterruptPinRX();
 26576  0000A8  EC62  F02D         	call	_InterruptPinRX	;wreg free
 26577                           
 26578                           ;interrupt_manager.c: 116: }
 26579  0000AC  D002               	goto	i2l1401
 26580  0000AE                     i2l1400:
 26581                           
 26582                           ;interrupt_manager.c: 117: else
 26583                           ;interrupt_manager.c: 118: {
 26584                           ;interrupt_manager.c: 120: USBDeviceTasks();
 26585  0000AE  ECB8  F018         	call	_USBDeviceTasks	;wreg free
 26586  0000B2                     i2l1401:
 26587  0000B2  C031  F061         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 26588  0000B6  C030  F060         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 26589  0000BA  C02F  F05F         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 26590  0000BE  C02E  F05E         	movff	??_INTERRUPT_InterruptManager+14,btemp
 26591  0000C2  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 26592  0000C6  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 26593  0000CA  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 26594  0000CE  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 26595  0000D2  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 26596  0000D6  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 26597  0000DA  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 26598  0000DE  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 26599  0000E2  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 26600  0000E6  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 26601  0000EA  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 26602  0000EE  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 26603  0000F2  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 26604  0000F6  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 26605  0000FA  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26606  0000FC  0011               	retfie		f
 26607  0000FE                     __end_of_INTERRUPT_InterruptManager:
 26608                           	opt stack 0
 26609                           pclatu	equ	0xFFB
 26610                           pclath	equ	0xFFA
 26611                           tblptru	equ	0xFF8
 26612                           tblptrh	equ	0xFF7
 26613                           tblptrl	equ	0xFF6
 26614                           tablat	equ	0xFF5
 26615                           prodh	equ	0xFF4
 26616                           prodl	equ	0xFF3
 26617                           intcon	equ	0xFF2
 26618                           intcon2	equ	0xFF1
 26619                           intcon3	equ	0xFF0
 26620                           indf0	equ	0xFEF
 26621                           postinc0	equ	0xFEE
 26622                           fsr0h	equ	0xFEA
 26623                           fsr0l	equ	0xFE9
 26624                           wreg	equ	0xFE8
 26625                           indf1	equ	0xFE7
 26626                           postdec1	equ	0xFE5
 26627                           fsr1h	equ	0xFE2
 26628                           fsr1l	equ	0xFE1
 26629                           indf2	equ	0xFDF
 26630                           postinc2	equ	0xFDE
 26631                           postdec2	equ	0xFDD
 26632                           plusw2	equ	0xFDB
 26633                           fsr2h	equ	0xFDA
 26634                           fsr2l	equ	0xFD9
 26635                           status	equ	0xFD8
 26636                           
 26637 ;; *************** function _USBapp_setrxByteFlag *****************
 26638 ;; Defined at:
 26639 ;;		line 263 in file "../Includes/Board/USBapp.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;		None
 26642 ;; Auto vars:     Size  Location     Type
 26643 ;;		None
 26644 ;; Return value:  Size  Location     Type
 26645 ;;                  1    wreg      void 
 26646 ;; Registers used:
 26647 ;;		wreg, status,2
 26648 ;; Tracked objects:
 26649 ;;		On entry : 0/0
 26650 ;;		On exit  : 0/0
 26651 ;;		Unchanged: 0/0
 26652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26653 ;;      Params:         0       0       0       0       0       0       0       0       0
 26654 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26655 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26656 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26657 ;;Total ram usage:        0 bytes
 26658 ;; Hardware stack levels used:    1
 26659 ;; This function calls:
 26660 ;;		Nothing
 26661 ;; This function is called by:
 26662 ;;		_INTERRUPT_InterruptManager
 26663 ;; This function uses a non-reentrant model
 26664 ;;
 26665                           
 26666                           	psect	text113
 26667  006478                     __ptext113:
 26668                           	opt stack 0
 26669  006478                     _USBapp_setrxByteFlag:
 26670                           	opt stack 20
 26671                           
 26672                           ;USBapp.c: 265: rxByteFlag = 1;
 26673                           
 26674                           ;incstack = 0
 26675  006478  0E01               	movlw	1
 26676  00647A  0100               	movlb	0	; () banked
 26677  00647C  6FED               	movwf	_rxByteFlag& (0+255),b	;volatile
 26678                           
 26679                           ; BSR set to: 0
 26680  00647E  0012               	return		;funcret
 26681  006480                     __end_of_USBapp_setrxByteFlag:
 26682                           	opt stack 0
 26683                           pclatu	equ	0xFFB
 26684                           pclath	equ	0xFFA
 26685                           tblptru	equ	0xFF8
 26686                           tblptrh	equ	0xFF7
 26687                           tblptrl	equ	0xFF6
 26688                           tablat	equ	0xFF5
 26689                           prodh	equ	0xFF4
 26690                           prodl	equ	0xFF3
 26691                           intcon	equ	0xFF2
 26692                           intcon2	equ	0xFF1
 26693                           intcon3	equ	0xFF0
 26694                           indf0	equ	0xFEF
 26695                           postinc0	equ	0xFEE
 26696                           fsr0h	equ	0xFEA
 26697                           fsr0l	equ	0xFE9
 26698                           wreg	equ	0xFE8
 26699                           indf1	equ	0xFE7
 26700                           postdec1	equ	0xFE5
 26701                           fsr1h	equ	0xFE2
 26702                           fsr1l	equ	0xFE1
 26703                           indf2	equ	0xFDF
 26704                           postinc2	equ	0xFDE
 26705                           postdec2	equ	0xFDD
 26706                           plusw2	equ	0xFDB
 26707                           fsr2h	equ	0xFDA
 26708                           fsr2l	equ	0xFD9
 26709                           status	equ	0xFD8
 26710                           
 26711 ;; *************** function _USBDeviceTasks *****************
 26712 ;; Defined at:
 26713 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 26714 ;; Parameters:    Size  Location     Type
 26715 ;;		None
 26716 ;; Auto vars:     Size  Location     Type
 26717 ;;  i               1   30[COMRAM] unsigned char 
 26718 ;; Return value:  Size  Location     Type
 26719 ;;                  1    wreg      void 
 26720 ;; Registers used:
 26721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26722 ;; Tracked objects:
 26723 ;;		On entry : 0/0
 26724 ;;		On exit  : 0/0
 26725 ;;		Unchanged: 0/0
 26726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26727 ;;      Params:         0       0       0       0       0       0       0       0       0
 26728 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26730 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26731 ;;Total ram usage:        1 bytes
 26732 ;; Hardware stack levels used:    1
 26733 ;; Hardware stack levels required when called:    9
 26734 ;; This function calls:
 26735 ;;		_USBCtrlEPAllowStatusStage
 26736 ;;		_USBCtrlEPService
 26737 ;;		_USBStallHandler
 26738 ;;		_USBSuspend
 26739 ;;		_USBWakeFromSuspend
 26740 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26741 ;;		i2_USBDeviceInit
 26742 ;; This function is called by:
 26743 ;;		_INTERRUPT_InterruptManager
 26744 ;; This function uses a non-reentrant model
 26745 ;;
 26746                           
 26747                           	psect	text114
 26748  003170                     __ptext114:
 26749                           	opt stack 0
 26750  003170                     _USBDeviceTasks:
 26751                           	opt stack 11
 26752                           
 26753                           ;usb_device.c: 430: uint8_t i;
 26754                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 26755                           
 26756                           ; BSR set to: 0
 26757                           ;incstack = 0
 26758  003170  0100               	movlb	0	; () banked
 26759  003172  05EF               	decf	_USBDeviceState& (0+255),w,b	;volatile
 26760  003174  B4D8               	btfsc	status,2,c
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;usb_device.c: 433: {
 26764                           ;usb_device.c: 443: if(!UCONbits.SE0)
 26765  003176  BA60               	btfsc	3936,5,c	;volatile
 26766  003178  D006               	goto	i2l1971
 26767                           
 26768                           ; BSR set to: 0
 26769                           ;usb_device.c: 444: {
 26770                           ;usb_device.c: 445: {UIR = 0;};
 26771  00317A  0E00               	movlw	0
 26772  00317C  6E65               	movwf	3941,c	;volatile
 26773                           
 26774                           ; BSR set to: 0
 26775                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 26776  00317E  8064               	bsf	3940,0,c	;volatile
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 26780  003180  8864               	bsf	3940,4,c	;volatile
 26781                           
 26782                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 26783  003182  0E02               	movlw	2
 26784  003184  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 26785  003186                     i2l1971:
 26786                           
 26787                           ; BSR set to: 0
 26788                           ;usb_device.c: 449: }
 26789                           ;usb_device.c: 450: }
 26790                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 26791                           
 26792                           ; BSR set to: 0
 26793                           
 26794                           ; BSR set to: 0
 26795  003186  B465               	btfsc	3941,2,c	;volatile
 26796                           
 26797                           ; BSR set to: 0
 26798  003188  A464               	btfss	3940,2,c	;volatile
 26799  00318A  D003               	goto	i2l1972
 26800                           
 26801                           ; BSR set to: 0
 26802                           ;usb_device.c: 455: {
 26803                           ;usb_device.c: 456: (UIR &= 0xFB);
 26804  00318C  9465               	bcf	3941,2,c	;volatile
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;usb_device.c: 457: USBWakeFromSuspend();
 26808  00318E  ECEA  F02F         	call	_USBWakeFromSuspend	;wreg free
 26809  003192                     i2l1972:
 26810                           
 26811                           ;usb_device.c: 458: }
 26812                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 26813  003192  A260               	btfss	3936,1,c	;volatile
 26814  003194  D002               	goto	i2l1973
 26815                           
 26816                           ;usb_device.c: 464: {
 26817                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 26818  003196  94A4               	bcf	4004,2,c	;volatile
 26819                           
 26820                           ;usb_device.c: 466: return;
 26821  003198  0012               	return	
 26822  00319A                     i2l1973:
 26823                           
 26824                           ;usb_device.c: 467: }
 26825                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 26826  00319A  B065               	btfsc	3941,0,c	;volatile
 26827  00319C  A064               	btfss	3940,0,c	;volatile
 26828  00319E  D007               	goto	i2l1975
 26829                           
 26830                           ;usb_device.c: 480: {
 26831                           ;usb_device.c: 481: USBDeviceInit();
 26832  0031A0  ECE9  F019         	call	i2_USBDeviceInit	;wreg free
 26833                           
 26834                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 26835  0031A4  84A3               	bsf	4003,2,c	;volatile
 26836                           
 26837                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 26838  0031A6  0E04               	movlw	4
 26839  0031A8  0100               	movlb	0	; () banked
 26840  0031AA  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 26841                           
 26842                           ; BSR set to: 0
 26843                           ;usb_device.c: 489: (UIR &= 0xFE);
 26844  0031AC  9065               	bcf	3941,0,c	;volatile
 26845  0031AE                     i2l1975:
 26846                           
 26847                           ;usb_device.c: 490: }
 26848                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 26849                           
 26850                           ; BSR set to: 0
 26851  0031AE  B865               	btfsc	3941,4,c	;volatile
 26852  0031B0  A864               	btfss	3940,4,c	;volatile
 26853  0031B2  D003               	goto	i2l1976
 26854                           
 26855                           ;usb_device.c: 496: {
 26856                           ;usb_device.c: 497: USBSuspend();
 26857  0031B4  EC8B  F030         	call	_USBSuspend	;wreg free
 26858                           
 26859                           ;usb_device.c: 498: (UIR &= 0xEF);
 26860  0031B8  9865               	bcf	3941,4,c	;volatile
 26861  0031BA                     i2l1976:
 26862                           
 26863                           ;usb_device.c: 499: }
 26864                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 26865  0031BA  AC65               	btfss	3941,6,c	;volatile
 26866  0031BC  D018               	goto	i2l1980
 26867                           
 26868                           ;usb_device.c: 502: {
 26869                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 26870  0031BE  AC64               	btfss	3940,6,c	;volatile
 26871  0031C0  D00E               	goto	i2l1978
 26872                           
 26873                           ;usb_device.c: 504: {
 26874                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 26875  0031C2  0E00               	movlw	0
 26876  0031C4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26877  0031C6  0E73               	movlw	115
 26878  0031C8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26879  0031CA  0E00               	movlw	0
 26880  0031CC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26881  0031CE  0E00               	movlw	0
 26882  0031D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26883  0031D2  0E00               	movlw	0
 26884  0031D4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26885  0031D6  0E01               	movlw	1
 26886  0031D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26887  0031DA  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26888  0031DE                     i2l1978:
 26889                           
 26890                           ;usb_device.c: 506: }
 26891                           ;usb_device.c: 507: (UIR &= 0xBF);
 26892  0031DE  9C65               	bcf	3941,6,c	;volatile
 26893                           
 26894                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 26895  0031E0  5044               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26896  0031E2  A4D8               	btfss	status,2,c
 26897                           
 26898                           ;usb_device.c: 513: {
 26899                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 26900  0031E4  0644               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 26901                           
 26902                           ;usb_device.c: 515: }
 26903                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 26904  0031E6  5044               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26905  0031E8  B4D8               	btfsc	status,2,c
 26906                           
 26907                           ;usb_device.c: 522: {
 26908                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 26909  0031EA  EC2F  F022         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26910  0031EE                     i2l1980:
 26911                           
 26912                           ;usb_device.c: 524: }
 26913                           ;usb_device.c: 525: }
 26914                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 26915  0031EE  BA65               	btfsc	3941,5,c	;volatile
 26916  0031F0  AA64               	btfss	3940,5,c	;volatile
 26917  0031F2  D002               	goto	i2l1981
 26918                           
 26919                           ;usb_device.c: 528: {
 26920                           ;usb_device.c: 529: USBStallHandler();
 26921  0031F4  ECF0  F02D         	call	_USBStallHandler	;wreg free
 26922  0031F8                     i2l1981:
 26923                           
 26924                           ;usb_device.c: 530: }
 26925                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 26926  0031F8  B265               	btfsc	3941,1,c	;volatile
 26927  0031FA  A264               	btfss	3940,1,c	;volatile
 26928  0031FC  D00F               	goto	i2l1982
 26929                           
 26930                           ;usb_device.c: 533: {
 26931                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 26932  0031FE  0E7F               	movlw	127
 26933  003200  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26934  003202  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26935  003204  0E00               	movlw	0
 26936  003206  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26937  003208  0E00               	movlw	0
 26938  00320A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26939  00320C  0E00               	movlw	0
 26940  00320E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26941  003210  0E01               	movlw	1
 26942  003212  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26943  003214  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26944                           
 26945                           ;usb_device.c: 535: {UEIR = 0;};
 26946  003218  0E00               	movlw	0
 26947  00321A  6E67               	movwf	3943,c	;volatile
 26948  00321C                     i2l1982:
 26949                           
 26950                           ;usb_device.c: 536: }
 26951                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 26952  00321C  0E04               	movlw	4
 26953  00321E  0100               	movlb	0	; () banked
 26954  003220  61EF               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 26955  003222  D002               	goto	i2l1983
 26956                           
 26957                           ; BSR set to: 0
 26958                           ;usb_device.c: 544: {
 26959                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 26960  003224  94A4               	bcf	4004,2,c	;volatile
 26961                           
 26962                           ;usb_device.c: 546: return;
 26963  003226  0012               	return	
 26964  003228                     i2l1983:
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;usb_device.c: 547: }
 26968                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 26969  003228  A664               	btfss	3940,3,c	;volatile
 26970  00322A  D039               	goto	i2u1120_40
 26971                           
 26972                           ; BSR set to: 0
 26973                           ;usb_device.c: 553: {
 26974                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 26975  00322C  0E00               	movlw	0
 26976  00322E  6E1F               	movwf	USBDeviceTasks@i,c
 26977  003230                     i2l12319:
 26978                           
 26979                           ; BSR set to: 0
 26980  003230  0E03               	movlw	3
 26981  003232  641F               	cpfsgt	USBDeviceTasks@i,c
 26982  003234  D001               	goto	i2l1985
 26983  003236  D033               	goto	i2u1120_40
 26984  003238                     i2l1985:
 26985                           
 26986                           ;usb_device.c: 555: {
 26987                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 26988  003238  A665               	btfss	3941,3,c	;volatile
 26989  00323A  D031               	goto	i2u1120_40
 26990                           
 26991                           ;usb_device.c: 557: {
 26992                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 26993  00323C  CF61 F058          	movff	3937,_USTATcopy	;volatile
 26994                           
 26995                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 26996  003240  3058               	rrcf	_USTATcopy,w,c	;volatile
 26997  003242  32E8               	rrcf	wreg,f,c
 26998  003244  32E8               	rrcf	wreg,f,c
 26999  003246  0B0F               	andlw	15
 27000  003248  6E46               	movwf	_endpoint_number,c	;volatile
 27001                           
 27002                           ;usb_device.c: 562: (UIR &= 0xF7);
 27003  00324A  9665               	bcf	3941,3,c	;volatile
 27004                           
 27005                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 27006  00324C  B458               	btfsc	_USTATcopy,2,c	;volatile
 27007  00324E  D007               	goto	i2l1988
 27008                           
 27009                           ;usb_device.c: 567: {
 27010                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 27011  003250  5046               	movf	_endpoint_number,w,c	;volatile
 27012  003252  0D01               	mullw	1
 27013  003254  0ED4               	movlw	low _ep_data_out
 27014  003256  24F3               	addwf	prodl,w,c
 27015  003258  6ED9               	movwf	fsr2l,c
 27016  00325A  0E00               	movlw	high _ep_data_out
 27017  00325C  D006               	goto	L24
 27018  00325E                     i2l1988:
 27019                           
 27020                           ;usb_device.c: 570: else
 27021                           ;usb_device.c: 571: {
 27022                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 27023                           
 27024                           ; BSR set to: 0
 27025  00325E  5046               	movf	_endpoint_number,w,c	;volatile
 27026  003260  0D01               	mullw	1
 27027  003262  0ED7               	movlw	low _ep_data_in
 27028  003264  24F3               	addwf	prodl,w,c
 27029  003266  6ED9               	movwf	fsr2l,c
 27030  003268  0E00               	movlw	high _ep_data_in
 27031  00326A                     L24:
 27032  00326A  20F4               	addwfc	prodh,w,c
 27033  00326C  6EDA               	movwf	fsr2h,c
 27034  00326E  0100               	movlb	0	; () banked
 27035  003270  70DF               	btg	indf2,0,c
 27036                           
 27037                           ; BSR set to: 0
 27038                           ;usb_device.c: 573: }
 27039                           ;usb_device.c: 577: if(endpoint_number == 0)
 27040                           
 27041                           ; BSR set to: 0
 27042  003272  5046               	movf	_endpoint_number,w,c	;volatile
 27043  003274  A4D8               	btfss	status,2,c
 27044  003276  D003               	goto	i2l1990
 27045                           
 27046                           ; BSR set to: 0
 27047                           ;usb_device.c: 578: {
 27048                           ;usb_device.c: 579: USBCtrlEPService();
 27049  003278  EC65  F021         	call	_USBCtrlEPService	;wreg free
 27050                           
 27051                           ;usb_device.c: 580: }
 27052  00327C  D00E               	goto	i2l1992
 27053  00327E                     i2l1990:
 27054                           
 27055                           ;usb_device.c: 581: else
 27056                           ;usb_device.c: 582: {
 27057                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 27058  00327E  0E00               	movlw	0
 27059  003280  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27060  003282  0E72               	movlw	114
 27061  003284  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27062  003286  0E58               	movlw	low _USTATcopy
 27063  003288  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27064  00328A  0E00               	movlw	high _USTATcopy
 27065  00328C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27066  00328E  0E00               	movlw	0
 27067  003290  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27068  003292  0E00               	movlw	0
 27069  003294  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27070  003296  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27071  00329A                     i2l1992:
 27072  00329A  2A1F               	incf	USBDeviceTasks@i,f,c
 27073  00329C  D7C9               	goto	i2l12319
 27074  00329E                     i2u1120_40:
 27075                           
 27076                           ;usb_device.c: 589: }
 27077                           ;usb_device.c: 590: }
 27078                           ;usb_device.c: 591: }
 27079                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 27080  00329E  94A4               	bcf	4004,2,c	;volatile
 27081  0032A0  0012               	return		;funcret
 27082  0032A2                     __end_of_USBDeviceTasks:
 27083                           	opt stack 0
 27084                           pclatu	equ	0xFFB
 27085                           pclath	equ	0xFFA
 27086                           tblptru	equ	0xFF8
 27087                           tblptrh	equ	0xFF7
 27088                           tblptrl	equ	0xFF6
 27089                           tablat	equ	0xFF5
 27090                           prodh	equ	0xFF4
 27091                           prodl	equ	0xFF3
 27092                           intcon	equ	0xFF2
 27093                           intcon2	equ	0xFF1
 27094                           intcon3	equ	0xFF0
 27095                           indf0	equ	0xFEF
 27096                           postinc0	equ	0xFEE
 27097                           fsr0h	equ	0xFEA
 27098                           fsr0l	equ	0xFE9
 27099                           wreg	equ	0xFE8
 27100                           indf1	equ	0xFE7
 27101                           postdec1	equ	0xFE5
 27102                           fsr1h	equ	0xFE2
 27103                           fsr1l	equ	0xFE1
 27104                           indf2	equ	0xFDF
 27105                           postinc2	equ	0xFDE
 27106                           postdec2	equ	0xFDD
 27107                           plusw2	equ	0xFDB
 27108                           fsr2h	equ	0xFDA
 27109                           fsr2l	equ	0xFD9
 27110                           status	equ	0xFD8
 27111                           
 27112 ;; *************** function i2_USBDeviceInit *****************
 27113 ;; Defined at:
 27114 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 27115 ;; Parameters:    Size  Location     Type
 27116 ;;		None
 27117 ;; Auto vars:     Size  Location     Type
 27118 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 27119 ;; Return value:  Size  Location     Type
 27120 ;;                  1    wreg      void 
 27121 ;; Registers used:
 27122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27123 ;; Tracked objects:
 27124 ;;		On entry : 0/0
 27125 ;;		On exit  : 0/0
 27126 ;;		Unchanged: 0/0
 27127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27128 ;;      Params:         0       0       0       0       0       0       0       0       0
 27129 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27130 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27131 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27132 ;;Total ram usage:        1 bytes
 27133 ;; Hardware stack levels used:    1
 27134 ;; Hardware stack levels required when called:    1
 27135 ;; This function calls:
 27136 ;;		i2_memset
 27137 ;; This function is called by:
 27138 ;;		_USBDeviceTasks
 27139 ;; This function uses a non-reentrant model
 27140 ;;
 27141                           
 27142                           	psect	text115
 27143  0033D2                     __ptext115:
 27144                           	opt stack 0
 27145  0033D2                     i2_USBDeviceInit:
 27146                           	opt stack 18
 27147                           
 27148                           ;usb_device.c: 239: uint8_t i;
 27149                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 27150                           
 27151                           ;incstack = 0
 27152  0033D2  94A3               	bcf	4003,2,c	;volatile
 27153                           
 27154                           ;usb_device.c: 244: {UEIR = 0;};
 27155  0033D4  0E00               	movlw	0
 27156  0033D6  6E67               	movwf	3943,c	;volatile
 27157                           
 27158                           ;usb_device.c: 247: {UIR = 0;};
 27159  0033D8  0E00               	movlw	0
 27160  0033DA  6E65               	movwf	3941,c	;volatile
 27161                           
 27162                           ;usb_device.c: 250: UEP0 = 0;
 27163  0033DC  0E00               	movlw	0
 27164  0033DE  6E6A               	movwf	3946,c	;volatile
 27165                           
 27166                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 27167  0033E0  0E6B               	movlw	107
 27168  0033E2  6E01               	movwf	i2memset@p1,c
 27169  0033E4  0E0F               	movlw	15
 27170  0033E6  6E02               	movwf	i2memset@p1+1,c
 27171  0033E8  0E00               	movlw	0
 27172  0033EA  6E04               	movwf	i2memset@c+1,c
 27173  0033EC  0E00               	movlw	0
 27174  0033EE  6E03               	movwf	i2memset@c,c
 27175  0033F0  0E00               	movlw	0
 27176  0033F2  6E06               	movwf	i2memset@n+1,c
 27177  0033F4  0E02               	movlw	2
 27178  0033F6  6E05               	movwf	i2memset@n,c
 27179  0033F8  EC60  F030         	call	i2_memset	;wreg free
 27180                           
 27181                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 27182  0033FC  0E16               	movlw	22
 27183  0033FE  6E62               	movwf	3938,c	;volatile
 27184  003400  0E9F               	movlw	159
 27185  003402  6E66               	movwf	3942,c	;volatile
 27186  003404  0E7B               	movlw	123
 27187  003406  6E64               	movwf	3940,c	;volatile
 27188                           
 27189                           ;usb_device.c: 257: ;
 27190                           ;usb_device.c: 260: ;
 27191                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 27192  003408  0E00               	movlw	0
 27193  00340A  6E09               	movwf	i2USBDeviceInit@i,c
 27194  00340C                     i2l11799:
 27195  00340C  0E0B               	movlw	11
 27196  00340E  6409               	cpfsgt	i2USBDeviceInit@i,c
 27197  003410  D001               	goto	i2l1960
 27198  003412  D00E               	goto	i2u1054_40
 27199  003414                     i2l1960:
 27200                           
 27201                           ;usb_device.c: 264: {
 27202                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 27203  003414  5009               	movf	i2USBDeviceInit@i,w,c
 27204  003416  0D04               	mullw	4
 27205  003418  0E00               	movlw	0
 27206  00341A  24F3               	addwf	prodl,w,c
 27207  00341C  6ED9               	movwf	fsr2l,c
 27208  00341E  0E04               	movlw	4
 27209  003420  20F4               	addwfc	prodh,w,c
 27210  003422  6EDA               	movwf	fsr2h,c
 27211  003424  6ADE               	clrf	postinc2,c
 27212  003426  6ADE               	clrf	postinc2,c
 27213  003428  6ADE               	clrf	postinc2,c
 27214  00342A  6ADD               	clrf	postdec2,c
 27215  00342C  2A09               	incf	i2USBDeviceInit@i,f,c
 27216  00342E  D7EE               	goto	i2l11799
 27217  003430                     i2u1054_40:
 27218                           
 27219                           ;usb_device.c: 266: }
 27220                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 27221  003430  8C60               	bsf	3936,6,c	;volatile
 27222                           
 27223                           ;usb_device.c: 272: UADDR = 0x00;
 27224  003432  0E00               	movlw	0
 27225  003434  6E63               	movwf	3939,c	;volatile
 27226                           
 27227                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 27228  003436  9860               	bcf	3936,4,c	;volatile
 27229                           
 27230                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 27231  003438  9C60               	bcf	3936,6,c	;volatile
 27232                           
 27233                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 27234  00343A  D00A               	goto	i2l1962
 27235  00343C                     
 27236                           ;usb_device.c: 282: {
 27237                           ;usb_device.c: 283: (UIR &= 0xF7);
 27238  00343C  9665               	bcf	3941,3,c	;volatile
 27239                           
 27240                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 27241  00343E  0E00               	movlw	0
 27242  003440  0100               	movlb	0	; () banked
 27243  003442  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27244                           
 27245                           ; BSR set to: 0
 27246                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 27247  003444  0E00               	movlw	0
 27248  003446  6FC3               	movwf	(_outPipes+3)& (0+255),b	;volatile
 27249                           
 27250                           ; BSR set to: 0
 27251                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 27252  003448  0E00               	movlw	0
 27253  00344A  6FC5               	movwf	(_outPipes+5)& (0+255),b	;volatile
 27254  00344C  0E00               	movlw	0
 27255  00344E  6FC4               	movwf	(_outPipes+4)& (0+255),b	;volatile
 27256  003450                     i2l1962:
 27257                           
 27258                           ; BSR set to: 0
 27259  003450  B665               	btfsc	3941,3,c	;volatile
 27260  003452  D7F4               	goto	i2l1963
 27261                           
 27262                           ;usb_device.c: 288: }
 27263                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 27264  003454  0E01               	movlw	1
 27265  003456  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 27266                           
 27267                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 27268  003458  0E01               	movlw	1
 27269  00345A  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 27270                           
 27271                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 27272  00345C  0E00               	movlw	0
 27273  00345E  6E40               	movwf	_USBDeferINDataStagePackets,c	;volatile
 27274                           
 27275                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 27276  003460  0E00               	movlw	0
 27277  003462  6E3F               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 27278                           
 27279                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 27280  003464  0E00               	movlw	0
 27281  003466  0101               	movlb	1	; () banked
 27282  003468  6F1F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 27283                           
 27284                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 27285  00346A  0E00               	movlw	0
 27286  00346C  6E09               	movwf	i2USBDeviceInit@i,c
 27287  00346E                     i2l11827:
 27288                           
 27289                           ; BSR set to: 1
 27290  00346E  0E02               	movlw	2
 27291  003470  6409               	cpfsgt	i2USBDeviceInit@i,c
 27292  003472  D001               	goto	i2l1965
 27293  003474  D02E               	goto	i2u1057_40
 27294  003476                     i2l1965:
 27295                           
 27296                           ;usb_device.c: 302: {
 27297                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 27298                           
 27299                           ; BSR set to: 1
 27300  003476  5009               	movf	i2USBDeviceInit@i,w,c
 27301  003478  0D02               	mullw	2
 27302  00347A  0ECE               	movlw	low _pBDTEntryIn
 27303  00347C  24F3               	addwf	prodl,w,c
 27304  00347E  6ED9               	movwf	fsr2l,c
 27305  003480  0E00               	movlw	high _pBDTEntryIn
 27306  003482  20F4               	addwfc	prodh,w,c
 27307  003484  6EDA               	movwf	fsr2h,c
 27308  003486  0E00               	movlw	0
 27309  003488  6EDE               	movwf	postinc2,c
 27310  00348A  0E00               	movlw	0
 27311  00348C  6EDD               	movwf	postdec2,c
 27312                           
 27313                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 27314  00348E  5009               	movf	i2USBDeviceInit@i,w,c
 27315  003490  0D02               	mullw	2
 27316  003492  0E00               	movlw	low _pBDTEntryOut
 27317  003494  24F3               	addwf	prodl,w,c
 27318  003496  6ED9               	movwf	fsr2l,c
 27319  003498  0E01               	movlw	high _pBDTEntryOut
 27320  00349A  20F4               	addwfc	prodh,w,c
 27321  00349C  6EDA               	movwf	fsr2h,c
 27322  00349E  0E00               	movlw	0
 27323  0034A0  6EDE               	movwf	postinc2,c
 27324  0034A2  0E00               	movlw	0
 27325  0034A4  6EDD               	movwf	postdec2,c
 27326                           
 27327                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 27328  0034A6  5009               	movf	i2USBDeviceInit@i,w,c
 27329  0034A8  0D01               	mullw	1
 27330  0034AA  0ED7               	movlw	low _ep_data_in
 27331  0034AC  24F3               	addwf	prodl,w,c
 27332  0034AE  6ED9               	movwf	fsr2l,c
 27333  0034B0  0E00               	movlw	high _ep_data_in
 27334  0034B2  20F4               	addwfc	prodh,w,c
 27335  0034B4  6EDA               	movwf	fsr2h,c
 27336  0034B6  0E00               	movlw	0
 27337  0034B8  6EDF               	movwf	indf2,c
 27338                           
 27339                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 27340  0034BA  5009               	movf	i2USBDeviceInit@i,w,c
 27341  0034BC  0D01               	mullw	1
 27342  0034BE  0ED4               	movlw	low _ep_data_out
 27343  0034C0  24F3               	addwf	prodl,w,c
 27344  0034C2  6ED9               	movwf	fsr2l,c
 27345  0034C4  0E00               	movlw	high _ep_data_out
 27346  0034C6  20F4               	addwfc	prodh,w,c
 27347  0034C8  6EDA               	movwf	fsr2h,c
 27348  0034CA  0E00               	movlw	0
 27349  0034CC  6EDF               	movwf	indf2,c
 27350  0034CE  2A09               	incf	i2USBDeviceInit@i,f,c
 27351  0034D0  D7CE               	goto	i2l11827
 27352  0034D2                     i2u1057_40:
 27353                           
 27354                           ;usb_device.c: 307: }
 27355                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27356  0034D2  0E08               	movlw	8
 27357  0034D4  0100               	movlb	0	; () banked
 27358  0034D6  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 27359  0034D8  0E04               	movlw	4
 27360  0034DA  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27361                           
 27362                           ; BSR set to: 0
 27363                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 27364  0034DC  0E16               	movlw	22
 27365  0034DE  6E6A               	movwf	3946,c	;volatile
 27366                           
 27367                           ; BSR set to: 0
 27368                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 27369  0034E0  0E04               	movlw	4
 27370  0034E2  0104               	movlb	4	; () banked
 27371  0034E4  6F03               	movwf	3,b	;volatile
 27372  0034E6  0E30               	movlw	48
 27373  0034E8  6F02               	movwf	2,b	;volatile
 27374                           
 27375                           ; BSR set to: 4
 27376                           ;usb_device.c: 315: BDT[0].CNT = 8;
 27377  0034EA  0E08               	movlw	8
 27378  0034EC  6F01               	movwf	1,b	;volatile
 27379                           
 27380                           ; BSR set to: 4
 27381                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 27382  0034EE  0E04               	movlw	4
 27383  0034F0  6F00               	movwf	0,b	;volatile
 27384                           
 27385                           ; BSR set to: 4
 27386                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 27387  0034F2  8F00               	bsf	0,7,b	;volatile
 27388                           
 27389                           ; BSR set to: 4
 27390                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 27391  0034F4  0E00               	movlw	0
 27392  0034F6  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 27393                           
 27394                           ; BSR set to: 4
 27395                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 27396  0034F8  0E00               	movlw	0
 27397  0034FA  0100               	movlb	0	; () banked
 27398  0034FC  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 27399                           
 27400                           ; BSR set to: 0
 27401  0034FE  0012               	return		;funcret
 27402  003500                     __end_ofi2_USBDeviceInit:
 27403                           	opt stack 0
 27404                           pclatu	equ	0xFFB
 27405                           pclath	equ	0xFFA
 27406                           tblptru	equ	0xFF8
 27407                           tblptrh	equ	0xFF7
 27408                           tblptrl	equ	0xFF6
 27409                           tablat	equ	0xFF5
 27410                           prodh	equ	0xFF4
 27411                           prodl	equ	0xFF3
 27412                           intcon	equ	0xFF2
 27413                           intcon2	equ	0xFF1
 27414                           intcon3	equ	0xFF0
 27415                           indf0	equ	0xFEF
 27416                           postinc0	equ	0xFEE
 27417                           fsr0h	equ	0xFEA
 27418                           fsr0l	equ	0xFE9
 27419                           wreg	equ	0xFE8
 27420                           indf1	equ	0xFE7
 27421                           postdec1	equ	0xFE5
 27422                           fsr1h	equ	0xFE2
 27423                           fsr1l	equ	0xFE1
 27424                           indf2	equ	0xFDF
 27425                           postinc2	equ	0xFDE
 27426                           postdec2	equ	0xFDD
 27427                           plusw2	equ	0xFDB
 27428                           fsr2h	equ	0xFDA
 27429                           fsr2l	equ	0xFD9
 27430                           status	equ	0xFD8
 27431                           
 27432 ;; *************** function _USBWakeFromSuspend *****************
 27433 ;; Defined at:
 27434 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 27435 ;; Parameters:    Size  Location     Type
 27436 ;;		None
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;		None
 27439 ;; Return value:  Size  Location     Type
 27440 ;;                  1    wreg      void 
 27441 ;; Registers used:
 27442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27443 ;; Tracked objects:
 27444 ;;		On entry : 0/0
 27445 ;;		On exit  : 0/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27448 ;;      Params:         0       0       0       0       0       0       0       0       0
 27449 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27451 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27452 ;;Total ram usage:        0 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; Hardware stack levels required when called:    5
 27455 ;; This function calls:
 27456 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27457 ;; This function is called by:
 27458 ;;		_USBDeviceTasks
 27459 ;; This function uses a non-reentrant model
 27460 ;;
 27461                           
 27462                           	psect	text116
 27463  005FD4                     __ptext116:
 27464                           	opt stack 0
 27465  005FD4                     _USBWakeFromSuspend:
 27466                           	opt stack 14
 27467                           
 27468                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 27469                           
 27470                           ; BSR set to: 0
 27471                           ;incstack = 0
 27472  005FD4  0E00               	movlw	0
 27473  005FD6  0101               	movlb	1	; () banked
 27474  005FD8  6F1F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 27475                           
 27476                           ; BSR set to: 1
 27477                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 27478  005FDA  0E00               	movlw	0
 27479  005FDC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27480  005FDE  0E74               	movlw	116
 27481  005FE0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27482  005FE2  0E00               	movlw	0
 27483  005FE4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27484  005FE6  0E00               	movlw	0
 27485  005FE8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27486  005FEA  0E00               	movlw	0
 27487  005FEC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27488  005FEE  0E00               	movlw	0
 27489  005FF0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27490  005FF2  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27491                           
 27492                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 27493  005FF6  9260               	bcf	3936,1,c	;volatile
 27494                           
 27495                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 27496  005FF8  9464               	bcf	3940,2,c	;volatile
 27497                           
 27498                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 27499  005FFA  D001               	goto	i2l2131
 27500  005FFC                     
 27501                           ;usb_device.c: 1977: {
 27502                           ;usb_device.c: 1978: (UIR &= 0xFB);
 27503  005FFC  9465               	bcf	3941,2,c	;volatile
 27504  005FFE                     i2l2131:
 27505  005FFE  A465               	btfss	3941,2,c	;volatile
 27506  006000  0012               	return	
 27507  006002  D7FC               	goto	i2l2132
 27508  006004                     __end_of_USBWakeFromSuspend:
 27509                           	opt stack 0
 27510                           pclatu	equ	0xFFB
 27511                           pclath	equ	0xFFA
 27512                           tblptru	equ	0xFF8
 27513                           tblptrh	equ	0xFF7
 27514                           tblptrl	equ	0xFF6
 27515                           tablat	equ	0xFF5
 27516                           prodh	equ	0xFF4
 27517                           prodl	equ	0xFF3
 27518                           intcon	equ	0xFF2
 27519                           intcon2	equ	0xFF1
 27520                           intcon3	equ	0xFF0
 27521                           indf0	equ	0xFEF
 27522                           postinc0	equ	0xFEE
 27523                           fsr0h	equ	0xFEA
 27524                           fsr0l	equ	0xFE9
 27525                           wreg	equ	0xFE8
 27526                           indf1	equ	0xFE7
 27527                           postdec1	equ	0xFE5
 27528                           fsr1h	equ	0xFE2
 27529                           fsr1l	equ	0xFE1
 27530                           indf2	equ	0xFDF
 27531                           postinc2	equ	0xFDE
 27532                           postdec2	equ	0xFDD
 27533                           plusw2	equ	0xFDB
 27534                           fsr2h	equ	0xFDA
 27535                           fsr2l	equ	0xFD9
 27536                           status	equ	0xFD8
 27537                           
 27538 ;; *************** function _USBSuspend *****************
 27539 ;; Defined at:
 27540 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 27541 ;; Parameters:    Size  Location     Type
 27542 ;;		None
 27543 ;; Auto vars:     Size  Location     Type
 27544 ;;		None
 27545 ;; Return value:  Size  Location     Type
 27546 ;;                  1    wreg      void 
 27547 ;; Registers used:
 27548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27549 ;; Tracked objects:
 27550 ;;		On entry : 0/0
 27551 ;;		On exit  : 0/0
 27552 ;;		Unchanged: 0/0
 27553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27554 ;;      Params:         0       0       0       0       0       0       0       0       0
 27555 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27557 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27558 ;;Total ram usage:        0 bytes
 27559 ;; Hardware stack levels used:    1
 27560 ;; Hardware stack levels required when called:    5
 27561 ;; This function calls:
 27562 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27563 ;; This function is called by:
 27564 ;;		_USBDeviceTasks
 27565 ;; This function uses a non-reentrant model
 27566 ;;
 27567                           
 27568                           	psect	text117
 27569  006116                     __ptext117:
 27570                           	opt stack 0
 27571  006116                     _USBSuspend:
 27572                           	opt stack 14
 27573                           
 27574                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 27575                           
 27576                           ;incstack = 0
 27577  006116  8464               	bsf	3940,2,c	;volatile
 27578                           
 27579                           ;usb_device.c: 1915: (UIR &= 0xEF);
 27580  006118  9865               	bcf	3941,4,c	;volatile
 27581                           
 27582                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 27583  00611A  8260               	bsf	3936,1,c	;volatile
 27584                           
 27585                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 27586  00611C  0E01               	movlw	1
 27587  00611E  0101               	movlb	1	; () banked
 27588  006120  6F1F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 27589                           
 27590                           ; BSR set to: 1
 27591                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 27592  006122  0E00               	movlw	0
 27593  006124  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27594  006126  0E75               	movlw	117
 27595  006128  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27596  00612A  0E00               	movlw	0
 27597  00612C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27598  00612E  0E00               	movlw	0
 27599  006130  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27600  006132  0E00               	movlw	0
 27601  006134  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27602  006136  0E00               	movlw	0
 27603  006138  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27604  00613A  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27605  00613E  0012               	return		;funcret
 27606  006140                     __end_of_USBSuspend:
 27607                           	opt stack 0
 27608                           pclatu	equ	0xFFB
 27609                           pclath	equ	0xFFA
 27610                           tblptru	equ	0xFF8
 27611                           tblptrh	equ	0xFF7
 27612                           tblptrl	equ	0xFF6
 27613                           tablat	equ	0xFF5
 27614                           prodh	equ	0xFF4
 27615                           prodl	equ	0xFF3
 27616                           intcon	equ	0xFF2
 27617                           intcon2	equ	0xFF1
 27618                           intcon3	equ	0xFF0
 27619                           indf0	equ	0xFEF
 27620                           postinc0	equ	0xFEE
 27621                           fsr0h	equ	0xFEA
 27622                           fsr0l	equ	0xFE9
 27623                           wreg	equ	0xFE8
 27624                           indf1	equ	0xFE7
 27625                           postdec1	equ	0xFE5
 27626                           fsr1h	equ	0xFE2
 27627                           fsr1l	equ	0xFE1
 27628                           indf2	equ	0xFDF
 27629                           postinc2	equ	0xFDE
 27630                           postdec2	equ	0xFDD
 27631                           plusw2	equ	0xFDB
 27632                           fsr2h	equ	0xFDA
 27633                           fsr2l	equ	0xFD9
 27634                           status	equ	0xFD8
 27635                           
 27636 ;; *************** function _USBStallHandler *****************
 27637 ;; Defined at:
 27638 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 27639 ;; Parameters:    Size  Location     Type
 27640 ;;		None
 27641 ;; Auto vars:     Size  Location     Type
 27642 ;;		None
 27643 ;; Return value:  Size  Location     Type
 27644 ;;                  1    wreg      void 
 27645 ;; Registers used:
 27646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27647 ;; Tracked objects:
 27648 ;;		On entry : 0/0
 27649 ;;		On exit  : 0/0
 27650 ;;		Unchanged: 0/0
 27651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27652 ;;      Params:         0       0       0       0       0       0       0       0       0
 27653 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27654 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27655 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27656 ;;Total ram usage:        1 bytes
 27657 ;; Hardware stack levels used:    1
 27658 ;; This function calls:
 27659 ;;		Nothing
 27660 ;; This function is called by:
 27661 ;;		_USBDeviceTasks
 27662 ;; This function uses a non-reentrant model
 27663 ;;
 27664                           
 27665                           	psect	text118
 27666  005BE0                     __ptext118:
 27667                           	opt stack 0
 27668  005BE0                     _USBStallHandler:
 27669                           	opt stack 19
 27670                           
 27671                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 27672                           
 27673                           ;incstack = 0
 27674  005BE0  A06A               	btfss	3946,0,c	;volatile
 27675  005BE2  D01D               	goto	i2l2123
 27676                           
 27677                           ;usb_device.c: 1859: {
 27678                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 27679  005BE4  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27680  005BE8  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27681  005BEC  0E80               	movlw	128
 27682  005BEE  18DE               	xorwf	postinc2,w,c
 27683  005BF0  A4D8               	btfss	status,2,c
 27684  005BF2  D014               	goto	i2l2124
 27685  005BF4  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 27686  005BF8  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27687  005BFC  0E84               	movlw	132
 27688  005BFE  18DE               	xorwf	postinc2,w,c
 27689  005C00  A4D8               	btfss	status,2,c
 27690  005C02  D00C               	goto	i2l2124
 27691                           
 27692                           ;usb_device.c: 1862: {
 27693                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27694  005C04  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27695  005C08  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27696  005C0C  0E0C               	movlw	12
 27697  005C0E  6EDF               	movwf	indf2,c
 27698                           
 27699                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 27700  005C10  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27701  005C14  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27702  005C18  0E00               	movlw	0
 27703  005C1A  8EDB               	bsf	plusw2,7,c
 27704  005C1C                     i2l2124:
 27705                           
 27706                           ;usb_device.c: 1866: }
 27707                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 27708  005C1C  906A               	bcf	3946,0,c	;volatile
 27709  005C1E                     i2l2123:
 27710                           
 27711                           ;usb_device.c: 1868: }
 27712                           ;usb_device.c: 1870: (UIR &= 0xDF);
 27713  005C1E  9A65               	bcf	3941,5,c	;volatile
 27714  005C20  0012               	return		;funcret
 27715  005C22                     __end_of_USBStallHandler:
 27716                           	opt stack 0
 27717                           pclatu	equ	0xFFB
 27718                           pclath	equ	0xFFA
 27719                           tblptru	equ	0xFF8
 27720                           tblptrh	equ	0xFF7
 27721                           tblptrl	equ	0xFF6
 27722                           tablat	equ	0xFF5
 27723                           prodh	equ	0xFF4
 27724                           prodl	equ	0xFF3
 27725                           intcon	equ	0xFF2
 27726                           intcon2	equ	0xFF1
 27727                           intcon3	equ	0xFF0
 27728                           indf0	equ	0xFEF
 27729                           postinc0	equ	0xFEE
 27730                           fsr0h	equ	0xFEA
 27731                           fsr0l	equ	0xFE9
 27732                           wreg	equ	0xFE8
 27733                           indf1	equ	0xFE7
 27734                           postdec1	equ	0xFE5
 27735                           fsr1h	equ	0xFE2
 27736                           fsr1l	equ	0xFE1
 27737                           indf2	equ	0xFDF
 27738                           postinc2	equ	0xFDE
 27739                           postdec2	equ	0xFDD
 27740                           plusw2	equ	0xFDB
 27741                           fsr2h	equ	0xFDA
 27742                           fsr2l	equ	0xFD9
 27743                           status	equ	0xFD8
 27744                           
 27745 ;; *************** function _USBCtrlEPService *****************
 27746 ;; Defined at:
 27747 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 27748 ;; Parameters:    Size  Location     Type
 27749 ;;		None
 27750 ;; Auto vars:     Size  Location     Type
 27751 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 27752 ;; Return value:  Size  Location     Type
 27753 ;;                  1    wreg      void 
 27754 ;; Registers used:
 27755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27756 ;; Tracked objects:
 27757 ;;		On entry : 0/0
 27758 ;;		On exit  : 0/0
 27759 ;;		Unchanged: 0/0
 27760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27761 ;;      Params:         0       0       0       0       0       0       0       0       0
 27762 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27763 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27764 ;;      Totals:         3       0       0       0       0       0       0       0       0
 27765 ;;Total ram usage:        3 bytes
 27766 ;; Hardware stack levels used:    1
 27767 ;; Hardware stack levels required when called:    8
 27768 ;; This function calls:
 27769 ;;		_USBCtrlTrfInHandler
 27770 ;;		_USBCtrlTrfOutHandler
 27771 ;;		_USBCtrlTrfSetupHandler
 27772 ;; This function is called by:
 27773 ;;		_USBDeviceTasks
 27774 ;; This function uses a non-reentrant model
 27775 ;;
 27776                           
 27777                           	psect	text119
 27778  0042CA                     __ptext119:
 27779                           	opt stack 0
 27780  0042CA                     _USBCtrlEPService:
 27781                           	opt stack 11
 27782                           
 27783                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 27784                           
 27785                           ;incstack = 0
 27786  0042CA  0E2D               	movlw	45
 27787  0042CC  6E44               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 27788                           
 27789                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 27790  0042CE  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27791  0042D2  0EFD               	movlw	253
 27792  0042D4  161C               	andwf	??_USBCtrlEPService,f,c
 27793  0042D6  A4D8               	btfss	status,2,c
 27794  0042D8  D057               	goto	i2l2137
 27795                           
 27796                           ;usb_device.c: 2013: {
 27797                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 27798  0042DA  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27799  0042DE  90D8               	bcf	status,0,c
 27800  0042E0  321C               	rrcf	??_USBCtrlEPService,f,c
 27801  0042E2  0E3F               	movlw	63
 27802  0042E4  161C               	andwf	??_USBCtrlEPService,f,c
 27803  0042E6  501C               	movf	??_USBCtrlEPService,w,c
 27804  0042E8  0D04               	mullw	4
 27805  0042EA  0E00               	movlw	0
 27806  0042EC  24F3               	addwf	prodl,w,c
 27807  0042EE  6E34               	movwf	_pBDTEntryEP0OutCurrent,c
 27808  0042F0  0E04               	movlw	4
 27809  0042F2  20F4               	addwfc	prodh,w,c
 27810  0042F4  6E35               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27811                           
 27812                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27813  0042F6  C034  F032         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27814  0042FA  C035  F033         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27815                           
 27816                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 27817  0042FE  0E04               	movlw	4
 27818  004300  1A32               	xorwf	_pBDTEntryEP0OutNext,f,c
 27819                           
 27820                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 27821  004302  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27822  004306  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27823  00430A  30DF               	rrcf	indf2,w,c
 27824  00430C  32E8               	rrcf	wreg,f,c
 27825  00430E  0B0F               	andlw	15
 27826  004310  0A0D               	xorlw	13
 27827  004312  A4D8               	btfss	status,2,c
 27828  004314  D036               	goto	i2l2138
 27829                           
 27830                           ;usb_device.c: 2025: {
 27831                           ;usb_device.c: 2026: unsigned char setup_cnt;
 27832                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 27833  004316  0E00               	movlw	0
 27834  004318  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 27835  00431A                     i2l11761:
 27836  00431A  0E07               	movlw	7
 27837  00431C  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 27838  00431E  D001               	goto	i2l2139
 27839  004320  D023               	goto	i2u1051_40
 27840  004322                     i2l2139:
 27841                           
 27842                           ;usb_device.c: 2033: {
 27843                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 27844  004322  EE20 F002          	lfsr	2,2
 27845  004326  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 27846  004328  26D9               	addwf	fsr2l,f,c
 27847  00432A  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27848  00432C  22DA               	addwfc	fsr2h,f,c
 27849  00432E  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 27850  004332  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 27851  004336  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 27852  00433A  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 27853  00433E  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 27854  004340  0D01               	mullw	1
 27855  004342  0E30               	movlw	48
 27856  004344  24F3               	addwf	prodl,w,c
 27857  004346  6EE1               	movwf	fsr1l,c
 27858  004348  0E04               	movlw	4
 27859  00434A  20F4               	addwfc	prodh,w,c
 27860  00434C  6EE2               	movwf	fsr1h,c
 27861  00434E  CFDF FFE7          	movff	indf2,indf1
 27862                           
 27863                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 27864  004352  EE20 F002          	lfsr	2,2
 27865  004356  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 27866  004358  26D9               	addwf	fsr2l,f,c
 27867  00435A  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27868  00435C  22DA               	addwfc	fsr2h,f,c
 27869  00435E  2ADE               	incf	postinc2,f,c
 27870  004360  0E00               	movlw	0
 27871  004362  22DD               	addwfc	postdec2,f,c
 27872  004364  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 27873  004366  D7D9               	goto	i2l11761
 27874  004368                     i2u1051_40:
 27875                           
 27876                           ;usb_device.c: 2036: }
 27877                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27878  004368  EE20 F002          	lfsr	2,2
 27879  00436C  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 27880  00436E  26D9               	addwf	fsr2l,f,c
 27881  004370  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27882  004372  22DA               	addwfc	fsr2h,f,c
 27883  004374  0E30               	movlw	48
 27884  004376  6EDE               	movwf	postinc2,c
 27885  004378  0E04               	movlw	4
 27886  00437A  6EDD               	movwf	postdec2,c
 27887                           
 27888                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 27889  00437C  ECB5  F028         	call	_USBCtrlTrfSetupHandler	;wreg free
 27890                           
 27891                           ;usb_device.c: 2041: }
 27892  004380  0012               	return	
 27893  004382                     i2l2138:
 27894                           
 27895                           ;usb_device.c: 2042: else
 27896                           ;usb_device.c: 2043: {
 27897                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 27898  004382  EC3B  F02C         	call	_USBCtrlTrfOutHandler	;wreg free
 27899                           
 27900                           ;usb_device.c: 2046: }
 27901                           ;usb_device.c: 2047: }
 27902  004386  0012               	return	
 27903  004388                     i2l2137:
 27904                           
 27905                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 27906  004388  5058               	movf	_USTATcopy,w,c	;volatile
 27907  00438A  0BFD               	andlw	253
 27908  00438C  0A04               	xorlw	4
 27909  00438E  A4D8               	btfss	status,2,c
 27910  004390  0012               	return	
 27911                           
 27912                           ;usb_device.c: 2049: {
 27913                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 27914  004392  ECBB  F01F         	call	_USBCtrlTrfInHandler	;wreg free
 27915  004396  0012               	return	
 27916  004398                     __end_of_USBCtrlEPService:
 27917                           	opt stack 0
 27918                           pclatu	equ	0xFFB
 27919                           pclath	equ	0xFFA
 27920                           tblptru	equ	0xFF8
 27921                           tblptrh	equ	0xFF7
 27922                           tblptrl	equ	0xFF6
 27923                           tablat	equ	0xFF5
 27924                           prodh	equ	0xFF4
 27925                           prodl	equ	0xFF3
 27926                           intcon	equ	0xFF2
 27927                           intcon2	equ	0xFF1
 27928                           intcon3	equ	0xFF0
 27929                           indf0	equ	0xFEF
 27930                           postinc0	equ	0xFEE
 27931                           fsr0h	equ	0xFEA
 27932                           fsr0l	equ	0xFE9
 27933                           wreg	equ	0xFE8
 27934                           indf1	equ	0xFE7
 27935                           postdec1	equ	0xFE5
 27936                           fsr1h	equ	0xFE2
 27937                           fsr1l	equ	0xFE1
 27938                           indf2	equ	0xFDF
 27939                           postinc2	equ	0xFDE
 27940                           postdec2	equ	0xFDD
 27941                           plusw2	equ	0xFDB
 27942                           fsr2h	equ	0xFDA
 27943                           fsr2l	equ	0xFD9
 27944                           status	equ	0xFD8
 27945                           
 27946 ;; *************** function _USBCtrlTrfSetupHandler *****************
 27947 ;; Defined at:
 27948 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 27949 ;; Parameters:    Size  Location     Type
 27950 ;;		None
 27951 ;; Auto vars:     Size  Location     Type
 27952 ;;		None
 27953 ;; Return value:  Size  Location     Type
 27954 ;;                  1    wreg      void 
 27955 ;; Registers used:
 27956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27957 ;; Tracked objects:
 27958 ;;		On entry : 0/0
 27959 ;;		On exit  : 0/0
 27960 ;;		Unchanged: 0/0
 27961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27962 ;;      Params:         0       0       0       0       0       0       0       0       0
 27963 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27964 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27965 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27966 ;;Total ram usage:        0 bytes
 27967 ;; Hardware stack levels used:    1
 27968 ;; Hardware stack levels required when called:    7
 27969 ;; This function calls:
 27970 ;;		_USBCheckStdRequest
 27971 ;;		_USBCtrlEPServiceComplete
 27972 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27973 ;; This function is called by:
 27974 ;;		_USBCtrlEPService
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text120
 27979  00516A                     __ptext120:
 27980                           	opt stack 0
 27981  00516A                     _USBCtrlTrfSetupHandler:
 27982                           	opt stack 11
 27983                           
 27984                           ;usb_device.c: 2102: shortPacketStatus = 0;
 27985                           
 27986                           ;incstack = 0
 27987  00516A  0E00               	movlw	0
 27988  00516C  6E49               	movwf	_shortPacketStatus,c	;volatile
 27989                           
 27990                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 27991  00516E  0E00               	movlw	0
 27992  005170  6E43               	movwf	_USBDeferStatusStagePacket,c	;volatile
 27993                           
 27994                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 27995  005172  0E00               	movlw	0
 27996  005174  6E40               	movwf	_USBDeferINDataStagePackets,c	;volatile
 27997                           
 27998                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 27999  005176  0E00               	movlw	0
 28000  005178  6E3F               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 28001                           
 28002                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 28003  00517A  0E00               	movlw	0
 28004  00517C  6E45               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28005                           
 28006                           ;usb_device.c: 2107: controlTransferState = 0;
 28007  00517E  0E00               	movlw	0
 28008  005180  6E48               	movwf	_controlTransferState,c	;volatile
 28009                           
 28010                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28011  005182  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28012  005186  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28013  00518A  0E7F               	movlw	127
 28014  00518C  16DF               	andwf	indf2,f,c
 28015                           
 28016                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28017  00518E  0E04               	movlw	4
 28018  005190  0100               	movlb	0	; () banked
 28019  005192  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 28020                           
 28021                           ; BSR set to: 0
 28022                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28023  005194  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28024  005198  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28025  00519C  0E7F               	movlw	127
 28026  00519E  16DF               	andwf	indf2,f,c
 28027                           
 28028                           ; BSR set to: 0
 28029                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28030  0051A0  0E04               	movlw	4
 28031  0051A2  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 28032                           
 28033                           ; BSR set to: 0
 28034                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 28035  0051A4  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28036  0051A8  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28037  0051AC  0E7F               	movlw	127
 28038  0051AE  16DF               	andwf	indf2,f,c
 28039                           
 28040                           ; BSR set to: 0
 28041                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 28042  0051B0  0E00               	movlw	0
 28043  0051B2  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28044                           
 28045                           ; BSR set to: 0
 28046                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 28047  0051B4  0E00               	movlw	0
 28048  0051B6  6FCD               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28049  0051B8  0E00               	movlw	0
 28050  0051BA  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28051                           
 28052                           ; BSR set to: 0
 28053                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 28054  0051BC  0E00               	movlw	0
 28055  0051BE  6FC3               	movwf	(_outPipes+3)& (0+255),b	;volatile
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 28059  0051C0  0E00               	movlw	0
 28060  0051C2  6FC5               	movwf	(_outPipes+5)& (0+255),b	;volatile
 28061  0051C4  0E00               	movlw	0
 28062  0051C6  6FC4               	movwf	(_outPipes+4)& (0+255),b	;volatile
 28063                           
 28064                           ; BSR set to: 0
 28065                           ;usb_device.c: 2131: USBCheckStdRequest();
 28066  0051C8  ECFA  F01D         	call	_USBCheckStdRequest	;wreg free
 28067                           
 28068                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 28069  0051CC  0E00               	movlw	0
 28070  0051CE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28071  0051D0  0E03               	movlw	3
 28072  0051D2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28073  0051D4  0E00               	movlw	0
 28074  0051D6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28075  0051D8  0E00               	movlw	0
 28076  0051DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28077  0051DC  0E00               	movlw	0
 28078  0051DE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28079  0051E0  0E00               	movlw	0
 28080  0051E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28081  0051E4  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28082                           
 28083                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 28084  0051E8  EC98  F01C         	call	_USBCtrlEPServiceComplete	;wreg free
 28085  0051EC  0012               	return		;funcret
 28086  0051EE                     __end_of_USBCtrlTrfSetupHandler:
 28087                           	opt stack 0
 28088                           pclatu	equ	0xFFB
 28089                           pclath	equ	0xFFA
 28090                           tblptru	equ	0xFF8
 28091                           tblptrh	equ	0xFF7
 28092                           tblptrl	equ	0xFF6
 28093                           tablat	equ	0xFF5
 28094                           prodh	equ	0xFF4
 28095                           prodl	equ	0xFF3
 28096                           intcon	equ	0xFF2
 28097                           intcon2	equ	0xFF1
 28098                           intcon3	equ	0xFF0
 28099                           indf0	equ	0xFEF
 28100                           postinc0	equ	0xFEE
 28101                           fsr0h	equ	0xFEA
 28102                           fsr0l	equ	0xFE9
 28103                           wreg	equ	0xFE8
 28104                           indf1	equ	0xFE7
 28105                           postdec1	equ	0xFE5
 28106                           fsr1h	equ	0xFE2
 28107                           fsr1l	equ	0xFE1
 28108                           indf2	equ	0xFDF
 28109                           postinc2	equ	0xFDE
 28110                           postdec2	equ	0xFDD
 28111                           plusw2	equ	0xFDB
 28112                           fsr2h	equ	0xFDA
 28113                           fsr2l	equ	0xFD9
 28114                           status	equ	0xFD8
 28115                           
 28116 ;; *************** function _USBCtrlEPServiceComplete *****************
 28117 ;; Defined at:
 28118 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 28119 ;; Parameters:    Size  Location     Type
 28120 ;;		None
 28121 ;; Auto vars:     Size  Location     Type
 28122 ;;		None
 28123 ;; Return value:  Size  Location     Type
 28124 ;;                  1    wreg      void 
 28125 ;; Registers used:
 28126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28127 ;; Tracked objects:
 28128 ;;		On entry : 0/0
 28129 ;;		On exit  : 0/0
 28130 ;;		Unchanged: 0/0
 28131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28132 ;;      Params:         0       0       0       0       0       0       0       0       0
 28133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28135 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28136 ;;Total ram usage:        0 bytes
 28137 ;; Hardware stack levels used:    1
 28138 ;; Hardware stack levels required when called:    2
 28139 ;; This function calls:
 28140 ;;		_USBCtrlEPAllowDataStage
 28141 ;;		_USBCtrlEPAllowStatusStage
 28142 ;; This function is called by:
 28143 ;;		_USBCtrlTrfSetupHandler
 28144 ;; This function uses a non-reentrant model
 28145 ;;
 28146                           
 28147                           	psect	text121
 28148  003930                     __ptext121:
 28149                           	opt stack 0
 28150  003930                     _USBCtrlEPServiceComplete:
 28151                           	opt stack 15
 28152                           
 28153                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 28154                           
 28155                           ;incstack = 0
 28156  003930  9860               	bcf	3936,4,c	;volatile
 28157                           
 28158                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 28159  003932  0100               	movlb	0	; () banked
 28160  003934  BFCB               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 28161  003936  D038               	goto	i2l2047
 28162                           
 28163                           ; BSR set to: 0
 28164                           ;usb_device.c: 1295: {
 28165                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 28166  003938  AFC3               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 28167  00393A  D00B               	goto	i2l2048
 28168                           
 28169                           ; BSR set to: 0
 28170                           ;usb_device.c: 1297: {
 28171                           ;usb_device.c: 1298: controlTransferState = 2;
 28172  00393C  0E02               	movlw	2
 28173  00393E  6E48               	movwf	_controlTransferState,c	;volatile
 28174                           
 28175                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 28176  003940  503F               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 28177  003942  B4D8               	btfsc	status,2,c
 28178                           
 28179                           ; BSR set to: 0
 28180                           ;usb_device.c: 1310: {
 28181                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 28182  003944  EC7C  F026         	call	_USBCtrlEPAllowDataStage	;wreg free
 28183                           
 28184                           ;usb_device.c: 1312: }
 28185                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 28186  003948  0E00               	movlw	0
 28187  00394A  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28188                           
 28189                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 28190  00394C  0E00               	movlw	0
 28191  00394E  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28192                           
 28193                           ;usb_device.c: 1318: }
 28194  003950  0012               	return	
 28195  003952                     i2l2048:
 28196                           
 28197                           ;usb_device.c: 1319: else
 28198                           ;usb_device.c: 1320: {
 28199                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 28200  003952  EE20 F001          	lfsr	2,1
 28201  003956  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28202  003958  26D9               	addwf	fsr2l,f,c
 28203  00395A  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28204  00395C  22DA               	addwfc	fsr2h,f,c
 28205  00395E  0E08               	movlw	8
 28206  003960  6EDF               	movwf	indf2,c
 28207                           
 28208                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28209  003962  EE20 F002          	lfsr	2,2
 28210  003966  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28211  003968  26D9               	addwf	fsr2l,f,c
 28212  00396A  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28213  00396C  22DA               	addwfc	fsr2h,f,c
 28214  00396E  0E30               	movlw	48
 28215  003970  6EDE               	movwf	postinc2,c
 28216  003972  0E04               	movlw	4
 28217  003974  6EDD               	movwf	postdec2,c
 28218                           
 28219                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28220  003976  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28221  00397A  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28222  00397E  0E0C               	movlw	12
 28223  003980  6EDF               	movwf	indf2,c
 28224                           
 28225                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28226  003982  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28227  003986  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28228  00398A  0E00               	movlw	0
 28229  00398C  8EDB               	bsf	plusw2,7,c
 28230                           
 28231                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 28232  00398E  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28233  003992  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28234  003996  0E04               	movlw	4
 28235  003998  6EDF               	movwf	indf2,c
 28236                           
 28237                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28238  00399A  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28239  00399E  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28240  0039A2  0E00               	movlw	0
 28241  0039A4  8EDB               	bsf	plusw2,7,c
 28242                           
 28243                           ;usb_device.c: 1331: }
 28244                           ;usb_device.c: 1332: }
 28245  0039A6  0012               	return	
 28246  0039A8                     i2l2047:
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;usb_device.c: 1333: else
 28250                           ;usb_device.c: 1334: {
 28251                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 28252  0039A8  0104               	movlb	4	; () banked
 28253  0039AA  AF30               	btfss	48,7,b	;volatile
 28254  0039AC  D010               	goto	i2l2052
 28255                           
 28256                           ; BSR set to: 4
 28257                           ;usb_device.c: 1336: {
 28258                           ;usb_device.c: 1337: controlTransferState = 1;
 28259  0039AE  0E01               	movlw	1
 28260  0039B0  6E48               	movwf	_controlTransferState,c	;volatile
 28261                           
 28262                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 28263  0039B2  5040               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 28264  0039B4  B4D8               	btfsc	status,2,c
 28265                           
 28266                           ; BSR set to: 4
 28267                           ;usb_device.c: 1352: {
 28268                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 28269  0039B6  EC7C  F026         	call	_USBCtrlEPAllowDataStage	;wreg free
 28270                           
 28271                           ;usb_device.c: 1354: }
 28272                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 28273  0039BA  0E00               	movlw	0
 28274  0039BC  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28275                           
 28276                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 28277  0039BE  0E00               	movlw	0
 28278  0039C0  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28279                           
 28280                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 28281  0039C2  5043               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28282  0039C4  A4D8               	btfss	status,2,c
 28283  0039C6  0012               	return	
 28284                           
 28285                           ;usb_device.c: 1379: {
 28286                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 28287  0039C8  EC2F  F022         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28288                           
 28289                           ;usb_device.c: 1381: }
 28290                           ;usb_device.c: 1382: }
 28291  0039CC  0012               	return	
 28292  0039CE                     i2l2052:
 28293                           
 28294                           ;usb_device.c: 1383: else
 28295                           ;usb_device.c: 1384: {
 28296                           ;usb_device.c: 1395: controlTransferState = 2;
 28297  0039CE  0E02               	movlw	2
 28298  0039D0  6E48               	movwf	_controlTransferState,c	;volatile
 28299                           
 28300                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 28301  0039D2  EE20 F001          	lfsr	2,1
 28302  0039D6  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28303  0039D8  26D9               	addwf	fsr2l,f,c
 28304  0039DA  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28305  0039DC  22DA               	addwfc	fsr2h,f,c
 28306  0039DE  0E08               	movlw	8
 28307  0039E0  6EDF               	movwf	indf2,c
 28308                           
 28309                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28310  0039E2  EE20 F002          	lfsr	2,2
 28311  0039E6  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28312  0039E8  26D9               	addwf	fsr2l,f,c
 28313  0039EA  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28314  0039EC  22DA               	addwfc	fsr2h,f,c
 28315  0039EE  0E30               	movlw	48
 28316  0039F0  6EDE               	movwf	postinc2,c
 28317  0039F2  0E04               	movlw	4
 28318  0039F4  6EDD               	movwf	postdec2,c
 28319                           
 28320                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28321  0039F6  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28322  0039FA  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28323  0039FE  0E04               	movlw	4
 28324  003A00  6EDF               	movwf	indf2,c
 28325                           
 28326                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28327  003A02  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28328  003A06  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28329  003A0A  0E00               	movlw	0
 28330  003A0C  8EDB               	bsf	plusw2,7,c
 28331                           
 28332                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 28333  003A0E  0E00               	movlw	0
 28334  003A10  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28335                           
 28336                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 28337  003A12  0E00               	movlw	0
 28338  003A14  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28339                           
 28340                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 28341  003A16  5043               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28342  003A18  A4D8               	btfss	status,2,c
 28343  003A1A  0012               	return	
 28344                           
 28345                           ;usb_device.c: 1407: {
 28346                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 28347  003A1C  EC2F  F022         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28348  003A20  0012               	return	
 28349  003A22                     __end_of_USBCtrlEPServiceComplete:
 28350                           	opt stack 0
 28351                           pclatu	equ	0xFFB
 28352                           pclath	equ	0xFFA
 28353                           tblptru	equ	0xFF8
 28354                           tblptrh	equ	0xFF7
 28355                           tblptrl	equ	0xFF6
 28356                           tablat	equ	0xFF5
 28357                           prodh	equ	0xFF4
 28358                           prodl	equ	0xFF3
 28359                           intcon	equ	0xFF2
 28360                           intcon2	equ	0xFF1
 28361                           intcon3	equ	0xFF0
 28362                           indf0	equ	0xFEF
 28363                           postinc0	equ	0xFEE
 28364                           fsr0h	equ	0xFEA
 28365                           fsr0l	equ	0xFE9
 28366                           wreg	equ	0xFE8
 28367                           indf1	equ	0xFE7
 28368                           postdec1	equ	0xFE5
 28369                           fsr1h	equ	0xFE2
 28370                           fsr1l	equ	0xFE1
 28371                           indf2	equ	0xFDF
 28372                           postinc2	equ	0xFDE
 28373                           postdec2	equ	0xFDD
 28374                           plusw2	equ	0xFDB
 28375                           fsr2h	equ	0xFDA
 28376                           fsr2l	equ	0xFD9
 28377                           status	equ	0xFD8
 28378                           
 28379 ;; *************** function _USBCtrlEPAllowDataStage *****************
 28380 ;; Defined at:
 28381 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 28382 ;; Parameters:    Size  Location     Type
 28383 ;;		None
 28384 ;; Auto vars:     Size  Location     Type
 28385 ;;		None
 28386 ;; Return value:  Size  Location     Type
 28387 ;;                  1    wreg      void 
 28388 ;; Registers used:
 28389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28390 ;; Tracked objects:
 28391 ;;		On entry : 0/0
 28392 ;;		On exit  : 0/0
 28393 ;;		Unchanged: 0/0
 28394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28395 ;;      Params:         0       0       0       0       0       0       0       0       0
 28396 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28398 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28399 ;;Total ram usage:        0 bytes
 28400 ;; Hardware stack levels used:    1
 28401 ;; Hardware stack levels required when called:    1
 28402 ;; This function calls:
 28403 ;;		_USBCtrlTrfTxService
 28404 ;; This function is called by:
 28405 ;;		_USBCtrlEPServiceComplete
 28406 ;; This function uses a non-reentrant model
 28407 ;;
 28408                           
 28409                           	psect	text122
 28410  004CF8                     __ptext122:
 28411                           	opt stack 0
 28412  004CF8                     _USBCtrlEPAllowDataStage:
 28413                           	opt stack 15
 28414                           
 28415                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 28416                           
 28417                           ;incstack = 0
 28418  004CF8  0E00               	movlw	0
 28419  004CFA  6E40               	movwf	_USBDeferINDataStagePackets,c	;volatile
 28420                           
 28421                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 28422  004CFC  0E00               	movlw	0
 28423  004CFE  6E3F               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 28424                           
 28425                           ;usb_device.c: 1178: if(controlTransferState == 2)
 28426  004D00  0E02               	movlw	2
 28427  004D02  1848               	xorwf	_controlTransferState,w,c	;volatile
 28428  004D04  A4D8               	btfss	status,2,c
 28429  004D06  D01F               	goto	i2l2036
 28430                           
 28431                           ;usb_device.c: 1179: {
 28432                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 28433  004D08  EE20 F001          	lfsr	2,1
 28434  004D0C  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28435  004D0E  26D9               	addwf	fsr2l,f,c
 28436  004D10  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28437  004D12  22DA               	addwfc	fsr2h,f,c
 28438  004D14  0E08               	movlw	8
 28439  004D16  6EDF               	movwf	indf2,c
 28440                           
 28441                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28442  004D18  EE20 F002          	lfsr	2,2
 28443  004D1C  5032               	movf	_pBDTEntryEP0OutNext,w,c
 28444  004D1E  26D9               	addwf	fsr2l,f,c
 28445  004D20  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 28446  004D22  22DA               	addwfc	fsr2h,f,c
 28447  004D24  0E38               	movlw	56
 28448  004D26  6EDE               	movwf	postinc2,c
 28449  004D28  0E04               	movlw	4
 28450  004D2A  6EDD               	movwf	postdec2,c
 28451                           
 28452                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28453  004D2C  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28454  004D30  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28455  004D34  0E48               	movlw	72
 28456  004D36  6EDF               	movwf	indf2,c
 28457                           
 28458                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28459  004D38  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28460  004D3C  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28461  004D40  0E00               	movlw	0
 28462  004D42  8EDB               	bsf	plusw2,7,c
 28463                           
 28464                           ;usb_device.c: 1185: }
 28465  004D44  0012               	return	
 28466  004D46                     i2l2036:
 28467                           
 28468                           ;usb_device.c: 1186: else
 28469                           ;usb_device.c: 1187: {
 28470                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 28471  004D46  0100               	movlb	0	; () banked
 28472  004D48  51CC               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 28473  004D4A  0104               	movlb	4	; () banked
 28474  004D4C  5D36               	subwf	54,w,b	;volatile
 28475  004D4E  0100               	movlb	0	; () banked
 28476  004D50  51CD               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 28477  004D52  0104               	movlb	4	; () banked
 28478  004D54  5937               	subwfb	55,w,b	;volatile
 28479  004D56  B0D8               	btfsc	status,0,c
 28480  004D58  D004               	goto	i2l2038
 28481                           
 28482                           ; BSR set to: 4
 28483                           ;usb_device.c: 1191: {
 28484                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 28485  004D5A  C436 F0CC          	movff	1078,_inPipes+4	;volatile
 28486  004D5E  C437 F0CD          	movff	1079,_inPipes+5	;volatile
 28487  004D62                     i2l2038:
 28488                           
 28489                           ; BSR set to: 4
 28490                           ;usb_device.c: 1193: }
 28491                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 28492                           
 28493                           ; BSR set to: 4
 28494  004D62  EC93  F020         	call	_USBCtrlTrfTxService	;wreg free
 28495                           
 28496                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 28497  004D66  0100               	movlb	0	; () banked
 28498  004D68  EE20 F002          	lfsr	2,2
 28499  004D6C  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 28500  004D6E  26D9               	addwf	fsr2l,f,c
 28501  004D70  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28502  004D72  22DA               	addwfc	fsr2h,f,c
 28503  004D74  0E38               	movlw	56
 28504  004D76  6EDE               	movwf	postinc2,c
 28505  004D78  0E04               	movlw	4
 28506  004D7A  6EDD               	movwf	postdec2,c
 28507                           
 28508                           ; BSR set to: 0
 28509                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28510  004D7C  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28511  004D80  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28512  004D84  0E48               	movlw	72
 28513  004D86  6EDF               	movwf	indf2,c
 28514                           
 28515                           ; BSR set to: 0
 28516                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28517  004D88  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 28518  004D8C  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28519  004D90  0E00               	movlw	0
 28520  004D92  8EDB               	bsf	plusw2,7,c
 28521  004D94  0012               	return	
 28522  004D96                     __end_of_USBCtrlEPAllowDataStage:
 28523                           	opt stack 0
 28524                           pclatu	equ	0xFFB
 28525                           pclath	equ	0xFFA
 28526                           tblptru	equ	0xFF8
 28527                           tblptrh	equ	0xFF7
 28528                           tblptrl	equ	0xFF6
 28529                           tablat	equ	0xFF5
 28530                           prodh	equ	0xFF4
 28531                           prodl	equ	0xFF3
 28532                           intcon	equ	0xFF2
 28533                           intcon2	equ	0xFF1
 28534                           intcon3	equ	0xFF0
 28535                           indf0	equ	0xFEF
 28536                           postinc0	equ	0xFEE
 28537                           fsr0h	equ	0xFEA
 28538                           fsr0l	equ	0xFE9
 28539                           wreg	equ	0xFE8
 28540                           indf1	equ	0xFE7
 28541                           postdec1	equ	0xFE5
 28542                           fsr1h	equ	0xFE2
 28543                           fsr1l	equ	0xFE1
 28544                           indf2	equ	0xFDF
 28545                           postinc2	equ	0xFDE
 28546                           postdec2	equ	0xFDD
 28547                           plusw2	equ	0xFDB
 28548                           fsr2h	equ	0xFDA
 28549                           fsr2l	equ	0xFD9
 28550                           status	equ	0xFD8
 28551                           
 28552 ;; *************** function _USBCheckStdRequest *****************
 28553 ;; Defined at:
 28554 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 28555 ;; Parameters:    Size  Location     Type
 28556 ;;		None
 28557 ;; Auto vars:     Size  Location     Type
 28558 ;;		None
 28559 ;; Return value:  Size  Location     Type
 28560 ;;                  1    wreg      void 
 28561 ;; Registers used:
 28562 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28563 ;; Tracked objects:
 28564 ;;		On entry : 0/0
 28565 ;;		On exit  : 0/0
 28566 ;;		Unchanged: 0/0
 28567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28568 ;;      Params:         0       0       0       0       0       0       0       0       0
 28569 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28571 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28572 ;;Total ram usage:        0 bytes
 28573 ;; Hardware stack levels used:    1
 28574 ;; Hardware stack levels required when called:    6
 28575 ;; This function calls:
 28576 ;;		_USBStdFeatureReqHandler
 28577 ;;		_USBStdGetDscHandler
 28578 ;;		_USBStdGetStatusHandler
 28579 ;;		_USBStdSetCfgHandler
 28580 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28581 ;; This function is called by:
 28582 ;;		_USBCtrlTrfSetupHandler
 28583 ;; This function uses a non-reentrant model
 28584 ;;
 28585                           
 28586                           	psect	text123
 28587  003BF4                     __ptext123:
 28588                           	opt stack 0
 28589  003BF4                     _USBCheckStdRequest:
 28590                           	opt stack 11
 28591                           
 28592                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 28593                           
 28594                           ;incstack = 0
 28595  003BF4  0104               	movlb	4	; () banked
 28596  003BF6  3930               	swapf	48,w,b	;volatile
 28597  003BF8  32E8               	rrcf	wreg,f,c
 28598  003BFA  0B03               	andlw	3
 28599  003BFC  0900               	iorlw	0
 28600  003BFE  A4D8               	btfss	status,2,c
 28601  003C00  0012               	return	
 28602  003C02  D047               	goto	i2l2173
 28603  003C04                     i2l2174:
 28604                           
 28605                           ; BSR set to: 4
 28606                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 28607  003C04  0100               	movlb	0	; () banked
 28608  003C06  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28609                           
 28610                           ; BSR set to: 0
 28611                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 28612  003C08  0E08               	movlw	8
 28613  003C0A  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 28614                           
 28615                           ;usb_device.c: 2327: break;
 28616  003C0C  0012               	return	
 28617  003C0E                     
 28618                           ;usb_device.c: 2329: USBStdGetDscHandler();
 28619                           
 28620                           ; BSR set to: 0
 28621  003C0E  EC81  F017         	call	_USBStdGetDscHandler	;wreg free
 28622                           
 28623                           ;usb_device.c: 2330: break;
 28624  003C12  0012               	return	
 28625  003C14                     
 28626                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 28627  003C14  EC6B  F01E         	call	_USBStdSetCfgHandler	;wreg free
 28628                           
 28629                           ;usb_device.c: 2333: break;
 28630  003C18  0012               	return	
 28631  003C1A                     
 28632                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 28633  003C1A  0E59               	movlw	low _USBActiveConfiguration
 28634  003C1C  0100               	movlb	0	; () banked
 28635  003C1E  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 28636  003C20  0E00               	movlw	high _USBActiveConfiguration
 28637  003C22  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28641  003C24  81CB               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28642                           
 28643                           ; BSR set to: 0
 28644                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 28645  003C26  0E01               	movlw	1
 28646  003C28  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28647                           
 28648                           ; BSR set to: 0
 28649                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 28650  003C2A  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28651                           
 28652                           ;usb_device.c: 2339: break;
 28653  003C2C  0012               	return	
 28654  003C2E                     
 28655                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 28656                           
 28657                           ; BSR set to: 0
 28658  003C2E  EC28  F026         	call	_USBStdGetStatusHandler	;wreg free
 28659                           
 28660                           ;usb_device.c: 2342: break;
 28661  003C32  0012               	return	
 28662  003C34                     
 28663                           ;usb_device.c: 2344: case 3:
 28664                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 28665  003C34  EC62  F013         	call	_USBStdFeatureReqHandler	;wreg free
 28666                           
 28667                           ;usb_device.c: 2346: break;
 28668  003C38  0012               	return	
 28669  003C3A                     
 28670                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 28671  003C3A  0104               	movlb	4	; () banked
 28672  003C3C  5134               	movf	52,w,b	;volatile
 28673  003C3E  0D01               	mullw	1
 28674  003C40  0E56               	movlw	low _USBAlternateInterface
 28675  003C42  24F3               	addwf	prodl,w,c
 28676  003C44  0100               	movlb	0	; () banked
 28677  003C46  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 28678  003C48  0E00               	movlw	high _USBAlternateInterface
 28679  003C4A  20F4               	addwfc	prodh,w,c
 28680  003C4C  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28681                           
 28682                           ; BSR set to: 0
 28683                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28684  003C4E  81CB               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28685                           
 28686                           ; BSR set to: 0
 28687                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 28688  003C50  0E01               	movlw	1
 28689  003C52  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28690                           
 28691                           ; BSR set to: 0
 28692                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 28693  003C54  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28694                           
 28695                           ;usb_device.c: 2352: break;
 28696  003C56  0012               	return	
 28697  003C58                     i2l2183:
 28698                           
 28699                           ; BSR set to: 4
 28700                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 28701  003C58  0100               	movlb	0	; () banked
 28702  003C5A  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28703                           
 28704                           ; BSR set to: 0
 28705                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 28706  003C5C  0104               	movlb	4	; () banked
 28707  003C5E  5134               	movf	52,w,b	;volatile
 28708  003C60  0D01               	mullw	1
 28709  003C62  0E56               	movlw	low _USBAlternateInterface
 28710  003C64  24F3               	addwf	prodl,w,c
 28711  003C66  6ED9               	movwf	fsr2l,c
 28712  003C68  0E00               	movlw	high _USBAlternateInterface
 28713  003C6A  20F4               	addwfc	prodh,w,c
 28714  003C6C  6EDA               	movwf	fsr2h,c
 28715  003C6E  C432 FFDF          	movff	1074,indf2	;volatile
 28716                           
 28717                           ;usb_device.c: 2356: break;
 28718  003C72  0012               	return	
 28719  003C74                     
 28720                           ; BSR set to: 4
 28721                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 28722                           
 28723                           ; BSR set to: 4
 28724  003C74  0E00               	movlw	0
 28725  003C76  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28726  003C78  0E02               	movlw	2
 28727  003C7A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28728  003C7C  0E00               	movlw	0
 28729  003C7E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28730  003C80  0E00               	movlw	0
 28731  003C82  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28732  003C84  0E00               	movlw	0
 28733  003C86  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28734  003C88  0E00               	movlw	0
 28735  003C8A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28736  003C8C  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28737                           
 28738                           ;usb_device.c: 2363: }
 28739                           
 28740                           ;usb_device.c: 2362: break;
 28741                           
 28742                           ;usb_device.c: 2361: default:
 28743                           
 28744                           ;usb_device.c: 2360: case 12:
 28745                           
 28746                           ;usb_device.c: 2359: break;
 28747  003C90  0012               	return	
 28748  003C92                     i2l2173:
 28749  003C92  0104               	movlb	4	; () banked
 28750  003C94  5131               	movf	49,w,b	;volatile
 28751                           
 28752                           ; Switch size 1, requested type "space"
 28753                           ; Number of cases is 11, Range of values is 0 to 12
 28754                           ; switch strategies available:
 28755                           ; Name         Instructions Cycles
 28756                           ; simple_byte           34    18 (average)
 28757                           ;	Chosen strategy is simple_byte
 28758  003C96  0A00               	xorlw	0	; case 0
 28759  003C98  B4D8               	btfsc	status,2,c
 28760  003C9A  D7C9               	goto	i2l2179
 28761  003C9C  0A01               	xorlw	1	; case 1
 28762  003C9E  B4D8               	btfsc	status,2,c
 28763  003CA0  D7C9               	goto	i2l2180
 28764  003CA2  0A02               	xorlw	2	; case 3
 28765  003CA4  B4D8               	btfsc	status,2,c
 28766  003CA6  D7C6               	goto	i2l2180
 28767  003CA8  0A06               	xorlw	6	; case 5
 28768  003CAA  B4D8               	btfsc	status,2,c
 28769  003CAC  D7AB               	goto	i2l2174
 28770  003CAE  0A03               	xorlw	3	; case 6
 28771  003CB0  B4D8               	btfsc	status,2,c
 28772  003CB2  D7AD               	goto	i2l2176
 28773  003CB4  0A01               	xorlw	1	; case 7
 28774  003CB6  B4D8               	btfsc	status,2,c
 28775  003CB8  D7DD               	goto	i2l2184
 28776  003CBA  0A0F               	xorlw	15	; case 8
 28777  003CBC  B4D8               	btfsc	status,2,c
 28778  003CBE  D7AD               	goto	i2l2178
 28779  003CC0  0A01               	xorlw	1	; case 9
 28780  003CC2  B4D8               	btfsc	status,2,c
 28781  003CC4  D7A7               	goto	i2l2177
 28782  003CC6  0A03               	xorlw	3	; case 10
 28783  003CC8  B4D8               	btfsc	status,2,c
 28784  003CCA  D7B7               	goto	i2l2182
 28785  003CCC  0A01               	xorlw	1	; case 11
 28786  003CCE  B4D8               	btfsc	status,2,c
 28787  003CD0  D7C3               	goto	i2l2183
 28788  003CD2  0A07               	xorlw	7	; case 12
 28789  003CD4  0012               	return	
 28790  003CD6                     __end_of_USBCheckStdRequest:
 28791                           	opt stack 0
 28792                           pclatu	equ	0xFFB
 28793                           pclath	equ	0xFFA
 28794                           tblptru	equ	0xFF8
 28795                           tblptrh	equ	0xFF7
 28796                           tblptrl	equ	0xFF6
 28797                           tablat	equ	0xFF5
 28798                           prodh	equ	0xFF4
 28799                           prodl	equ	0xFF3
 28800                           intcon	equ	0xFF2
 28801                           intcon2	equ	0xFF1
 28802                           intcon3	equ	0xFF0
 28803                           indf0	equ	0xFEF
 28804                           postinc0	equ	0xFEE
 28805                           fsr0h	equ	0xFEA
 28806                           fsr0l	equ	0xFE9
 28807                           wreg	equ	0xFE8
 28808                           indf1	equ	0xFE7
 28809                           postdec1	equ	0xFE5
 28810                           fsr1h	equ	0xFE2
 28811                           fsr1l	equ	0xFE1
 28812                           indf2	equ	0xFDF
 28813                           postinc2	equ	0xFDE
 28814                           postdec2	equ	0xFDD
 28815                           plusw2	equ	0xFDB
 28816                           fsr2h	equ	0xFDA
 28817                           fsr2l	equ	0xFD9
 28818                           status	equ	0xFD8
 28819                           
 28820 ;; *************** function _USBStdSetCfgHandler *****************
 28821 ;; Defined at:
 28822 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 28823 ;; Parameters:    Size  Location     Type
 28824 ;;		None
 28825 ;; Auto vars:     Size  Location     Type
 28826 ;;  i               1   21[COMRAM] unsigned char 
 28827 ;; Return value:  Size  Location     Type
 28828 ;;                  1    wreg      void 
 28829 ;; Registers used:
 28830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28831 ;; Tracked objects:
 28832 ;;		On entry : 0/0
 28833 ;;		On exit  : 0/0
 28834 ;;		Unchanged: 0/0
 28835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28836 ;;      Params:         0       0       0       0       0       0       0       0       0
 28837 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28838 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28839 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28840 ;;Total ram usage:        1 bytes
 28841 ;; Hardware stack levels used:    1
 28842 ;; Hardware stack levels required when called:    5
 28843 ;; This function calls:
 28844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28845 ;;		i2_memset
 28846 ;; This function is called by:
 28847 ;;		_USBCheckStdRequest
 28848 ;; This function uses a non-reentrant model
 28849 ;;
 28850                           
 28851                           	psect	text124
 28852  003CD6                     __ptext124:
 28853                           	opt stack 0
 28854  003CD6                     _USBStdSetCfgHandler:
 28855                           	opt stack 11
 28856                           
 28857                           ;usb_device.c: 1631: uint8_t i;
 28858                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 28859                           
 28860                           ;incstack = 0
 28861  003CD6  0100               	movlb	0	; () banked
 28862  003CD8  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28863                           
 28864                           ; BSR set to: 0
 28865                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 28866  003CDA  0E6B               	movlw	107
 28867  003CDC  6E01               	movwf	i2memset@p1,c
 28868  003CDE  0E0F               	movlw	15
 28869  003CE0  6E02               	movwf	i2memset@p1+1,c
 28870  003CE2  0E00               	movlw	0
 28871  003CE4  6E04               	movwf	i2memset@c+1,c
 28872  003CE6  0E00               	movlw	0
 28873  003CE8  6E03               	movwf	i2memset@c,c
 28874  003CEA  0E00               	movlw	0
 28875  003CEC  6E06               	movwf	i2memset@n+1,c
 28876  003CEE  0E02               	movlw	2
 28877  003CF0  6E05               	movwf	i2memset@n,c
 28878  003CF2  EC60  F030         	call	i2_memset	;wreg free
 28879                           
 28880                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 28881  003CF6  0E00               	movlw	0
 28882  003CF8  6E01               	movwf	i2memset@p1,c
 28883  003CFA  0E04               	movlw	4
 28884  003CFC  6E02               	movwf	i2memset@p1+1,c
 28885  003CFE  0E00               	movlw	0
 28886  003D00  6E04               	movwf	i2memset@c+1,c
 28887  003D02  0E00               	movlw	0
 28888  003D04  6E03               	movwf	i2memset@c,c
 28889  003D06  0E00               	movlw	0
 28890  003D08  6E06               	movwf	i2memset@n+1,c
 28891  003D0A  0E30               	movlw	48
 28892  003D0C  6E05               	movwf	i2memset@n,c
 28893  003D0E  EC60  F030         	call	i2_memset	;wreg free
 28894                           
 28895                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 28896  003D12  8C60               	bsf	3936,6,c	;volatile
 28897                           
 28898                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 28899  003D14  0E00               	movlw	0
 28900  003D16  6E16               	movwf	USBStdSetCfgHandler@i,c
 28901  003D18                     i2l8577:
 28902  003D18  0E02               	movlw	2
 28903  003D1A  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 28904  003D1C  D001               	goto	i2l2088
 28905  003D1E  D016               	goto	i2u641_40
 28906  003D20                     i2l2088:
 28907                           
 28908                           ;usb_device.c: 1649: {
 28909                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 28910  003D20  5016               	movf	USBStdSetCfgHandler@i,w,c
 28911  003D22  0D01               	mullw	1
 28912  003D24  0ED7               	movlw	low _ep_data_in
 28913  003D26  24F3               	addwf	prodl,w,c
 28914  003D28  6ED9               	movwf	fsr2l,c
 28915  003D2A  0E00               	movlw	high _ep_data_in
 28916  003D2C  20F4               	addwfc	prodh,w,c
 28917  003D2E  6EDA               	movwf	fsr2h,c
 28918  003D30  0E00               	movlw	0
 28919  003D32  6EDF               	movwf	indf2,c
 28920                           
 28921                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 28922  003D34  5016               	movf	USBStdSetCfgHandler@i,w,c
 28923  003D36  0D01               	mullw	1
 28924  003D38  0ED4               	movlw	low _ep_data_out
 28925  003D3A  24F3               	addwf	prodl,w,c
 28926  003D3C  6ED9               	movwf	fsr2l,c
 28927  003D3E  0E00               	movlw	high _ep_data_out
 28928  003D40  20F4               	addwfc	prodh,w,c
 28929  003D42  6EDA               	movwf	fsr2h,c
 28930  003D44  0E00               	movlw	0
 28931  003D46  6EDF               	movwf	indf2,c
 28932  003D48  2A16               	incf	USBStdSetCfgHandler@i,f,c
 28933  003D4A  D7E6               	goto	i2l8577
 28934  003D4C                     i2u641_40:
 28935                           
 28936                           ;usb_device.c: 1652: }
 28937                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 28938  003D4C  0E56               	movlw	low _USBAlternateInterface
 28939  003D4E  6E01               	movwf	i2memset@p1,c
 28940  003D50  0E00               	movlw	high _USBAlternateInterface
 28941  003D52  6E02               	movwf	i2memset@p1+1,c
 28942  003D54  0E00               	movlw	0
 28943  003D56  6E04               	movwf	i2memset@c+1,c
 28944  003D58  0E00               	movlw	0
 28945  003D5A  6E03               	movwf	i2memset@c,c
 28946  003D5C  0E00               	movlw	0
 28947  003D5E  6E06               	movwf	i2memset@n+1,c
 28948  003D60  0E02               	movlw	2
 28949  003D62  6E05               	movwf	i2memset@n,c
 28950  003D64  EC60  F030         	call	i2_memset	;wreg free
 28951                           
 28952                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 28953  003D68  9C60               	bcf	3936,6,c	;volatile
 28954                           
 28955                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28956  003D6A  0E08               	movlw	8
 28957  003D6C  0100               	movlb	0	; () banked
 28958  003D6E  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 28959  003D70  0E04               	movlw	4
 28960  003D72  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 28961                           
 28962                           ; BSR set to: 0
 28963                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 28964  003D74  0E00               	movlw	0
 28965  003D76  6E34               	movwf	_pBDTEntryEP0OutCurrent,c
 28966  003D78  0E04               	movlw	4
 28967  003D7A  6E35               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28968                           
 28969                           ; BSR set to: 0
 28970                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28971  003D7C  C034  F032         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28972  003D80  C035  F033         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28973                           
 28974                           ; BSR set to: 0
 28975                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 28976  003D84  C432 F059          	movff	1074,_USBActiveConfiguration	;volatile
 28977                           
 28978                           ; BSR set to: 0
 28979                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 28980  003D88  5059               	movf	_USBActiveConfiguration,w,c	;volatile
 28981  003D8A  A4D8               	btfss	status,2,c
 28982  003D8C  D003               	goto	i2l2090
 28983                           
 28984                           ; BSR set to: 0
 28985                           ;usb_device.c: 1671: {
 28986                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 28987  003D8E  0E10               	movlw	16
 28988  003D90  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 28989                           
 28990                           ;usb_device.c: 1674: }
 28991  003D92  0012               	return	
 28992  003D94                     i2l2090:
 28993                           
 28994                           ; BSR set to: 0
 28995                           ;usb_device.c: 1675: else
 28996                           ;usb_device.c: 1676: {
 28997                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 28998                           
 28999                           ; BSR set to: 0
 29000  003D94  0E00               	movlw	0
 29001  003D96  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29002  003D98  0E01               	movlw	1
 29003  003D9A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29004  003D9C  0E59               	movlw	low _USBActiveConfiguration
 29005  003D9E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29006  003DA0  0E00               	movlw	high _USBActiveConfiguration
 29007  003DA2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29008  003DA4  0E00               	movlw	0
 29009  003DA6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29010  003DA8  0E01               	movlw	1
 29011  003DAA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29012  003DAC  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29013                           
 29014                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 29015  003DB0  0E20               	movlw	32
 29016  003DB2  0100               	movlb	0	; () banked
 29017  003DB4  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 29018  003DB6  0012               	return	
 29019  003DB8                     __end_of_USBStdSetCfgHandler:
 29020                           	opt stack 0
 29021                           pclatu	equ	0xFFB
 29022                           pclath	equ	0xFFA
 29023                           tblptru	equ	0xFF8
 29024                           tblptrh	equ	0xFF7
 29025                           tblptrl	equ	0xFF6
 29026                           tablat	equ	0xFF5
 29027                           prodh	equ	0xFF4
 29028                           prodl	equ	0xFF3
 29029                           intcon	equ	0xFF2
 29030                           intcon2	equ	0xFF1
 29031                           intcon3	equ	0xFF0
 29032                           indf0	equ	0xFEF
 29033                           postinc0	equ	0xFEE
 29034                           fsr0h	equ	0xFEA
 29035                           fsr0l	equ	0xFE9
 29036                           wreg	equ	0xFE8
 29037                           indf1	equ	0xFE7
 29038                           postdec1	equ	0xFE5
 29039                           fsr1h	equ	0xFE2
 29040                           fsr1l	equ	0xFE1
 29041                           indf2	equ	0xFDF
 29042                           postinc2	equ	0xFDE
 29043                           postdec2	equ	0xFDD
 29044                           plusw2	equ	0xFDB
 29045                           fsr2h	equ	0xFDA
 29046                           fsr2l	equ	0xFD9
 29047                           status	equ	0xFD8
 29048                           
 29049 ;; *************** function i2_memset *****************
 29050 ;; Defined at:
 29051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 29052 ;; Parameters:    Size  Location     Type
 29053 ;;  p1              2    0[COMRAM] PTR void 
 29054 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29055 ;;  c               2    2[COMRAM] int 
 29056 ;;  n               2    4[COMRAM] unsigned int 
 29057 ;; Auto vars:     Size  Location     Type
 29058 ;;  memset          2    6[COMRAM] PTR unsigned char 
 29059 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 29060 ;; Return value:  Size  Location     Type
 29061 ;;                  2    0[COMRAM] PTR void 
 29062 ;; Registers used:
 29063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29064 ;; Tracked objects:
 29065 ;;		On entry : 0/0
 29066 ;;		On exit  : 0/0
 29067 ;;		Unchanged: 0/0
 29068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29069 ;;      Params:         6       0       0       0       0       0       0       0       0
 29070 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29072 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29073 ;;Total ram usage:        8 bytes
 29074 ;; Hardware stack levels used:    1
 29075 ;; This function calls:
 29076 ;;		Nothing
 29077 ;; This function is called by:
 29078 ;;		_USBStdSetCfgHandler
 29079 ;;		i2_USBDeviceInit
 29080 ;; This function uses a non-reentrant model
 29081 ;;
 29082                           
 29083                           	psect	text125
 29084  0060C0                     __ptext125:
 29085                           	opt stack 0
 29086  0060C0                     i2_memset:
 29087                           	opt stack 18
 29088                           
 29089                           ; BSR set to: 0
 29090                           ;incstack = 0
 29091  0060C0  C001  F007         	movff	i2memset@p1,i2memset@p
 29092  0060C4  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 29093  0060C8  D008               	goto	i2l2786
 29094  0060CA                     i2l8397:
 29095  0060CA  C007  FFD9         	movff	i2memset@p,fsr2l
 29096  0060CE  C008  FFDA         	movff	i2memset@p+1,fsr2h
 29097  0060D2  C003  FFDF         	movff	i2memset@c,indf2
 29098  0060D6  4A07               	infsnz	i2memset@p,f,c
 29099  0060D8  2A08               	incf	i2memset@p+1,f,c
 29100  0060DA                     i2l2786:
 29101  0060DA  0605               	decf	i2memset@n,f,c
 29102  0060DC  A0D8               	btfss	status,0,c
 29103  0060DE  0606               	decf	i2memset@n+1,f,c
 29104  0060E0  2805               	incf	i2memset@n,w,c
 29105  0060E2  E1F3               	bnz	i2l8397
 29106  0060E4  2806               	incf	i2memset@n+1,w,c
 29107  0060E6  B4D8               	btfsc	status,2,c
 29108  0060E8  0012               	return	
 29109  0060EA  D7EF               	goto	i2l2787
 29110  0060EC                     __end_ofi2_memset:
 29111                           	opt stack 0
 29112                           pclatu	equ	0xFFB
 29113                           pclath	equ	0xFFA
 29114                           tblptru	equ	0xFF8
 29115                           tblptrh	equ	0xFF7
 29116                           tblptrl	equ	0xFF6
 29117                           tablat	equ	0xFF5
 29118                           prodh	equ	0xFF4
 29119                           prodl	equ	0xFF3
 29120                           intcon	equ	0xFF2
 29121                           intcon2	equ	0xFF1
 29122                           intcon3	equ	0xFF0
 29123                           indf0	equ	0xFEF
 29124                           postinc0	equ	0xFEE
 29125                           fsr0h	equ	0xFEA
 29126                           fsr0l	equ	0xFE9
 29127                           wreg	equ	0xFE8
 29128                           indf1	equ	0xFE7
 29129                           postdec1	equ	0xFE5
 29130                           fsr1h	equ	0xFE2
 29131                           fsr1l	equ	0xFE1
 29132                           indf2	equ	0xFDF
 29133                           postinc2	equ	0xFDE
 29134                           postdec2	equ	0xFDD
 29135                           plusw2	equ	0xFDB
 29136                           fsr2h	equ	0xFDA
 29137                           fsr2l	equ	0xFD9
 29138                           status	equ	0xFD8
 29139                           
 29140 ;; *************** function _USBStdGetStatusHandler *****************
 29141 ;; Defined at:
 29142 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 29143 ;; Parameters:    Size  Location     Type
 29144 ;;		None
 29145 ;; Auto vars:     Size  Location     Type
 29146 ;;  p               2    1[COMRAM] PTR struct __BDT
 29147 ;;		 -> BDT(48), NULL(0), 
 29148 ;; Return value:  Size  Location     Type
 29149 ;;                  1    wreg      void 
 29150 ;; Registers used:
 29151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29152 ;; Tracked objects:
 29153 ;;		On entry : 0/0
 29154 ;;		On exit  : 0/0
 29155 ;;		Unchanged: 0/0
 29156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29157 ;;      Params:         0       0       0       0       0       0       0       0       0
 29158 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29159 ;;      Temps:          1       0       0       0       0       0       0       0       0
 29160 ;;      Totals:         3       0       0       0       0       0       0       0       0
 29161 ;;Total ram usage:        3 bytes
 29162 ;; Hardware stack levels used:    1
 29163 ;; This function calls:
 29164 ;;		Nothing
 29165 ;; This function is called by:
 29166 ;;		_USBCheckStdRequest
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text126
 29171  004C50                     __ptext126:
 29172                           	opt stack 0
 29173  004C50                     _USBStdGetStatusHandler:
 29174                           	opt stack 16
 29175                           
 29176                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 29177                           
 29178                           ;incstack = 0
 29179  004C50  0E00               	movlw	0
 29180  004C52  0104               	movlb	4	; () banked
 29181  004C54  6F38               	movwf	56,b	;volatile
 29182                           
 29183                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 29184  004C56  0E00               	movlw	0
 29185  004C58  6F39               	movwf	57,b	;volatile
 29186                           
 29187                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 29188  004C5A  D038               	goto	i2l2109
 29189  004C5C                     i2l2110:
 29190                           
 29191                           ; BSR set to: 4
 29192                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 29193  004C5C  0100               	movlb	0	; () banked
 29194  004C5E  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29195                           
 29196                           ;usb_device.c: 1789: }
 29197                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 29198                           
 29199                           ; BSR set to: 4
 29200                           
 29201                           ; BSR set to: 0
 29202                           ;usb_device.c: 1787: {
 29203                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 29204                           
 29205                           ;usb_device.c: 1786: if(0 == 1)
 29206  004C60  0447               	decf	_RemoteWakeup,w,c	;volatile
 29207  004C62  A4D8               	btfss	status,2,c
 29208  004C64  D03E               	goto	i2l2113
 29209                           
 29210                           ;usb_device.c: 1792: {
 29211                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 29212  004C66  0104               	movlb	4	; () banked
 29213  004C68  8338               	bsf	56,1,b	;volatile
 29214                           
 29215                           ; BSR set to: 4
 29216                           ;usb_device.c: 1794: }
 29217                           ;usb_device.c: 1795: break;
 29218  004C6A  D03B               	goto	i2l2113
 29219  004C6C                     i2l2114:
 29220                           
 29221                           ; BSR set to: 4
 29222                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 29223  004C6C  0100               	movlb	0	; () banked
 29224  004C6E  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29225                           
 29226                           ;usb_device.c: 1798: break;
 29227  004C70  D038               	goto	i2l2113
 29228  004C72                     i2l2115:
 29229                           
 29230                           ; BSR set to: 4
 29231                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 29232  004C72  0100               	movlb	0	; () banked
 29233  004C74  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29234                           
 29235                           ;usb_device.c: 1804: {
 29236                           ;usb_device.c: 1805: BDT_ENTRY *p;
 29237                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 29238  004C76  0104               	movlb	4	; () banked
 29239  004C78  BF34               	btfsc	52,7,b	;volatile
 29240  004C7A  D00A               	goto	i2l2116
 29241                           
 29242                           ; BSR set to: 4
 29243                           ;usb_device.c: 1808: {
 29244                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 29245  004C7C  5134               	movf	52,w,b	;volatile
 29246  004C7E  0B0F               	andlw	15
 29247  004C80  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 29248  004C82  5001               	movf	??_USBStdGetStatusHandler,w,c
 29249  004C84  0D02               	mullw	2
 29250  004C86  0E00               	movlw	low _pBDTEntryOut
 29251  004C88  24F3               	addwf	prodl,w,c
 29252  004C8A  6ED9               	movwf	fsr2l,c
 29253  004C8C  0E01               	movlw	high _pBDTEntryOut
 29254  004C8E  D009               	goto	L25
 29255  004C90                     i2l2116:
 29256                           
 29257                           ; BSR set to: 4
 29258                           ;usb_device.c: 1811: else
 29259                           ;usb_device.c: 1812: {
 29260                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 29261                           
 29262                           ; BSR set to: 4
 29263  004C90  5134               	movf	52,w,b	;volatile
 29264  004C92  0B0F               	andlw	15
 29265  004C94  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 29266  004C96  5001               	movf	??_USBStdGetStatusHandler,w,c
 29267  004C98  0D02               	mullw	2
 29268  004C9A  0ECE               	movlw	low _pBDTEntryIn
 29269  004C9C  24F3               	addwf	prodl,w,c
 29270  004C9E  6ED9               	movwf	fsr2l,c
 29271  004CA0  0E00               	movlw	high _pBDTEntryIn
 29272  004CA2                     L25:
 29273  004CA2  20F4               	addwfc	prodh,w,c
 29274  004CA4  6EDA               	movwf	fsr2h,c
 29275  004CA6  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 29276  004CAA  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 29277                           
 29278                           ; BSR set to: 4
 29279                           ;usb_device.c: 1814: }
 29280                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 29281                           
 29282                           ; BSR set to: 4
 29283  004CAE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 29284  004CB2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 29285  004CB6  AEDF               	btfss	indf2,7,c
 29286  004CB8  D014               	goto	i2l2113
 29287                           
 29288                           ; BSR set to: 4
 29289  004CBA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 29290  004CBE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 29291  004CC2  A4DF               	btfss	indf2,2,c
 29292  004CC4  D00E               	goto	i2l2113
 29293                           
 29294                           ; BSR set to: 4
 29295                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 29296  004CC6  0E01               	movlw	1
 29297  004CC8  6F38               	movwf	56,b	;volatile
 29298                           
 29299                           ; BSR set to: 4
 29300                           ;usb_device.c: 1819: }
 29301                           ;usb_device.c: 1820: }
 29302                           
 29303                           ; BSR set to: 4
 29304                           ;usb_device.c: 1818: break;
 29305  004CCA  D00B               	goto	i2l2113
 29306  004CCC                     i2l2109:
 29307                           
 29308                           ; BSR set to: 4
 29309                           
 29310                           ; BSR set to: 4
 29311  004CCC  5130               	movf	48,w,b	;volatile
 29312  004CCE  0B1F               	andlw	31
 29313                           
 29314                           ; Switch size 1, requested type "space"
 29315                           ; Number of cases is 3, Range of values is 0 to 2
 29316                           ; switch strategies available:
 29317                           ; Name         Instructions Cycles
 29318                           ; simple_byte           10     6 (average)
 29319                           ;	Chosen strategy is simple_byte
 29320  004CD0  0A00               	xorlw	0	; case 0
 29321  004CD2  B4D8               	btfsc	status,2,c
 29322  004CD4  D7C3               	goto	i2l2110
 29323  004CD6  0A01               	xorlw	1	; case 1
 29324  004CD8  B4D8               	btfsc	status,2,c
 29325  004CDA  D7C8               	goto	i2l2114
 29326  004CDC  0A03               	xorlw	3	; case 2
 29327  004CDE  B4D8               	btfsc	status,2,c
 29328  004CE0  D7C8               	goto	i2l2115
 29329  004CE2                     i2l2113:
 29330                           
 29331                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 29332  004CE2  0100               	movlb	0	; () banked
 29333  004CE4  AFCB               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 29334  004CE6  0012               	return	
 29335                           
 29336                           ; BSR set to: 0
 29337                           ;usb_device.c: 1823: {
 29338                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 29339  004CE8  0E38               	movlw	56
 29340  004CEA  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 29341  004CEC  0E04               	movlw	4
 29342  004CEE  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29343                           
 29344                           ; BSR set to: 0
 29345                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29346  004CF0  81CB               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 29350  004CF2  0E02               	movlw	2
 29351  004CF4  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29352  004CF6  0012               	return	
 29353  004CF8                     __end_of_USBStdGetStatusHandler:
 29354                           	opt stack 0
 29355                           pclatu	equ	0xFFB
 29356                           pclath	equ	0xFFA
 29357                           tblptru	equ	0xFF8
 29358                           tblptrh	equ	0xFF7
 29359                           tblptrl	equ	0xFF6
 29360                           tablat	equ	0xFF5
 29361                           prodh	equ	0xFF4
 29362                           prodl	equ	0xFF3
 29363                           intcon	equ	0xFF2
 29364                           intcon2	equ	0xFF1
 29365                           intcon3	equ	0xFF0
 29366                           indf0	equ	0xFEF
 29367                           postinc0	equ	0xFEE
 29368                           fsr0h	equ	0xFEA
 29369                           fsr0l	equ	0xFE9
 29370                           wreg	equ	0xFE8
 29371                           indf1	equ	0xFE7
 29372                           postdec1	equ	0xFE5
 29373                           fsr1h	equ	0xFE2
 29374                           fsr1l	equ	0xFE1
 29375                           indf2	equ	0xFDF
 29376                           postinc2	equ	0xFDE
 29377                           postdec2	equ	0xFDD
 29378                           plusw2	equ	0xFDB
 29379                           fsr2h	equ	0xFDA
 29380                           fsr2l	equ	0xFD9
 29381                           status	equ	0xFD8
 29382                           
 29383 ;; *************** function _USBStdGetDscHandler *****************
 29384 ;; Defined at:
 29385 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;		None
 29388 ;; Auto vars:     Size  Location     Type
 29389 ;;		None
 29390 ;; Return value:  Size  Location     Type
 29391 ;;                  1    wreg      void 
 29392 ;; Registers used:
 29393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 29394 ;; Tracked objects:
 29395 ;;		On entry : 0/0
 29396 ;;		On exit  : 0/0
 29397 ;;		Unchanged: 0/0
 29398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29399 ;;      Params:         0       0       0       0       0       0       0       0       0
 29400 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29401 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29402 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29403 ;;Total ram usage:        2 bytes
 29404 ;; Hardware stack levels used:    1
 29405 ;; This function calls:
 29406 ;;		Nothing
 29407 ;; This function is called by:
 29408 ;;		_USBCheckStdRequest
 29409 ;; This function uses a non-reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text127
 29413  002F02                     __ptext127:
 29414                           	opt stack 0
 29415  002F02                     _USBStdGetDscHandler:
 29416                           	opt stack 16
 29417                           
 29418                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;incstack = 0
 29422  002F02  0E80               	movlw	128
 29423  002F04  0104               	movlb	4	; () banked
 29424  002F06  1930               	xorwf	48,w,b	;volatile
 29425  002F08  A4D8               	btfss	status,2,c
 29426  002F0A  0012               	return	
 29427                           
 29428                           ; BSR set to: 4
 29429                           ;usb_device.c: 1707: {
 29430                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 29431  002F0C  0EC0               	movlw	192
 29432  002F0E  0100               	movlb	0	; () banked
 29433  002F10  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29434                           
 29435                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 29436  002F12  D088               	goto	i2l2096
 29437  002F14                     
 29438                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 29439                           
 29440                           ; BSR set to: 0
 29441  002F14  0EA3               	movlw	low _device_dsc
 29442  002F16  0100               	movlb	0	; () banked
 29443  002F18  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 29444  002F1A  0E79               	movlw	high _device_dsc
 29445  002F1C  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29446                           
 29447                           ; BSR set to: 0
 29448                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 29449  002F1E  0E00               	movlw	0
 29450  002F20  6FCD               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29451  002F22  0E12               	movlw	18
 29452  002F24  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29453                           
 29454                           ;usb_device.c: 1715: break;
 29455  002F26  0012               	return	
 29456  002F28                     
 29457                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 29458                           
 29459                           ; BSR set to: 0
 29460  002F28  0104               	movlb	4	; () banked
 29461  002F2A  5132               	movf	50,w,b	;volatile
 29462  002F2C  A4D8               	btfss	status,2,c
 29463  002F2E  D043               	goto	i2l2100
 29464                           
 29465                           ; BSR set to: 4
 29466                           ;usb_device.c: 1721: {
 29467                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 29468  002F30  5132               	movf	50,w,b	;volatile
 29469  002F32  0D02               	mullw	2
 29470  002F34  0EF6               	movlw	low _USB_CD_Ptr
 29471  002F36  24F3               	addwf	prodl,w,c
 29472  002F38  6EF6               	movwf	tblptrl,c
 29473  002F3A  0E75               	movlw	high _USB_CD_Ptr
 29474  002F3C  20F4               	addwfc	prodh,w,c
 29475  002F3E  6EF7               	movwf	tblptrh,c
 29476  002F40                     	if	1	;There are 3 active tblptr bytes
 29477  002F40  6AF8               	clrf	tblptru,c
 29478  002F42  0E00               	movlw	low (__mediumconst shr (0+16))
 29479  002F44  22F8               	addwfc	tblptru,f,c
 29480  002F46                     	endif
 29481  002F46  0009               	tblrd		*+
 29482  002F48  CFF5 F0C8          	movff	tablat,_inPipes	;volatile
 29483  002F4C  000A               	tblrd		*-
 29484  002F4E  CFF5 F0C9          	movff	tablat,_inPipes+1	;volatile
 29485                           
 29486                           ; BSR set to: 4
 29487                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 29488  002F52  0E02               	movlw	2
 29489  002F54  0100               	movlb	0	; () banked
 29490  002F56  25C8               	addwf	_inPipes& (0+255),w,b	;volatile
 29491  002F58  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29492  002F5A  0E00               	movlw	0
 29493  002F5C  21C9               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 29494  002F5E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 29495  002F60  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 29496  002F64  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 29497  002F68  6AF8               	clrf	tblptru,c
 29498  002F6A  0E07               	movlw	(high __ramtop+-1)
 29499  002F6C  64F7               	cpfsgt	tblptrh,c
 29500  002F6E  D003               	bra	i2u645_47
 29501  002F70  0008               	tblrd		*
 29502  002F72  50F5               	movf	tablat,w,c
 29503  002F74  D005               	bra	i2u645_40
 29504  002F76                     i2u645_47:
 29505  002F76  CFF6 FFE9          	movff	tblptrl,fsr0l
 29506  002F7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 29507  002F7E  50EF               	movf	indf0,w,c
 29508  002F80                     i2u645_40:
 29509  002F80  0100               	movlb	0	; () banked
 29510  002F82  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29511                           
 29512                           ; BSR set to: 0
 29513                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 29514  002F84  0E03               	movlw	3
 29515  002F86  25C8               	addwf	_inPipes& (0+255),w,b	;volatile
 29516  002F88  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29517  002F8A  0E00               	movlw	0
 29518  002F8C  21C9               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 29519  002F8E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 29520  002F90  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 29521  002F94  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 29522  002F98  6AF8               	clrf	tblptru,c
 29523  002F9A  0E07               	movlw	(high __ramtop+-1)
 29524  002F9C  64F7               	cpfsgt	tblptrh,c
 29525  002F9E  D003               	bra	i2u646_47
 29526  002FA0  0008               	tblrd		*
 29527  002FA2  50F5               	movf	tablat,w,c
 29528  002FA4  D005               	bra	i2u646_40
 29529  002FA6                     i2u646_47:
 29530  002FA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 29531  002FAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 29532  002FAE  50EF               	movf	indf0,w,c
 29533  002FB0                     i2u646_40:
 29534  002FB0  0100               	movlb	0	; () banked
 29535  002FB2  6FCD               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29536                           
 29537                           ;usb_device.c: 1729: }
 29538  002FB4  0012               	return	
 29539  002FB6                     i2l2100:
 29540                           
 29541                           ;usb_device.c: 1730: else
 29542                           ;usb_device.c: 1731: {
 29543                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 29544                           
 29545                           ; BSR set to: 0
 29546  002FB6  0E00               	movlw	0
 29547  002FB8  0100               	movlb	0	; () banked
 29548  002FBA  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29549                           
 29550                           ; BSR set to: 0
 29551                           ;usb_device.c: 1733: }
 29552                           ;usb_device.c: 1734: break;
 29553  002FBC  0012               	return	
 29554  002FBE                     
 29555                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 29556                           
 29557                           ; BSR set to: 0
 29558  002FBE  0E03               	movlw	3
 29559  002FC0  0104               	movlb	4	; () banked
 29560  002FC2  6132               	cpfslt	50,b	;volatile
 29561  002FC4  D027               	goto	i2l2103
 29562                           
 29563                           ; BSR set to: 4
 29564                           ;usb_device.c: 1740: {
 29565                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 29566  002FC6  5132               	movf	50,w,b	;volatile
 29567  002FC8  0D02               	mullw	2
 29568  002FCA  0EEB               	movlw	low _USB_SD_Ptr
 29569  002FCC  24F3               	addwf	prodl,w,c
 29570  002FCE  6EF6               	movwf	tblptrl,c
 29571  002FD0  0E75               	movlw	high _USB_SD_Ptr
 29572  002FD2  20F4               	addwfc	prodh,w,c
 29573  002FD4  6EF7               	movwf	tblptrh,c
 29574  002FD6                     	if	1	;There are 3 active tblptr bytes
 29575  002FD6  6AF8               	clrf	tblptru,c
 29576  002FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 29577  002FDA  22F8               	addwfc	tblptru,f,c
 29578  002FDC                     	endif
 29579  002FDC  0009               	tblrd		*+
 29580  002FDE  CFF5 F0C8          	movff	tablat,_inPipes	;volatile
 29581  002FE2  000A               	tblrd		*-
 29582  002FE4  CFF5 F0C9          	movff	tablat,_inPipes+1	;volatile
 29583                           
 29584                           ; BSR set to: 4
 29585                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 29586  002FE8  C0C8  FFF6         	movff	_inPipes,tblptrl	;volatile
 29587  002FEC  C0C9  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29588  002FF0  6AF8               	clrf	tblptru,c
 29589  002FF2  0E07               	movlw	(high __ramtop+-1)
 29590  002FF4  64F7               	cpfsgt	tblptrh,c
 29591  002FF6  D003               	bra	i2u648_47
 29592  002FF8  0008               	tblrd		*
 29593  002FFA  50F5               	movf	tablat,w,c
 29594  002FFC  D005               	bra	i2u648_40
 29595  002FFE                     i2u648_47:
 29596  002FFE  CFF6 FFE9          	movff	tblptrl,fsr0l
 29597  003002  CFF7 FFEA          	movff	tblptrh,fsr0h
 29598  003006  50EF               	movf	indf0,w,c
 29599  003008                     i2u648_40:
 29600  003008  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29601  00300A  5001               	movf	??_USBStdGetDscHandler,w,c
 29602  00300C  0100               	movlb	0	; () banked
 29603  00300E  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29604  003010  6BCD               	clrf	(_inPipes+5)& (0+255),b	;volatile
 29605                           
 29606                           ;usb_device.c: 1745: }
 29607  003012  0012               	return	
 29608  003014                     i2l2103:
 29609                           
 29610                           ;usb_device.c: 1746: else
 29611                           ;usb_device.c: 1747: {
 29612                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 29613                           
 29614                           ; BSR set to: 0
 29615  003014  0E00               	movlw	0
 29616  003016  0100               	movlb	0	; () banked
 29617  003018  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;usb_device.c: 1749: }
 29621                           ;usb_device.c: 1750: break;
 29622  00301A  0012               	return	
 29623  00301C                     
 29624                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 29625                           
 29626                           ; BSR set to: 0
 29627  00301C  0E00               	movlw	0
 29628  00301E  0100               	movlb	0	; () banked
 29629  003020  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29630                           
 29631                           ; BSR set to: 0
 29632                           ;usb_device.c: 1754: }
 29633                           
 29634                           ;usb_device.c: 1753: break;
 29635  003022  0012               	return	
 29636  003024                     i2l2096:
 29637                           
 29638                           ; BSR set to: 0
 29639                           
 29640                           ; BSR set to: 0
 29641  003024  0104               	movlb	4	; () banked
 29642  003026  5133               	movf	51,w,b	;volatile
 29643                           
 29644                           ; Switch size 1, requested type "space"
 29645                           ; Number of cases is 3, Range of values is 1 to 3
 29646                           ; switch strategies available:
 29647                           ; Name         Instructions Cycles
 29648                           ; simple_byte           10     6 (average)
 29649                           ;	Chosen strategy is simple_byte
 29650  003028  0A01               	xorlw	1	; case 1
 29651  00302A  B4D8               	btfsc	status,2,c
 29652  00302C  D773               	goto	i2l2097
 29653  00302E  0A03               	xorlw	3	; case 2
 29654  003030  B4D8               	btfsc	status,2,c
 29655  003032  D77A               	goto	i2l2099
 29656  003034  0A01               	xorlw	1	; case 3
 29657  003036  B4D8               	btfsc	status,2,c
 29658  003038  D7C2               	goto	i2l2102
 29659  00303A  D7F0               	goto	i2l2105
 29660  00303C                     __end_of_USBStdGetDscHandler:
 29661                           	opt stack 0
 29662                           pclatu	equ	0xFFB
 29663                           pclath	equ	0xFFA
 29664                           tblptru	equ	0xFF8
 29665                           tblptrh	equ	0xFF7
 29666                           tblptrl	equ	0xFF6
 29667                           tablat	equ	0xFF5
 29668                           prodh	equ	0xFF4
 29669                           prodl	equ	0xFF3
 29670                           intcon	equ	0xFF2
 29671                           intcon2	equ	0xFF1
 29672                           intcon3	equ	0xFF0
 29673                           indf0	equ	0xFEF
 29674                           postinc0	equ	0xFEE
 29675                           fsr0h	equ	0xFEA
 29676                           fsr0l	equ	0xFE9
 29677                           wreg	equ	0xFE8
 29678                           indf1	equ	0xFE7
 29679                           postdec1	equ	0xFE5
 29680                           fsr1h	equ	0xFE2
 29681                           fsr1l	equ	0xFE1
 29682                           indf2	equ	0xFDF
 29683                           postinc2	equ	0xFDE
 29684                           postdec2	equ	0xFDD
 29685                           plusw2	equ	0xFDB
 29686                           fsr2h	equ	0xFDA
 29687                           fsr2l	equ	0xFD9
 29688                           status	equ	0xFD8
 29689                           
 29690 ;; *************** function _USBStdFeatureReqHandler *****************
 29691 ;; Defined at:
 29692 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 29693 ;; Parameters:    Size  Location     Type
 29694 ;;		None
 29695 ;; Auto vars:     Size  Location     Type
 29696 ;;  p               2   25[COMRAM] PTR struct __BDT
 29697 ;;		 -> BDT(48), NULL(0), 
 29698 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 29699 ;;		 -> UEP0(1), 
 29700 ;;  current_ep_d    1   24[COMRAM] struct .
 29701 ;; Return value:  Size  Location     Type
 29702 ;;                  1    wreg      void 
 29703 ;; Registers used:
 29704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29705 ;; Tracked objects:
 29706 ;;		On entry : 0/0
 29707 ;;		On exit  : 0/0
 29708 ;;		Unchanged: 0/0
 29709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29710 ;;      Params:         0       0       0       0       0       0       0       0       0
 29711 ;;      Locals:         5       0       0       0       0       0       0       0       0
 29712 ;;      Temps:          1       0       0       0       0       0       0       0       0
 29713 ;;      Totals:         6       0       0       0       0       0       0       0       0
 29714 ;;Total ram usage:        6 bytes
 29715 ;; Hardware stack levels used:    1
 29716 ;; Hardware stack levels required when called:    5
 29717 ;; This function calls:
 29718 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29719 ;; This function is called by:
 29720 ;;		_USBCheckStdRequest
 29721 ;; This function uses a non-reentrant model
 29722 ;;
 29723                           
 29724                           	psect	text128
 29725  0026C4                     __ptext128:
 29726                           	opt stack 0
 29727  0026C4                     _USBStdFeatureReqHandler:
 29728                           	opt stack 11
 29729                           
 29730                           ;usb_device.c: 2387: BDT_ENTRY *p;
 29731                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 29732                           ;usb_device.c: 2390: unsigned char* pUEP;
 29733                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 29734                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 29735                           
 29736                           ;incstack = 0
 29737  0026C4  0104               	movlb	4	; () banked
 29738  0026C6  0532               	decf	50,w,b	;volatile
 29739  0026C8  A4D8               	btfss	status,2,c
 29740  0026CA  D010               	goto	i2l2191
 29741                           
 29742                           ; BSR set to: 4
 29743  0026CC  5130               	movf	48,w,b	;volatile
 29744  0026CE  0B1F               	andlw	31
 29745  0026D0  0900               	iorlw	0
 29746  0026D2  A4D8               	btfss	status,2,c
 29747  0026D4  D00B               	goto	i2l2191
 29748                           
 29749                           ; BSR set to: 4
 29750                           ;usb_device.c: 2395: {
 29751                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 29752  0026D6  0100               	movlb	0	; () banked
 29753  0026D8  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29754                           
 29755                           ; BSR set to: 0
 29756                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 29757  0026DA  0E03               	movlw	3
 29758  0026DC  0104               	movlb	4	; () banked
 29759  0026DE  1931               	xorwf	49,w,b	;volatile
 29760  0026E0  A4D8               	btfss	status,2,c
 29761  0026E2  D002               	goto	i2l2190
 29762                           
 29763                           ; BSR set to: 4
 29764                           ;usb_device.c: 2398: RemoteWakeup = 1;
 29765  0026E4  0E01               	movlw	1
 29766  0026E6  D001               	goto	L26
 29767  0026E8                     i2l2190:
 29768                           
 29769                           ; BSR set to: 4
 29770                           ;usb_device.c: 2399: else
 29771                           ;usb_device.c: 2400: RemoteWakeup = 0;
 29772                           
 29773                           ; BSR set to: 4
 29774  0026E8  0E00               	movlw	0
 29775  0026EA                     L26:
 29776  0026EA  6E47               	movwf	_RemoteWakeup,c	;volatile
 29777  0026EC                     i2l2191:
 29778                           
 29779                           ; BSR set to: 4
 29780                           ;usb_device.c: 2401: }
 29781                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 29782                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 29783                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 29784                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 29785                           
 29786                           ; BSR set to: 4
 29787  0026EC  5132               	movf	50,w,b	;volatile
 29788  0026EE  A4D8               	btfss	status,2,c
 29789  0026F0  0012               	return	
 29790                           
 29791                           ; BSR set to: 4
 29792  0026F2  5130               	movf	48,w,b	;volatile
 29793  0026F4  0B1F               	andlw	31
 29794  0026F6  0A02               	xorlw	2
 29795  0026F8  A4D8               	btfss	status,2,c
 29796  0026FA  0012               	return	
 29797                           
 29798                           ; BSR set to: 4
 29799  0026FC  5134               	movf	52,w,b	;volatile
 29800  0026FE  0B0F               	andlw	15
 29801  002700  0900               	iorlw	0
 29802  002702  B4D8               	btfsc	status,2,c
 29803  002704  0012               	return	
 29804                           
 29805                           ; BSR set to: 4
 29806  002706  5134               	movf	52,w,b	;volatile
 29807  002708  0B0F               	andlw	15
 29808  00270A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29809  00270C  0E03               	movlw	3
 29810  00270E  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 29811  002710  0012               	return	
 29812                           
 29813                           ; BSR set to: 4
 29814  002712  0E20               	movlw	32
 29815  002714  0100               	movlb	0	; () banked
 29816  002716  19EF               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29817  002718  A4D8               	btfss	status,2,c
 29818  00271A  0012               	return	
 29819                           
 29820                           ; BSR set to: 0
 29821                           ;usb_device.c: 2408: {
 29822                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 29823  00271C  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29824                           
 29825                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 29826  00271E  0104               	movlb	4	; () banked
 29827  002720  BF34               	btfsc	52,7,b	;volatile
 29828  002722  D019               	goto	i2l2193
 29829                           
 29830                           ; BSR set to: 4
 29831                           ;usb_device.c: 2415: {
 29832                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 29833  002724  5134               	movf	52,w,b	;volatile
 29834  002726  0B0F               	andlw	15
 29835  002728  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29836  00272A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29837  00272C  0D02               	mullw	2
 29838  00272E  0E00               	movlw	low _pBDTEntryOut
 29839  002730  24F3               	addwf	prodl,w,c
 29840  002732  6ED9               	movwf	fsr2l,c
 29841  002734  0E01               	movlw	high _pBDTEntryOut
 29842  002736  20F4               	addwfc	prodh,w,c
 29843  002738  6EDA               	movwf	fsr2h,c
 29844  00273A  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29845  00273E  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29846                           
 29847                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 29848  002742  5134               	movf	52,w,b	;volatile
 29849  002744  0B0F               	andlw	15
 29850  002746  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29851  002748  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29852  00274A  0D01               	mullw	1
 29853  00274C  0ED4               	movlw	low _ep_data_out
 29854  00274E  24F3               	addwf	prodl,w,c
 29855  002750  6ED9               	movwf	fsr2l,c
 29856  002752  0E00               	movlw	high _ep_data_out
 29857  002754  D018               	goto	L27
 29858  002756                     i2l2193:
 29859                           
 29860                           ; BSR set to: 4
 29861                           ;usb_device.c: 2419: else
 29862                           ;usb_device.c: 2420: {
 29863                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 29864                           
 29865                           ; BSR set to: 4
 29866  002756  5134               	movf	52,w,b	;volatile
 29867  002758  0B0F               	andlw	15
 29868  00275A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29869  00275C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29870  00275E  0D02               	mullw	2
 29871  002760  0ECE               	movlw	low _pBDTEntryIn
 29872  002762  24F3               	addwf	prodl,w,c
 29873  002764  6ED9               	movwf	fsr2l,c
 29874  002766  0E00               	movlw	high _pBDTEntryIn
 29875  002768  20F4               	addwfc	prodh,w,c
 29876  00276A  6EDA               	movwf	fsr2h,c
 29877  00276C  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29878  002770  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29879                           
 29880                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 29881  002774  5134               	movf	52,w,b	;volatile
 29882  002776  0B0F               	andlw	15
 29883  002778  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29884  00277A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29885  00277C  0D01               	mullw	1
 29886  00277E  0ED7               	movlw	low _ep_data_in
 29887  002780  24F3               	addwf	prodl,w,c
 29888  002782  6ED9               	movwf	fsr2l,c
 29889  002784  0E00               	movlw	high _ep_data_in
 29890  002786                     L27:
 29891  002786  20F4               	addwfc	prodh,w,c
 29892  002788  6EDA               	movwf	fsr2h,c
 29893  00278A  50DF               	movf	indf2,w,c
 29894  00278C  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 29895                           
 29896                           ; BSR set to: 4
 29897                           ;usb_device.c: 2423: }
 29898                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 29899                           
 29900                           ; BSR set to: 4
 29901  00278E  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 29902  002790  D002               	goto	i2l2195
 29903                           
 29904                           ; BSR set to: 4
 29905                           ;usb_device.c: 2429: {
 29906                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 29907  002792  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 29908                           
 29909                           ;usb_device.c: 2431: }
 29910  002794  D001               	goto	i2l2196
 29911  002796                     i2l2195:
 29912                           
 29913                           ; BSR set to: 4
 29914                           ;usb_device.c: 2432: else
 29915                           ;usb_device.c: 2433: {
 29916                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 29917                           
 29918                           ; BSR set to: 4
 29919  002796  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 29920  002798                     i2l2196:
 29921                           
 29922                           ; BSR set to: 4
 29923                           ;usb_device.c: 2435: }
 29924                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 29925                           
 29926                           ; BSR set to: 4
 29927  002798  BF34               	btfsc	52,7,b	;volatile
 29928  00279A  D00A               	goto	i2l2197
 29929                           
 29930                           ; BSR set to: 4
 29931                           ;usb_device.c: 2440: {
 29932                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29933  00279C  5134               	movf	52,w,b	;volatile
 29934  00279E  0B0F               	andlw	15
 29935  0027A0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29936  0027A2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29937  0027A4  0D02               	mullw	2
 29938  0027A6  0E00               	movlw	low _pBDTEntryOut
 29939  0027A8  24F3               	addwf	prodl,w,c
 29940  0027AA  6ED9               	movwf	fsr2l,c
 29941  0027AC  0E01               	movlw	high _pBDTEntryOut
 29942  0027AE  D009               	goto	L28
 29943  0027B0                     i2l2197:
 29944                           
 29945                           ; BSR set to: 4
 29946                           ;usb_device.c: 2443: else
 29947                           ;usb_device.c: 2444: {
 29948                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29949                           
 29950                           ; BSR set to: 4
 29951  0027B0  5134               	movf	52,w,b	;volatile
 29952  0027B2  0B0F               	andlw	15
 29953  0027B4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29954  0027B6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29955  0027B8  0D02               	mullw	2
 29956  0027BA  0ECE               	movlw	low _pBDTEntryIn
 29957  0027BC  24F3               	addwf	prodl,w,c
 29958  0027BE  6ED9               	movwf	fsr2l,c
 29959  0027C0  0E00               	movlw	high _pBDTEntryIn
 29960  0027C2                     L28:
 29961  0027C2  20F4               	addwfc	prodh,w,c
 29962  0027C4  6EDA               	movwf	fsr2h,c
 29963  0027C6  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 29964  0027CA  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 29965                           
 29966                           ; BSR set to: 4
 29967                           ;usb_device.c: 2446: }
 29968                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 29969                           
 29970                           ; BSR set to: 4
 29971  0027CE  0E03               	movlw	3
 29972  0027D0  1931               	xorwf	49,w,b	;volatile
 29973  0027D2  A4D8               	btfss	status,2,c
 29974  0027D4  D02D               	goto	i2l2199
 29975                           
 29976                           ; BSR set to: 4
 29977                           ;usb_device.c: 2450: {
 29978                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 29979  0027D6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29980  0027DA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29981  0027DE  AEDF               	btfss	indf2,7,c
 29982  0027E0  D01A               	goto	i2l2202
 29983                           
 29984                           ; BSR set to: 4
 29985                           ;usb_device.c: 2452: {
 29986                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 29987  0027E2  BF34               	btfsc	52,7,b	;volatile
 29988  0027E4  D00A               	goto	i2l2201
 29989                           
 29990                           ; BSR set to: 4
 29991                           ;usb_device.c: 2456: {
 29992                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29993  0027E6  5134               	movf	52,w,b	;volatile
 29994  0027E8  0B0F               	andlw	15
 29995  0027EA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29996  0027EC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29997  0027EE  0D01               	mullw	1
 29998  0027F0  0ED4               	movlw	low _ep_data_out
 29999  0027F2  24F3               	addwf	prodl,w,c
 30000  0027F4  6ED9               	movwf	fsr2l,c
 30001  0027F6  0E00               	movlw	high _ep_data_out
 30002  0027F8  D00A               	goto	L29
 30003  0027FA                     i2l2201:
 30004                           
 30005                           ;usb_device.c: 2459: else
 30006                           ;usb_device.c: 2460: {
 30007                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 30008                           
 30009                           ; BSR set to: 0
 30010  0027FA  0104               	movlb	4	; () banked
 30011  0027FC  5134               	movf	52,w,b	;volatile
 30012  0027FE  0B0F               	andlw	15
 30013  002800  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30014  002802  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30015  002804  0D01               	mullw	1
 30016  002806  0ED7               	movlw	low _ep_data_in
 30017  002808  24F3               	addwf	prodl,w,c
 30018  00280A  6ED9               	movwf	fsr2l,c
 30019  00280C  0E00               	movlw	high _ep_data_in
 30020  00280E                     L29:
 30021  00280E  20F4               	addwfc	prodh,w,c
 30022  002810  6EDA               	movwf	fsr2h,c
 30023  002812  0100               	movlb	0	; () banked
 30024  002814  82DF               	bsf	indf2,1,c
 30025  002816                     i2l2202:
 30026                           
 30027                           ;usb_device.c: 2462: }
 30028                           ;usb_device.c: 2463: }
 30029                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 30030                           
 30031                           ; BSR set to: 0
 30032                           
 30033                           ; BSR set to: 0
 30034  002816  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30035  00281A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30036  00281E  0E00               	movlw	0
 30037  002820  84DB               	bsf	plusw2,2,c
 30038                           
 30039                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 30040  002822  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30041  002826  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30042  00282A  0E00               	movlw	0
 30043  00282C  8EDB               	bsf	plusw2,7,c
 30044                           
 30045                           ;usb_device.c: 2468: }
 30046  00282E  0012               	return	
 30047  002830                     i2l2199:
 30048                           
 30049                           ;usb_device.c: 2469: else
 30050                           ;usb_device.c: 2470: {
 30051                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 30052  002830  0E04               	movlw	4
 30053  002832  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 30054                           
 30055                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 30056  002834  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30057  002838  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30058  00283C  AEDF               	btfss	indf2,7,c
 30059  00283E  D01B               	goto	i2l2204
 30060                           
 30061                           ;usb_device.c: 2476: {
 30062                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 30063  002840  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30064  002844  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30065  002848  0E7F               	movlw	127
 30066  00284A  16DF               	andwf	indf2,f,c
 30067                           
 30068                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 30069  00284C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30070  002850  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30071  002854  0E00               	movlw	0
 30072  002856  8CDB               	bsf	plusw2,6,c
 30073                           
 30074                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 30075  002858  0E00               	movlw	0
 30076  00285A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 30077  00285C  0E05               	movlw	5
 30078  00285E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 30079  002860  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 30080  002864  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 30081  002868  0E00               	movlw	0
 30082  00286A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 30083  00286C  0E02               	movlw	2
 30084  00286E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 30085  002870  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30086                           
 30087                           ;usb_device.c: 2482: }
 30088  002874  D006               	goto	i2l2205
 30089  002876                     i2l2204:
 30090                           
 30091                           ;usb_device.c: 2483: else
 30092                           ;usb_device.c: 2484: {
 30093                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 30094  002876  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30095  00287A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30096  00287E  0E00               	movlw	0
 30097  002880  8CDB               	bsf	plusw2,6,c
 30098  002882                     i2l2205:
 30099                           
 30100                           ;usb_device.c: 2487: }
 30101                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 30102  002882  0E04               	movlw	4
 30103  002884  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 30104                           
 30105                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 30106  002886  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 30107  002888  D006               	goto	i2u670_40
 30108  00288A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30109  00288E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30110  002892  AEDF               	btfss	indf2,7,c
 30111  002894  D030               	goto	i2l2206
 30112  002896                     i2u670_40:
 30113                           
 30114                           ;usb_device.c: 2498: {
 30115                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 30116  002896  0104               	movlb	4	; () banked
 30117  002898  BF34               	btfsc	52,7,b	;volatile
 30118  00289A  D00A               	goto	i2l2209
 30119                           
 30120                           ; BSR set to: 4
 30121                           ;usb_device.c: 2500: {
 30122                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 30123  00289C  5134               	movf	52,w,b	;volatile
 30124  00289E  0B0F               	andlw	15
 30125  0028A0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30126  0028A2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30127  0028A4  0D01               	mullw	1
 30128  0028A6  0ED4               	movlw	low _ep_data_out
 30129  0028A8  24F3               	addwf	prodl,w,c
 30130  0028AA  6ED9               	movwf	fsr2l,c
 30131  0028AC  0E00               	movlw	high _ep_data_out
 30132  0028AE  D00A               	goto	L30
 30133  0028B0                     i2l2209:
 30134                           
 30135                           ;usb_device.c: 2503: else
 30136                           ;usb_device.c: 2504: {
 30137                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 30138                           
 30139                           ; BSR set to: 0
 30140  0028B0  0104               	movlb	4	; () banked
 30141  0028B2  5134               	movf	52,w,b	;volatile
 30142  0028B4  0B0F               	andlw	15
 30143  0028B6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30144  0028B8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30145  0028BA  0D01               	mullw	1
 30146  0028BC  0ED7               	movlw	low _ep_data_in
 30147  0028BE  24F3               	addwf	prodl,w,c
 30148  0028C0  6ED9               	movwf	fsr2l,c
 30149  0028C2  0E00               	movlw	high _ep_data_in
 30150  0028C4                     L30:
 30151  0028C4  20F4               	addwfc	prodh,w,c
 30152  0028C6  6EDA               	movwf	fsr2h,c
 30153  0028C8  0100               	movlb	0	; () banked
 30154  0028CA  92DF               	bcf	indf2,1,c
 30155                           
 30156                           ; BSR set to: 0
 30157                           ;usb_device.c: 2506: }
 30158                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 30159                           
 30160                           ; BSR set to: 0
 30161  0028CC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30162  0028D0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30163  0028D4  0E3B               	movlw	59
 30164  0028D6  16DF               	andwf	indf2,f,c
 30165                           
 30166                           ; BSR set to: 0
 30167                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 30168  0028D8  0E00               	movlw	0
 30169  0028DA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 30170  0028DC  0E05               	movlw	5
 30171  0028DE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 30172  0028E0  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 30173  0028E4  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 30174  0028E8  0E00               	movlw	0
 30175  0028EA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 30176  0028EC  0E02               	movlw	2
 30177  0028EE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 30178  0028F0  EC0D  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30179                           
 30180                           ;usb_device.c: 2512: }
 30181  0028F4  D006               	goto	i2l2211
 30182  0028F6                     i2l2206:
 30183                           
 30184                           ;usb_device.c: 2513: else
 30185                           ;usb_device.c: 2514: {
 30186                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 30187  0028F6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 30188  0028FA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 30189  0028FE  0E3B               	movlw	59
 30190  002900  16DF               	andwf	indf2,f,c
 30191  002902                     i2l2211:
 30192                           
 30193                           ;usb_device.c: 2517: }
 30194                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 30195  002902  0104               	movlb	4	; () banked
 30196  002904  5134               	movf	52,w,b	;volatile
 30197  002906  0B0F               	andlw	15
 30198  002908  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30199  00290A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30200  00290C  0D01               	mullw	1
 30201  00290E  0E6A               	movlw	106
 30202  002910  24F3               	addwf	prodl,w,c
 30203  002912  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 30204  002914  0E0F               	movlw	15
 30205  002916  20F4               	addwfc	prodh,w,c
 30206  002918  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 30207                           
 30208                           ; BSR set to: 4
 30209                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 30210  00291A  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 30211  00291E  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 30212  002922  0EFE               	movlw	254
 30213  002924  16DF               	andwf	indf2,f,c
 30214                           
 30215                           ; BSR set to: 4
 30216  002926  0012               	return	
 30217  002928                     __end_of_USBStdFeatureReqHandler:
 30218                           	opt stack 0
 30219                           pclatu	equ	0xFFB
 30220                           pclath	equ	0xFFA
 30221                           tblptru	equ	0xFF8
 30222                           tblptrh	equ	0xFF7
 30223                           tblptrl	equ	0xFF6
 30224                           tablat	equ	0xFF5
 30225                           prodh	equ	0xFF4
 30226                           prodl	equ	0xFF3
 30227                           intcon	equ	0xFF2
 30228                           intcon2	equ	0xFF1
 30229                           intcon3	equ	0xFF0
 30230                           indf0	equ	0xFEF
 30231                           postinc0	equ	0xFEE
 30232                           fsr0h	equ	0xFEA
 30233                           fsr0l	equ	0xFE9
 30234                           wreg	equ	0xFE8
 30235                           indf1	equ	0xFE7
 30236                           postdec1	equ	0xFE5
 30237                           fsr1h	equ	0xFE2
 30238                           fsr1l	equ	0xFE1
 30239                           indf2	equ	0xFDF
 30240                           postinc2	equ	0xFDE
 30241                           postdec2	equ	0xFDD
 30242                           plusw2	equ	0xFDB
 30243                           fsr2h	equ	0xFDA
 30244                           fsr2l	equ	0xFD9
 30245                           status	equ	0xFD8
 30246                           
 30247 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 30248 ;; Defined at:
 30249 ;;		line 308 in file "../Includes/Board/USBapp.c"
 30250 ;; Parameters:    Size  Location     Type
 30251 ;;  event           2   13[COMRAM] enum E5983
 30252 ;;  pdata           2   15[COMRAM] PTR void 
 30253 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 30254 ;;  size            2   17[COMRAM] unsigned int 
 30255 ;; Auto vars:     Size  Location     Type
 30256 ;;		None
 30257 ;; Return value:  Size  Location     Type
 30258 ;;                  1    wreg      unsigned char 
 30259 ;; Registers used:
 30260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30261 ;; Tracked objects:
 30262 ;;		On entry : 0/0
 30263 ;;		On exit  : 0/0
 30264 ;;		Unchanged: 0/0
 30265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30266 ;;      Params:         6       0       0       0       0       0       0       0       0
 30267 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30268 ;;      Temps:          2       0       0       0       0       0       0       0       0
 30269 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30270 ;;Total ram usage:        8 bytes
 30271 ;; Hardware stack levels used:    1
 30272 ;; Hardware stack levels required when called:    4
 30273 ;; This function calls:
 30274 ;;		_USBCheckCDCRequest
 30275 ;;		_USBapp_CdcEmulatorInitialize
 30276 ;; This function is called by:
 30277 ;;		_USBDeviceTasks
 30278 ;;		_USBStdSetCfgHandler
 30279 ;;		_USBSuspend
 30280 ;;		_USBWakeFromSuspend
 30281 ;;		_USBCtrlTrfSetupHandler
 30282 ;;		_USBCheckStdRequest
 30283 ;;		_USBStdFeatureReqHandler
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text129
 30288  00581A                     __ptext129:
 30289                           	opt stack 0
 30290  00581A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 30291                           	opt stack 15
 30292                           
 30293                           ;USBapp.c: 310: switch( (int) event )
 30294                           
 30295                           ;incstack = 0
 30296  00581A  D006               	goto	i2l996
 30297  00581C                     
 30298                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 30299  00581C  EC96  F02C         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 30300                           
 30301                           ;USBapp.c: 338: break;
 30302                           
 30303                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 30304                           
 30305                           ;USBapp.c: 335: break;
 30306  005820  0012               	return	
 30307  005822                     
 30308                           ;USBapp.c: 343: USBCheckCDCRequest();
 30309  005822  EC79  F025         	call	_USBCheckCDCRequest	;wreg free
 30310                           
 30311                           ;USBapp.c: 354: }
 30312                           
 30313                           ;USBapp.c: 353: break;
 30314                           
 30315                           ;USBapp.c: 352: default:
 30316                           
 30317                           ;USBapp.c: 350: break;
 30318                           
 30319                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 30320                           
 30321                           ;USBapp.c: 347: break;
 30322                           
 30323                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 30324                           
 30325                           ;USBapp.c: 344: break;
 30326  005826  0012               	return	
 30327  005828                     i2l996:
 30328  005828  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 30329  00582C  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 30330                           
 30331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 30332                           ; Switch size 1, requested type "space"
 30333                           ; Number of cases is 2, Range of values is 0 to 127
 30334                           ; switch strategies available:
 30335                           ; Name         Instructions Cycles
 30336                           ; simple_byte            7     4 (average)
 30337                           ;	Chosen strategy is simple_byte
 30338  005830  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 30339  005832  0A00               	xorlw	0	; case 0
 30340  005834  B4D8               	btfsc	status,2,c
 30341  005836  D004               	goto	i2l12787
 30342  005838  0A7F               	xorlw	127	; case 127
 30343  00583A  A4D8               	btfss	status,2,c
 30344  00583C  0012               	return	
 30345  00583E  D018               	goto	i2l12789
 30346  005840                     i2l12787:
 30347                           
 30348                           ; Switch size 1, requested type "space"
 30349                           ; Number of cases is 8, Range of values is 1 to 117
 30350                           ; switch strategies available:
 30351                           ; Name         Instructions Cycles
 30352                           ; simple_byte           25    13 (average)
 30353                           ;	Chosen strategy is simple_byte
 30354  005840  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 30355  005842  0A01               	xorlw	1	; case 1
 30356  005844  B4D8               	btfsc	status,2,c
 30357  005846  D7EA               	goto	i2l1002
 30358  005848  0A03               	xorlw	3	; case 2
 30359  00584A  B4D8               	btfsc	status,2,c
 30360  00584C  0012               	return	
 30361  00584E  0A01               	xorlw	1	; case 3
 30362  005850  B4D8               	btfsc	status,2,c
 30363  005852  D7E7               	goto	i2l1004
 30364  005854  0A06               	xorlw	6	; case 5
 30365  005856  B4D8               	btfsc	status,2,c
 30366  005858  0012               	return	
 30367  00585A  0A77               	xorlw	119	; case 114
 30368  00585C  B4D8               	btfsc	status,2,c
 30369  00585E  0012               	return	
 30370  005860  0A01               	xorlw	1	; case 115
 30371  005862  B4D8               	btfsc	status,2,c
 30372  005864  0012               	return	
 30373  005866  0A07               	xorlw	7	; case 116
 30374  005868  B4D8               	btfsc	status,2,c
 30375  00586A  0012               	return	
 30376  00586C  0A01               	xorlw	1	; case 117
 30377  00586E  0012               	return	
 30378  005870                     i2l12789:
 30379                           
 30380                           ; Switch size 1, requested type "space"
 30381                           ; Number of cases is 1, Range of values is 255 to 255
 30382                           ; switch strategies available:
 30383                           ; Name         Instructions Cycles
 30384                           ; simple_byte            4     3 (average)
 30385                           ;	Chosen strategy is simple_byte
 30386  005870  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 30387  005872  0AFF               	xorlw	255	; case 255
 30388  005874  0012               	return	
 30389  005876                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 30390                           	opt stack 0
 30391                           pclatu	equ	0xFFB
 30392                           pclath	equ	0xFFA
 30393                           tblptru	equ	0xFF8
 30394                           tblptrh	equ	0xFF7
 30395                           tblptrl	equ	0xFF6
 30396                           tablat	equ	0xFF5
 30397                           prodh	equ	0xFF4
 30398                           prodl	equ	0xFF3
 30399                           intcon	equ	0xFF2
 30400                           intcon2	equ	0xFF1
 30401                           intcon3	equ	0xFF0
 30402                           indf0	equ	0xFEF
 30403                           postinc0	equ	0xFEE
 30404                           fsr0h	equ	0xFEA
 30405                           fsr0l	equ	0xFE9
 30406                           wreg	equ	0xFE8
 30407                           indf1	equ	0xFE7
 30408                           postdec1	equ	0xFE5
 30409                           fsr1h	equ	0xFE2
 30410                           fsr1l	equ	0xFE1
 30411                           indf2	equ	0xFDF
 30412                           postinc2	equ	0xFDE
 30413                           postdec2	equ	0xFDD
 30414                           plusw2	equ	0xFDB
 30415                           fsr2h	equ	0xFDA
 30416                           fsr2l	equ	0xFD9
 30417                           status	equ	0xFD8
 30418                           
 30419 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 30420 ;; Defined at:
 30421 ;;		line 144 in file "../Includes/Board/USBapp.c"
 30422 ;; Parameters:    Size  Location     Type
 30423 ;;		None
 30424 ;; Auto vars:     Size  Location     Type
 30425 ;;  i               1   12[COMRAM] unsigned char 
 30426 ;; Return value:  Size  Location     Type
 30427 ;;                  1    wreg      void 
 30428 ;; Registers used:
 30429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30430 ;; Tracked objects:
 30431 ;;		On entry : 0/0
 30432 ;;		On exit  : 0/0
 30433 ;;		Unchanged: 0/0
 30434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30435 ;;      Params:         0       0       0       0       0       0       0       0       0
 30436 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30437 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30438 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30439 ;;Total ram usage:        1 bytes
 30440 ;; Hardware stack levels used:    1
 30441 ;; Hardware stack levels required when called:    3
 30442 ;; This function calls:
 30443 ;;		_CDCInitEP
 30444 ;;		i2_EUSART_Initialize
 30445 ;; This function is called by:
 30446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30447 ;; This function uses a non-reentrant model
 30448 ;;
 30449                           
 30450                           	psect	text130
 30451  00592C                     __ptext130:
 30452                           	opt stack 0
 30453  00592C                     _USBapp_CdcEmulatorInitialize:
 30454                           	opt stack 15
 30455                           
 30456                           ;USBapp.c: 147: CDCInitEP();
 30457                           
 30458                           ;incstack = 0
 30459  00592C  EC77  F02B         	call	_CDCInitEP	;wreg free
 30460                           
 30461                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 30462  005930  0E00               	movlw	0
 30463  005932  0101               	movlb	1	; () banked
 30464  005934  6FE6               	movwf	(_line_coding+4)& (0+255),b
 30465                           
 30466                           ; BSR set to: 1
 30467                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 30468  005936  0E08               	movlw	8
 30469  005938  6FE8               	movwf	(_line_coding+6)& (0+255),b
 30470                           
 30471                           ; BSR set to: 1
 30472                           ;USBapp.c: 150: line_coding.bParityType = 0;
 30473  00593A  0E00               	movlw	0
 30474  00593C  6FE7               	movwf	(_line_coding+5)& (0+255),b
 30475                           
 30476                           ; BSR set to: 1
 30477                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 30478  00593E  0E00               	movlw	0
 30479  005940  6FE2               	movwf	_line_coding& (0+255),b
 30480  005942  0E4B               	movlw	75
 30481  005944  6FE3               	movwf	(_line_coding+1)& (0+255),b
 30482  005946  0E00               	movlw	0
 30483  005948  6FE4               	movwf	(_line_coding+2)& (0+255),b
 30484  00594A  0E00               	movlw	0
 30485  00594C  6FE5               	movwf	(_line_coding+3)& (0+255),b
 30486                           
 30487                           ; BSR set to: 1
 30488                           ;USBapp.c: 152: EUSART_Initialize();
 30489  00594E  EC1F  F02F         	call	i2_EUSART_Initialize	;wreg free
 30490                           
 30491                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 30492  005952  0E00               	movlw	0
 30493  005954  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 30494  005956                     i2l8205:
 30495  005956  0E3F               	movlw	63
 30496  005958  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 30497  00595A  D001               	goto	i2l949
 30498  00595C  D00C               	goto	i2u604_40
 30499  00595E                     i2l949:
 30500                           
 30501                           ;USBapp.c: 155: {
 30502                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 30503  00595E  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 30504  005960  0D01               	mullw	1
 30505  005962  0E80               	movlw	low _USB_Buffer
 30506  005964  24F3               	addwf	prodl,w,c
 30507  005966  6ED9               	movwf	fsr2l,c
 30508  005968  0E02               	movlw	high _USB_Buffer
 30509  00596A  20F4               	addwfc	prodh,w,c
 30510  00596C  6EDA               	movwf	fsr2h,c
 30511  00596E  0E00               	movlw	0
 30512  005970  6EDF               	movwf	indf2,c
 30513  005972  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 30514  005974  D7F0               	goto	i2l8205
 30515  005976                     i2u604_40:
 30516                           
 30517                           ;USBapp.c: 157: }
 30518                           ;USBapp.c: 158: NextUSBOut = 0;
 30519  005976  0E00               	movlw	0
 30520  005978  0100               	movlb	0	; () banked
 30521  00597A  6FEC               	movwf	_NextUSBOut& (0+255),b
 30522                           
 30523                           ;USBapp.c: 159: LastRS232Out = 0;
 30524  00597C  0E00               	movlw	0
 30525  00597E  6FEA               	movwf	_LastRS232Out& (0+255),b
 30526                           
 30527                           ; BSR set to: 0
 30528  005980  0012               	return		;funcret
 30529  005982                     __end_of_USBapp_CdcEmulatorInitialize:
 30530                           	opt stack 0
 30531                           pclatu	equ	0xFFB
 30532                           pclath	equ	0xFFA
 30533                           tblptru	equ	0xFF8
 30534                           tblptrh	equ	0xFF7
 30535                           tblptrl	equ	0xFF6
 30536                           tablat	equ	0xFF5
 30537                           prodh	equ	0xFF4
 30538                           prodl	equ	0xFF3
 30539                           intcon	equ	0xFF2
 30540                           intcon2	equ	0xFF1
 30541                           intcon3	equ	0xFF0
 30542                           indf0	equ	0xFEF
 30543                           postinc0	equ	0xFEE
 30544                           fsr0h	equ	0xFEA
 30545                           fsr0l	equ	0xFE9
 30546                           wreg	equ	0xFE8
 30547                           indf1	equ	0xFE7
 30548                           postdec1	equ	0xFE5
 30549                           fsr1h	equ	0xFE2
 30550                           fsr1l	equ	0xFE1
 30551                           indf2	equ	0xFDF
 30552                           postinc2	equ	0xFDE
 30553                           postdec2	equ	0xFDD
 30554                           plusw2	equ	0xFDB
 30555                           fsr2h	equ	0xFDA
 30556                           fsr2l	equ	0xFD9
 30557                           status	equ	0xFD8
 30558                           
 30559 ;; *************** function _CDCInitEP *****************
 30560 ;; Defined at:
 30561 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 30562 ;; Parameters:    Size  Location     Type
 30563 ;;		None
 30564 ;; Auto vars:     Size  Location     Type
 30565 ;;		None
 30566 ;; Return value:  Size  Location     Type
 30567 ;;                  1    wreg      void 
 30568 ;; Registers used:
 30569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30570 ;; Tracked objects:
 30571 ;;		On entry : 0/0
 30572 ;;		On exit  : 0/0
 30573 ;;		Unchanged: 0/0
 30574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30575 ;;      Params:         0       0       0       0       0       0       0       0       0
 30576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30578 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30579 ;;Total ram usage:        0 bytes
 30580 ;; Hardware stack levels used:    1
 30581 ;; Hardware stack levels required when called:    2
 30582 ;; This function calls:
 30583 ;;		_USBEnableEndpoint
 30584 ;;		i2_USBTransferOnePacket
 30585 ;; This function is called by:
 30586 ;;		_USBapp_CdcEmulatorInitialize
 30587 ;; This function uses a non-reentrant model
 30588 ;;
 30589                           
 30590                           	psect	text131
 30591  0056EE                     __ptext131:
 30592                           	opt stack 0
 30593  0056EE                     _CDCInitEP:
 30594                           	opt stack 15
 30595                           
 30596                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 30597                           
 30598                           ; BSR set to: 0
 30599                           ;incstack = 0
 30600  0056EE  0E00               	movlw	0
 30601  0056F0  0101               	movlb	1	; () banked
 30602  0056F2  6FE2               	movwf	_line_coding& (0+255),b
 30603  0056F4  0E4B               	movlw	75
 30604  0056F6  6FE3               	movwf	(_line_coding+1)& (0+255),b
 30605  0056F8  0E00               	movlw	0
 30606  0056FA  6FE4               	movwf	(_line_coding+2)& (0+255),b
 30607  0056FC  0E00               	movlw	0
 30608  0056FE  6FE5               	movwf	(_line_coding+3)& (0+255),b
 30609                           
 30610                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 30611  005700  0E00               	movlw	0
 30612  005702  6FE6               	movwf	(_line_coding+4)& (0+255),b
 30613                           
 30614                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 30615  005704  0E00               	movlw	0
 30616  005706  6FE7               	movwf	(_line_coding+5)& (0+255),b
 30617                           
 30618                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 30619  005708  0E08               	movlw	8
 30620  00570A  6FE8               	movwf	(_line_coding+6)& (0+255),b
 30621                           
 30622                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 30623  00570C  0E00               	movlw	0
 30624  00570E  0100               	movlb	0	; () banked
 30625  005710  6FE1               	movwf	_cdc_rx_len& (0+255),b
 30626                           
 30627                           ; BSR set to: 0
 30628                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 30629  005712  0E1A               	movlw	26
 30630  005714  6E09               	movwf	USBEnableEndpoint@options,c
 30631  005716  0E01               	movlw	1
 30632  005718  ECAC  F02E         	call	_USBEnableEndpoint
 30633                           
 30634                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 30635  00571C  0E1E               	movlw	30
 30636  00571E  6E09               	movwf	USBEnableEndpoint@options,c
 30637  005720  0E02               	movlw	2
 30638  005722  ECAC  F02E         	call	_USBEnableEndpoint
 30639                           
 30640                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 30641  005726  0E00               	movlw	0
 30642  005728  6E01               	movwf	i2USBTransferOnePacket@dir,c
 30643  00572A  0E40               	movlw	64
 30644  00572C  6E02               	movwf	i2USBTransferOnePacket@data,c
 30645  00572E  0E05               	movlw	5
 30646  005730  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 30647  005732  0E40               	movlw	64
 30648  005734  6E04               	movwf	i2USBTransferOnePacket@len,c
 30649  005736  0E02               	movlw	2
 30650  005738  ECB2  F023         	call	i2_USBTransferOnePacket
 30651  00573C  C001  F0DA         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 30652  005740  C002  F0DB         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 30653                           
 30654                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 30655  005744  0E00               	movlw	0
 30656  005746  0101               	movlb	1	; () banked
 30657  005748  6F14               	movwf	_CDCDataInHandle& (0+255),b
 30658  00574A  0E00               	movlw	0
 30659  00574C  6F15               	movwf	(_CDCDataInHandle+1)& (0+255),b
 30660                           
 30661                           ; BSR set to: 1
 30662                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 30663  00574E  0E00               	movlw	0
 30664  005750  0100               	movlb	0	; () banked
 30665  005752  6FEE               	movwf	_cdc_trf_state& (0+255),b
 30666                           
 30667                           ; BSR set to: 0
 30668  005754  0012               	return		;funcret
 30669  005756                     __end_of_CDCInitEP:
 30670                           	opt stack 0
 30671                           pclatu	equ	0xFFB
 30672                           pclath	equ	0xFFA
 30673                           tblptru	equ	0xFF8
 30674                           tblptrh	equ	0xFF7
 30675                           tblptrl	equ	0xFF6
 30676                           tablat	equ	0xFF5
 30677                           prodh	equ	0xFF4
 30678                           prodl	equ	0xFF3
 30679                           intcon	equ	0xFF2
 30680                           intcon2	equ	0xFF1
 30681                           intcon3	equ	0xFF0
 30682                           indf0	equ	0xFEF
 30683                           postinc0	equ	0xFEE
 30684                           fsr0h	equ	0xFEA
 30685                           fsr0l	equ	0xFE9
 30686                           wreg	equ	0xFE8
 30687                           indf1	equ	0xFE7
 30688                           postdec1	equ	0xFE5
 30689                           fsr1h	equ	0xFE2
 30690                           fsr1l	equ	0xFE1
 30691                           indf2	equ	0xFDF
 30692                           postinc2	equ	0xFDE
 30693                           postdec2	equ	0xFDD
 30694                           plusw2	equ	0xFDB
 30695                           fsr2h	equ	0xFDA
 30696                           fsr2l	equ	0xFD9
 30697                           status	equ	0xFD8
 30698                           
 30699 ;; *************** function i2_USBTransferOnePacket *****************
 30700 ;; Defined at:
 30701 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 30702 ;; Parameters:    Size  Location     Type
 30703 ;;  ep              1    wreg     unsigned char 
 30704 ;;  dir             1    0[COMRAM] unsigned char 
 30705 ;;  data            2    1[COMRAM] PTR unsigned char 
 30706 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 30707 ;;  len             1    3[COMRAM] unsigned char 
 30708 ;; Auto vars:     Size  Location     Type
 30709 ;;  ep              1    4[COMRAM] unsigned char 
 30710 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 30711 ;;		 -> BDT(48), NULL(0), 
 30712 ;; Return value:  Size  Location     Type
 30713 ;;                  2    0[COMRAM] PTR void 
 30714 ;; Registers used:
 30715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30716 ;; Tracked objects:
 30717 ;;		On entry : 0/0
 30718 ;;		On exit  : 0/0
 30719 ;;		Unchanged: 0/0
 30720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30721 ;;      Params:         4       0       0       0       0       0       0       0       0
 30722 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30723 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30724 ;;      Totals:         7       0       0       0       0       0       0       0       0
 30725 ;;Total ram usage:        7 bytes
 30726 ;; Hardware stack levels used:    1
 30727 ;; This function calls:
 30728 ;;		Nothing
 30729 ;; This function is called by:
 30730 ;;		_CDCInitEP
 30731 ;; This function uses a non-reentrant model
 30732 ;;
 30733                           
 30734                           	psect	text132
 30735  004764                     __ptext132:
 30736                           	opt stack 0
 30737  004764                     i2_USBTransferOnePacket:
 30738                           	opt stack 16
 30739                           
 30740                           ; BSR set to: 0
 30741                           ;incstack = 0
 30742                           ;i2USBTransferOnePacket@ep stored from wreg
 30743  004764  6E05               	movwf	i2USBTransferOnePacket@ep,c
 30744                           
 30745                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 30746                           ;usb_device.c: 762: if(dir != 0)
 30747  004766  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30748  004768  B4D8               	btfsc	status,2,c
 30749  00476A  D007               	goto	i2l2000
 30750                           
 30751                           ;usb_device.c: 763: {
 30752                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 30753  00476C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30754  00476E  0D02               	mullw	2
 30755  004770  0ECE               	movlw	low _pBDTEntryIn
 30756  004772  24F3               	addwf	prodl,w,c
 30757  004774  6ED9               	movwf	fsr2l,c
 30758  004776  0E00               	movlw	high _pBDTEntryIn
 30759  004778  D006               	goto	L31
 30760  00477A                     i2l2000:
 30761                           
 30762                           ;usb_device.c: 767: else
 30763                           ;usb_device.c: 768: {
 30764                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 30765  00477A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30766  00477C  0D02               	mullw	2
 30767  00477E  0E00               	movlw	low _pBDTEntryOut
 30768  004780  24F3               	addwf	prodl,w,c
 30769  004782  6ED9               	movwf	fsr2l,c
 30770  004784  0E01               	movlw	high _pBDTEntryOut
 30771  004786                     L31:
 30772  004786  20F4               	addwfc	prodh,w,c
 30773  004788  6EDA               	movwf	fsr2h,c
 30774  00478A  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 30775  00478E  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 30776                           
 30777                           ;usb_device.c: 771: }
 30778                           ;usb_device.c: 775: if(handle == 0)
 30779  004792  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30780  004794  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 30781  004796  A4D8               	btfss	status,2,c
 30782  004798  D005               	goto	i2l2002
 30783                           
 30784                           ;usb_device.c: 776: {
 30785                           ;usb_device.c: 777: return 0;
 30786  00479A  0E00               	movlw	0
 30787  00479C  6E01               	movwf	?i2_USBTransferOnePacket,c
 30788  00479E  0E00               	movlw	0
 30789  0047A0  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 30790  0047A2  0012               	return	
 30791  0047A4                     i2l2002:
 30792                           
 30793                           ;usb_device.c: 778: }
 30794                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 30795  0047A4  EE20 F002          	lfsr	2,2
 30796  0047A8  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30797  0047AA  26D9               	addwf	fsr2l,f,c
 30798  0047AC  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30799  0047AE  22DA               	addwfc	fsr2h,f,c
 30800  0047B0  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 30801  0047B4  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 30802                           
 30803                           ;usb_device.c: 781: handle->CNT = len;
 30804  0047B8  EE20 F001          	lfsr	2,1
 30805  0047BC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30806  0047BE  26D9               	addwf	fsr2l,f,c
 30807  0047C0  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30808  0047C2  22DA               	addwfc	fsr2h,f,c
 30809  0047C4  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 30810                           
 30811                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 30812  0047C8  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30813  0047CC  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30814  0047D0  0E40               	movlw	64
 30815  0047D2  16DF               	andwf	indf2,f,c
 30816                           
 30817                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 30818  0047D4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30819  0047D8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30820  0047DC  0E00               	movlw	0
 30821  0047DE  86DB               	bsf	plusw2,3,c
 30822                           
 30823                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 30824  0047E0  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30825  0047E4  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30826  0047E8  0E00               	movlw	0
 30827  0047EA  8EDB               	bsf	plusw2,7,c
 30828                           
 30829                           ;usb_device.c: 787: if(dir != 0)
 30830  0047EC  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30831  0047EE  B4D8               	btfsc	status,2,c
 30832  0047F0  D007               	goto	i2l2004
 30833                           
 30834                           ;usb_device.c: 788: {
 30835                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 30836  0047F2  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30837  0047F4  0D02               	mullw	2
 30838  0047F6  0ECE               	movlw	low _pBDTEntryIn
 30839  0047F8  24F3               	addwf	prodl,w,c
 30840  0047FA  6ED9               	movwf	fsr2l,c
 30841  0047FC  0E00               	movlw	high _pBDTEntryIn
 30842  0047FE  D006               	goto	L32
 30843  004800                     i2l2004:
 30844                           
 30845                           ;usb_device.c: 792: else
 30846                           ;usb_device.c: 793: {
 30847                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 30848  004800  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30849  004802  0D02               	mullw	2
 30850  004804  0E00               	movlw	low _pBDTEntryOut
 30851  004806  24F3               	addwf	prodl,w,c
 30852  004808  6ED9               	movwf	fsr2l,c
 30853  00480A  0E01               	movlw	high _pBDTEntryOut
 30854  00480C                     L32:
 30855  00480C  20F4               	addwfc	prodh,w,c
 30856  00480E  6EDA               	movwf	fsr2h,c
 30857  004810  0E04               	movlw	4
 30858  004812  1ADF               	xorwf	indf2,f,c
 30859                           
 30860                           ;usb_device.c: 796: }
 30861                           ;usb_device.c: 797: return (void*)handle;
 30862  004814  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 30863  004818  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 30864  00481C  0012               	return	
 30865  00481E                     __end_ofi2_USBTransferOnePacket:
 30866                           	opt stack 0
 30867                           pclatu	equ	0xFFB
 30868                           pclath	equ	0xFFA
 30869                           tblptru	equ	0xFF8
 30870                           tblptrh	equ	0xFF7
 30871                           tblptrl	equ	0xFF6
 30872                           tablat	equ	0xFF5
 30873                           prodh	equ	0xFF4
 30874                           prodl	equ	0xFF3
 30875                           intcon	equ	0xFF2
 30876                           intcon2	equ	0xFF1
 30877                           intcon3	equ	0xFF0
 30878                           indf0	equ	0xFEF
 30879                           postinc0	equ	0xFEE
 30880                           fsr0h	equ	0xFEA
 30881                           fsr0l	equ	0xFE9
 30882                           wreg	equ	0xFE8
 30883                           indf1	equ	0xFE7
 30884                           postdec1	equ	0xFE5
 30885                           fsr1h	equ	0xFE2
 30886                           fsr1l	equ	0xFE1
 30887                           indf2	equ	0xFDF
 30888                           postinc2	equ	0xFDE
 30889                           postdec2	equ	0xFDD
 30890                           plusw2	equ	0xFDB
 30891                           fsr2h	equ	0xFDA
 30892                           fsr2l	equ	0xFD9
 30893                           status	equ	0xFD8
 30894                           
 30895 ;; *************** function _USBEnableEndpoint *****************
 30896 ;; Defined at:
 30897 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 30898 ;; Parameters:    Size  Location     Type
 30899 ;;  ep              1    wreg     unsigned char 
 30900 ;;  options         1    8[COMRAM] unsigned char 
 30901 ;; Auto vars:     Size  Location     Type
 30902 ;;  ep              1   11[COMRAM] unsigned char 
 30903 ;;  p               2    9[COMRAM] PTR unsigned char 
 30904 ;;		 -> UEP0(1), 
 30905 ;; Return value:  Size  Location     Type
 30906 ;;                  1    wreg      void 
 30907 ;; Registers used:
 30908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30909 ;; Tracked objects:
 30910 ;;		On entry : 0/0
 30911 ;;		On exit  : 0/0
 30912 ;;		Unchanged: 0/0
 30913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30914 ;;      Params:         1       0       0       0       0       0       0       0       0
 30915 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30917 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30918 ;;Total ram usage:        4 bytes
 30919 ;; Hardware stack levels used:    1
 30920 ;; Hardware stack levels required when called:    1
 30921 ;; This function calls:
 30922 ;;		_USBConfigureEndpoint
 30923 ;; This function is called by:
 30924 ;;		_CDCInitEP
 30925 ;; This function uses a non-reentrant model
 30926 ;;
 30927                           
 30928                           	psect	text133
 30929  005D58                     __ptext133:
 30930                           	opt stack 0
 30931  005D58                     _USBEnableEndpoint:
 30932                           	opt stack 15
 30933                           
 30934                           ;incstack = 0
 30935                           ;USBEnableEndpoint@ep stored from wreg
 30936  005D58  6E0C               	movwf	USBEnableEndpoint@ep,c
 30937                           
 30938                           ;usb_device.c: 647: unsigned char* p;
 30939                           ;usb_device.c: 651: if(options & 0x04)
 30940  005D5A  A409               	btfss	USBEnableEndpoint@options,2,c
 30941  005D5C  D005               	goto	i2l1995
 30942                           
 30943                           ;usb_device.c: 652: {
 30944                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 30945  005D5E  0E00               	movlw	0
 30946  005D60  6E01               	movwf	USBConfigureEndpoint@direction,c
 30947  005D62  500C               	movf	USBEnableEndpoint@ep,w,c
 30948  005D64  EC15  F027         	call	_USBConfigureEndpoint
 30949  005D68                     i2l1995:
 30950                           
 30951                           ;usb_device.c: 654: }
 30952                           ;usb_device.c: 655: if(options & 0x02)
 30953  005D68  A209               	btfss	USBEnableEndpoint@options,1,c
 30954  005D6A  D005               	goto	i2l1996
 30955                           
 30956                           ;usb_device.c: 656: {
 30957                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 30958  005D6C  0E01               	movlw	1
 30959  005D6E  6E01               	movwf	USBConfigureEndpoint@direction,c
 30960  005D70  500C               	movf	USBEnableEndpoint@ep,w,c
 30961  005D72  EC15  F027         	call	_USBConfigureEndpoint
 30962  005D76                     i2l1996:
 30963                           
 30964                           ;usb_device.c: 658: }
 30965                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 30966  005D76  500C               	movf	USBEnableEndpoint@ep,w,c
 30967  005D78  0D01               	mullw	1
 30968  005D7A  0E6A               	movlw	106
 30969  005D7C  24F3               	addwf	prodl,w,c
 30970  005D7E  6E0A               	movwf	USBEnableEndpoint@p,c
 30971  005D80  0E0F               	movlw	15
 30972  005D82  20F4               	addwfc	prodh,w,c
 30973  005D84  6E0B               	movwf	USBEnableEndpoint@p+1,c
 30974                           
 30975                           ;usb_device.c: 664: *p = options;
 30976  005D86  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 30977  005D8A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 30978  005D8E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 30979  005D92  0012               	return		;funcret
 30980  005D94                     __end_of_USBEnableEndpoint:
 30981                           	opt stack 0
 30982                           pclatu	equ	0xFFB
 30983                           pclath	equ	0xFFA
 30984                           tblptru	equ	0xFF8
 30985                           tblptrh	equ	0xFF7
 30986                           tblptrl	equ	0xFF6
 30987                           tablat	equ	0xFF5
 30988                           prodh	equ	0xFF4
 30989                           prodl	equ	0xFF3
 30990                           intcon	equ	0xFF2
 30991                           intcon2	equ	0xFF1
 30992                           intcon3	equ	0xFF0
 30993                           indf0	equ	0xFEF
 30994                           postinc0	equ	0xFEE
 30995                           fsr0h	equ	0xFEA
 30996                           fsr0l	equ	0xFE9
 30997                           wreg	equ	0xFE8
 30998                           indf1	equ	0xFE7
 30999                           postdec1	equ	0xFE5
 31000                           fsr1h	equ	0xFE2
 31001                           fsr1l	equ	0xFE1
 31002                           indf2	equ	0xFDF
 31003                           postinc2	equ	0xFDE
 31004                           postdec2	equ	0xFDD
 31005                           plusw2	equ	0xFDB
 31006                           fsr2h	equ	0xFDA
 31007                           fsr2l	equ	0xFD9
 31008                           status	equ	0xFD8
 31009                           
 31010 ;; *************** function _USBConfigureEndpoint *****************
 31011 ;; Defined at:
 31012 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 31013 ;; Parameters:    Size  Location     Type
 31014 ;;  EPNum           1    wreg     unsigned char 
 31015 ;;  direction       1    0[COMRAM] unsigned char 
 31016 ;; Auto vars:     Size  Location     Type
 31017 ;;  EPNum           1    5[COMRAM] unsigned char 
 31018 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 31019 ;;		 -> BDT(48), 
 31020 ;; Return value:  Size  Location     Type
 31021 ;;                  1    wreg      void 
 31022 ;; Registers used:
 31023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31024 ;; Tracked objects:
 31025 ;;		On entry : 0/0
 31026 ;;		On exit  : 0/0
 31027 ;;		Unchanged: 0/0
 31028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31029 ;;      Params:         1       0       0       0       0       0       0       0       0
 31030 ;;      Locals:         3       0       0       0       0       0       0       0       0
 31031 ;;      Temps:          4       0       0       0       0       0       0       0       0
 31032 ;;      Totals:         8       0       0       0       0       0       0       0       0
 31033 ;;Total ram usage:        8 bytes
 31034 ;; Hardware stack levels used:    1
 31035 ;; This function calls:
 31036 ;;		Nothing
 31037 ;; This function is called by:
 31038 ;;		_USBEnableEndpoint
 31039 ;; This function uses a non-reentrant model
 31040 ;;
 31041                           
 31042                           	psect	text134
 31043  004E2A                     __ptext134:
 31044                           	opt stack 0
 31045  004E2A                     _USBConfigureEndpoint:
 31046                           	opt stack 15
 31047                           
 31048                           ;incstack = 0
 31049                           ;USBConfigureEndpoint@EPNum stored from wreg
 31050  004E2A  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 31051                           
 31052                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 31053                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 31054  004E2C  0E00               	movlw	0
 31055  004E2E  6E07               	movwf	USBConfigureEndpoint@handle,c
 31056  004E30  0E04               	movlw	4
 31057  004E32  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 31058                           
 31059                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 31060  004E34  5001               	movf	USBConfigureEndpoint@direction,w,c
 31061  004E36  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 31062  004E38  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 31063  004E3A  90D8               	bcf	status,0,c
 31064  004E3C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 31065  004E3E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 31066  004E40  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 31067  004E42  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 31068  004E44  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 31069  004E46  90D8               	bcf	status,0,c
 31070  004E48  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 31071  004E4A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 31072  004E4C  90D8               	bcf	status,0,c
 31073  004E4E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 31074  004E50  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 31075  004E52  5002               	movf	??_USBConfigureEndpoint,w,c
 31076  004E54  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 31077  004E56  5003               	movf	??_USBConfigureEndpoint+1,w,c
 31078  004E58  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 31079  004E5A  90D8               	bcf	status,0,c
 31080  004E5C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 31081  004E5E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 31082  004E60  90D8               	bcf	status,0,c
 31083  004E62  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 31084  004E64  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 31085  004E66  5004               	movf	??_USBConfigureEndpoint+2,w,c
 31086  004E68  2607               	addwf	USBConfigureEndpoint@handle,f,c
 31087  004E6A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 31088  004E6C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 31089                           
 31090                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 31091  004E6E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 31092  004E72  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 31093  004E76  9EDF               	bcf	indf2,7,c
 31094                           
 31095                           ;usb_device.c: 1242: if(direction == 0)
 31096  004E78  5001               	movf	USBConfigureEndpoint@direction,w,c
 31097  004E7A  A4D8               	btfss	status,2,c
 31098  004E7C  D007               	goto	i2l2042
 31099                           
 31100                           ;usb_device.c: 1243: {
 31101                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 31102  004E7E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 31103  004E80  0D02               	mullw	2
 31104  004E82  0E00               	movlw	low _pBDTEntryOut
 31105  004E84  24F3               	addwf	prodl,w,c
 31106  004E86  6ED9               	movwf	fsr2l,c
 31107  004E88  0E01               	movlw	high _pBDTEntryOut
 31108  004E8A  D006               	goto	L33
 31109  004E8C                     i2l2042:
 31110                           
 31111                           ;usb_device.c: 1246: else
 31112                           ;usb_device.c: 1247: {
 31113                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 31114  004E8C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 31115  004E8E  0D02               	mullw	2
 31116  004E90  0ECE               	movlw	low _pBDTEntryIn
 31117  004E92  24F3               	addwf	prodl,w,c
 31118  004E94  6ED9               	movwf	fsr2l,c
 31119  004E96  0E00               	movlw	high _pBDTEntryIn
 31120  004E98                     L33:
 31121  004E98  20F4               	addwfc	prodh,w,c
 31122  004E9A  6EDA               	movwf	fsr2h,c
 31123  004E9C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 31124  004EA0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 31125                           
 31126                           ;usb_device.c: 1249: }
 31127                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 31128  004EA4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 31129  004EA8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 31130  004EAC  9CDF               	bcf	indf2,6,c
 31131                           
 31132                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 31133  004EAE  EE20 F004          	lfsr	2,4
 31134  004EB2  5007               	movf	USBConfigureEndpoint@handle,w,c
 31135  004EB4  26D9               	addwf	fsr2l,f,c
 31136  004EB6  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 31137  004EB8  22DA               	addwfc	fsr2h,f,c
 31138  004EBA  8CDF               	bsf	indf2,6,c
 31139  004EBC  0012               	return		;funcret
 31140  004EBE                     __end_of_USBConfigureEndpoint:
 31141                           	opt stack 0
 31142                           pclatu	equ	0xFFB
 31143                           pclath	equ	0xFFA
 31144                           tblptru	equ	0xFF8
 31145                           tblptrh	equ	0xFF7
 31146                           tblptrl	equ	0xFF6
 31147                           tablat	equ	0xFF5
 31148                           prodh	equ	0xFF4
 31149                           prodl	equ	0xFF3
 31150                           intcon	equ	0xFF2
 31151                           intcon2	equ	0xFF1
 31152                           intcon3	equ	0xFF0
 31153                           indf0	equ	0xFEF
 31154                           postinc0	equ	0xFEE
 31155                           fsr0h	equ	0xFEA
 31156                           fsr0l	equ	0xFE9
 31157                           wreg	equ	0xFE8
 31158                           indf1	equ	0xFE7
 31159                           postdec1	equ	0xFE5
 31160                           fsr1h	equ	0xFE2
 31161                           fsr1l	equ	0xFE1
 31162                           indf2	equ	0xFDF
 31163                           postinc2	equ	0xFDE
 31164                           postdec2	equ	0xFDD
 31165                           plusw2	equ	0xFDB
 31166                           fsr2h	equ	0xFDA
 31167                           fsr2l	equ	0xFD9
 31168                           status	equ	0xFD8
 31169                           
 31170 ;; *************** function _USBCheckCDCRequest *****************
 31171 ;; Defined at:
 31172 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;		None
 31175 ;; Auto vars:     Size  Location     Type
 31176 ;;		None
 31177 ;; Return value:  Size  Location     Type
 31178 ;;                  1    wreg      void 
 31179 ;; Registers used:
 31180 ;;		wreg, status,2, status,0
 31181 ;; Tracked objects:
 31182 ;;		On entry : 0/0
 31183 ;;		On exit  : 0/0
 31184 ;;		Unchanged: 0/0
 31185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31186 ;;      Params:         0       0       0       0       0       0       0       0       0
 31187 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31189 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31190 ;;Total ram usage:        0 bytes
 31191 ;; Hardware stack levels used:    1
 31192 ;; This function calls:
 31193 ;;		Nothing
 31194 ;; This function is called by:
 31195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31196 ;; This function uses a non-reentrant model
 31197 ;;
 31198                           
 31199                           	psect	text135
 31200  004AF2                     __ptext135:
 31201                           	opt stack 0
 31202  004AF2                     _USBCheckCDCRequest:
 31203                           	opt stack 18
 31204                           
 31205                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 31206                           
 31207                           ;incstack = 0
 31208  004AF2  0104               	movlb	4	; () banked
 31209  004AF4  5130               	movf	48,w,b	;volatile
 31210  004AF6  0B1F               	andlw	31
 31211  004AF8  06E8               	decf	wreg,f,c
 31212  004AFA  A4D8               	btfss	status,2,c
 31213  004AFC  0012               	return	
 31214                           
 31215                           ; BSR set to: 4
 31216                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 31217                           
 31218                           ; BSR set to: 4
 31219                           
 31220                           ; BSR set to: 4
 31221  004AFE  3930               	swapf	48,w,b	;volatile
 31222  004B00  32E8               	rrcf	wreg,f,c
 31223  004B02  0B03               	andlw	3
 31224  004B04  06E8               	decf	wreg,f,c
 31225  004B06  A4D8               	btfss	status,2,c
 31226  004B08  0012               	return	
 31227                           
 31228                           ; BSR set to: 4
 31229                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 31230                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 31231                           
 31232                           ; BSR set to: 4
 31233                           
 31234                           ; BSR set to: 4
 31235  004B0A  5134               	movf	52,w,b	;volatile
 31236  004B0C  B4D8               	btfsc	status,2,c
 31237  004B0E  D037               	goto	i2l2263
 31238                           
 31239                           ; BSR set to: 4
 31240  004B10  0534               	decf	52,w,b	;volatile
 31241  004B12  A4D8               	btfss	status,2,c
 31242  004B14  0012               	return	
 31243  004B16  D033               	goto	i2l2263
 31244  004B18                     
 31245                           ; BSR set to: 4
 31246                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 31247                           
 31248                           ; BSR set to: 4
 31249  004B18  0EDA               	movlw	low _dummy_encapsulated_cmd_response
 31250  004B1A  0100               	movlb	0	; () banked
 31251  004B1C  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 31252  004B1E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 31253  004B20  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 31254                           
 31255                           ; BSR set to: 0
 31256                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 31257  004B22  0E00               	movlw	0
 31258  004B24  6FCD               	movwf	(_inPipes+5)& (0+255),b	;volatile
 31259  004B26  0E08               	movlw	8
 31260  004B28  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31261                           
 31262                           ; BSR set to: 0
 31263                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 31264  004B2A  81CB               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 31265                           
 31266                           ; BSR set to: 0
 31267                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 31268  004B2C  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31269                           
 31270                           ;usb_device_cdc.c: 212: break;
 31271  004B2E  0012               	return	
 31272  004B30                     
 31273                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 31274                           
 31275                           ; BSR set to: 0
 31276  004B30  0EDA               	movlw	low _dummy_encapsulated_cmd_response
 31277  004B32  0100               	movlb	0	; () banked
 31278  004B34  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 31279  004B36  0E01               	movlw	high _dummy_encapsulated_cmd_response
 31280  004B38  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 31281                           
 31282                           ; BSR set to: 0
 31283                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 31284  004B3A  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31285                           
 31286                           ;usb_device_cdc.c: 217: break;
 31287  004B3C  0012               	return	
 31288  004B3E                     i2l2267:
 31289                           
 31290                           ; BSR set to: 4
 31291                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 31292  004B3E  C436 F0C4          	movff	1078,_outPipes+4	;volatile
 31293  004B42  C437 F0C5          	movff	1079,_outPipes+5	;volatile
 31294                           
 31295                           ; BSR set to: 4
 31296                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 31297  004B46  0ED0               	movlw	low _cdc_notice
 31298  004B48  0100               	movlb	0	; () banked
 31299  004B4A  6FC0               	movwf	_outPipes& (0+255),b	;volatile
 31300  004B4C  0E01               	movlw	high _cdc_notice
 31301  004B4E  6FC1               	movwf	(_outPipes+1)& (0+255),b	;volatile
 31302                           
 31303                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 31304  004B50  0ED2               	movlw	low _USART_mySetLineCodingHandler
 31305  004B52  6FC6               	movwf	(_outPipes+6)& (0+255),b	;volatile
 31306  004B54  0E58               	movlw	high _USART_mySetLineCodingHandler
 31307  004B56  6FC7               	movwf	(_outPipes+7)& (0+255),b	;volatile
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 31311  004B58  8FC3               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 31312                           
 31313                           ;usb_device_cdc.c: 224: break;
 31314  004B5A  0012               	return	
 31315  004B5C                     
 31316                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 31317                           
 31318                           ; BSR set to: 0
 31319  004B5C  0EE2               	movlw	low _line_coding
 31320  004B5E  0100               	movlb	0	; () banked
 31321  004B60  6FC8               	movwf	_inPipes& (0+255),b	;volatile
 31322  004B62  0E01               	movlw	high _line_coding
 31323  004B64  6FC9               	movwf	(_inPipes+1)& (0+255),b	;volatile
 31324                           
 31325                           ; BSR set to: 0
 31326  004B66  0E00               	movlw	0
 31327  004B68  6FCD               	movwf	(_inPipes+5)& (0+255),b	;volatile
 31328  004B6A  0E07               	movlw	7
 31329  004B6C  6FCC               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31330                           
 31331                           ; BSR set to: 0
 31332  004B6E  0EC1               	movlw	193
 31333  004B70  6FCB               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31334                           
 31335                           ;usb_device_cdc.c: 231: break;
 31336  004B72  0012               	return	
 31337  004B74                     i2l2269:
 31338                           
 31339                           ; BSR set to: 4
 31340                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 31341  004B74  C432 F11E          	movff	1074,_control_signal_bitmap	;volatile
 31342                           
 31343                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 31344  004B78  0100               	movlb	0	; () banked
 31345  004B7A  8FCB               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;usb_device_cdc.c: 260: }
 31349                           
 31350                           ; BSR set to: 0
 31351                           ;usb_device_cdc.c: 259: break;
 31352                           
 31353                           ;usb_device_cdc.c: 258: default:
 31354                           
 31355                           ;usb_device_cdc.c: 256: break;
 31356  004B7C  0012               	return	
 31357  004B7E                     i2l2263:
 31358                           
 31359                           ; BSR set to: 0
 31360  004B7E  0104               	movlb	4	; () banked
 31361  004B80  5131               	movf	49,w,b	;volatile
 31362                           
 31363                           ; Switch size 1, requested type "space"
 31364                           ; Number of cases is 5, Range of values is 0 to 34
 31365                           ; switch strategies available:
 31366                           ; Name         Instructions Cycles
 31367                           ; simple_byte           16     9 (average)
 31368                           ;	Chosen strategy is simple_byte
 31369  004B82  0A00               	xorlw	0	; case 0
 31370  004B84  B4D8               	btfsc	status,2,c
 31371  004B86  D7C8               	goto	i2l2264
 31372  004B88  0A01               	xorlw	1	; case 1
 31373  004B8A  B4D8               	btfsc	status,2,c
 31374  004B8C  D7D1               	goto	i2l2266
 31375  004B8E  0A21               	xorlw	33	; case 32
 31376  004B90  B4D8               	btfsc	status,2,c
 31377  004B92  D7D5               	goto	i2l2267
 31378  004B94  0A01               	xorlw	1	; case 33
 31379  004B96  B4D8               	btfsc	status,2,c
 31380  004B98  D7E1               	goto	i2l2268
 31381  004B9A  0A03               	xorlw	3	; case 34
 31382  004B9C  A4D8               	btfss	status,2,c
 31383  004B9E  0012               	return	
 31384  004BA0  D7E9               	goto	i2l2269
 31385  004BA2                     __end_of_USBCheckCDCRequest:
 31386                           	opt stack 0
 31387                           pclatu	equ	0xFFB
 31388                           pclath	equ	0xFFA
 31389                           tblptru	equ	0xFF8
 31390                           tblptrh	equ	0xFF7
 31391                           tblptrl	equ	0xFF6
 31392                           tablat	equ	0xFF5
 31393                           prodh	equ	0xFF4
 31394                           prodl	equ	0xFF3
 31395                           intcon	equ	0xFF2
 31396                           intcon2	equ	0xFF1
 31397                           intcon3	equ	0xFF0
 31398                           indf0	equ	0xFEF
 31399                           postinc0	equ	0xFEE
 31400                           fsr0h	equ	0xFEA
 31401                           fsr0l	equ	0xFE9
 31402                           wreg	equ	0xFE8
 31403                           indf1	equ	0xFE7
 31404                           postdec1	equ	0xFE5
 31405                           fsr1h	equ	0xFE2
 31406                           fsr1l	equ	0xFE1
 31407                           indf2	equ	0xFDF
 31408                           postinc2	equ	0xFDE
 31409                           postdec2	equ	0xFDD
 31410                           plusw2	equ	0xFDB
 31411                           fsr2h	equ	0xFDA
 31412                           fsr2l	equ	0xFD9
 31413                           status	equ	0xFD8
 31414                           
 31415 ;; *************** function _USBCtrlTrfOutHandler *****************
 31416 ;; Defined at:
 31417 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 31418 ;; Parameters:    Size  Location     Type
 31419 ;;		None
 31420 ;; Auto vars:     Size  Location     Type
 31421 ;;		None
 31422 ;; Return value:  Size  Location     Type
 31423 ;;                  1    wreg      void 
 31424 ;; Registers used:
 31425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31426 ;; Tracked objects:
 31427 ;;		On entry : 0/0
 31428 ;;		On exit  : 0/0
 31429 ;;		Unchanged: 0/0
 31430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31431 ;;      Params:         0       0       0       0       0       0       0       0       0
 31432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31434 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31435 ;;Total ram usage:        0 bytes
 31436 ;; Hardware stack levels used:    1
 31437 ;; Hardware stack levels required when called:    3
 31438 ;; This function calls:
 31439 ;;		_USBCtrlTrfRxService
 31440 ;; This function is called by:
 31441 ;;		_USBCtrlEPService
 31442 ;; This function uses a non-reentrant model
 31443 ;;
 31444                           
 31445                           	psect	text136
 31446  005876                     __ptext136:
 31447                           	opt stack 0
 31448  005876                     _USBCtrlTrfOutHandler:
 31449                           	opt stack 15
 31450                           
 31451                           ;usb_device.c: 2171: if(controlTransferState == 2)
 31452                           
 31453                           ;incstack = 0
 31454  005876  0E02               	movlw	2
 31455  005878  1848               	xorwf	_controlTransferState,w,c	;volatile
 31456  00587A  A4D8               	btfss	status,2,c
 31457  00587C  D003               	goto	i2l2150
 31458                           
 31459                           ;usb_device.c: 2172: {
 31460                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 31461  00587E  EC80  F01A         	call	_USBCtrlTrfRxService	;wreg free
 31462                           
 31463                           ;usb_device.c: 2174: }
 31464  005882  0012               	return	
 31465  005884                     i2l2150:
 31466                           
 31467                           ;usb_device.c: 2175: else
 31468                           ;usb_device.c: 2176: {
 31469                           ;usb_device.c: 2179: controlTransferState = 0;
 31470  005884  0E00               	movlw	0
 31471  005886  6E48               	movwf	_controlTransferState,c	;volatile
 31472                           
 31473                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 31474  005888  5045               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 31475  00588A  A4D8               	btfss	status,2,c
 31476  00588C  D01F               	goto	i2l2152
 31477                           
 31478                           ;usb_device.c: 2187: {
 31479                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 31480  00588E  EE20 F001          	lfsr	2,1
 31481  005892  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31482  005894  26D9               	addwf	fsr2l,f,c
 31483  005896  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31484  005898  22DA               	addwfc	fsr2h,f,c
 31485  00589A  0E08               	movlw	8
 31486  00589C  6EDF               	movwf	indf2,c
 31487                           
 31488                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31489  00589E  EE20 F002          	lfsr	2,2
 31490  0058A2  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31491  0058A4  26D9               	addwf	fsr2l,f,c
 31492  0058A6  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31493  0058A8  22DA               	addwfc	fsr2h,f,c
 31494  0058AA  0E30               	movlw	48
 31495  0058AC  6EDE               	movwf	postinc2,c
 31496  0058AE  0E04               	movlw	4
 31497  0058B0  6EDD               	movwf	postdec2,c
 31498                           
 31499                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 31500  0058B2  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31501  0058B6  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31502  0058BA  0E0C               	movlw	12
 31503  0058BC  6EDF               	movwf	indf2,c
 31504                           
 31505                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31506  0058BE  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31507  0058C2  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31508  0058C6  0E00               	movlw	0
 31509  0058C8  8EDB               	bsf	plusw2,7,c
 31510                           
 31511                           ;usb_device.c: 2192: }
 31512  0058CA  0012               	return	
 31513  0058CC                     i2l2152:
 31514                           
 31515                           ;usb_device.c: 2193: else
 31516                           ;usb_device.c: 2194: {
 31517                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 31518  0058CC  0E00               	movlw	0
 31519  0058CE  6E45               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31520  0058D0  0012               	return	
 31521  0058D2                     __end_of_USBCtrlTrfOutHandler:
 31522                           	opt stack 0
 31523                           pclatu	equ	0xFFB
 31524                           pclath	equ	0xFFA
 31525                           tblptru	equ	0xFF8
 31526                           tblptrh	equ	0xFF7
 31527                           tblptrl	equ	0xFF6
 31528                           tablat	equ	0xFF5
 31529                           prodh	equ	0xFF4
 31530                           prodl	equ	0xFF3
 31531                           intcon	equ	0xFF2
 31532                           intcon2	equ	0xFF1
 31533                           intcon3	equ	0xFF0
 31534                           indf0	equ	0xFEF
 31535                           postinc0	equ	0xFEE
 31536                           fsr0h	equ	0xFEA
 31537                           fsr0l	equ	0xFE9
 31538                           wreg	equ	0xFE8
 31539                           indf1	equ	0xFE7
 31540                           postdec1	equ	0xFE5
 31541                           fsr1h	equ	0xFE2
 31542                           fsr1l	equ	0xFE1
 31543                           indf2	equ	0xFDF
 31544                           postinc2	equ	0xFDE
 31545                           postdec2	equ	0xFDD
 31546                           plusw2	equ	0xFDB
 31547                           fsr2h	equ	0xFDA
 31548                           fsr2l	equ	0xFD9
 31549                           status	equ	0xFD8
 31550                           
 31551 ;; *************** function _USBCtrlTrfRxService *****************
 31552 ;; Defined at:
 31553 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 31554 ;; Parameters:    Size  Location     Type
 31555 ;;		None
 31556 ;; Auto vars:     Size  Location     Type
 31557 ;;  byteToRead      1   18[COMRAM] unsigned char 
 31558 ;;  i               1   17[COMRAM] unsigned char 
 31559 ;; Return value:  Size  Location     Type
 31560 ;;                  1    wreg      void 
 31561 ;; Registers used:
 31562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31563 ;; Tracked objects:
 31564 ;;		On entry : 0/0
 31565 ;;		On exit  : 0/0
 31566 ;;		Unchanged: 0/0
 31567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31568 ;;      Params:         0       0       0       0       0       0       0       0       0
 31569 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31571 ;;      Totals:         2       0       0       0       0       0       0       0       0
 31572 ;;Total ram usage:        2 bytes
 31573 ;; Hardware stack levels used:    1
 31574 ;; Hardware stack levels required when called:    2
 31575 ;; This function calls:
 31576 ;;		_USART_mySetLineCodingHandler
 31577 ;;		_USBCtrlEPAllowStatusStage
 31578 ;; This function is called by:
 31579 ;;		_USBCtrlTrfOutHandler
 31580 ;; This function uses a non-reentrant model
 31581 ;;
 31582                           
 31583                           	psect	text137
 31584  003500                     __ptext137:
 31585                           	opt stack 0
 31586  003500                     _USBCtrlTrfRxService:
 31587                           	opt stack 15
 31588                           
 31589                           ;usb_device.c: 1520: uint8_t byteToRead;
 31590                           ;usb_device.c: 1521: uint8_t i;
 31591                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 31592                           
 31593                           ;incstack = 0
 31594  003500  EE20 F001          	lfsr	2,1
 31595  003504  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 31596  003506  26D9               	addwf	fsr2l,f,c
 31597  003508  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31598  00350A  22DA               	addwfc	fsr2h,f,c
 31599  00350C  50DF               	movf	indf2,w,c
 31600  00350E  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 31601                           
 31602                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 31603  003510  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31604  003512  0100               	movlb	0	; () banked
 31605  003514  5DC4               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 31606  003516  0E00               	movlw	0
 31607  003518  59C5               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 31608  00351A  A0D8               	btfss	status,0,c
 31609                           
 31610                           ; BSR set to: 0
 31611                           ;usb_device.c: 1532: {
 31612                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 31613  00351C  C0C4  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 31614                           
 31615                           ; BSR set to: 0
 31616                           ;usb_device.c: 1534: }
 31617                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 31618                           
 31619                           ; BSR set to: 0
 31620  003520  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31621  003522  5FC4               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 31622  003524  0E00               	movlw	0
 31623  003526  5BC5               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 31624                           
 31625                           ; BSR set to: 0
 31626                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 31627  003528  0E00               	movlw	0
 31628  00352A  6E12               	movwf	USBCtrlTrfRxService@i,c
 31629  00352C  D011               	goto	i2l2076
 31630  00352E                     
 31631                           ; BSR set to: 0
 31632                           ;usb_device.c: 1541: {
 31633                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 31634                           
 31635                           ; BSR set to: 0
 31636  00352E  5012               	movf	USBCtrlTrfRxService@i,w,c
 31637  003530  0D01               	mullw	1
 31638  003532  0E38               	movlw	56
 31639  003534  24F3               	addwf	prodl,w,c
 31640  003536  6ED9               	movwf	fsr2l,c
 31641  003538  0E04               	movlw	4
 31642  00353A  20F4               	addwfc	prodh,w,c
 31643  00353C  6EDA               	movwf	fsr2h,c
 31644  00353E  C0C0  FFE1         	movff	_outPipes,fsr1l	;volatile
 31645  003542  C0C1  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 31646  003546  CFDF FFE7          	movff	indf2,indf1
 31647                           
 31648                           ; BSR set to: 0
 31649  00354A  4BC0               	infsnz	_outPipes& (0+255),f,b	;volatile
 31650  00354C  2BC1               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 31651                           
 31652                           ; BSR set to: 0
 31653  00354E  2A12               	incf	USBCtrlTrfRxService@i,f,c
 31654  003550                     i2l2076:
 31655                           
 31656                           ; BSR set to: 0
 31657                           
 31658                           ; BSR set to: 0
 31659  003550  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31660  003552  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 31661  003554  A0D8               	btfss	status,0,c
 31662  003556  D7EB               	goto	i2l2077
 31663                           
 31664                           ; BSR set to: 0
 31665                           ;usb_device.c: 1543: }
 31666                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 31667                           
 31668                           ; BSR set to: 0
 31669  003558  51C4               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 31670  00355A  11C5               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 31671  00355C  B4D8               	btfsc	status,2,c
 31672  00355E  D032               	goto	i2l2079
 31673                           
 31674                           ; BSR set to: 0
 31675                           ;usb_device.c: 1548: {
 31676                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 31677  003560  EE20 F001          	lfsr	2,1
 31678  003564  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31679  003566  26D9               	addwf	fsr2l,f,c
 31680  003568  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31681  00356A  22DA               	addwfc	fsr2h,f,c
 31682  00356C  0E08               	movlw	8
 31683  00356E  6EDF               	movwf	indf2,c
 31684                           
 31685                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 31686  003570  EE20 F002          	lfsr	2,2
 31687  003574  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31688  003576  26D9               	addwf	fsr2l,f,c
 31689  003578  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31690  00357A  22DA               	addwfc	fsr2h,f,c
 31691  00357C  0E38               	movlw	56
 31692  00357E  6EDE               	movwf	postinc2,c
 31693  003580  0E04               	movlw	4
 31694  003582  6EDD               	movwf	postdec2,c
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 31698  003584  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31699  003588  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31700  00358C  BCDF               	btfsc	indf2,6,c
 31701  00358E  D00D               	goto	i2l2080
 31702                           
 31703                           ; BSR set to: 0
 31704                           ;usb_device.c: 1552: {
 31705                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 31706  003590  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31707  003594  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31708  003598  0E48               	movlw	72
 31709  00359A  6EDF               	movwf	indf2,c
 31710                           
 31711                           ; BSR set to: 0
 31712                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31713  00359C  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31714  0035A0  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31715  0035A4  0E00               	movlw	0
 31716  0035A6  8EDB               	bsf	plusw2,7,c
 31717                           
 31718                           ;usb_device.c: 1555: }
 31719  0035A8  0012               	return	
 31720  0035AA                     i2l2080:
 31721                           
 31722                           ; BSR set to: 0
 31723                           ;usb_device.c: 1556: else
 31724                           ;usb_device.c: 1557: {
 31725                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 31726                           
 31727                           ; BSR set to: 0
 31728  0035AA  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31729  0035AE  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31730  0035B2  0E08               	movlw	8
 31731  0035B4  6EDF               	movwf	indf2,c
 31732                           
 31733                           ; BSR set to: 0
 31734                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31735  0035B6  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31736  0035BA  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31737  0035BE  0E00               	movlw	0
 31738  0035C0  8EDB               	bsf	plusw2,7,c
 31739                           
 31740                           ; BSR set to: 0
 31741                           ;usb_device.c: 1560: }
 31742                           ;usb_device.c: 1561: }
 31743  0035C2  0012               	return	
 31744  0035C4                     i2l2079:
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;usb_device.c: 1562: else
 31748                           ;usb_device.c: 1563: {
 31749                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 31750                           
 31751                           ; BSR set to: 0
 31752  0035C4  EE20 F001          	lfsr	2,1
 31753  0035C8  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31754  0035CA  26D9               	addwf	fsr2l,f,c
 31755  0035CC  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31756  0035CE  22DA               	addwfc	fsr2h,f,c
 31757  0035D0  0E08               	movlw	8
 31758  0035D2  6EDF               	movwf	indf2,c
 31759                           
 31760                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31761  0035D4  EE20 F002          	lfsr	2,2
 31762  0035D8  5032               	movf	_pBDTEntryEP0OutNext,w,c
 31763  0035DA  26D9               	addwf	fsr2l,f,c
 31764  0035DC  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 31765  0035DE  22DA               	addwfc	fsr2h,f,c
 31766  0035E0  0E30               	movlw	48
 31767  0035E2  6EDE               	movwf	postinc2,c
 31768  0035E4  0E04               	movlw	4
 31769  0035E6  6EDD               	movwf	postdec2,c
 31770                           
 31771                           ; BSR set to: 0
 31772                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 31773  0035E8  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31774  0035EC  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31775  0035F0  0E04               	movlw	4
 31776  0035F2  6EDF               	movwf	indf2,c
 31777                           
 31778                           ; BSR set to: 0
 31779                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31780  0035F4  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31781  0035F8  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31782  0035FC  0E00               	movlw	0
 31783  0035FE  8EDB               	bsf	plusw2,7,c
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 31787  003600  51C6               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31788  003602  11C7               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 31789  003604  B4D8               	btfsc	status,2,c
 31790  003606  D00B               	goto	i2u705_49
 31791                           
 31792                           ; BSR set to: 0
 31793                           ;usb_device.c: 1581: {
 31794                           ;usb_device.c: 1586: outPipes[0].pFunc();
 31795  003608  D801               	call	i2u705_48
 31796  00360A  D009               	goto	i2u705_49
 31797  00360C                     i2u705_48:
 31798  00360C  0005               	push	
 31799  00360E  6EFA               	movwf	pclath,c
 31800  003610  51C6               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31801  003612  6EFD               	movwf	tosl,c
 31802  003614  51C7               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 31803  003616  6EFE               	movwf	tosh,c
 31804  003618  6AFF               	clrf	tosu,c
 31805  00361A  50FA               	movf	pclath,w,c
 31806  00361C  0012               	return		;indir
 31807  00361E                     i2u705_49:
 31808                           
 31809                           ;usb_device.c: 1588: }
 31810                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 31811  00361E  0100               	movlb	0	; () banked
 31812  003620  9FC3               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 31813                           
 31814                           ; BSR set to: 0
 31815                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 31816  003622  5043               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 31817  003624  A4D8               	btfss	status,2,c
 31818  003626  0012               	return	
 31819                           
 31820                           ; BSR set to: 0
 31821                           ;usb_device.c: 1604: {
 31822                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 31823  003628  EC2F  F022         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31824  00362C  0012               	return	
 31825  00362E                     __end_of_USBCtrlTrfRxService:
 31826                           	opt stack 0
 31827                           tosu	equ	0xFFF
 31828                           tosh	equ	0xFFE
 31829                           tosl	equ	0xFFD
 31830                           pclatu	equ	0xFFB
 31831                           pclath	equ	0xFFA
 31832                           tblptru	equ	0xFF8
 31833                           tblptrh	equ	0xFF7
 31834                           tblptrl	equ	0xFF6
 31835                           tablat	equ	0xFF5
 31836                           prodh	equ	0xFF4
 31837                           prodl	equ	0xFF3
 31838                           intcon	equ	0xFF2
 31839                           intcon2	equ	0xFF1
 31840                           intcon3	equ	0xFF0
 31841                           indf0	equ	0xFEF
 31842                           postinc0	equ	0xFEE
 31843                           fsr0h	equ	0xFEA
 31844                           fsr0l	equ	0xFE9
 31845                           wreg	equ	0xFE8
 31846                           indf1	equ	0xFE7
 31847                           postdec1	equ	0xFE5
 31848                           fsr1h	equ	0xFE2
 31849                           fsr1l	equ	0xFE1
 31850                           indf2	equ	0xFDF
 31851                           postinc2	equ	0xFDE
 31852                           postdec2	equ	0xFDD
 31853                           plusw2	equ	0xFDB
 31854                           fsr2h	equ	0xFDA
 31855                           fsr2l	equ	0xFD9
 31856                           status	equ	0xFD8
 31857                           
 31858 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 31859 ;; Defined at:
 31860 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 31861 ;; Parameters:    Size  Location     Type
 31862 ;;		None
 31863 ;; Auto vars:     Size  Location     Type
 31864 ;;		None
 31865 ;; Return value:  Size  Location     Type
 31866 ;;                  1    wreg      void 
 31867 ;; Registers used:
 31868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31869 ;; Tracked objects:
 31870 ;;		On entry : 0/0
 31871 ;;		On exit  : 0/0
 31872 ;;		Unchanged: 0/0
 31873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31874 ;;      Params:         0       0       0       0       0       0       0       0       0
 31875 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31877 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31878 ;;Total ram usage:        0 bytes
 31879 ;; Hardware stack levels used:    1
 31880 ;; This function calls:
 31881 ;;		Nothing
 31882 ;; This function is called by:
 31883 ;;		_USBDeviceTasks
 31884 ;;		_USBCtrlEPServiceComplete
 31885 ;;		_USBCtrlTrfRxService
 31886 ;; This function uses a non-reentrant model
 31887 ;;
 31888                           
 31889                           	psect	text138
 31890  00445E                     __ptext138:
 31891                           	opt stack 0
 31892  00445E                     _USBCtrlEPAllowStatusStage:
 31893                           	opt stack 16
 31894                           
 31895                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 31896                           
 31897                           ;incstack = 0
 31898  00445E  5042               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 31899  004460  A4D8               	btfss	status,2,c
 31900  004462  0012               	return	
 31901                           
 31902                           ;usb_device.c: 1112: {
 31903                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 31904  004464  0E01               	movlw	1
 31905  004466  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 31906                           
 31907                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 31908  004468  5041               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 31909  00446A  A4D8               	btfss	status,2,c
 31910  00446C  0012               	return	
 31911                           
 31912                           ;usb_device.c: 1115: {
 31913                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 31914  00446E  0E01               	movlw	1
 31915  004470  6E41               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 31916                           
 31917                           ;usb_device.c: 1120: if(controlTransferState == 2)
 31918  004472  0E02               	movlw	2
 31919  004474  1848               	xorwf	_controlTransferState,w,c	;volatile
 31920  004476  A4D8               	btfss	status,2,c
 31921  004478  D016               	goto	i2l2030
 31922                           
 31923                           ;usb_device.c: 1121: {
 31924                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 31925  00447A  0100               	movlb	0	; () banked
 31926  00447C  EE20 F001          	lfsr	2,1
 31927  004480  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 31928  004482  26D9               	addwf	fsr2l,f,c
 31929  004484  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 31930  004486  22DA               	addwfc	fsr2h,f,c
 31931  004488  0E00               	movlw	0
 31932  00448A  6EDF               	movwf	indf2,c
 31933                           
 31934                           ; BSR set to: 0
 31935                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31936  00448C  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 31937  004490  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31938  004494  0E48               	movlw	72
 31939  004496  6EDF               	movwf	indf2,c
 31940                           
 31941                           ; BSR set to: 0
 31942                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31943  004498  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 31944  00449C  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31945  0044A0  0E00               	movlw	0
 31946  0044A2  8EDB               	bsf	plusw2,7,c
 31947                           
 31948                           ;usb_device.c: 1125: }
 31949  0044A4  0012               	return	
 31950  0044A6                     i2l2030:
 31951                           
 31952                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 31953                           
 31954                           ; BSR set to: 0
 31955  0044A6  0448               	decf	_controlTransferState,w,c	;volatile
 31956  0044A8  A4D8               	btfss	status,2,c
 31957  0044AA  0012               	return	
 31958                           
 31959                           ;usb_device.c: 1127: {
 31960                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 31961  0044AC  0E00               	movlw	0
 31962  0044AE  6E45               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31963                           
 31964                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 31965  0044B0  EE20 F001          	lfsr	2,1
 31966  0044B4  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 31967  0044B6  26D9               	addwf	fsr2l,f,c
 31968  0044B8  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31969  0044BA  22DA               	addwfc	fsr2h,f,c
 31970  0044BC  0E08               	movlw	8
 31971  0044BE  6EDF               	movwf	indf2,c
 31972                           
 31973                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 31974  0044C0  EE20 F002          	lfsr	2,2
 31975  0044C4  5034               	movf	_pBDTEntryEP0OutCurrent,w,c
 31976  0044C6  26D9               	addwf	fsr2l,f,c
 31977  0044C8  5035               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31978  0044CA  22DA               	addwfc	fsr2h,f,c
 31979  0044CC  0E30               	movlw	48
 31980  0044CE  6EDE               	movwf	postinc2,c
 31981  0044D0  0E04               	movlw	4
 31982  0044D2  6EDD               	movwf	postdec2,c
 31983                           
 31984                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 31985  0044D4  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31986  0044D8  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31987  0044DC  0E04               	movlw	4
 31988  0044DE  6EDF               	movwf	indf2,c
 31989                           
 31990                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 31991  0044E0  C034  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31992  0044E4  C035  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31993  0044E8  0E00               	movlw	0
 31994  0044EA  8EDB               	bsf	plusw2,7,c
 31995                           
 31996                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 31997  0044EC  0E01               	movlw	1
 31998  0044EE  6E45               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31999                           
 32000                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 32001  0044F0  EE20 F001          	lfsr	2,1
 32002  0044F4  5032               	movf	_pBDTEntryEP0OutNext,w,c
 32003  0044F6  26D9               	addwf	fsr2l,f,c
 32004  0044F8  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 32005  0044FA  22DA               	addwfc	fsr2h,f,c
 32006  0044FC  0E08               	movlw	8
 32007  0044FE  6EDF               	movwf	indf2,c
 32008                           
 32009                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32010  004500  EE20 F002          	lfsr	2,2
 32011  004504  5032               	movf	_pBDTEntryEP0OutNext,w,c
 32012  004506  26D9               	addwf	fsr2l,f,c
 32013  004508  5033               	movf	_pBDTEntryEP0OutNext+1,w,c
 32014  00450A  22DA               	addwfc	fsr2h,f,c
 32015  00450C  0E30               	movlw	48
 32016  00450E  6EDE               	movwf	postinc2,c
 32017  004510  0E04               	movlw	4
 32018  004512  6EDD               	movwf	postdec2,c
 32019                           
 32020                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 32021  004514  C032  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32022  004518  C033  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32023  00451C  0E80               	movlw	128
 32024  00451E  6EDF               	movwf	indf2,c
 32025  004520  0012               	return	
 32026  004522                     __end_of_USBCtrlEPAllowStatusStage:
 32027                           	opt stack 0
 32028                           tosu	equ	0xFFF
 32029                           tosh	equ	0xFFE
 32030                           tosl	equ	0xFFD
 32031                           pclatu	equ	0xFFB
 32032                           pclath	equ	0xFFA
 32033                           tblptru	equ	0xFF8
 32034                           tblptrh	equ	0xFF7
 32035                           tblptrl	equ	0xFF6
 32036                           tablat	equ	0xFF5
 32037                           prodh	equ	0xFF4
 32038                           prodl	equ	0xFF3
 32039                           intcon	equ	0xFF2
 32040                           intcon2	equ	0xFF1
 32041                           intcon3	equ	0xFF0
 32042                           indf0	equ	0xFEF
 32043                           postinc0	equ	0xFEE
 32044                           fsr0h	equ	0xFEA
 32045                           fsr0l	equ	0xFE9
 32046                           wreg	equ	0xFE8
 32047                           indf1	equ	0xFE7
 32048                           postdec1	equ	0xFE5
 32049                           fsr1h	equ	0xFE2
 32050                           fsr1l	equ	0xFE1
 32051                           indf2	equ	0xFDF
 32052                           postinc2	equ	0xFDE
 32053                           postdec2	equ	0xFDD
 32054                           plusw2	equ	0xFDB
 32055                           fsr2h	equ	0xFDA
 32056                           fsr2l	equ	0xFD9
 32057                           status	equ	0xFD8
 32058                           
 32059 ;; *************** function _USBCtrlTrfInHandler *****************
 32060 ;; Defined at:
 32061 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 32062 ;; Parameters:    Size  Location     Type
 32063 ;;		None
 32064 ;; Auto vars:     Size  Location     Type
 32065 ;;  lastDTS         1   17[COMRAM] unsigned char 
 32066 ;; Return value:  Size  Location     Type
 32067 ;;                  1    wreg      void 
 32068 ;; Registers used:
 32069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 32070 ;; Tracked objects:
 32071 ;;		On entry : 0/0
 32072 ;;		On exit  : 0/0
 32073 ;;		Unchanged: 0/0
 32074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32075 ;;      Params:         0       0       0       0       0       0       0       0       0
 32076 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32078 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32079 ;;Total ram usage:        1 bytes
 32080 ;; Hardware stack levels used:    1
 32081 ;; Hardware stack levels required when called:    2
 32082 ;; This function calls:
 32083 ;;		_USART_mySetLineCodingHandler
 32084 ;;		_USBCtrlTrfTxService
 32085 ;; This function is called by:
 32086 ;;		_USBCtrlEPService
 32087 ;; This function uses a non-reentrant model
 32088 ;;
 32089                           
 32090                           	psect	text139
 32091  003F76                     __ptext139:
 32092                           	opt stack 0
 32093  003F76                     _USBCtrlTrfInHandler:
 32094                           	opt stack 16
 32095                           
 32096                           ;usb_device.c: 2225: uint8_t lastDTS;
 32097                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 32098                           
 32099                           ;incstack = 0
 32100  003F76  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32101  003F7A  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32102  003F7E  0100               	movlb	0	; () banked
 32103  003F80  0E00               	movlw	0
 32104  003F82  BCDF               	btfsc	indf2,6,c
 32105  003F84  0E01               	movlw	1
 32106  003F86  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 32107                           
 32108                           ; BSR set to: 0
 32109                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32110  003F88  0E04               	movlw	4
 32111  003F8A  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 32112                           
 32113                           ; BSR set to: 0
 32114                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 32115  003F8C  0E08               	movlw	8
 32116  003F8E  19EF               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 32117  003F90  A4D8               	btfss	status,2,c
 32118  003F92  D00C               	goto	i2l2159
 32119                           
 32120                           ; BSR set to: 0
 32121                           ;usb_device.c: 2236: {
 32122                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 32123  003F94  0104               	movlb	4	; () banked
 32124  003F96  5132               	movf	50,w,b	;volatile
 32125  003F98  0B7F               	andlw	127
 32126  003F9A  6E63               	movwf	3939,c	;volatile
 32127                           
 32128                           ; BSR set to: 4
 32129                           ;usb_device.c: 2238: if(UADDR != 0u)
 32130  003F9C  5063               	movf	3939,w,c	;volatile
 32131  003F9E  B4D8               	btfsc	status,2,c
 32132  003FA0  D002               	goto	i2l2158
 32133                           
 32134                           ; BSR set to: 4
 32135                           ;usb_device.c: 2239: {
 32136                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 32137  003FA2  0E10               	movlw	16
 32138  003FA4  D001               	goto	L34
 32139  003FA6                     i2l2158:
 32140                           
 32141                           ;usb_device.c: 2242: else
 32142                           ;usb_device.c: 2243: {
 32143                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 32144                           
 32145                           ; BSR set to: 0
 32146  003FA6  0E04               	movlw	4
 32147  003FA8                     L34:
 32148  003FA8  0100               	movlb	0	; () banked
 32149  003FAA  6FEF               	movwf	_USBDeviceState& (0+255),b	;volatile
 32150  003FAC                     i2l2159:
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;usb_device.c: 2245: }
 32154                           ;usb_device.c: 2246: }
 32155                           ;usb_device.c: 2249: if(controlTransferState == 1)
 32156                           
 32157                           ; BSR set to: 0
 32158                           
 32159                           ; BSR set to: 0
 32160  003FAC  0448               	decf	_controlTransferState,w,c	;volatile
 32161  003FAE  A4D8               	btfss	status,2,c
 32162  003FB0  D03A               	goto	i2l2160
 32163                           
 32164                           ; BSR set to: 0
 32165                           ;usb_device.c: 2250: {
 32166                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 32167  003FB2  EE20 F002          	lfsr	2,2
 32168  003FB6  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 32169  003FB8  26D9               	addwf	fsr2l,f,c
 32170  003FBA  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32171  003FBC  22DA               	addwfc	fsr2h,f,c
 32172  003FBE  0E38               	movlw	56
 32173  003FC0  6EDE               	movwf	postinc2,c
 32174  003FC2  0E04               	movlw	4
 32175  003FC4  6EDD               	movwf	postdec2,c
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 32179  003FC6  EC93  F020         	call	_USBCtrlTrfTxService	;wreg free
 32180                           
 32181                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 32182  003FCA  0E02               	movlw	2
 32183  003FCC  1849               	xorwf	_shortPacketStatus,w,c	;volatile
 32184  003FCE  A4D8               	btfss	status,2,c
 32185  003FD0  D00D               	goto	i2l2161
 32186                           
 32187                           ;usb_device.c: 2259: {
 32188                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 32189  003FD2  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32190  003FD6  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32191  003FDA  0E04               	movlw	4
 32192  003FDC  6EDF               	movwf	indf2,c
 32193                           
 32194                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32195  003FDE  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32196  003FE2  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32197  003FE6  0E00               	movlw	0
 32198  003FE8  8EDB               	bsf	plusw2,7,c
 32199                           
 32200                           ;usb_device.c: 2264: }
 32201  003FEA  0012               	return	
 32202  003FEC                     i2l2161:
 32203                           
 32204                           ;usb_device.c: 2265: else
 32205                           ;usb_device.c: 2266: {
 32206                           ;usb_device.c: 2267: if(lastDTS == 0)
 32207  003FEC  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 32208  003FEE  A4D8               	btfss	status,2,c
 32209  003FF0  D00D               	goto	i2l2163
 32210                           
 32211                           ;usb_device.c: 2268: {
 32212                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 32213  003FF2  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32214  003FF6  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32215  003FFA  0E48               	movlw	72
 32216  003FFC  6EDF               	movwf	indf2,c
 32217                           
 32218                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32219  003FFE  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32220  004002  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32221  004006  0E00               	movlw	0
 32222  004008  8EDB               	bsf	plusw2,7,c
 32223                           
 32224                           ;usb_device.c: 2271: }
 32225  00400A  0012               	return	
 32226  00400C                     i2l2163:
 32227                           
 32228                           ;usb_device.c: 2272: else
 32229                           ;usb_device.c: 2273: {
 32230                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 32231  00400C  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32232  004010  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32233  004014  0E08               	movlw	8
 32234  004016  6EDF               	movwf	indf2,c
 32235                           
 32236                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32237  004018  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 32238  00401C  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32239  004020  0E00               	movlw	0
 32240  004022  8EDB               	bsf	plusw2,7,c
 32241                           
 32242                           ;usb_device.c: 2276: }
 32243                           ;usb_device.c: 2277: }
 32244                           ;usb_device.c: 2278: }
 32245  004024  0012               	return	
 32246  004026                     i2l2160:
 32247                           
 32248                           ; BSR set to: 0
 32249                           ;usb_device.c: 2279: else
 32250                           ;usb_device.c: 2280: {
 32251                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 32252  004026  AFC3               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 32253  004028  D011               	goto	i2l2166
 32254                           
 32255                           ; BSR set to: 0
 32256                           ;usb_device.c: 2285: {
 32257                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 32258  00402A  51C6               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 32259  00402C  11C7               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 32260  00402E  B4D8               	btfsc	status,2,c
 32261  004030  D00B               	goto	i2u901_49
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;usb_device.c: 2287: {
 32265                           ;usb_device.c: 2288: outPipes[0].pFunc();
 32266  004032  D801               	call	i2u901_48
 32267  004034  D009               	goto	i2u901_49
 32268  004036                     i2u901_48:
 32269  004036  0005               	push	
 32270  004038  6EFA               	movwf	pclath,c
 32271  00403A  51C6               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 32272  00403C  6EFD               	movwf	tosl,c
 32273  00403E  51C7               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 32274  004040  6EFE               	movwf	tosh,c
 32275  004042  6AFF               	clrf	tosu,c
 32276  004044  50FA               	movf	pclath,w,c
 32277  004046  0012               	return		;indir
 32278  004048                     i2u901_49:
 32279                           
 32280                           ;usb_device.c: 2289: }
 32281                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 32282  004048  0100               	movlb	0	; () banked
 32283  00404A  9FC3               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 32284  00404C                     i2l2166:
 32285                           
 32286                           ; BSR set to: 0
 32287                           ;usb_device.c: 2291: }
 32288                           ;usb_device.c: 2293: controlTransferState = 0;
 32289                           
 32290                           ; BSR set to: 0
 32291  00404C  0E00               	movlw	0
 32292  00404E  6E48               	movwf	_controlTransferState,c	;volatile
 32293  004050  0012               	return	
 32294  004052                     __end_of_USBCtrlTrfInHandler:
 32295                           	opt stack 0
 32296                           tosu	equ	0xFFF
 32297                           tosh	equ	0xFFE
 32298                           tosl	equ	0xFFD
 32299                           pclatu	equ	0xFFB
 32300                           pclath	equ	0xFFA
 32301                           tblptru	equ	0xFF8
 32302                           tblptrh	equ	0xFF7
 32303                           tblptrl	equ	0xFF6
 32304                           tablat	equ	0xFF5
 32305                           prodh	equ	0xFF4
 32306                           prodl	equ	0xFF3
 32307                           intcon	equ	0xFF2
 32308                           intcon2	equ	0xFF1
 32309                           intcon3	equ	0xFF0
 32310                           indf0	equ	0xFEF
 32311                           postinc0	equ	0xFEE
 32312                           fsr0h	equ	0xFEA
 32313                           fsr0l	equ	0xFE9
 32314                           wreg	equ	0xFE8
 32315                           indf1	equ	0xFE7
 32316                           postdec1	equ	0xFE5
 32317                           fsr1h	equ	0xFE2
 32318                           fsr1l	equ	0xFE1
 32319                           indf2	equ	0xFDF
 32320                           postinc2	equ	0xFDE
 32321                           postdec2	equ	0xFDD
 32322                           plusw2	equ	0xFDB
 32323                           fsr2h	equ	0xFDA
 32324                           fsr2l	equ	0xFD9
 32325                           status	equ	0xFD8
 32326                           
 32327 ;; *************** function _USBCtrlTrfTxService *****************
 32328 ;; Defined at:
 32329 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 32330 ;; Parameters:    Size  Location     Type
 32331 ;;		None
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;  byteToSend      1    0[COMRAM] unsigned char 
 32334 ;; Return value:  Size  Location     Type
 32335 ;;                  1    wreg      void 
 32336 ;; Registers used:
 32337 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32338 ;; Tracked objects:
 32339 ;;		On entry : 0/0
 32340 ;;		On exit  : 0/0
 32341 ;;		Unchanged: 0/0
 32342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32343 ;;      Params:         0       0       0       0       0       0       0       0       0
 32344 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32345 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32346 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32347 ;;Total ram usage:        1 bytes
 32348 ;; Hardware stack levels used:    1
 32349 ;; This function calls:
 32350 ;;		Nothing
 32351 ;; This function is called by:
 32352 ;;		_USBCtrlEPAllowDataStage
 32353 ;;		_USBCtrlTrfInHandler
 32354 ;; This function uses a non-reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text140
 32358  004126                     __ptext140:
 32359                           	opt stack 0
 32360  004126                     _USBCtrlTrfTxService:
 32361                           	opt stack 15
 32362                           
 32363                           ;usb_device.c: 1439: uint8_t byteToSend;
 32364                           ;usb_device.c: 1443: byteToSend = 8;
 32365                           
 32366                           ;incstack = 0
 32367  004126  0E08               	movlw	8
 32368  004128  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 32369                           
 32370                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 32371  00412A  0100               	movlb	0	; () banked
 32372  00412C  51CD               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 32373  00412E  E110               	bnz	i2l8343
 32374  004130  0E08               	movlw	8
 32375  004132  5DCC               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 32376  004134  B0D8               	btfsc	status,0,c
 32377  004136  D00C               	goto	i2l2063
 32378                           
 32379                           ; BSR set to: 0
 32380                           ;usb_device.c: 1445: {
 32381                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 32382  004138  C0CC  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 32383                           
 32384                           ; BSR set to: 0
 32385                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 32386  00413C  5049               	movf	_shortPacketStatus,w,c	;volatile
 32387  00413E  A4D8               	btfss	status,2,c
 32388  004140  D002               	goto	i2l2061
 32389                           
 32390                           ; BSR set to: 0
 32391                           ;usb_device.c: 1454: {
 32392                           ;usb_device.c: 1455: shortPacketStatus = 1;
 32393  004142  0E01               	movlw	1
 32394  004144  D004               	goto	L35
 32395  004146                     i2l2061:
 32396                           
 32397                           ; BSR set to: 0
 32398                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 32399                           
 32400                           ; BSR set to: 0
 32401  004146  0449               	decf	_shortPacketStatus,w,c	;volatile
 32402  004148  A4D8               	btfss	status,2,c
 32403  00414A  D002               	goto	i2l2063
 32404                           
 32405                           ; BSR set to: 0
 32406                           ;usb_device.c: 1458: {
 32407                           ;usb_device.c: 1459: shortPacketStatus = 2;
 32408  00414C  0E02               	movlw	2
 32409  00414E                     L35:
 32410  00414E  6E49               	movwf	_shortPacketStatus,c	;volatile
 32411  004150                     i2l2063:
 32412  004150                     i2l8343:
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;usb_device.c: 1460: }
 32416                           ;usb_device.c: 1461: }
 32417                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 32418  004150  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32419  004152  5FCC               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 32420  004154  0E00               	movlw	0
 32421  004156  5BCD               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 32422                           
 32423                           ; BSR set to: 0
 32424                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 32425  004158  EE20 F001          	lfsr	2,1
 32426  00415C  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 32427  00415E  26D9               	addwf	fsr2l,f,c
 32428  004160  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32429  004162  22DA               	addwfc	fsr2h,f,c
 32430  004164  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 32434  004168  0E38               	movlw	56
 32435  00416A  0101               	movlb	1	; () banked
 32436  00416C  6F16               	movwf	_pDst& (0+255),b
 32437  00416E  0E04               	movlw	4
 32438  004170  6F17               	movwf	(_pDst+1)& (0+255),b
 32439                           
 32440                           ; BSR set to: 1
 32441                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 32442  004172  0100               	movlb	0	; () banked
 32443  004174  A1CB               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 32444  004176  D01D               	goto	i2l2065
 32445  004178  D03C               	goto	i2l2069
 32446  00417A                     
 32447                           ;usb_device.c: 1478: {
 32448                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 32449                           
 32450                           ; BSR set to: 0
 32451  00417A  C0C8  FFF6         	movff	_inPipes,tblptrl	;volatile
 32452  00417E  C0C9  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 32453  004182  6AF8               	clrf	tblptru,c
 32454  004184  C116  FFD9         	movff	_pDst,fsr2l
 32455  004188  C117  FFDA         	movff	_pDst+1,fsr2h
 32456  00418C  0E07               	movlw	(high __ramtop+-1)
 32457  00418E  64F7               	cpfsgt	tblptrh,c
 32458  004190  D003               	bra	i2u617_47
 32459  004192  0008               	tblrd		*
 32460  004194  50F5               	movf	tablat,w,c
 32461  004196  D005               	bra	i2u617_40
 32462  004198                     i2u617_47:
 32463  004198  CFF6 FFE9          	movff	tblptrl,fsr0l
 32464  00419C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32465  0041A0  50EF               	movf	indf0,w,c
 32466  0041A2                     i2u617_40:
 32467  0041A2  6EDF               	movwf	indf2,c
 32468  0041A4  0100               	movlb	0	; () banked
 32469  0041A6  4BC8               	infsnz	_inPipes& (0+255),f,b	;volatile
 32470  0041A8  2BC9               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 32471                           
 32472                           ; BSR set to: 0
 32473  0041AA  0101               	movlb	1	; () banked
 32474  0041AC  4B16               	infsnz	_pDst& (0+255),f,b
 32475  0041AE  2B17               	incf	(_pDst+1)& (0+255),f,b
 32476                           
 32477                           ; BSR set to: 1
 32478                           ;usb_device.c: 1480: byteToSend--;
 32479  0041B0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 32480  0041B2                     i2l2065:
 32481                           
 32482                           ; BSR set to: 1
 32483  0041B2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32484  0041B4  B4D8               	btfsc	status,2,c
 32485  0041B6  0012               	return	
 32486  0041B8  D7E0               	goto	i2l2066
 32487  0041BA                     
 32488                           ;usb_device.c: 1486: {
 32489                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 32490  0041BA  C0C8  FFF6         	movff	_inPipes,tblptrl	;volatile
 32491  0041BE  C0C9  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 32492  0041C2  6AF8               	clrf	tblptru,c
 32493  0041C4  C116  FFD9         	movff	_pDst,fsr2l
 32494  0041C8  C117  FFDA         	movff	_pDst+1,fsr2h
 32495  0041CC  0E07               	movlw	(high __ramtop+-1)
 32496  0041CE  64F7               	cpfsgt	tblptrh,c
 32497  0041D0  D003               	bra	i2u619_47
 32498  0041D2  0008               	tblrd		*
 32499  0041D4  50F5               	movf	tablat,w,c
 32500  0041D6  D005               	bra	i2u619_40
 32501  0041D8                     i2u619_47:
 32502  0041D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 32503  0041DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 32504  0041E0  50EF               	movf	indf0,w,c
 32505  0041E2                     i2u619_40:
 32506  0041E2  6EDF               	movwf	indf2,c
 32507  0041E4  0100               	movlb	0	; () banked
 32508  0041E6  4BC8               	infsnz	_inPipes& (0+255),f,b	;volatile
 32509  0041E8  2BC9               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 32510                           
 32511                           ; BSR set to: 0
 32512  0041EA  0101               	movlb	1	; () banked
 32513  0041EC  4B16               	infsnz	_pDst& (0+255),f,b
 32514  0041EE  2B17               	incf	(_pDst+1)& (0+255),f,b
 32515                           
 32516                           ; BSR set to: 1
 32517                           ;usb_device.c: 1488: byteToSend--;
 32518  0041F0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 32519  0041F2                     i2l2069:
 32520                           
 32521                           ; BSR set to: 1
 32522  0041F2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32523  0041F4  B4D8               	btfsc	status,2,c
 32524  0041F6  0012               	return	
 32525  0041F8  D7E0               	goto	i2l2070
 32526  0041FA                     __end_of_USBCtrlTrfTxService:
 32527                           	opt stack 0
 32528                           tosu	equ	0xFFF
 32529                           tosh	equ	0xFFE
 32530                           tosl	equ	0xFFD
 32531                           pclatu	equ	0xFFB
 32532                           pclath	equ	0xFFA
 32533                           tblptru	equ	0xFF8
 32534                           tblptrh	equ	0xFF7
 32535                           tblptrl	equ	0xFF6
 32536                           tablat	equ	0xFF5
 32537                           prodh	equ	0xFF4
 32538                           prodl	equ	0xFF3
 32539                           intcon	equ	0xFF2
 32540                           intcon2	equ	0xFF1
 32541                           intcon3	equ	0xFF0
 32542                           indf0	equ	0xFEF
 32543                           postinc0	equ	0xFEE
 32544                           fsr0h	equ	0xFEA
 32545                           fsr0l	equ	0xFE9
 32546                           wreg	equ	0xFE8
 32547                           indf1	equ	0xFE7
 32548                           postdec1	equ	0xFE5
 32549                           fsr1h	equ	0xFE2
 32550                           fsr1l	equ	0xFE1
 32551                           indf2	equ	0xFDF
 32552                           postinc2	equ	0xFDE
 32553                           postdec2	equ	0xFDD
 32554                           plusw2	equ	0xFDB
 32555                           fsr2h	equ	0xFDA
 32556                           fsr2l	equ	0xFD9
 32557                           status	equ	0xFD8
 32558                           
 32559 ;; *************** function _USART_mySetLineCodingHandler *****************
 32560 ;; Defined at:
 32561 ;;		line 273 in file "../Includes/Board/USBapp.c"
 32562 ;; Parameters:    Size  Location     Type
 32563 ;;		None
 32564 ;; Auto vars:     Size  Location     Type
 32565 ;;  dwBaud          4   13[COMRAM] unsigned long 
 32566 ;; Return value:  Size  Location     Type
 32567 ;;                  1    wreg      void 
 32568 ;; Registers used:
 32569 ;;		wreg, status,2, status,0, cstack
 32570 ;; Tracked objects:
 32571 ;;		On entry : 0/0
 32572 ;;		On exit  : 0/0
 32573 ;;		Unchanged: 0/0
 32574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32575 ;;      Params:         0       0       0       0       0       0       0       0       0
 32576 ;;      Locals:         4       0       0       0       0       0       0       0       0
 32577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32578 ;;      Totals:         4       0       0       0       0       0       0       0       0
 32579 ;;Total ram usage:        4 bytes
 32580 ;; Hardware stack levels used:    1
 32581 ;; Hardware stack levels required when called:    1
 32582 ;; This function calls:
 32583 ;;		___lldiv
 32584 ;;		i2_EUSART_Initialize
 32585 ;; This function is called by:
 32586 ;;		_USBCheckCDCRequest
 32587 ;;		_USBCtrlTrfRxService
 32588 ;;		_USBCtrlTrfInHandler
 32589 ;; This function uses a non-reentrant model
 32590 ;;
 32591                           
 32592                           	psect	text141
 32593  0058D2                     __ptext141:
 32594                           	opt stack 0
 32595  0058D2                     _USART_mySetLineCodingHandler:
 32596                           	opt stack 15
 32597                           
 32598                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 32599                           
 32600                           ;incstack = 0
 32601  0058D2  C1D0  F1E2         	movff	_cdc_notice,_line_coding
 32602  0058D6  C1D1  F1E3         	movff	_cdc_notice+1,_line_coding+1
 32603  0058DA  C1D2  F1E4         	movff	_cdc_notice+2,_line_coding+2
 32604  0058DE  C1D3  F1E5         	movff	_cdc_notice+3,_line_coding+3
 32605                           
 32606                           ;USBapp.c: 278: uint32_t dwBaud;
 32607                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 32608  0058E2  0E00               	movlw	0
 32609  0058E4  6E01               	movwf	___lldiv@dividend,c
 32610  0058E6  0E1B               	movlw	27
 32611  0058E8  6E02               	movwf	___lldiv@dividend+1,c
 32612  0058EA  0EB7               	movlw	183
 32613  0058EC  6E03               	movwf	___lldiv@dividend+2,c
 32614  0058EE  0E00               	movlw	0
 32615  0058F0  6E04               	movwf	___lldiv@dividend+3,c
 32616  0058F2  C1E2  F005         	movff	_line_coding,___lldiv@divisor
 32617  0058F6  C1E3  F006         	movff	_line_coding+1,___lldiv@divisor+1
 32618  0058FA  C1E4  F007         	movff	_line_coding+2,___lldiv@divisor+2
 32619  0058FE  C1E5  F008         	movff	_line_coding+3,___lldiv@divisor+3
 32620  005902  ECF7  F028         	call	___lldiv	;wreg free
 32621  005906  0EFF               	movlw	255
 32622  005908  2401               	addwf	?___lldiv,w,c
 32623  00590A  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 32624  00590C  0EFF               	movlw	255
 32625  00590E  2002               	addwfc	?___lldiv+1,w,c
 32626  005910  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 32627  005912  0EFF               	movlw	255
 32628  005914  2003               	addwfc	?___lldiv+2,w,c
 32629  005916  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 32630  005918  0EFF               	movlw	255
 32631  00591A  2004               	addwfc	?___lldiv+3,w,c
 32632  00591C  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 32633                           
 32634                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 32635  00591E  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 32636                           
 32637                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 32638  005922  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 32639                           
 32640                           ;USBapp.c: 283: EUSART_Initialize();
 32641  005926  EC1F  F02F         	call	i2_EUSART_Initialize	;wreg free
 32642  00592A  0012               	return		;funcret
 32643  00592C                     __end_of_USART_mySetLineCodingHandler:
 32644                           	opt stack 0
 32645                           tosu	equ	0xFFF
 32646                           tosh	equ	0xFFE
 32647                           tosl	equ	0xFFD
 32648                           pclatu	equ	0xFFB
 32649                           pclath	equ	0xFFA
 32650                           tblptru	equ	0xFF8
 32651                           tblptrh	equ	0xFF7
 32652                           tblptrl	equ	0xFF6
 32653                           tablat	equ	0xFF5
 32654                           prodh	equ	0xFF4
 32655                           prodl	equ	0xFF3
 32656                           intcon	equ	0xFF2
 32657                           intcon2	equ	0xFF1
 32658                           intcon3	equ	0xFF0
 32659                           indf0	equ	0xFEF
 32660                           postinc0	equ	0xFEE
 32661                           fsr0h	equ	0xFEA
 32662                           fsr0l	equ	0xFE9
 32663                           wreg	equ	0xFE8
 32664                           indf1	equ	0xFE7
 32665                           postdec1	equ	0xFE5
 32666                           fsr1h	equ	0xFE2
 32667                           fsr1l	equ	0xFE1
 32668                           indf2	equ	0xFDF
 32669                           postinc2	equ	0xFDE
 32670                           postdec2	equ	0xFDD
 32671                           plusw2	equ	0xFDB
 32672                           fsr2h	equ	0xFDA
 32673                           fsr2l	equ	0xFD9
 32674                           status	equ	0xFD8
 32675                           
 32676 ;; *************** function i2_EUSART_Initialize *****************
 32677 ;; Defined at:
 32678 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 32679 ;; Parameters:    Size  Location     Type
 32680 ;;		None
 32681 ;; Auto vars:     Size  Location     Type
 32682 ;;		None
 32683 ;; Return value:  Size  Location     Type
 32684 ;;                  1    wreg      void 
 32685 ;; Registers used:
 32686 ;;		wreg, status,2
 32687 ;; Tracked objects:
 32688 ;;		On entry : 0/0
 32689 ;;		On exit  : 0/0
 32690 ;;		Unchanged: 0/0
 32691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32692 ;;      Params:         0       0       0       0       0       0       0       0       0
 32693 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32695 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32696 ;;Total ram usage:        0 bytes
 32697 ;; Hardware stack levels used:    1
 32698 ;; This function calls:
 32699 ;;		Nothing
 32700 ;; This function is called by:
 32701 ;;		_USBapp_CdcEmulatorInitialize
 32702 ;;		_USART_mySetLineCodingHandler
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text142
 32707  005E3E                     __ptext142:
 32708                           	opt stack 0
 32709  005E3E                     i2_EUSART_Initialize:
 32710                           	opt stack 17
 32711                           
 32712                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 32713                           
 32714                           ;incstack = 0
 32715  005E3E  9A9D               	bcf	3997,5,c	;volatile
 32716                           
 32717                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 32718  005E40  989D               	bcf	3997,4,c	;volatile
 32719                           
 32720                           ;eusart.c: 85: BAUDCON = 0x48;
 32721  005E42  0E48               	movlw	72
 32722  005E44  6EB8               	movwf	4024,c	;volatile
 32723                           
 32724                           ;eusart.c: 88: RCSTA = 0x90;
 32725  005E46  0E90               	movlw	144
 32726  005E48  6EAB               	movwf	4011,c	;volatile
 32727                           
 32728                           ;eusart.c: 91: TXSTA = 0x26;
 32729  005E4A  0E26               	movlw	38
 32730  005E4C  6EAC               	movwf	4012,c	;volatile
 32731                           
 32732                           ;eusart.c: 95: SPBRG = 0xD0;
 32733  005E4E  0ED0               	movlw	208
 32734  005E50  6EAF               	movwf	4015,c	;volatile
 32735                           
 32736                           ;eusart.c: 100: SPBRGH = 0x00;
 32737  005E52  0E00               	movlw	0
 32738  005E54  6EB0               	movwf	4016,c	;volatile
 32739                           
 32740                           ;eusart.c: 103: eusartTxHead = 0;
 32741  005E56  0E00               	movlw	0
 32742  005E58  0100               	movlb	0	; () banked
 32743  005E5A  6FE6               	movwf	_eusartTxHead& (0+255),b
 32744                           
 32745                           ;eusart.c: 104: eusartTxTail = 0;
 32746  005E5C  0E00               	movlw	0
 32747  005E5E  6FE5               	movwf	_eusartTxTail& (0+255),b
 32748                           
 32749                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 32750  005E60  0E40               	movlw	64
 32751  005E62  6FE4               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 32752                           
 32753                           ;eusart.c: 107: eusartRxHead = 0;
 32754  005E64  0E00               	movlw	0
 32755  005E66  6FE3               	movwf	_eusartRxHead& (0+255),b
 32756                           
 32757                           ;eusart.c: 108: eusartRxTail = 0;
 32758  005E68  0E00               	movlw	0
 32759  005E6A  6FE2               	movwf	_eusartRxTail& (0+255),b
 32760                           
 32761                           ;eusart.c: 109: eusartRxCount = 0;
 32762  005E6C  0E00               	movlw	0
 32763  005E6E  6FF7               	movwf	_eusartRxCount& (0+255),b	;volatile
 32764                           
 32765                           ; BSR set to: 0
 32766                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 32767  005E70  8A9D               	bsf	3997,5,c	;volatile
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 32771  005E72  88AB               	bsf	4011,4,c	;volatile
 32772                           
 32773                           ; BSR set to: 0
 32774  005E74  0012               	return		;funcret
 32775  005E76                     __end_ofi2_EUSART_Initialize:
 32776                           	opt stack 0
 32777                           tosu	equ	0xFFF
 32778                           tosh	equ	0xFFE
 32779                           tosl	equ	0xFFD
 32780                           pclatu	equ	0xFFB
 32781                           pclath	equ	0xFFA
 32782                           tblptru	equ	0xFF8
 32783                           tblptrh	equ	0xFF7
 32784                           tblptrl	equ	0xFF6
 32785                           tablat	equ	0xFF5
 32786                           prodh	equ	0xFF4
 32787                           prodl	equ	0xFF3
 32788                           intcon	equ	0xFF2
 32789                           intcon2	equ	0xFF1
 32790                           intcon3	equ	0xFF0
 32791                           indf0	equ	0xFEF
 32792                           postinc0	equ	0xFEE
 32793                           fsr0h	equ	0xFEA
 32794                           fsr0l	equ	0xFE9
 32795                           wreg	equ	0xFE8
 32796                           indf1	equ	0xFE7
 32797                           postdec1	equ	0xFE5
 32798                           fsr1h	equ	0xFE2
 32799                           fsr1l	equ	0xFE1
 32800                           indf2	equ	0xFDF
 32801                           postinc2	equ	0xFDE
 32802                           postdec2	equ	0xFDD
 32803                           plusw2	equ	0xFDB
 32804                           fsr2h	equ	0xFDA
 32805                           fsr2l	equ	0xFD9
 32806                           status	equ	0xFD8
 32807                           
 32808 ;; *************** function ___lldiv *****************
 32809 ;; Defined at:
 32810 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;  dividend        4    0[COMRAM] unsigned long 
 32813 ;;  divisor         4    4[COMRAM] unsigned long 
 32814 ;; Auto vars:     Size  Location     Type
 32815 ;;  quotient        4    8[COMRAM] unsigned long 
 32816 ;;  counter         1   12[COMRAM] unsigned char 
 32817 ;; Return value:  Size  Location     Type
 32818 ;;                  4    0[COMRAM] unsigned long 
 32819 ;; Registers used:
 32820 ;;		wreg, status,2, status,0
 32821 ;; Tracked objects:
 32822 ;;		On entry : 0/0
 32823 ;;		On exit  : 0/0
 32824 ;;		Unchanged: 0/0
 32825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32826 ;;      Params:         8       0       0       0       0       0       0       0       0
 32827 ;;      Locals:         5       0       0       0       0       0       0       0       0
 32828 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32829 ;;      Totals:        13       0       0       0       0       0       0       0       0
 32830 ;;Total ram usage:       13 bytes
 32831 ;; Hardware stack levels used:    1
 32832 ;; This function calls:
 32833 ;;		Nothing
 32834 ;; This function is called by:
 32835 ;;		_USART_mySetLineCodingHandler
 32836 ;; This function uses a non-reentrant model
 32837 ;;
 32838                           
 32839                           	psect	text143
 32840  0051EE                     __ptext143:
 32841                           	opt stack 0
 32842  0051EE                     ___lldiv:
 32843                           	opt stack 15
 32844                           
 32845                           ; BSR set to: 0
 32846                           ;incstack = 0
 32847  0051EE  0E00               	movlw	0
 32848  0051F0  6E09               	movwf	___lldiv@quotient,c
 32849  0051F2  0E00               	movlw	0
 32850  0051F4  6E0A               	movwf	___lldiv@quotient+1,c
 32851  0051F6  0E00               	movlw	0
 32852  0051F8  6E0B               	movwf	___lldiv@quotient+2,c
 32853  0051FA  0E00               	movlw	0
 32854  0051FC  6E0C               	movwf	___lldiv@quotient+3,c
 32855  0051FE  5005               	movf	___lldiv@divisor,w,c
 32856  005200  1006               	iorwf	___lldiv@divisor+1,w,c
 32857  005202  1007               	iorwf	___lldiv@divisor+2,w,c
 32858  005204  1008               	iorwf	___lldiv@divisor+3,w,c
 32859  005206  B4D8               	btfsc	status,2,c
 32860  005208  D02A               	goto	i2l2708
 32861  00520A  0E01               	movlw	1
 32862  00520C  6E0D               	movwf	___lldiv@counter,c
 32863  00520E  D006               	goto	i2l2703
 32864  005210  90D8               	bcf	status,0,c
 32865  005212  3605               	rlcf	___lldiv@divisor,f,c
 32866  005214  3606               	rlcf	___lldiv@divisor+1,f,c
 32867  005216  3607               	rlcf	___lldiv@divisor+2,f,c
 32868  005218  3608               	rlcf	___lldiv@divisor+3,f,c
 32869  00521A  2A0D               	incf	___lldiv@counter,f,c
 32870  00521C                     i2l2703:
 32871  00521C  AE08               	btfss	___lldiv@divisor+3,7,c
 32872  00521E  D7F8               	goto	i2l2704
 32873  005220                     i2u622_40:
 32874  005220  90D8               	bcf	status,0,c
 32875  005222  3609               	rlcf	___lldiv@quotient,f,c
 32876  005224  360A               	rlcf	___lldiv@quotient+1,f,c
 32877  005226  360B               	rlcf	___lldiv@quotient+2,f,c
 32878  005228  360C               	rlcf	___lldiv@quotient+3,f,c
 32879  00522A  5005               	movf	___lldiv@divisor,w,c
 32880  00522C  5C01               	subwf	___lldiv@dividend,w,c
 32881  00522E  5006               	movf	___lldiv@divisor+1,w,c
 32882  005230  5802               	subwfb	___lldiv@dividend+1,w,c
 32883  005232  5007               	movf	___lldiv@divisor+2,w,c
 32884  005234  5803               	subwfb	___lldiv@dividend+2,w,c
 32885  005236  5008               	movf	___lldiv@divisor+3,w,c
 32886  005238  5804               	subwfb	___lldiv@dividend+3,w,c
 32887  00523A  A0D8               	btfss	status,0,c
 32888  00523C  D009               	goto	i2l2707
 32889  00523E  5005               	movf	___lldiv@divisor,w,c
 32890  005240  5E01               	subwf	___lldiv@dividend,f,c
 32891  005242  5006               	movf	___lldiv@divisor+1,w,c
 32892  005244  5A02               	subwfb	___lldiv@dividend+1,f,c
 32893  005246  5007               	movf	___lldiv@divisor+2,w,c
 32894  005248  5A03               	subwfb	___lldiv@dividend+2,f,c
 32895  00524A  5008               	movf	___lldiv@divisor+3,w,c
 32896  00524C  5A04               	subwfb	___lldiv@dividend+3,f,c
 32897  00524E  8009               	bsf	___lldiv@quotient,0,c
 32898  005250                     i2l2707:
 32899  005250  90D8               	bcf	status,0,c
 32900  005252  3208               	rrcf	___lldiv@divisor+3,f,c
 32901  005254  3207               	rrcf	___lldiv@divisor+2,f,c
 32902  005256  3206               	rrcf	___lldiv@divisor+1,f,c
 32903  005258  3205               	rrcf	___lldiv@divisor,f,c
 32904  00525A  2E0D               	decfsz	___lldiv@counter,f,c
 32905  00525C  D7E1               	goto	i2u622_40
 32906  00525E                     i2l2708:
 32907  00525E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 32908  005262  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 32909  005266  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 32910  00526A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 32911  00526E  0012               	return		;funcret
 32912  005270                     __end_of___lldiv:
 32913                           	opt stack 0
 32914                           tosu	equ	0xFFF
 32915                           tosh	equ	0xFFE
 32916                           tosl	equ	0xFFD
 32917                           pclatu	equ	0xFFB
 32918                           pclath	equ	0xFFA
 32919                           tblptru	equ	0xFF8
 32920                           tblptrh	equ	0xFF7
 32921                           tblptrl	equ	0xFF6
 32922                           tablat	equ	0xFF5
 32923                           prodh	equ	0xFF4
 32924                           prodl	equ	0xFF3
 32925                           intcon	equ	0xFF2
 32926                           intcon2	equ	0xFF1
 32927                           intcon3	equ	0xFF0
 32928                           indf0	equ	0xFEF
 32929                           postinc0	equ	0xFEE
 32930                           fsr0h	equ	0xFEA
 32931                           fsr0l	equ	0xFE9
 32932                           wreg	equ	0xFE8
 32933                           indf1	equ	0xFE7
 32934                           postdec1	equ	0xFE5
 32935                           fsr1h	equ	0xFE2
 32936                           fsr1l	equ	0xFE1
 32937                           indf2	equ	0xFDF
 32938                           postinc2	equ	0xFDE
 32939                           postdec2	equ	0xFDD
 32940                           plusw2	equ	0xFDB
 32941                           fsr2h	equ	0xFDA
 32942                           fsr2l	equ	0xFD9
 32943                           status	equ	0xFD8
 32944                           
 32945 ;; *************** function _TMRapp_Tick *****************
 32946 ;; Defined at:
 32947 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 32948 ;; Parameters:    Size  Location     Type
 32949 ;;		None
 32950 ;; Auto vars:     Size  Location     Type
 32951 ;;		None
 32952 ;; Return value:  Size  Location     Type
 32953 ;;                  1    wreg      void 
 32954 ;; Registers used:
 32955 ;;		None
 32956 ;; Tracked objects:
 32957 ;;		On entry : 0/0
 32958 ;;		On exit  : 0/0
 32959 ;;		Unchanged: 0/0
 32960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32961 ;;      Params:         0       0       0       0       0       0       0       0       0
 32962 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32964 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32965 ;;Total ram usage:        0 bytes
 32966 ;; Hardware stack levels used:    1
 32967 ;; This function calls:
 32968 ;;		Nothing
 32969 ;; This function is called by:
 32970 ;;		_INTERRUPT_InterruptManager
 32971 ;; This function uses a non-reentrant model
 32972 ;;
 32973                           
 32974                           	psect	text144
 32975  006492                     __ptext144:
 32976                           	opt stack 0
 32977  006492                     _TMRapp_Tick:
 32978                           	opt stack 20
 32979                           
 32980                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 32981                           
 32982                           ;incstack = 0
 32983  006492  0100               	movlb	0	; () banked
 32984  006494  81F9               	bsf	_appTimer& (0+255),0,b
 32985                           
 32986                           ; BSR set to: 0
 32987  006496  0012               	return		;funcret
 32988  006498                     __end_of_TMRapp_Tick:
 32989                           	opt stack 0
 32990                           tosu	equ	0xFFF
 32991                           tosh	equ	0xFFE
 32992                           tosl	equ	0xFFD
 32993                           pclatu	equ	0xFFB
 32994                           pclath	equ	0xFFA
 32995                           tblptru	equ	0xFF8
 32996                           tblptrh	equ	0xFF7
 32997                           tblptrl	equ	0xFF6
 32998                           tablat	equ	0xFF5
 32999                           prodh	equ	0xFF4
 33000                           prodl	equ	0xFF3
 33001                           intcon	equ	0xFF2
 33002                           intcon2	equ	0xFF1
 33003                           intcon3	equ	0xFF0
 33004                           indf0	equ	0xFEF
 33005                           postinc0	equ	0xFEE
 33006                           fsr0h	equ	0xFEA
 33007                           fsr0l	equ	0xFE9
 33008                           wreg	equ	0xFE8
 33009                           indf1	equ	0xFE7
 33010                           postdec1	equ	0xFE5
 33011                           fsr1h	equ	0xFE2
 33012                           fsr1l	equ	0xFE1
 33013                           indf2	equ	0xFDF
 33014                           postinc2	equ	0xFDE
 33015                           postdec2	equ	0xFDD
 33016                           plusw2	equ	0xFDB
 33017                           fsr2h	equ	0xFDA
 33018                           fsr2l	equ	0xFD9
 33019                           status	equ	0xFD8
 33020                           
 33021 ;; *************** function _TMR3_ISR *****************
 33022 ;; Defined at:
 33023 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 33024 ;; Parameters:    Size  Location     Type
 33025 ;;		None
 33026 ;; Auto vars:     Size  Location     Type
 33027 ;;		None
 33028 ;; Return value:  Size  Location     Type
 33029 ;;                  1    wreg      void 
 33030 ;; Registers used:
 33031 ;;		wreg, status,2
 33032 ;; Tracked objects:
 33033 ;;		On entry : 0/0
 33034 ;;		On exit  : 0/0
 33035 ;;		Unchanged: 0/0
 33036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33037 ;;      Params:         0       0       0       0       0       0       0       0       0
 33038 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33040 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33041 ;;Total ram usage:        0 bytes
 33042 ;; Hardware stack levels used:    1
 33043 ;; This function calls:
 33044 ;;		Nothing
 33045 ;; This function is called by:
 33046 ;;		_INTERRUPT_InterruptManager
 33047 ;; This function uses a non-reentrant model
 33048 ;;
 33049                           
 33050                           	psect	text145
 33051  006282                     __ptext145:
 33052                           	opt stack 0
 33053  006282                     _TMR3_ISR:
 33054                           	opt stack 20
 33055                           
 33056                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 33057                           
 33058                           ; BSR set to: 0
 33059                           ;incstack = 0
 33060  006282  92A1               	bcf	4001,1,c	;volatile
 33061                           
 33062                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 33063  006284  A48D               	btfss	3981,2,c	;volatile
 33064  006286  D006               	goto	i2l1790
 33065                           
 33066                           ;tmr3.c: 168: {
 33067                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 33068  006288  948D               	bcf	3981,2,c	;volatile
 33069                           
 33070                           ;tmr3.c: 170: TMR3H = 0xD5;
 33071  00628A  0ED5               	movlw	213
 33072  00628C  6EB3               	movwf	4019,c	;volatile
 33073                           
 33074                           ;tmr3.c: 171: TMR3L = 0xD0;
 33075  00628E  0ED0               	movlw	208
 33076  006290  6EB2               	movwf	4018,c	;volatile
 33077                           
 33078                           ;tmr3.c: 172: } else {
 33079  006292  0012               	return	
 33080  006294                     i2l1790:
 33081                           
 33082                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 33083  006294  848D               	bsf	3981,2,c	;volatile
 33084                           
 33085                           ;tmr3.c: 174: TMR3H = 0xFB;
 33086  006296  0EFB               	movlw	251
 33087  006298  6EB3               	movwf	4019,c	;volatile
 33088                           
 33089                           ;tmr3.c: 175: TMR3L = 0x50;
 33090  00629A  0E50               	movlw	80
 33091  00629C  6EB2               	movwf	4018,c	;volatile
 33092  00629E  0012               	return	
 33093  0062A0                     __end_of_TMR3_ISR:
 33094                           	opt stack 0
 33095                           tosu	equ	0xFFF
 33096                           tosh	equ	0xFFE
 33097                           tosl	equ	0xFFD
 33098                           pclatu	equ	0xFFB
 33099                           pclath	equ	0xFFA
 33100                           tblptru	equ	0xFF8
 33101                           tblptrh	equ	0xFF7
 33102                           tblptrl	equ	0xFF6
 33103                           tablat	equ	0xFF5
 33104                           prodh	equ	0xFF4
 33105                           prodl	equ	0xFF3
 33106                           intcon	equ	0xFF2
 33107                           intcon2	equ	0xFF1
 33108                           intcon3	equ	0xFF0
 33109                           indf0	equ	0xFEF
 33110                           postinc0	equ	0xFEE
 33111                           fsr0h	equ	0xFEA
 33112                           fsr0l	equ	0xFE9
 33113                           wreg	equ	0xFE8
 33114                           indf1	equ	0xFE7
 33115                           postdec1	equ	0xFE5
 33116                           fsr1h	equ	0xFE2
 33117                           fsr1l	equ	0xFE1
 33118                           indf2	equ	0xFDF
 33119                           postinc2	equ	0xFDE
 33120                           postdec2	equ	0xFDD
 33121                           plusw2	equ	0xFDB
 33122                           fsr2h	equ	0xFDA
 33123                           fsr2l	equ	0xFD9
 33124                           status	equ	0xFD8
 33125                           
 33126 ;; *************** function _TMR1_ISR *****************
 33127 ;; Defined at:
 33128 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 33129 ;; Parameters:    Size  Location     Type
 33130 ;;		None
 33131 ;; Auto vars:     Size  Location     Type
 33132 ;;		None
 33133 ;; Return value:  Size  Location     Type
 33134 ;;                  1    wreg      void 
 33135 ;; Registers used:
 33136 ;;		wreg, status,2
 33137 ;; Tracked objects:
 33138 ;;		On entry : 0/0
 33139 ;;		On exit  : 0/0
 33140 ;;		Unchanged: 0/0
 33141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33142 ;;      Params:         0       0       0       0       0       0       0       0       0
 33143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33145 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33146 ;;Total ram usage:        0 bytes
 33147 ;; Hardware stack levels used:    1
 33148 ;; This function calls:
 33149 ;;		Nothing
 33150 ;; This function is called by:
 33151 ;;		_INTERRUPT_InterruptManager
 33152 ;; This function uses a non-reentrant model
 33153 ;;
 33154                           
 33155                           	psect	text146
 33156  006416                     __ptext146:
 33157                           	opt stack 0
 33158  006416                     _TMR1_ISR:
 33159                           	opt stack 20
 33160                           
 33161                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 33162                           
 33163                           ;incstack = 0
 33164  006416  909E               	bcf	3998,0,c	;volatile
 33165                           
 33166                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 33167  006418  5039               	movf	_timer1ReloadVal+1,w,c	;volatile
 33168  00641A  6ECF               	movwf	4047,c	;volatile
 33169                           
 33170                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 33171  00641C  C038  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 33172  006420  0012               	return		;funcret
 33173  006422                     __end_of_TMR1_ISR:
 33174                           	opt stack 0
 33175                           tosu	equ	0xFFF
 33176                           tosh	equ	0xFFE
 33177                           tosl	equ	0xFFD
 33178                           pclatu	equ	0xFFB
 33179                           pclath	equ	0xFFA
 33180                           tblptru	equ	0xFF8
 33181                           tblptrh	equ	0xFF7
 33182                           tblptrl	equ	0xFF6
 33183                           tablat	equ	0xFF5
 33184                           prodh	equ	0xFF4
 33185                           prodl	equ	0xFF3
 33186                           intcon	equ	0xFF2
 33187                           intcon2	equ	0xFF1
 33188                           intcon3	equ	0xFF0
 33189                           indf0	equ	0xFEF
 33190                           postinc0	equ	0xFEE
 33191                           fsr0h	equ	0xFEA
 33192                           fsr0l	equ	0xFE9
 33193                           wreg	equ	0xFE8
 33194                           indf1	equ	0xFE7
 33195                           postdec1	equ	0xFE5
 33196                           fsr1h	equ	0xFE2
 33197                           fsr1l	equ	0xFE1
 33198                           indf2	equ	0xFDF
 33199                           postinc2	equ	0xFDE
 33200                           postdec2	equ	0xFDD
 33201                           plusw2	equ	0xFDB
 33202                           fsr2h	equ	0xFDA
 33203                           fsr2l	equ	0xFD9
 33204                           status	equ	0xFD8
 33205                           
 33206 ;; *************** function _TMR0_ISR *****************
 33207 ;; Defined at:
 33208 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 33209 ;; Parameters:    Size  Location     Type
 33210 ;;		None
 33211 ;; Auto vars:     Size  Location     Type
 33212 ;;		None
 33213 ;; Return value:  Size  Location     Type
 33214 ;;                  1    wreg      void 
 33215 ;; Registers used:
 33216 ;;		None
 33217 ;; Tracked objects:
 33218 ;;		On entry : 0/0
 33219 ;;		On exit  : 0/0
 33220 ;;		Unchanged: 0/0
 33221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33222 ;;      Params:         0       0       0       0       0       0       0       0       0
 33223 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33225 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33226 ;;Total ram usage:        0 bytes
 33227 ;; Hardware stack levels used:    1
 33228 ;; This function calls:
 33229 ;;		Nothing
 33230 ;; This function is called by:
 33231 ;;		_INTERRUPT_InterruptManager
 33232 ;; This function uses a non-reentrant model
 33233 ;;
 33234                           
 33235                           	psect	text147
 33236  0064AC                     __ptext147:
 33237                           	opt stack 0
 33238  0064AC                     _TMR0_ISR:
 33239                           	opt stack 20
 33240                           
 33241                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 33242                           
 33243                           ;incstack = 0
 33244  0064AC  94F2               	bcf	intcon,2,c	;volatile
 33245  0064AE  0012               	return		;funcret
 33246  0064B0                     __end_of_TMR0_ISR:
 33247                           	opt stack 0
 33248                           tosu	equ	0xFFF
 33249                           tosh	equ	0xFFE
 33250                           tosl	equ	0xFFD
 33251                           pclatu	equ	0xFFB
 33252                           pclath	equ	0xFFA
 33253                           tblptru	equ	0xFF8
 33254                           tblptrh	equ	0xFF7
 33255                           tblptrl	equ	0xFF6
 33256                           tablat	equ	0xFF5
 33257                           prodh	equ	0xFF4
 33258                           prodl	equ	0xFF3
 33259                           intcon	equ	0xFF2
 33260                           intcon2	equ	0xFF1
 33261                           intcon3	equ	0xFF0
 33262                           indf0	equ	0xFEF
 33263                           postinc0	equ	0xFEE
 33264                           fsr0h	equ	0xFEA
 33265                           fsr0l	equ	0xFE9
 33266                           wreg	equ	0xFE8
 33267                           indf1	equ	0xFE7
 33268                           postdec1	equ	0xFE5
 33269                           fsr1h	equ	0xFE2
 33270                           fsr1l	equ	0xFE1
 33271                           indf2	equ	0xFDF
 33272                           postinc2	equ	0xFDE
 33273                           postdec2	equ	0xFDD
 33274                           plusw2	equ	0xFDB
 33275                           fsr2h	equ	0xFDA
 33276                           fsr2l	equ	0xFD9
 33277                           status	equ	0xFD8
 33278                           
 33279 ;; *************** function _InterruptTimerUART *****************
 33280 ;; Defined at:
 33281 ;;		line 134 in file "../Includes/Drivers/swUart.c"
 33282 ;; Parameters:    Size  Location     Type
 33283 ;;		None
 33284 ;; Auto vars:     Size  Location     Type
 33285 ;;  mask            1    4[COMRAM] unsigned char 
 33286 ;;  aux             1    3[COMRAM] unsigned char 
 33287 ;; Return value:  Size  Location     Type
 33288 ;;                  1    wreg      void 
 33289 ;; Registers used:
 33290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33291 ;; Tracked objects:
 33292 ;;		On entry : 0/0
 33293 ;;		On exit  : 0/0
 33294 ;;		Unchanged: 0/0
 33295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33296 ;;      Params:         0       0       0       0       0       0       0       0       0
 33297 ;;      Locals:         2       0       0       0       0       0       0       0       0
 33298 ;;      Temps:          2       0       0       0       0       0       0       0       0
 33299 ;;      Totals:         4       0       0       0       0       0       0       0       0
 33300 ;;Total ram usage:        4 bytes
 33301 ;; Hardware stack levels used:    1
 33302 ;; Hardware stack levels required when called:    1
 33303 ;; This function calls:
 33304 ;;		_ReadyByteFrame
 33305 ;;		_TMR0_Clear
 33306 ;;		_TMR0_StopTimer
 33307 ;;		_inFIFO
 33308 ;;		_reloadTimer
 33309 ;; This function is called by:
 33310 ;;		_INTERRUPT_InterruptManager
 33311 ;; This function uses a non-reentrant model
 33312 ;;
 33313                           
 33314                           	psect	text148
 33315  0045E4                     __ptext148:
 33316                           	opt stack 0
 33317  0045E4                     _InterruptTimerUART:
 33318                           	opt stack 19
 33319                           
 33320                           ;swUart.c: 136: uint8_t mask, aux;
 33321                           ;swUart.c: 138: reloadTimer(110);
 33322                           
 33323                           ;incstack = 0
 33324  0045E4  0E6E               	movlw	110
 33325  0045E6  EC2B  F032         	call	_reloadTimer
 33326                           
 33327                           ;swUart.c: 140: PORTAbits.RA7 = !PORTAbits.RA7;
 33328  0045EA  BE80               	btfsc	3968,7,c	;volatile
 33329  0045EC  D003               	goto	i2u1086_40
 33330  0045EE  6A02               	clrf	??_InterruptTimerUART& (0+255),c
 33331  0045F0  2A02               	incf	??_InterruptTimerUART& (0+255),f,c
 33332  0045F2  D001               	goto	i2u1087_48
 33333  0045F4                     i2u1086_40:
 33334  0045F4  6A02               	clrf	??_InterruptTimerUART& (0+255),c
 33335  0045F6                     i2u1087_48:
 33336  0045F6  3202               	rrcf	??_InterruptTimerUART,f,c
 33337  0045F8  3202               	rrcf	??_InterruptTimerUART,f,c
 33338  0045FA  5080               	movf	3968,w,c	;volatile
 33339  0045FC  1802               	xorwf	??_InterruptTimerUART,w,c
 33340  0045FE  0B7F               	andlw	-129
 33341  004600  1802               	xorwf	??_InterruptTimerUART,w,c
 33342  004602  6E80               	movwf	3968,c	;volatile
 33343                           
 33344                           ;swUart.c: 141: switch(status)
 33345  004604  D03F               	goto	i2l1234
 33346  004606                     
 33347                           ;swUart.c: 144: if(countBitsSilent == ( 22 - 1 ) )
 33348  004606  0E15               	movlw	21
 33349  004608  184B               	xorwf	_countBitsSilent,w,c
 33350  00460A  A4D8               	btfss	status,2,c
 33351  00460C  D004               	goto	i2l1236
 33352                           
 33353                           ;swUart.c: 145: {
 33354                           ;swUart.c: 146: TMR0_StopTimer();
 33355  00460E  EC58  F032         	call	_TMR0_StopTimer	;wreg free
 33356                           
 33357                           ;swUart.c: 148: ReadyByteFrame();
 33358  004612  EC63  F032         	call	_ReadyByteFrame	;wreg free
 33359  004616                     i2l1236:
 33360                           
 33361                           ;swUart.c: 149: }
 33362                           ;swUart.c: 150: if(countBitsSilent < 22)
 33363  004616  0E16               	movlw	22
 33364  004618  604B               	cpfslt	_countBitsSilent,c
 33365  00461A  D042               	goto	i2l1238
 33366                           
 33367                           ;swUart.c: 151: {
 33368                           ;swUart.c: 152: countBitsSilent ++;
 33369  00461C  2A4B               	incf	_countBitsSilent,f,c
 33370                           
 33371                           ;swUart.c: 154: }
 33372                           ;swUart.c: 155: break;
 33373  00461E  D040               	goto	i2l1238
 33374  004620                     
 33375                           ;swUart.c: 167: mask = 0x01 << n_bit;
 33376  004620  C05A  F002         	movff	_n_bit,??_InterruptTimerUART
 33377  004624  0E01               	movlw	1
 33378  004626  6E03               	movwf	(??_InterruptTimerUART+1)& (0+255),c
 33379  004628  2A02               	incf	??_InterruptTimerUART,f,c
 33380  00462A  D002               	goto	i2u1090_44
 33381  00462C                     i2u1090_45:
 33382  00462C  90D8               	bcf	status,0,c
 33383  00462E  3603               	rlcf	??_InterruptTimerUART+1,f,c
 33384  004630                     i2u1090_44:
 33385  004630  2E02               	decfsz	??_InterruptTimerUART,f,c
 33386  004632  D7FC               	goto	i2u1090_45
 33387  004634  5003               	movf	??_InterruptTimerUART+1,w,c
 33388  004636  6E05               	movwf	InterruptTimerUART@mask,c
 33389                           
 33390                           ;swUart.c: 169: if( PORTBbits.RB7 == 1 )
 33391  004638  AE81               	btfss	3969,7,c	;volatile
 33392  00463A  D005               	goto	i2l1240
 33393                           
 33394                           ;swUart.c: 170: {
 33395                           ;swUart.c: 171: rx_data |= mask;
 33396  00463C  5005               	movf	InterruptTimerUART@mask,w,c
 33397  00463E  124C               	iorwf	_rx_data,f,c
 33398                           
 33399                           ;swUart.c: 172: cs ++;
 33400  004640  0101               	movlb	1	; () banked
 33401  004642  2B20               	incf	_cs& (0+255),f,b
 33402                           
 33403                           ;swUart.c: 173: }
 33404  004644  D003               	goto	i2l1241
 33405  004646                     i2l1240:
 33406                           
 33407                           ;swUart.c: 174: else
 33408                           ;swUart.c: 175: {
 33409                           ;swUart.c: 177: rx_data &= ~mask;
 33410                           
 33411                           ; BSR set to: 1
 33412  004646  5005               	movf	InterruptTimerUART@mask,w,c
 33413  004648  0AFF               	xorlw	255
 33414  00464A  164C               	andwf	_rx_data,f,c
 33415  00464C                     i2l1241:
 33416                           
 33417                           ;swUart.c: 178: }
 33418                           ;swUart.c: 179: n_bit ++;
 33419  00464C  2A5A               	incf	_n_bit,f,c
 33420                           
 33421                           ;swUart.c: 180: if( n_bit == 8 )
 33422  00464E  0E08               	movlw	8
 33423  004650  185A               	xorwf	_n_bit,w,c
 33424  004652  A4D8               	btfss	status,2,c
 33425  004654  D025               	goto	i2l1238
 33426  004656  D001               	goto	i2l12193
 33427  004658                     i2l1243:
 33428                           
 33429                           ;swUart.c: 189: if( PORTBbits.RB7 == 0 )
 33430  004658  5081               	movf	3969,w,c	;volatile
 33431  00465A                     i2l12193:
 33432                           
 33433                           ;swUart.c: 193: status = STOP_UA;
 33434                           
 33435                           ;swUart.c: 191: else
 33436                           ;swUart.c: 192: {}
 33437                           
 33438                           ;swUart.c: 190: {}
 33439  00465A  0E03               	movlw	3
 33440  00465C  6E4D               	movwf	_status,c
 33441                           
 33442                           ;swUart.c: 195: break;
 33443  00465E  D020               	goto	i2l1238
 33444  004660                     
 33445                           ;swUart.c: 197: inFIFO(rx_data);
 33446  004660  504C               	movf	_rx_data,w,c
 33447  004662  EC6F  F02E         	call	_inFIFO
 33448                           
 33449                           ;swUart.c: 198: status = SILENT;
 33450  004666  0E00               	movlw	0
 33451  004668  6E4D               	movwf	_status,c
 33452                           
 33453                           ;swUart.c: 200: reloadTimer(0);
 33454  00466A  0E00               	movlw	0
 33455  00466C  EC2B  F032         	call	_reloadTimer
 33456                           
 33457                           ;swUart.c: 201: aux = PORTB;
 33458  004670  CF81 F004          	movff	3969,InterruptTimerUART@aux	;volatile
 33459                           
 33460                           ;swUart.c: 202: INTCONbits.IOCIF = 0;
 33461  004674  90F2               	bcf	intcon,0,c	;volatile
 33462                           
 33463                           ;swUart.c: 203: INTCONbits.IOCIE = 1;
 33464  004676  86F2               	bsf	intcon,3,c	;volatile
 33465                           
 33466                           ;swUart.c: 204: break;
 33467  004678  D013               	goto	i2l1238
 33468  00467A                     
 33469                           ;swUart.c: 206: status = SILENT;
 33470  00467A  0E00               	movlw	0
 33471  00467C  6E4D               	movwf	_status,c
 33472                           
 33473                           ;swUart.c: 207: countBitsSilent = 22;
 33474  00467E  0E16               	movlw	22
 33475  004680  6E4B               	movwf	_countBitsSilent,c
 33476                           
 33477                           ;swUart.c: 209: }
 33478                           
 33479                           ;swUart.c: 208: break;
 33480  004682  D00E               	goto	i2l1238
 33481  004684                     i2l1234:
 33482  004684  504D               	movf	_status,w,c
 33483                           
 33484                           ; Switch size 1, requested type "space"
 33485                           ; Number of cases is 4, Range of values is 0 to 3
 33486                           ; switch strategies available:
 33487                           ; Name         Instructions Cycles
 33488                           ; simple_byte           13     7 (average)
 33489                           ;	Chosen strategy is simple_byte
 33490  004686  0A00               	xorlw	0	; case 0
 33491  004688  B4D8               	btfsc	status,2,c
 33492  00468A  D7BD               	goto	i2l1235
 33493  00468C  0A01               	xorlw	1	; case 1
 33494  00468E  B4D8               	btfsc	status,2,c
 33495  004690  D7C7               	goto	i2l1239
 33496  004692  0A03               	xorlw	3	; case 2
 33497  004694  B4D8               	btfsc	status,2,c
 33498  004696  D7E0               	goto	i2l1243
 33499  004698  0A01               	xorlw	1	; case 3
 33500  00469A  B4D8               	btfsc	status,2,c
 33501  00469C  D7E1               	goto	i2l1246
 33502  00469E  D7ED               	goto	i2l1247
 33503  0046A0                     i2l1238:
 33504                           
 33505                           ;swUart.c: 210: TMR0_Clear();
 33506  0046A0  EC5C  F032         	call	_TMR0_Clear	;wreg free
 33507  0046A4  0012               	return		;funcret
 33508  0046A6                     __end_of_InterruptTimerUART:
 33509                           	opt stack 0
 33510                           tosu	equ	0xFFF
 33511                           tosh	equ	0xFFE
 33512                           tosl	equ	0xFFD
 33513                           pclatu	equ	0xFFB
 33514                           pclath	equ	0xFFA
 33515                           tblptru	equ	0xFF8
 33516                           tblptrh	equ	0xFF7
 33517                           tblptrl	equ	0xFF6
 33518                           tablat	equ	0xFF5
 33519                           prodh	equ	0xFF4
 33520                           prodl	equ	0xFF3
 33521                           intcon	equ	0xFF2
 33522                           intcon2	equ	0xFF1
 33523                           intcon3	equ	0xFF0
 33524                           indf0	equ	0xFEF
 33525                           postinc0	equ	0xFEE
 33526                           fsr0h	equ	0xFEA
 33527                           fsr0l	equ	0xFE9
 33528                           wreg	equ	0xFE8
 33529                           indf1	equ	0xFE7
 33530                           postdec1	equ	0xFE5
 33531                           fsr1h	equ	0xFE2
 33532                           fsr1l	equ	0xFE1
 33533                           indf2	equ	0xFDF
 33534                           postinc2	equ	0xFDE
 33535                           postdec2	equ	0xFDD
 33536                           plusw2	equ	0xFDB
 33537                           fsr2h	equ	0xFDA
 33538                           fsr2l	equ	0xFD9
 33539                           status	equ	0xFD8
 33540                           
 33541 ;; *************** function _inFIFO *****************
 33542 ;; Defined at:
 33543 ;;		line 254 in file "../Includes/Drivers/swUart.c"
 33544 ;; Parameters:    Size  Location     Type
 33545 ;;  data            1    wreg     unsigned char 
 33546 ;; Auto vars:     Size  Location     Type
 33547 ;;  data            1    0[COMRAM] unsigned char 
 33548 ;; Return value:  Size  Location     Type
 33549 ;;                  1    wreg      void 
 33550 ;; Registers used:
 33551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33552 ;; Tracked objects:
 33553 ;;		On entry : 0/0
 33554 ;;		On exit  : 0/0
 33555 ;;		Unchanged: 0/0
 33556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33557 ;;      Params:         0       0       0       0       0       0       0       0       0
 33558 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33560 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33561 ;;Total ram usage:        1 bytes
 33562 ;; Hardware stack levels used:    1
 33563 ;; This function calls:
 33564 ;;		Nothing
 33565 ;; This function is called by:
 33566 ;;		_InterruptTimerUART
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text149
 33571  005CDE                     __ptext149:
 33572                           	opt stack 0
 33573  005CDE                     _inFIFO:
 33574                           	opt stack 19
 33575                           
 33576                           ;incstack = 0
 33577                           ;inFIFO@data stored from wreg
 33578  005CDE  6E01               	movwf	inFIFO@data,c
 33579                           
 33580                           ;swUart.c: 256: buffer_rx[countIn] = data;
 33581  005CE0  0100               	movlb	0	; () banked
 33582  005CE2  51E7               	movf	_countIn& (0+255),w,b
 33583  005CE4  0D01               	mullw	1
 33584  005CE6  0E00               	movlw	low _buffer_rx
 33585  005CE8  24F3               	addwf	prodl,w,c
 33586  005CEA  6ED9               	movwf	fsr2l,c
 33587  005CEC  0E07               	movlw	high _buffer_rx
 33588  005CEE  20F4               	addwfc	prodh,w,c
 33589  005CF0  6EDA               	movwf	fsr2h,c
 33590  005CF2  C001  FFDF         	movff	inFIFO@data,indf2
 33591                           
 33592                           ; BSR set to: 0
 33593                           ;swUart.c: 257: countIn++;
 33594  005CF6  2BE7               	incf	_countIn& (0+255),f,b
 33595                           
 33596                           ; BSR set to: 0
 33597                           ;swUart.c: 258: if(countIn == 200)
 33598  005CF8  0EC8               	movlw	200
 33599  005CFA  19E7               	xorwf	_countIn& (0+255),w,b
 33600  005CFC  A4D8               	btfss	status,2,c
 33601  005CFE  D002               	goto	i2l1263
 33602                           
 33603                           ; BSR set to: 0
 33604                           ;swUart.c: 259: {
 33605                           ;swUart.c: 260: countIn = 0;
 33606  005D00  0E00               	movlw	0
 33607  005D02  6FE7               	movwf	_countIn& (0+255),b
 33608  005D04                     i2l1263:
 33609                           
 33610                           ; BSR set to: 0
 33611                           ;swUart.c: 261: }
 33612                           ;swUart.c: 262: if(countOut == countIn)
 33613                           
 33614                           ; BSR set to: 0
 33615  005D04  51E7               	movf	_countIn& (0+255),w,b
 33616  005D06  19E8               	xorwf	_countOut& (0+255),w,b
 33617  005D08  A4D8               	btfss	status,2,c
 33618  005D0A  0012               	return	
 33619                           
 33620                           ; BSR set to: 0
 33621                           ;swUart.c: 263: {
 33622                           ;swUart.c: 264: countOut ++;
 33623  005D0C  2BE8               	incf	_countOut& (0+255),f,b
 33624                           
 33625                           ; BSR set to: 0
 33626                           ;swUart.c: 265: if(countOut == 200)
 33627  005D0E  0EC8               	movlw	200
 33628  005D10  19E8               	xorwf	_countOut& (0+255),w,b
 33629  005D12  A4D8               	btfss	status,2,c
 33630  005D14  0012               	return	
 33631                           
 33632                           ; BSR set to: 0
 33633                           ;swUart.c: 266: {
 33634                           ;swUart.c: 267: countOut = 0;
 33635  005D16  0E00               	movlw	0
 33636  005D18  6FE8               	movwf	_countOut& (0+255),b
 33637                           
 33638                           ; BSR set to: 0
 33639  005D1A  0012               	return	
 33640  005D1C                     __end_of_inFIFO:
 33641                           	opt stack 0
 33642                           tosu	equ	0xFFF
 33643                           tosh	equ	0xFFE
 33644                           tosl	equ	0xFFD
 33645                           pclatu	equ	0xFFB
 33646                           pclath	equ	0xFFA
 33647                           tblptru	equ	0xFF8
 33648                           tblptrh	equ	0xFF7
 33649                           tblptrl	equ	0xFF6
 33650                           tablat	equ	0xFF5
 33651                           prodh	equ	0xFF4
 33652                           prodl	equ	0xFF3
 33653                           intcon	equ	0xFF2
 33654                           intcon2	equ	0xFF1
 33655                           intcon3	equ	0xFF0
 33656                           indf0	equ	0xFEF
 33657                           postinc0	equ	0xFEE
 33658                           fsr0h	equ	0xFEA
 33659                           fsr0l	equ	0xFE9
 33660                           wreg	equ	0xFE8
 33661                           indf1	equ	0xFE7
 33662                           postdec1	equ	0xFE5
 33663                           fsr1h	equ	0xFE2
 33664                           fsr1l	equ	0xFE1
 33665                           indf2	equ	0xFDF
 33666                           postinc2	equ	0xFDE
 33667                           postdec2	equ	0xFDD
 33668                           plusw2	equ	0xFDB
 33669                           fsr2h	equ	0xFDA
 33670                           fsr2l	equ	0xFD9
 33671                           status	equ	0xFD8
 33672                           
 33673 ;; *************** function _TMR0_StopTimer *****************
 33674 ;; Defined at:
 33675 ;;		line 95 in file "../Includes/MccGenerated/tmr0.c"
 33676 ;; Parameters:    Size  Location     Type
 33677 ;;		None
 33678 ;; Auto vars:     Size  Location     Type
 33679 ;;		None
 33680 ;; Return value:  Size  Location     Type
 33681 ;;                  1    wreg      void 
 33682 ;; Registers used:
 33683 ;;		None
 33684 ;; Tracked objects:
 33685 ;;		On entry : 0/0
 33686 ;;		On exit  : 0/0
 33687 ;;		Unchanged: 0/0
 33688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33689 ;;      Params:         0       0       0       0       0       0       0       0       0
 33690 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33692 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33693 ;;Total ram usage:        0 bytes
 33694 ;; Hardware stack levels used:    1
 33695 ;; This function calls:
 33696 ;;		Nothing
 33697 ;; This function is called by:
 33698 ;;		_InterruptTimerUART
 33699 ;; This function uses a non-reentrant model
 33700 ;;
 33701                           
 33702                           	psect	text150
 33703  0064B0                     __ptext150:
 33704                           	opt stack 0
 33705  0064B0                     _TMR0_StopTimer:
 33706                           	opt stack 19
 33707                           
 33708                           ;tmr0.c: 98: T0CONbits.TMR0ON = 0;
 33709                           
 33710                           ; BSR set to: 0
 33711                           ;incstack = 0
 33712  0064B0  9ED5               	bcf	4053,7,c	;volatile
 33713  0064B2  0012               	return		;funcret
 33714  0064B4                     __end_of_TMR0_StopTimer:
 33715                           	opt stack 0
 33716                           tosu	equ	0xFFF
 33717                           tosh	equ	0xFFE
 33718                           tosl	equ	0xFFD
 33719                           pclatu	equ	0xFFB
 33720                           pclath	equ	0xFFA
 33721                           tblptru	equ	0xFF8
 33722                           tblptrh	equ	0xFF7
 33723                           tblptrl	equ	0xFF6
 33724                           tablat	equ	0xFF5
 33725                           prodh	equ	0xFF4
 33726                           prodl	equ	0xFF3
 33727                           intcon	equ	0xFF2
 33728                           intcon2	equ	0xFF1
 33729                           intcon3	equ	0xFF0
 33730                           indf0	equ	0xFEF
 33731                           postinc0	equ	0xFEE
 33732                           fsr0h	equ	0xFEA
 33733                           fsr0l	equ	0xFE9
 33734                           wreg	equ	0xFE8
 33735                           indf1	equ	0xFE7
 33736                           postdec1	equ	0xFE5
 33737                           fsr1h	equ	0xFE2
 33738                           fsr1l	equ	0xFE1
 33739                           indf2	equ	0xFDF
 33740                           postinc2	equ	0xFDE
 33741                           postdec2	equ	0xFDD
 33742                           plusw2	equ	0xFDB
 33743                           fsr2h	equ	0xFDA
 33744                           fsr2l	equ	0xFD9
 33745                           status	equ	0xFD8
 33746                           
 33747 ;; *************** function _ReadyByteFrame *****************
 33748 ;; Defined at:
 33749 ;;		line 1568 in file "../Includes/Board/MOTEapp.c"
 33750 ;; Parameters:    Size  Location     Type
 33751 ;;		None
 33752 ;; Auto vars:     Size  Location     Type
 33753 ;;		None
 33754 ;; Return value:  Size  Location     Type
 33755 ;;                  1    wreg      void 
 33756 ;; Registers used:
 33757 ;;		None
 33758 ;; Tracked objects:
 33759 ;;		On entry : 0/0
 33760 ;;		On exit  : 0/0
 33761 ;;		Unchanged: 0/0
 33762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33763 ;;      Params:         0       0       0       0       0       0       0       0       0
 33764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33767 ;;Total ram usage:        0 bytes
 33768 ;; Hardware stack levels used:    1
 33769 ;; This function calls:
 33770 ;;		Nothing
 33771 ;; This function is called by:
 33772 ;;		_InterruptTimerUART
 33773 ;; This function uses a non-reentrant model
 33774 ;;
 33775                           
 33776                           	psect	text151
 33777  0064C6                     __ptext151:
 33778                           	opt stack 0
 33779  0064C6                     _ReadyByteFrame:
 33780                           	opt stack 19
 33781                           
 33782                           ;incstack = 0
 33783  0064C6  0012               	return		;funcret
 33784  0064C8                     __end_of_ReadyByteFrame:
 33785                           	opt stack 0
 33786                           tosu	equ	0xFFF
 33787                           tosh	equ	0xFFE
 33788                           tosl	equ	0xFFD
 33789                           pclatu	equ	0xFFB
 33790                           pclath	equ	0xFFA
 33791                           tblptru	equ	0xFF8
 33792                           tblptrh	equ	0xFF7
 33793                           tblptrl	equ	0xFF6
 33794                           tablat	equ	0xFF5
 33795                           prodh	equ	0xFF4
 33796                           prodl	equ	0xFF3
 33797                           intcon	equ	0xFF2
 33798                           intcon2	equ	0xFF1
 33799                           intcon3	equ	0xFF0
 33800                           indf0	equ	0xFEF
 33801                           postinc0	equ	0xFEE
 33802                           fsr0h	equ	0xFEA
 33803                           fsr0l	equ	0xFE9
 33804                           wreg	equ	0xFE8
 33805                           indf1	equ	0xFE7
 33806                           postdec1	equ	0xFE5
 33807                           fsr1h	equ	0xFE2
 33808                           fsr1l	equ	0xFE1
 33809                           indf2	equ	0xFDF
 33810                           postinc2	equ	0xFDE
 33811                           postdec2	equ	0xFDD
 33812                           plusw2	equ	0xFDB
 33813                           fsr2h	equ	0xFDA
 33814                           fsr2l	equ	0xFD9
 33815                           status	equ	0xFD8
 33816                           
 33817 ;; *************** function _InterruptPinRX *****************
 33818 ;; Defined at:
 33819 ;;		line 102 in file "../Includes/Drivers/swUart.c"
 33820 ;; Parameters:    Size  Location     Type
 33821 ;;		None
 33822 ;; Auto vars:     Size  Location     Type
 33823 ;;		None
 33824 ;; Return value:  Size  Location     Type
 33825 ;;                  1    wreg      void 
 33826 ;; Registers used:
 33827 ;;		wreg, status,2, status,0, cstack
 33828 ;; Tracked objects:
 33829 ;;		On entry : 0/0
 33830 ;;		On exit  : 0/0
 33831 ;;		Unchanged: 0/0
 33832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33833 ;;      Params:         0       0       0       0       0       0       0       0       0
 33834 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33835 ;;      Temps:          1       0       0       0       0       0       0       0       0
 33836 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33837 ;;Total ram usage:        1 bytes
 33838 ;; Hardware stack levels used:    1
 33839 ;; Hardware stack levels required when called:    1
 33840 ;; This function calls:
 33841 ;;		_TMR0_Clear
 33842 ;;		_clearInterruptPinRX
 33843 ;;		_reloadTimer
 33844 ;;		i2_TMR0_StartTimer
 33845 ;; This function is called by:
 33846 ;;		_INTERRUPT_InterruptManager
 33847 ;; This function uses a non-reentrant model
 33848 ;;
 33849                           
 33850                           	psect	text152
 33851  005AC4                     __ptext152:
 33852                           	opt stack 0
 33853  005AC4                     _InterruptPinRX:
 33854                           	opt stack 19
 33855                           
 33856                           ;swUart.c: 105: if(status == SILENT)
 33857                           
 33858                           ;incstack = 0
 33859  005AC4  504D               	movf	_status,w,c
 33860  005AC6  B4D8               	btfsc	status,2,c
 33861                           
 33862                           ;swUart.c: 106: {
 33863                           ;swUart.c: 107: if(PORTBbits.RB7 == 0)
 33864  005AC8  BE81               	btfsc	3969,7,c	;volatile
 33865  005ACA  D020               	goto	i2l1230
 33866                           
 33867                           ;swUart.c: 108: {
 33868                           ;swUart.c: 110: PORTAbits.RA7 = !PORTAbits.RA7;
 33869  005ACC  BE80               	btfsc	3968,7,c	;volatile
 33870  005ACE  D003               	goto	i2u1084_40
 33871  005AD0  6A02               	clrf	??_InterruptPinRX& (0+255),c
 33872  005AD2  2A02               	incf	??_InterruptPinRX& (0+255),f,c
 33873  005AD4  D001               	goto	i2u1085_48
 33874  005AD6                     i2u1084_40:
 33875  005AD6  6A02               	clrf	??_InterruptPinRX& (0+255),c
 33876  005AD8                     i2u1085_48:
 33877  005AD8  3202               	rrcf	??_InterruptPinRX,f,c
 33878  005ADA  3202               	rrcf	??_InterruptPinRX,f,c
 33879  005ADC  5080               	movf	3968,w,c	;volatile
 33880  005ADE  1802               	xorwf	??_InterruptPinRX,w,c
 33881  005AE0  0B7F               	andlw	-129
 33882  005AE2  1802               	xorwf	??_InterruptPinRX,w,c
 33883  005AE4  6E80               	movwf	3968,c	;volatile
 33884                           
 33885                           ;swUart.c: 112: INTCONbits.IOCIE = 0;
 33886  005AE6  96F2               	bcf	intcon,3,c	;volatile
 33887                           
 33888                           ;swUart.c: 116: TMR0_Clear();
 33889  005AE8  EC5C  F032         	call	_TMR0_Clear	;wreg free
 33890                           
 33891                           ;swUart.c: 117: reloadTimer(95);
 33892  005AEC  0E5F               	movlw	95
 33893  005AEE  EC2B  F032         	call	_reloadTimer
 33894                           
 33895                           ;swUart.c: 118: TMR0_StartTimer();
 33896  005AF2  EC5A  F032         	call	i2_TMR0_StartTimer	;wreg free
 33897                           
 33898                           ;swUart.c: 123: countBitsSilent = 0;
 33899  005AF6  0E00               	movlw	0
 33900  005AF8  6E4B               	movwf	_countBitsSilent,c
 33901                           
 33902                           ;swUart.c: 124: n_bit = 0;
 33903  005AFA  0E00               	movlw	0
 33904  005AFC  6E5A               	movwf	_n_bit,c
 33905                           
 33906                           ;swUart.c: 125: cs = 0;
 33907  005AFE  0E00               	movlw	0
 33908  005B00  0101               	movlb	1	; () banked
 33909  005B02  6F20               	movwf	_cs& (0+255),b
 33910                           
 33911                           ; BSR set to: 1
 33912                           ;swUart.c: 126: rx_data = 0;
 33913  005B04  0E00               	movlw	0
 33914  005B06  6E4C               	movwf	_rx_data,c
 33915                           
 33916                           ; BSR set to: 1
 33917                           ;swUart.c: 127: status = N_BIT;
 33918  005B08  0E01               	movlw	1
 33919  005B0A  6E4D               	movwf	_status,c
 33920  005B0C                     i2l1230:
 33921                           
 33922                           ;swUart.c: 128: }
 33923                           ;swUart.c: 129: }
 33924                           ;swUart.c: 131: clearInterruptPinRX();
 33925                           
 33926                           ; BSR set to: 1
 33927                           
 33928                           ; BSR set to: 1
 33929  005B0C  EC11  F032         	call	_clearInterruptPinRX	;wreg free
 33930  005B10  0012               	return		;funcret
 33931  005B12                     __end_of_InterruptPinRX:
 33932                           	opt stack 0
 33933                           tosu	equ	0xFFF
 33934                           tosh	equ	0xFFE
 33935                           tosl	equ	0xFFD
 33936                           pclatu	equ	0xFFB
 33937                           pclath	equ	0xFFA
 33938                           tblptru	equ	0xFF8
 33939                           tblptrh	equ	0xFF7
 33940                           tblptrl	equ	0xFF6
 33941                           tablat	equ	0xFF5
 33942                           prodh	equ	0xFF4
 33943                           prodl	equ	0xFF3
 33944                           intcon	equ	0xFF2
 33945                           intcon2	equ	0xFF1
 33946                           intcon3	equ	0xFF0
 33947                           indf0	equ	0xFEF
 33948                           postinc0	equ	0xFEE
 33949                           fsr0h	equ	0xFEA
 33950                           fsr0l	equ	0xFE9
 33951                           wreg	equ	0xFE8
 33952                           indf1	equ	0xFE7
 33953                           postdec1	equ	0xFE5
 33954                           fsr1h	equ	0xFE2
 33955                           fsr1l	equ	0xFE1
 33956                           indf2	equ	0xFDF
 33957                           postinc2	equ	0xFDE
 33958                           postdec2	equ	0xFDD
 33959                           plusw2	equ	0xFDB
 33960                           fsr2h	equ	0xFDA
 33961                           fsr2l	equ	0xFD9
 33962                           status	equ	0xFD8
 33963                           
 33964 ;; *************** function i2_TMR0_StartTimer *****************
 33965 ;; Defined at:
 33966 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 33967 ;; Parameters:    Size  Location     Type
 33968 ;;		None
 33969 ;; Auto vars:     Size  Location     Type
 33970 ;;		None
 33971 ;; Return value:  Size  Location     Type
 33972 ;;                  1    wreg      void 
 33973 ;; Registers used:
 33974 ;;		None
 33975 ;; Tracked objects:
 33976 ;;		On entry : 0/0
 33977 ;;		On exit  : 0/0
 33978 ;;		Unchanged: 0/0
 33979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33980 ;;      Params:         0       0       0       0       0       0       0       0       0
 33981 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33983 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33984 ;;Total ram usage:        0 bytes
 33985 ;; Hardware stack levels used:    1
 33986 ;; This function calls:
 33987 ;;		Nothing
 33988 ;; This function is called by:
 33989 ;;		_InterruptPinRX
 33990 ;; This function uses a non-reentrant model
 33991 ;;
 33992                           
 33993                           	psect	text153
 33994  0064B4                     __ptext153:
 33995                           	opt stack 0
 33996  0064B4                     i2_TMR0_StartTimer:
 33997                           	opt stack 19
 33998                           
 33999                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 34000                           
 34001                           ;incstack = 0
 34002  0064B4  8ED5               	bsf	4053,7,c	;volatile
 34003  0064B6  0012               	return		;funcret
 34004  0064B8                     __end_ofi2_TMR0_StartTimer:
 34005                           	opt stack 0
 34006                           tosu	equ	0xFFF
 34007                           tosh	equ	0xFFE
 34008                           tosl	equ	0xFFD
 34009                           pclatu	equ	0xFFB
 34010                           pclath	equ	0xFFA
 34011                           tblptru	equ	0xFF8
 34012                           tblptrh	equ	0xFF7
 34013                           tblptrl	equ	0xFF6
 34014                           tablat	equ	0xFF5
 34015                           prodh	equ	0xFF4
 34016                           prodl	equ	0xFF3
 34017                           intcon	equ	0xFF2
 34018                           intcon2	equ	0xFF1
 34019                           intcon3	equ	0xFF0
 34020                           indf0	equ	0xFEF
 34021                           postinc0	equ	0xFEE
 34022                           fsr0h	equ	0xFEA
 34023                           fsr0l	equ	0xFE9
 34024                           wreg	equ	0xFE8
 34025                           indf1	equ	0xFE7
 34026                           postdec1	equ	0xFE5
 34027                           fsr1h	equ	0xFE2
 34028                           fsr1l	equ	0xFE1
 34029                           indf2	equ	0xFDF
 34030                           postinc2	equ	0xFDE
 34031                           postdec2	equ	0xFDD
 34032                           plusw2	equ	0xFDB
 34033                           fsr2h	equ	0xFDA
 34034                           fsr2l	equ	0xFD9
 34035                           status	equ	0xFD8
 34036                           
 34037 ;; *************** function _reloadTimer *****************
 34038 ;; Defined at:
 34039 ;;		line 214 in file "../Includes/Drivers/swUart.c"
 34040 ;; Parameters:    Size  Location     Type
 34041 ;;  setTimerValu    1    wreg     unsigned char 
 34042 ;; Auto vars:     Size  Location     Type
 34043 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 34044 ;; Return value:  Size  Location     Type
 34045 ;;                  1    wreg      void 
 34046 ;; Registers used:
 34047 ;;		wreg
 34048 ;; Tracked objects:
 34049 ;;		On entry : 0/0
 34050 ;;		On exit  : 0/0
 34051 ;;		Unchanged: 0/0
 34052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34053 ;;      Params:         0       0       0       0       0       0       0       0       0
 34054 ;;      Locals:         1       0       0       0       0       0       0       0       0
 34055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34056 ;;      Totals:         1       0       0       0       0       0       0       0       0
 34057 ;;Total ram usage:        1 bytes
 34058 ;; Hardware stack levels used:    1
 34059 ;; This function calls:
 34060 ;;		Nothing
 34061 ;; This function is called by:
 34062 ;;		_InterruptPinRX
 34063 ;;		_InterruptTimerUART
 34064 ;; This function uses a non-reentrant model
 34065 ;;
 34066                           
 34067                           	psect	text154
 34068  006456                     __ptext154:
 34069                           	opt stack 0
 34070  006456                     _reloadTimer:
 34071                           	opt stack 19
 34072                           
 34073                           ;incstack = 0
 34074                           ;reloadTimer@setTimerValue stored from wreg
 34075  006456  6E01               	movwf	reloadTimer@setTimerValue,c
 34076                           
 34077                           ;swUart.c: 216: TMR0 = setTimerValue;
 34078  006458  C001  FFD6         	movff	reloadTimer@setTimerValue,4054	;volatile
 34079  00645C  6AD7               	clrf	4055,c	;volatile
 34080  00645E  0012               	return		;funcret
 34081  006460                     __end_of_reloadTimer:
 34082                           	opt stack 0
 34083                           tosu	equ	0xFFF
 34084                           tosh	equ	0xFFE
 34085                           tosl	equ	0xFFD
 34086                           pclatu	equ	0xFFB
 34087                           pclath	equ	0xFFA
 34088                           tblptru	equ	0xFF8
 34089                           tblptrh	equ	0xFF7
 34090                           tblptrl	equ	0xFF6
 34091                           tablat	equ	0xFF5
 34092                           prodh	equ	0xFF4
 34093                           prodl	equ	0xFF3
 34094                           intcon	equ	0xFF2
 34095                           intcon2	equ	0xFF1
 34096                           intcon3	equ	0xFF0
 34097                           indf0	equ	0xFEF
 34098                           postinc0	equ	0xFEE
 34099                           fsr0h	equ	0xFEA
 34100                           fsr0l	equ	0xFE9
 34101                           wreg	equ	0xFE8
 34102                           indf1	equ	0xFE7
 34103                           postdec1	equ	0xFE5
 34104                           fsr1h	equ	0xFE2
 34105                           fsr1l	equ	0xFE1
 34106                           indf2	equ	0xFDF
 34107                           postinc2	equ	0xFDE
 34108                           postdec2	equ	0xFDD
 34109                           plusw2	equ	0xFDB
 34110                           fsr2h	equ	0xFDA
 34111                           fsr2l	equ	0xFD9
 34112                           status	equ	0xFD8
 34113                           
 34114 ;; *************** function _clearInterruptPinRX *****************
 34115 ;; Defined at:
 34116 ;;		line 235 in file "../Includes/Drivers/swUart.c"
 34117 ;; Parameters:    Size  Location     Type
 34118 ;;		None
 34119 ;; Auto vars:     Size  Location     Type
 34120 ;;  tClearPin       1    0[COMRAM] unsigned char 
 34121 ;; Return value:  Size  Location     Type
 34122 ;;                  1    wreg      void 
 34123 ;; Registers used:
 34124 ;;		wreg
 34125 ;; Tracked objects:
 34126 ;;		On entry : 0/0
 34127 ;;		On exit  : 0/0
 34128 ;;		Unchanged: 0/0
 34129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34130 ;;      Params:         0       0       0       0       0       0       0       0       0
 34131 ;;      Locals:         1       0       0       0       0       0       0       0       0
 34132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34133 ;;      Totals:         1       0       0       0       0       0       0       0       0
 34134 ;;Total ram usage:        1 bytes
 34135 ;; Hardware stack levels used:    1
 34136 ;; This function calls:
 34137 ;;		Nothing
 34138 ;; This function is called by:
 34139 ;;		_InterruptPinRX
 34140 ;; This function uses a non-reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text155
 34144  006422                     __ptext155:
 34145                           	opt stack 0
 34146  006422                     _clearInterruptPinRX:
 34147                           	opt stack 19
 34148                           
 34149                           ;swUart.c: 237: bool tClearPin;
 34150                           ;swUart.c: 239: tClearPin = PORTBbits.RB7;
 34151                           
 34152                           ;incstack = 0
 34153  006422  0E00               	movlw	0
 34154  006424  BE81               	btfsc	3969,7,c	;volatile
 34155  006426  0E01               	movlw	1
 34156  006428  6E01               	movwf	clearInterruptPinRX@tClearPin,c
 34157                           
 34158                           ;swUart.c: 241: INTCONbits.IOCIF = 0;
 34159  00642A  90F2               	bcf	intcon,0,c	;volatile
 34160  00642C  0012               	return		;funcret
 34161  00642E                     __end_of_clearInterruptPinRX:
 34162                           	opt stack 0
 34163                           tosu	equ	0xFFF
 34164                           tosh	equ	0xFFE
 34165                           tosl	equ	0xFFD
 34166                           pclatu	equ	0xFFB
 34167                           pclath	equ	0xFFA
 34168                           tblptru	equ	0xFF8
 34169                           tblptrh	equ	0xFF7
 34170                           tblptrl	equ	0xFF6
 34171                           tablat	equ	0xFF5
 34172                           prodh	equ	0xFF4
 34173                           prodl	equ	0xFF3
 34174                           intcon	equ	0xFF2
 34175                           intcon2	equ	0xFF1
 34176                           intcon3	equ	0xFF0
 34177                           indf0	equ	0xFEF
 34178                           postinc0	equ	0xFEE
 34179                           fsr0h	equ	0xFEA
 34180                           fsr0l	equ	0xFE9
 34181                           wreg	equ	0xFE8
 34182                           indf1	equ	0xFE7
 34183                           postdec1	equ	0xFE5
 34184                           fsr1h	equ	0xFE2
 34185                           fsr1l	equ	0xFE1
 34186                           indf2	equ	0xFDF
 34187                           postinc2	equ	0xFDE
 34188                           postdec2	equ	0xFDD
 34189                           plusw2	equ	0xFDB
 34190                           fsr2h	equ	0xFDA
 34191                           fsr2l	equ	0xFD9
 34192                           status	equ	0xFD8
 34193                           
 34194 ;; *************** function _TMR0_Clear *****************
 34195 ;; Defined at:
 34196 ;;		line 142 in file "../Includes/MccGenerated/tmr0.c"
 34197 ;; Parameters:    Size  Location     Type
 34198 ;;		None
 34199 ;; Auto vars:     Size  Location     Type
 34200 ;;		None
 34201 ;; Return value:  Size  Location     Type
 34202 ;;                  1    wreg      void 
 34203 ;; Registers used:
 34204 ;;		None
 34205 ;; Tracked objects:
 34206 ;;		On entry : 0/0
 34207 ;;		On exit  : 0/0
 34208 ;;		Unchanged: 0/0
 34209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34210 ;;      Params:         0       0       0       0       0       0       0       0       0
 34211 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34212 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34213 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34214 ;;Total ram usage:        0 bytes
 34215 ;; Hardware stack levels used:    1
 34216 ;; This function calls:
 34217 ;;		Nothing
 34218 ;; This function is called by:
 34219 ;;		_InterruptPinRX
 34220 ;;		_InterruptTimerUART
 34221 ;; This function uses a non-reentrant model
 34222 ;;
 34223                           
 34224                           	psect	text156
 34225  0064B8                     __ptext156:
 34226                           	opt stack 0
 34227  0064B8                     _TMR0_Clear:
 34228                           	opt stack 19
 34229                           
 34230                           ;tmr0.c: 145: INTCONbits.TMR0IF = 0;
 34231                           
 34232                           ;incstack = 0
 34233  0064B8  94F2               	bcf	intcon,2,c	;volatile
 34234  0064BA  0012               	return		;funcret
 34235  0064BC                     __end_of_TMR0_Clear:
 34236                           	opt stack 0
 34237                           tosu	equ	0xFFF
 34238                           tosh	equ	0xFFE
 34239                           tosl	equ	0xFFD
 34240                           pclatu	equ	0xFFB
 34241                           pclath	equ	0xFFA
 34242                           tblptru	equ	0xFF8
 34243                           tblptrh	equ	0xFF7
 34244                           tblptrl	equ	0xFF6
 34245                           tablat	equ	0xFF5
 34246                           prodh	equ	0xFF4
 34247                           prodl	equ	0xFF3
 34248                           intcon	equ	0xFF2
 34249                           intcon2	equ	0xFF1
 34250                           intcon3	equ	0xFF0
 34251                           indf0	equ	0xFEF
 34252                           postinc0	equ	0xFEE
 34253                           fsr0h	equ	0xFEA
 34254                           fsr0l	equ	0xFE9
 34255                           wreg	equ	0xFE8
 34256                           indf1	equ	0xFE7
 34257                           postdec1	equ	0xFE5
 34258                           fsr1h	equ	0xFE2
 34259                           fsr1l	equ	0xFE1
 34260                           indf2	equ	0xFDF
 34261                           postinc2	equ	0xFDE
 34262                           postdec2	equ	0xFDD
 34263                           plusw2	equ	0xFDB
 34264                           fsr2h	equ	0xFDA
 34265                           fsr2l	equ	0xFD9
 34266                           status	equ	0xFD8
 34267                           
 34268 ;; *************** function _EUSART_Transmit_ISR *****************
 34269 ;; Defined at:
 34270 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 34271 ;; Parameters:    Size  Location     Type
 34272 ;;		None
 34273 ;; Auto vars:     Size  Location     Type
 34274 ;;		None
 34275 ;; Return value:  Size  Location     Type
 34276 ;;                  1    wreg      void 
 34277 ;; Registers used:
 34278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34279 ;; Tracked objects:
 34280 ;;		On entry : 0/0
 34281 ;;		On exit  : 0/0
 34282 ;;		Unchanged: 0/0
 34283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34284 ;;      Params:         0       0       0       0       0       0       0       0       0
 34285 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34286 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34287 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34288 ;;Total ram usage:        0 bytes
 34289 ;; Hardware stack levels used:    1
 34290 ;; This function calls:
 34291 ;;		Nothing
 34292 ;; This function is called by:
 34293 ;;		_INTERRUPT_InterruptManager
 34294 ;; This function uses a non-reentrant model
 34295 ;;
 34296                           
 34297                           	psect	text157
 34298  006004                     __ptext157:
 34299                           	opt stack 0
 34300  006004                     _EUSART_Transmit_ISR:
 34301                           	opt stack 20
 34302                           
 34303                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 34304                           
 34305                           ;incstack = 0
 34306  006004  0E40               	movlw	64
 34307  006006  0100               	movlb	0	; () banked
 34308  006008  61E4               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 34309  00600A  D012               	goto	i2l1337
 34310                           
 34311                           ; BSR set to: 0
 34312                           ;eusart.c: 167: {
 34313                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 34314  00600C  51E5               	movf	_eusartTxTail& (0+255),w,b
 34315  00600E  0D01               	mullw	1
 34316  006010  0E00               	movlw	low _eusartTxBuffer
 34317  006012  24F3               	addwf	prodl,w,c
 34318  006014  6ED9               	movwf	fsr2l,c
 34319  006016  0E03               	movlw	high _eusartTxBuffer
 34320  006018  20F4               	addwfc	prodh,w,c
 34321  00601A  6EDA               	movwf	fsr2h,c
 34322  00601C  50DF               	movf	indf2,w,c
 34323  00601E  6EAD               	movwf	4013,c	;volatile
 34324                           
 34325                           ; BSR set to: 0
 34326  006020  2BE5               	incf	_eusartTxTail& (0+255),f,b
 34327                           
 34328                           ; BSR set to: 0
 34329                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 34330  006022  0E3F               	movlw	63
 34331  006024  65E5               	cpfsgt	_eusartTxTail& (0+255),b
 34332  006026  D002               	goto	i2l1338
 34333                           
 34334                           ; BSR set to: 0
 34335                           ;eusart.c: 170: {
 34336                           ;eusart.c: 171: eusartTxTail = 0;
 34337  006028  0E00               	movlw	0
 34338  00602A  6FE5               	movwf	_eusartTxTail& (0+255),b
 34339  00602C                     i2l1338:
 34340                           
 34341                           ; BSR set to: 0
 34342                           ;eusart.c: 172: }
 34343                           ;eusart.c: 173: eusartTxBufferRemaining++;
 34344                           
 34345                           ; BSR set to: 0
 34346  00602C  2BE4               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 34347                           
 34348                           ;eusart.c: 174: }
 34349  00602E  0012               	return	
 34350  006030                     i2l1337:
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;eusart.c: 175: else
 34354                           ;eusart.c: 176: {
 34355                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 34356  006030  989D               	bcf	3997,4,c	;volatile
 34357  006032  0012               	return	
 34358  006034                     __end_of_EUSART_Transmit_ISR:
 34359                           	opt stack 0
 34360                           tosu	equ	0xFFF
 34361                           tosh	equ	0xFFE
 34362                           tosl	equ	0xFFD
 34363                           pclatu	equ	0xFFB
 34364                           pclath	equ	0xFFA
 34365                           tblptru	equ	0xFF8
 34366                           tblptrh	equ	0xFF7
 34367                           tblptrl	equ	0xFF6
 34368                           tablat	equ	0xFF5
 34369                           prodh	equ	0xFF4
 34370                           prodl	equ	0xFF3
 34371                           intcon	equ	0xFF2
 34372                           intcon2	equ	0xFF1
 34373                           intcon3	equ	0xFF0
 34374                           indf0	equ	0xFEF
 34375                           postinc0	equ	0xFEE
 34376                           fsr0h	equ	0xFEA
 34377                           fsr0l	equ	0xFE9
 34378                           wreg	equ	0xFE8
 34379                           indf1	equ	0xFE7
 34380                           postdec1	equ	0xFE5
 34381                           fsr1h	equ	0xFE2
 34382                           fsr1l	equ	0xFE1
 34383                           indf2	equ	0xFDF
 34384                           postinc2	equ	0xFDE
 34385                           postdec2	equ	0xFDD
 34386                           plusw2	equ	0xFDB
 34387                           fsr2h	equ	0xFDA
 34388                           fsr2l	equ	0xFD9
 34389                           status	equ	0xFD8
 34390                           
 34391 ;; *************** function _EUSART_Receive_ISR *****************
 34392 ;; Defined at:
 34393 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 34394 ;; Parameters:    Size  Location     Type
 34395 ;;		None
 34396 ;; Auto vars:     Size  Location     Type
 34397 ;;		None
 34398 ;; Return value:  Size  Location     Type
 34399 ;;                  1    wreg      void 
 34400 ;; Registers used:
 34401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34402 ;; Tracked objects:
 34403 ;;		On entry : 0/0
 34404 ;;		On exit  : 0/0
 34405 ;;		Unchanged: 0/0
 34406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34407 ;;      Params:         0       0       0       0       0       0       0       0       0
 34408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34411 ;;Total ram usage:        0 bytes
 34412 ;; Hardware stack levels used:    1
 34413 ;; This function calls:
 34414 ;;		Nothing
 34415 ;; This function is called by:
 34416 ;;		_INTERRUPT_InterruptManager
 34417 ;; This function uses a non-reentrant model
 34418 ;;
 34419                           
 34420                           	psect	text158
 34421  006034                     __ptext158:
 34422                           	opt stack 0
 34423  006034                     _EUSART_Receive_ISR:
 34424                           	opt stack 20
 34425                           
 34426                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 34427                           
 34428                           ; BSR set to: 0
 34429                           ;incstack = 0
 34430  006034  A2AB               	btfss	4011,1,c	;volatile
 34431  006036  D003               	goto	i2l1343
 34432                           
 34433                           ;eusart.c: 184: {
 34434                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 34435  006038  98AB               	bcf	4011,4,c	;volatile
 34436                           
 34437                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 34438  00603A  88AB               	bsf	4011,4,c	;volatile
 34439                           
 34440                           ;eusart.c: 189: }
 34441  00603C  0012               	return	
 34442  00603E                     i2l1343:
 34443                           
 34444                           ;eusart.c: 190: else
 34445                           ;eusart.c: 191: {
 34446                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 34447  00603E  0100               	movlb	0	; () banked
 34448  006040  51E3               	movf	_eusartRxHead& (0+255),w,b
 34449  006042  0D01               	mullw	1
 34450  006044  0E00               	movlw	low _eusartRxBuffer
 34451  006046  24F3               	addwf	prodl,w,c
 34452  006048  6ED9               	movwf	fsr2l,c
 34453  00604A  0E02               	movlw	high _eusartRxBuffer
 34454  00604C  20F4               	addwfc	prodh,w,c
 34455  00604E  6EDA               	movwf	fsr2h,c
 34456  006050  CFAE FFDF          	movff	4014,indf2	;volatile
 34457                           
 34458                           ; BSR set to: 0
 34459  006054  2BE3               	incf	_eusartRxHead& (0+255),f,b
 34460                           
 34461                           ; BSR set to: 0
 34462                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 34463  006056  0E3F               	movlw	63
 34464  006058  65E3               	cpfsgt	_eusartRxHead& (0+255),b
 34465  00605A  D002               	goto	i2l1345
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;eusart.c: 195: {
 34469                           ;eusart.c: 196: eusartRxHead = 0;
 34470  00605C  0E00               	movlw	0
 34471  00605E  6FE3               	movwf	_eusartRxHead& (0+255),b
 34472  006060                     i2l1345:
 34473                           
 34474                           ; BSR set to: 0
 34475                           ;eusart.c: 197: }
 34476                           ;eusart.c: 198: eusartRxCount++;
 34477                           
 34478                           ; BSR set to: 0
 34479  006060  2BF7               	incf	_eusartRxCount& (0+255),f,b	;volatile
 34480  006062  0012               	return	
 34481  006064                     __end_of_EUSART_Receive_ISR:
 34482                           	opt stack 0
 34483                           tosu	equ	0xFFF
 34484                           tosh	equ	0xFFE
 34485                           tosl	equ	0xFFD
 34486                           pclatu	equ	0xFFB
 34487                           pclath	equ	0xFFA
 34488                           tblptru	equ	0xFF8
 34489                           tblptrh	equ	0xFF7
 34490                           tblptrl	equ	0xFF6
 34491                           tablat	equ	0xFF5
 34492                           prodh	equ	0xFF4
 34493                           prodl	equ	0xFF3
 34494                           intcon	equ	0xFF2
 34495                           intcon2	equ	0xFF1
 34496                           intcon3	equ	0xFF0
 34497                           indf0	equ	0xFEF
 34498                           postinc0	equ	0xFEE
 34499                           fsr0h	equ	0xFEA
 34500                           fsr0l	equ	0xFE9
 34501                           wreg	equ	0xFE8
 34502                           indf1	equ	0xFE7
 34503                           postdec1	equ	0xFE5
 34504                           fsr1h	equ	0xFE2
 34505                           fsr1l	equ	0xFE1
 34506                           indf2	equ	0xFDF
 34507                           postinc2	equ	0xFDE
 34508                           postdec2	equ	0xFDD
 34509                           plusw2	equ	0xFDB
 34510                           fsr2h	equ	0xFDA
 34511                           fsr2l	equ	0xFD9
 34512                           status	equ	0xFD8
 34513                           
 34514 ;; *************** function _CMP1_ISR *****************
 34515 ;; Defined at:
 34516 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 34517 ;; Parameters:    Size  Location     Type
 34518 ;;		None
 34519 ;; Auto vars:     Size  Location     Type
 34520 ;;		None
 34521 ;; Return value:  Size  Location     Type
 34522 ;;                  1    wreg      void 
 34523 ;; Registers used:
 34524 ;;		None
 34525 ;; Tracked objects:
 34526 ;;		On entry : 0/0
 34527 ;;		On exit  : 0/0
 34528 ;;		Unchanged: 0/0
 34529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34530 ;;      Params:         0       0       0       0       0       0       0       0       0
 34531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34533 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34534 ;;Total ram usage:        0 bytes
 34535 ;; Hardware stack levels used:    1
 34536 ;; This function calls:
 34537 ;;		Nothing
 34538 ;; This function is called by:
 34539 ;;		_INTERRUPT_InterruptManager
 34540 ;; This function uses a non-reentrant model
 34541 ;;
 34542                           
 34543                           	psect	text159
 34544  0064BC                     __ptext159:
 34545                           	opt stack 0
 34546  0064BC                     _CMP1_ISR:
 34547                           	opt stack 20
 34548                           
 34549                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 34550                           
 34551                           ;incstack = 0
 34552  0064BC  9CA1               	bcf	4001,6,c	;volatile
 34553  0064BE  0012               	return		;funcret
 34554  0064C0                     __end_of_CMP1_ISR:
 34555                           	opt stack 0
 34556                           tosu	equ	0xFFF
 34557                           tosh	equ	0xFFE
 34558                           tosl	equ	0xFFD
 34559                           pclatu	equ	0xFFB
 34560                           pclath	equ	0xFFA
 34561                           tblptru	equ	0xFF8
 34562                           tblptrh	equ	0xFF7
 34563                           tblptrl	equ	0xFF6
 34564                           tablat	equ	0xFF5
 34565                           prodh	equ	0xFF4
 34566                           prodl	equ	0xFF3
 34567                           intcon	equ	0xFF2
 34568                           intcon2	equ	0xFF1
 34569                           intcon3	equ	0xFF0
 34570                           indf0	equ	0xFEF
 34571                           postinc0	equ	0xFEE
 34572                           fsr0h	equ	0xFEA
 34573                           fsr0l	equ	0xFE9
 34574                           wreg	equ	0xFE8
 34575                           indf1	equ	0xFE7
 34576                           postdec1	equ	0xFE5
 34577                           fsr1h	equ	0xFE2
 34578                           fsr1l	equ	0xFE1
 34579                           indf2	equ	0xFDF
 34580                           postinc2	equ	0xFDE
 34581                           postdec2	equ	0xFDD
 34582                           plusw2	equ	0xFDB
 34583                           fsr2h	equ	0xFDA
 34584                           fsr2l	equ	0xFD9
 34585                           status	equ	0xFD8
 34586                           tosu	equ	0xFFF
 34587                           tosh	equ	0xFFE
 34588                           tosl	equ	0xFFD
 34589                           pclatu	equ	0xFFB
 34590                           pclath	equ	0xFFA
 34591                           tblptru	equ	0xFF8
 34592                           tblptrh	equ	0xFF7
 34593                           tblptrl	equ	0xFF6
 34594                           tablat	equ	0xFF5
 34595                           prodh	equ	0xFF4
 34596                           prodl	equ	0xFF3
 34597                           intcon	equ	0xFF2
 34598                           intcon2	equ	0xFF1
 34599                           intcon3	equ	0xFF0
 34600                           indf0	equ	0xFEF
 34601                           postinc0	equ	0xFEE
 34602                           fsr0h	equ	0xFEA
 34603                           fsr0l	equ	0xFE9
 34604                           wreg	equ	0xFE8
 34605                           indf1	equ	0xFE7
 34606                           postdec1	equ	0xFE5
 34607                           fsr1h	equ	0xFE2
 34608                           fsr1l	equ	0xFE1
 34609                           indf2	equ	0xFDF
 34610                           postinc2	equ	0xFDE
 34611                           postdec2	equ	0xFDD
 34612                           plusw2	equ	0xFDB
 34613                           fsr2h	equ	0xFDA
 34614                           fsr2l	equ	0xFD9
 34615                           status	equ	0xFD8
 34616                           
 34617                           	psect	text160
 34618  000000                     __ptext160:
 34619                           	opt stack 0
 34620                           tosu	equ	0xFFF
 34621                           tosh	equ	0xFFE
 34622                           tosl	equ	0xFFD
 34623                           pclatu	equ	0xFFB
 34624                           pclath	equ	0xFFA
 34625                           tblptru	equ	0xFF8
 34626                           tblptrh	equ	0xFF7
 34627                           tblptrl	equ	0xFF6
 34628                           tablat	equ	0xFF5
 34629                           prodh	equ	0xFF4
 34630                           prodl	equ	0xFF3
 34631                           intcon	equ	0xFF2
 34632                           intcon2	equ	0xFF1
 34633                           intcon3	equ	0xFF0
 34634                           indf0	equ	0xFEF
 34635                           postinc0	equ	0xFEE
 34636                           fsr0h	equ	0xFEA
 34637                           fsr0l	equ	0xFE9
 34638                           wreg	equ	0xFE8
 34639                           indf1	equ	0xFE7
 34640                           postdec1	equ	0xFE5
 34641                           fsr1h	equ	0xFE2
 34642                           fsr1l	equ	0xFE1
 34643                           indf2	equ	0xFDF
 34644                           postinc2	equ	0xFDE
 34645                           postdec2	equ	0xFDD
 34646                           plusw2	equ	0xFDB
 34647                           fsr2h	equ	0xFDA
 34648                           fsr2l	equ	0xFD9
 34649                           status	equ	0xFD8
 34650                           
 34651                           	psect	rparam
 34652  0000                     tosu	equ	0xFFF
 34653                           tosh	equ	0xFFE
 34654                           tosl	equ	0xFFD
 34655                           pclatu	equ	0xFFB
 34656                           pclath	equ	0xFFA
 34657                           tblptru	equ	0xFF8
 34658                           tblptrh	equ	0xFF7
 34659                           tblptrl	equ	0xFF6
 34660                           tablat	equ	0xFF5
 34661                           prodh	equ	0xFF4
 34662                           prodl	equ	0xFF3
 34663                           intcon	equ	0xFF2
 34664                           intcon2	equ	0xFF1
 34665                           intcon3	equ	0xFF0
 34666                           indf0	equ	0xFEF
 34667                           postinc0	equ	0xFEE
 34668                           fsr0h	equ	0xFEA
 34669                           fsr0l	equ	0xFE9
 34670                           wreg	equ	0xFE8
 34671                           indf1	equ	0xFE7
 34672                           postdec1	equ	0xFE5
 34673                           fsr1h	equ	0xFE2
 34674                           fsr1l	equ	0xFE1
 34675                           indf2	equ	0xFDF
 34676                           postinc2	equ	0xFDE
 34677                           postdec2	equ	0xFDD
 34678                           plusw2	equ	0xFDB
 34679                           fsr2h	equ	0xFDA
 34680                           fsr2l	equ	0xFD9
 34681                           status	equ	0xFD8
 34682                           
 34683                           	psect	temp
 34684  00005E                     btemp:
 34685                           	opt stack 0
 34686  00005E                     	ds	1
 34687  0000                     int$flags	set	btemp
 34688  0000                     wtemp6	set	btemp+1
 34689                           tosu	equ	0xFFF
 34690                           tosh	equ	0xFFE
 34691                           tosl	equ	0xFFD
 34692                           pclatu	equ	0xFFB
 34693                           pclath	equ	0xFFA
 34694                           tblptru	equ	0xFF8
 34695                           tblptrh	equ	0xFF7
 34696                           tblptrl	equ	0xFF6
 34697                           tablat	equ	0xFF5
 34698                           prodh	equ	0xFF4
 34699                           prodl	equ	0xFF3
 34700                           intcon	equ	0xFF2
 34701                           intcon2	equ	0xFF1
 34702                           intcon3	equ	0xFF0
 34703                           indf0	equ	0xFEF
 34704                           postinc0	equ	0xFEE
 34705                           fsr0h	equ	0xFEA
 34706                           fsr0l	equ	0xFE9
 34707                           wreg	equ	0xFE8
 34708                           indf1	equ	0xFE7
 34709                           postdec1	equ	0xFE5
 34710                           fsr1h	equ	0xFE2
 34711                           fsr1l	equ	0xFE1
 34712                           indf2	equ	0xFDF
 34713                           postinc2	equ	0xFDE
 34714                           postdec2	equ	0xFDD
 34715                           plusw2	equ	0xFDB
 34716                           fsr2h	equ	0xFDA
 34717                           fsr2l	equ	0xFD9
 34718                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    974
    Data        11
    BSS         1033
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     96     160
    BANK1           256      0     249
    BANK2           256      0     224
    BANK3           256      0      64
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0     200
    BANK7           256      0     200

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_100(CODE[7]), STR_98(CODE[7]), STR_96(CODE[7]), STR_93(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_92(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6318_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6318_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6318_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6318_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4681$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4671$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4671$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4647$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4647$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4647$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4647$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(3) Largest target is 32767
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), ROM(CODE[32767]), 
		 -> STR_192(CODE[12]), STR_191(CODE[8]), STR_190(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_185(CODE[5]), STR_184(CODE[8]), STR_183(CODE[8]), STR_182(CODE[9]), 
		 -> STR_165(CODE[16]), STR_164(CODE[17]), STR_163(CODE[17]), STR_162(CODE[4]), 
		 -> STR_161(CODE[4]), STR_160(CODE[4]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[16]), STR_154(CODE[17]), 
		 -> STR_153(CODE[4]), STR_152(CODE[4]), STR_151(CODE[4]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[16]), STR_139(CODE[12]), STR_138(CODE[17]), 
		 -> STR_137(CODE[16]), STR_136(CODE[16]), STR_135(CODE[16]), STR_134(CODE[15]), 
		 -> STR_133(CODE[15]), STR_132(CODE[16]), STR_131(CODE[4]), STR_130(CODE[3]), 
		 -> STR_129(CODE[3]), STR_128(CODE[3]), STR_127(CODE[3]), STR_126(CODE[2]), 
		 -> STR_125(CODE[5]), STR_124(CODE[7]), STR_123(CODE[17]), STR_122(CODE[17]), 
		 -> STR_121(CODE[2]), STR_120(CODE[7]), STR_119(CODE[7]), STR_118(CODE[16]), 
		 -> STR_117(CODE[16]), STR_116(CODE[15]), STR_115(CODE[15]), STR_114(CODE[17]), 
		 -> STR_113(CODE[16]), STR_112(CODE[17]), STR_111(CODE[17]), STR_110(CODE[7]), 
		 -> STR_109(CODE[10]), STR_108(CODE[17]), STR_107(CODE[16]), STR_106(CODE[16]), 
		 -> STR_105(CODE[16]), STR_104(CODE[16]), STR_103(CODE[17]), STR_102(CODE[17]), 
		 -> STR_101(CODE[16]), STR_99(CODE[19]), STR_97(CODE[17]), STR_95(CODE[17]), 
		 -> STR_94(CODE[17]), responseData(BANK2[32]), responsePortNum(BANK1[3]), STR_91(CODE[13]), 
		 -> STR_90(CODE[12]), STR_89(CODE[12]), STR_84(CODE[18]), STR_83(CODE[13]), 
		 -> STR_82(CODE[17]), STR_81(CODE[16]), STR_80(CODE[17]), STR_79(CODE[17]), 
		 -> STR_78(CODE[16]), STR_77(CODE[17]), STR_76(CODE[17]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), 
		 -> STR_62(CODE[11]), STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), 
		 -> STR_42(CODE[17]), STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_putStringLineN@string	PTR const unsigned char  size(2) Largest target is 200
		 -> dataFrameGPS(BANK6[200]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 100
		 -> dataBuffer(BANK1[100]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_88(CODE[12]), STR_87(CODE[12]), STR_86(CODE[14]), STR_85(CODE[14]), 
		 -> STR_75(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_189(CODE[22]), STR_188(CODE[22]), STR_187(CODE[27]), STR_186(CODE[27]), 
		 -> STR_181(CODE[26]), STR_180(CODE[26]), STR_179(CODE[26]), STR_178(CODE[26]), 
		 -> STR_177(CODE[3]), STR_176(CODE[9]), STR_175(CODE[15]), STR_174(CODE[13]), 
		 -> STR_173(CODE[13]), STR_172(CODE[13]), STR_171(CODE[13]), STR_170(CODE[13]), 
		 -> STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), STR_166(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptTimerUART->_inFIFO
    _InterruptTimerUART->_reloadTimer
    _InterruptPinRX->_clearInterruptPinRX
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _moteApp_searchFrameGPS->_oled_putint8
    _oled_putint8->_oled_putString
    _oled_putStringLineN->_oled_putChar
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  785904
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  287776
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   42213
                                             24 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   42121
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41610
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44613
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  113967
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  396871
                                             90 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
             _moteApp_searchFrameGPS
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  14    11      3  185173
                                             76 BANK0     14    11      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    2114
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44411
                                             24 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11741
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1645
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51670
                                             24 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _moteApp_searchFrameGPS                               6     6      0   48289
                                             34 BANK0      6     6      0
                          _emptyFIFO
                         _oled_clear
                _oled_putStringLineN
                       _oled_putint8
                            _outFIFO
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     132
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _outFIFO                                              1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44659
                                             24 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _oled_putStringLineN                                  5     3      2    1883
                                             12 BANK0      5     3      2
                            ___awdiv
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _emptyFIFO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   46070
                                             24 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       6     1      5   40852
                                             18 BANK0      6     1      5
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1269
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1269
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1179
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         19    19      0   30176
                                             31 COMRAM    18    18      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                 _InterruptTimerUART
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptTimerUART                                  4     4      0      90
                                              1 COMRAM     4     4      0
                     _ReadyByteFrame
                         _TMR0_Clear
                     _TMR0_StopTimer
                             _inFIFO
                        _reloadTimer
 ---------------------------------------------------------------------------------
 (12) _inFIFO                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ReadyByteFrame                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _TMR0_Clear
                _clearInterruptPinRX
                        _reloadTimer
                  i2_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_Clear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_searchFrameGPS
       _emptyFIFO
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putStringLineN
         ___awdiv
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _outFIFO
       _unhex
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _TMR0_Clear
     _clearInterruptPinRX
     _reloadTimer
     i2_TMR0_StartTimer
   _InterruptTimerUART
     _ReadyByteFrame
     _TMR0_Clear
     _TMR0_StopTimer
     _inFIFO
     _reloadTimer
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E0       9       87.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     31      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4A6      14        0.0%
DATA                 0      0     4A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 01 01:47:09 2018

                         _InterruptTimerUART 45E4             __size_of_moteApp_lightStringSize 0004  
                                 _USB_SD_Ptr 75EB                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                      ??_moteApp_testSensors 00AC                                           l60 3134  
                                         l65 3136                                           l57 30B4  
                                         l66 3148                            ??_CMP1_Initialize 0060  
                                         l67 315E                                   _USB_Buffer 0280  
                               ___awdiv@sign 0065                    _MOTEapp_getModuleResponse 5756  
                        moteRunningProcess@i 00B4                                           _cs 0120  
             moteJoiningProcess@selectButton 0079                                _USBDeviceInit 32A2  
                        ___wmul@multiplicand 0062                      EUSART_FlushBuffer@index 0060  
                     __end_of_oled_writeData 6306                         ??_moteApp_toggleLeds 0063  
                         __size_of_CDCInitEP 0068                              _timer0ReloadVal 0118  
                   USBapp_handlerState@state 0060                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000                          ?_InterruptTimerUART 0001  
             __end_of_moteApp_setLightString 5684         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l111 5F02  
                                        l112 5EEA                                          l130 380C  
                                        l123 3796                                          l127 3824  
                                        l400 259C                                          l128 37B8  
                                        l401 260A                                          l129 37E2  
                                        l403 268E                                          l420 166E  
                                        l500 0468                                          l413 1B0A  
                __end_of_USBStdGetDscHandler 303C                                          l430 17A2  
                                        l422 168C                                          l414 1524  
                                        l510 05D0                                          l423 16D0  
                                        l415 1534                                          l503 04EC  
                                        l408 1AC4                                          l440 18C2  
                                        l432 17B4                                          l416 1540  
                                        l512 0660                                          l409 1522  
                                        l361 50DC                                          l601 1308  
                                        l505 04F8                                          l442 18F0  
                                        l434 1820                                          l426 1714  
                                        l418 15DA                                          l610 1350  
                                        l602 1304                                          l530 08CC  
                                        l522 07C4                                          l514 06C8  
                                        l506 05BE                                          l355 5094  
                                        l611 1372                                          l523 0A02  
                                        l531 08D0                                          l515 06A4  
                                        l452 1A10                                          l436 1832  
                                        l428 173E                                          l612 1394  
                                        l524 07EE                                          l516 0674  
                                        l508 0624                                          l461 1A82  
                                        l453 1A20                                          l445 1908  
                                        l373 619E                                          l605 13FA  
                                        l613 13B6                                          l541 0A7C  
                                        l533 0962                                          l525 0918  
                                        l509 0600                                          l381 2486  
                                        l366 5F34                                          l438 185C  
                                        l630 2B96                                          l358 50B6  
                                        l710 4058                                          l702 607C  
                                        l614 13D8                                          l606 130E  
                                        l550 0CD4                                          l542 0AEE  
                                        l518 0704                                          l367 5F1C  
                                        l455 1A56                                          l447 1976  
                                        l631 2BA6                                          l359 50C6  
                                        l615 142A                                          l551 0C8C  
                                        l535 09AA                                          l527 0880  
                                        l391 257C                                          l383 248C  
                                        l624 2BE6                                          l632 2BB6  
                                        l560 0EEC                                          l552 0CAC  
                                        l528 088E                                          l480 0292  
                                        l384 24A2                                          l457 1A6A  
                                        l449 19EC                                          l633 2BC6  
                                        l625 2B56                                          l713 40EA  
                                        l705 608E                                          l617 1442  
                                        l609 132E                                          l561 0E18  
                                        l545 0BC2                                          l537 09F0  
                                        l481 0314                                          l385 24BA  
                                        l626 2C20                                          l634 2BD6  
                                        l730 4EF0                                          l618 1448  
                                        l570 0F6A                                          l562 0E3A  
                                        l490 037A                                          l482 02F0  
                                        l394 26A2                                          l459 1A76  
                                        l627 2B66                                          l563 0E5C  
                                        l555 0D6A                                          l483 02C0  
                                        l395 259A                                          l387 24CA  
                                        l723 3BA0                                          l820 2992  
                                        l812 292A                                          l628 2B76  
                                        l716 40F8                                          l732 4F14  
                                        l580 1076                                          l556 0F14  
                                        l564 0E7E                                          l388 24D8  
                                        l813 2942                                          l629 2B86  
                                        l581 1098                                          l557 0EC2  
                                        l565 0EA0                                          l549 0C3A  
                                        l477 035E                                          l485 0350  
                                        l670 5E78                                          l638 6252  
                                        l822 2998                                          l654 5794  
                                        l734 4F38                                          l590 118A  
                                        l582 10BA                                          l574 0FE4  
                                        l558 0DF6                                          l478 0286  
                                        l583 10DC                                          l495 037C  
                                        l487 0372                                          l399 26BE  
                                        l840 2AE2                                          l728 4ECC  
                                        l752 5306                                          l576 1142  
                                        l584 10FE                                          l568 0F44  
                                        l809 2AEA                                          l833 2A14  
                                        l745 57CA                                          l489 14BA  
                                        l593 11AE                                          l585 1120  
                                        l577 1056                                          l930 41FE  
                                        l594 11D4                                          l931 4266  
                                        l835 2AB2                                          l827 29A4  
                                        l819 2956                                          l659 57B8  
                                        l747 57FC                                          l755 5336  
                                        l691 45D6                                          l595 11FA  
                                        l587 1184                                          l579 1172  
                                        l499 03F6                                          l924 4296  
                                        l932 4270                                          l836 2A9A  
                                        l828 29CE                                          l748 5812  
                                        l764 5386                                          l692 4594  
                                        l596 1220                                          _BDT 000400  
                                        l925 41FC                                          l669 5E90  
                                        l829 29E4                                          l765 5398  
                                        l589 1268                                          l597 1246  
                                        l934 4276                                          l782 5A40  
                                        l686 453C                                          l598 1292  
                                        l839 2ACE                                          l783 5A52  
                                        l775 5C3A                                          l687 4524  
                                        l599 12E8                                          _CKE 007E3E  
                                        l776 5C4C                                          l768 53BA  
                                        l961 3E1A                                          l929 42AC  
                                        l697 60AA                                          l769 53CC  
                                        l689 455E                                          l794 5664  
                                        l963 3E6A                                          l699 60BC  
                                        l964 3E92                                          l959 3DEC  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                          _oled_putStringLineN 59D6  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 1516  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 0038                                          _log 02E8  
                                 _USBSuspend 6116                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4F50                 __end_of_moteApp_clearCommand 63FC  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 6384  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 3170  
                             _USBDeviceState 00EF                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0078                                 ___fltol@exp1 0069  
                                       l1020 56BE                                         l1021 56BA  
                                       l1111 4A54                                         l2000 46C0  
                                       l1112 4ACE                                         l1025 56E2  
                                       l1017 56C2                                         l2002 46EA  
                                       l1026 56E4                                         l1131 53F4  
                                       l2004 4746                                         l1124 59DC  
                                       l1141 61C8                                         l2022 5ED2  
                                       l2023 5ED0                                         l1119 510E  
                                       l1152 6182                                         l1321 5D9E  
                                       l1322 5D9C                                         l1331 5CB6  
                                       l1324 5DC6                                         l1332 5CDA  
                                       l1333 5CD8                                         l1270 5E00  
                                       l2321 2E08                                         l2330 2E74  
                                       l2322 2E12                                         l1274 63A6  
                                       l2323 2E40                                         l2315 2DFC  
                            _timer3ReloadVal 0036                                         l2325 2EFE  
                                       l2333 2EC2                                         l2317 2DE6  
                                       l2421 4BC0                                         l1349 5BAC  
                                       l2334 2EA0                                         l2326 2E52  
                                       l2430 4C3E                                         l2422 4BD4  
                                       l1439 6328                                         l2327 2E56  
                                       l2319 2DF0                                         l2424 4BF2  
                                       l2520 4FF2                                         l2337 2EDC  
                                       l2329 2E96                                         l2425 4BE6  
                                       l2521 5002                                         l2338 2EE0  
                                       l2290 487E                                         l2291 48AA  
                                       l2523 5020                                         l2292 4884  
                                       l2428 4C1A                                         l2524 5018  
                                       l2540 558E                   USBConfigureEndpoint@handle 0007  
                                       l2285 48D0                                         l2429 4C28  
                                       l2541 5598                                         l2533 5554  
                                       l2542 55A6                                         l2534 5560  
                                       l2287 484A                                         l2527 5040  
                                       l2528 504A                                         l2536 5576  
                                       l2289 4852                                         l2297 61FA  
                                       l2529 5058                                         l2537 556E  
                                       l1657 5D44                                         l2801 1F38  
                                       l2802 1EFC                                         l2811 2012  
                                       l2812 1FD8                                         l2821 20AA  
                                       l2805 1FB4                                         l2806 1F92  
                                       l2902 1DA8                                         l2590 3F48  
                                       l2582 3EB8                                         l2815 1FFC  
                                       l2807 1FA0                                         l2591 3F3C  
                                       l1960 32E8                                         l2912 5A82  
                                       l2920 4FC0                                         l2840 217A  
                                       l2824 20CE                                         l2816 2000  
                                       l2808 1FA4                                         l2904 1DEC  
                                       l2584 3F24                                         l2913 5A78  
                                       l2921 4F52                                         l2841 2182  
                                       l2833 210E                                         l2905 1E0A  
                                       l2593 3F64                                         l2585 3F14  
                                       l1962 3322                                         l2770 5B8A  
                                       l2682 5C7E                                         l2922 4FB8  
                                       l2842 2184                                         l2826 20E4  
                                       l2850 21D2                                         l2930 2CB8  
                                       l1963 3310                                         l2771 5B94  
                                       l2683 5C78                                         l2819 209A  
                                       l2851 21CE                                         l2907 1E2E  
                                       l2931 2CD6                                         l2836 2154  
                                       l2828 20EE                                         l2860 232E  
                                       l2908 1E4C                                         l2940 2D4C  
                                       l2780 5B46                                         l1965 334A  
                                       l2861 22DE                                         l2933 2CE8  
                                       l2781 5B24                                         l2766 5B72  
                                       l2686 5C94                                         l2862 2306  
                                       l2854 2212                                         l2934 2CDC  
                                       l2767 5B6A                                         l2687 5C9C  
                                       l2855 220E                                         l2880 243A  
                                       l2864 232C                                         l2944 2D76  
                                       l2936 2D26                                         l2793 1E94  
                                       l2857 2258                                         l2945 2DA8  
                                       l2937 2D0E                                         l2929 2CA8  
                                       l2786 5FC0                                         l2794 1E90  
                                       l2874 239A                                         l2890 1B92  
                                       l2787 5FAE                                         l2867 2362  
                                       l2859 2280                                         l2891 1BB0  
                                       l2939 2D58                                         l2876 23DE  
                                       l2868 2344                                         l2884 1B42  
                                       l2877 2402                                         l2885 1B3E  
                                       l2798 1EDC                                         l2878 242C  
                                       l2886 1B52                                         l2799 1ED8  
                                       l2879 2438                                         l2895 1D70  
                                       l2896 1D52                                         l2888 1B82  
                                       l2889 1B7E                                         l8163 5106  
                                       l8173 5CA4                                         l8449 5B24  
                                       l8299 61C0                                         l8803 5BA4  
                                       l9387 242C                                         l9821 52FE  
                                       l8881 565C                                         l9931 4F30  
                                       l9907 4EE8                                         l9919 4F0C  
                                       STR_1 7D1F                                         STR_2 7D01  
                                       l9865 4F52                                         STR_3 7D10  
                                       STR_4 7F3E                                         STR_5 7D8B  
                                       STR_6 7D98                                         STR_7 7CC4  
                                       STR_8 7E71                                         l9895 4EC4  
                                       STR_9 7F47                                         l9969 57C2  
                            _lightStringSize 0050                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0020                                         _PEIE 007F96  
                                       u7220 1FBC                                         u8020 3ED6  
                                       u8025 3ECC                                         u7170 1F68  
                                       u7180 1F78                                         u8060 3F4E  
                                       u7430 2160                                         u7350 20F2  
                                       u7190 1F7A                        ??_USBCtrlTrfTxService 0001  
                                       u8320 5364                                         u9120 3774  
                                       u8225 5D54                                         u9050 4BF6  
                                       u8090 5C82                                         u8226 5D56  
                                       u8170 2D62                                         u8410 4EE4  
                                       u7380 210A                                         u6820 5BC4  
                                       u8260 5A5C                                         u8430 4F08  
                                       u8510 53D6                                         _UCFG 000F62  
                                       u9400 5692                                         u8360 4F82  
                                       u7640 2396                                         u8280 5C56  
                                       u6770 5414                                         u9090 5B76  
                                       u8450 4F2C                                         u8540 5816  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       u6790 5442                                         u8390 5AB8  
                                       u7670 23EC                                         u7830 1DA4  
                                       u8800 2DDA                                         u7920 5024  
                                       u7680 2410                                         u8640 40C8  
                                       u6777 540A                                         u7770 1B9E  
                                       u6890 5680                                         u8490 53A2  
                                       u8570 457A                                         _UEIE 000F66  
                                       u8740 483E                                         u7860 1DFA  
                                       u7780 1D14                                         u6797 5438  
                                       u9630 1A0C                                         u7870 1E18  
                                       u8808 2DDE                                         u7785 1D0A  
                                       u8748 4842                                         u7980 557A  
                                       u9900 0712                                         u9680 1A8A  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u8890 2ECA                                         u9780 038A  
                                       _TMR0 000FD6                                         _TMR2 000FBC  
                                       _TMR3 000FB2                                         u9980 08D4  
                            _CDCDataInHandle 0114       USBStdFeatureReqHandler@current_ep_data 0019  
                       ??_InterruptTimerUART 0002                                         _pDst 0116  
                                       _main 303C                     ??i2_USBTransferOnePacket 0005  
                            _TMR0_StartTimer 64A8            __end_of_moteApp_add8bToDataBuffer 4A42  
                       ?_oled_putStringLineN 006C                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0106  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 5EAA  
                                       btemp 005E                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 6478  
                                       start 00FE                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 640A  
                            _TMR3_Initialize 61FE                                  _storedLight 01EE  
                __end_of_USBapp_exitCDCState 6442                             __end_of_CMP1_ISR 64C0  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 3CD6  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 1414  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 6492                         ??_moteJoiningProcess 007A  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 6492  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 6282                       _moteApp_getLightString 640A  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 63EC                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 6332                                        l10019 4556  
                                      l11253 0886                                        l10831 166A  
                                      l11707 5FAE                                        l10931 1972  
                                      l10909 18BE                                        l10943 19E8  
                                      l11913 3342                                        l10893 182E  
                                      l10877 17B0                                        l10959 1A52  
                                      l11885 32E0                                ___fltol@sign1 0068  
                            __end_of___almod 4C50                              __end_of___fladd 21A0  
                                      ?_main 0001                              __end_of___fldiv 2456  
                            __end_of___awdiv 5062                              __end_of___lbdiv 5CA0  
                                      _EEADR 000FA9                                        STR_10 7DF5  
                                      STR_11 7E7D                                        STR_20 7F50  
                                      STR_12 7E1C                                        STR_21 7FFD  
                                      STR_13 7E02                                        STR_30 7EFD  
                                      STR_14 7E0F                                        STR_22 7A83  
                                      STR_23 7AC8                                        STR_31 7FB9  
                                      STR_15 7EC0                                        STR_16 7F07  
                                      STR_24 7EDF                                        STR_32 7B44  
                                      STR_40 7ABC                                        STR_17 7F59  
                                      STR_25 7F35                                        STR_41 7DE8  
                                      STR_33 7B99                                        STR_18 7F6A  
                                      STR_50 7ED5                                        STR_26 7BAA  
                                      STR_34 7AEF                                        STR_42 7ADE  
                                      STR_35 7FBE                                        STR_19 7F72  
                                      STR_51 7E9F                                        STR_43 7D3C  
                                      STR_27 7BFF                                        STR_36 7B44  
                                      STR_60 7F23                                        STR_44 7FF8  
                                      STR_52 7EF3                                        STR_28 7C10  
                            __end_of___awmod 55B0                                        STR_37 7B99  
                                      STR_53 7FF8                                        STR_61 7E89  
                                      STR_45 7D58                                        STR_29 7B33  
                                      STR_38 7AEF                                        STR_62 7E9F  
                                      STR_70 7EAA                                        STR_54 7D58  
                                      STR_46 7EB5                                        STR_55 7EB5  
                                      STR_39 7EFD                                        STR_63 7F96  
                                      STR_47 7F1A                                        STR_71 7C32  
                                      STR_56 7F1A                                        STR_48 7DE8  
                                      STR_64 7EE9                                        STR_72 7E35  
                                      STR_80 7B00                                        STR_81 7C84  
                                      STR_65 7F8F                                        STR_49 7F23  
                                      STR_73 7D73                                        STR_57 7D4A  
                                      STR_66 7D3C                                        STR_58 7D3C  
                                      STR_90 7E41                                        STR_74 7D2E  
                                      STR_82 7BDD                                        STR_91 7D73  
                                      STR_75 7D2E                                        STR_67 7E94  
                                      STR_59 7E94                                        STR_83 7D66  
                                      STR_92 7FF8                                        STR_68 7EAA  
                                      STR_76 7B22                                        STR_84 7AAA  
                                      STR_85 7D2E                                        STR_69 7D4A  
                                      STR_93 7FAB                                        STR_77 7B88  
                                      STR_86 7D2E                                        STR_78 7C84  
                                      STR_94 7B55                                        STR_87 7E65  
                                      STR_79 7B11                                        STR_95 7ACD  
                                      STR_88 7E65                                        STR_96 7FB2  
                            __end_of___flmul 1E62                                        STR_89 7E4D  
                                      STR_97 7BBB                                        STR_98 7FA4  
                                      STR_99 7A97            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3F76                              _TMR1_StartTimer 64A4  
                            __end_of___lldiv 5270                                        u10030 0A10  
                                      u10150 0F78                                        u10070 0BCE  
                                      u10620 33A6                              ___awdiv@divisor 0062  
          __size_of_MOTEapp_setResponseReady 0008                                        _T1CON 000FCD  
                     __end_of_USBDeviceTasks 32A2                                        u10590 3304  
                                      u10680 42B8                                        _T2CON 000FBA  
                                      u10770 24F4                                        u11707 3B62  
                                      u11717 3B74                                        u11807 52A8  
                                      u11727 3B86                      __end_of_sendDataCommand 45E4  
                                      _T3CON 000FB1                                        u11817 61AA  
                                      u11737 3BB6                                        u11907 1AB6  
                                      u11827 2B26                                        u11747 3BC8  
                                      u11667 381C                                        u11917 5F24  
                                      u11837 2B38                                        u11757 3BDA  
                                      u11677 3B18                                        u11847 2B4A  
                                      u11767 5EF2                                        u11687 3B2A  
                                      u11857 2C28                                        u11777 09F8  
                                      u11697 3B3C                    ?_USBCtrlEPServiceComplete 0001  
                                      u11867 2C3A                                        u11787 5280  
                                      u11877 2C4C                                        u11797 5294  
                                      u11887 1A92                                        u11897 1AA4  
                            __end_of___lwmod 5B9E                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 007A                                        _UADDR 000F63  
                            ___awdiv@counter 0064                                        i2l949 595E  
                                      i2l996 5828                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _PORTB 000F81                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                              __CFG_WRT0$OFF 000000           __size_of_USBCtrlEPAllowStatusStage 00C4  
                            __end_of_delayms 5F10                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                                ?_TMR0_Clear 0001                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 4D96                            oled_putChar@index 006B  
                           __end_of_TMR0_ISR 64B0                             __end_of_TMR1_ISR 6422  
                                      _sd000 79B5                                        _sd001 796F  
            service_pushbutton@Release_Timer 004E                                        _sd002 793B  
                              __CFG_WRTB$OFF 000000                             __end_of_TMR3_ISR 62A0  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 6332                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _n_bit 005A  
                                      _light 011C                          _clearInterruptPinRX 6422  
                                      _unhex 6092                              __end_of_outFIFO 5E06  
                                      _stops 0121                               __pbitbssCOMRAM 02E8  
                    __end_of_TMR1_Initialize 5F74                                 _runningState 00F6  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 5756  
                 oled_setDisplay@displayType 0061                        ??_oled_putStringLineN 006E  
                                      status 000FD8                               __CFG_T3CMX$RC0 000000  
                                      wtemp6 005F                              _TMR2_StartTimer 64A0  
                            __end_of_strncmp 4FDC                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 60EC                              ___lbdiv@counter 0062  
                               _m10SecTicker 011A                 __end_of_moteApp_getTempValue 5C62  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E2                              __initialization 48D6  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                                 _InitSwUart 6220                                 __end_of_main 3170  
                      _control_signal_bitmap 011E                         ?_clearInterruptPinRX 0001  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 6242  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 6398  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00C0  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 005E                              _TMR3_StartTimer 649C  
                              __activetblptr 000003                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 5E3E                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 00EC  
                               ?_reloadTimer 0001                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 003E  
           moteApp_convertSensorValue@string 0072                      __end_of_TMR0_StartTimer 64AC  
                    __end_of_USBDeviceAttach 5EDE                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00DA                            _getsUSBUSART$6682 006B  
                                     _ACTCON 000FB5                                       STR_100 7F9D  
                                     STR_101 7CB4                                       STR_102 7B22  
                                     STR_110 7E52                                       STR_111 7B11  
                                     STR_103 7B88                                       STR_112 7B00  
                                     STR_104 7C84                                       STR_120 7F7A  
                                     STR_113 7C84                                       STR_121 7FFB  
                                     STR_105 7C64                                       STR_130 7FE9  
                                     STR_106 7C54                                       STR_114 7C21  
                                     STR_122 7B77                                       _ADRESH 000FC4  
                                     STR_107 7C84                                       STR_131 7FF0  
                                     STR_115 7CD4                                       STR_123 7B66  
                                     STR_140 7C74                                       STR_132 7C74  
                                     STR_124 7F88                                       STR_116 7CE3  
                                     STR_108 7C43                                       STR_133 7CE3  
                                     STR_141 7FC8                                       STR_125 7FC3  
                                     STR_109 7ECB                                       STR_117 7C74  
                                     STR_134 7CD4                                       STR_118 7C64  
                                     STR_126 7DCC                                       STR_150 7FEC  
                                     STR_142 7FCC                                       _ADRESL 000FC3  
                                     STR_135 7C64                                       STR_127 7FE1  
                                     STR_151 7FE4                                       STR_143 7FD0  
                                     STR_119 7F81                                       STR_136 7C54  
                                     STR_160 7FD8                                       STR_128 7FED  
                                     STR_152 7FE8                                       STR_144 7FD4  
                                     STR_137 7C84                                       STR_161 7FDC  
                                     STR_129 7FE5                                       STR_153 7FF0  
                                     STR_145 7FD8                                       STR_162 7FF4  
                                     STR_146 7FDC                                       STR_170 7DA7  
                                     STR_138 7BEE                                       STR_154 7BCC  
                                     STR_163 7B22                                       STR_147 7FF4  
                                     STR_139 7E59                                       STR_171 7DB4  
                                     STR_155 7C94                                       STR_156 7FC8  
                                     STR_148 7FDC                                       STR_164 7B88  
                                     STR_172 7DC1                                       STR_180 79EF  
                                     STR_165 7C84                                       STR_157 7FCC  
                                     STR_149 7FE0                                       STR_173 7DCE  
                                     STR_181 7A09                                       _EEDATA 000FA8  
                                     STR_158 7FD0                                       STR_182 7F59  
                                     STR_190 7F11                                       STR_174 7DDB  
                                     STR_166 7CA4                                       STR_159 7FD4  
                                     STR_183 7F72                                       STR_191 7F62  
                                     STR_167 7D80                                       STR_175 7CF2  
                                     STR_184 7F6A                                       STR_176 7F2C  
                                     STR_192 7E29                                       STR_168 7D8D  
                                     STR_177 7A06                                       STR_185 7AC8  
                                     STR_169 7D9A                                       STR_178 7A23  
                                     STR_186 79D4                                       STR_179 7A3D  
                                     STR_187 79B9                                       STR_188 7A57  
                                     STR_189 7A6D                                       _EECON2 000FA7  
                           ___awdiv@dividend 0060                                       ?_unhex 0001  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 007B                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0148                                       i2l1002 581C  
                                     i2l1004 5822                                       i2l2000 477A  
                                     i2l2002 47A4                                       i2l2004 4800  
                                     i2l2100 2FB6                      __end_of_TMR3_Initialize 6220  
                                     i2l1230 5B0C                                       i2l2030 44A6  
                                     i2l2102 2FBE                                       i2l2110 4C5C  
                                     i2l2103 3014                                       i2l1240 4646  
                                     i2l1400 00AE                                       i2l1241 464C  
                                     i2l2201 27FA                                       i2l2105 301C  
                                     i2l2113 4CE2                                       i2l1401 00B2  
                                     i2l1234 4684                                       i2l2042 4E8C  
                                     i2l2202 2816                                       i2l2114 4C6C  
                                     i2l1243 4658                                       i2l1235 4606  
                                     i2l2211 2902                                       i2l2115 4C72  
                                     i2l2123 5C1E                                       i2l2131 5FFE  
                                     i2l1236 4616                                       i2l2204 2876  
                                     i2l2116 4C90                                       i2l2036 4D46  
                                     i2l2052 39CE                                       i2l2124 5C1C  
                                     i2l2132 5FFC                                       i2l2061 4146  
                                     i2l2205 2882                                       i2l2109 4CCC  
                                     i2l1238 46A0                                       i2l1246 4660  
                                     i2l2070 41BA                                       i2l2150 5884  
                                     i2l2206 28F6                                       i2l2038 4D62  
                                     i2l1343 603E                                       i2l1263 5D04  
                                     i2l1247 467A                                       i2l1239 4620  
                                     i2l2063 4150                                       i2l2047 39A8  
                                     i2l2160 4026                                       i2l2080 35AA  
                                     i2l2152 58CC                                       i2l2048 3952  
                                     i2l1345 6060                                       i2l1337 6030  
                                     i2l2065 41B2                                       i2l2161 3FEC  
                                     i2l2209 28B0                                       i2l2137 4388  
                                     i2l1338 602C                                       i2l2066 417A  
                                     i2l2090 3D94                                       i2l2138 4382  
                                     i2l2163 400C                                       i2l2139 4322  
                                     i2l2076 3550                                       i2l2180 3C34  
                                     i2l2069 41F2                                       i2l2077 352E  
                                     i2l2173 3C92                                       i2l2166 404C  
                                     i2l2158 3FA6                                       i2l2190 26E8  
                                     i2l2182 3C3A                                       i2l2174 3C04  
                                     i2l1390 0060                                       i2l2159 3FAC  
                                     i2l2079 35C4                                       i2l2263 4B7E  
                                     i2l2191 26EC                                       i2l2183 3C58  
                                     i2l1391 006C                                       i2l2264 4B18  
                                     i2l2096 3024                                       i2l2088 3D20  
                                     i2l2184 3C74                                       i2l2176 3C0E  
                                     i2l2193 2756                                       i2l2097 2F14  
                                     i2l2177 3C14                                       i2l1393 007C  
                                     i2l2266 4B30                                       i2l2178 3C1A  
                                     i2l2267 4B3E                                       i2l2195 2796  
                                     i2l2099 2F28                                       i2l2179 3C2E  
                                     i2l1395 0088                                       i2l2268 4B5C  
                                     i2l2196 2798                                       i2l2269 4B74  
                                     i2l2197 27B0                                       i2l1397 0092  
                                     i2l1398 00A2                                       i2l2703 521C  
                                     i2l2199 2830                                       i2l2704 5210  
                                     i2l2707 5250                                       i2l2708 525E  
                                     i2l1790 6294                                       i2l1960 3414  
                                     i2l1962 3450                                       i2l1963 343C  
                                     i2l1971 3186                                       i2l1980 31EE  
                                     i2l1972 3192                                       i2l1965 3476  
                                     i2l1981 31F8                                       i2l1973 319A  
                                     i2l1990 327E                                       i2l1982 321C  
                                     i2l1983 3228                                       i2l1975 31AE  
                                     i2l1992 329A                                       i2l1976 31BA  
                                     i2l1985 3238                                       i2l2786 60DA  
                                     i2l1978 31DE                                       i2l1995 5D68  
                                     i2l2787 60CA                                       i2l1996 5D76  
                                     i2l1988 325E                                       i2l8205 5956  
                                     _TABLAT 000FF5                                       i2l8343 4150  
                                     i2l8397 60CA                                       i2l8577 3D18  
                  moteApp_searchFrameGPS@ccs 0084                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 2DBA                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 5A76                            _shortPacketStatus 0049  
                      InterruptTimerUART@aux 0004               moteRunningProcess@changeStates 00B9  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 4EBE  
                       _moteApp_clearCommand 63EC                      _moteApp_lightStringSize 6498  
               ??_MOTEapp_SetDataRateSetting 0063                              USBDeviceTasks@i 001F  
                 __end_of_Set_Column_Address 62BC                  USBStdFeatureReqHandler@pUEP 0017  
                           __end_of_hexToStr 6092                          __size_of_TMR0_Clear 0004  
                   USBTransferOnePacket@data 0061                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 0068                    __size_of_Set_Page_Address 0014  
                                     _inFIFO 5CDE                      __end_of_TMR1_StartTimer 64A8  
                               ?_putUSBUSART 0060                        ??_clearInterruptPinRX 0001  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 6140                                    ??___fldiv 0095  
                                  ??___awdiv 0064                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0240                         __end_of_getsUSBUSART 48D6  
                                  ??___lwmod 0064                            _USBEnableEndpoint 5D58  
            __size_of_USBStdGetStatusHandler 00A8                          _EUSART_Transmit_ISR 6004  
                                     _memcpy 5B12                             ?_TMR0_Initialize 0001  
                                     _memset 5FA4                                       clear_0 4932  
                                     clear_1 493E                                       clear_2 494A  
                                     clear_3 4956                                       clear_4 4962  
                                     clear_5 496E                                       clear_6 497C  
                                     _parity 0122                             ___awdiv@quotient 0066  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           ?_USBEnableEndpoint 0009  
                              _lengthDataGPS 00F0               ??_USART_mySetLineCodingHandler 000E  
                                     _status 004D                      __end_of_DATAEE_ReadByte 6348  
                                     _strcmp 5A76                   __end_of_ADC_TempConversion 3B0C  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                               _dataFrameGPS 0600                              _moteApp_delayms 5F10  
                __size_of_service_pushbutton 006A                                 __pdataCOMRAM 005B  
                               _CDCTxService 2DBA                                    ??_outFIFO 0060  
                               __mediumconst 75EA                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                      __size_of_ReadyByteFrame 0002  
                                     unhex@c 0060                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 64A4                                 _dataRateRead 0129  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 0048  
                  USBapp_Handler@buttonPress 0078                         _USBapp_getrxByteFlag 648C  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 60EC                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 0070  
                                 __accesstop 0060                      __end_of__initialization 4982  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 63AA                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0042  
                              ?_oled_putint8 0078                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 5D94                                  ?_InitSwUart 0001  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79B9  
                              __end_of_sd001 79A3                                __end_of_sd002 796F  
                               __pidataBANK0 6480                                 __pidataBANK1 64C0  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 64A0  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009E  
                           _DATAEE_WriteByte 5D1C                      oled_putStringLineN@page 006F  
              __size_of_USBConfigureEndpoint 0094      __end_of_oled_setContrastControlRegister 6370  
   __size_of_oled_setContrastControlRegister 0014             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 635C  
                              __end_of_unhex 60C0                  __end_of_USBCtrlTrfInHandler 4052  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 4764  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F8                            _CDCTxService$6730 0068  
                                 _cdc_notice 01D0                                    ?i2_memset 0001  
                                 _cdc_rx_len 00E1                                   _cdc_tx_len 00E0  
                       _moteApp_getTempValue 5C22                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01F3                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 012C                             ?_TMR0_StartTimer 0001  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 6116                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 4C50                                      ??_unhex 0060  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 0060                                   __pbssBANK0 00C0  
                         __size_of_emptyFIFO 0012                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                                 __pbssBANK6 0600                                   __pbssBANK7 0700  
                       __end_of_EUSART_Write 5CDE                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0077  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                                 inFIFO@data 0001                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0074                              _periodicUpValue 00FE  
                  ??_moteApp_lightStringSize 0060                  __size_of_EUSART_Receive_ISR 0030  
                        oled_putString@index 0077                               ??_oled_putChar 0064  
                __size_of_USBWakeFromSuspend 0030                                  _pBDTEntryIn 00CE  
                     __size_of_oled_clearRow 0026                                   _clearLight 01E9  
                __end_of_moteApp_testSensors 3930                     sendDataCommand@byteCount 0067  
                              outFIFO@retVal 0060             __end_of_USBCtrlEPServiceComplete 3A22  
           __end_of_MOTEapp_setResponseReady 6478                               ??_oled_putint8 007A  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00B0  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0030  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?_inFIFO 0001                      __size_of_TMR0_StopTimer 0004  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 5F42  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00D0  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A3                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 42CA  
                    _moteApp_addToDataBuffer 57BC                     ??_moteApp_searchFrameGPS 0082  
                __size_of_moteApp_toggleLeds 00E8                                   _ep_data_in 00D7  
                    __size_of_ADC_Initialize 001A                                      ?_strcmp 0060  
                           ?_DATAEE_ReadByte 0001                  __end_of_USBCtrlTrfRxService 362E  
                       __size_of_sendCommand 0034                           _USBCheckStdRequest 3BF4  
                              _eusartRxCount 00F7                            _configDescriptor1 78F8  
                                    i2l12319 3230                                      i2l12193 465A  
                                    i2l11761 431A                                      i2l11827 346E  
                                    i2l11799 340C                                      i2l12787 5840  
                                    i2l12789 5870                                    ?___xxtofl 0060  
                                    _RS232cp 00E9                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 006A  
                               ??_TMR0_Clear 0001                                   ??i2_memset 0007  
                         __size_of_test_oled 00C6                         __size_of_moduleSleep 0026  
                __end_of_USBCtrlTrfTxService 41FA                         __size_of_moteHandler 026E  
                        _USBStdSetCfgHandler 3CD6                                      _OSCCON2 000FD2  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                                    _TBLPTRU 000FF8                                      _OSCTUNE 000F9B  
                     __size_of_oled_putUint8 0094               USBapp_LEDUpdateStatus@ledCount 003C  
                            __CFG_WDTPS$8192 000000          __size_of_moteApp_convertSensorValue 007E  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 63BC  
                             ??_moduleResync 0065                          ?_USBCheckStdRequest 0001  
                       __size_of_reloadTimer 000A                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 013A                          __size_of_InitSwUart 0022  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                      ADC_TempConversion@val 00A8                                      _UIRbits 000F65  
                     test_switch@buttonCheck 007B              moteRunningProcess@bufferReadPos 00B8  
                                    _EndLine 63FC                                _cdc_trf_state 00EE  
                       DATAEE_WriteByte@bAdd 0061                              _countBitsSilent 004B  
                    __size_of_USBapp_exitCDC 0006                  __size_of_InterruptTimerUART 00C2  
                 __end_of_moteRunningProcess 1516                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                   ?_moteApp_add8bToDataBuffer 0066  
                                    _pCDCDst 010E                                      _pCDCSrc 0111  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 6416  
                     InterruptTimerUART@mask 0005           __end_of_MOTEapp_SetDataRateSetting 2C66  
                 _MOTEapp_SetDataRateSetting 2B04                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 56EE  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                   moteRunningProcess@i_1530 00B6                     moteRunningProcess@i_1527 00B5  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00BD                             _Set_Page_Address 6370  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 4BA2                           __end_of_TMR0_Clear 64BC  
                                    ___fladd 1E62                            _timerMinTickCount 003A  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 05FA  
                                    ___fldiv 21A0                              __size_of_inFIFO 003E  
                                    ___awdiv 4FDC                                      ___lbdiv 5C62  
                        printfOled@lastValue 004A                                      ___awmod 553E  
                                    ___flmul 1B10                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3E98                                      ___lldiv 51EE  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0028  
                          ??_USBStallHandler 0001                                      ___lwmod 5B5A  
                       oled_putint8@negative 007A           oled_setContrastControlRegister@mod 0061  
                          __end_of_emptyFIFO 63AA                         __size_of_putUSBUSART 0022  
                                    __pcinit 48D6                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793B  
                                    __ramtop 0800                                      _delayms 5EDE  
                          hexToStr@character 0060                                      __ptext0 303C  
                                    __ptext1 545A                                      __ptext2 373A  
                                    __ptext3 4398                                      __ptext4 55B0  
                                    __ptext5 54CC                                      __ptext6 3B0C  
                                    __ptext7 5EDE                                      __ptext8 3838  
                                    __ptext9 2456                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C8                  _USBDeferOUTDataStagePackets 003F  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 649C  
                            __size_of_strcmp 004E                    moteRunningProcess@counter 00B7  
                           oled_setFont@font 0060                                      _countIn 00E7  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 631C  
                                    _exitUSB 00FA                                 ??_USBSuspend 0016  
                              _oled_clearRow 61B6                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 004E              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 62BC                             ___awmod@dividend 0060  
                                    _outFIFO 5DCE                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 6470                                 _LastRS232Out 00EA  
                             _ReadyByteFrame 64C6                              i2_USBDeviceInit 33D2  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 5FA4  
                                    _rx_data 004C                  __end_of_oled_putStringLineN 5A28  
               __end_of_MOTEapp_handlerState 6456                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F8                   moteRunningProcess@readByte 00B1  
                 __size_of_SYSTEM_Initialize 002A              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 4F50  
                       end_of_initialization 4982                                 _getsUSBUSART 481E  
              sendDataCommand@byteCount_1666 0068                           __end_of_USB_SD_Ptr 75F1  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0032  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066              _dummy_encapsulated_cmd_response 01DA  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1120_40 329E  
                                  i2u1051_40 4368                                    i2u1054_40 3430  
                   ?_USBStdFeatureReqHandler 0001                                    i2u1057_40 34D2  
                                  i2u1090_44 4630                                    i2u1090_45 462C  
                                  i2u1084_40 5AD6                                    i2u1085_48 5AD8  
                                  i2u1086_40 45F4                                    i2u1087_48 45F6  
             __end_of_MOTEapp_TimerBasedTask 6262                            _EUSART_Initialize 5E06  
                          _oled_powerControl 63CC                                   _rxByteFlag 00ED  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 00FE                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 561A  
                          __end_of_test_oled 445E               moteJoiningProcess@changeStates 0078  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 4D96                           __end_of_USBSuspend 6140  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 4CF8  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 006D  
                         test_switch@timeout 0079                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 0075  
             moteApp_setLightString@stingPos 006D                         __end_of_oled_devInit 52F0  
                   _USBCtrlEPServiceComplete 3930                      moteApp_toggleLeds@state 0064  
                                 _responseId 0270                                   _retryCount 0127  
                           ?_moteApp_delayms 0060                                _randomPortNum 00F3  
                   _MOTEapp_setResponseReady 6470                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 0042                   _USBStatusStageEnabledFlag2 0041  
                              _dataRateValue 00FD                          _USBapp_handlerState 6442  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
            __size_of_moteApp_searchFrameGPS 01DC                      oled_putUint8@start_page 0079  
                             ?_oled_clearRow 0001                                   _test_comms 54CC  
                     ??_moteApp_getTempValue 0065                       __end_of_ReadyByteFrame 64C8  
                       __end_of_oled_setFont 635C                                  ___fladd@grs 0073  
                         _Set_Column_Address 62A0                         __end_of_oled_putChar 516A  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 003E                         __end_of_oled_putint8 4AF2  
                         _BothEP0OutUOWNsSet 0045             __size_of_moteApp_setSensorsInput 0078  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 5D58                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 642E  
                                  _USTATcopy 0058                            __size_of_CMP1_ISR 0004  
                                 _statusSSFG 00F5                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3A22                     oled_putString@start_page 0076  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 536E                   _moteApp_convertSensorValue 52F0  
                  __end_of_EUSART_Initialize 5E3E                    __end_of_oled_powerControl 63DC  
                    oled_putint8@station_dot 0078                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 4764                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 642E  
                             ?_oled_putUint8 0078                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                             _TMR0_StopTimer 64B0                                 ??_InitSwUart 0060  
                      _moteApp_getLightValue 5A28                       _USBCtrlTrfSetupHandler 516A  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 50E6                        __end_of_USBDeviceInit 33D2  
                             _TMRapp_Handler 362E                               _USBapp_Handler 41FA  
                             __end_of_inFIFO 5D1C                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                 oled_putStringLineN@indexLine 006E  
                             __end_of___wmul 6168                                __pidataCOMRAM 64C3  
                               _EUSART_Write 5CA0                        sendDataCommand@string 0061  
                          __size_of_TMR0_ISR 0004                      __end_ofi2_USBDeviceInit 3500  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 56EE  
                          __size_of_TMR3_ISR 001E                               _ADC_Initialize 62D6  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 5B5A  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 5FD4  
                   oled_putStringLineN@index 0070                            _USBBusIsSuspended 011F  
                   oled_writeCommand@command 0060                              ?_ReadyByteFrame 0001  
                             __end_of_strcmp 5AC4                                  ?_oled_clear 0001  
                        start_initialization 48D6                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00AD          __size_of_oled_regulorResistorSelect 0010  
                   __size_of_TMR0_Initialize 0020              __size_of_PIN_MANAGER_Initialize 0054  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 6438              __end_of_moteApp_addToDataBuffer 581A  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 5E76                            __size_ofi2_memset 002C  
                                  _OledFont0 75F8                 __end_of_USBConfigureEndpoint 4EBE  
                        _countSearchFrameGPS 00F1              __end_of_USBStdFeatureReqHandler 2928  
                   __size_of_sendDataCommand 00C2                           __end_of_InitSwUart 6242  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 4522                                _periodicState 00FB  
                             _USBapp_exitCDC 6486                     __end_of_USBCtrlEPService 4398  
                     _moteApp_searchFrameGPS 2928         __end_of_USART_mySetLineCodingHandler 592C  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 58D2  
                 __end_of_EUSART_FlushBuffer 5BE0                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0008                                _moteModeState 012A  
                  ??_USBCtrlEPAllowDataStage 0002                       __end_of_TMR0_StopTimer 64B4  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 005C                       _pBDTEntryEP0OutCurrent 0034  
                   __size_of_TMR1_Initialize 0032                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 42CA  
                     __end_of_TMRapp_Handler 373A               __end_ofi2_USBTransferOnePacket 481E  
                       _TMRapp_ClearBitFlags 6468                                     ??_inFIFO 0001  
                                   ??___wmul 0064              __size_of_moteApp_setLightString 006A  
                        _USBStdGetDscHandler 2F02                         _MOTEapp_handlerState 644C  
                     __end_of_ADC_Initialize 62F0                                  __pdataBANK0 00FA  
                                __pdataBANK1 01F6                                     ??_memcpy 0066  
                                   ??_memset 0066                              ??_oled_clearRow 006C  
            MOTEapp_TimerBasedTask@timerTask 0060                          _moduleResonseBuffer 0190  
                                   ??_strcmp 0064                                  ?_test_comms 0001  
                  oled_putString@station_dot 0075                                    ___fladd@a 0064  
                                  ___fladd@b 0060                               _InterruptPinRX 5AC4  
                     _USBActiveConfiguration 0059               __end_of_USBStdGetStatusHandler 4CF8  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 6034                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 0032  
                 service_pushbutton@PB_Timer 010A                                __pcstackBANK0 0060  
               __size_of_USBCtrlTrfInHandler 00DC                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 6384                            __size_of___xxtofl 0154  
                            ?_TMR2_ReadTimer 0001                                  _activeState 0053  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 648C  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 6064  
             moteRunningProcess@messageReady 00AD                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 6438                   __end_of_USBWakeFromSuspend 6004  
                 __size_of_EUSART_Initialize 0038                   __size_of_oled_powerControl 0010  
                          __size_of_hexToStr 002E                              _USBStallHandler 5BE0  
                       __end_of_sentenceName 75F6                                 _pBDTEntryOut 0100  
                        __end_of_EUSART_Read 5DCE                   __end_of_USBCheckCDCRequest 4BA2  
                            ??_oled_putUint8 007A                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0260                              ?_TMR0_StopTimer 0001  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 6306  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 5982  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0126  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EA  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                   ?___awdiv 0060                                    __ptext100 5F42  
                                  __ptext101 64A4                                     ?___lbdiv 0060  
                                  __ptext110 644C                                    __ptext102 6262  
                                  __ptext111 6332                                    __ptext103 64A8  
                                  __ptext120 516A                                    __ptext104 5982  
                                  __ptext121 3930                                    __ptext113 6478  
                                  __ptext105 631C                                    __ptext130 592C  
                                  __ptext122 4CF8                                    __ptext114 3170  
                                  __ptext106 6220                                    __ptext131 56EE  
                                  __ptext123 3BF4                                    __ptext115 33D2  
                                  __ptext107 5E06                                    __ptext140 4126  
                                  __ptext132 4764                                    __ptext124 3CD6  
                                  __ptext116 5FD4                                    __ptext108 63AA  
                                  __ptext141 58D2                                    __ptext133 5D58  
                                  __ptext125 60C0                                    __ptext117 6116  
                                  __ptext109 62D6                                    __ptext150 64B0  
                                  __ptext142 5E3E                                    __ptext134 4E2A  
                                  __ptext126 4C50                                    __ptext118 5BE0  
                                  __ptext151 64C6                                    __ptext143 51EE  
                                  __ptext135 4AF2                                    __ptext127 2F02  
                                  __ptext119 42CA                                    __ptext160 0000  
                                  __ptext152 5AC4                                    __ptext144 6492  
                                  __ptext136 5876                                    __ptext128 26C4  
                                  __ptext153 64B4                                    __ptext145 6282  
                                  __ptext137 3500                                    __ptext129 581A  
                                  __ptext154 6456                                    __ptext146 6416  
                                  __ptext138 445E                                    __ptext155 6422  
                                  __ptext147 64AC                                    __ptext139 3F76  
                                  __ptext156 64B8                                    __ptext148 45E4  
                                  __ptext157 6004                                    __ptext149 5CDE  
                                  __ptext158 6034                                    __ptext159 64BC  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 3BF4  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00E3                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E6  
                               _eusartRxTail 00E2                 __size_of_moteApp_testSensors 00F8  
                               _eusartTxTail 00E5                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0084                       __end_of_InterruptPinRX 5B12  
                         _moteRunningProcess 0102                            _moduleBufferIndex 00F4  
                                   ?_delayms 0060                                    _buffer_rx 0700  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BF  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00BA                        __size_of_oled_putint8 00B0  
                    _eusartTxBufferRemaining 00E4                         _USBTransferOnePacket 46A6  
                                  _mainState 0055                     __size_of_TMR1_StartTimer 0004  
                                  _emptyFIFO 6398                                ??_reloadTimer 0001  
                    _moteApp_setSensorsInput 536E                                     ?_outFIFO 0001  
                     moteHandler@buttonPress 00BE                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 58D2                                    _minTicker 0125  
                   reloadTimer@setTimerValue 0001                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 64BC                       _moteApp_setLightString 561A  
                                _ep_data_out 00D4                 __size_of_USBCtrlTrfRxService 012E  
                  oled_putStringLineN@string 006C                                    _secTicker 00F2  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0016                                     ?_strncmp 0060  
                             __size_of_unhex 002E                   __end_of_InterruptTimerUART 46A6  
                        oled_putint8@numData 007B                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 5270           __end_of_oled_regulorResistorSelect 63CC  
                 _oled_regulorResistorSelect 63BC                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 0072                            _dataRateSelection 01F8  
                           _timerMsTickCount 00DC                                    _oled_init 5F74  
               __size_of_USBCtrlTrfTxService 00D4                            ??_TMR0_Initialize 0060  
          __end_of_MOTEapp_getModuleResponse 57BC                               _eusartTxBuffer 0300  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 631C                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 0060  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 0072                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 6348                                    _moteState 00FF  
                          ??_sendDataCommand 0066                                _operationType 00F8  
                          i2_TMR0_StartTimer 64B4                        __size_of_moduleResync 0084  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1B10  
        __size_of_INTERRUPT_InterruptManager 00F6                                 _oled_putChar 50E6  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 0092                                     i2u604_40 5976  
              __size_of_moteApp_clearCommand 0010                                     _PIR3bits 000FA4  
                                   i2u622_40 5220                                     i2u617_40 41A2  
                                   i2u641_40 3D4C                                     i2u617_47 4198  
                                   i2u705_48 360C                                     i2u705_49 361E  
                                   i2u619_40 41E2                                     i2u619_47 41D8  
                                   i2u645_40 2F80                                     i2u645_47 2F76  
                                   i2u901_48 4036                                     i2u670_40 2896  
                                   i2u646_40 2FB0                                     i2u901_49 4048  
                                   i2u646_47 2FA6                                     i2u648_40 3008  
                  USBCtrlEPService@setup_cnt 001E                                     i2u648_47 2FFE  
                                   _RCONbits 000FD0                         __end_of_test_powerup 54CC  
                               _oled_putint8 4A42                                ??_putUSBUSART 0063  
                         ?i2_TMR0_StartTimer 0001                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 0040                                     _SSP1CON1 000FC6  
                                   _TMR0_ISR 64AC                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 6416                      __size_of_oled_putString 0074  
                                   _TMR3_ISR 6282                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 6460  
                                  _test_leds 55B0                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 4E2A  
                                  _test_oled 4398                        ??_USBapp_exitCDCState 0060  
                            ?_InterruptPinRX 0001             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                          ??i2_TMR0_StartTimer 0001  
                          ___wmul@multiplier 0060          moteRunningProcess@sizeOfUpdate_1526 00B3  
                      ?_USBTransferOnePacket 0060                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0079                    _moteApp_add8bToDataBuffer 498C  
                    __size_of_oled_writeData 0016                                   ?_emptyFIFO 0001  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 00BC                                 _RemoteWakeup 0047  
                        __end_of_sendCommand 5EAA                                     i2_memset 60C0  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 63DC  
                      DATAEE_WriteByte@bData 0060                           _RS232_Out_Data_Rdy 00EB  
          moteApp_setLightString@lightString 006B                      __end_of_USBStallHandler 5C22  
                        __end_of_moduleSleep 61B6                          __end_of_moteHandler 26C4  
                                _EUSART_Read 5D94                            _moteApp_GoToSleep 4052  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
                                  copy_data0 4908                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                                 _moduleResync 5062  
                __end_of_USBStdSetCfgHandler 3DB8                            ?_DATAEE_WriteByte 0060  
              __size_of_USBapp_getrxByteFlag 0006                          __end_of_reloadTimer 6460  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0078  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0072  
               clearInterruptPinRX@tClearPin 0001                             __size_of_EndLine 000E  
                  __end_ofi2_TMR0_StartTimer 64B8                           ??_DATAEE_WriteByte 0061  
               __size_of_oled_putStringLineN 0052                           __end_of_device_dsc 79B5  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                    USBStdGetStatusHandler@p 0002                     moteApp_searchFrameGPS@cs 0085  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                  memcpy@tmp 006A                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 0064                       ??_MOTEapp_handlerState 0060  
                         __CFG_BOREN$SBORDIS 000000                                     _SetupPkt 000430  
                    ??_OSCILLATOR_Initialize 0060                        ?_USBConfigureEndpoint 0001  
                          ??_TMR0_StartTimer 0060                             ??_ReadyByteFrame 0001  
                           __size_of___almod 00AE                             __size_of___fladd 033E  
                          ??_USBDeviceAttach 0060                                   ?_test_leds 0001  
                           __size_of___fldiv 02B6                             __size_of___awdiv 0086  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007B                                 _selectedFont 01F6  
                           __size_of___lldiv 0082                              _oled_setDisplay 6168  
           moteApp_clearBuffers@counter_1753 0061             moteApp_clearBuffers@counter_1754 0062  
           moteApp_clearBuffers@counter_1755 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 61FE  
                                _line_coding 01E2                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 0128  
                               ??_oled_clear 006E                                     ___xxtofl 2C66  
                                _menuTimeout 00FC                     __size_of_moteApp_delayms 0032  
                  __end_of_moteApp_GoToSleep 4126                __size_of_moteApp_getTempValue 0040  
                    __size_of_USBDeviceTasks 0132                             __size_of_outFIFO 0038  
                                   _appTimer 00F9                                     _appState 012B  
                                   __ptext10 0102                                     __ptext11 4522  
                                   __ptext20 640A                                     __ptext12 6064  
                                   __ptext21 52F0                                     __ptext13 4D96  
                                 _T1GCONbits 000FCC                                     __ptext30 5270  
                                   __ptext22 6140                                     __ptext14 536E  
                                   __ptext31 635C                                     __ptext23 4EBE  
                                   __ptext15 6498                                     __ptext40 642E  
                                   __ptext32 63BC                                     __ptext24 57BC  
                                   __ptext16 5C22                                     __ptext41 2B04  
                                   __ptext33 63CC                                     __ptext25 498C  
                                   __ptext17 5A28                                     __ptext50 5A76  
                                   __ptext42 3A22                                     __ptext34 63DC  
                                   __ptext26 4052                                     __ptext18 561A  
                                   __ptext51 5F10                                     __ptext43 2C66  
                                   __ptext35 6460                                     __ptext27 5F74  
                                   __ptext19 5B12                                     __ptext60 4FDC  
                                   __ptext52 5D1C                                     __ptext44 3E98  
                                   __ptext36 6190                                     __ptext28 6348  
                                   __ptext61 6398                                     __ptext53 2928  
                                   __ptext45 1B10                                     __ptext37 5062  
                                   __ptext29 6168                                     __ptext70 5E76  
                                   __ptext62 6438                                     __ptext54 6092  
                                   __ptext46 21A0                                     __ptext38 5756  
                                   __ptext71 63FC                                     __ptext63 6486  
                                   __ptext55 5DCE                                     __ptext47 1E62  
                                   __ptext39 5B9E                                     __ptext80 6370  
                                   __ptext72 6442                                     __ptext64 362E  
                                   __ptext56 4A42                                     __ptext48 1516  
                                   __ptext81 62A0                                     __ptext73 41FA  
                                   __ptext65 5B5A                                     __ptext57 5C62  
                                   __ptext49 4F50                                     __ptext90 2DBA  
                                   __ptext82 6306                                     __ptext74 5684  
                                   __ptext66 4BA2                                     __ptext58 553E  
                                   __ptext91 46A6                                     __ptext83 3DB8  
                                   __ptext75 53E6                                     __ptext67 6468  
                                   __ptext59 59D6                                     __ptext92 32A2  
                                   __ptext84 61DC                                     __ptext76 62BC  
                                   __ptext68 6242                                     __ptext93 5FA4  
                                   __ptext85 481E                                     __ptext77 61B6  
                                   __ptext69 63EC                                     __ptext94 5EAA  
                                   __ptext86 648C                                     __ptext78 50E6  
                                   __ptext95 60EC                                     __ptext87 6470  
                                   __ptext79 62F0                                     __ptext96 61FE  
                                   __ptext88 5CA0                                     __ptext97 649C  
                                   __ptext89 5D94                                     __ptext98 6384  
                                   __ptext99 64A0         __end_of_USBapp_CdcEmulatorInitialize 5982  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 592C  
                               _SSP1CON1bits 000FC6                      ?_moteApp_searchFrameGPS 0001  
                                   _dotCount 0124                                     _hexToStr 6064  
                         _service_pushbutton 5684                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 008C                                     _countOut 00E8  
             __end_of_USBCtrlTrfSetupHandler 51EE                                __size_of_main 0134  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 005B                                     _rnModule 0051  
                         oled_putint8@number 0081                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 0072  
                    __end_of_oled_displayOff 6468                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 0065                                     delayms@i 0063  
                                   delayms@t 0060                          _USBCtrlTrfInHandler 3F76  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 0123  
                         __end_of_oled_clear 62D6                          __end_of_test_switch 3838  
                                   _outPipes 00C0                         _USBCtrlTrfOutHandler 5876  
                                   int$flags 005E                                     _usbState 004F  
                  _USBCtrlEPAllowStatusStage 445E                 __size_of_clearInterruptPinRX 000C  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00FE                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B2                                 _SSP1STATbits 000FC7  
                                _sendCommand 5E76                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 5B9E  
                               ??_test_comms 0078                 __end_of_USBapp_setrxByteFlag 6480  
                                _moduleSleep 6190                                  _moteHandler 2456  
                           ??_TMR2_ReadTimer 0060                                 _sentenceName 75F1  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0043  
                   CDCTxService@byte_to_send 006B                                  ??_emptyFIFO 0060  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 644C  
                       ?_USBCtrlTrfInHandler 0001                      moteApp_searchFrameGPS@c 0086  
                    moteApp_searchFrameGPS@i 0087                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                _reloadTimer 6456                                     memcpy@s1 0062  
             __end_of_moteApp_searchFrameGPS 2B04                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 02C0  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                             ??_TMR0_StopTimer 0001  
                        _moteApp_testSensors 3838                                  ??_oled_init 006E  
                ??_MOTEapp_getModuleResponse 0061                           ??_Set_Page_Address 0061  
                     __size_of_USBDeviceInit 0130                         oled_powerControl@vol 0061  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5876     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 581A               moteJoiningProcess@messageReady 007D  
            __end_of_moteApp_setSensorsInput 53E6                             ___lwmod@dividend 0060  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                 __size_ofi2_TMR0_StartTimer 0004                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0078                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 00BB  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 553E                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 6190                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 0052                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 53E6  
                                _putUSBUSART 61DC                           _EUSART_Receive_ISR 6034  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3500                           _USBWakeFromSuspend 5FD4  
                                ??_test_leds 0078                                _powerOnStatus 0054  
                                ??_test_oled 0078                      _USBStdFeatureReqHandler 26C4  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3E98  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 3DB8  
                         _USBCheckCDCRequest 4AF2                          _USBCtrlTrfTxService 4126  
                        __end_of_TMRapp_Tick 6498                        __end_of_oled_clearRow 61DC  
                                _temperature 00DE                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 62F0                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006B                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                            _TMR0_Initialize 6262                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 0056                              ___lwmod@counter 0064  
                                 _TMR0_Clear 64B8                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 3B0C                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0046  
                                 _WDTCONbits 000FD1                                 _test_powerup 545A  
                            _sendDataCommand 4522                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0078                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 59D6                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0044  
                                _test_switch 373A                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 2F02                              _TMR1_Initialize 5F42  
          moteJoiningProcess@joiningComplete 007C                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 4E2A                       __end_of_oled_putString 545A  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75F6  
                           ??_InterruptPinRX 0002  
