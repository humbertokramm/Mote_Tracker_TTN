

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 29 00:51:28 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   173                           	dabs	1,0x400,48,_BDT
   174                           	dabs	1,0x500,64,_cdc_data_tx
   175                           	dabs	1,0x438,8,_CtrlTrfData
   176                           	dabs	1,0x430,8,_SetupPkt
   177                           	dabs	1,0x540,64,_cdc_data_rx
   178  0000                     
   179                           ; Version 1.45
   180                           ; Generated 16/11/2017 GMT
   181                           ; 
   182                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   183                           ; All rights reserved.
   184                           ; 
   185                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   186                           ; 
   187                           ; Redistribution and use in source and binary forms, with or without modification, are
   188                           ; permitted provided that the following conditions are met:
   189                           ; 
   190                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   191                           ;        conditions and the following disclaimer.
   192                           ; 
   193                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   194                           ;        of conditions and the following disclaimer in the documentation and/or other
   195                           ;        materials provided with the distribution.
   196                           ; 
   197                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   198                           ;        software without specific prior written permission.
   199                           ; 
   200                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   201                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   202                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   203                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   204                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   205                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   206                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   207                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   208                           ; 
   209                           ; 
   210                           ; Code-generator required, PIC18LF45K50 Definitions
   211                           ; 
   212                           ; SFR Addresses
   213  0000                     
   214                           	psect	idataCOMRAM
   215  00593B                     __pidataCOMRAM:
   216                           	opt stack 0
   217                           
   218                           ;initializer for _Contrast_level
   219  00593B  13                 	db	19
   220                           
   221                           	psect	idataBANK0
   222  0058FA                     __pidataBANK0:
   223                           	opt stack 0
   224                           
   225                           ;initializer for _exitUSB
   226  0058FA  01                 	db	1
   227                           
   228                           ;initializer for _periodicState
   229  0058FB  03                 	db	3
   230                           
   231                           ;initializer for _menuTimeout
   232  0058FC  01                 	db	1
   233                           
   234                           ;initializer for _dataRateValue
   235  0058FD  02                 	db	2
   236                           
   237                           ;initializer for _periodicTimerValue
   238  0058FE  03                 	db	3
   239                           
   240                           ;initializer for _periodicUpValue
   241  0058FF  03                 	db	3
   242                           
   243                           ;initializer for _moteState
   244  005900  01                 	db	1
   245                           
   246                           	psect	idataBANK1
   247  005938                     __pidataBANK1:
   248                           	opt stack 0
   249                           
   250                           ;initializer for _selectedFont
   251  005938  F7                 	db	low _OledFont0
   252  005939  75                 	db	high _OledFont0
   253                           
   254                           ;initializer for _dataRateSelection
   255  00593A  02                 	db	2
   256                           
   257                           	psect	mediumconst
   258  0075EE                     __pmediumconst:
   259                           	opt stack 0
   260  0075EE  00                 	db	0
   261  0075EF                     _USB_SD_Ptr:
   262                           	opt stack 0
   263  0075EF  B4                 	db	low _sd000
   264  0075F0  79                 	db	high _sd000
   265  0075F1  6E                 	db	low _sd001
   266  0075F2  79                 	db	high _sd001
   267  0075F3  3A                 	db	low _sd002
   268  0075F4  79                 	db	high _sd002
   269  0075F5                     __end_of_USB_SD_Ptr:
   270                           	opt stack 0
   271  0075F5                     _USB_CD_Ptr:
   272                           	opt stack 0
   273  0075F5  F7                 	db	low _configDescriptor1
   274  0075F6  78                 	db	high _configDescriptor1
   275  0075F7                     __end_of_USB_CD_Ptr:
   276                           	opt stack 0
   277  0075F7                     _OledFont0:
   278                           	opt stack 0
   279  0075F7  00                 	db	0
   280  0075F8  00                 	db	0
   281  0075F9  00                 	db	0
   282  0075FA  00                 	db	0
   283  0075FB  00                 	db	0
   284  0075FC  00                 	db	0
   285  0075FD  00                 	db	0
   286  0075FE  00                 	db	0
   287  0075FF  00                 	db	0
   288  007600  00                 	db	0
   289  007601  00                 	db	0
   290  007602  5F                 	db	95
   291  007603  00                 	db	0
   292  007604  00                 	db	0
   293  007605  00                 	db	0
   294  007606  00                 	db	0
   295  007607  00                 	db	0
   296  007608  00                 	db	0
   297  007609  03                 	db	3
   298  00760A  00                 	db	0
   299  00760B  03                 	db	3
   300  00760C  00                 	db	0
   301  00760D  00                 	db	0
   302  00760E  00                 	db	0
   303  00760F  64                 	db	100
   304  007610  3C                 	db	60
   305  007611  26                 	db	38
   306  007612  64                 	db	100
   307  007613  3C                 	db	60
   308  007614  26                 	db	38
   309  007615  24                 	db	36
   310  007616  00                 	db	0
   311  007617  26                 	db	38
   312  007618  49                 	db	73
   313  007619  49                 	db	73
   314  00761A  7F                 	db	127
   315  00761B  49                 	db	73
   316  00761C  49                 	db	73
   317  00761D  32                 	db	50
   318  00761E  00                 	db	0
   319  00761F  42                 	db	66
   320  007620  25                 	db	37
   321  007621  12                 	db	18
   322  007622  08                 	db	8
   323  007623  24                 	db	36
   324  007624  52                 	db	82
   325  007625  21                 	db	33
   326  007626  00                 	db	0
   327  007627  20                 	db	32
   328  007628  50                 	db	80
   329  007629  4E                 	db	78
   330  00762A  55                 	db	85
   331  00762B  22                 	db	34
   332  00762C  58                 	db	88
   333  00762D  28                 	db	40
   334  00762E  00                 	db	0
   335  00762F  00                 	db	0
   336  007630  00                 	db	0
   337  007631  00                 	db	0
   338  007632  03                 	db	3
   339  007633  00                 	db	0
   340  007634  00                 	db	0
   341  007635  00                 	db	0
   342  007636  00                 	db	0
   343  007637  00                 	db	0
   344  007638  00                 	db	0
   345  007639  1C                 	db	28
   346  00763A  22                 	db	34
   347  00763B  41                 	db	65
   348  00763C  00                 	db	0
   349  00763D  00                 	db	0
   350  00763E  00                 	db	0
   351  00763F  00                 	db	0
   352  007640  00                 	db	0
   353  007641  00                 	db	0
   354  007642  41                 	db	65
   355  007643  22                 	db	34
   356  007644  1C                 	db	28
   357  007645  00                 	db	0
   358  007646  00                 	db	0
   359  007647  00                 	db	0
   360  007648  15                 	db	21
   361  007649  15                 	db	21
   362  00764A  0E                 	db	14
   363  00764B  0E                 	db	14
   364  00764C  15                 	db	21
   365  00764D  15                 	db	21
   366  00764E  00                 	db	0
   367  00764F  00                 	db	0
   368  007650  08                 	db	8
   369  007651  08                 	db	8
   370  007652  3E                 	db	62
   371  007653  08                 	db	8
   372  007654  08                 	db	8
   373  007655  00                 	db	0
   374  007656  00                 	db	0
   375  007657  00                 	db	0
   376  007658  00                 	db	0
   377  007659  00                 	db	0
   378  00765A  50                 	db	80
   379  00765B  30                 	db	48
   380  00765C  00                 	db	0
   381  00765D  00                 	db	0
   382  00765E  00                 	db	0
   383  00765F  00                 	db	0
   384  007660  08                 	db	8
   385  007661  08                 	db	8
   386  007662  08                 	db	8
   387  007663  08                 	db	8
   388  007664  08                 	db	8
   389  007665  00                 	db	0
   390  007666  00                 	db	0
   391  007667  00                 	db	0
   392  007668  00                 	db	0
   393  007669  00                 	db	0
   394  00766A  40                 	db	64
   395  00766B  00                 	db	0
   396  00766C  00                 	db	0
   397  00766D  00                 	db	0
   398  00766E  00                 	db	0
   399  00766F  40                 	db	64
   400  007670  20                 	db	32
   401  007671  10                 	db	16
   402  007672  08                 	db	8
   403  007673  04                 	db	4
   404  007674  02                 	db	2
   405  007675  01                 	db	1
   406  007676  00                 	db	0
   407  007677  00                 	db	0
   408  007678  3E                 	db	62
   409  007679  41                 	db	65
   410  00767A  41                 	db	65
   411  00767B  41                 	db	65
   412  00767C  3E                 	db	62
   413  00767D  00                 	db	0
   414  00767E  00                 	db	0
   415  00767F  00                 	db	0
   416  007680  00                 	db	0
   417  007681  41                 	db	65
   418  007682  7F                 	db	127
   419  007683  40                 	db	64
   420  007684  00                 	db	0
   421  007685  00                 	db	0
   422  007686  00                 	db	0
   423  007687  00                 	db	0
   424  007688  42                 	db	66
   425  007689  61                 	db	97
   426  00768A  51                 	db	81
   427  00768B  49                 	db	73
   428  00768C  6E                 	db	110
   429  00768D  00                 	db	0
   430  00768E  00                 	db	0
   431  00768F  00                 	db	0
   432  007690  22                 	db	34
   433  007691  41                 	db	65
   434  007692  49                 	db	73
   435  007693  49                 	db	73
   436  007694  36                 	db	54
   437  007695  00                 	db	0
   438  007696  00                 	db	0
   439  007697  00                 	db	0
   440  007698  18                 	db	24
   441  007699  14                 	db	20
   442  00769A  12                 	db	18
   443  00769B  7F                 	db	127
   444  00769C  10                 	db	16
   445  00769D  00                 	db	0
   446  00769E  00                 	db	0
   447  00769F  00                 	db	0
   448  0076A0  27                 	db	39
   449  0076A1  49                 	db	73
   450  0076A2  49                 	db	73
   451  0076A3  49                 	db	73
   452  0076A4  71                 	db	113
   453  0076A5  00                 	db	0
   454  0076A6  00                 	db	0
   455  0076A7  00                 	db	0
   456  0076A8  3C                 	db	60
   457  0076A9  4A                 	db	74
   458  0076AA  49                 	db	73
   459  0076AB  48                 	db	72
   460  0076AC  70                 	db	112
   461  0076AD  00                 	db	0
   462  0076AE  00                 	db	0
   463  0076AF  00                 	db	0
   464  0076B0  43                 	db	67
   465  0076B1  21                 	db	33
   466  0076B2  11                 	db	17
   467  0076B3  0D                 	db	13
   468  0076B4  03                 	db	3
   469  0076B5  00                 	db	0
   470  0076B6  00                 	db	0
   471  0076B7  00                 	db	0
   472  0076B8  36                 	db	54
   473  0076B9  49                 	db	73
   474  0076BA  49                 	db	73
   475  0076BB  49                 	db	73
   476  0076BC  36                 	db	54
   477  0076BD  00                 	db	0
   478  0076BE  00                 	db	0
   479  0076BF  00                 	db	0
   480  0076C0  06                 	db	6
   481  0076C1  09                 	db	9
   482  0076C2  49                 	db	73
   483  0076C3  29                 	db	41
   484  0076C4  1E                 	db	30
   485  0076C5  00                 	db	0
   486  0076C6  00                 	db	0
   487  0076C7  00                 	db	0
   488  0076C8  00                 	db	0
   489  0076C9  00                 	db	0
   490  0076CA  12                 	db	18
   491  0076CB  00                 	db	0
   492  0076CC  00                 	db	0
   493  0076CD  00                 	db	0
   494  0076CE  00                 	db	0
   495  0076CF  00                 	db	0
   496  0076D0  00                 	db	0
   497  0076D1  00                 	db	0
   498  0076D2  52                 	db	82
   499  0076D3  30                 	db	48
   500  0076D4  00                 	db	0
   501  0076D5  00                 	db	0
   502  0076D6  00                 	db	0
   503  0076D7  00                 	db	0
   504  0076D8  00                 	db	0
   505  0076D9  08                 	db	8
   506  0076DA  14                 	db	20
   507  0076DB  14                 	db	20
   508  0076DC  22                 	db	34
   509  0076DD  00                 	db	0
   510  0076DE  00                 	db	0
   511  0076DF  00                 	db	0
   512  0076E0  14                 	db	20
   513  0076E1  14                 	db	20
   514  0076E2  14                 	db	20
   515  0076E3  14                 	db	20
   516  0076E4  14                 	db	20
   517  0076E5  14                 	db	20
   518  0076E6  00                 	db	0
   519  0076E7  00                 	db	0
   520  0076E8  00                 	db	0
   521  0076E9  22                 	db	34
   522  0076EA  14                 	db	20
   523  0076EB  14                 	db	20
   524  0076EC  08                 	db	8
   525  0076ED  00                 	db	0
   526  0076EE  00                 	db	0
   527  0076EF  00                 	db	0
   528  0076F0  02                 	db	2
   529  0076F1  01                 	db	1
   530  0076F2  59                 	db	89
   531  0076F3  05                 	db	5
   532  0076F4  02                 	db	2
   533  0076F5  00                 	db	0
   534  0076F6  00                 	db	0
   535  0076F7  3E                 	db	62
   536  0076F8  41                 	db	65
   537  0076F9  5D                 	db	93
   538  0076FA  55                 	db	85
   539  0076FB  4D                 	db	77
   540  0076FC  51                 	db	81
   541  0076FD  2E                 	db	46
   542  0076FE  00                 	db	0
   543  0076FF  40                 	db	64
   544  007700  7C                 	db	124
   545  007701  4A                 	db	74
   546  007702  09                 	db	9
   547  007703  4A                 	db	74
   548  007704  7C                 	db	124
   549  007705  40                 	db	64
   550  007706  00                 	db	0
   551  007707  41                 	db	65
   552  007708  7F                 	db	127
   553  007709  49                 	db	73
   554  00770A  49                 	db	73
   555  00770B  49                 	db	73
   556  00770C  49                 	db	73
   557  00770D  36                 	db	54
   558  00770E  00                 	db	0
   559  00770F  1C                 	db	28
   560  007710  22                 	db	34
   561  007711  41                 	db	65
   562  007712  41                 	db	65
   563  007713  41                 	db	65
   564  007714  41                 	db	65
   565  007715  22                 	db	34
   566  007716  00                 	db	0
   567  007717  41                 	db	65
   568  007718  7F                 	db	127
   569  007719  41                 	db	65
   570  00771A  41                 	db	65
   571  00771B  41                 	db	65
   572  00771C  22                 	db	34
   573  00771D  1C                 	db	28
   574  00771E  00                 	db	0
   575  00771F  41                 	db	65
   576  007720  7F                 	db	127
   577  007721  49                 	db	73
   578  007722  49                 	db	73
   579  007723  5D                 	db	93
   580  007724  41                 	db	65
   581  007725  63                 	db	99
   582  007726  00                 	db	0
   583  007727  41                 	db	65
   584  007728  7F                 	db	127
   585  007729  49                 	db	73
   586  00772A  09                 	db	9
   587  00772B  1D                 	db	29
   588  00772C  01                 	db	1
   589  00772D  03                 	db	3
   590  00772E  00                 	db	0
   591  00772F  1C                 	db	28
   592  007730  22                 	db	34
   593  007731  41                 	db	65
   594  007732  49                 	db	73
   595  007733  49                 	db	73
   596  007734  3A                 	db	58
   597  007735  08                 	db	8
   598  007736  00                 	db	0
   599  007737  41                 	db	65
   600  007738  7F                 	db	127
   601  007739  08                 	db	8
   602  00773A  08                 	db	8
   603  00773B  08                 	db	8
   604  00773C  7F                 	db	127
   605  00773D  41                 	db	65
   606  00773E  00                 	db	0
   607  00773F  00                 	db	0
   608  007740  41                 	db	65
   609  007741  41                 	db	65
   610  007742  7F                 	db	127
   611  007743  41                 	db	65
   612  007744  41                 	db	65
   613  007745  00                 	db	0
   614  007746  00                 	db	0
   615  007747  30                 	db	48
   616  007748  40                 	db	64
   617  007749  41                 	db	65
   618  00774A  41                 	db	65
   619  00774B  3F                 	db	63
   620  00774C  01                 	db	1
   621  00774D  01                 	db	1
   622  00774E  00                 	db	0
   623  00774F  41                 	db	65
   624  007750  7F                 	db	127
   625  007751  08                 	db	8
   626  007752  0C                 	db	12
   627  007753  12                 	db	18
   628  007754  61                 	db	97
   629  007755  41                 	db	65
   630  007756  00                 	db	0
   631  007757  41                 	db	65
   632  007758  7F                 	db	127
   633  007759  41                 	db	65
   634  00775A  40                 	db	64
   635  00775B  40                 	db	64
   636  00775C  40                 	db	64
   637  00775D  60                 	db	96
   638  00775E  00                 	db	0
   639  00775F  41                 	db	65
   640  007760  7F                 	db	127
   641  007761  42                 	db	66
   642  007762  0C                 	db	12
   643  007763  42                 	db	66
   644  007764  7F                 	db	127
   645  007765  41                 	db	65
   646  007766  00                 	db	0
   647  007767  41                 	db	65
   648  007768  7F                 	db	127
   649  007769  42                 	db	66
   650  00776A  0C                 	db	12
   651  00776B  11                 	db	17
   652  00776C  7F                 	db	127
   653  00776D  01                 	db	1
   654  00776E  00                 	db	0
   655  00776F  1C                 	db	28
   656  007770  22                 	db	34
   657  007771  41                 	db	65
   658  007772  41                 	db	65
   659  007773  41                 	db	65
   660  007774  22                 	db	34
   661  007775  1C                 	db	28
   662  007776  00                 	db	0
   663  007777  41                 	db	65
   664  007778  7F                 	db	127
   665  007779  49                 	db	73
   666  00777A  09                 	db	9
   667  00777B  09                 	db	9
   668  00777C  09                 	db	9
   669  00777D  06                 	db	6
   670  00777E  00                 	db	0
   671  00777F  0C                 	db	12
   672  007780  12                 	db	18
   673  007781  21                 	db	33
   674  007782  21                 	db	33
   675  007783  61                 	db	97
   676  007784  52                 	db	82
   677  007785  4C                 	db	76
   678  007786  00                 	db	0
   679  007787  41                 	db	65
   680  007788  7F                 	db	127
   681  007789  09                 	db	9
   682  00778A  09                 	db	9
   683  00778B  19                 	db	25
   684  00778C  69                 	db	105
   685  00778D  46                 	db	70
   686  00778E  00                 	db	0
   687  00778F  66                 	db	102
   688  007790  49                 	db	73
   689  007791  49                 	db	73
   690  007792  49                 	db	73
   691  007793  49                 	db	73
   692  007794  49                 	db	73
   693  007795  33                 	db	51
   694  007796  00                 	db	0
   695  007797  03                 	db	3
   696  007798  01                 	db	1
   697  007799  41                 	db	65
   698  00779A  7F                 	db	127
   699  00779B  41                 	db	65
   700  00779C  01                 	db	1
   701  00779D  03                 	db	3
   702  00779E  00                 	db	0
   703  00779F  01                 	db	1
   704  0077A0  3F                 	db	63
   705  0077A1  41                 	db	65
   706  0077A2  40                 	db	64
   707  0077A3  41                 	db	65
   708  0077A4  3F                 	db	63
   709  0077A5  01                 	db	1
   710  0077A6  00                 	db	0
   711  0077A7  01                 	db	1
   712  0077A8  0F                 	db	15
   713  0077A9  31                 	db	49
   714  0077AA  40                 	db	64
   715  0077AB  31                 	db	49
   716  0077AC  0F                 	db	15
   717  0077AD  01                 	db	1
   718  0077AE  00                 	db	0
   719  0077AF  01                 	db	1
   720  0077B0  1F                 	db	31
   721  0077B1  61                 	db	97
   722  0077B2  14                 	db	20
   723  0077B3  61                 	db	97
   724  0077B4  1F                 	db	31
   725  0077B5  01                 	db	1
   726  0077B6  00                 	db	0
   727  0077B7  41                 	db	65
   728  0077B8  41                 	db	65
   729  0077B9  36                 	db	54
   730  0077BA  08                 	db	8
   731  0077BB  36                 	db	54
   732  0077BC  41                 	db	65
   733  0077BD  41                 	db	65
   734  0077BE  00                 	db	0
   735  0077BF  01                 	db	1
   736  0077C0  03                 	db	3
   737  0077C1  44                 	db	68
   738  0077C2  78                 	db	120
   739  0077C3  44                 	db	68
   740  0077C4  03                 	db	3
   741  0077C5  01                 	db	1
   742  0077C6  00                 	db	0
   743  0077C7  43                 	db	67
   744  0077C8  61                 	db	97
   745  0077C9  51                 	db	81
   746  0077CA  49                 	db	73
   747  0077CB  45                 	db	69
   748  0077CC  43                 	db	67
   749  0077CD  61                 	db	97
   750  0077CE  00                 	db	0
   751  0077CF  00                 	db	0
   752  0077D0  00                 	db	0
   753  0077D1  7F                 	db	127
   754  0077D2  41                 	db	65
   755  0077D3  41                 	db	65
   756  0077D4  00                 	db	0
   757  0077D5  00                 	db	0
   758  0077D6  00                 	db	0
   759  0077D7  01                 	db	1
   760  0077D8  02                 	db	2
   761  0077D9  04                 	db	4
   762  0077DA  08                 	db	8
   763  0077DB  10                 	db	16
   764  0077DC  20                 	db	32
   765  0077DD  40                 	db	64
   766  0077DE  00                 	db	0
   767  0077DF  00                 	db	0
   768  0077E0  00                 	db	0
   769  0077E1  41                 	db	65
   770  0077E2  41                 	db	65
   771  0077E3  7F                 	db	127
   772  0077E4  00                 	db	0
   773  0077E5  00                 	db	0
   774  0077E6  00                 	db	0
   775  0077E7  00                 	db	0
   776  0077E8  04                 	db	4
   777  0077E9  02                 	db	2
   778  0077EA  01                 	db	1
   779  0077EB  01                 	db	1
   780  0077EC  02                 	db	2
   781  0077ED  04                 	db	4
   782  0077EE  00                 	db	0
   783  0077EF  00                 	db	0
   784  0077F0  40                 	db	64
   785  0077F1  40                 	db	64
   786  0077F2  40                 	db	64
   787  0077F3  40                 	db	64
   788  0077F4  40                 	db	64
   789  0077F5  40                 	db	64
   790  0077F6  00                 	db	0
   791  0077F7  00                 	db	0
   792  0077F8  01                 	db	1
   793  0077F9  02                 	db	2
   794  0077FA  00                 	db	0
   795  0077FB  00                 	db	0
   796  0077FC  00                 	db	0
   797  0077FD  00                 	db	0
   798  0077FE  00                 	db	0
   799  0077FF  00                 	db	0
   800  007800  34                 	db	52
   801  007801  4A                 	db	74
   802  007802  4A                 	db	74
   803  007803  4A                 	db	74
   804  007804  3C                 	db	60
   805  007805  40                 	db	64
   806  007806  00                 	db	0
   807  007807  00                 	db	0
   808  007808  41                 	db	65
   809  007809  3F                 	db	63
   810  00780A  48                 	db	72
   811  00780B  48                 	db	72
   812  00780C  48                 	db	72
   813  00780D  30                 	db	48
   814  00780E  00                 	db	0
   815  00780F  00                 	db	0
   816  007810  3C                 	db	60
   817  007811  42                 	db	66
   818  007812  42                 	db	66
   819  007813  42                 	db	66
   820  007814  24                 	db	36
   821  007815  00                 	db	0
   822  007816  00                 	db	0
   823  007817  00                 	db	0
   824  007818  30                 	db	48
   825  007819  48                 	db	72
   826  00781A  48                 	db	72
   827  00781B  49                 	db	73
   828  00781C  3F                 	db	63
   829  00781D  40                 	db	64
   830  00781E  00                 	db	0
   831  00781F  00                 	db	0
   832  007820  3C                 	db	60
   833  007821  4A                 	db	74
   834  007822  4A                 	db	74
   835  007823  4A                 	db	74
   836  007824  2C                 	db	44
   837  007825  00                 	db	0
   838  007826  00                 	db	0
   839  007827  00                 	db	0
   840  007828  00                 	db	0
   841  007829  48                 	db	72
   842  00782A  7E                 	db	126
   843  00782B  49                 	db	73
   844  00782C  09                 	db	9
   845  00782D  00                 	db	0
   846  00782E  00                 	db	0
   847  00782F  00                 	db	0
   848  007830  26                 	db	38
   849  007831  49                 	db	73
   850  007832  49                 	db	73
   851  007833  49                 	db	73
   852  007834  3F                 	db	63
   853  007835  01                 	db	1
   854  007836  00                 	db	0
   855  007837  41                 	db	65
   856  007838  7F                 	db	127
   857  007839  48                 	db	72
   858  00783A  04                 	db	4
   859  00783B  44                 	db	68
   860  00783C  78                 	db	120
   861  00783D  40                 	db	64
   862  00783E  00                 	db	0
   863  00783F  00                 	db	0
   864  007840  00                 	db	0
   865  007841  44                 	db	68
   866  007842  7D                 	db	125
   867  007843  40                 	db	64
   868  007844  00                 	db	0
   869  007845  00                 	db	0
   870  007846  00                 	db	0
   871  007847  00                 	db	0
   872  007848  00                 	db	0
   873  007849  40                 	db	64
   874  00784A  44                 	db	68
   875  00784B  3D                 	db	61
   876  00784C  00                 	db	0
   877  00784D  00                 	db	0
   878  00784E  00                 	db	0
   879  00784F  41                 	db	65
   880  007850  7F                 	db	127
   881  007851  10                 	db	16
   882  007852  18                 	db	24
   883  007853  24                 	db	36
   884  007854  42                 	db	66
   885  007855  42                 	db	66
   886  007856  00                 	db	0
   887  007857  00                 	db	0
   888  007858  40                 	db	64
   889  007859  41                 	db	65
   890  00785A  7F                 	db	127
   891  00785B  40                 	db	64
   892  00785C  40                 	db	64
   893  00785D  00                 	db	0
   894  00785E  00                 	db	0
   895  00785F  42                 	db	66
   896  007860  7E                 	db	126
   897  007861  02                 	db	2
   898  007862  7C                 	db	124
   899  007863  02                 	db	2
   900  007864  7E                 	db	126
   901  007865  40                 	db	64
   902  007866  00                 	db	0
   903  007867  42                 	db	66
   904  007868  7E                 	db	126
   905  007869  44                 	db	68
   906  00786A  02                 	db	2
   907  00786B  42                 	db	66
   908  00786C  7C                 	db	124
   909  00786D  40                 	db	64
   910  00786E  00                 	db	0
   911  00786F  00                 	db	0
   912  007870  3C                 	db	60
   913  007871  42                 	db	66
   914  007872  42                 	db	66
   915  007873  42                 	db	66
   916  007874  3C                 	db	60
   917  007875  00                 	db	0
   918  007876  00                 	db	0
   919  007877  00                 	db	0
   920  007878  41                 	db	65
   921  007879  7F                 	db	127
   922  00787A  49                 	db	73
   923  00787B  09                 	db	9
   924  00787C  09                 	db	9
   925  00787D  06                 	db	6
   926  00787E  00                 	db	0
   927  00787F  00                 	db	0
   928  007880  06                 	db	6
   929  007881  09                 	db	9
   930  007882  09                 	db	9
   931  007883  49                 	db	73
   932  007884  7F                 	db	127
   933  007885  41                 	db	65
   934  007886  00                 	db	0
   935  007887  00                 	db	0
   936  007888  42                 	db	66
   937  007889  7E                 	db	126
   938  00788A  44                 	db	68
   939  00788B  02                 	db	2
   940  00788C  02                 	db	2
   941  00788D  04                 	db	4
   942  00788E  00                 	db	0
   943  00788F  00                 	db	0
   944  007890  64                 	db	100
   945  007891  4A                 	db	74
   946  007892  4A                 	db	74
   947  007893  4A                 	db	74
   948  007894  36                 	db	54
   949  007895  00                 	db	0
   950  007896  00                 	db	0
   951  007897  00                 	db	0
   952  007898  04                 	db	4
   953  007899  3F                 	db	63
   954  00789A  44                 	db	68
   955  00789B  44                 	db	68
   956  00789C  20                 	db	32
   957  00789D  00                 	db	0
   958  00789E  00                 	db	0
   959  00789F  00                 	db	0
   960  0078A0  02                 	db	2
   961  0078A1  3E                 	db	62
   962  0078A2  40                 	db	64
   963  0078A3  40                 	db	64
   964  0078A4  22                 	db	34
   965  0078A5  7E                 	db	126
   966  0078A6  40                 	db	64
   967  0078A7  02                 	db	2
   968  0078A8  0E                 	db	14
   969  0078A9  32                 	db	50
   970  0078AA  40                 	db	64
   971  0078AB  32                 	db	50
   972  0078AC  0E                 	db	14
   973  0078AD  02                 	db	2
   974  0078AE  00                 	db	0
   975  0078AF  02                 	db	2
   976  0078B0  1E                 	db	30
   977  0078B1  62                 	db	98
   978  0078B2  18                 	db	24
   979  0078B3  62                 	db	98
   980  0078B4  1E                 	db	30
   981  0078B5  02                 	db	2
   982  0078B6  00                 	db	0
   983  0078B7  42                 	db	66
   984  0078B8  62                 	db	98
   985  0078B9  14                 	db	20
   986  0078BA  08                 	db	8
   987  0078BB  14                 	db	20
   988  0078BC  62                 	db	98
   989  0078BD  42                 	db	66
   990  0078BE  00                 	db	0
   991  0078BF  01                 	db	1
   992  0078C0  43                 	db	67
   993  0078C1  45                 	db	69
   994  0078C2  38                 	db	56
   995  0078C3  05                 	db	5
   996  0078C4  03                 	db	3
   997  0078C5  01                 	db	1
   998  0078C6  00                 	db	0
   999  0078C7  00                 	db	0
  1000  0078C8  46                 	db	70
  1001  0078C9  62                 	db	98
  1002  0078CA  52                 	db	82
  1003  0078CB  4A                 	db	74
  1004  0078CC  46                 	db	70
  1005  0078CD  62                 	db	98
  1006  0078CE  00                 	db	0
  1007  0078CF  00                 	db	0
  1008  0078D0  00                 	db	0
  1009  0078D1  08                 	db	8
  1010  0078D2  36                 	db	54
  1011  0078D3  41                 	db	65
  1012  0078D4  00                 	db	0
  1013  0078D5  00                 	db	0
  1014  0078D6  00                 	db	0
  1015  0078D7  00                 	db	0
  1016  0078D8  00                 	db	0
  1017  0078D9  00                 	db	0
  1018  0078DA  7F                 	db	127
  1019  0078DB  00                 	db	0
  1020  0078DC  00                 	db	0
  1021  0078DD  00                 	db	0
  1022  0078DE  00                 	db	0
  1023  0078DF  00                 	db	0
  1024  0078E0  00                 	db	0
  1025  0078E1  00                 	db	0
  1026  0078E2  41                 	db	65
  1027  0078E3  36                 	db	54
  1028  0078E4  08                 	db	8
  1029  0078E5  00                 	db	0
  1030  0078E6  00                 	db	0
  1031  0078E7  00                 	db	0
  1032  0078E8  18                 	db	24
  1033  0078E9  08                 	db	8
  1034  0078EA  08                 	db	8
  1035  0078EB  10                 	db	16
  1036  0078EC  10                 	db	16
  1037  0078ED  18                 	db	24
  1038  0078EE  00                 	db	0
  1039  0078EF  AA                 	db	170
  1040  0078F0  55                 	db	85
  1041  0078F1  AA                 	db	170
  1042  0078F2  55                 	db	85
  1043  0078F3  AA                 	db	170
  1044  0078F4  55                 	db	85
  1045  0078F5  AA                 	db	170
  1046  0078F6  55                 	db	85
  1047  0078F7                     __end_of_OledFont0:
  1048                           	opt stack 0
  1049  0078F7                     _configDescriptor1:
  1050                           	opt stack 0
  1051  0078F7  09                 	db	9
  1052  0078F8  02                 	db	2
  1053  0078F9  43                 	db	67
  1054  0078FA  00                 	db	0
  1055  0078FB  02                 	db	2
  1056  0078FC  01                 	db	1
  1057  0078FD  00                 	db	0
  1058  0078FE  C0                 	db	192
  1059  0078FF  32                 	db	50
  1060  007900  09                 	db	9
  1061  007901  04                 	db	4
  1062  007902  00                 	db	0
  1063  007903  00                 	db	0
  1064  007904  01                 	db	1
  1065  007905  02                 	db	2
  1066  007906  02                 	db	2
  1067  007907  01                 	db	1
  1068  007908  00                 	db	0
  1069  007909  05                 	db	5
  1070  00790A  24                 	db	36
  1071  00790B  00                 	db	0
  1072  00790C  10                 	db	16
  1073  00790D  01                 	db	1
  1074  00790E  04                 	db	4
  1075  00790F  24                 	db	36
  1076  007910  02                 	db	2
  1077  007911  02                 	db	2
  1078  007912  05                 	db	5
  1079  007913  24                 	db	36
  1080  007914  06                 	db	6
  1081  007915  00                 	db	0
  1082  007916  01                 	db	1
  1083  007917  05                 	db	5
  1084  007918  24                 	db	36
  1085  007919  01                 	db	1
  1086  00791A  00                 	db	0
  1087  00791B  01                 	db	1
  1088  00791C  07                 	db	7
  1089  00791D  05                 	db	5
  1090  00791E  81                 	db	129
  1091  00791F  03                 	db	3
  1092  007920  08                 	db	8
  1093  007921  00                 	db	0
  1094  007922  02                 	db	2
  1095  007923  09                 	db	9
  1096  007924  04                 	db	4
  1097  007925  01                 	db	1
  1098  007926  00                 	db	0
  1099  007927  02                 	db	2
  1100  007928  0A                 	db	10
  1101  007929  00                 	db	0
  1102  00792A  00                 	db	0
  1103  00792B  00                 	db	0
  1104  00792C  07                 	db	7
  1105  00792D  05                 	db	5
  1106  00792E  02                 	db	2
  1107  00792F  02                 	db	2
  1108  007930  40                 	db	64
  1109  007931  00                 	db	0
  1110  007932  00                 	db	0
  1111  007933  07                 	db	7
  1112  007934  05                 	db	5
  1113  007935  82                 	db	130
  1114  007936  02                 	db	2
  1115  007937  40                 	db	64
  1116  007938  00                 	db	0
  1117  007939  00                 	db	0
  1118  00793A                     __end_of_configDescriptor1:
  1119                           	opt stack 0
  1120  00793A                     _sd002:
  1121                           	opt stack 0
  1122  00793A  34                 	db	52
  1123  00793B  03                 	db	3
  1124  00793C  0043               	dw	67
  1125  00793E  0044               	dw	68
  1126  007940  0043               	dw	67
  1127  007942  0020               	dw	32
  1128  007944  0052               	dw	82
  1129  007946  0053               	dw	83
  1130  007948  002D               	dw	45
  1131  00794A  0032               	dw	50
  1132  00794C  0033               	dw	51
  1133  00794E  0032               	dw	50
  1134  007950  0020               	dw	32
  1135  007952  0045               	dw	69
  1136  007954  006D               	dw	109
  1137  007956  0075               	dw	117
  1138  007958  006C               	dw	108
  1139  00795A  0061               	dw	97
  1140  00795C  0074               	dw	116
  1141  00795E  0069               	dw	105
  1142  007960  006F               	dw	111
  1143  007962  006E               	dw	110
  1144  007964  0020               	dw	32
  1145  007966  0044               	dw	68
  1146  007968  0065               	dw	101
  1147  00796A  006D               	dw	109
  1148  00796C  006F               	dw	111
  1149  00796E                     __end_of_sd002:
  1150                           	opt stack 0
  1151  00796E                     _sd001:
  1152                           	opt stack 0
  1153  00796E  34                 	db	52
  1154  00796F  03                 	db	3
  1155  007970  004D               	dw	77
  1156  007972  0069               	dw	105
  1157  007974  0063               	dw	99
  1158  007976  0072               	dw	114
  1159  007978  006F               	dw	111
  1160  00797A  0063               	dw	99
  1161  00797C  0068               	dw	104
  1162  00797E  0069               	dw	105
  1163  007980  0070               	dw	112
  1164  007982  0020               	dw	32
  1165  007984  0054               	dw	84
  1166  007986  0065               	dw	101
  1167  007988  0063               	dw	99
  1168  00798A  0068               	dw	104
  1169  00798C  006E               	dw	110
  1170  00798E  006F               	dw	111
  1171  007990  006C               	dw	108
  1172  007992  006F               	dw	111
  1173  007994  0067               	dw	103
  1174  007996  0079               	dw	121
  1175  007998  0020               	dw	32
  1176  00799A  0049               	dw	73
  1177  00799C  006E               	dw	110
  1178  00799E  0063               	dw	99
  1179  0079A0  002E               	dw	46
  1180  0079A2                     __end_of_sd001:
  1181                           	opt stack 0
  1182  0079A2                     _device_dsc:
  1183                           	opt stack 0
  1184  0079A2  12                 	db	18
  1185  0079A3  01                 	db	1
  1186  0079A4  0200               	dw	512
  1187  0079A6  02                 	db	2
  1188  0079A7  00                 	db	0
  1189  0079A8  00                 	db	0
  1190  0079A9  08                 	db	8
  1191  0079AA  04D8               	dw	1240
  1192  0079AC  000A               	dw	10
  1193  0079AE  0100               	dw	256
  1194  0079B0  01                 	db	1
  1195  0079B1  02                 	db	2
  1196  0079B2  00                 	db	0
  1197  0079B3  01                 	db	1
  1198  0079B4                     __end_of_device_dsc:
  1199                           	opt stack 0
  1200  0079B4                     _sd000:
  1201                           	opt stack 0
  1202  0079B4  04                 	db	4
  1203  0079B5  03                 	db	3
  1204  0079B6  0409               	dw	1033
  1205  0079B8                     __end_of_sd000:
  1206                           	opt stack 0
  1207  0000                     _ANSELCbits	set	3933
  1208  0000                     _ANSELAbits	set	3931
  1209  0000                     _TMR3	set	4018
  1210  0000                     _TMR0	set	4054
  1211  0000                     _UEP0bits	set	3946
  1212  0000                     _IPR3bits	set	4005
  1213  0000                     _RCONbits	set	4048
  1214  0000                     _UCON	set	3936
  1215  0000                     _USTAT	set	3937
  1216  0000                     _PIR3bits	set	4004
  1217  0000                     _UIEbits	set	3940
  1218  0000                     _UIRbits	set	3941
  1219  0000                     _UADDR	set	3939
  1220  0000                     _UIE	set	3940
  1221  0000                     _UEIE	set	3942
  1222  0000                     _UCFG	set	3938
  1223  0000                     _UIR	set	3941
  1224  0000                     _UEIR	set	3943
  1225  0000                     _PIE3bits	set	4003
  1226  0000                     _T0CONbits	set	4053
  1227  0000                     _T3GCONbits	set	4020
  1228  0000                     _T3CONbits	set	4017
  1229  0000                     _T3GCON	set	4020
  1230  0000                     _T3CON	set	4017
  1231  0000                     _T2CONbits	set	4026
  1232  0000                     _TMR2	set	4028
  1233  0000                     _PR2	set	4027
  1234  0000                     _T2CON	set	4026
  1235  0000                     _VREFCON0bits	set	3965
  1236  0000                     _CM1CON0bits	set	3992
  1237  0000                     _CM2CON1bits	set	3994
  1238  0000                     _CM1CON0	set	3992
  1239  0000                     _EEDATA	set	4008
  1240  0000                     _EEADR	set	4009
  1241  0000                     _EECON2	set	4007
  1242  0000                     _EECON1bits	set	4006
  1243  0000                     _TABLAT	set	4085
  1244  0000                     _TBLPTRL	set	4086
  1245  0000                     _TBLPTRH	set	4087
  1246  0000                     _TBLPTRU	set	4088
  1247  0000                     _TRISD	set	3989
  1248  0000                     _INTCON2bits	set	4081
  1249  0000                     _TRISAbits	set	3986
  1250  0000                     _T1GCONbits	set	4044
  1251  0000                     _T1CONbits	set	4045
  1252  0000                     _TMR1L	set	4046
  1253  0000                     _TMR1H	set	4047
  1254  0000                     _T1GCON	set	4044
  1255  0000                     _T1CON	set	4045
  1256  0000                     _SSP1STATbits	set	4039
  1257  0000                     _SSPBUF	set	4041
  1258  0000                     _SSP1CON1bits	set	4038
  1259  0000                     _SSP1ADD	set	4040
  1260  0000                     _SSP1CON1	set	4038
  1261  0000                     _SSP1STAT	set	4039
  1262  0000                     _ADRESH	set	4036
  1263  0000                     _ADRESL	set	4035
  1264  0000                     _ADCON2	set	4032
  1265  0000                     _ADCON1	set	4033
  1266  0000                     _ADCON0	set	4034
  1267  0000                     _VREFCON0	set	3965
  1268  0000                     _ACTCON	set	4021
  1269  0000                     _OSCCON2bits	set	4050
  1270  0000                     _OSCCON2	set	4050
  1271  0000                     _OSCCON	set	4051
  1272  0000                     _OSCTUNE	set	3995
  1273  0000                     _IOCBbits	set	3974
  1274  0000                     _PIR1bits	set	3998
  1275  0000                     _RCREG	set	4014
  1276  0000                     _RCSTAbits	set	4011
  1277  0000                     _TXSTA	set	4012
  1278  0000                     _RCSTA	set	4011
  1279  0000                     _BAUDCON	set	4024
  1280  0000                     _LATD	set	3980
  1281  0000                     _TRISCbits	set	3988
  1282  0000                     _TRISBbits	set	3987
  1283  0000                     _TRISEbits	set	3990
  1284  0000                     _SPBRGH	set	4016
  1285  0000                     _SPBRG	set	4015
  1286  0000                     _UCONbits	set	3936
  1287  0000                     _TMR3L	set	4018
  1288  0000                     _TMR3H	set	4019
  1289  0000                     _PIR2bits	set	4001
  1290  0000                     _WDTCONbits	set	4049
  1291  0000                     _PORTCbits	set	3970
  1292  0000                     _IOCCbits	set	3975
  1293  0000                     _INTCON3bits	set	4080
  1294  0000                     _PIE2bits	set	4000
  1295  0000                     _LATEbits	set	3981
  1296  0000                     _INTCONbits	set	4082
  1297  0000                     _ADCON0bits	set	4034
  1298  0000                     _PORTAbits	set	3968
  1299  0000                     _PIE1bits	set	3997
  1300  0000                     _TXREG	set	4013
  1301  0000                     _LATCbits	set	3979
  1302  0000                     _TXSTAbits	set	4012
  1303  0000                     _LATAbits	set	3977
  1304  0000                     _PORTBbits	set	3969
  1305  0000                     _LATBbits	set	3978
  1306  0000                     _UEP1	set	3947
  1307  0000                     _UEP0	set	3946
  1308  0000                     _CKE	set	32318
  1309  0000                     _CKP	set	32308
  1310  0000                     _GIE	set	32663
  1311  0000                     _PEIE	set	32662
  1312  0079B8                     STR_184:
  1313  0079B8  73                 	db	115	;'s'
  1314  0079B9  79                 	db	121	;'y'
  1315  0079BA  73                 	db	115	;'s'
  1316  0079BB  20                 	db	32
  1317  0079BC  73                 	db	115	;'s'
  1318  0079BD  65                 	db	101	;'e'
  1319  0079BE  74                 	db	116	;'t'
  1320  0079BF  20                 	db	32
  1321  0079C0  70                 	db	112	;'p'
  1322  0079C1  69                 	db	105	;'i'
  1323  0079C2  6E                 	db	110	;'n'
  1324  0079C3  6D                 	db	109	;'m'
  1325  0079C4  6F                 	db	111	;'o'
  1326  0079C5  64                 	db	100	;'d'
  1327  0079C6  65                 	db	101	;'e'
  1328  0079C7  20                 	db	32
  1329  0079C8  47                 	db	71	;'G'
  1330  0079C9  50                 	db	80	;'P'
  1331  0079CA  49                 	db	73	;'I'
  1332  0079CB  4F                 	db	79	;'O'
  1333  0079CC  31                 	db	49	;'1'
  1334  0079CD  32                 	db	50	;'2'
  1335  0079CE  20                 	db	32
  1336  0079CF  61                 	db	97	;'a'
  1337  0079D0  6E                 	db	110	;'n'
  1338  0079D1  61                 	db	97	;'a'
  1339  0079D2  00                 	db	0
  1340  0079D3                     STR_183:
  1341  0079D3  73                 	db	115	;'s'
  1342  0079D4  79                 	db	121	;'y'
  1343  0079D5  73                 	db	115	;'s'
  1344  0079D6  20                 	db	32
  1345  0079D7  73                 	db	115	;'s'
  1346  0079D8  65                 	db	101	;'e'
  1347  0079D9  74                 	db	116	;'t'
  1348  0079DA  20                 	db	32
  1349  0079DB  70                 	db	112	;'p'
  1350  0079DC  69                 	db	105	;'i'
  1351  0079DD  6E                 	db	110	;'n'
  1352  0079DE  6D                 	db	109	;'m'
  1353  0079DF  6F                 	db	111	;'o'
  1354  0079E0  64                 	db	100	;'d'
  1355  0079E1  65                 	db	101	;'e'
  1356  0079E2  20                 	db	32
  1357  0079E3  47                 	db	71	;'G'
  1358  0079E4  50                 	db	80	;'P'
  1359  0079E5  49                 	db	73	;'I'
  1360  0079E6  4F                 	db	79	;'O'
  1361  0079E7  31                 	db	49	;'1'
  1362  0079E8  33                 	db	51	;'3'
  1363  0079E9  20                 	db	32
  1364  0079EA  61                 	db	97	;'a'
  1365  0079EB  6E                 	db	110	;'n'
  1366  0079EC  61                 	db	97	;'a'
  1367  0079ED  00                 	db	0
  1368  0079EE                     STR_177:
  1369  0079EE  73                 	db	115	;'s'
  1370  0079EF  79                 	db	121	;'y'
  1371  0079F0  73                 	db	115	;'s'
  1372  0079F1  20                 	db	32
  1373  0079F2  73                 	db	115	;'s'
  1374  0079F3  65                 	db	101	;'e'
  1375  0079F4  74                 	db	116	;'t'
  1376  0079F5  20                 	db	32
  1377  0079F6  70                 	db	112	;'p'
  1378  0079F7  69                 	db	105	;'i'
  1379  0079F8  6E                 	db	110	;'n'
  1380  0079F9  64                 	db	100	;'d'
  1381  0079FA  69                 	db	105	;'i'
  1382  0079FB  67                 	db	103	;'g'
  1383  0079FC  20                 	db	32
  1384  0079FD  47                 	db	71	;'G'
  1385  0079FE  50                 	db	80	;'P'
  1386  0079FF  49                 	db	73	;'I'
  1387  007A00  4F                 	db	79	;'O'
  1388  007A01  31                 	db	49	;'1'
  1389  007A02  30                 	db	48	;'0'
  1390  007A03  20                 	db	32
  1391  007A04  30                 	db	48	;'0'
  1392  007A05  0D                 	db	13
  1393  007A06  0A                 	db	10
  1394  007A07  00                 	db	0
  1395  007A08                     STR_178:
  1396  007A08  73                 	db	115	;'s'
  1397  007A09  79                 	db	121	;'y'
  1398  007A0A  73                 	db	115	;'s'
  1399  007A0B  20                 	db	32
  1400  007A0C  73                 	db	115	;'s'
  1401  007A0D  65                 	db	101	;'e'
  1402  007A0E  74                 	db	116	;'t'
  1403  007A0F  20                 	db	32
  1404  007A10  70                 	db	112	;'p'
  1405  007A11  69                 	db	105	;'i'
  1406  007A12  6E                 	db	110	;'n'
  1407  007A13  64                 	db	100	;'d'
  1408  007A14  69                 	db	105	;'i'
  1409  007A15  67                 	db	103	;'g'
  1410  007A16  20                 	db	32
  1411  007A17  47                 	db	71	;'G'
  1412  007A18  50                 	db	80	;'P'
  1413  007A19  49                 	db	73	;'I'
  1414  007A1A  4F                 	db	79	;'O'
  1415  007A1B  31                 	db	49	;'1'
  1416  007A1C  31                 	db	49	;'1'
  1417  007A1D  20                 	db	32
  1418  007A1E  30                 	db	48	;'0'
  1419  007A1F  0D                 	db	13
  1420  007A20  0A                 	db	10
  1421  007A21  00                 	db	0
  1422  007A22                     STR_175:
  1423  007A22  73                 	db	115	;'s'
  1424  007A23  79                 	db	121	;'y'
  1425  007A24  73                 	db	115	;'s'
  1426  007A25  20                 	db	32
  1427  007A26  73                 	db	115	;'s'
  1428  007A27  65                 	db	101	;'e'
  1429  007A28  74                 	db	116	;'t'
  1430  007A29  20                 	db	32
  1431  007A2A  70                 	db	112	;'p'
  1432  007A2B  69                 	db	105	;'i'
  1433  007A2C  6E                 	db	110	;'n'
  1434  007A2D  64                 	db	100	;'d'
  1435  007A2E  69                 	db	105	;'i'
  1436  007A2F  67                 	db	103	;'g'
  1437  007A30  20                 	db	32
  1438  007A31  47                 	db	71	;'G'
  1439  007A32  50                 	db	80	;'P'
  1440  007A33  49                 	db	73	;'I'
  1441  007A34  4F                 	db	79	;'O'
  1442  007A35  31                 	db	49	;'1'
  1443  007A36  30                 	db	48	;'0'
  1444  007A37  20                 	db	32
  1445  007A38  31                 	db	49	;'1'
  1446  007A39  0D                 	db	13
  1447  007A3A  0A                 	db	10
  1448  007A3B  00                 	db	0
  1449  007A3C                     STR_176:
  1450  007A3C  73                 	db	115	;'s'
  1451  007A3D  79                 	db	121	;'y'
  1452  007A3E  73                 	db	115	;'s'
  1453  007A3F  20                 	db	32
  1454  007A40  73                 	db	115	;'s'
  1455  007A41  65                 	db	101	;'e'
  1456  007A42  74                 	db	116	;'t'
  1457  007A43  20                 	db	32
  1458  007A44  70                 	db	112	;'p'
  1459  007A45  69                 	db	105	;'i'
  1460  007A46  6E                 	db	110	;'n'
  1461  007A47  64                 	db	100	;'d'
  1462  007A48  69                 	db	105	;'i'
  1463  007A49  67                 	db	103	;'g'
  1464  007A4A  20                 	db	32
  1465  007A4B  47                 	db	71	;'G'
  1466  007A4C  50                 	db	80	;'P'
  1467  007A4D  49                 	db	73	;'I'
  1468  007A4E  4F                 	db	79	;'O'
  1469  007A4F  31                 	db	49	;'1'
  1470  007A50  31                 	db	49	;'1'
  1471  007A51  20                 	db	32
  1472  007A52  31                 	db	49	;'1'
  1473  007A53  0D                 	db	13
  1474  007A54  0A                 	db	10
  1475  007A55  00                 	db	0
  1476  007A56                     STR_185:
  1477  007A56  73                 	db	115	;'s'
  1478  007A57  79                 	db	121	;'y'
  1479  007A58  73                 	db	115	;'s'
  1480  007A59  20                 	db	32
  1481  007A5A  67                 	db	103	;'g'
  1482  007A5B  65                 	db	101	;'e'
  1483  007A5C  74                 	db	116	;'t'
  1484  007A5D  20                 	db	32
  1485  007A5E  70                 	db	112	;'p'
  1486  007A5F  69                 	db	105	;'i'
  1487  007A60  6E                 	db	110	;'n'
  1488  007A61  61                 	db	97	;'a'
  1489  007A62  6E                 	db	110	;'n'
  1490  007A63  61                 	db	97	;'a'
  1491  007A64  20                 	db	32
  1492  007A65  47                 	db	71	;'G'
  1493  007A66  50                 	db	80	;'P'
  1494  007A67  49                 	db	73	;'I'
  1495  007A68  4F                 	db	79	;'O'
  1496  007A69  31                 	db	49	;'1'
  1497  007A6A  32                 	db	50	;'2'
  1498  007A6B  00                 	db	0
  1499  007A6C                     STR_186:
  1500  007A6C  73                 	db	115	;'s'
  1501  007A6D  79                 	db	121	;'y'
  1502  007A6E  73                 	db	115	;'s'
  1503  007A6F  20                 	db	32
  1504  007A70  67                 	db	103	;'g'
  1505  007A71  65                 	db	101	;'e'
  1506  007A72  74                 	db	116	;'t'
  1507  007A73  20                 	db	32
  1508  007A74  70                 	db	112	;'p'
  1509  007A75  69                 	db	105	;'i'
  1510  007A76  6E                 	db	110	;'n'
  1511  007A77  61                 	db	97	;'a'
  1512  007A78  6E                 	db	110	;'n'
  1513  007A79  61                 	db	97	;'a'
  1514  007A7A  20                 	db	32
  1515  007A7B  47                 	db	71	;'G'
  1516  007A7C  50                 	db	80	;'P'
  1517  007A7D  49                 	db	73	;'I'
  1518  007A7E  4F                 	db	79	;'O'
  1519  007A7F  31                 	db	49	;'1'
  1520  007A80  33                 	db	51	;'3'
  1521  007A81  00                 	db	0
  1522  007A82                     STR_22:
  1523  007A82  73                 	db	115	;'s'
  1524  007A83  79                 	db	121	;'y'
  1525  007A84  73                 	db	115	;'s'
  1526  007A85  20                 	db	32
  1527  007A86  73                 	db	115	;'s'
  1528  007A87  6C                 	db	108	;'l'
  1529  007A88  65                 	db	101	;'e'
  1530  007A89  65                 	db	101	;'e'
  1531  007A8A  70                 	db	112	;'p'
  1532  007A8B  20                 	db	32
  1533  007A8C  39                 	db	57	;'9'
  1534  007A8D  39                 	db	57	;'9'
  1535  007A8E  39                 	db	57	;'9'
  1536  007A8F  39                 	db	57	;'9'
  1537  007A90  39                 	db	57	;'9'
  1538  007A91  39                 	db	57	;'9'
  1539  007A92  39                 	db	57	;'9'
  1540  007A93  39                 	db	57	;'9'
  1541  007A94  39                 	db	57	;'9'
  1542  007A95  00                 	db	0
  1543  007A96                     STR_96:
  1544  007A96  4D                 	db	77	;'M'
  1545  007A97  61                 	db	97	;'a'
  1546  007A98  63                 	db	99	;'c'
  1547  007A99  20                 	db	32
  1548  007A9A  45                 	db	69	;'E'
  1549  007A9B  72                 	db	114	;'r'
  1550  007A9C  72                 	db	114	;'r'
  1551  007A9D  6F                 	db	111	;'o'
  1552  007A9E  72                 	db	114	;'r'
  1553  007A9F  20                 	db	32
  1554  007AA0  4F                 	db	79	;'O'
  1555  007AA1  63                 	db	99	;'c'
  1556  007AA2  63                 	db	99	;'c'
  1557  007AA3  75                 	db	117	;'u'
  1558  007AA4  72                 	db	114	;'r'
  1559  007AA5  72                 	db	114	;'r'
  1560  007AA6  65                 	db	101	;'e'
  1561  007AA7  64                 	db	100	;'d'
  1562  007AA8  00                 	db	0
  1563  007AA9                     STR_83:
  1564  007AA9  28                 	db	40
  1565  007AAA  55                 	db	85	;'U'
  1566  007AAB  4E                 	db	78	;'N'
  1567  007AAC  43                 	db	67	;'C'
  1568  007AAD  4E                 	db	78	;'N'
  1569  007AAE  46                 	db	70	;'F'
  1570  007AAF  29                 	db	41
  1571  007AB0  20                 	db	32
  1572  007AB1  20                 	db	32
  1573  007AB2  20                 	db	32
  1574  007AB3  20                 	db	32
  1575  007AB4  28                 	db	40
  1576  007AB5  43                 	db	67	;'C'
  1577  007AB6  4E                 	db	78	;'N'
  1578  007AB7  46                 	db	70	;'F'
  1579  007AB8  29                 	db	41
  1580  007AB9  20                 	db	32
  1581  007ABA  00                 	db	0
  1582  007ABB                     STR_40:
  1583  007ABB  20                 	db	32
  1584  007ABC  20                 	db	32
  1585  007ABD  28                 	db	40
  1586  007ABE  53                 	db	83	;'S'
  1587  007ABF  32                 	db	50	;'2'
  1588  007AC0  29                 	db	41
  1589  007AC1  20                 	db	32
  1590  007AC2  20                 	db	32
  1591  007AC3  20                 	db	32
  1592  007AC4  20                 	db	32
  1593  007AC5  20                 	db	32
  1594  007AC6  20                 	db	32
  1595  007AC7  20                 	db	32
  1596  007AC8  20                 	db	32
  1597  007AC9  20                 	db	32
  1598  007ACA  20                 	db	32
  1599  007ACB  00                 	db	0
  1600  007ACC                     STR_92:
  1601  007ACC  20                 	db	32
  1602  007ACD  20                 	db	32
  1603  007ACE  20                 	db	32
  1604  007ACF  20                 	db	32
  1605  007AD0  52                 	db	82	;'R'
  1606  007AD1  65                 	db	101	;'e'
  1607  007AD2  63                 	db	99	;'c'
  1608  007AD3  65                 	db	101	;'e'
  1609  007AD4  69                 	db	105	;'i'
  1610  007AD5  76                 	db	118	;'v'
  1611  007AD6  65                 	db	101	;'e'
  1612  007AD7  64                 	db	100	;'d'
  1613  007AD8  20                 	db	32
  1614  007AD9  20                 	db	32
  1615  007ADA  20                 	db	32
  1616  007ADB  20                 	db	32
  1617  007ADC  00                 	db	0
  1618  007ADD                     STR_42:
  1619  007ADD  20                 	db	32
  1620  007ADE  20                 	db	32
  1621  007ADF  20                 	db	32
  1622  007AE0  20                 	db	32
  1623  007AE1  20                 	db	32
  1624  007AE2  20                 	db	32
  1625  007AE3  20                 	db	32
  1626  007AE4  20                 	db	32
  1627  007AE5  20                 	db	32
  1628  007AE6  28                 	db	40
  1629  007AE7  53                 	db	83	;'S'
  1630  007AE8  33                 	db	51	;'3'
  1631  007AE9  29                 	db	41
  1632  007AEA  20                 	db	32
  1633  007AEB  20                 	db	32
  1634  007AEC  20                 	db	32
  1635  007AED  00                 	db	0
  1636  007AEE                     STR_34:
  1637  007AEE  20                 	db	32
  1638  007AEF  20                 	db	32
  1639  007AF0  28                 	db	40
  1640  007AF1  53                 	db	83	;'S'
  1641  007AF2  32                 	db	50	;'2'
  1642  007AF3  29                 	db	41
  1643  007AF4  20                 	db	32
  1644  007AF5  20                 	db	32
  1645  007AF6  20                 	db	32
  1646  007AF7  28                 	db	40
  1647  007AF8  53                 	db	83	;'S'
  1648  007AF9  33                 	db	51	;'3'
  1649  007AFA  29                 	db	41
  1650  007AFB  20                 	db	32
  1651  007AFC  20                 	db	32
  1652  007AFD  20                 	db	32
  1653  007AFE  00                 	db	0
  1654  007AFF                     STR_79:
  1655  007AFF  20                 	db	32
  1656  007B00  20                 	db	32
  1657  007B01  4C                 	db	76	;'L'
  1658  007B02  61                 	db	97	;'a'
  1659  007B03  73                 	db	115	;'s'
  1660  007B04  74                 	db	116	;'t'
  1661  007B05  20                 	db	32
  1662  007B06  4D                 	db	77	;'M'
  1663  007B07  65                 	db	101	;'e'
  1664  007B08  73                 	db	115	;'s'
  1665  007B09  73                 	db	115	;'s'
  1666  007B0A  61                 	db	97	;'a'
  1667  007B0B  67                 	db	103	;'g'
  1668  007B0C  65                 	db	101	;'e'
  1669  007B0D  20                 	db	32
  1670  007B0E  20                 	db	32
  1671  007B0F  00                 	db	0
  1672  007B10                     STR_78:
  1673  007B10  20                 	db	32
  1674  007B11  56                 	db	86	;'V'
  1675  007B12  69                 	db	105	;'i'
  1676  007B13  65                 	db	101	;'e'
  1677  007B14  77                 	db	119	;'w'
  1678  007B15  20                 	db	32
  1679  007B16  44                 	db	68	;'D'
  1680  007B17  6F                 	db	111	;'o'
  1681  007B18  77                 	db	119	;'w'
  1682  007B19  6E                 	db	110	;'n'
  1683  007B1A  6C                 	db	108	;'l'
  1684  007B1B  69                 	db	105	;'i'
  1685  007B1C  6E                 	db	110	;'n'
  1686  007B1D  6B                 	db	107	;'k'
  1687  007B1E  20                 	db	32
  1688  007B1F  20                 	db	32
  1689  007B20  00                 	db	0
  1690  007B21                     STR_75:
  1691  007B21  20                 	db	32
  1692  007B22  20                 	db	32
  1693  007B23  49                 	db	73	;'I'
  1694  007B24  73                 	db	115	;'s'
  1695  007B25  73                 	db	115	;'s'
  1696  007B26  75                 	db	117	;'u'
  1697  007B27  65                 	db	101	;'e'
  1698  007B28  20                 	db	32
  1699  007B29  55                 	db	85	;'U'
  1700  007B2A  70                 	db	112	;'p'
  1701  007B2B  6C                 	db	108	;'l'
  1702  007B2C  69                 	db	105	;'i'
  1703  007B2D  6E                 	db	110	;'n'
  1704  007B2E  6B                 	db	107	;'k'
  1705  007B2F  20                 	db	32
  1706  007B30  20                 	db	32
  1707  007B31  00                 	db	0
  1708  007B32                     STR_29:
  1709  007B32  20                 	db	32
  1710  007B33  28                 	db	40
  1711  007B34  53                 	db	83	;'S'
  1712  007B35  32                 	db	50	;'2'
  1713  007B36  29                 	db	41
  1714  007B37  20                 	db	32
  1715  007B38  20                 	db	32
  1716  007B39  20                 	db	32
  1717  007B3A  20                 	db	32
  1718  007B3B  20                 	db	32
  1719  007B3C  20                 	db	32
  1720  007B3D  28                 	db	40
  1721  007B3E  53                 	db	83	;'S'
  1722  007B3F  33                 	db	51	;'3'
  1723  007B40  29                 	db	41
  1724  007B41  20                 	db	32
  1725  007B42  00                 	db	0
  1726  007B43                     STR_32:
  1727  007B43  20                 	db	32
  1728  007B44  4A                 	db	74	;'J'
  1729  007B45  6F                 	db	111	;'o'
  1730  007B46  69                 	db	105	;'i'
  1731  007B47  6E                 	db	110	;'n'
  1732  007B48  69                 	db	105	;'i'
  1733  007B49  6E                 	db	110	;'n'
  1734  007B4A  67                 	db	103	;'g'
  1735  007B4B  20                 	db	32
  1736  007B4C  4D                 	db	77	;'M'
  1737  007B4D  65                 	db	101	;'e'
  1738  007B4E  74                 	db	116	;'t'
  1739  007B4F  68                 	db	104	;'h'
  1740  007B50  6F                 	db	111	;'o'
  1741  007B51  64                 	db	100	;'d'
  1742  007B52  20                 	db	32
  1743  007B53  00                 	db	0
  1744  007B54                     STR_91:
  1745  007B54  53                 	db	83	;'S'
  1746  007B55  65                 	db	101	;'e'
  1747  007B56  72                 	db	114	;'r'
  1748  007B57  76                 	db	118	;'v'
  1749  007B58  65                 	db	101	;'e'
  1750  007B59  72                 	db	114	;'r'
  1751  007B5A  20                 	db	32
  1752  007B5B  52                 	db	82	;'R'
  1753  007B5C  65                 	db	101	;'e'
  1754  007B5D  73                 	db	115	;'s'
  1755  007B5E  70                 	db	112	;'p'
  1756  007B5F  6F                 	db	111	;'o'
  1757  007B60  6E                 	db	110	;'n'
  1758  007B61  73                 	db	115	;'s'
  1759  007B62  65                 	db	101	;'e'
  1760  007B63  20                 	db	32
  1761  007B64  00                 	db	0
  1762  007B65                     STR_120:
  1763  007B65  54                 	db	84	;'T'
  1764  007B66  78                 	db	120	;'x'
  1765  007B67  20                 	db	32
  1766  007B68  45                 	db	69	;'E'
  1767  007B69  76                 	db	118	;'v'
  1768  007B6A  65                 	db	101	;'e'
  1769  007B6B  6E                 	db	110	;'n'
  1770  007B6C  74                 	db	116	;'t'
  1771  007B6D  20                 	db	32
  1772  007B6E  54                 	db	84	;'T'
  1773  007B6F  69                 	db	105	;'i'
  1774  007B70  6D                 	db	109	;'m'
  1775  007B71  69                 	db	105	;'i'
  1776  007B72  6E                 	db	110	;'n'
  1777  007B73  67                 	db	103	;'g'
  1778  007B74  20                 	db	32
  1779  007B75  00                 	db	0
  1780  007B76                     STR_119:
  1781  007B76  50                 	db	80	;'P'
  1782  007B77  65                 	db	101	;'e'
  1783  007B78  72                 	db	114	;'r'
  1784  007B79  69                 	db	105	;'i'
  1785  007B7A  6F                 	db	111	;'o'
  1786  007B7B  64                 	db	100	;'d'
  1787  007B7C  69                 	db	105	;'i'
  1788  007B7D  63                 	db	99	;'c'
  1789  007B7E  20                 	db	32
  1790  007B7F  55                 	db	85	;'U'
  1791  007B80  70                 	db	112	;'p'
  1792  007B81  6C                 	db	108	;'l'
  1793  007B82  69                 	db	105	;'i'
  1794  007B83  6E                 	db	110	;'n'
  1795  007B84  6B                 	db	107	;'k'
  1796  007B85  20                 	db	32
  1797  007B86  00                 	db	0
  1798  007B87                     STR_76:
  1799  007B87  20                 	db	32
  1800  007B88  4C                 	db	76	;'L'
  1801  007B89  6F                 	db	111	;'o'
  1802  007B8A  52                 	db	82	;'R'
  1803  007B8B  61                 	db	97	;'a'
  1804  007B8C  57                 	db	87	;'W'
  1805  007B8D  41                 	db	65	;'A'
  1806  007B8E  4E                 	db	78	;'N'
  1807  007B8F  20                 	db	32
  1808  007B90  50                 	db	80	;'P'
  1809  007B91  61                 	db	97	;'a'
  1810  007B92  63                 	db	99	;'c'
  1811  007B93  6B                 	db	107	;'k'
  1812  007B94  65                 	db	101	;'e'
  1813  007B95  74                 	db	116	;'t'
  1814  007B96  20                 	db	32
  1815  007B97  00                 	db	0
  1816  007B98                     STR_33:
  1817  007B98  3C                 	db	60	;'<'
  1818  007B99  2D                 	db	45
  1819  007B9A  20                 	db	32
  1820  007B9B  41                 	db	65	;'A'
  1821  007B9C  42                 	db	66	;'B'
  1822  007B9D  50                 	db	80	;'P'
  1823  007B9E  20                 	db	32
  1824  007B9F  20                 	db	32
  1825  007BA0  20                 	db	32
  1826  007BA1  4F                 	db	79	;'O'
  1827  007BA2  54                 	db	84	;'T'
  1828  007BA3  41                 	db	65	;'A'
  1829  007BA4  41                 	db	65	;'A'
  1830  007BA5  20                 	db	32
  1831  007BA6  2D                 	db	45
  1832  007BA7  3E                 	db	62	;'>'
  1833  007BA8  00                 	db	0
  1834  007BA9                     STR_26:
  1835  007BA9  52                 	db	82	;'R'
  1836  007BAA  65                 	db	101	;'e'
  1837  007BAB  52                 	db	82	;'R'
  1838  007BAC  75                 	db	117	;'u'
  1839  007BAD  6E                 	db	110	;'n'
  1840  007BAE  20                 	db	32
  1841  007BAF  50                 	db	80	;'P'
  1842  007BB0  77                 	db	119	;'w'
  1843  007BB1  72                 	db	114	;'r'
  1844  007BB2  54                 	db	84	;'T'
  1845  007BB3  73                 	db	115	;'s'
  1846  007BB4  74                 	db	116	;'t'
  1847  007BB5  3C                 	db	60	;'<'
  1848  007BB6  53                 	db	83	;'S'
  1849  007BB7  32                 	db	50	;'2'
  1850  007BB8  3E                 	db	62	;'>'
  1851  007BB9  00                 	db	0
  1852  007BBA                     STR_94:
  1853  007BBA  44                 	db	68	;'D'
  1854  007BBB  61                 	db	97	;'a'
  1855  007BBC  74                 	db	116	;'t'
  1856  007BBD  61                 	db	97	;'a'
  1857  007BBE  20                 	db	32
  1858  007BBF  54                 	db	84	;'T'
  1859  007BC0  72                 	db	114	;'r'
  1860  007BC1  61                 	db	97	;'a'
  1861  007BC2  6E                 	db	110	;'n'
  1862  007BC3  73                 	db	115	;'s'
  1863  007BC4  6D                 	db	109	;'m'
  1864  007BC5  69                 	db	105	;'i'
  1865  007BC6  74                 	db	116	;'t'
  1866  007BC7  74                 	db	116	;'t'
  1867  007BC8  65                 	db	101	;'e'
  1868  007BC9  64                 	db	100	;'d'
  1869  007BCA  00                 	db	0
  1870  007BCB                     STR_151:
  1871  007BCB  45                 	db	69	;'E'
  1872  007BCC  6E                 	db	110	;'n'
  1873  007BCD  74                 	db	116	;'t'
  1874  007BCE  65                 	db	101	;'e'
  1875  007BCF  72                 	db	114	;'r'
  1876  007BD0  20                 	db	32
  1877  007BD1  53                 	db	83	;'S'
  1878  007BD2  6C                 	db	108	;'l'
  1879  007BD3  65                 	db	101	;'e'
  1880  007BD4  65                 	db	101	;'e'
  1881  007BD5  70                 	db	112	;'p'
  1882  007BD6  20                 	db	32
  1883  007BD7  4D                 	db	77	;'M'
  1884  007BD8  6F                 	db	111	;'o'
  1885  007BD9  64                 	db	100	;'d'
  1886  007BDA  65                 	db	101	;'e'
  1887  007BDB  00                 	db	0
  1888  007BDC                     STR_81:
  1889  007BDC  55                 	db	85	;'U'
  1890  007BDD  70                 	db	112	;'p'
  1891  007BDE  6C                 	db	108	;'l'
  1892  007BDF  69                 	db	105	;'i'
  1893  007BE0  6E                 	db	110	;'n'
  1894  007BE1  6B                 	db	107	;'k'
  1895  007BE2  20                 	db	32
  1896  007BE3  50                 	db	80	;'P'
  1897  007BE4  63                 	db	99	;'c'
  1898  007BE5  6B                 	db	107	;'k'
  1899  007BE6  74                 	db	116	;'t'
  1900  007BE7  20                 	db	32
  1901  007BE8  54                 	db	84	;'T'
  1902  007BE9  79                 	db	121	;'y'
  1903  007BEA  70                 	db	112	;'p'
  1904  007BEB  65                 	db	101	;'e'
  1905  007BEC  00                 	db	0
  1906  007BED                     STR_135:
  1907  007BED  53                 	db	83	;'S'
  1908  007BEE  65                 	db	101	;'e'
  1909  007BEF  6C                 	db	108	;'l'
  1910  007BF0  65                 	db	101	;'e'
  1911  007BF1  63                 	db	99	;'c'
  1912  007BF2  74                 	db	116	;'t'
  1913  007BF3  20                 	db	32
  1914  007BF4  44                 	db	68	;'D'
  1915  007BF5  61                 	db	97	;'a'
  1916  007BF6  74                 	db	116	;'t'
  1917  007BF7  61                 	db	97	;'a'
  1918  007BF8  20                 	db	32
  1919  007BF9  52                 	db	82	;'R'
  1920  007BFA  61                 	db	97	;'a'
  1921  007BFB  74                 	db	116	;'t'
  1922  007BFC  65                 	db	101	;'e'
  1923  007BFD  00                 	db	0
  1924  007BFE                     STR_27:
  1925  007BFE  4D                 	db	77	;'M'
  1926  007BFF  6F                 	db	111	;'o'
  1927  007C00  62                 	db	98	;'b'
  1928  007C01  69                 	db	105	;'i'
  1929  007C02  6C                 	db	108	;'l'
  1930  007C03  65                 	db	101	;'e'
  1931  007C04  20                 	db	32
  1932  007C05  4D                 	db	77	;'M'
  1933  007C06  6F                 	db	111	;'o'
  1934  007C07  74                 	db	116	;'t'
  1935  007C08  65                 	db	101	;'e'
  1936  007C09  20                 	db	32
  1937  007C0A  2D                 	db	45
  1938  007C0B  41                 	db	65	;'A'
  1939  007C0C  70                 	db	112	;'p'
  1940  007C0D  70                 	db	112	;'p'
  1941  007C0E  00                 	db	0
  1942  007C0F                     STR_28:
  1943  007C0F  4E                 	db	78	;'N'
  1944  007C10  61                 	db	97	;'a'
  1945  007C11  76                 	db	118	;'v'
  1946  007C12  69                 	db	105	;'i'
  1947  007C13  67                 	db	103	;'g'
  1948  007C14  61                 	db	97	;'a'
  1949  007C15  74                 	db	116	;'t'
  1950  007C16  65                 	db	101	;'e'
  1951  007C17  20                 	db	32
  1952  007C18  20                 	db	32
  1953  007C19  53                 	db	83	;'S'
  1954  007C1A  65                 	db	101	;'e'
  1955  007C1B  6C                 	db	108	;'l'
  1956  007C1C  65                 	db	101	;'e'
  1957  007C1D  63                 	db	99	;'c'
  1958  007C1E  74                 	db	116	;'t'
  1959  007C1F  00                 	db	0
  1960  007C20                     STR_111:
  1961  007C20  4D                 	db	77	;'M'
  1962  007C21  65                 	db	101	;'e'
  1963  007C22  6E                 	db	110	;'n'
  1964  007C23  75                 	db	117	;'u'
  1965  007C24  20                 	db	32
  1966  007C25  48                 	db	72	;'H'
  1967  007C26  61                 	db	97	;'a'
  1968  007C27  73                 	db	115	;'s'
  1969  007C28  20                 	db	32
  1970  007C29  54                 	db	84	;'T'
  1971  007C2A  69                 	db	105	;'i'
  1972  007C2B  6D                 	db	109	;'m'
  1973  007C2C  65                 	db	101	;'e'
  1974  007C2D  6F                 	db	111	;'o'
  1975  007C2E  75                 	db	117	;'u'
  1976  007C2F  74                 	db	116	;'t'
  1977  007C30  00                 	db	0
  1978  007C31                     STR_71:
  1979  007C31  53                 	db	83	;'S'
  1980  007C32  65                 	db	101	;'e'
  1981  007C33  6E                 	db	110	;'n'
  1982  007C34  64                 	db	100	;'d'
  1983  007C35  20                 	db	32
  1984  007C36  50                 	db	80	;'P'
  1985  007C37  65                 	db	101	;'e'
  1986  007C38  72                 	db	114	;'r'
  1987  007C39  69                 	db	105	;'i'
  1988  007C3A  6F                 	db	111	;'o'
  1989  007C3B  64                 	db	100	;'d'
  1990  007C3C  69                 	db	105	;'i'
  1991  007C3D  63                 	db	99	;'c'
  1992  007C3E  20                 	db	32
  1993  007C3F  54                 	db	84	;'T'
  1994  007C40  78                 	db	120	;'x'
  1995  007C41  00                 	db	0
  1996  007C42                     STR_105:
  1997  007C42  44                 	db	68	;'D'
  1998  007C43  6F                 	db	111	;'o'
  1999  007C44  77                 	db	119	;'w'
  2000  007C45  6E                 	db	110	;'n'
  2001  007C46  6C                 	db	108	;'l'
  2002  007C47  69                 	db	105	;'i'
  2003  007C48  6E                 	db	110	;'n'
  2004  007C49  6B                 	db	107	;'k'
  2005  007C4A  20                 	db	32
  2006  007C4B  44                 	db	68	;'D'
  2007  007C4C  69                 	db	105	;'i'
  2008  007C4D  73                 	db	115	;'s'
  2009  007C4E  70                 	db	112	;'p'
  2010  007C4F  6C                 	db	108	;'l'
  2011  007C50  61                 	db	97	;'a'
  2012  007C51  79                 	db	121	;'y'
  2013  007C52  00                 	db	0
  2014  007C53                     STR_103:
  2015  007C53  20                 	db	32
  2016  007C54  20                 	db	32
  2017  007C55  20                 	db	32
  2018  007C56  20                 	db	32
  2019  007C57  44                 	db	68	;'D'
  2020  007C58  69                 	db	105	;'i'
  2021  007C59  73                 	db	115	;'s'
  2022  007C5A  70                 	db	112	;'p'
  2023  007C5B  6C                 	db	108	;'l'
  2024  007C5C  61                 	db	97	;'a'
  2025  007C5D  79                 	db	121	;'y'
  2026  007C5E  20                 	db	32
  2027  007C5F  20                 	db	32
  2028  007C60  20                 	db	32
  2029  007C61  20                 	db	32
  2030  007C62  00                 	db	0
  2031  007C63                     STR_102:
  2032  007C63  20                 	db	32
  2033  007C64  20                 	db	32
  2034  007C65  53                 	db	83	;'S'
  2035  007C66  65                 	db	101	;'e'
  2036  007C67  6E                 	db	110	;'n'
  2037  007C68  73                 	db	115	;'s'
  2038  007C69  6F                 	db	111	;'o'
  2039  007C6A  72                 	db	114	;'r'
  2040  007C6B  20                 	db	32
  2041  007C6C  44                 	db	68	;'D'
  2042  007C6D  61                 	db	97	;'a'
  2043  007C6E  74                 	db	116	;'t'
  2044  007C6F  61                 	db	97	;'a'
  2045  007C70  20                 	db	32
  2046  007C71  20                 	db	32
  2047  007C72  00                 	db	0
  2048  007C73                     STR_114:
  2049  007C73  28                 	db	40
  2050  007C74  4E                 	db	78	;'N'
  2051  007C75  41                 	db	65	;'A'
  2052  007C76  56                 	db	86	;'V'
  2053  007C77  29                 	db	41
  2054  007C78  20                 	db	32
  2055  007C79  20                 	db	32
  2056  007C7A  20                 	db	32
  2057  007C7B  20                 	db	32
  2058  007C7C  28                 	db	40
  2059  007C7D  43                 	db	67	;'C'
  2060  007C7E  4E                 	db	78	;'N'
  2061  007C7F  47                 	db	71	;'G'
  2062  007C80  29                 	db	41
  2063  007C81  20                 	db	32
  2064  007C82  00                 	db	0
  2065  007C83                     STR_77:
  2066  007C83  28                 	db	40
  2067  007C84  4E                 	db	78	;'N'
  2068  007C85  41                 	db	65	;'A'
  2069  007C86  56                 	db	86	;'V'
  2070  007C87  29                 	db	41
  2071  007C88  20                 	db	32
  2072  007C89  20                 	db	32
  2073  007C8A  20                 	db	32
  2074  007C8B  20                 	db	32
  2075  007C8C  28                 	db	40
  2076  007C8D  53                 	db	83	;'S'
  2077  007C8E  45                 	db	69	;'E'
  2078  007C8F  4C                 	db	76	;'L'
  2079  007C90  29                 	db	41
  2080  007C91  20                 	db	32
  2081  007C92  00                 	db	0
  2082  007C93                     STR_152:
  2083  007C93  28                 	db	40
  2084  007C94  4E                 	db	78	;'N'
  2085  007C95  41                 	db	65	;'A'
  2086  007C96  56                 	db	86	;'V'
  2087  007C97  29                 	db	41
  2088  007C98  20                 	db	32
  2089  007C99  20                 	db	32
  2090  007C9A  20                 	db	32
  2091  007C9B  20                 	db	32
  2092  007C9C  28                 	db	40
  2093  007C9D  53                 	db	83	;'S'
  2094  007C9E  4C                 	db	76	;'L'
  2095  007C9F  50                 	db	80	;'P'
  2096  007CA0  29                 	db	41
  2097  007CA1  20                 	db	32
  2098  007CA2  00                 	db	0
  2099  007CA3                     STR_163:
  2100  007CA3  6D                 	db	109	;'m'
  2101  007CA4  61                 	db	97	;'a'
  2102  007CA5  63                 	db	99	;'c'
  2103  007CA6  20                 	db	32
  2104  007CA7  73                 	db	115	;'s'
  2105  007CA8  65                 	db	101	;'e'
  2106  007CA9  74                 	db	116	;'t'
  2107  007CAA  20                 	db	32
  2108  007CAB  61                 	db	97	;'a'
  2109  007CAC  64                 	db	100	;'d'
  2110  007CAD  72                 	db	114	;'r'
  2111  007CAE  20                 	db	32
  2112  007CAF  6F                 	db	111	;'o'
  2113  007CB0  66                 	db	102	;'f'
  2114  007CB1  66                 	db	102	;'f'
  2115  007CB2  00                 	db	0
  2116  007CB3                     STR_98:
  2117  007CB3  4E                 	db	78	;'N'
  2118  007CB4  6F                 	db	111	;'o'
  2119  007CB5  20                 	db	32
  2120  007CB6  46                 	db	70	;'F'
  2121  007CB7  72                 	db	114	;'r'
  2122  007CB8  65                 	db	101	;'e'
  2123  007CB9  65                 	db	101	;'e'
  2124  007CBA  20                 	db	32
  2125  007CBB  43                 	db	67	;'C'
  2126  007CBC  68                 	db	104	;'h'
  2127  007CBD  61                 	db	97	;'a'
  2128  007CBE  6E                 	db	110	;'n'
  2129  007CBF  6E                 	db	110	;'n'
  2130  007CC0  65                 	db	101	;'e'
  2131  007CC1  6C                 	db	108	;'l'
  2132  007CC2  00                 	db	0
  2133  007CC3                     STR_7:
  2134  007CC3  42                 	db	66	;'B'
  2135  007CC4  75                 	db	117	;'u'
  2136  007CC5  69                 	db	105	;'i'
  2137  007CC6  6C                 	db	108	;'l'
  2138  007CC7  64                 	db	100	;'d'
  2139  007CC8  20                 	db	32
  2140  007CC9  44                 	db	68	;'D'
  2141  007CCA  61                 	db	97	;'a'
  2142  007CCB  74                 	db	116	;'t'
  2143  007CCC  65                 	db	101	;'e'
  2144  007CCD  2F                 	db	47
  2145  007CCE  54                 	db	84	;'T'
  2146  007CCF  69                 	db	105	;'i'
  2147  007CD0  6D                 	db	109	;'m'
  2148  007CD1  65                 	db	101	;'e'
  2149  007CD2  00                 	db	0
  2150  007CD3                     STR_112:
  2151  007CD3  20                 	db	32
  2152  007CD4  20                 	db	32
  2153  007CD5  20                 	db	32
  2154  007CD6  20                 	db	32
  2155  007CD7  45                 	db	69	;'E'
  2156  007CD8  6E                 	db	110	;'n'
  2157  007CD9  61                 	db	97	;'a'
  2158  007CDA  62                 	db	98	;'b'
  2159  007CDB  6C                 	db	108	;'l'
  2160  007CDC  65                 	db	101	;'e'
  2161  007CDD  64                 	db	100	;'d'
  2162  007CDE  20                 	db	32
  2163  007CDF  20                 	db	32
  2164  007CE0  20                 	db	32
  2165  007CE1  00                 	db	0
  2166  007CE2                     STR_113:
  2167  007CE2  20                 	db	32
  2168  007CE3  20                 	db	32
  2169  007CE4  20                 	db	32
  2170  007CE5  20                 	db	32
  2171  007CE6  44                 	db	68	;'D'
  2172  007CE7  69                 	db	105	;'i'
  2173  007CE8  73                 	db	115	;'s'
  2174  007CE9  61                 	db	97	;'a'
  2175  007CEA  62                 	db	98	;'b'
  2176  007CEB  6C                 	db	108	;'l'
  2177  007CEC  65                 	db	101	;'e'
  2178  007CED  64                 	db	100	;'d'
  2179  007CEE  20                 	db	32
  2180  007CEF  20                 	db	32
  2181  007CF0  00                 	db	0
  2182  007CF1                     STR_172:
  2183  007CF1  6D                 	db	109	;'m'
  2184  007CF2  61                 	db	97	;'a'
  2185  007CF3  63                 	db	99	;'c'
  2186  007CF4  20                 	db	32
  2187  007CF5  73                 	db	115	;'s'
  2188  007CF6  65                 	db	101	;'e'
  2189  007CF7  74                 	db	116	;'t'
  2190  007CF8  20                 	db	32
  2191  007CF9  61                 	db	97	;'a'
  2192  007CFA  64                 	db	100	;'d'
  2193  007CFB  72                 	db	114	;'r'
  2194  007CFC  20                 	db	32
  2195  007CFD  6F                 	db	111	;'o'
  2196  007CFE  6E                 	db	110	;'n'
  2197  007CFF  00                 	db	0
  2198  007D00                     STR_2:
  2199  007D00  20                 	db	32
  2200  007D01  20                 	db	32
  2201  007D02  20                 	db	32
  2202  007D03  4C                 	db	76	;'L'
  2203  007D04  6F                 	db	111	;'o'
  2204  007D05  52                 	db	82	;'R'
  2205  007D06  61                 	db	97	;'a'
  2206  007D07  20                 	db	32
  2207  007D08  44                 	db	68	;'D'
  2208  007D09  65                 	db	101	;'e'
  2209  007D0A  6D                 	db	109	;'m'
  2210  007D0B  6F                 	db	111	;'o'
  2211  007D0C  20                 	db	32
  2212  007D0D  20                 	db	32
  2213  007D0E  00                 	db	0
  2214  007D0F                     STR_3:
  2215  007D0F  20                 	db	32
  2216  007D10  56                 	db	86	;'V'
  2217  007D11  20                 	db	32
  2218  007D12  31                 	db	49	;'1'
  2219  007D13  2E                 	db	46
  2220  007D14  30                 	db	48	;'0'
  2221  007D15  2E                 	db	46
  2222  007D16  31                 	db	49	;'1'
  2223  007D17  20                 	db	32
  2224  007D18  43                 	db	67	;'C'
  2225  007D19  6F                 	db	111	;'o'
  2226  007D1A  64                 	db	100	;'d'
  2227  007D1B  65                 	db	101	;'e'
  2228  007D1C  20                 	db	32
  2229  007D1D  00                 	db	0
  2230  007D1E                     STR_1:
  2231  007D1E  4D                 	db	77	;'M'
  2232  007D1F  69                 	db	105	;'i'
  2233  007D20  63                 	db	99	;'c'
  2234  007D21  72                 	db	114	;'r'
  2235  007D22  6F                 	db	111	;'o'
  2236  007D23  63                 	db	99	;'c'
  2237  007D24  68                 	db	104	;'h'
  2238  007D25  69                 	db	105	;'i'
  2239  007D26  70                 	db	112	;'p'
  2240  007D27  20                 	db	32
  2241  007D28  4D                 	db	77	;'M'
  2242  007D29  6F                 	db	111	;'o'
  2243  007D2A  74                 	db	116	;'t'
  2244  007D2B  65                 	db	101	;'e'
  2245  007D2C  00                 	db	0
  2246  007D2D                     STR_74:
  2247  007D2D  6D                 	db	109	;'m'
  2248  007D2E  61                 	db	97	;'a'
  2249  007D2F  63                 	db	99	;'c'
  2250  007D30  20                 	db	32
  2251  007D31  74                 	db	116	;'t'
  2252  007D32  78                 	db	120	;'x'
  2253  007D33  20                 	db	32
  2254  007D34  75                 	db	117	;'u'
  2255  007D35  6E                 	db	110	;'n'
  2256  007D36  63                 	db	99	;'c'
  2257  007D37  6E                 	db	110	;'n'
  2258  007D38  66                 	db	102	;'f'
  2259  007D39  20                 	db	32
  2260  007D3A  00                 	db	0
  2261  007D3B                     STR_43:
  2262  007D3B  6D                 	db	109	;'m'
  2263  007D3C  61                 	db	97	;'a'
  2264  007D3D  63                 	db	99	;'c'
  2265  007D3E  20                 	db	32
  2266  007D3F  6A                 	db	106	;'j'
  2267  007D40  6F                 	db	111	;'o'
  2268  007D41  69                 	db	105	;'i'
  2269  007D42  6E                 	db	110	;'n'
  2270  007D43  20                 	db	32
  2271  007D44  6F                 	db	111	;'o'
  2272  007D45  74                 	db	116	;'t'
  2273  007D46  61                 	db	97	;'a'
  2274  007D47  61                 	db	97	;'a'
  2275  007D48  00                 	db	0
  2276  007D49                     STR_57:
  2277  007D49  69                 	db	105	;'i'
  2278  007D4A  6E                 	db	110	;'n'
  2279  007D4B  76                 	db	118	;'v'
  2280  007D4C  61                 	db	97	;'a'
  2281  007D4D  6C                 	db	108	;'l'
  2282  007D4E  69                 	db	105	;'i'
  2283  007D4F  64                 	db	100	;'d'
  2284  007D50  5F                 	db	95	;'_'
  2285  007D51  70                 	db	112	;'p'
  2286  007D52  61                 	db	97	;'a'
  2287  007D53  72                 	db	114	;'r'
  2288  007D54  61                 	db	97	;'a'
  2289  007D55  6D                 	db	109	;'m'
  2290  007D56  00                 	db	0
  2291  007D57                     STR_45:
  2292  007D57  6B                 	db	107	;'k'
  2293  007D58  65                 	db	101	;'e'
  2294  007D59  79                 	db	121	;'y'
  2295  007D5A  73                 	db	115	;'s'
  2296  007D5B  5F                 	db	95	;'_'
  2297  007D5C  6E                 	db	110	;'n'
  2298  007D5D  6F                 	db	111	;'o'
  2299  007D5E  74                 	db	116	;'t'
  2300  007D5F  5F                 	db	95	;'_'
  2301  007D60  69                 	db	105	;'i'
  2302  007D61  6E                 	db	110	;'n'
  2303  007D62  69                 	db	105	;'i'
  2304  007D63  74                 	db	116	;'t'
  2305  007D64  00                 	db	0
  2306  007D65                     STR_82:
  2307  007D65  54                 	db	84	;'T'
  2308  007D66  68                 	db	104	;'h'
  2309  007D67  72                 	db	114	;'r'
  2310  007D68  6F                 	db	111	;'o'
  2311  007D69  75                 	db	117	;'u'
  2312  007D6A  20                 	db	32
  2313  007D6B  50                 	db	80	;'P'
  2314  007D6C  6F                 	db	111	;'o'
  2315  007D6D  72                 	db	114	;'r'
  2316  007D6E  74                 	db	116	;'t'
  2317  007D6F  23                 	db	35
  2318  007D70  20                 	db	32
  2319  007D71  00                 	db	0
  2320  007D72                     STR_73:
  2321  007D72  4C                 	db	76	;'L'
  2322  007D73  3A                 	db	58	;':'
  2323  007D74  20                 	db	32
  2324  007D75  20                 	db	32
  2325  007D76  20                 	db	32
  2326  007D77  20                 	db	32
  2327  007D78  20                 	db	32
  2328  007D79  20                 	db	32
  2329  007D7A  20                 	db	32
  2330  007D7B  54                 	db	84	;'T'
  2331  007D7C  3A                 	db	58	;':'
  2332  007D7D  20                 	db	32
  2333  007D7E  00                 	db	0
  2334  007D7F                     STR_164:
  2335  007D7F  6D                 	db	109	;'m'
  2336  007D80  61                 	db	97	;'a'
  2337  007D81  63                 	db	99	;'c'
  2338  007D82  20                 	db	32
  2339  007D83  73                 	db	115	;'s'
  2340  007D84  65                 	db	101	;'e'
  2341  007D85  74                 	db	116	;'t'
  2342  007D86  20                 	db	32
  2343  007D87  64                 	db	100	;'d'
  2344  007D88  72                 	db	114	;'r'
  2345  007D89  20                 	db	32
  2346  007D8A  30                 	db	48	;'0'
  2347  007D8B  00                 	db	0
  2348  007D8C                     STR_165:
  2349  007D8C  6D                 	db	109	;'m'
  2350  007D8D  61                 	db	97	;'a'
  2351  007D8E  63                 	db	99	;'c'
  2352  007D8F  20                 	db	32
  2353  007D90  73                 	db	115	;'s'
  2354  007D91  65                 	db	101	;'e'
  2355  007D92  74                 	db	116	;'t'
  2356  007D93  20                 	db	32
  2357  007D94  64                 	db	100	;'d'
  2358  007D95  72                 	db	114	;'r'
  2359  007D96  20                 	db	32
  2360  007D97  31                 	db	49	;'1'
  2361  007D98  00                 	db	0
  2362  007D99                     STR_166:
  2363  007D99  6D                 	db	109	;'m'
  2364  007D9A  61                 	db	97	;'a'
  2365  007D9B  63                 	db	99	;'c'
  2366  007D9C  20                 	db	32
  2367  007D9D  73                 	db	115	;'s'
  2368  007D9E  65                 	db	101	;'e'
  2369  007D9F  74                 	db	116	;'t'
  2370  007DA0  20                 	db	32
  2371  007DA1  64                 	db	100	;'d'
  2372  007DA2  72                 	db	114	;'r'
  2373  007DA3  20                 	db	32
  2374  007DA4  32                 	db	50	;'2'
  2375  007DA5  00                 	db	0
  2376  007DA6                     STR_167:
  2377  007DA6  6D                 	db	109	;'m'
  2378  007DA7  61                 	db	97	;'a'
  2379  007DA8  63                 	db	99	;'c'
  2380  007DA9  20                 	db	32
  2381  007DAA  73                 	db	115	;'s'
  2382  007DAB  65                 	db	101	;'e'
  2383  007DAC  74                 	db	116	;'t'
  2384  007DAD  20                 	db	32
  2385  007DAE  64                 	db	100	;'d'
  2386  007DAF  72                 	db	114	;'r'
  2387  007DB0  20                 	db	32
  2388  007DB1  33                 	db	51	;'3'
  2389  007DB2  00                 	db	0
  2390  007DB3                     STR_168:
  2391  007DB3  6D                 	db	109	;'m'
  2392  007DB4  61                 	db	97	;'a'
  2393  007DB5  63                 	db	99	;'c'
  2394  007DB6  20                 	db	32
  2395  007DB7  73                 	db	115	;'s'
  2396  007DB8  65                 	db	101	;'e'
  2397  007DB9  74                 	db	116	;'t'
  2398  007DBA  20                 	db	32
  2399  007DBB  64                 	db	100	;'d'
  2400  007DBC  72                 	db	114	;'r'
  2401  007DBD  20                 	db	32
  2402  007DBE  34                 	db	52	;'4'
  2403  007DBF  00                 	db	0
  2404  007DC0                     STR_169:
  2405  007DC0  6D                 	db	109	;'m'
  2406  007DC1  61                 	db	97	;'a'
  2407  007DC2  63                 	db	99	;'c'
  2408  007DC3  20                 	db	32
  2409  007DC4  73                 	db	115	;'s'
  2410  007DC5  65                 	db	101	;'e'
  2411  007DC6  74                 	db	116	;'t'
  2412  007DC7  20                 	db	32
  2413  007DC8  64                 	db	100	;'d'
  2414  007DC9  72                 	db	114	;'r'
  2415  007DCA  20                 	db	32
  2416  007DCB  35                 	db	53	;'5'
  2417  007DCC  00                 	db	0
  2418  007DCD                     STR_170:
  2419  007DCD  6D                 	db	109	;'m'
  2420  007DCE  61                 	db	97	;'a'
  2421  007DCF  63                 	db	99	;'c'
  2422  007DD0  20                 	db	32
  2423  007DD1  73                 	db	115	;'s'
  2424  007DD2  65                 	db	101	;'e'
  2425  007DD3  74                 	db	116	;'t'
  2426  007DD4  20                 	db	32
  2427  007DD5  64                 	db	100	;'d'
  2428  007DD6  72                 	db	114	;'r'
  2429  007DD7  20                 	db	32
  2430  007DD8  36                 	db	54	;'6'
  2431  007DD9  00                 	db	0
  2432  007DDA                     STR_171:
  2433  007DDA  6D                 	db	109	;'m'
  2434  007DDB  61                 	db	97	;'a'
  2435  007DDC  63                 	db	99	;'c'
  2436  007DDD  20                 	db	32
  2437  007DDE  73                 	db	115	;'s'
  2438  007DDF  65                 	db	101	;'e'
  2439  007DE0  74                 	db	116	;'t'
  2440  007DE1  20                 	db	32
  2441  007DE2  64                 	db	100	;'d'
  2442  007DE3  72                 	db	114	;'r'
  2443  007DE4  20                 	db	32
  2444  007DE5  37                 	db	55	;'7'
  2445  007DE6  00                 	db	0
  2446  007DE7                     STR_41:
  2447  007DE7  6D                 	db	109	;'m'
  2448  007DE8  61                 	db	97	;'a'
  2449  007DE9  63                 	db	99	;'c'
  2450  007DEA  20                 	db	32
  2451  007DEB  6A                 	db	106	;'j'
  2452  007DEC  6F                 	db	111	;'o'
  2453  007DED  69                 	db	105	;'i'
  2454  007DEE  6E                 	db	110	;'n'
  2455  007DEF  20                 	db	32
  2456  007DF0  61                 	db	97	;'a'
  2457  007DF1  62                 	db	98	;'b'
  2458  007DF2  70                 	db	112	;'p'
  2459  007DF3  00                 	db	0
  2460  007DF4                     STR_10:
  2461  007DF4  42                 	db	66	;'B'
  2462  007DF5  75                 	db	117	;'u'
  2463  007DF6  74                 	db	116	;'t'
  2464  007DF7  74                 	db	116	;'t'
  2465  007DF8  6F                 	db	111	;'o'
  2466  007DF9  6E                 	db	110	;'n'
  2467  007DFA  20                 	db	32
  2468  007DFB  54                 	db	84	;'T'
  2469  007DFC  65                 	db	101	;'e'
  2470  007DFD  73                 	db	115	;'s'
  2471  007DFE  74                 	db	116	;'t'
  2472  007DFF  3A                 	db	58	;':'
  2473  007E00  00                 	db	0
  2474  007E01                     STR_13:
  2475  007E01  42                 	db	66	;'B'
  2476  007E02  75                 	db	117	;'u'
  2477  007E03  74                 	db	116	;'t'
  2478  007E04  74                 	db	116	;'t'
  2479  007E05  6F                 	db	111	;'o'
  2480  007E06  6E                 	db	110	;'n'
  2481  007E07  31                 	db	49	;'1'
  2482  007E08  20                 	db	32
  2483  007E09  50                 	db	80	;'P'
  2484  007E0A  41                 	db	65	;'A'
  2485  007E0B  53                 	db	83	;'S'
  2486  007E0C  53                 	db	83	;'S'
  2487  007E0D  00                 	db	0
  2488  007E0E                     STR_14:
  2489  007E0E  42                 	db	66	;'B'
  2490  007E0F  75                 	db	117	;'u'
  2491  007E10  74                 	db	116	;'t'
  2492  007E11  74                 	db	116	;'t'
  2493  007E12  6F                 	db	111	;'o'
  2494  007E13  6E                 	db	110	;'n'
  2495  007E14  32                 	db	50	;'2'
  2496  007E15  20                 	db	32
  2497  007E16  50                 	db	80	;'P'
  2498  007E17  41                 	db	65	;'A'
  2499  007E18  53                 	db	83	;'S'
  2500  007E19  53                 	db	83	;'S'
  2501  007E1A  00                 	db	0
  2502  007E1B                     STR_12:
  2503  007E1B  50                 	db	80	;'P'
  2504  007E1C  72                 	db	114	;'r'
  2505  007E1D  65                 	db	101	;'e'
  2506  007E1E  73                 	db	115	;'s'
  2507  007E1F  73                 	db	115	;'s'
  2508  007E20  20                 	db	32
  2509  007E21  42                 	db	66	;'B'
  2510  007E22  75                 	db	117	;'u'
  2511  007E23  74                 	db	116	;'t'
  2512  007E24  74                 	db	116	;'t'
  2513  007E25  6F                 	db	111	;'o'
  2514  007E26  6E                 	db	110	;'n'
  2515  007E27  00                 	db	0
  2516  007E28                     STR_189:
  2517  007E28  55                 	db	85	;'U'
  2518  007E29  53                 	db	83	;'S'
  2519  007E2A  42                 	db	66	;'B'
  2520  007E2B  20                 	db	32
  2521  007E2C  48                 	db	72	;'H'
  2522  007E2D  61                 	db	97	;'a'
  2523  007E2E  6E                 	db	110	;'n'
  2524  007E2F  64                 	db	100	;'d'
  2525  007E30  6C                 	db	108	;'l'
  2526  007E31  65                 	db	101	;'e'
  2527  007E32  72                 	db	114	;'r'
  2528  007E33  00                 	db	0
  2529  007E34                     STR_72:
  2530  007E34  4F                 	db	79	;'O'
  2531  007E35  6E                 	db	110	;'n'
  2532  007E36  20                 	db	32
  2533  007E37  50                 	db	80	;'P'
  2534  007E38  6F                 	db	111	;'o'
  2535  007E39  72                 	db	114	;'r'
  2536  007E3A  74                 	db	116	;'t'
  2537  007E3B  20                 	db	32
  2538  007E3C  23                 	db	35
  2539  007E3D  3A                 	db	58	;':'
  2540  007E3E  20                 	db	32
  2541  007E3F  00                 	db	0
  2542  007E40                     STR_87:
  2543  007E40  54                 	db	84	;'T'
  2544  007E41  78                 	db	120	;'x'
  2545  007E42  20                 	db	32
  2546  007E43  50                 	db	80	;'P'
  2547  007E44  6F                 	db	111	;'o'
  2548  007E45  72                 	db	114	;'r'
  2549  007E46  74                 	db	116	;'t'
  2550  007E47  20                 	db	32
  2551  007E48  23                 	db	35
  2552  007E49  3A                 	db	58	;':'
  2553  007E4A  20                 	db	32
  2554  007E4B  00                 	db	0
  2555  007E4C                     STR_86:
  2556  007E4C  53                 	db	83	;'S'
  2557  007E4D  65                 	db	101	;'e'
  2558  007E4E  6E                 	db	110	;'n'
  2559  007E4F  74                 	db	116	;'t'
  2560  007E50  20                 	db	32
  2561  007E51  44                 	db	68	;'D'
  2562  007E52  61                 	db	97	;'a'
  2563  007E53  74                 	db	116	;'t'
  2564  007E54  61                 	db	97	;'a'
  2565  007E55  3A                 	db	58	;':'
  2566  007E56  20                 	db	32
  2567  007E57  00                 	db	0
  2568  007E58                     STR_136:
  2569  007E58  44                 	db	68	;'D'
  2570  007E59  61                 	db	97	;'a'
  2571  007E5A  74                 	db	116	;'t'
  2572  007E5B  61                 	db	97	;'a'
  2573  007E5C  20                 	db	32
  2574  007E5D  52                 	db	82	;'R'
  2575  007E5E  61                 	db	97	;'a'
  2576  007E5F  74                 	db	116	;'t'
  2577  007E60  65                 	db	101	;'e'
  2578  007E61  3A                 	db	58	;':'
  2579  007E62  20                 	db	32
  2580  007E63  00                 	db	0
  2581  007E64                     STR_85:
  2582  007E64  6D                 	db	109	;'m'
  2583  007E65  61                 	db	97	;'a'
  2584  007E66  63                 	db	99	;'c'
  2585  007E67  20                 	db	32
  2586  007E68  74                 	db	116	;'t'
  2587  007E69  78                 	db	120	;'x'
  2588  007E6A  20                 	db	32
  2589  007E6B  63                 	db	99	;'c'
  2590  007E6C  6E                 	db	110	;'n'
  2591  007E6D  66                 	db	102	;'f'
  2592  007E6E  20                 	db	32
  2593  007E6F  00                 	db	0
  2594  007E70                     STR_8:
  2595  007E70  4D                 	db	77	;'M'
  2596  007E71  61                 	db	97	;'a'
  2597  007E72  72                 	db	114	;'r'
  2598  007E73  20                 	db	32
  2599  007E74  32                 	db	50	;'2'
  2600  007E75  39                 	db	57	;'9'
  2601  007E76  20                 	db	32
  2602  007E77  32                 	db	50	;'2'
  2603  007E78  30                 	db	48	;'0'
  2604  007E79  31                 	db	49	;'1'
  2605  007E7A  38                 	db	56	;'8'
  2606  007E7B  00                 	db	0
  2607  007E7C                     STR_11:
  2608  007E7C  42                 	db	66	;'B'
  2609  007E7D  75                 	db	117	;'u'
  2610  007E7E  74                 	db	116	;'t'
  2611  007E7F  74                 	db	116	;'t'
  2612  007E80  6F                 	db	111	;'o'
  2613  007E81  6E                 	db	110	;'n'
  2614  007E82  20                 	db	32
  2615  007E83  46                 	db	70	;'F'
  2616  007E84  41                 	db	65	;'A'
  2617  007E85  49                 	db	73	;'I'
  2618  007E86  4C                 	db	76	;'L'
  2619  007E87  00                 	db	0
  2620  007E88                     STR_61:
  2621  007E88  4F                 	db	79	;'O'
  2622  007E89  54                 	db	84	;'T'
  2623  007E8A  41                 	db	65	;'A'
  2624  007E8B  41                 	db	65	;'A'
  2625  007E8C  20                 	db	32
  2626  007E8D  4A                 	db	74	;'J'
  2627  007E8E  6F                 	db	111	;'o'
  2628  007E8F  69                 	db	105	;'i'
  2629  007E90  6E                 	db	110	;'n'
  2630  007E91  20                 	db	32
  2631  007E92  00                 	db	0
  2632  007E93                     STR_59:
  2633  007E93  6E                 	db	110	;'n'
  2634  007E94  6F                 	db	111	;'o'
  2635  007E95  5F                 	db	95	;'_'
  2636  007E96  66                 	db	102	;'f'
  2637  007E97  72                 	db	114	;'r'
  2638  007E98  65                 	db	101	;'e'
  2639  007E99  65                 	db	101	;'e'
  2640  007E9A  5F                 	db	95	;'_'
  2641  007E9B  63                 	db	99	;'c'
  2642  007E9C  68                 	db	104	;'h'
  2643  007E9D  00                 	db	0
  2644  007E9E                     STR_51:
  2645  007E9E  53                 	db	83	;'S'
  2646  007E9F  75                 	db	117	;'u'
  2647  007EA0  63                 	db	99	;'c'
  2648  007EA1  63                 	db	99	;'c'
  2649  007EA2  65                 	db	101	;'e'
  2650  007EA3  73                 	db	115	;'s'
  2651  007EA4  73                 	db	115	;'s'
  2652  007EA5  66                 	db	102	;'f'
  2653  007EA6  75                 	db	117	;'u'
  2654  007EA7  6C                 	db	108	;'l'
  2655  007EA8  00                 	db	0
  2656  007EA9                     STR_68:
  2657  007EA9  6D                 	db	109	;'m'
  2658  007EAA  61                 	db	97	;'a'
  2659  007EAB  63                 	db	99	;'c'
  2660  007EAC  20                 	db	32
  2661  007EAD  67                 	db	103	;'g'
  2662  007EAE  65                 	db	101	;'e'
  2663  007EAF  74                 	db	116	;'t'
  2664  007EB0  20                 	db	32
  2665  007EB1  64                 	db	100	;'d'
  2666  007EB2  72                 	db	114	;'r'
  2667  007EB3  00                 	db	0
  2668  007EB4                     STR_46:
  2669  007EB4  56                 	db	86	;'V'
  2670  007EB5  61                 	db	97	;'a'
  2671  007EB6  6C                 	db	108	;'l'
  2672  007EB7  69                 	db	105	;'i'
  2673  007EB8  64                 	db	100	;'d'
  2674  007EB9  20                 	db	32
  2675  007EBA  4B                 	db	75	;'K'
  2676  007EBB  65                 	db	101	;'e'
  2677  007EBC  79                 	db	121	;'y'
  2678  007EBD  73                 	db	115	;'s'
  2679  007EBE  00                 	db	0
  2680  007EBF                     STR_15:
  2681  007EBF  43                 	db	67	;'C'
  2682  007EC0  6F                 	db	111	;'o'
  2683  007EC1  6D                 	db	109	;'m'
  2684  007EC2  6D                 	db	109	;'m'
  2685  007EC3  20                 	db	32
  2686  007EC4  54                 	db	84	;'T'
  2687  007EC5  65                 	db	101	;'e'
  2688  007EC6  73                 	db	115	;'s'
  2689  007EC7  74                 	db	116	;'t'
  2690  007EC8  3A                 	db	58	;':'
  2691  007EC9  00                 	db	0
  2692  007ECA                     STR_106:
  2693  007ECA  52                 	db	82	;'R'
  2694  007ECB  78                 	db	120	;'x'
  2695  007ECC  20                 	db	32
  2696  007ECD  50                 	db	80	;'P'
  2697  007ECE  6F                 	db	111	;'o'
  2698  007ECF  72                 	db	114	;'r'
  2699  007ED0  74                 	db	116	;'t'
  2700  007ED1  23                 	db	35
  2701  007ED2  20                 	db	32
  2702  007ED3  00                 	db	0
  2703  007ED4                     STR_50:
  2704  007ED4  41                 	db	65	;'A'
  2705  007ED5  42                 	db	66	;'B'
  2706  007ED6  50                 	db	80	;'P'
  2707  007ED7  20                 	db	32
  2708  007ED8  4A                 	db	74	;'J'
  2709  007ED9  6F                 	db	111	;'o'
  2710  007EDA  69                 	db	105	;'i'
  2711  007EDB  6E                 	db	110	;'n'
  2712  007EDC  20                 	db	32
  2713  007EDD  00                 	db	0
  2714  007EDE                     STR_24:
  2715  007EDE  4D                 	db	77	;'M'
  2716  007EDF  4F                 	db	79	;'O'
  2717  007EE0  54                 	db	84	;'T'
  2718  007EE1  45                 	db	69	;'E'
  2719  007EE2  20                 	db	32
  2720  007EE3  4D                 	db	77	;'M'
  2721  007EE4  6F                 	db	111	;'o'
  2722  007EE5  64                 	db	100	;'d'
  2723  007EE6  65                 	db	101	;'e'
  2724  007EE7  00                 	db	0
  2725  007EE8                     STR_64:
  2726  007EE8  4F                 	db	79	;'O'
  2727  007EE9  54                 	db	84	;'T'
  2728  007EEA  41                 	db	65	;'A'
  2729  007EEB  41                 	db	65	;'A'
  2730  007EEC  20                 	db	32
  2731  007EED  4A                 	db	74	;'J'
  2732  007EEE  6F                 	db	111	;'o'
  2733  007EEF  69                 	db	105	;'i'
  2734  007EF0  6E                 	db	110	;'n'
  2735  007EF1  00                 	db	0
  2736  007EF2                     STR_52:
  2737  007EF2  6D                 	db	109	;'m'
  2738  007EF3  61                 	db	97	;'a'
  2739  007EF4  63                 	db	99	;'c'
  2740  007EF5  20                 	db	32
  2741  007EF6  72                 	db	114	;'r'
  2742  007EF7  65                 	db	101	;'e'
  2743  007EF8  73                 	db	115	;'s'
  2744  007EF9  65                 	db	101	;'e'
  2745  007EFA  74                 	db	116	;'t'
  2746  007EFB  00                 	db	0
  2747  007EFC                     STR_30:
  2748  007EFC  73                 	db	115	;'s'
  2749  007EFD  79                 	db	121	;'y'
  2750  007EFE  73                 	db	115	;'s'
  2751  007EFF  20                 	db	32
  2752  007F00  72                 	db	114	;'r'
  2753  007F01  65                 	db	101	;'e'
  2754  007F02  73                 	db	115	;'s'
  2755  007F03  65                 	db	101	;'e'
  2756  007F04  74                 	db	116	;'t'
  2757  007F05  00                 	db	0
  2758  007F06                     STR_16:
  2759  007F06  4C                 	db	76	;'L'
  2760  007F07  45                 	db	69	;'E'
  2761  007F08  44                 	db	68	;'D'
  2762  007F09  20                 	db	32
  2763  007F0A  54                 	db	84	;'T'
  2764  007F0B  65                 	db	101	;'e'
  2765  007F0C  73                 	db	115	;'s'
  2766  007F0D  74                 	db	116	;'t'
  2767  007F0E  3A                 	db	58	;':'
  2768  007F0F  00                 	db	0
  2769  007F10                     STR_187:
  2770  007F10  43                 	db	67	;'C'
  2771  007F11  44                 	db	68	;'D'
  2772  007F12  43                 	db	67	;'C'
  2773  007F13  20                 	db	32
  2774  007F14  4D                 	db	77	;'M'
  2775  007F15  6F                 	db	111	;'o'
  2776  007F16  64                 	db	100	;'d'
  2777  007F17  65                 	db	101	;'e'
  2778  007F18  00                 	db	0
  2779  007F19                     STR_47:
  2780  007F19  52                 	db	82	;'R'
  2781  007F1A  65                 	db	101	;'e'
  2782  007F1B  71                 	db	113	;'q'
  2783  007F1C  75                 	db	117	;'u'
  2784  007F1D  69                 	db	105	;'i'
  2785  007F1E  72                 	db	114	;'r'
  2786  007F1F  65                 	db	101	;'e'
  2787  007F20  64                 	db	100	;'d'
  2788  007F21  00                 	db	0
  2789  007F22                     STR_49:
  2790  007F22  61                 	db	97	;'a'
  2791  007F23  63                 	db	99	;'c'
  2792  007F24  63                 	db	99	;'c'
  2793  007F25  65                 	db	101	;'e'
  2794  007F26  70                 	db	112	;'p'
  2795  007F27  74                 	db	116	;'t'
  2796  007F28  65                 	db	101	;'e'
  2797  007F29  64                 	db	100	;'d'
  2798  007F2A  00                 	db	0
  2799  007F2B                     STR_173:
  2800  007F2B  6D                 	db	109	;'m'
  2801  007F2C  61                 	db	97	;'a'
  2802  007F2D  63                 	db	99	;'c'
  2803  007F2E  20                 	db	32
  2804  007F2F  73                 	db	115	;'s'
  2805  007F30  61                 	db	97	;'a'
  2806  007F31  76                 	db	118	;'v'
  2807  007F32  65                 	db	101	;'e'
  2808  007F33  00                 	db	0
  2809  007F34                     STR_25:
  2810  007F34  53                 	db	83	;'S'
  2811  007F35  74                 	db	116	;'t'
  2812  007F36  61                 	db	97	;'a'
  2813  007F37  72                 	db	114	;'r'
  2814  007F38  74                 	db	116	;'t'
  2815  007F39  69                 	db	105	;'i'
  2816  007F3A  6E                 	db	110	;'n'
  2817  007F3B  67                 	db	103	;'g'
  2818  007F3C  00                 	db	0
  2819  007F3D                     STR_4:
  2820  007F3D  4D                 	db	77	;'M'
  2821  007F3E  6F                 	db	111	;'o'
  2822  007F3F  54                 	db	84	;'T'
  2823  007F40  65                 	db	101	;'e'
  2824  007F41  20                 	db	32
  2825  007F42  76                 	db	118	;'v'
  2826  007F43  20                 	db	32
  2827  007F44  2E                 	db	46
  2828  007F45  00                 	db	0
  2829  007F46                     STR_9:
  2830  007F46  30                 	db	48	;'0'
  2831  007F47  30                 	db	48	;'0'
  2832  007F48  3A                 	db	58	;':'
  2833  007F49  35                 	db	53	;'5'
  2834  007F4A  31                 	db	49	;'1'
  2835  007F4B  3A                 	db	58	;':'
  2836  007F4C  31                 	db	49	;'1'
  2837  007F4D  32                 	db	50	;'2'
  2838  007F4E  00                 	db	0
  2839  007F4F  52                 	db	82	;'R'
  2840  007F50  46                 	db	70	;'F'
  2841  007F51  20                 	db	32
  2842  007F52  54                 	db	84	;'T'
  2843  007F53  65                 	db	101	;'e'
  2844  007F54  73                 	db	115	;'s'
  2845  007F55  74                 	db	116	;'t'
  2846  007F56  3A                 	db	58	;':'
  2847  007F57  00                 	db	0
  2848  007F58                     STR_17:
  2849  007F58  41                 	db	65	;'A'
  2850  007F59  44                 	db	68	;'D'
  2851  007F5A  43                 	db	67	;'C'
  2852  007F5B  20                 	db	32
  2853  007F5C  54                 	db	84	;'T'
  2854  007F5D  65                 	db	101	;'e'
  2855  007F5E  73                 	db	115	;'s'
  2856  007F5F  74                 	db	116	;'t'
  2857  007F60  00                 	db	0
  2858  007F61                     STR_188:
  2859  007F61  43                 	db	67	;'C'
  2860  007F62  6F                 	db	111	;'o'
  2861  007F63  6D                 	db	109	;'m'
  2862  007F64  6D                 	db	109	;'m'
  2863  007F65  61                 	db	97	;'a'
  2864  007F66  6E                 	db	110	;'n'
  2865  007F67  64                 	db	100	;'d'
  2866  007F68  00                 	db	0
  2867  007F69                     STR_18:
  2868  007F69  54                 	db	84	;'T'
  2869  007F6A  65                 	db	101	;'e'
  2870  007F6B  6D                 	db	109	;'m'
  2871  007F6C  70                 	db	112	;'p'
  2872  007F6D  20                 	db	32
  2873  007F6E  20                 	db	32
  2874  007F6F  3D                 	db	61	;'='
  2875  007F70  00                 	db	0
  2876  007F71                     STR_19:
  2877  007F71  4C                 	db	76	;'L'
  2878  007F72  69                 	db	105	;'i'
  2879  007F73  67                 	db	103	;'g'
  2880  007F74  68                 	db	104	;'h'
  2881  007F75  74                 	db	116	;'t'
  2882  007F76  20                 	db	32
  2883  007F77  3D                 	db	61	;'='
  2884  007F78  00                 	db	0
  2885  007F79                     STR_117:
  2886  007F79  54                 	db	84	;'T'
  2887  007F7A  65                 	db	101	;'e'
  2888  007F7B  6D                 	db	109	;'m'
  2889  007F7C  70                 	db	112	;'p'
  2890  007F7D  20                 	db	32
  2891  007F7E  3A                 	db	58	;':'
  2892  007F7F  00                 	db	0
  2893  007F80                     STR_116:
  2894  007F80  4C                 	db	76	;'L'
  2895  007F81  69                 	db	105	;'i'
  2896  007F82  67                 	db	103	;'g'
  2897  007F83  68                 	db	104	;'h'
  2898  007F84  74                 	db	116	;'t'
  2899  007F85  3A                 	db	58	;':'
  2900  007F86  00                 	db	0
  2901  007F87                     STR_121:
  2902  007F87  45                 	db	69	;'E'
  2903  007F88  76                 	db	118	;'v'
  2904  007F89  65                 	db	101	;'e'
  2905  007F8A  72                 	db	114	;'r'
  2906  007F8B  79                 	db	121	;'y'
  2907  007F8C  3A                 	db	58	;':'
  2908  007F8D  00                 	db	0
  2909  007F8E                     STR_65:
  2910  007F8E  44                 	db	68	;'D'
  2911  007F8F  65                 	db	101	;'e'
  2912  007F90  6E                 	db	110	;'n'
  2913  007F91  69                 	db	105	;'i'
  2914  007F92  65                 	db	101	;'e'
  2915  007F93  64                 	db	100	;'d'
  2916  007F94  00                 	db	0
  2917  007F95                     STR_63:
  2918  007F95  64                 	db	100	;'d'
  2919  007F96  65                 	db	101	;'e'
  2920  007F97  6E                 	db	110	;'n'
  2921  007F98  69                 	db	105	;'i'
  2922  007F99  65                 	db	101	;'e'
  2923  007F9A  64                 	db	100	;'d'
  2924  007F9B  00                 	db	0
  2925  007F9C                     STR_97:
  2926  007F9C  6E                 	db	110	;'n'
  2927  007F9D  6F                 	db	111	;'o'
  2928  007F9E  5F                 	db	95	;'_'
  2929  007F9F  66                 	db	102	;'f'
  2930  007FA0  72                 	db	114	;'r'
  2931  007FA1  65                 	db	101	;'e'
  2932  007FA2  00                 	db	0
  2933  007FA3                     STR_95:
  2934  007FA3  6D                 	db	109	;'m'
  2935  007FA4  61                 	db	97	;'a'
  2936  007FA5  63                 	db	99	;'c'
  2937  007FA6  5F                 	db	95	;'_'
  2938  007FA7  65                 	db	101	;'e'
  2939  007FA8  72                 	db	114	;'r'
  2940  007FA9  00                 	db	0
  2941  007FAA                     STR_90:
  2942  007FAA  6D                 	db	109	;'m'
  2943  007FAB  61                 	db	97	;'a'
  2944  007FAC  63                 	db	99	;'c'
  2945  007FAD  5F                 	db	95	;'_'
  2946  007FAE  72                 	db	114	;'r'
  2947  007FAF  78                 	db	120	;'x'
  2948  007FB0  00                 	db	0
  2949  007FB1                     STR_93:
  2950  007FB1  6D                 	db	109	;'m'
  2951  007FB2  61                 	db	97	;'a'
  2952  007FB3  63                 	db	99	;'c'
  2953  007FB4  5F                 	db	95	;'_'
  2954  007FB5  74                 	db	116	;'t'
  2955  007FB6  78                 	db	120	;'x'
  2956  007FB7  00                 	db	0
  2957  007FB8                     STR_31:
  2958  007FB8  52                 	db	82	;'R'
  2959  007FB9  4E                 	db	78	;'N'
  2960  007FBA  32                 	db	50	;'2'
  2961  007FBB  34                 	db	52	;'4'
  2962  007FBC  00                 	db	0
  2963  007FBD                     STR_35:
  2964  007FBD  52                 	db	82	;'R'
  2965  007FBE  4E                 	db	78	;'N'
  2966  007FBF  32                 	db	50	;'2'
  2967  007FC0  39                 	db	57	;'9'
  2968  007FC1  00                 	db	0
  2969  007FC2                     STR_122:
  2970  007FC2  4D                 	db	77	;'M'
  2971  007FC3  69                 	db	105	;'i'
  2972  007FC4  6E                 	db	110	;'n'
  2973  007FC5  73                 	db	115	;'s'
  2974  007FC6  00                 	db	0
  2975  007FC7                     STR_138:
  2976  007FC7  20                 	db	32
  2977  007FC8  30                 	db	48	;'0'
  2978  007FC9  20                 	db	32
  2979  007FCA  00                 	db	0
  2980  007FCB                     STR_139:
  2981  007FCB  20                 	db	32
  2982  007FCC  31                 	db	49	;'1'
  2983  007FCD  20                 	db	32
  2984  007FCE  00                 	db	0
  2985  007FCF                     STR_140:
  2986  007FCF  20                 	db	32
  2987  007FD0  32                 	db	50	;'2'
  2988  007FD1  20                 	db	32
  2989  007FD2  00                 	db	0
  2990  007FD3                     STR_141:
  2991  007FD3  20                 	db	32
  2992  007FD4  33                 	db	51	;'3'
  2993  007FD5  20                 	db	32
  2994  007FD6  00                 	db	0
  2995  007FD7                     STR_142:
  2996  007FD7  20                 	db	32
  2997  007FD8  34                 	db	52	;'4'
  2998  007FD9  20                 	db	32
  2999  007FDA  00                 	db	0
  3000  007FDB                     STR_143:
  3001  007FDB  20                 	db	32
  3002  007FDC  35                 	db	53	;'5'
  3003  007FDD  20                 	db	32
  3004  007FDE  00                 	db	0
  3005  007FDF                     STR_146:
  3006  007FDF  20                 	db	32
  3007  007FE0  31                 	db	49	;'1'
  3008  007FE1  30                 	db	48	;'0'
  3009  007FE2  00                 	db	0
  3010  007FE3                     STR_148:
  3011  007FE3  20                 	db	32
  3012  007FE4  33                 	db	51	;'3'
  3013  007FE5  30                 	db	48	;'0'
  3014  007FE6  00                 	db	0
  3015  007FE7                     STR_149:
  3016  007FE7  20                 	db	32
  3017  007FE8  36                 	db	54	;'6'
  3018  007FE9  30                 	db	48	;'0'
  3019  007FEA  00                 	db	0
  3020  007FEB                     STR_147:
  3021  007FEB  20                 	db	32
  3022  007FEC  31                 	db	49	;'1'
  3023  007FED  35                 	db	53	;'5'
  3024  007FEE  00                 	db	0
  3025  007FEF                     STR_128:
  3026  007FEF  4F                 	db	79	;'O'
  3027  007FF0  46                 	db	70	;'F'
  3028  007FF1  46                 	db	70	;'F'
  3029  007FF2  00                 	db	0
  3030  007FF3                     STR_144:
  3031  007FF3  41                 	db	65	;'A'
  3032  007FF4  44                 	db	68	;'D'
  3033  007FF5  52                 	db	82	;'R'
  3034  007FF6  00                 	db	0
  3035  007FF7                     STR_44:
  3036  007FF7  6F                 	db	111	;'o'
  3037  007FF8  6B                 	db	107	;'k'
  3038  007FF9  00                 	db	0
  3039  007FFA                     STR_118:
  3040  007FFA  43                 	db	67	;'C'
  3041  007FFB  00                 	db	0
  3042  007FFC                     STR_21:
  3043  007FFC  7A                 	db	122	;'z'
  3044  007FFD  00                 	db	0
  3045  0000                     
  3046                           ; #config settings
  3047  007FFE  00                 	db	0	; dummy byte at the end
  3048  0000                     
  3049                           	psect	cinit
  3050  0042B0                     __pcinit:
  3051                           	opt stack 0
  3052  0042B0                     start_initialization:
  3053                           	opt stack 0
  3054  0042B0                     __initialization:
  3055                           	opt stack 0
  3056                           
  3057                           ; Initialize objects allocated to BANK1 (3 bytes)
  3058                           ; load TBLPTR registers with __pidataBANK1
  3059  0042B0  0E38               	movlw	low __pidataBANK1
  3060  0042B2  6EF6               	movwf	tblptrl,c
  3061  0042B4  0E59               	movlw	high __pidataBANK1
  3062  0042B6  6EF7               	movwf	tblptrh,c
  3063  0042B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3064  0042BA  6EF8               	movwf	tblptru,c
  3065  0042BC  0009               	tblrd		*+	;fetch initializer
  3066  0042BE  CFF5 F1FA          	movff	tablat,__pdataBANK1
  3067  0042C2  0009               	tblrd		*+	;fetch initializer
  3068  0042C4  CFF5 F1FB          	movff	tablat,__pdataBANK1+1
  3069  0042C8  0009               	tblrd		*+	;fetch initializer
  3070  0042CA  CFF5 F1FC          	movff	tablat,__pdataBANK1+2
  3071                           
  3072                           ; Initialize objects allocated to BANK0 (7 bytes)
  3073                           ; load TBLPTR registers with __pidataBANK0
  3074  0042CE  0EFA               	movlw	low __pidataBANK0
  3075  0042D0  6EF6               	movwf	tblptrl,c
  3076  0042D2  0E58               	movlw	high __pidataBANK0
  3077  0042D4  6EF7               	movwf	tblptrh,c
  3078  0042D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3079  0042D8  6EF8               	movwf	tblptru,c
  3080  0042DA  EE00  F0F9         	lfsr	0,__pdataBANK0
  3081  0042DE  EE10 F007          	lfsr	1,7
  3082  0042E2                     copy_data0:
  3083  0042E2  0009               	tblrd		*+
  3084  0042E4  CFF5 FFEE          	movff	tablat,postinc0
  3085  0042E8  50E5               	movf	postdec1,w,c
  3086  0042EA  50E1               	movf	fsr1l,w,c
  3087  0042EC  E1FA               	bnz	copy_data0
  3088                           
  3089                           ; Initialize objects allocated to COMRAM (1 bytes)
  3090                           ; load TBLPTR registers with __pidataCOMRAM
  3091  0042EE  0E3B               	movlw	low __pidataCOMRAM
  3092  0042F0  6EF6               	movwf	tblptrl,c
  3093  0042F2  0E59               	movlw	high __pidataCOMRAM
  3094  0042F4  6EF7               	movwf	tblptrh,c
  3095  0042F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3096  0042F8  6EF8               	movwf	tblptru,c
  3097  0042FA  0009               	tblrd		*+	;fetch initializer
  3098  0042FC  CFF5 F05D          	movff	tablat,__pdataCOMRAM
  3099                           
  3100                           ; Clear objects allocated to BANK3 (128 bytes)
  3101  004300  EE03  F000         	lfsr	0,__pbssBANK3
  3102  004304  0E80               	movlw	128
  3103  004306                     clear_0:
  3104  004306  6AEE               	clrf	postinc0,c
  3105  004308  06E8               	decf	wreg,f,c
  3106  00430A  E1FD               	bnz	clear_0
  3107                           
  3108                           ; Clear objects allocated to BANK2 (192 bytes)
  3109  00430C  EE02  F000         	lfsr	0,__pbssBANK2
  3110  004310  0EC0               	movlw	192
  3111  004312                     clear_1:
  3112  004312  6AEE               	clrf	postinc0,c
  3113  004314  06E8               	decf	wreg,f,c
  3114  004316  E1FD               	bnz	clear_1
  3115                           
  3116                           ; Clear objects allocated to BANK1 (250 bytes)
  3117  004318  EE01  F000         	lfsr	0,__pbssBANK1
  3118  00431C  0EFA               	movlw	250
  3119  00431E                     clear_2:
  3120  00431E  6AEE               	clrf	postinc0,c
  3121  004320  06E8               	decf	wreg,f,c
  3122  004322  E1FD               	bnz	clear_2
  3123                           
  3124                           ; Clear objects allocated to BANK0 (61 bytes)
  3125  004324  EE00  F0BC         	lfsr	0,__pbssBANK0
  3126  004328  0E3D               	movlw	61
  3127  00432A                     clear_3:
  3128  00432A  6AEE               	clrf	postinc0,c
  3129  00432C  06E8               	decf	wreg,f,c
  3130  00432E  E1FD               	bnz	clear_3
  3131                           
  3132                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3133  004330  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3134                           
  3135                           ; Clear objects allocated to COMRAM (41 bytes)
  3136  004332  EE00  F033         	lfsr	0,__pbssCOMRAM
  3137  004336  0E29               	movlw	41
  3138  004338                     clear_4:
  3139  004338  6AEE               	clrf	postinc0,c
  3140  00433A  06E8               	decf	wreg,f,c
  3141  00433C  E1FD               	bnz	clear_4
  3142  00433E                     end_of_initialization:
  3143                           	opt stack 0
  3144  00433E                     __end_of__initialization:
  3145                           	opt stack 0
  3146  00433E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3147  004340  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3148  004342  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3149  004344  6EF8               	movwf	tblptru,c
  3150  004346  0100               	movlb	0
  3151  004348  EF7B  F016         	goto	_main	;jump to C main() function
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1l	equ	0xFE1
  3160                           
  3161                           	psect	bitbssCOMRAM
  3162  0002E0                     __pbitbssCOMRAM:
  3163                           	opt stack 0
  3164  0002E0                     _log:
  3165                           	opt stack 0
  3166  0002E0                     	ds	1
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           postdec1	equ	0xFE5
  3174                           fsr1l	equ	0xFE1
  3175                           
  3176                           	psect	bssCOMRAM
  3177  000033                     __pbssCOMRAM:
  3178                           	opt stack 0
  3179  000033                     _CDCDataInHandle:
  3180                           	opt stack 0
  3181  000033                     	ds	2
  3182  000035                     _pBDTEntryEP0OutNext:
  3183                           	opt stack 0
  3184  000035                     	ds	2
  3185  000037                     _pBDTEntryEP0OutCurrent:
  3186                           	opt stack 0
  3187  000037                     	ds	2
  3188  000039                     _timer0ReloadVal:
  3189                           	opt stack 0
  3190  000039                     	ds	2
  3191  00003B                     _timer3ReloadVal:
  3192                           	opt stack 0
  3193  00003B                     	ds	2
  3194  00003D                     _timer1ReloadVal:
  3195                           	opt stack 0
  3196  00003D                     	ds	2
  3197  00003F                     _timerMinTickCount:
  3198                           	opt stack 0
  3199  00003F                     	ds	2
  3200  000041                     USBapp_LEDUpdateStatus@ledCount:
  3201                           	opt stack 0
  3202  000041                     	ds	2
  3203  000043                     _USBDeferOUTDataStagePackets:
  3204                           	opt stack 0
  3205  000043                     	ds	1
  3206  000044                     _USBDeferINDataStagePackets:
  3207                           	opt stack 0
  3208  000044                     	ds	1
  3209  000045                     _USBStatusStageEnabledFlag2:
  3210                           	opt stack 0
  3211  000045                     	ds	1
  3212  000046                     _USBStatusStageEnabledFlag1:
  3213                           	opt stack 0
  3214  000046                     	ds	1
  3215  000047                     _USBDeferStatusStagePacket:
  3216                           	opt stack 0
  3217  000047                     	ds	1
  3218  000048                     _USBStatusStageTimeoutCounter:
  3219                           	opt stack 0
  3220  000048                     	ds	1
  3221  000049                     _BothEP0OutUOWNsSet:
  3222                           	opt stack 0
  3223  000049                     	ds	1
  3224  00004A                     _endpoint_number:
  3225                           	opt stack 0
  3226  00004A                     	ds	1
  3227  00004B                     _RemoteWakeup:
  3228                           	opt stack 0
  3229  00004B                     	ds	1
  3230  00004C                     _controlTransferState:
  3231                           	opt stack 0
  3232  00004C                     	ds	1
  3233  00004D                     _shortPacketStatus:
  3234                           	opt stack 0
  3235  00004D                     	ds	1
  3236  00004E                     _countBitsSilent:
  3237                           	opt stack 0
  3238  00004E                     	ds	1
  3239  00004F                     _countRX:
  3240                           	opt stack 0
  3241  00004F                     	ds	1
  3242  000050                     _rx_data:
  3243                           	opt stack 0
  3244  000050                     	ds	1
  3245  000051                     _status:
  3246                           	opt stack 0
  3247  000051                     	ds	1
  3248  000052                     _responseReady:
  3249                           	opt stack 0
  3250  000052                     	ds	1
  3251  000053                     	ds	1
  3252  000054                     _moteModeState:
  3253                           	opt stack 0
  3254  000054                     	ds	1
  3255  000055                     _appState:
  3256                           	opt stack 0
  3257  000055                     	ds	1
  3258  000056                     _mainState:
  3259                           	opt stack 0
  3260  000056                     	ds	1
  3261  000057                     _USBAlternateInterface:
  3262                           	opt stack 0
  3263  000057                     	ds	2
  3264  000059                     _USTATcopy:
  3265                           	opt stack 0
  3266  000059                     	ds	1
  3267  00005A                     _USBActiveConfiguration:
  3268                           	opt stack 0
  3269  00005A                     	ds	1
  3270  00005B                     _n_bit:
  3271                           	opt stack 0
  3272  00005B                     	ds	1
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1l	equ	0xFE1
  3281                           
  3282                           	psect	dataCOMRAM
  3283  00005D                     __pdataCOMRAM:
  3284                           	opt stack 0
  3285  00005D                     _Contrast_level:
  3286                           	opt stack 0
  3287  00005D                     	ds	1
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postdec1	equ	0xFE5
  3295                           fsr1l	equ	0xFE1
  3296                           
  3297                           	psect	bssBANK0
  3298  0000BC                     __pbssBANK0:
  3299                           	opt stack 0
  3300  0000BC                     _outPipes:
  3301                           	opt stack 0
  3302  0000BC                     	ds	8
  3303  0000C4                     _inPipes:
  3304                           	opt stack 0
  3305  0000C4                     	ds	6
  3306  0000CA                     _pBDTEntryIn:
  3307                           	opt stack 0
  3308  0000CA                     	ds	6
  3309  0000D0                     _ep_data_out:
  3310                           	opt stack 0
  3311  0000D0                     	ds	3
  3312  0000D3                     _ep_data_in:
  3313                           	opt stack 0
  3314  0000D3                     	ds	3
  3315  0000D6                     _CDCDataOutHandle:
  3316                           	opt stack 0
  3317  0000D6                     	ds	2
  3318  0000D8                     _timerMsTickCount:
  3319                           	opt stack 0
  3320  0000D8                     	ds	2
  3321  0000DA                     _temperature:
  3322                           	opt stack 0
  3323  0000DA                     	ds	2
  3324  0000DC                     _cdc_mem_type:
  3325                           	opt stack 0
  3326  0000DC                     	ds	1
  3327  0000DD                     _cdc_tx_len:
  3328                           	opt stack 0
  3329  0000DD                     	ds	1
  3330  0000DE                     _cdc_rx_len:
  3331                           	opt stack 0
  3332  0000DE                     	ds	1
  3333  0000DF                     _eusartRxTail:
  3334                           	opt stack 0
  3335  0000DF                     	ds	1
  3336  0000E0                     _eusartRxHead:
  3337                           	opt stack 0
  3338  0000E0                     	ds	1
  3339  0000E1                     _eusartTxBufferRemaining:
  3340                           	opt stack 0
  3341  0000E1                     	ds	1
  3342  0000E2                     _eusartTxTail:
  3343                           	opt stack 0
  3344  0000E2                     	ds	1
  3345  0000E3                     _eusartTxHead:
  3346                           	opt stack 0
  3347  0000E3                     	ds	1
  3348  0000E4                     service_pushbutton@Release_Timer:
  3349                           	opt stack 0
  3350  0000E4                     	ds	1
  3351  0000E5                     _RS232cp:
  3352                           	opt stack 0
  3353  0000E5                     	ds	1
  3354  0000E6                     _LastRS232Out:
  3355                           	opt stack 0
  3356  0000E6                     	ds	1
  3357  0000E7                     _RS232_Out_Data_Rdy:
  3358                           	opt stack 0
  3359  0000E7                     	ds	1
  3360  0000E8                     _NextUSBOut:
  3361                           	opt stack 0
  3362  0000E8                     	ds	1
  3363  0000E9                     _rxByteFlag:
  3364                           	opt stack 0
  3365  0000E9                     	ds	1
  3366  0000EA                     _usbState:
  3367                           	opt stack 0
  3368  0000EA                     	ds	1
  3369  0000EB                     _cdc_trf_state:
  3370                           	opt stack 0
  3371  0000EB                     	ds	1
  3372  0000EC                     _USBDeviceState:
  3373                           	opt stack 0
  3374  0000EC                     	ds	1
  3375  0000ED                     _lightStringSize:
  3376                           	opt stack 0
  3377  0000ED                     	ds	1
  3378  0000EE                     _rnModule:
  3379                           	opt stack 0
  3380  0000EE                     	ds	1
  3381  0000EF                     _sleepTicker:
  3382                           	opt stack 0
  3383  0000EF                     	ds	1
  3384  0000F0                     _secTicker:
  3385                           	opt stack 0
  3386  0000F0                     	ds	1
  3387  0000F1                     _randomPortNum:
  3388                           	opt stack 0
  3389  0000F1                     	ds	1
  3390  0000F2                     _moduleBufferIndex:
  3391                           	opt stack 0
  3392  0000F2                     	ds	1
  3393  0000F3                     _runningState:
  3394                           	opt stack 0
  3395  0000F3                     	ds	1
  3396  0000F4                     _activeState:
  3397                           	opt stack 0
  3398  0000F4                     	ds	1
  3399  0000F5                     _eusartRxCount:
  3400                           	opt stack 0
  3401  0000F5                     	ds	1
  3402  0000F6                     _powerOnStatus:
  3403                           	opt stack 0
  3404  0000F6                     	ds	1
  3405  0000F7                     _operationType:
  3406                           	opt stack 0
  3407  0000F7                     	ds	1
  3408  0000F8                     _appTimer:
  3409                           	opt stack 0
  3410  0000F8                     	ds	1
  3411                           tblptru	equ	0xFF8
  3412                           tblptrh	equ	0xFF7
  3413                           tblptrl	equ	0xFF6
  3414                           tablat	equ	0xFF5
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           postdec1	equ	0xFE5
  3418                           fsr1l	equ	0xFE1
  3419                           
  3420                           	psect	dataBANK0
  3421  0000F9                     __pdataBANK0:
  3422                           	opt stack 0
  3423  0000F9                     _exitUSB:
  3424                           	opt stack 0
  3425  0000F9                     	ds	1
  3426  0000FA                     _periodicState:
  3427                           	opt stack 0
  3428  0000FA                     	ds	1
  3429  0000FB                     _menuTimeout:
  3430                           	opt stack 0
  3431  0000FB                     	ds	1
  3432  0000FC                     _dataRateValue:
  3433                           	opt stack 0
  3434  0000FC                     	ds	1
  3435  0000FD                     _periodicTimerValue:
  3436                           	opt stack 0
  3437  0000FD                     	ds	1
  3438  0000FE                     _periodicUpValue:
  3439                           	opt stack 0
  3440  0000FE                     	ds	1
  3441  0000FF                     _moteState:
  3442                           	opt stack 0
  3443  0000FF                     	ds	1
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           postdec1	equ	0xFE5
  3451                           fsr1l	equ	0xFE1
  3452                           
  3453                           	psect	bssBANK1
  3454  000100                     __pbssBANK1:
  3455                           	opt stack 0
  3456  000100                     	ds	32
  3457  000120                     	ds	16
  3458  000130                     _responseId:
  3459                           	opt stack 0
  3460  000130                     	ds	16
  3461  000140                     _pBDTEntryOut:
  3462                           	opt stack 0
  3463  000140                     	ds	6
  3464  000146                     _BaudRateGen:
  3465                           	opt stack 0
  3466  000146                     	ds	4
  3467  00014A                     service_pushbutton@PB_Timer:
  3468                           	opt stack 0
  3469  00014A                     	ds	4
  3470  00014E                     _pCDCDst:
  3471                           	opt stack 0
  3472  00014E                     	ds	3
  3473  000151                     _pCDCSrc:
  3474                           	opt stack 0
  3475  000151                     	ds	3
  3476  000154                     _pDst:
  3477                           	opt stack 0
  3478  000154                     	ds	2
  3479  000156                     _m10SecTicker:
  3480                           	opt stack 0
  3481  000156                     	ds	2
  3482  000158                     _light:
  3483                           	opt stack 0
  3484  000158                     	ds	2
  3485  00015A                     _control_signal_bitmap:
  3486                           	opt stack 0
  3487  00015A                     	ds	1
  3488  00015B                     _USBBusIsSuspended:
  3489                           	opt stack 0
  3490  00015B                     	ds	1
  3491  00015C                     _cs:
  3492                           	opt stack 0
  3493  00015C                     	ds	1
  3494  00015D                     _stops:
  3495                           	opt stack 0
  3496  00015D                     	ds	1
  3497  00015E                     _parity:
  3498                           	opt stack 0
  3499  00015E                     	ds	1
  3500  00015F                     	ds	1
  3501  000160                     	ds	1
  3502  000161                     _minTicker:
  3503                           	opt stack 0
  3504  000161                     	ds	1
  3505  000162                     	ds	1
  3506  000163                     	ds	1
  3507  000164                     _moduleResonseBuffer:
  3508                           	opt stack 0
  3509  000164                     	ds	64
  3510  0001A4                     _responseData:
  3511                           	opt stack 0
  3512  0001A4                     	ds	32
  3513  0001C4                     _dataBuffer:
  3514                           	opt stack 0
  3515  0001C4                     	ds	16
  3516  0001D4                     _cdc_notice:
  3517                           	opt stack 0
  3518  0001D4                     	ds	10
  3519  0001DE                     _dummy_encapsulated_cmd_response:
  3520                           	opt stack 0
  3521  0001DE                     	ds	8
  3522  0001E6                     _line_coding:
  3523                           	opt stack 0
  3524  0001E6                     	ds	7
  3525  0001ED                     _clearLight:
  3526                           	opt stack 0
  3527  0001ED                     	ds	5
  3528  0001F2                     _storedLight:
  3529                           	opt stack 0
  3530  0001F2                     	ds	5
  3531  0001F7                     _responsePortNum:
  3532                           	opt stack 0
  3533  0001F7                     	ds	3
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           postdec1	equ	0xFE5
  3541                           fsr1l	equ	0xFE1
  3542                           
  3543                           	psect	dataBANK1
  3544  0001FA                     __pdataBANK1:
  3545                           	opt stack 0
  3546  0001FA                     _selectedFont:
  3547                           	opt stack 0
  3548  0001FA                     	ds	2
  3549  0001FC                     	ds	1
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           
  3559                           	psect	bssBANK2
  3560  000200                     __pbssBANK2:
  3561                           	opt stack 0
  3562  000200                     _eusartRxBuffer:
  3563                           	opt stack 0
  3564  000200                     	ds	64
  3565  000240                     _eusartTxBuffer:
  3566                           	opt stack 0
  3567  000240                     	ds	64
  3568  000280                     _USB_Buffer:
  3569                           	opt stack 0
  3570  000280                     	ds	64
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postdec1	equ	0xFE5
  3578                           fsr1l	equ	0xFE1
  3579                           
  3580                           	psect	bssBANK3
  3581  000300                     __pbssBANK3:
  3582                           	opt stack 0
  3583  000300                     _buffer_rx:
  3584                           	opt stack 0
  3585  000300                     	ds	128
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           postdec1	equ	0xFE5
  3593                           fsr1l	equ	0xFE1
  3594                           
  3595                           	psect	cstackBANK0
  3596  000060                     __pcstackBANK0:
  3597                           	opt stack 0
  3598  000060                     ??_TMR1_Initialize:
  3599  000060                     ?_strncmp:
  3600                           	opt stack 0
  3601  000060                     ?_strcmp:
  3602                           	opt stack 0
  3603  000060                     ?_moteApp_getLightString:
  3604                           	opt stack 0
  3605  000060                     ?_USBTransferOnePacket:
  3606                           	opt stack 0
  3607  000060                     ?___wmul:
  3608                           	opt stack 0
  3609  000060                     ?___awmod:
  3610                           	opt stack 0
  3611  000060                     ?___lwmod:
  3612                           	opt stack 0
  3613  000060                     ?___fladd:
  3614                           	opt stack 0
  3615  000060                     ?___almod:
  3616                           	opt stack 0
  3617  000060                     ?___fltol:
  3618                           	opt stack 0
  3619  000060                     ?___xxtofl:
  3620                           	opt stack 0
  3621  000060                     MOTEapp_handlerState@state:
  3622                           	opt stack 0
  3623  000060                     MOTEapp_TimerBasedTask@timerTask:
  3624                           	opt stack 0
  3625  000060                     hexToStr@character:
  3626                           	opt stack 0
  3627  000060                     moteApp_clearBuffers@counter:
  3628                           	opt stack 0
  3629  000060                     USBapp_handlerState@state:
  3630                           	opt stack 0
  3631  000060                     USBapp_exitCDCState@usbState:
  3632                           	opt stack 0
  3633  000060                     service_pushbutton@bs:
  3634                           	opt stack 0
  3635  000060                     oled_writeCommand@command:
  3636                           	opt stack 0
  3637  000060                     oled_writeData@data:
  3638                           	opt stack 0
  3639  000060                     EUSART_Read@readValue:
  3640                           	opt stack 0
  3641  000060                     EUSART_Write@txData:
  3642                           	opt stack 0
  3643  000060                     EUSART_FlushBuffer@index:
  3644                           	opt stack 0
  3645  000060                     DATAEE_WriteByte@bData:
  3646                           	opt stack 0
  3647  000060                     DATAEE_ReadByte@bAdd:
  3648                           	opt stack 0
  3649  000060                     TMR2_ReadTimer@readVal:
  3650                           	opt stack 0
  3651  000060                     USBTransferOnePacket@dir:
  3652                           	opt stack 0
  3653  000060                     ___lbdiv@divisor:
  3654                           	opt stack 0
  3655  000060                     delayms@t:
  3656                           	opt stack 0
  3657  000060                     moteApp_delayms@length:
  3658                           	opt stack 0
  3659  000060                     oled_setFont@font:
  3660                           	opt stack 0
  3661  000060                     putUSBUSART@data:
  3662                           	opt stack 0
  3663  000060                     ___wmul@multiplier:
  3664                           	opt stack 0
  3665  000060                     ___awmod@dividend:
  3666                           	opt stack 0
  3667  000060                     ___lwmod@dividend:
  3668                           	opt stack 0
  3669  000060                     memcpy@d1:
  3670                           	opt stack 0
  3671  000060                     memset@p1:
  3672                           	opt stack 0
  3673  000060                     strcmp@s1:
  3674                           	opt stack 0
  3675  000060                     strncmp@s1:
  3676                           	opt stack 0
  3677  000060                     ___almod@dividend:
  3678                           	opt stack 0
  3679  000060                     ___fltol@f1:
  3680                           	opt stack 0
  3681  000060                     ___fladd@b:
  3682                           	opt stack 0
  3683  000060                     ___xxtofl@val:
  3684                           	opt stack 0
  3685                           
  3686                           ; 4 bytes @ 0x0
  3687  000060                     	ds	1
  3688  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3689                           	opt stack 0
  3690  000061                     moteApp_clearBuffers@counter_1714:
  3691                           	opt stack 0
  3692  000061                     Set_Page_Address@address:
  3693                           	opt stack 0
  3694  000061                     Set_Column_Address@address:
  3695                           	opt stack 0
  3696  000061                     oled_setDisplay@displayType:
  3697                           	opt stack 0
  3698  000061                     oled_setContrastControlRegister@mod:
  3699                           	opt stack 0
  3700  000061                     oled_initialDispayLine@line:
  3701                           	opt stack 0
  3702  000061                     oled_powerControl@vol:
  3703                           	opt stack 0
  3704  000061                     oled_regulorResistorSelect@r:
  3705                           	opt stack 0
  3706  000061                     DATAEE_WriteByte@bAdd:
  3707                           	opt stack 0
  3708  000061                     ___lbdiv@dividend:
  3709                           	opt stack 0
  3710  000061                     sendCommand@string:
  3711                           	opt stack 0
  3712  000061                     sendDataCommand@string:
  3713                           	opt stack 0
  3714  000061                     USBTransferOnePacket@data:
  3715                           	opt stack 0
  3716                           
  3717                           ; 2 bytes @ 0x1
  3718  000061                     	ds	1
  3719  000062                     ??_moteApp_delayms:
  3720  000062                     ??_oled_devInit:
  3721  000062                     ??_delayms:
  3722  000062                     MOTEapp_getModuleResponse@bufferByte:
  3723                           	opt stack 0
  3724  000062                     moteApp_clearBuffers@counter_1715:
  3725                           	opt stack 0
  3726  000062                     oled_putChar@station_dot:
  3727                           	opt stack 0
  3728  000062                     DATAEE_WriteByte@GIEBitValue:
  3729                           	opt stack 0
  3730  000062                     putUSBUSART@length:
  3731                           	opt stack 0
  3732  000062                     ___lbdiv@counter:
  3733                           	opt stack 0
  3734  000062                     ___wmul@multiplicand:
  3735                           	opt stack 0
  3736  000062                     ___awmod@divisor:
  3737                           	opt stack 0
  3738  000062                     ___lwmod@divisor:
  3739                           	opt stack 0
  3740  000062                     memcpy@s1:
  3741                           	opt stack 0
  3742  000062                     memset@c:
  3743                           	opt stack 0
  3744  000062                     strcmp@s2:
  3745                           	opt stack 0
  3746  000062                     strncmp@s2:
  3747                           	opt stack 0
  3748                           
  3749                           ; 2 bytes @ 0x2
  3750  000062                     	ds	1
  3751  000063                     ??_moteApp_toggleLeds:
  3752  000063                     ??_MOTEapp_SetDataRateSetting:
  3753  000063                     ??_moduleSleep:
  3754  000063                     ?_moteApp_getTempValue:
  3755                           	opt stack 0
  3756  000063                     moteApp_clearBuffers@counter_1716:
  3757                           	opt stack 0
  3758  000063                     oled_putChar@start_page:
  3759                           	opt stack 0
  3760  000063                     USBTransferOnePacket@len:
  3761                           	opt stack 0
  3762  000063                     ___lbdiv@quotient:
  3763                           	opt stack 0
  3764  000063                     delayms@i:
  3765                           	opt stack 0
  3766  000063                     moteApp_delayms@counter:
  3767                           	opt stack 0
  3768  000063                     sendDataCommand@appData:
  3769                           	opt stack 0
  3770                           
  3771                           ; 2 bytes @ 0x3
  3772  000063                     	ds	1
  3773  000064                     ??_oled_putChar:
  3774  000064                     ??_strcmp:
  3775  000064                     ??___fltol:
  3776  000064                     ??___xxtofl:
  3777  000064                     MOTEapp_SetDataRateSetting@dr:
  3778                           	opt stack 0
  3779  000064                     moteApp_toggleLeds@state:
  3780                           	opt stack 0
  3781  000064                     USBTransferOnePacket@ep:
  3782                           	opt stack 0
  3783  000064                     ___awmod@counter:
  3784                           	opt stack 0
  3785  000064                     ___lwmod@counter:
  3786                           	opt stack 0
  3787  000064                     ___wmul@product:
  3788                           	opt stack 0
  3789  000064                     memcpy@n:
  3790                           	opt stack 0
  3791  000064                     memset@n:
  3792                           	opt stack 0
  3793  000064                     strncmp@len:
  3794                           	opt stack 0
  3795  000064                     ___almod@divisor:
  3796                           	opt stack 0
  3797  000064                     ___fladd@a:
  3798                           	opt stack 0
  3799                           
  3800                           ; 4 bytes @ 0x4
  3801  000064                     	ds	1
  3802  000065                     sendDataCommand@dataLength:
  3803                           	opt stack 0
  3804  000065                     ___awmod@sign:
  3805                           	opt stack 0
  3806  000065                     strcmp@r:
  3807                           	opt stack 0
  3808  000065                     moduleResync@escapeCounter:
  3809                           	opt stack 0
  3810  000065                     moteApp_setSensorsInput@escapeCounter:
  3811                           	opt stack 0
  3812  000065                     moteApp_getTempValue@escapeCounter:
  3813                           	opt stack 0
  3814  000065                     USBTransferOnePacket@handle:
  3815                           	opt stack 0
  3816                           
  3817                           ; 2 bytes @ 0x5
  3818  000065                     	ds	1
  3819  000066                     ??_strncmp:
  3820  000066                     ??_sendDataCommand:
  3821  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3822                           	opt stack 0
  3823  000066                     memcpy@d:
  3824                           	opt stack 0
  3825  000066                     memset@p:
  3826                           	opt stack 0
  3827                           
  3828                           ; 2 bytes @ 0x6
  3829  000066                     	ds	1
  3830  000067                     ??_moteApp_add8bToDataBuffer:
  3831  000067                     ??_CDCTxService:
  3832  000067                     moduleResync@escapeEvent:
  3833                           	opt stack 0
  3834  000067                     sendDataCommand@byteCount:
  3835                           	opt stack 0
  3836  000067                     getsUSBUSART@buffer:
  3837                           	opt stack 0
  3838                           
  3839                           ; 2 bytes @ 0x7
  3840  000067                     	ds	1
  3841  000068                     ??___fladd:
  3842  000068                     sendDataCommand@byteCount_1627:
  3843                           	opt stack 0
  3844  000068                     USBDeviceInit@i:
  3845                           	opt stack 0
  3846  000068                     ___almod@counter:
  3847                           	opt stack 0
  3848  000068                     ___fltol@sign1:
  3849                           	opt stack 0
  3850  000068                     ___xxtofl@sign:
  3851                           	opt stack 0
  3852  000068                     _CDCTxService$6668:
  3853                           	opt stack 0
  3854  000068                     memcpy@s:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x8
  3858  000068                     	ds	1
  3859  000069                     moteApp_add8bToDataBuffer@number:
  3860                           	opt stack 0
  3861  000069                     getsUSBUSART@len:
  3862                           	opt stack 0
  3863  000069                     ___almod@sign:
  3864                           	opt stack 0
  3865  000069                     ___fltol@exp1:
  3866                           	opt stack 0
  3867  000069                     ___xxtofl@exp:
  3868                           	opt stack 0
  3869                           
  3870                           ; 1 bytes @ 0x9
  3871  000069                     	ds	1
  3872  00006A                     ??_getsUSBUSART:
  3873  00006A                     oled_putChar@k:
  3874                           	opt stack 0
  3875  00006A                     CDCTxService@i:
  3876                           	opt stack 0
  3877  00006A                     memcpy@tmp:
  3878                           	opt stack 0
  3879  00006A                     ___xxtofl@arg:
  3880                           	opt stack 0
  3881                           
  3882                           ; 4 bytes @ 0xA
  3883  00006A                     	ds	1
  3884  00006B                     oled_putChar@index:
  3885                           	opt stack 0
  3886  00006B                     CDCTxService@byte_to_send:
  3887                           	opt stack 0
  3888  00006B                     moteApp_setLightString@lightString:
  3889                           	opt stack 0
  3890  00006B                     _getsUSBUSART$6620:
  3891                           	opt stack 0
  3892                           
  3893                           ; 2 bytes @ 0xB
  3894  00006B                     	ds	1
  3895  00006C                     oled_clearRow@page:
  3896                           	opt stack 0
  3897                           
  3898                           ; 1 bytes @ 0xC
  3899  00006C                     	ds	1
  3900  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3901  00006D                     moteApp_setLightString@stingPos:
  3902                           	opt stack 0
  3903  00006D                     oled_clearRow@index:
  3904                           	opt stack 0
  3905                           
  3906                           ; 1 bytes @ 0xD
  3907  00006D                     	ds	1
  3908  00006E                     ?_moteApp_getLightValue:
  3909                           	opt stack 0
  3910  00006E                     moteApp_GoToSleep@status:
  3911                           	opt stack 0
  3912                           
  3913                           ; 1 bytes @ 0xE
  3914  00006E                     	ds	2
  3915  000070                     ___fladd@signs:
  3916                           	opt stack 0
  3917  000070                     moteApp_getLightValue@escapeCounter:
  3918                           	opt stack 0
  3919                           
  3920                           ; 2 bytes @ 0x10
  3921  000070                     	ds	1
  3922  000071                     ___fladd@aexp:
  3923                           	opt stack 0
  3924                           
  3925                           ; 1 bytes @ 0x11
  3926  000071                     	ds	1
  3927  000072                     ?_moteApp_convertSensorValue:
  3928                           	opt stack 0
  3929  000072                     ___fladd@bexp:
  3930                           	opt stack 0
  3931  000072                     moteApp_addToDataBuffer@string:
  3932                           	opt stack 0
  3933  000072                     moteApp_convertSensorValue@string:
  3934                           	opt stack 0
  3935  000072                     oled_putString@string:
  3936                           	opt stack 0
  3937                           
  3938                           ; 2 bytes @ 0x12
  3939  000072                     	ds	1
  3940  000073                     ___fladd@grs:
  3941                           	opt stack 0
  3942                           
  3943                           ; 1 bytes @ 0x13
  3944  000073                     	ds	1
  3945  000074                     ??_moteApp_convertSensorValue:
  3946  000074                     ?___flmul:
  3947                           	opt stack 0
  3948  000074                     moteApp_addToDataBuffer@bufferLocation:
  3949                           	opt stack 0
  3950  000074                     oled_putString@station_dot:
  3951                           	opt stack 0
  3952  000074                     ___flmul@b:
  3953                           	opt stack 0
  3954                           
  3955                           ; 4 bytes @ 0x14
  3956  000074                     	ds	1
  3957  000075                     moteApp_addToDataBuffer@index:
  3958                           	opt stack 0
  3959  000075                     oled_putString@start_page:
  3960                           	opt stack 0
  3961                           
  3962                           ; 1 bytes @ 0x15
  3963  000075                     	ds	1
  3964  000076                     oled_putString@index:
  3965                           	opt stack 0
  3966                           
  3967                           ; 1 bytes @ 0x16
  3968  000076                     	ds	1
  3969  000077                     ??_test_switch:
  3970  000077                     moteJoiningProcess@changeStates:
  3971                           	opt stack 0
  3972  000077                     USBapp_Handler@buttonPress:
  3973                           	opt stack 0
  3974  000077                     oled_putUint8@station_dot:
  3975                           	opt stack 0
  3976  000077                     oled_putint8@station_dot:
  3977                           	opt stack 0
  3978  000077                     moteApp_convertSensorValue@convertedValue:
  3979                           	opt stack 0
  3980                           
  3981                           ; 2 bytes @ 0x17
  3982  000077                     	ds	1
  3983  000078                     moteJoiningProcess@selectButton:
  3984                           	opt stack 0
  3985  000078                     oled_putUint8@start_page:
  3986                           	opt stack 0
  3987  000078                     oled_putint8@start_page:
  3988                           	opt stack 0
  3989  000078                     test_switch@timeout:
  3990                           	opt stack 0
  3991  000078                     ___flmul@a:
  3992                           	opt stack 0
  3993                           
  3994                           ; 4 bytes @ 0x18
  3995  000078                     	ds	1
  3996  000079                     ??_moteJoiningProcess:
  3997  000079                     moteApp_convertSensorValue@index:
  3998                           	opt stack 0
  3999  000079                     oled_putUint8@number:
  4000                           	opt stack 0
  4001  000079                     oled_putint8@negative:
  4002                           	opt stack 0
  4003                           
  4004                           ; 1 bytes @ 0x19
  4005  000079                     	ds	1
  4006  00007A                     test_switch@buttonCheck:
  4007                           	opt stack 0
  4008  00007A                     moteJoiningProcess@readDataRate:
  4009                           	opt stack 0
  4010  00007A                     oled_putUint8@numData:
  4011                           	opt stack 0
  4012  00007A                     oled_putint8@numData:
  4013                           	opt stack 0
  4014                           
  4015                           ; 6 bytes @ 0x1A
  4016  00007A                     	ds	1
  4017  00007B                     moteJoiningProcess@joiningComplete:
  4018                           	opt stack 0
  4019                           
  4020                           ; 1 bytes @ 0x1B
  4021  00007B                     	ds	1
  4022  00007C                     ??___flmul:
  4023  00007C                     moteJoiningProcess@messageReady:
  4024                           	opt stack 0
  4025                           
  4026                           ; 1 bytes @ 0x1C
  4027  00007C                     	ds	4
  4028  000080                     oled_putint8@number:
  4029                           	opt stack 0
  4030  000080                     ___flmul@sign:
  4031                           	opt stack 0
  4032                           
  4033                           ; 1 bytes @ 0x20
  4034  000080                     	ds	1
  4035  000081                     ___flmul@grs:
  4036                           	opt stack 0
  4037                           
  4038                           ; 4 bytes @ 0x21
  4039  000081                     	ds	4
  4040  000085                     ___flmul@aexp:
  4041                           	opt stack 0
  4042                           
  4043                           ; 1 bytes @ 0x25
  4044  000085                     	ds	1
  4045  000086                     ___flmul@bexp:
  4046                           	opt stack 0
  4047                           
  4048                           ; 1 bytes @ 0x26
  4049  000086                     	ds	1
  4050  000087                     ___flmul@prod:
  4051                           	opt stack 0
  4052                           
  4053                           ; 4 bytes @ 0x27
  4054  000087                     	ds	4
  4055  00008B                     ___flmul@temp:
  4056                           	opt stack 0
  4057                           
  4058                           ; 2 bytes @ 0x2B
  4059  00008B                     	ds	2
  4060  00008D                     ?___fldiv:
  4061                           	opt stack 0
  4062  00008D                     ___fldiv@b:
  4063                           	opt stack 0
  4064                           
  4065                           ; 4 bytes @ 0x2D
  4066  00008D                     	ds	4
  4067  000091                     ___fldiv@a:
  4068                           	opt stack 0
  4069                           
  4070                           ; 4 bytes @ 0x31
  4071  000091                     	ds	4
  4072  000095                     ??___fldiv:
  4073                           
  4074                           ; 1 bytes @ 0x35
  4075  000095                     	ds	4
  4076  000099                     ___fldiv@sign:
  4077                           	opt stack 0
  4078                           
  4079                           ; 1 bytes @ 0x39
  4080  000099                     	ds	1
  4081  00009A                     ___fldiv@rem:
  4082                           	opt stack 0
  4083                           
  4084                           ; 4 bytes @ 0x3A
  4085  00009A                     	ds	4
  4086  00009E                     ___fldiv@new_exp:
  4087                           	opt stack 0
  4088                           
  4089                           ; 2 bytes @ 0x3E
  4090  00009E                     	ds	2
  4091  0000A0                     ___fldiv@grs:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x40
  4095  0000A0                     	ds	4
  4096  0000A4                     ___fldiv@bexp:
  4097                           	opt stack 0
  4098                           
  4099                           ; 1 bytes @ 0x44
  4100  0000A4                     	ds	1
  4101  0000A5                     ___fldiv@aexp:
  4102                           	opt stack 0
  4103                           
  4104                           ; 1 bytes @ 0x45
  4105  0000A5                     	ds	1
  4106  0000A6                     ADC_TempConversion@tempRaw:
  4107                           	opt stack 0
  4108                           
  4109                           ; 1 bytes @ 0x46
  4110  0000A6                     	ds	1
  4111  0000A7                     ADC_TempConversion@temp:
  4112                           	opt stack 0
  4113                           
  4114                           ; 1 bytes @ 0x47
  4115  0000A7                     	ds	1
  4116  0000A8                     ADC_TempConversion@val:
  4117                           	opt stack 0
  4118                           
  4119                           ; 4 bytes @ 0x48
  4120  0000A8                     	ds	4
  4121  0000AC                     ??_moteApp_testSensors:
  4122  0000AC                     moteRunningProcess@selectButton:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0x4C
  4126  0000AC                     	ds	1
  4127  0000AD                     moteRunningProcess@messageReady:
  4128                           	opt stack 0
  4129                           
  4130                           ; 1 bytes @ 0x4D
  4131  0000AD                     	ds	1
  4132  0000AE                     moteRunningProcess@sleepEvent:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x4E
  4136  0000AE                     	ds	1
  4137  0000AF                     ??_moteRunningProcess:
  4138                           
  4139                           ; 1 bytes @ 0x4F
  4140  0000AF                     	ds	1
  4141  0000B0                     moteRunningProcess@readByte:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0x50
  4145  0000B0                     	ds	1
  4146  0000B1                     moteRunningProcess@sizeOfUpdate:
  4147                           	opt stack 0
  4148                           
  4149                           ; 1 bytes @ 0x51
  4150  0000B1                     	ds	1
  4151  0000B2                     moteRunningProcess@sizeOfUpdate_1497:
  4152                           	opt stack 0
  4153                           
  4154                           ; 1 bytes @ 0x52
  4155  0000B2                     	ds	1
  4156  0000B3                     moteRunningProcess@counter:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0x53
  4160  0000B3                     	ds	1
  4161  0000B4                     moteRunningProcess@bufferReadPos:
  4162                           	opt stack 0
  4163                           
  4164                           ; 1 bytes @ 0x54
  4165  0000B4                     	ds	1
  4166  0000B5                     moteRunningProcess@changeStates:
  4167                           	opt stack 0
  4168                           
  4169                           ; 1 bytes @ 0x55
  4170  0000B5                     	ds	1
  4171  0000B6                     ??_moteHandler:
  4172                           
  4173                           ; 1 bytes @ 0x56
  4174  0000B6                     	ds	1
  4175  0000B7                     moteHandler@gotoSleep:
  4176                           	opt stack 0
  4177                           
  4178                           ; 1 bytes @ 0x57
  4179  0000B7                     	ds	1
  4180  0000B8                     moteHandler@gotoNextState:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x58
  4184  0000B8                     	ds	1
  4185  0000B9                     moteHandler@s2Button:
  4186                           	opt stack 0
  4187                           
  4188                           ; 1 bytes @ 0x59
  4189  0000B9                     	ds	1
  4190  0000BA                     moteHandler@buttonPress:
  4191                           	opt stack 0
  4192                           
  4193                           ; 1 bytes @ 0x5A
  4194  0000BA                     	ds	1
  4195  0000BB                     moteHandler@readMessage:
  4196                           	opt stack 0
  4197                           
  4198                           ; 1 bytes @ 0x5B
  4199  0000BB                     	ds	1
  4200  0000BC                     tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           postinc0	equ	0xFEE
  4205                           wreg	equ	0xFE8
  4206                           postdec1	equ	0xFE5
  4207                           fsr1l	equ	0xFE1
  4208                           
  4209                           ; 1 bytes @ 0x5C
  4210                           
  4211                           	psect	cstackCOMRAM
  4212  000001                     __pcstackCOMRAM:
  4213                           	opt stack 0
  4214  000001                     ??_USBStdGetDscHandler:
  4215  000001                     ??_USBStdGetStatusHandler:
  4216  000001                     ?i2_USBTransferOnePacket:
  4217                           	opt stack 0
  4218  000001                     ?___lldiv:
  4219                           	opt stack 0
  4220  000001                     reloadTimer@setTimerValue:
  4221                           	opt stack 0
  4222  000001                     USBConfigureEndpoint@direction:
  4223                           	opt stack 0
  4224  000001                     USBCtrlTrfTxService@byteToSend:
  4225                           	opt stack 0
  4226  000001                     i2USBTransferOnePacket@dir:
  4227                           	opt stack 0
  4228  000001                     i2memset@p1:
  4229                           	opt stack 0
  4230  000001                     ___lldiv@dividend:
  4231                           	opt stack 0
  4232                           
  4233                           ; 4 bytes @ 0x0
  4234  000001                     	ds	1
  4235  000002                     ??_USBConfigureEndpoint:
  4236  000002                     USBStdGetStatusHandler@p:
  4237                           	opt stack 0
  4238  000002                     i2USBTransferOnePacket@data:
  4239                           	opt stack 0
  4240                           
  4241                           ; 2 bytes @ 0x1
  4242  000002                     	ds	1
  4243  000003                     i2memset@c:
  4244                           	opt stack 0
  4245                           
  4246                           ; 2 bytes @ 0x2
  4247  000003                     	ds	1
  4248  000004                     i2USBTransferOnePacket@len:
  4249                           	opt stack 0
  4250                           
  4251                           ; 1 bytes @ 0x3
  4252  000004                     	ds	1
  4253  000005                     i2USBTransferOnePacket@ep:
  4254                           	opt stack 0
  4255  000005                     i2memset@n:
  4256                           	opt stack 0
  4257  000005                     ___lldiv@divisor:
  4258                           	opt stack 0
  4259                           
  4260                           ; 4 bytes @ 0x4
  4261  000005                     	ds	1
  4262  000006                     USBConfigureEndpoint@EPNum:
  4263                           	opt stack 0
  4264  000006                     i2USBTransferOnePacket@handle:
  4265                           	opt stack 0
  4266                           
  4267                           ; 2 bytes @ 0x5
  4268  000006                     	ds	1
  4269  000007                     USBConfigureEndpoint@handle:
  4270                           	opt stack 0
  4271  000007                     i2memset@p:
  4272                           	opt stack 0
  4273                           
  4274                           ; 2 bytes @ 0x6
  4275  000007                     	ds	2
  4276  000009                     USBEnableEndpoint@options:
  4277                           	opt stack 0
  4278  000009                     i2USBDeviceInit@i:
  4279                           	opt stack 0
  4280  000009                     ___lldiv@quotient:
  4281                           	opt stack 0
  4282                           
  4283                           ; 4 bytes @ 0x8
  4284  000009                     	ds	1
  4285  00000A                     USBEnableEndpoint@p:
  4286                           	opt stack 0
  4287                           
  4288                           ; 2 bytes @ 0x9
  4289  00000A                     	ds	2
  4290  00000C                     USBEnableEndpoint@ep:
  4291                           	opt stack 0
  4292                           
  4293                           ; 1 bytes @ 0xB
  4294  00000C                     	ds	1
  4295  00000D                     USBapp_CdcEmulatorInitialize@i:
  4296                           	opt stack 0
  4297  00000D                     ___lldiv@counter:
  4298                           	opt stack 0
  4299                           
  4300                           ; 1 bytes @ 0xC
  4301  00000D                     	ds	1
  4302  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4303                           	opt stack 0
  4304  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4305                           	opt stack 0
  4306                           
  4307                           ; 4 bytes @ 0xD
  4308  00000E                     	ds	2
  4309  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4310                           	opt stack 0
  4311                           
  4312                           ; 2 bytes @ 0xF
  4313  000010                     	ds	2
  4314  000012                     USBCtrlTrfRxService@i:
  4315                           	opt stack 0
  4316  000012                     USBCtrlTrfInHandler@lastDTS:
  4317                           	opt stack 0
  4318  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4319                           	opt stack 0
  4320                           
  4321                           ; 2 bytes @ 0x11
  4322  000012                     	ds	1
  4323  000013                     USBCtrlTrfRxService@byteToRead:
  4324                           	opt stack 0
  4325                           
  4326                           ; 1 bytes @ 0x12
  4327  000013                     	ds	1
  4328  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4329                           
  4330                           ; 1 bytes @ 0x13
  4331  000014                     	ds	2
  4332  000016                     ??_USBStdFeatureReqHandler:
  4333  000016                     USBStdSetCfgHandler@i:
  4334                           	opt stack 0
  4335                           
  4336                           ; 1 bytes @ 0x15
  4337  000016                     	ds	1
  4338  000017                     USBStdFeatureReqHandler@pUEP:
  4339                           	opt stack 0
  4340                           
  4341                           ; 2 bytes @ 0x16
  4342  000017                     	ds	2
  4343  000019                     USBStdFeatureReqHandler@current_ep_data:
  4344                           	opt stack 0
  4345                           
  4346                           ; 1 bytes @ 0x18
  4347  000019                     	ds	1
  4348  00001A                     USBStdFeatureReqHandler@p:
  4349                           	opt stack 0
  4350                           
  4351                           ; 2 bytes @ 0x19
  4352  00001A                     	ds	2
  4353  00001C                     ??_USBCtrlEPService:
  4354  00001C                     
  4355                           ; 1 bytes @ 0x1B
  4356  00001C                     	ds	2
  4357  00001E                     USBCtrlEPService@setup_cnt:
  4358                           	opt stack 0
  4359                           
  4360                           ; 1 bytes @ 0x1D
  4361  00001E                     	ds	1
  4362  00001F                     USBDeviceTasks@i:
  4363                           	opt stack 0
  4364                           
  4365                           ; 1 bytes @ 0x1E
  4366  00001F                     	ds	1
  4367  000020                     ??_INTERRUPT_InterruptManager:
  4368                           
  4369                           ; 1 bytes @ 0x1F
  4370  000020                     	ds	19
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           postdec1	equ	0xFE5
  4378                           fsr1l	equ	0xFE1
  4379                           
  4380 ;;
  4381 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4382 ;;
  4383 ;; *************** function _main *****************
  4384 ;; Defined at:
  4385 ;;		line 70 in file "main.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4402 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels required when called:   20
  4405 ;; This function calls:
  4406 ;;		_DATAEE_ReadByte
  4407 ;;		_DATAEE_WriteByte
  4408 ;;		_MOTEapp_handlerState
  4409 ;;		_SYSTEM_Initialize
  4410 ;;		_USBDeviceAttach
  4411 ;;		_USBDeviceInit
  4412 ;;		_USBapp_Handler
  4413 ;;		_USBapp_handlerState
  4414 ;;		_moduleResync
  4415 ;;		_moteApp_clearCommand
  4416 ;;		_moteApp_delayms
  4417 ;;		_moteHandler
  4418 ;;		_oled_clear
  4419 ;;		_oled_init
  4420 ;;		_oled_putString
  4421 ;;		_test_powerup
  4422 ;; This function is called by:
  4423 ;;		Startup code after reset
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text0
  4428  002CF6                     __ptext0:
  4429                           	opt stack 0
  4430  002CF6                     _main:
  4431                           	opt stack 11
  4432                           
  4433                           ;main.c: 73: SYSTEM_Initialize();
  4434                           
  4435                           ;incstack = 0
  4436  002CF6  ECC9  F02A         	call	_SYSTEM_Initialize	;wreg free
  4437                           
  4438                           ;main.c: 75: oled_init();
  4439  002CFA  ECF5  F029         	call	_oled_init	;wreg free
  4440                           
  4441                           ;main.c: 76: USBDeviceInit();
  4442  002CFE  ECB5  F014         	call	_USBDeviceInit	;wreg free
  4443                           
  4444                           ;main.c: 78: USBDeviceAttach();
  4445  002D02  EC77  F029         	call	_USBDeviceAttach	;wreg free
  4446                           
  4447                           ;main.c: 80: LATBbits.LATB5 = 1;
  4448  002D06  8A8A               	bsf	3978,5,c	;volatile
  4449                           
  4450                           ;main.c: 81: moteApp_delayms(50);
  4451  002D08  0E00               	movlw	0
  4452  002D0A  0100               	movlb	0	; () banked
  4453  002D0C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4454  002D0E  0E32               	movlw	50
  4455  002D10  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4456  002D12  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4457                           
  4458                           ;main.c: 82: LATBbits.LATB5 = 0;
  4459  002D16  9A8A               	bcf	3978,5,c	;volatile
  4460                           
  4461                           ;main.c: 83: moteApp_delayms(500);
  4462  002D18  0E01               	movlw	1
  4463  002D1A  0100               	movlb	0	; () banked
  4464  002D1C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4465  002D1E  0EF4               	movlw	244
  4466  002D20  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4467  002D22  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4468                           
  4469                           ;main.c: 85: PEIE = 1;
  4470  002D26  8CF2               	bsf	intcon,6,c	;volatile
  4471                           
  4472                           ;main.c: 86: GIE = 1;
  4473  002D28  8EF2               	bsf	intcon,7,c	;volatile
  4474                           
  4475                           ;main.c: 88: moduleResync();
  4476  002D2A  EC07  F023         	call	_moduleResync	;wreg free
  4477                           
  4478                           ;main.c: 89: moteApp_delayms(20);
  4479  002D2E  0E00               	movlw	0
  4480  002D30  0100               	movlb	0	; () banked
  4481  002D32  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4482  002D34  0E14               	movlw	20
  4483  002D36  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4484  002D38  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4485                           
  4486                           ;main.c: 90: moteApp_clearCommand();
  4487  002D3C  EC3C  F02C         	call	_moteApp_clearCommand	;wreg free
  4488                           
  4489                           ;main.c: 91: moteApp_delayms(20);
  4490  002D40  0E00               	movlw	0
  4491  002D42  0100               	movlb	0	; () banked
  4492  002D44  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4493  002D46  0E14               	movlw	20
  4494  002D48  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4495  002D4A  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4496                           
  4497                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4498  002D4E  0E00               	movlw	0
  4499  002D50  ECE8  F02B         	call	_DATAEE_ReadByte
  4500  002D54  0100               	movlb	0	; () banked
  4501  002D56  6FF6               	movwf	_powerOnStatus& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4505  002D58  0E55               	movlw	85
  4506  002D5A  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4507  002D5C  B4D8               	btfsc	status,2,c
  4508  002D5E  D008               	goto	l57
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;main.c: 95: {
  4512                           ;main.c: 96: test_powerup();
  4513  002D60  ECC8  F024         	call	_test_powerup	;wreg free
  4514                           
  4515                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4516  002D64  0E55               	movlw	85
  4517  002D66  0100               	movlb	0	; () banked
  4518  002D68  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4519  002D6A  0E00               	movlw	0
  4520  002D6C  ECE6  F028         	call	_DATAEE_WriteByte
  4521  002D70                     l57:
  4522                           
  4523                           ;main.c: 98: }
  4524                           ;main.c: 101: operationType = USB;
  4525  002D70  0E00               	movlw	0
  4526  002D72  0100               	movlb	0	; () banked
  4527  002D74  6FF7               	movwf	_operationType& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4531  002D76  0E00               	movlw	0
  4532  002D78  EC67  F02C         	call	_USBapp_handlerState
  4533                           
  4534                           ;main.c: 104: oled_clear();
  4535  002D7C  ECAD  F02B         	call	_oled_clear	;wreg free
  4536                           
  4537                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4538  002D80  0E1E               	movlw	low STR_1
  4539  002D82  0100               	movlb	0	; () banked
  4540  002D84  6F72               	movwf	oled_putString@string& (0+255),b
  4541  002D86  0E7D               	movlw	high STR_1
  4542  002D88  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4543  002D8A  0E00               	movlw	0
  4544  002D8C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4545  002D8E  0E00               	movlw	0
  4546  002D90  6F75               	movwf	oled_putString@start_page& (0+255),b
  4547  002D92  EC71  F025         	call	_oled_putString	;wreg free
  4548                           
  4549                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4550  002D96  0E00               	movlw	low STR_2
  4551  002D98  0100               	movlb	0	; () banked
  4552  002D9A  6F72               	movwf	oled_putString@string& (0+255),b
  4553  002D9C  0E7D               	movlw	high STR_2
  4554  002D9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4555  002DA0  0E00               	movlw	0
  4556  002DA2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4557  002DA4  0E01               	movlw	1
  4558  002DA6  6F75               	movwf	oled_putString@start_page& (0+255),b
  4559  002DA8  EC71  F025         	call	_oled_putString	;wreg free
  4560                           
  4561                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4562  002DAC  0E0F               	movlw	low STR_3
  4563  002DAE  0100               	movlb	0	; () banked
  4564  002DB0  6F72               	movwf	oled_putString@string& (0+255),b
  4565  002DB2  0E7D               	movlw	high STR_3
  4566  002DB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4567  002DB6  0E00               	movlw	0
  4568  002DB8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4569  002DBA  0E03               	movlw	3
  4570  002DBC  6F75               	movwf	oled_putString@start_page& (0+255),b
  4571  002DBE  EC71  F025         	call	_oled_putString	;wreg free
  4572                           
  4573                           ;main.c: 108: moteApp_delayms(1000);
  4574  002DC2  0E03               	movlw	3
  4575  002DC4  0100               	movlb	0	; () banked
  4576  002DC6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4577  002DC8  0EE8               	movlw	232
  4578  002DCA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4579  002DCC  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4580                           
  4581                           ;main.c: 112: {
  4582                           ;main.c: 114: switch (operationType)
  4583                           
  4584                           ;main.c: 111: while(1)
  4585  002DD0  D015               	goto	l67
  4586  002DD2                     
  4587                           ;main.c: 117: while(1);
  4588  002DD2  D7FF               	goto	l60
  4589  002DD4                     
  4590                           ;main.c: 120: USBapp_Handler();
  4591  002DD4  EC59  F01F         	call	_USBapp_Handler	;wreg free
  4592                           
  4593                           ;main.c: 122: operationType = MOTE;
  4594  002DD8  0E01               	movlw	1
  4595  002DDA  0100               	movlb	0	; () banked
  4596  002DDC  6FF7               	movwf	_operationType& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4600  002DDE  0E01               	movlw	1
  4601  002DE0  EC6C  F02C         	call	_MOTEapp_handlerState
  4602                           
  4603                           ;main.c: 124: break;
  4604  002DE4  D00B               	goto	l67
  4605  002DE6                     
  4606                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4607  002DE6  EC78  F010         	call	_moteHandler	;wreg free
  4608  002DEA  0A04               	xorlw	4
  4609  002DEC  A4D8               	btfss	status,2,c
  4610  002DEE  D006               	goto	l67
  4611                           
  4612                           ;main.c: 127: {
  4613                           ;main.c: 129: operationType = USB;
  4614  002DF0  0E00               	movlw	0
  4615  002DF2  0100               	movlb	0	; () banked
  4616  002DF4  6FF7               	movwf	_operationType& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4620  002DF6  0E00               	movlw	0
  4621  002DF8  EC67  F02C         	call	_USBapp_handlerState
  4622  002DFC                     l67:
  4623                           
  4624                           ;main.c: 133: }
  4625                           
  4626                           ;main.c: 131: }
  4627                           ;main.c: 132: break;
  4628  002DFC  0100               	movlb	0	; () banked
  4629  002DFE  51F7               	movf	_operationType& (0+255),w,b
  4630                           
  4631                           ; Switch size 1, requested type "space"
  4632                           ; Number of cases is 2, Range of values is 0 to 1
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte            7     4 (average)
  4636                           ;	Chosen strategy is simple_byte
  4637  002E00  0A00               	xorlw	0	; case 0
  4638  002E02  B4D8               	btfsc	status,2,c
  4639  002E04  D7E7               	goto	l65
  4640  002E06  0A01               	xorlw	1	; case 1
  4641  002E08  B4D8               	btfsc	status,2,c
  4642  002E0A  D7ED               	goto	l66
  4643  002E0C  D7E2               	goto	l60
  4644  002E0E                     __end_of_main:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           intcon	equ	0xFF2
  4651                           postinc0	equ	0xFEE
  4652                           wreg	equ	0xFE8
  4653                           postdec1	equ	0xFE5
  4654                           fsr1l	equ	0xFE1
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _test_powerup *****************
  4658 ;; Defined at:
  4659 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:   17
  4680 ;; This function calls:
  4681 ;;		_EUSART_FlushBuffer
  4682 ;;		_moteApp_delayms
  4683 ;;		_moteApp_testSensors
  4684 ;;		_oled_clear
  4685 ;;		_test_comms
  4686 ;;		_test_leds
  4687 ;;		_test_oled
  4688 ;;		_test_switch
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text1
  4695  004990                     __ptext1:
  4696                           	opt stack 0
  4697  004990                     _test_powerup:
  4698                           	opt stack 13
  4699                           
  4700                           ;poweruptest.c: 65: test_oled();
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;incstack = 0
  4704  004990  EC39  F022         	call	_test_oled	;wreg free
  4705                           
  4706                           ;poweruptest.c: 66: moteApp_delayms(20);
  4707  004994  0E00               	movlw	0
  4708  004996  0100               	movlb	0	; () banked
  4709  004998  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4710  00499A  0E14               	movlw	20
  4711  00499C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4712  00499E  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4713                           
  4714                           ;poweruptest.c: 68: test_switch();
  4715  0049A2  EC5C  F01C         	call	_test_switch	;wreg free
  4716                           
  4717                           ;poweruptest.c: 70: oled_clear();
  4718  0049A6  ECAD  F02B         	call	_oled_clear	;wreg free
  4719                           
  4720                           ;poweruptest.c: 71: moteApp_delayms(20);
  4721  0049AA  0E00               	movlw	0
  4722  0049AC  0100               	movlb	0	; () banked
  4723  0049AE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4724  0049B0  0E14               	movlw	20
  4725  0049B2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4726  0049B4  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4727                           
  4728                           ;poweruptest.c: 72: test_comms();
  4729  0049B8  ECDC  F025         	call	_test_comms	;wreg free
  4730                           
  4731                           ;poweruptest.c: 73: moteApp_delayms(20);
  4732  0049BC  0E00               	movlw	0
  4733  0049BE  0100               	movlb	0	; () banked
  4734  0049C0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4735  0049C2  0E14               	movlw	20
  4736  0049C4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4737  0049C6  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4738                           
  4739                           ;poweruptest.c: 75: test_leds();
  4740  0049CA  EC76  F026         	call	_test_leds	;wreg free
  4741                           
  4742                           ;poweruptest.c: 78: moteApp_delayms(20);
  4743  0049CE  0E00               	movlw	0
  4744  0049D0  0100               	movlb	0	; () banked
  4745  0049D2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4746  0049D4  0E14               	movlw	20
  4747  0049D6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4748  0049D8  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4749                           
  4750                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4751  0049DC  EC46  F028         	call	_EUSART_FlushBuffer	;wreg free
  4752                           
  4753                           ;poweruptest.c: 80: moteApp_delayms(20);
  4754  0049E0  0E00               	movlw	0
  4755  0049E2  0100               	movlb	0	; () banked
  4756  0049E4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4757  0049E6  0E14               	movlw	20
  4758  0049E8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4759  0049EA  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4760                           
  4761                           ;poweruptest.c: 81: moteApp_testSensors();
  4762  0049EE  ECC2  F01C         	call	_moteApp_testSensors	;wreg free
  4763                           
  4764                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4765  0049F2  0E0B               	movlw	11
  4766  0049F4  0100               	movlb	0	; () banked
  4767  0049F6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4768  0049F8  0EB8               	movlw	184
  4769  0049FA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4770  0049FC  ECAA  F029         	call	_moteApp_delayms	;wreg free
  4771  004A00  0012               	return		;funcret
  4772  004A02                     __end_of_test_powerup:
  4773                           	opt stack 0
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           intcon	equ	0xFF2
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           postdec1	equ	0xFE5
  4782                           fsr1l	equ	0xFE1
  4783                           status	equ	0xFD8
  4784                           
  4785 ;; *************** function _test_switch *****************
  4786 ;; Defined at:
  4787 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  timeout         2   24[BANK0 ] unsigned int 
  4792 ;;  buttonCheck     1   26[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0
  4803 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4804 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4805 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4806 ;;Total ram usage:        4 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:   16
  4809 ;; This function calls:
  4810 ;;		_oled_clear
  4811 ;;		_oled_putString
  4812 ;; This function is called by:
  4813 ;;		_test_powerup
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text2
  4818  0038B8                     __ptext2:
  4819                           	opt stack 0
  4820  0038B8                     _test_switch:
  4821                           	opt stack 13
  4822                           
  4823                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4824                           
  4825                           ;incstack = 0
  4826  0038B8  0E01               	movlw	1
  4827  0038BA  0100               	movlb	0	; () banked
  4828  0038BC  6F79               	movwf	(test_switch@timeout+1)& (0+255),b
  4829  0038BE  0EF4               	movlw	244
  4830  0038C0  6F78               	movwf	test_switch@timeout& (0+255),b
  4831                           
  4832                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4833  0038C2  0E00               	movlw	0
  4834  0038C4  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;poweruptest.c: 103: oled_clear();
  4838  0038C6  ECAD  F02B         	call	_oled_clear	;wreg free
  4839                           
  4840                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4841  0038CA  0EF4               	movlw	low STR_10
  4842  0038CC  0100               	movlb	0	; () banked
  4843  0038CE  6F72               	movwf	oled_putString@string& (0+255),b
  4844  0038D0  0E7D               	movlw	high STR_10
  4845  0038D2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4846  0038D4  0E00               	movlw	0
  4847  0038D6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4848  0038D8  0E00               	movlw	0
  4849  0038DA  6F75               	movwf	oled_putString@start_page& (0+255),b
  4850  0038DC  EC71  F025         	call	_oled_putString	;wreg free
  4851                           
  4852                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4853  0038E0  A281               	btfss	3969,1,c	;volatile
  4854  0038E2  D002               	goto	u8570
  4855  0038E4  B081               	btfsc	3969,0,c	;volatile
  4856  0038E6  D00C               	goto	l123
  4857  0038E8                     u8570:
  4858                           
  4859                           ;poweruptest.c: 107: {
  4860                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4861  0038E8  0E7C               	movlw	low STR_11
  4862  0038EA  0100               	movlb	0	; () banked
  4863  0038EC  6F72               	movwf	oled_putString@string& (0+255),b
  4864  0038EE  0E7E               	movlw	high STR_11
  4865  0038F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4866  0038F2  0E00               	movlw	0
  4867  0038F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4868  0038F6  0E03               	movlw	3
  4869  0038F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  4870  0038FA  EC71  F025         	call	_oled_putString	;wreg free
  4871                           
  4872                           ;poweruptest.c: 109: }
  4873  0038FE  D038               	goto	l127
  4874  003900                     l123:
  4875                           
  4876                           ;poweruptest.c: 110: else
  4877                           ;poweruptest.c: 111: {
  4878                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4879  003900  0E1B               	movlw	low STR_12
  4880  003902  0100               	movlb	0	; () banked
  4881  003904  6F72               	movwf	oled_putString@string& (0+255),b
  4882  003906  0E7E               	movlw	high STR_12
  4883  003908  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4884  00390A  0E00               	movlw	0
  4885  00390C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4886  00390E  0E01               	movlw	1
  4887  003910  6F75               	movwf	oled_putString@start_page& (0+255),b
  4888  003912  EC71  F025         	call	_oled_putString	;wreg free
  4889                           
  4890                           ;poweruptest.c: 113: }
  4891                           ;poweruptest.c: 114: while(timeout--)
  4892  003916  D02C               	goto	l127
  4893  003918                     l128:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;poweruptest.c: 115: {
  4897                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4898  003918  B281               	btfsc	3969,1,c	;volatile
  4899  00391A  D00E               	goto	l129
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;poweruptest.c: 117: {
  4903                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4904  00391C  0E01               	movlw	low STR_13
  4905  00391E  6F72               	movwf	oled_putString@string& (0+255),b
  4906  003920  0E7E               	movlw	high STR_13
  4907  003922  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4908  003924  0E00               	movlw	0
  4909  003926  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4910  003928  0E02               	movlw	2
  4911  00392A  6F75               	movwf	oled_putString@start_page& (0+255),b
  4912  00392C  EC71  F025         	call	_oled_putString	;wreg free
  4913                           
  4914                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4915  003930  0100               	movlb	0	; () banked
  4916  003932  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  4917  003934  0F08               	addlw	8
  4918  003936  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4919  003938                     l129:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;poweruptest.c: 120: }
  4923                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4924                           
  4925                           ; BSR set to: 0
  4926  003938  B081               	btfsc	3969,0,c	;volatile
  4927  00393A  D00E               	goto	l130
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;poweruptest.c: 122: {
  4931                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4932  00393C  0E0E               	movlw	low STR_14
  4933  00393E  6F72               	movwf	oled_putString@string& (0+255),b
  4934  003940  0E7E               	movlw	high STR_14
  4935  003942  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4936  003944  0E00               	movlw	0
  4937  003946  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4938  003948  0E03               	movlw	3
  4939  00394A  6F75               	movwf	oled_putString@start_page& (0+255),b
  4940  00394C  EC71  F025         	call	_oled_putString	;wreg free
  4941                           
  4942                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4943  003950  0100               	movlb	0	; () banked
  4944  003952  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  4945  003954  0F80               	addlw	128
  4946  003956  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4947  003958                     l130:
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;poweruptest.c: 125: }
  4951                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4952                           
  4953                           ; BSR set to: 0
  4954  003958  0E88               	movlw	136
  4955  00395A  197A               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4956  00395C  B4D8               	btfsc	status,2,c
  4957  00395E  0012               	return	
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;poweruptest.c: 129: }
  4961                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4962                           
  4963                           ; BSR set to: 0
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;poweruptest.c: 127: {
  4967                           ;poweruptest.c: 128: break;
  4968  003960  0E9C               	movlw	156
  4969  003962  0100               	movlb	0	; () banked
  4970  003964  6F77               	movwf	??_test_switch& (0+255),b
  4971  003966  0ED7               	movlw	215
  4972  003968                     u10847:
  4973  003968  2EE8               	decfsz	wreg,f,c
  4974  00396A  D7FE               	bra	u10847
  4975  00396C  2F77               	decfsz	??_test_switch& (0+255),f,b
  4976  00396E  D7FC               	bra	u10847
  4977  003970                     l127:
  4978  003970  0100               	movlb	0	; () banked
  4979  003972  0778               	decf	test_switch@timeout& (0+255),f,b
  4980  003974  A0D8               	btfss	status,0,c
  4981  003976  0779               	decf	(test_switch@timeout+1)& (0+255),f,b
  4982  003978  2978               	incf	test_switch@timeout& (0+255),w,b
  4983  00397A  E1CE               	bnz	l128
  4984  00397C  2979               	incf	(test_switch@timeout+1)& (0+255),w,b
  4985  00397E  B4D8               	btfsc	status,2,c
  4986  003980  0012               	return	
  4987  003982  D7CA               	goto	l128
  4988  003984                     __end_of_test_switch:
  4989                           	opt stack 0
  4990                           tblptru	equ	0xFF8
  4991                           tblptrh	equ	0xFF7
  4992                           tblptrl	equ	0xFF6
  4993                           tablat	equ	0xFF5
  4994                           intcon	equ	0xFF2
  4995                           postinc0	equ	0xFEE
  4996                           wreg	equ	0xFE8
  4997                           postdec1	equ	0xFE5
  4998                           fsr1l	equ	0xFE1
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function _test_oled *****************
  5002 ;; Defined at:
  5003 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:   16
  5024 ;; This function calls:
  5025 ;;		_oled_clear
  5026 ;;		_oled_putString
  5027 ;; This function is called by:
  5028 ;;		_test_powerup
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text3
  5033  004472                     __ptext3:
  5034                           	opt stack 0
  5035  004472                     _test_oled:
  5036                           	opt stack 13
  5037                           
  5038                           ;poweruptest.c: 88: oled_clear();
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;incstack = 0
  5042  004472  ECAD  F02B         	call	_oled_clear	;wreg free
  5043                           
  5044                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5045  004476  0E3D               	movlw	low STR_4
  5046  004478  0100               	movlb	0	; () banked
  5047  00447A  6F72               	movwf	oled_putString@string& (0+255),b
  5048  00447C  0E7F               	movlw	high STR_4
  5049  00447E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5050  004480  0E00               	movlw	0
  5051  004482  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5052  004484  0E00               	movlw	0
  5053  004486  6F75               	movwf	oled_putString@start_page& (0+255),b
  5054  004488  EC71  F025         	call	_oled_putString	;wreg free
  5055                           
  5056                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5057  00448C  0E8A               	movlw	low (STR_164+11)
  5058  00448E  0100               	movlb	0	; () banked
  5059  004490  6F72               	movwf	oled_putString@string& (0+255),b
  5060  004492  0E7D               	movlw	high (STR_164+11)
  5061  004494  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5062  004496  0E00               	movlw	0
  5063  004498  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5064  00449A  0E06               	movlw	6
  5065  00449C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5066  00449E  EC71  F025         	call	_oled_putString	;wreg free
  5067                           
  5068                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5069  0044A2  0E97               	movlw	low (STR_165+11)
  5070  0044A4  0100               	movlb	0	; () banked
  5071  0044A6  6F72               	movwf	oled_putString@string& (0+255),b
  5072  0044A8  0E7D               	movlw	high (STR_165+11)
  5073  0044AA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5074  0044AC  0E00               	movlw	0
  5075  0044AE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5076  0044B0  0E08               	movlw	8
  5077  0044B2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5078  0044B4  EC71  F025         	call	_oled_putString	;wreg free
  5079                           
  5080                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5081  0044B8  0EC3               	movlw	low STR_7
  5082  0044BA  0100               	movlb	0	; () banked
  5083  0044BC  6F72               	movwf	oled_putString@string& (0+255),b
  5084  0044BE  0E7C               	movlw	high STR_7
  5085  0044C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5086  0044C2  0E00               	movlw	0
  5087  0044C4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5088  0044C6  0E01               	movlw	1
  5089  0044C8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5090  0044CA  EC71  F025         	call	_oled_putString	;wreg free
  5091                           
  5092                           ;poweruptest.c: 94: oled_putString("Mar 29 2018",0,2);
  5093  0044CE  0E70               	movlw	low STR_8
  5094  0044D0  0100               	movlb	0	; () banked
  5095  0044D2  6F72               	movwf	oled_putString@string& (0+255),b
  5096  0044D4  0E7E               	movlw	high STR_8
  5097  0044D6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5098  0044D8  0E00               	movlw	0
  5099  0044DA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5100  0044DC  0E02               	movlw	2
  5101  0044DE  6F75               	movwf	oled_putString@start_page& (0+255),b
  5102  0044E0  EC71  F025         	call	_oled_putString	;wreg free
  5103                           
  5104                           ;poweruptest.c: 95: oled_putString("00:51:12",0,3);
  5105  0044E4  0E46               	movlw	low STR_9
  5106  0044E6  0100               	movlb	0	; () banked
  5107  0044E8  6F72               	movwf	oled_putString@string& (0+255),b
  5108  0044EA  0E7F               	movlw	high STR_9
  5109  0044EC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5110  0044EE  0E00               	movlw	0
  5111  0044F0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5112  0044F2  0E03               	movlw	3
  5113  0044F4  6F75               	movwf	oled_putString@start_page& (0+255),b
  5114  0044F6  EC71  F025         	call	_oled_putString	;wreg free
  5115  0044FA  0012               	return		;funcret
  5116  0044FC                     __end_of_test_oled:
  5117                           	opt stack 0
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           intcon	equ	0xFF2
  5123                           postinc0	equ	0xFEE
  5124                           wreg	equ	0xFE8
  5125                           postdec1	equ	0xFE5
  5126                           fsr1l	equ	0xFE1
  5127                           status	equ	0xFD8
  5128                           
  5129 ;; *************** function _test_leds *****************
  5130 ;; Defined at:
  5131 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5149 ;;Total ram usage:        0 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:   15
  5152 ;; This function calls:
  5153 ;;		_delayms
  5154 ;;		_oled_putString
  5155 ;; This function is called by:
  5156 ;;		_test_powerup
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text4
  5161  004CEC                     __ptext4:
  5162                           	opt stack 0
  5163  004CEC                     _test_leds:
  5164                           	opt stack 14
  5165                           
  5166                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5167                           
  5168                           ;incstack = 0
  5169  004CEC  0E06               	movlw	low STR_16
  5170  004CEE  0100               	movlb	0	; () banked
  5171  004CF0  6F72               	movwf	oled_putString@string& (0+255),b
  5172  004CF2  0E7F               	movlw	high STR_16
  5173  004CF4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5174  004CF6  0E00               	movlw	0
  5175  004CF8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5176  004CFA  0E01               	movlw	1
  5177  004CFC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5178  004CFE  EC71  F025         	call	_oled_putString	;wreg free
  5179                           
  5180                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5181  004D02  8C89               	bsf	3977,6,c	;volatile
  5182                           
  5183                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5184  004D04  8E89               	bsf	3977,7,c	;volatile
  5185                           
  5186                           ;poweruptest.c: 153: delayms(500);
  5187  004D06  0E01               	movlw	1
  5188  004D08  0100               	movlb	0	; () banked
  5189  004D0A  6F61               	movwf	(delayms@t+1)& (0+255),b
  5190  004D0C  0EF4               	movlw	244
  5191  004D0E  6F60               	movwf	delayms@t& (0+255),b
  5192  004D10  EC91  F029         	call	_delayms	;wreg free
  5193                           
  5194                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5195  004D14  9C89               	bcf	3977,6,c	;volatile
  5196                           
  5197                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5198  004D16  9E89               	bcf	3977,7,c	;volatile
  5199                           
  5200                           ;poweruptest.c: 156: delayms(500);
  5201  004D18  0E01               	movlw	1
  5202  004D1A  0100               	movlb	0	; () banked
  5203  004D1C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5204  004D1E  0EF4               	movlw	244
  5205  004D20  6F60               	movwf	delayms@t& (0+255),b
  5206  004D22  EC91  F029         	call	_delayms	;wreg free
  5207                           
  5208                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5209  004D26  8C89               	bsf	3977,6,c	;volatile
  5210                           
  5211                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5212  004D28  8E89               	bsf	3977,7,c	;volatile
  5213                           
  5214                           ;poweruptest.c: 159: delayms(500);
  5215  004D2A  0E01               	movlw	1
  5216  004D2C  0100               	movlb	0	; () banked
  5217  004D2E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5218  004D30  0EF4               	movlw	244
  5219  004D32  6F60               	movwf	delayms@t& (0+255),b
  5220  004D34  EC91  F029         	call	_delayms	;wreg free
  5221                           
  5222                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5223  004D38  9C89               	bcf	3977,6,c	;volatile
  5224                           
  5225                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5226  004D3A  9E89               	bcf	3977,7,c	;volatile
  5227                           
  5228                           ;poweruptest.c: 162: delayms(500);
  5229  004D3C  0E01               	movlw	1
  5230  004D3E  0100               	movlb	0	; () banked
  5231  004D40  6F61               	movwf	(delayms@t+1)& (0+255),b
  5232  004D42  0EF4               	movlw	244
  5233  004D44  6F60               	movwf	delayms@t& (0+255),b
  5234  004D46  EC91  F029         	call	_delayms	;wreg free
  5235  004D4A  0012               	return		;funcret
  5236  004D4C                     __end_of_test_leds:
  5237                           	opt stack 0
  5238                           tblptru	equ	0xFF8
  5239                           tblptrh	equ	0xFF7
  5240                           tblptrl	equ	0xFF6
  5241                           tablat	equ	0xFF5
  5242                           intcon	equ	0xFF2
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           postdec1	equ	0xFE5
  5246                           fsr1l	equ	0xFE1
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _test_comms *****************
  5250 ;; Defined at:
  5251 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:   15
  5272 ;; This function calls:
  5273 ;;		_delayms
  5274 ;;		_moteApp_toggleLeds
  5275 ;;		_oled_putString
  5276 ;; This function is called by:
  5277 ;;		_test_powerup
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text5
  5282  004BB8                     __ptext5:
  5283                           	opt stack 0
  5284  004BB8                     _test_comms:
  5285                           	opt stack 14
  5286                           
  5287                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5288                           
  5289                           ;incstack = 0
  5290  004BB8  0EBF               	movlw	low STR_15
  5291  004BBA  0100               	movlb	0	; () banked
  5292  004BBC  6F72               	movwf	oled_putString@string& (0+255),b
  5293  004BBE  0E7E               	movlw	high STR_15
  5294  004BC0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5295  004BC2  0E00               	movlw	0
  5296  004BC4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5297  004BC6  0E00               	movlw	0
  5298  004BC8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5299  004BCA  EC71  F025         	call	_oled_putString	;wreg free
  5300                           
  5301                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5302  004BCE  0E01               	movlw	1
  5303  004BD0  EC7B  F018         	call	_moteApp_toggleLeds
  5304                           
  5305                           ;poweruptest.c: 138: delayms(500);
  5306  004BD4  0E01               	movlw	1
  5307  004BD6  0100               	movlb	0	; () banked
  5308  004BD8  6F61               	movwf	(delayms@t+1)& (0+255),b
  5309  004BDA  0EF4               	movlw	244
  5310  004BDC  6F60               	movwf	delayms@t& (0+255),b
  5311  004BDE  EC91  F029         	call	_delayms	;wreg free
  5312                           
  5313                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5314  004BE2  0E00               	movlw	0
  5315  004BE4  EC7B  F018         	call	_moteApp_toggleLeds
  5316                           
  5317                           ;poweruptest.c: 140: delayms(500);
  5318  004BE8  0E01               	movlw	1
  5319  004BEA  0100               	movlb	0	; () banked
  5320  004BEC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5321  004BEE  0EF4               	movlw	244
  5322  004BF0  6F60               	movwf	delayms@t& (0+255),b
  5323  004BF2  EC91  F029         	call	_delayms	;wreg free
  5324                           
  5325                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5326  004BF6  0E01               	movlw	1
  5327  004BF8  EC7B  F018         	call	_moteApp_toggleLeds
  5328                           
  5329                           ;poweruptest.c: 142: delayms(500);
  5330  004BFC  0E01               	movlw	1
  5331  004BFE  0100               	movlb	0	; () banked
  5332  004C00  6F61               	movwf	(delayms@t+1)& (0+255),b
  5333  004C02  0EF4               	movlw	244
  5334  004C04  6F60               	movwf	delayms@t& (0+255),b
  5335  004C06  EC91  F029         	call	_delayms	;wreg free
  5336                           
  5337                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5338  004C0A  0E00               	movlw	0
  5339  004C0C  EC7B  F018         	call	_moteApp_toggleLeds
  5340                           
  5341                           ;poweruptest.c: 144: delayms(500);
  5342  004C10  0E01               	movlw	1
  5343  004C12  0100               	movlb	0	; () banked
  5344  004C14  6F61               	movwf	(delayms@t+1)& (0+255),b
  5345  004C16  0EF4               	movlw	244
  5346  004C18  6F60               	movwf	delayms@t& (0+255),b
  5347  004C1A  EC91  F029         	call	_delayms	;wreg free
  5348  004C1E  0012               	return		;funcret
  5349  004C20                     __end_of_test_comms:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           intcon	equ	0xFF2
  5356                           postinc0	equ	0xFEE
  5357                           wreg	equ	0xFE8
  5358                           postdec1	equ	0xFE5
  5359                           fsr1l	equ	0xFE1
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _moteApp_toggleLeds *****************
  5363 ;; Defined at:
  5364 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  state           1    wreg     unsigned char 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  state           1    4[BANK0 ] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0
  5379 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5380 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5381 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5382 ;;Total ram usage:        2 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:   14
  5385 ;; This function calls:
  5386 ;;		_sendCommand
  5387 ;; This function is called by:
  5388 ;;		_test_comms
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text6
  5393  0030F6                     __ptext6:
  5394                           	opt stack 0
  5395  0030F6                     _moteApp_toggleLeds:
  5396                           	opt stack 14
  5397                           
  5398                           ;incstack = 0
  5399                           ;moteApp_toggleLeds@state stored from wreg
  5400  0030F6  0100               	movlb	0	; () banked
  5401  0030F8  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5402                           
  5403                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5404  0030FA  0EFA               	movlw	250
  5405  0030FC  0100               	movlb	0	; () banked
  5406  0030FE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5407  003100  0E58               	movlw	88
  5408  003102                     u10857:
  5409  003102  2EE8               	decfsz	wreg,f,c
  5410  003104  D7FE               	bra	u10857
  5411  003106  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5412  003108  D7FC               	bra	u10857
  5413  00310A  F000               	nop	
  5414                           
  5415                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5416  00310C  0EFA               	movlw	250
  5417  00310E  0100               	movlb	0	; () banked
  5418  003110  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5419  003112  0E58               	movlw	88
  5420  003114                     u10867:
  5421  003114  2EE8               	decfsz	wreg,f,c
  5422  003116  D7FE               	bra	u10867
  5423  003118  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5424  00311A  D7FC               	bra	u10867
  5425  00311C  F000               	nop	
  5426                           
  5427                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5428  00311E  0EFA               	movlw	250
  5429  003120  0100               	movlb	0	; () banked
  5430  003122  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5431  003124  0E58               	movlw	88
  5432  003126                     u10877:
  5433  003126  2EE8               	decfsz	wreg,f,c
  5434  003128  D7FE               	bra	u10877
  5435  00312A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5436  00312C  D7FC               	bra	u10877
  5437  00312E  F000               	nop	
  5438                           
  5439                           ;MOTEapp.c: 1269: if (state)
  5440  003130  0100               	movlb	0	; () banked
  5441  003132  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5442  003134  B4D8               	btfsc	status,2,c
  5443  003136  D029               	goto	l679
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;MOTEapp.c: 1270: {
  5447                           ;MOTEapp.c: 1271: sendCommand("sys set pindig GPIO10 1\r\n");
  5448  003138  0E22               	movlw	low STR_175
  5449  00313A  6F61               	movwf	sendCommand@string& (0+255),b
  5450  00313C  0E7A               	movlw	high STR_175
  5451  00313E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5452  003140  EC0D  F02A         	call	_sendCommand	;wreg free
  5453                           
  5454                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5455  003144  0EFA               	movlw	250
  5456  003146  0100               	movlb	0	; () banked
  5457  003148  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5458  00314A  0E58               	movlw	88
  5459  00314C                     u10887:
  5460  00314C  2EE8               	decfsz	wreg,f,c
  5461  00314E  D7FE               	bra	u10887
  5462  003150  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5463  003152  D7FC               	bra	u10887
  5464  003154  F000               	nop	
  5465                           
  5466                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5467  003156  0EFA               	movlw	250
  5468  003158  0100               	movlb	0	; () banked
  5469  00315A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5470  00315C  0E58               	movlw	88
  5471  00315E                     u10897:
  5472  00315E  2EE8               	decfsz	wreg,f,c
  5473  003160  D7FE               	bra	u10897
  5474  003162  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5475  003164  D7FC               	bra	u10897
  5476  003166  F000               	nop	
  5477                           
  5478                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5479  003168  0EFA               	movlw	250
  5480  00316A  0100               	movlb	0	; () banked
  5481  00316C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5482  00316E  0E58               	movlw	88
  5483  003170                     u10907:
  5484  003170  2EE8               	decfsz	wreg,f,c
  5485  003172  D7FE               	bra	u10907
  5486  003174  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5487  003176  D7FC               	bra	u10907
  5488  003178  F000               	nop	
  5489                           
  5490                           ;MOTEapp.c: 1275: sendCommand("sys set pindig GPIO11 1\r\n");
  5491  00317A  0E3C               	movlw	low STR_176
  5492  00317C  0100               	movlb	0	; () banked
  5493  00317E  6F61               	movwf	sendCommand@string& (0+255),b
  5494  003180  0E7A               	movlw	high STR_176
  5495  003182  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5496  003184  EC0D  F02A         	call	_sendCommand	;wreg free
  5497                           
  5498                           ;MOTEapp.c: 1276: }
  5499  003188  0012               	return	
  5500  00318A                     l679:
  5501                           
  5502                           ;MOTEapp.c: 1277: else
  5503                           ;MOTEapp.c: 1278: {
  5504                           ;MOTEapp.c: 1279: sendCommand("sys set pindig GPIO10 0\r\n");
  5505  00318A  0EEE               	movlw	low STR_177
  5506  00318C  0100               	movlb	0	; () banked
  5507  00318E  6F61               	movwf	sendCommand@string& (0+255),b
  5508  003190  0E79               	movlw	high STR_177
  5509  003192  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5510  003194  EC0D  F02A         	call	_sendCommand	;wreg free
  5511                           
  5512                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5513  003198  0EFA               	movlw	250
  5514  00319A  0100               	movlb	0	; () banked
  5515  00319C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5516  00319E  0E58               	movlw	88
  5517  0031A0                     u10917:
  5518  0031A0  2EE8               	decfsz	wreg,f,c
  5519  0031A2  D7FE               	bra	u10917
  5520  0031A4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5521  0031A6  D7FC               	bra	u10917
  5522  0031A8  F000               	nop	
  5523                           
  5524                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5525  0031AA  0EFA               	movlw	250
  5526  0031AC  0100               	movlb	0	; () banked
  5527  0031AE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5528  0031B0  0E58               	movlw	88
  5529  0031B2                     u10927:
  5530  0031B2  2EE8               	decfsz	wreg,f,c
  5531  0031B4  D7FE               	bra	u10927
  5532  0031B6  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5533  0031B8  D7FC               	bra	u10927
  5534  0031BA  F000               	nop	
  5535                           
  5536                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5537  0031BC  0EFA               	movlw	250
  5538  0031BE  0100               	movlb	0	; () banked
  5539  0031C0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5540  0031C2  0E58               	movlw	88
  5541  0031C4                     u10937:
  5542  0031C4  2EE8               	decfsz	wreg,f,c
  5543  0031C6  D7FE               	bra	u10937
  5544  0031C8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5545  0031CA  D7FC               	bra	u10937
  5546  0031CC  F000               	nop	
  5547                           
  5548                           ;MOTEapp.c: 1283: sendCommand("sys set pindig GPIO11 0\r\n");
  5549  0031CE  0E08               	movlw	low STR_178
  5550  0031D0  0100               	movlb	0	; () banked
  5551  0031D2  6F61               	movwf	sendCommand@string& (0+255),b
  5552  0031D4  0E7A               	movlw	high STR_178
  5553  0031D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5554  0031D8  EC0D  F02A         	call	_sendCommand	;wreg free
  5555  0031DC  0012               	return	
  5556  0031DE                     __end_of_moteApp_toggleLeds:
  5557                           	opt stack 0
  5558                           tblptru	equ	0xFF8
  5559                           tblptrh	equ	0xFF7
  5560                           tblptrl	equ	0xFF6
  5561                           tablat	equ	0xFF5
  5562                           intcon	equ	0xFF2
  5563                           postinc0	equ	0xFEE
  5564                           wreg	equ	0xFE8
  5565                           postdec1	equ	0xFE5
  5566                           fsr1l	equ	0xFE1
  5567                           status	equ	0xFD8
  5568                           
  5569 ;; *************** function _delayms *****************
  5570 ;; Defined at:
  5571 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  t               2    0[BANK0 ] unsigned int 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  i               2    3[BANK0 ] unsigned int 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5585 ;;      Params:         0       2       0       0       0       0       0       0       0
  5586 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5587 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5588 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5589 ;;Total ram usage:        5 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:   11
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_test_comms
  5596 ;;		_test_leds
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text7
  5601  005322                     __ptext7:
  5602                           	opt stack 0
  5603  005322                     _delayms:
  5604                           	opt stack 17
  5605                           
  5606                           ;poweruptest.c: 56: uint16_t i;
  5607                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5608                           
  5609                           ;incstack = 0
  5610  005322  0E00               	movlw	0
  5611  005324  0100               	movlb	0	; () banked
  5612  005326  6F64               	movwf	(delayms@i+1)& (0+255),b
  5613  005328  0E00               	movlw	0
  5614  00532A  6F63               	movwf	delayms@i& (0+255),b
  5615  00532C  D00C               	goto	l111
  5616  00532E                     
  5617                           ; BSR set to: 0
  5618                           ;poweruptest.c: 58: {
  5619                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5620                           
  5621                           ; BSR set to: 0
  5622  00532E  0E10               	movlw	16
  5623  005330  0100               	movlb	0	; () banked
  5624  005332  6F62               	movwf	??_delayms& (0+255),b
  5625  005334  0E94               	movlw	148
  5626  005336                     u10947:
  5627  005336  2EE8               	decfsz	wreg,f,c
  5628  005338  D7FE               	bra	u10947
  5629  00533A  2F62               	decfsz	??_delayms& (0+255),f,b
  5630  00533C  D7FC               	bra	u10947
  5631  00533E  F000               	nop	
  5632  005340  0100               	movlb	0	; () banked
  5633  005342  4B63               	infsnz	delayms@i& (0+255),f,b
  5634  005344  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5635  005346                     l111:
  5636                           
  5637                           ; BSR set to: 0
  5638  005346  5160               	movf	delayms@t& (0+255),w,b
  5639  005348  5D63               	subwf	delayms@i& (0+255),w,b
  5640  00534A  5161               	movf	(delayms@t+1)& (0+255),w,b
  5641  00534C  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5642  00534E  B0D8               	btfsc	status,0,c
  5643  005350  0012               	return	
  5644  005352  D7ED               	goto	l112
  5645  005354                     __end_of_delayms:
  5646                           	opt stack 0
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           intcon	equ	0xFF2
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _moteApp_testSensors *****************
  5659 ;; Defined at:
  5660 ;;		line 1368 in file "../Includes/Board/MOTEapp.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  dummyValue      2    0        unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5677 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        1 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:   16
  5681 ;; This function calls:
  5682 ;;		_ADC_TempConversion
  5683 ;;		_moteApp_convertSensorValue
  5684 ;;		_moteApp_getLightValue
  5685 ;;		_moteApp_getTempValue
  5686 ;;		_moteApp_setSensorsInput
  5687 ;;		_oled_clear
  5688 ;;		_oled_putChar
  5689 ;;		_oled_putString
  5690 ;;		_oled_putint8
  5691 ;; This function is called by:
  5692 ;;		_test_powerup
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text8
  5697  003984                     __ptext8:
  5698                           	opt stack 0
  5699  003984                     _moteApp_testSensors:
  5700                           	opt stack 13
  5701                           
  5702                           ;MOTEapp.c: 1371: moteApp_setSensorsInput();
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;incstack = 0
  5706  003984  EC8C  F024         	call	_moteApp_setSensorsInput	;wreg free
  5707                           
  5708                           ;MOTEapp.c: 1373: uint16_t dummyValue;
  5709                           ;MOTEapp.c: 1374: oled_clear();
  5710  003988  ECAD  F02B         	call	_oled_clear	;wreg free
  5711                           
  5712                           ;MOTEapp.c: 1375: oled_putString("ADC Test",0,0);
  5713  00398C  0E58               	movlw	low STR_17
  5714  00398E  0100               	movlb	0	; () banked
  5715  003990  6F72               	movwf	oled_putString@string& (0+255),b
  5716  003992  0E7F               	movlw	high STR_17
  5717  003994  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5718  003996  0E00               	movlw	0
  5719  003998  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5720  00399A  0E00               	movlw	0
  5721  00399C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5722  00399E  EC71  F025         	call	_oled_putString	;wreg free
  5723                           
  5724                           ;MOTEapp.c: 1376: oled_putString("Light =",0,1);
  5725  0039A2  0E71               	movlw	low STR_19
  5726  0039A4  0100               	movlb	0	; () banked
  5727  0039A6  6F72               	movwf	oled_putString@string& (0+255),b
  5728  0039A8  0E7F               	movlw	high STR_19
  5729  0039AA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5730  0039AC  0E00               	movlw	0
  5731  0039AE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5732  0039B0  0E01               	movlw	1
  5733  0039B2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5734  0039B4  EC71  F025         	call	_oled_putString	;wreg free
  5735                           
  5736                           ;MOTEapp.c: 1377: oled_putString("Temp  =",0,2);
  5737  0039B8  0E69               	movlw	low STR_18
  5738  0039BA  0100               	movlb	0	; () banked
  5739  0039BC  6F72               	movwf	oled_putString@string& (0+255),b
  5740  0039BE  0E7F               	movlw	high STR_18
  5741  0039C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5742  0039C2  0E00               	movlw	0
  5743  0039C4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5744  0039C6  0E02               	movlw	2
  5745  0039C8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5746  0039CA  EC71  F025         	call	_oled_putString	;wreg free
  5747                           
  5748                           ;MOTEapp.c: 1378: oled_putChar('C',14,2);
  5749  0039CE  0E0E               	movlw	14
  5750  0039D0  0100               	movlb	0	; () banked
  5751  0039D2  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5752  0039D4  0E02               	movlw	2
  5753  0039D6  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5754  0039D8  0E43               	movlw	67
  5755  0039DA  EC8B  F023         	call	_oled_putChar
  5756                           
  5757                           ;MOTEapp.c: 1379: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5758  0039DE  EC88  F028         	call	_moteApp_getTempValue	;wreg free
  5759  0039E2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5760  0039E6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5761  0039EA  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  5762  0039EE  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5763  0039F2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5764                           
  5765                           ;MOTEapp.c: 1380: temperature = ADC_TempConversion(temperature);
  5766  0039F6  0100               	movlb	0	; () banked
  5767  0039F8  51DA               	movf	_temperature& (0+255),w,b
  5768  0039FA  EC06  F018         	call	_ADC_TempConversion
  5769  0039FE  0100               	movlb	0	; () banked
  5770  003A00  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5771  003A02  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5772  003A04  6FDA               	movwf	_temperature& (0+255),b
  5773  003A06  6BDB               	clrf	(_temperature+1)& (0+255),b
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;MOTEapp.c: 1381: oled_putint8(temperature, 10, 2);
  5777  003A08  0E0A               	movlw	10
  5778  003A0A  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5779  003A0C  0E02               	movlw	2
  5780  003A0E  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5781  003A10  51DA               	movf	_temperature& (0+255),w,b
  5782  003A12  ECB6  F020         	call	_oled_putint8
  5783                           
  5784                           ;MOTEapp.c: 1382: __nop();
  5785  003A16  F000               	nop	
  5786                           
  5787                           ;MOTEapp.c: 1383: oled_putString("    ", 10, 1);
  5788  003A18  0EC7               	movlw	low (STR_40+12)
  5789  003A1A  0100               	movlb	0	; () banked
  5790  003A1C  6F72               	movwf	oled_putString@string& (0+255),b
  5791  003A1E  0E7A               	movlw	high (STR_40+12)
  5792  003A20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5793  003A22  0E0A               	movlw	10
  5794  003A24  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5795  003A26  0E01               	movlw	1
  5796  003A28  6F75               	movwf	oled_putString@start_page& (0+255),b
  5797  003A2A  EC71  F025         	call	_oled_putString	;wreg free
  5798                           
  5799                           ;MOTEapp.c: 1384: oled_putString(moteApp_getLightValue(), 10, 1);
  5800  003A2E  ECB3  F027         	call	_moteApp_getLightValue	;wreg free
  5801  003A32  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  5802  003A36  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5803  003A3A  0E0A               	movlw	10
  5804  003A3C  0100               	movlb	0	; () banked
  5805  003A3E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5806  003A40  0E01               	movlw	1
  5807  003A42  6F75               	movwf	oled_putString@start_page& (0+255),b
  5808  003A44  EC71  F025         	call	_oled_putString	;wreg free
  5809  003A48  0012               	return		;funcret
  5810  003A4A                     __end_of_moteApp_testSensors:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           intcon	equ	0xFF2
  5817                           postinc0	equ	0xFEE
  5818                           wreg	equ	0xFE8
  5819                           postdec1	equ	0xFE5
  5820                           fsr1l	equ	0xFE1
  5821                           status	equ	0xFD8
  5822                           
  5823 ;; *************** function _moteHandler *****************
  5824 ;; Defined at:
  5825 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  readMessage     1   91[BANK0 ] unsigned char 
  5830 ;;  buttonPress     1   90[BANK0 ] enum E5836
  5831 ;;  s2Button        1   89[BANK0 ] unsigned char 
  5832 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  5833 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      enum E6866
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0
  5844 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5845 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5846 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5847 ;;Total ram usage:        6 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   19
  5850 ;; This function calls:
  5851 ;;		_ADC_TempConversion
  5852 ;;		_MOTEapp_TimerBasedTask
  5853 ;;		_MOTEapp_getModuleResponse
  5854 ;;		_TMRapp_ClearBitFlags
  5855 ;;		_TMRapp_Handler
  5856 ;;		_USBapp_exitCDC
  5857 ;;		_USBapp_exitCDCState
  5858 ;;		_moteApp_convertSensorValue
  5859 ;;		_moteApp_getLightValue
  5860 ;;		_moteApp_getTempValue
  5861 ;;		_moteJoiningProcess
  5862 ;;		_moteRunningProcess
  5863 ;;		_oled_clear
  5864 ;;		_oled_putString
  5865 ;;		_oled_putint8
  5866 ;;		_service_pushbutton
  5867 ;; This function is called by:
  5868 ;;		_main
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text9
  5873  0020F0                     __ptext9:
  5874                           	opt stack 0
  5875  0020F0                     _moteHandler:
  5876                           	opt stack 11
  5877                           
  5878                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  5879                           
  5880                           ;incstack = 0
  5881  0020F0  0E00               	movlw	0
  5882  0020F2  0100               	movlb	0	; () banked
  5883  0020F4  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  5884                           
  5885                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  5886  0020F6  0E00               	movlw	0
  5887  0020F8  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5888                           
  5889                           ;MOTEapp.c: 192: bool s2Button = 0;
  5890  0020FA  0E00               	movlw	0
  5891  0020FC  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  5892                           
  5893                           ;MOTEapp.c: 193: bool readMessage = 0;
  5894  0020FE  0E00               	movlw	0
  5895  002100  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  5896                           
  5897                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  5898  002102  0E03               	movlw	3
  5899  002104  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  5903  002106  A080               	btfss	3968,0,c	;volatile
  5904  002108  D009               	goto	l363
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;MOTEapp.c: 198: {
  5908                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  5909  00210A  EC84  F02C         	call	_USBapp_exitCDC	;wreg free
  5910  00210E  0900               	iorlw	0
  5911  002110  A4D8               	btfss	status,2,c
  5912  002112  D007               	goto	l365
  5913                           
  5914                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  5915  002114  0E04               	movlw	4
  5916  002116  0100               	movlb	0	; () banked
  5917  002118  6FFF               	movwf	_moteState& (0+255),b
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;MOTEapp.c: 201: } else {
  5921  00211A  D003               	goto	l365
  5922  00211C                     l363:
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  5926                           
  5927                           ; BSR set to: 0
  5928  00211C  0E00               	movlw	0
  5929  00211E  EC62  F02C         	call	_USBapp_exitCDCState
  5930  002122                     l365:
  5931                           
  5932                           ;MOTEapp.c: 203: }
  5933                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  5934  002122  0100               	movlb	0	; () banked
  5935  002124  A1F8               	btfss	_appTimer& (0+255),0,b
  5936  002126  D008               	goto	l366
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;MOTEapp.c: 207: {
  5940                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  5941  002128  EC75  F02C         	call	_TMRapp_ClearBitFlags	;wreg free
  5942                           
  5943                           ;MOTEapp.c: 211: TMRapp_Handler();
  5944  00212C  EC07  F017         	call	_TMRapp_Handler	;wreg free
  5945                           
  5946                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  5947  002130  0100               	movlb	0	; () banked
  5948  002132  51F8               	movf	_appTimer& (0+255),w,b
  5949  002134  EC63  F02B         	call	_MOTEapp_TimerBasedTask
  5950  002138                     l366:
  5951                           
  5952                           ;MOTEapp.c: 213: }
  5953                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  5954  002138  EC3A  F025         	call	_service_pushbutton	;wreg free
  5955  00213C  0100               	movlb	0	; () banked
  5956  00213E  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  5960  002140  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  5961  002142  A4D8               	btfss	status,2,c
  5962  002144  D005               	goto	l367
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;MOTEapp.c: 218: {
  5966                           ;MOTEapp.c: 219: secTicker = 0;
  5967  002146  0E00               	movlw	0
  5968  002148  6FF0               	movwf	_secTicker& (0+255),b
  5969                           
  5970                           ;MOTEapp.c: 220: gotoNextState = 1;
  5971  00214A  0E01               	movlw	1
  5972  00214C  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5973                           
  5974                           ;MOTEapp.c: 221: }
  5975  00214E  D008               	goto	l369
  5976  002150                     l367:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  5980                           
  5981                           ; BSR set to: 0
  5982  002150  0E02               	movlw	2
  5983  002152  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5984  002154  A4D8               	btfss	status,2,c
  5985  002156  D004               	goto	l369
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;MOTEapp.c: 223: {
  5989                           ;MOTEapp.c: 224: secTicker = 0;
  5990  002158  0E00               	movlw	0
  5991  00215A  6FF0               	movwf	_secTicker& (0+255),b
  5992                           
  5993                           ;MOTEapp.c: 225: s2Button = 1;
  5994  00215C  0E01               	movlw	1
  5995  00215E  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  5996  002160                     l369:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;MOTEapp.c: 226: }
  6000                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  6001                           
  6002                           ; BSR set to: 0
  6003                           
  6004                           ; BSR set to: 0
  6005  002160  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  6006  002164  0900               	iorlw	0
  6007  002166  B4D8               	btfsc	status,2,c
  6008  002168  D002               	goto	l370
  6009                           
  6010                           ;MOTEapp.c: 230: readMessage = 1;
  6011  00216A  0E01               	movlw	1
  6012  00216C  D001               	goto	L1
  6013  00216E                     l370:
  6014                           
  6015                           ;MOTEapp.c: 231: else
  6016                           ;MOTEapp.c: 232: readMessage = 0;
  6017                           
  6018                           ; BSR set to: 0
  6019  00216E  0E00               	movlw	0
  6020  002170                     L1:
  6021  002170  0100               	movlb	0	; () banked
  6022  002172  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  6026                           
  6027                           ; BSR set to: 0
  6028  002174  0E02               	movlw	2
  6029  002176  19F3               	xorwf	_runningState& (0+255),w,b
  6030  002178  A4D8               	btfss	status,2,c
  6031  00217A  D041               	goto	l373
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;MOTEapp.c: 236: {
  6035                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  6036  00217C  0101               	movlb	1	; () banked
  6037  00217E  5157               	movf	(_m10SecTicker+1)& (0+255),w,b
  6038  002180  E104               	bnz	u10010
  6039  002182  0E64               	movlw	100
  6040  002184  5D56               	subwf	_m10SecTicker& (0+255),w,b
  6041  002186  A0D8               	btfss	status,0,c
  6042  002188  D03A               	goto	l373
  6043  00218A                     u10010:
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;MOTEapp.c: 239: {
  6047                           ;MOTEapp.c: 240: __nop();
  6048  00218A  F000               	nop	
  6049                           
  6050                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  6051  00218C  0EC7               	movlw	low (STR_40+12)
  6052  00218E  0100               	movlb	0	; () banked
  6053  002190  6F72               	movwf	oled_putString@string& (0+255),b
  6054  002192  0E7A               	movlw	high (STR_40+12)
  6055  002194  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6056  002196  0E06               	movlw	6
  6057  002198  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6058  00219A  0E01               	movlw	1
  6059  00219C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6060  00219E  EC71  F025         	call	_oled_putString	;wreg free
  6061                           
  6062                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  6063  0021A2  ECB3  F027         	call	_moteApp_getLightValue	;wreg free
  6064  0021A6  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6065  0021AA  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6066  0021AE  0E06               	movlw	6
  6067  0021B0  0100               	movlb	0	; () banked
  6068  0021B2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6069  0021B4  0E01               	movlw	1
  6070  0021B6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6071  0021B8  EC71  F025         	call	_oled_putString	;wreg free
  6072                           
  6073                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6074  0021BC  EC88  F028         	call	_moteApp_getTempValue	;wreg free
  6075  0021C0  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6076  0021C4  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6077  0021C8  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  6078  0021CC  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6079  0021D0  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6080                           
  6081                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  6082  0021D4  0100               	movlb	0	; () banked
  6083  0021D6  51DA               	movf	_temperature& (0+255),w,b
  6084  0021D8  EC06  F018         	call	_ADC_TempConversion
  6085  0021DC  0100               	movlb	0	; () banked
  6086  0021DE  6FB6               	movwf	??_moteHandler& (0+255),b
  6087  0021E0  51B6               	movf	??_moteHandler& (0+255),w,b
  6088  0021E2  6FDA               	movwf	_temperature& (0+255),b
  6089  0021E4  6BDB               	clrf	(_temperature+1)& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  6093  0021E6  0E06               	movlw	6
  6094  0021E8  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6095  0021EA  0E02               	movlw	2
  6096  0021EC  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6097  0021EE  51DA               	movf	_temperature& (0+255),w,b
  6098  0021F0  ECB6  F020         	call	_oled_putint8
  6099                           
  6100                           ;MOTEapp.c: 246: m10SecTicker = 0;
  6101  0021F4  0E00               	movlw	0
  6102  0021F6  0101               	movlb	1	; () banked
  6103  0021F8  6F57               	movwf	(_m10SecTicker+1)& (0+255),b
  6104  0021FA  0E00               	movlw	0
  6105  0021FC  6F56               	movwf	_m10SecTicker& (0+255),b
  6106  0021FE                     l373:
  6107                           
  6108                           ;MOTEapp.c: 247: }
  6109                           ;MOTEapp.c: 248: }
  6110                           ;MOTEapp.c: 250: if(secTicker)
  6111                           
  6112                           ; BSR set to: 1
  6113                           
  6114                           ; BSR set to: 1
  6115  0021FE  0100               	movlb	0	; () banked
  6116  002200  51F0               	movf	_secTicker& (0+255),w,b
  6117  002202  B4D8               	btfsc	status,2,c
  6118  002204  D071               	goto	l376
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;MOTEapp.c: 251: {
  6122                           ;MOTEapp.c: 252: if ((secTicker >= 10) && (menuTimeout))
  6123  002206  0E09               	movlw	9
  6124  002208  65F0               	cpfsgt	_secTicker& (0+255),b
  6125  00220A  D06E               	goto	l376
  6126                           
  6127                           ; BSR set to: 0
  6128  00220C  51FB               	movf	_menuTimeout& (0+255),w,b
  6129  00220E  B4D8               	btfsc	status,2,c
  6130  002210  D06B               	goto	l376
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;MOTEapp.c: 253: {
  6134                           ;MOTEapp.c: 254: gotoSleep = 1;
  6135  002212  0E01               	movlw	1
  6136  002214  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6137                           
  6138                           ;MOTEapp.c: 255: secTicker = 0;
  6139  002216  0E00               	movlw	0
  6140  002218  6FF0               	movwf	_secTicker& (0+255),b
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;MOTEapp.c: 256: }
  6144                           ;MOTEapp.c: 257: }
  6145                           ;MOTEapp.c: 259: switch(moteState)
  6146                           
  6147                           ; BSR set to: 0
  6148  00221A  D066               	goto	l376
  6149  00221C                     
  6150                           ; BSR set to: 0
  6151                           ;MOTEapp.c: 262: while(1);
  6152  00221C  D7FF               	goto	l377
  6153  00221E                     
  6154                           ;MOTEapp.c: 265: oled_clear();
  6155  00221E  ECAD  F02B         	call	_oled_clear	;wreg free
  6156                           
  6157                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6158  002222  0EDE               	movlw	low STR_24
  6159  002224  0100               	movlb	0	; () banked
  6160  002226  6F72               	movwf	oled_putString@string& (0+255),b
  6161  002228  0E7E               	movlw	high STR_24
  6162  00222A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6163  00222C  0E01               	movlw	1
  6164  00222E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6165  002230  0E00               	movlw	0
  6166  002232  6F75               	movwf	oled_putString@start_page& (0+255),b
  6167  002234  EC71  F025         	call	_oled_putString	;wreg free
  6168                           
  6169                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6170  002238  0E34               	movlw	low STR_25
  6171  00223A  0100               	movlb	0	; () banked
  6172  00223C  6F72               	movwf	oled_putString@string& (0+255),b
  6173  00223E  0E7F               	movlw	high STR_25
  6174  002240  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6175  002242  0E02               	movlw	2
  6176  002244  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6177  002246  0E01               	movlw	1
  6178  002248  6F75               	movwf	oled_putString@start_page& (0+255),b
  6179  00224A  EC71  F025         	call	_oled_putString	;wreg free
  6180                           
  6181                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6182  00224E  0EA9               	movlw	low STR_26
  6183  002250  0100               	movlb	0	; () banked
  6184  002252  6F72               	movwf	oled_putString@string& (0+255),b
  6185  002254  0E7B               	movlw	high STR_26
  6186  002256  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6187  002258  0E00               	movlw	0
  6188  00225A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6189  00225C  0E03               	movlw	3
  6190  00225E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6191  002260  EC71  F025         	call	_oled_putString	;wreg free
  6192                           
  6193                           ;MOTEapp.c: 269: activeState = moteStartup;
  6194  002264  0E00               	movlw	0
  6195  002266  0100               	movlb	0	; () banked
  6196  002268  6FF4               	movwf	_activeState& (0+255),b
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6200  00226A  0E02               	movlw	2
  6201  00226C  D031               	goto	L2
  6202  00226E                     
  6203                           ; BSR set to: 0
  6204                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6205                           
  6206                           ; BSR set to: 0
  6207  00226E  C0B8  F077         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6208  002272  C0B9  F078         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6209  002276  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6210  002278  EC10  F008         	call	_moteJoiningProcess
  6211  00227C  0900               	iorlw	0
  6212  00227E  B4D8               	btfsc	status,2,c
  6213  002280  D041               	goto	l381
  6214                           
  6215                           ;MOTEapp.c: 274: {
  6216                           ;MOTEapp.c: 275: oled_clear();
  6217  002282  ECAD  F02B         	call	_oled_clear	;wreg free
  6218                           
  6219                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6220  002286  0EFE               	movlw	low STR_27
  6221  002288  0100               	movlb	0	; () banked
  6222  00228A  6F72               	movwf	oled_putString@string& (0+255),b
  6223  00228C  0E7B               	movlw	high STR_27
  6224  00228E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6225  002290  0E00               	movlw	0
  6226  002292  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6227  002294  0E00               	movlw	0
  6228  002296  6F75               	movwf	oled_putString@start_page& (0+255),b
  6229  002298  EC71  F025         	call	_oled_putString	;wreg free
  6230                           
  6231                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6232  00229C  0E0F               	movlw	low STR_28
  6233  00229E  0100               	movlb	0	; () banked
  6234  0022A0  6F72               	movwf	oled_putString@string& (0+255),b
  6235  0022A2  0E7C               	movlw	high STR_28
  6236  0022A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6237  0022A6  0E00               	movlw	0
  6238  0022A8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6239  0022AA  0E02               	movlw	2
  6240  0022AC  6F75               	movwf	oled_putString@start_page& (0+255),b
  6241  0022AE  EC71  F025         	call	_oled_putString	;wreg free
  6242                           
  6243                           ;MOTEapp.c: 278: oled_putString(" (S2)      (S3) ", 0,3);
  6244  0022B2  0E32               	movlw	low STR_29
  6245  0022B4  0100               	movlb	0	; () banked
  6246  0022B6  6F72               	movwf	oled_putString@string& (0+255),b
  6247  0022B8  0E7B               	movlw	high STR_29
  6248  0022BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6249  0022BC  0E00               	movlw	0
  6250  0022BE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6251  0022C0  0E03               	movlw	3
  6252  0022C2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6253  0022C4  EC71  F025         	call	_oled_putString	;wreg free
  6254                           
  6255                           ;MOTEapp.c: 279: runningState = runningEnter;
  6256  0022C8  0E00               	movlw	0
  6257  0022CA  0100               	movlb	0	; () banked
  6258  0022CC  6FF3               	movwf	_runningState& (0+255),b
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6262  0022CE  0E03               	movlw	3
  6263  0022D0                     L2:
  6264  0022D0  6FFF               	movwf	_moteState& (0+255),b
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;MOTEapp.c: 281: }
  6268                           ;MOTEapp.c: 282: break;
  6269  0022D2  D018               	goto	l381
  6270  0022D4                     
  6271                           ; BSR set to: 0
  6272                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6273                           
  6274                           ; BSR set to: 0
  6275  0022D4  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6276  0022D8  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6277  0022DC  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6278  0022E0  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6279  0022E2  EC8F  F000         	call	_moteRunningProcess
  6280                           
  6281                           ;MOTEapp.c: 289: }
  6282                           
  6283                           ;MOTEapp.c: 288: break;
  6284                           
  6285                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6286                           
  6287                           ;MOTEapp.c: 285: break;
  6288  0022E6  D00E               	goto	l381
  6289  0022E8                     l376:
  6290  0022E8  0100               	movlb	0	; () banked
  6291  0022EA  51FF               	movf	_moteState& (0+255),w,b
  6292                           
  6293                           ; Switch size 1, requested type "space"
  6294                           ; Number of cases is 4, Range of values is 1 to 4
  6295                           ; switch strategies available:
  6296                           ; Name         Instructions Cycles
  6297                           ; simple_byte           13     7 (average)
  6298                           ;	Chosen strategy is simple_byte
  6299  0022EC  0A01               	xorlw	1	; case 1
  6300  0022EE  B4D8               	btfsc	status,2,c
  6301  0022F0  D796               	goto	l382
  6302  0022F2  0A03               	xorlw	3	; case 2
  6303  0022F4  B4D8               	btfsc	status,2,c
  6304  0022F6  D7BB               	goto	l383
  6305  0022F8  0A01               	xorlw	1	; case 3
  6306  0022FA  B4D8               	btfsc	status,2,c
  6307  0022FC  D7EB               	goto	l385
  6308  0022FE  0A07               	xorlw	7	; case 4
  6309  002300  A4D8               	btfss	status,2,c
  6310  002302  D78C               	goto	l377
  6311  002304                     l381:
  6312                           
  6313                           ;MOTEapp.c: 290: return moteState;
  6314                           
  6315                           ; BSR set to: 0
  6316  002304  0100               	movlb	0	; () banked
  6317  002306  51FF               	movf	_moteState& (0+255),w,b
  6318  002308  0012               	return	
  6319  00230A                     __end_of_moteHandler:
  6320                           	opt stack 0
  6321                           tblptru	equ	0xFF8
  6322                           tblptrh	equ	0xFF7
  6323                           tblptrl	equ	0xFF6
  6324                           tablat	equ	0xFF5
  6325                           intcon	equ	0xFF2
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           fsr1l	equ	0xFE1
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _moteRunningProcess *****************
  6333 ;; Defined at:
  6334 ;;		line 489 in file "../Includes/Board/MOTEapp.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  changeStates    1    wreg     unsigned char 
  6337 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6338 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6339 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6342 ;;  counter         1   83[BANK0 ] unsigned char 
  6343 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6344 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6345 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6346 ;;  readByte        1   80[BANK0 ] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      enum E6172
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6356 ;;      Params:         0       3       0       0       0       0       0       0       0
  6357 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6358 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6359 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6360 ;;Total ram usage:       10 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:   18
  6363 ;; This function calls:
  6364 ;;		_ADC_TempConversion
  6365 ;;		_MOTEapp_SetDataRateSetting
  6366 ;;		_TMR2_ReadTimer
  6367 ;;		_moteApp_GoToSleep
  6368 ;;		_moteApp_add8bToDataBuffer
  6369 ;;		_moteApp_addToDataBuffer
  6370 ;;		_moteApp_clearBuffers
  6371 ;;		_moteApp_convertSensorValue
  6372 ;;		_moteApp_delayms
  6373 ;;		_moteApp_getLightString
  6374 ;;		_moteApp_getLightValue
  6375 ;;		_moteApp_getTempValue
  6376 ;;		_moteApp_lightStringSize
  6377 ;;		_moteApp_setSensorsInput
  6378 ;;		_oled_clear
  6379 ;;		_oled_putString
  6380 ;;		_oled_putUint8
  6381 ;;		_oled_putint8
  6382 ;;		_sendDataCommand
  6383 ;;		_strcmp
  6384 ;;		_strncmp
  6385 ;; This function is called by:
  6386 ;;		_moteHandler
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text10
  6391  00011E                     __ptext10:
  6392                           	opt stack 0
  6393  00011E                     _moteRunningProcess:
  6394                           	opt stack 11
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;incstack = 0
  6398                           ;moteRunningProcess@changeStates stored from wreg
  6399  00011E  0100               	movlb	0	; () banked
  6400  000120  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6401                           
  6402                           ;MOTEapp.c: 491: uint8_t readByte = 0;
  6403  000122  0E00               	movlw	0
  6404  000124  0100               	movlb	0	; () banked
  6405  000126  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;MOTEapp.c: 493: if ((sleepEvent) && (periodicState))
  6409  000128  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6410  00012A  B4D8               	btfsc	status,2,c
  6411  00012C  EFE5  F007         	goto	l466
  6412                           
  6413                           ; BSR set to: 0
  6414  000130  51FA               	movf	_periodicState& (0+255),w,b
  6415  000132  B4D8               	btfsc	status,2,c
  6416  000134  EFE5  F007         	goto	l466
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;MOTEapp.c: 494: {
  6420                           ;MOTEapp.c: 495: if (sleepTicker >= periodicTimerValue)
  6421  000138  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6422  00013A  5DEF               	subwf	_sleepTicker& (0+255),w,b
  6423  00013C  A0D8               	btfss	status,0,c
  6424  00013E  D0C4               	goto	l459
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;MOTEapp.c: 496: {
  6428                           ;MOTEapp.c: 498: moteApp_clearBuffers();
  6429  000140  ECF0  F021         	call	_moteApp_clearBuffers	;wreg free
  6430                           
  6431                           ;MOTEapp.c: 501: light = 0;
  6432  000144  0E00               	movlw	0
  6433  000146  0101               	movlb	1	; () banked
  6434  000148  6F59               	movwf	(_light+1)& (0+255),b
  6435  00014A  0E00               	movlw	0
  6436  00014C  6F58               	movwf	_light& (0+255),b
  6437                           
  6438                           ; BSR set to: 1
  6439                           ;MOTEapp.c: 502: temperature = 0;
  6440  00014E  0E00               	movlw	0
  6441  000150  0100               	movlb	0	; () banked
  6442  000152  6FDB               	movwf	(_temperature+1)& (0+255),b
  6443  000154  0E00               	movlw	0
  6444  000156  6FDA               	movwf	_temperature& (0+255),b
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;MOTEapp.c: 503: __nop();
  6448  000158  F000               	nop	
  6449                           
  6450                           ;MOTEapp.c: 505: moteApp_setSensorsInput();
  6451  00015A  EC8C  F024         	call	_moteApp_setSensorsInput	;wreg free
  6452                           
  6453                           ;MOTEapp.c: 506: uint8_t sizeOfUpdate = 0;
  6454  00015E  0E00               	movlw	0
  6455  000160  0100               	movlb	0	; () banked
  6456  000162  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;MOTEapp.c: 507: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6460  000164  ECB3  F027         	call	_moteApp_getLightValue	;wreg free
  6461  000168  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6462  00016C  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6463  000170  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  6464  000174  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  6465  000178  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  6466                           
  6467                           ;MOTEapp.c: 508: oled_putString(moteApp_getLightString(), 6, 1);
  6468  00017C  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6469  000180  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6470  000184  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6471  000188  0E06               	movlw	6
  6472  00018A  0100               	movlb	0	; () banked
  6473  00018C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6474  00018E  0E01               	movlw	1
  6475  000190  6F75               	movwf	oled_putString@start_page& (0+255),b
  6476  000192  EC71  F025         	call	_oled_putString	;wreg free
  6477                           
  6478                           ;MOTEapp.c: 509: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6479  000196  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6480  00019A  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6481  00019E  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6482  0001A2  0E04               	movlw	4
  6483  0001A4  0100               	movlb	0	; () banked
  6484  0001A6  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6485  0001A8  ECA6  F026         	call	_moteApp_addToDataBuffer	;wreg free
  6486  0001AC  0100               	movlb	0	; () banked
  6487  0001AE  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;MOTEapp.c: 511: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6491  0001B0  EC88  F028         	call	_moteApp_getTempValue	;wreg free
  6492  0001B4  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6493  0001B8  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6494  0001BC  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  6495  0001C0  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6496  0001C4  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6497                           
  6498                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(temperature);
  6499  0001C8  0100               	movlb	0	; () banked
  6500  0001CA  51DA               	movf	_temperature& (0+255),w,b
  6501  0001CC  EC06  F018         	call	_ADC_TempConversion
  6502  0001D0  0100               	movlb	0	; () banked
  6503  0001D2  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6504  0001D4  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6505  0001D6  6FDA               	movwf	_temperature& (0+255),b
  6506  0001D8  6BDB               	clrf	(_temperature+1)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;MOTEapp.c: 513: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6510  0001DA  EC81  F02C         	call	_moteApp_lightStringSize	;wreg free
  6511  0001DE  0F05               	addlw	5
  6512  0001E0  0100               	movlb	0	; () banked
  6513  0001E2  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6514  0001E4  51DA               	movf	_temperature& (0+255),w,b
  6515  0001E6  ECFE  F01E         	call	_moteApp_add8bToDataBuffer
  6516                           
  6517                           ;MOTEapp.c: 516: sleepTicker = 0;
  6518  0001EA  0E00               	movlw	0
  6519  0001EC  0100               	movlb	0	; () banked
  6520  0001EE  6FEF               	movwf	_sleepTicker& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;MOTEapp.c: 517: oled_clear();
  6524  0001F0  ECAD  F02B         	call	_oled_clear	;wreg free
  6525                           
  6526                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6527  0001F4  0E31               	movlw	low STR_71
  6528  0001F6  0100               	movlb	0	; () banked
  6529  0001F8  6F72               	movwf	oled_putString@string& (0+255),b
  6530  0001FA  0E7C               	movlw	high STR_71
  6531  0001FC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6532  0001FE  0E00               	movlw	0
  6533  000200  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6534  000202  0E00               	movlw	0
  6535  000204  6F75               	movwf	oled_putString@start_page& (0+255),b
  6536  000206  EC71  F025         	call	_oled_putString	;wreg free
  6537                           
  6538                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6539  00020A  0E34               	movlw	low STR_72
  6540  00020C  0100               	movlb	0	; () banked
  6541  00020E  6F72               	movwf	oled_putString@string& (0+255),b
  6542  000210  0E7E               	movlw	high STR_72
  6543  000212  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6544  000214  0E00               	movlw	0
  6545  000216  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6546  000218  0E01               	movlw	1
  6547  00021A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6548  00021C  EC71  F025         	call	_oled_putString	;wreg free
  6549                           
  6550                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6551  000220  0E72               	movlw	low STR_73
  6552  000222  0100               	movlb	0	; () banked
  6553  000224  6F72               	movwf	oled_putString@string& (0+255),b
  6554  000226  0E7D               	movlw	high STR_73
  6555  000228  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6556  00022A  0E00               	movlw	0
  6557  00022C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6558  00022E  0E02               	movlw	2
  6559  000230  6F75               	movwf	oled_putString@start_page& (0+255),b
  6560  000232  EC71  F025         	call	_oled_putString	;wreg free
  6561                           
  6562                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6563  000236  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6564  00023A  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6565  00023E  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6566  000242  0E03               	movlw	3
  6567  000244  0100               	movlb	0	; () banked
  6568  000246  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6569  000248  0E02               	movlw	2
  6570  00024A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6571  00024C  EC71  F025         	call	_oled_putString	;wreg free
  6572                           
  6573                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6574  000250  0E0B               	movlw	11
  6575  000252  0100               	movlb	0	; () banked
  6576  000254  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6577  000256  0E02               	movlw	2
  6578  000258  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6579  00025A  51DA               	movf	_temperature& (0+255),w,b
  6580  00025C  ECB6  F020         	call	_oled_putint8
  6581                           
  6582                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6583  000260  EC5D  F02C         	call	_TMR2_ReadTimer	;wreg free
  6584  000264  0100               	movlb	0	; () banked
  6585  000266  6FF1               	movwf	_randomPortNum& (0+255),b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;MOTEapp.c: 526: if (!randomPortNum)
  6589  000268  51F1               	movf	_randomPortNum& (0+255),w,b
  6590  00026A  A4D8               	btfss	status,2,c
  6591  00026C  D002               	goto	l460
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;MOTEapp.c: 527: randomPortNum = 5;
  6595  00026E  0E05               	movlw	5
  6596  000270  D005               	goto	L3
  6597  000272                     l460:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6601                           
  6602                           ; BSR set to: 0
  6603  000272  0EDF               	movlw	223
  6604  000274  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6605  000276  D003               	goto	l462
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6609  000278  51F1               	movf	_randomPortNum& (0+255),w,b
  6610  00027A  0FCE               	addlw	206
  6611  00027C                     L3:
  6612  00027C  6FF1               	movwf	_randomPortNum& (0+255),b
  6613  00027E                     l462:
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6617                           
  6618                           ; BSR set to: 0
  6619                           
  6620                           ; BSR set to: 0
  6621  00027E  0E0A               	movlw	10
  6622  000280  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6623  000282  0E01               	movlw	1
  6624  000284  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6625  000286  51F1               	movf	_randomPortNum& (0+255),w,b
  6626  000288  EC7E  F022         	call	_oled_putUint8
  6627                           
  6628                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6629  00028C  0E00               	movlw	0
  6630  00028E  0100               	movlb	0	; () banked
  6631  000290  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6632  000292  51F1               	movf	_randomPortNum& (0+255),w,b
  6633  000294  ECFE  F01E         	call	_moteApp_add8bToDataBuffer
  6634                           
  6635                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6636  000298  0E20               	movlw	32
  6637  00029A  0101               	movlb	1	; () banked
  6638  00029C  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;MOTEapp.c: 535: __nop();
  6642  00029E  F000               	nop	
  6643                           
  6644                           ;MOTEapp.c: 536: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6645  0002A0  0E2D               	movlw	low STR_74
  6646  0002A2  0100               	movlb	0	; () banked
  6647  0002A4  6F61               	movwf	sendDataCommand@string& (0+255),b
  6648  0002A6  0E7D               	movlw	high STR_74
  6649  0002A8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6650  0002AA  0EC4               	movlw	low _dataBuffer
  6651  0002AC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6652  0002AE  0E01               	movlw	high _dataBuffer
  6653  0002B0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6654  0002B2  0E0C               	movlw	12
  6655  0002B4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6656  0002B6  EC87  F01D         	call	_sendDataCommand	;wreg free
  6657                           
  6658                           ;MOTEapp.c: 537: secTicker = 10 - (10 / 3);
  6659  0002BA  0E07               	movlw	7
  6660  0002BC  0100               	movlb	0	; () banked
  6661  0002BE  6FF0               	movwf	_secTicker& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;MOTEapp.c: 538: runningState = runningUplinkTransmit;
  6665  0002C0  0E08               	movlw	8
  6666  0002C2  6FF3               	movwf	_runningState& (0+255),b
  6667                           
  6668                           ;MOTEapp.c: 539: }
  6669  0002C4  EFE5  F007         	goto	l466
  6670  0002C8                     l459:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;MOTEapp.c: 540: else
  6674                           ;MOTEapp.c: 541: {
  6675                           ;MOTEapp.c: 542: if (menuTimeout)
  6676                           
  6677                           ; BSR set to: 0
  6678  0002C8  51FB               	movf	_menuTimeout& (0+255),w,b
  6679  0002CA  B4D8               	btfsc	status,2,c
  6680  0002CC  D007               	goto	l464
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 543: {
  6684                           ;MOTEapp.c: 544: sleepTicker++;
  6685  0002CE  2BEF               	incf	_sleepTicker& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;MOTEapp.c: 545: runningState = runningSleep;
  6689  0002D0  0E0F               	movlw	15
  6690  0002D2  6FF3               	movwf	_runningState& (0+255),b
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;MOTEapp.c: 546: selectButton = 1;
  6694  0002D4  0E01               	movlw	1
  6695  0002D6  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6696                           
  6697                           ;MOTEapp.c: 547: } else {
  6698  0002D8  EFE5  F007         	goto	l466
  6699  0002DC                     l464:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;MOTEapp.c: 548: sleepTicker = 0;
  6703                           
  6704                           ; BSR set to: 0
  6705  0002DC  0E00               	movlw	0
  6706  0002DE  6FEF               	movwf	_sleepTicker& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;MOTEapp.c: 549: }
  6710                           ;MOTEapp.c: 550: }
  6711                           ;MOTEapp.c: 551: }
  6712                           ;MOTEapp.c: 554: switch(runningState)
  6713                           
  6714                           ; BSR set to: 0
  6715                           
  6716                           ; BSR set to: 0
  6717  0002E0  EFE5  F007         	goto	l466
  6718  0002E4                     
  6719                           ; BSR set to: 0
  6720                           ;MOTEapp.c: 557: while(1);
  6721  0002E4  D7FF               	goto	l467
  6722  0002E6                     
  6723                           ;MOTEapp.c: 560: if ( (changeStates) || (selectButton) )
  6724  0002E6  0100               	movlb	0	; () banked
  6725  0002E8  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6726  0002EA  A4D8               	btfss	status,2,c
  6727  0002EC  D003               	goto	u9090
  6728                           
  6729                           ; BSR set to: 0
  6730  0002EE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6731  0002F0  B4D8               	btfsc	status,2,c
  6732  0002F2  0012               	return	
  6733  0002F4                     u9090:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;MOTEapp.c: 561: {
  6737                           ;MOTEapp.c: 562: oled_clear();
  6738                           
  6739                           ; BSR set to: 0
  6740  0002F4  ECAD  F02B         	call	_oled_clear	;wreg free
  6741                           
  6742                           ;MOTEapp.c: 563: oled_putString("  Issue Uplink  ",0,0);
  6743  0002F8  0E21               	movlw	low STR_75
  6744  0002FA  0100               	movlb	0	; () banked
  6745  0002FC  6F72               	movwf	oled_putString@string& (0+255),b
  6746  0002FE  0E7B               	movlw	high STR_75
  6747  000300  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6748  000302  0E00               	movlw	0
  6749  000304  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6750  000306  0E00               	movlw	0
  6751  000308  6F75               	movwf	oled_putString@start_page& (0+255),b
  6752  00030A  EC71  F025         	call	_oled_putString	;wreg free
  6753                           
  6754                           ;MOTEapp.c: 564: oled_putString(" LoRaWAN Packet ",0,1);
  6755  00030E  0E87               	movlw	low STR_76
  6756  000310  0100               	movlb	0	; () banked
  6757  000312  6F72               	movwf	oled_putString@string& (0+255),b
  6758  000314  0E7B               	movlw	high STR_76
  6759  000316  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6760  000318  0E00               	movlw	0
  6761  00031A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6762  00031C  0E01               	movlw	1
  6763  00031E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6764  000320  EC71  F025         	call	_oled_putString	;wreg free
  6765                           
  6766                           ;MOTEapp.c: 565: oled_putString("(NAV)    (SEL) ",0,3);
  6767  000324  0E83               	movlw	low STR_77
  6768  000326  0100               	movlb	0	; () banked
  6769  000328  6F72               	movwf	oled_putString@string& (0+255),b
  6770  00032A  0E7C               	movlw	high STR_77
  6771  00032C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6772  00032E  0E00               	movlw	0
  6773  000330  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6774  000332  0E03               	movlw	3
  6775  000334  6F75               	movwf	oled_putString@start_page& (0+255),b
  6776  000336  EC71  F025         	call	_oled_putString	;wreg free
  6777                           
  6778                           ;MOTEapp.c: 566: runningState = runningUplink;
  6779  00033A  0E06               	movlw	6
  6780  00033C  0100               	movlb	0	; () banked
  6781  00033E  6FF3               	movwf	_runningState& (0+255),b
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;MOTEapp.c: 567: }
  6785                           ;MOTEapp.c: 568: break;
  6786  000340  0012               	return	
  6787  000342                     
  6788                           ; BSR set to: 0
  6789                           ;MOTEapp.c: 570: if (changeStates)
  6790                           
  6791                           ; BSR set to: 0
  6792  000342  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6793  000344  B4D8               	btfsc	status,2,c
  6794  000346  D027               	goto	l477
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;MOTEapp.c: 571: {
  6798                           ;MOTEapp.c: 572: oled_clear();
  6799  000348  ECAD  F02B         	call	_oled_clear	;wreg free
  6800                           
  6801                           ;MOTEapp.c: 573: oled_putString(" View Downlink  ",0,0);
  6802  00034C  0E10               	movlw	low STR_78
  6803  00034E  0100               	movlb	0	; () banked
  6804  000350  6F72               	movwf	oled_putString@string& (0+255),b
  6805  000352  0E7B               	movlw	high STR_78
  6806  000354  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6807  000356  0E00               	movlw	0
  6808  000358  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6809  00035A  0E00               	movlw	0
  6810  00035C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6811  00035E  EC71  F025         	call	_oled_putString	;wreg free
  6812                           
  6813                           ;MOTEapp.c: 574: oled_putString("  Last Message  ",0,1);
  6814  000362  0EFF               	movlw	low STR_79
  6815  000364  0100               	movlb	0	; () banked
  6816  000366  6F72               	movwf	oled_putString@string& (0+255),b
  6817  000368  0E7A               	movlw	high STR_79
  6818  00036A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6819  00036C  0E00               	movlw	0
  6820  00036E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6821  000370  0E01               	movlw	1
  6822  000372  6F75               	movwf	oled_putString@start_page& (0+255),b
  6823  000374  EC71  F025         	call	_oled_putString	;wreg free
  6824                           
  6825                           ;MOTEapp.c: 575: oled_putString("(NAV)    (SEL) ",0,3);
  6826  000378  0E83               	movlw	low STR_77
  6827  00037A  0100               	movlb	0	; () banked
  6828  00037C  6F72               	movwf	oled_putString@string& (0+255),b
  6829  00037E  0E7C               	movlw	high STR_77
  6830  000380  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6831  000382  0E00               	movlw	0
  6832  000384  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6833  000386  0E03               	movlw	3
  6834  000388  6F75               	movwf	oled_putString@start_page& (0+255),b
  6835  00038A  EC71  F025         	call	_oled_putString	;wreg free
  6836                           
  6837                           ;MOTEapp.c: 576: runningState = runningDownlink;
  6838  00038E  0E0A               	movlw	10
  6839  000390  0100               	movlb	0	; () banked
  6840  000392  6FF3               	movwf	_runningState& (0+255),b
  6841                           
  6842                           ;MOTEapp.c: 577: }
  6843  000394  0012               	return	
  6844  000396                     l477:
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;MOTEapp.c: 578: else if (selectButton)
  6848                           
  6849                           ; BSR set to: 0
  6850  000396  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6851  000398  B4D8               	btfsc	status,2,c
  6852  00039A  0012               	return	
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;MOTEapp.c: 579: {
  6856                           ;MOTEapp.c: 580: sleepTicker = 0;
  6857  00039C  0E00               	movlw	0
  6858  00039E  6FEF               	movwf	_sleepTicker& (0+255),b
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;MOTEapp.c: 582: oled_clear();
  6862  0003A0  ECAD  F02B         	call	_oled_clear	;wreg free
  6863                           
  6864                           ;MOTEapp.c: 583: oled_putString("Uplink Pckt Type",0,0);
  6865  0003A4  0EDC               	movlw	low STR_81
  6866  0003A6  0100               	movlb	0	; () banked
  6867  0003A8  6F72               	movwf	oled_putString@string& (0+255),b
  6868  0003AA  0E7B               	movlw	high STR_81
  6869  0003AC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6870  0003AE  0E00               	movlw	0
  6871  0003B0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6872  0003B2  0E00               	movlw	0
  6873  0003B4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6874  0003B6  EC71  F025         	call	_oled_putString	;wreg free
  6875                           
  6876                           ;MOTEapp.c: 584: oled_putString("Throu Port# ",0,1);
  6877  0003BA  0E65               	movlw	low STR_82
  6878  0003BC  0100               	movlb	0	; () banked
  6879  0003BE  6F72               	movwf	oled_putString@string& (0+255),b
  6880  0003C0  0E7D               	movlw	high STR_82
  6881  0003C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6882  0003C4  0E00               	movlw	0
  6883  0003C6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6884  0003C8  0E01               	movlw	1
  6885  0003CA  6F75               	movwf	oled_putString@start_page& (0+255),b
  6886  0003CC  EC71  F025         	call	_oled_putString	;wreg free
  6887                           
  6888                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  6889  0003D0  0EA9               	movlw	low STR_83
  6890  0003D2  0100               	movlb	0	; () banked
  6891  0003D4  6F72               	movwf	oled_putString@string& (0+255),b
  6892  0003D6  0E7A               	movlw	high STR_83
  6893  0003D8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6894  0003DA  0E00               	movlw	0
  6895  0003DC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6896  0003DE  0E03               	movlw	3
  6897  0003E0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6898  0003E2  EC71  F025         	call	_oled_putString	;wreg free
  6899                           
  6900                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  6901  0003E6  ECF0  F021         	call	_moteApp_clearBuffers	;wreg free
  6902                           
  6903                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  6904  0003EA  EC5D  F02C         	call	_TMR2_ReadTimer	;wreg free
  6905  0003EE  0100               	movlb	0	; () banked
  6906  0003F0  6FF1               	movwf	_randomPortNum& (0+255),b
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;MOTEapp.c: 591: if (!randomPortNum)
  6910  0003F2  51F1               	movf	_randomPortNum& (0+255),w,b
  6911  0003F4  A4D8               	btfss	status,2,c
  6912  0003F6  D002               	goto	l480
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;MOTEapp.c: 592: randomPortNum = 5;
  6916  0003F8  0E05               	movlw	5
  6917  0003FA  D005               	goto	L4
  6918  0003FC                     l480:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  6922                           
  6923                           ; BSR set to: 0
  6924  0003FC  0EDF               	movlw	223
  6925  0003FE  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6926  000400  D003               	goto	l482
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  6930  000402  51F1               	movf	_randomPortNum& (0+255),w,b
  6931  000404  0FCE               	addlw	206
  6932  000406                     L4:
  6933  000406  6FF1               	movwf	_randomPortNum& (0+255),b
  6934  000408                     l482:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  6938                           
  6939                           ; BSR set to: 0
  6940                           
  6941                           ; BSR set to: 0
  6942  000408  0E0C               	movlw	12
  6943  00040A  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6944  00040C  0E01               	movlw	1
  6945  00040E  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6946  000410  51F1               	movf	_randomPortNum& (0+255),w,b
  6947  000412  EC7E  F022         	call	_oled_putUint8
  6948                           
  6949                           ;MOTEapp.c: 596: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6950  000416  0E00               	movlw	0
  6951  000418  0100               	movlb	0	; () banked
  6952  00041A  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6953  00041C  51F1               	movf	_randomPortNum& (0+255),w,b
  6954  00041E  ECFE  F01E         	call	_moteApp_add8bToDataBuffer
  6955                           
  6956                           ;MOTEapp.c: 597: dataBuffer[3] = 0x20;
  6957  000422  0E20               	movlw	32
  6958  000424  0101               	movlb	1	; () banked
  6959  000426  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;MOTEapp.c: 599: light = 0;
  6963  000428  0E00               	movlw	0
  6964  00042A  6F59               	movwf	(_light+1)& (0+255),b
  6965  00042C  0E00               	movlw	0
  6966  00042E  6F58               	movwf	_light& (0+255),b
  6967                           
  6968                           ; BSR set to: 1
  6969                           ;MOTEapp.c: 600: temperature = 0;
  6970  000430  0E00               	movlw	0
  6971  000432  0100               	movlb	0	; () banked
  6972  000434  6FDB               	movwf	(_temperature+1)& (0+255),b
  6973  000436  0E00               	movlw	0
  6974  000438  6FDA               	movwf	_temperature& (0+255),b
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;MOTEapp.c: 601: __nop();
  6978  00043A  F000               	nop	
  6979                           
  6980                           ;MOTEapp.c: 602: moteApp_setSensorsInput();
  6981  00043C  EC8C  F024         	call	_moteApp_setSensorsInput	;wreg free
  6982                           
  6983                           ;MOTEapp.c: 603: moteApp_delayms(500);
  6984  000440  0E01               	movlw	1
  6985  000442  0100               	movlb	0	; () banked
  6986  000444  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6987  000446  0EF4               	movlw	244
  6988  000448  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6989  00044A  ECAA  F029         	call	_moteApp_delayms	;wreg free
  6990                           
  6991                           ;MOTEapp.c: 604: uint8_t sizeOfUpdate = 0;
  6992  00044E  0E00               	movlw	0
  6993  000450  0100               	movlb	0	; () banked
  6994  000452  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;MOTEapp.c: 605: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6998  000454  ECB3  F027         	call	_moteApp_getLightValue	;wreg free
  6999  000458  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7000  00045C  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7001  000460  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  7002  000464  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  7003  000468  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  7004                           
  7005                           ;MOTEapp.c: 606: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7006  00046C  ECB3  F027         	call	_moteApp_getLightValue	;wreg free
  7007  000470  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7008  000474  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7009  000478  0E04               	movlw	4
  7010  00047A  0100               	movlb	0	; () banked
  7011  00047C  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7012  00047E  ECA6  F026         	call	_moteApp_addToDataBuffer	;wreg free
  7013  000482  0100               	movlb	0	; () banked
  7014  000484  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;MOTEapp.c: 607: __nop();
  7018  000486  F000               	nop	
  7019                           
  7020                           ;MOTEapp.c: 608: __nop();
  7021  000488  F000               	nop	
  7022                           
  7023                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7024  00048A  EC88  F028         	call	_moteApp_getTempValue	;wreg free
  7025  00048E  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7026  000492  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7027  000496  EC4D  F024         	call	_moteApp_convertSensorValue	;wreg free
  7028  00049A  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7029  00049E  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7030                           
  7031                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7032  0004A2  0100               	movlb	0	; () banked
  7033  0004A4  51DA               	movf	_temperature& (0+255),w,b
  7034  0004A6  EC06  F018         	call	_ADC_TempConversion
  7035  0004AA  0100               	movlb	0	; () banked
  7036  0004AC  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7037  0004AE  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7038  0004B0  6FDA               	movwf	_temperature& (0+255),b
  7039  0004B2  6BDB               	clrf	(_temperature+1)& (0+255),b
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7043  0004B4  EC81  F02C         	call	_moteApp_lightStringSize	;wreg free
  7044  0004B8  0F05               	addlw	5
  7045  0004BA  0100               	movlb	0	; () banked
  7046  0004BC  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7047  0004BE  51DA               	movf	_temperature& (0+255),w,b
  7048  0004C0  ECFE  F01E         	call	_moteApp_add8bToDataBuffer
  7049                           
  7050                           ;MOTEapp.c: 612: __nop();
  7051  0004C4  F000               	nop	
  7052                           
  7053                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7054  0004C6  0E07               	movlw	7
  7055  0004C8  0100               	movlb	0	; () banked
  7056  0004CA  6FF3               	movwf	_runningState& (0+255),b
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;MOTEapp.c: 615: }
  7060                           ;MOTEapp.c: 616: break;
  7061                           
  7062                           ; BSR set to: 0
  7063  0004CC  0012               	return	
  7064  0004CE                     
  7065                           ; BSR set to: 0
  7066                           ;MOTEapp.c: 618: if (changeStates)
  7067                           
  7068                           ; BSR set to: 0
  7069  0004CE  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7070  0004D0  B4D8               	btfsc	status,2,c
  7071  0004D2  D00C               	goto	l484
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;MOTEapp.c: 619: {
  7075                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7076  0004D4  0E2D               	movlw	low STR_74
  7077  0004D6  6F61               	movwf	sendDataCommand@string& (0+255),b
  7078  0004D8  0E7D               	movlw	high STR_74
  7079  0004DA  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7080  0004DC  0EC4               	movlw	low _dataBuffer
  7081  0004DE  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7082  0004E0  0E01               	movlw	high _dataBuffer
  7083  0004E2  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7084  0004E4  0E0C               	movlw	12
  7085  0004E6  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7086  0004E8  EC87  F01D         	call	_sendDataCommand	;wreg free
  7087  0004EC                     l484:
  7088                           
  7089                           ;MOTEapp.c: 622: }
  7090                           ;MOTEapp.c: 623: if (selectButton)
  7091  0004EC  0100               	movlb	0	; () banked
  7092  0004EE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7093  0004F0  B4D8               	btfsc	status,2,c
  7094  0004F2  D00C               	goto	l485
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;MOTEapp.c: 624: {
  7098                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7099  0004F4  0E64               	movlw	low STR_85
  7100  0004F6  6F61               	movwf	sendDataCommand@string& (0+255),b
  7101  0004F8  0E7E               	movlw	high STR_85
  7102  0004FA  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7103  0004FC  0EC4               	movlw	low _dataBuffer
  7104  0004FE  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7105  000500  0E01               	movlw	high _dataBuffer
  7106  000502  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7107  000504  0E0C               	movlw	12
  7108  000506  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7109  000508  EC87  F01D         	call	_sendDataCommand	;wreg free
  7110  00050C                     l485:
  7111                           
  7112                           ;MOTEapp.c: 626: }
  7113                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7114  00050C  0100               	movlb	0	; () banked
  7115  00050E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7116  000510  A4D8               	btfss	status,2,c
  7117  000512  D003               	goto	u9170
  7118                           
  7119                           ; BSR set to: 0
  7120  000514  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7121  000516  B4D8               	btfsc	status,2,c
  7122  000518  0012               	return	
  7123  00051A                     u9170:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;MOTEapp.c: 629: {
  7127                           ;MOTEapp.c: 630: oled_clear();
  7128                           
  7129                           ; BSR set to: 0
  7130  00051A  ECAD  F02B         	call	_oled_clear	;wreg free
  7131                           
  7132                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7133  00051E  0E4C               	movlw	low STR_86
  7134  000520  0100               	movlb	0	; () banked
  7135  000522  6F72               	movwf	oled_putString@string& (0+255),b
  7136  000524  0E7E               	movlw	high STR_86
  7137  000526  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7138  000528  0E00               	movlw	0
  7139  00052A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7140  00052C  0E00               	movlw	0
  7141  00052E  6F75               	movwf	oled_putString@start_page& (0+255),b
  7142  000530  EC71  F025         	call	_oled_putString	;wreg free
  7143                           
  7144                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7145  000534  0E40               	movlw	low STR_87
  7146  000536  0100               	movlb	0	; () banked
  7147  000538  6F72               	movwf	oled_putString@string& (0+255),b
  7148  00053A  0E7E               	movlw	high STR_87
  7149  00053C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7150  00053E  0E00               	movlw	0
  7151  000540  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7152  000542  0E01               	movlw	1
  7153  000544  6F75               	movwf	oled_putString@start_page& (0+255),b
  7154  000546  EC71  F025         	call	_oled_putString	;wreg free
  7155                           
  7156                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7157  00054A  0E0C               	movlw	12
  7158  00054C  0100               	movlb	0	; () banked
  7159  00054E  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7160  000550  0E01               	movlw	1
  7161  000552  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7162  000554  51F1               	movf	_randomPortNum& (0+255),w,b
  7163  000556  EC7E  F022         	call	_oled_putUint8
  7164                           
  7165                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7166  00055A  0E72               	movlw	low STR_73
  7167  00055C  0100               	movlb	0	; () banked
  7168  00055E  6F72               	movwf	oled_putString@string& (0+255),b
  7169  000560  0E7D               	movlw	high STR_73
  7170  000562  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7171  000564  0E00               	movlw	0
  7172  000566  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7173  000568  0E02               	movlw	2
  7174  00056A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7175  00056C  EC71  F025         	call	_oled_putString	;wreg free
  7176                           
  7177                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7178  000570  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  7179  000574  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7180  000578  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7181  00057C  0E03               	movlw	3
  7182  00057E  0100               	movlb	0	; () banked
  7183  000580  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7184  000582  0E02               	movlw	2
  7185  000584  6F75               	movwf	oled_putString@start_page& (0+255),b
  7186  000586  EC71  F025         	call	_oled_putString	;wreg free
  7187                           
  7188                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7189  00058A  0E0B               	movlw	11
  7190  00058C  0100               	movlb	0	; () banked
  7191  00058E  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  7192  000590  0E02               	movlw	2
  7193  000592  6F78               	movwf	oled_putint8@start_page& (0+255),b
  7194  000594  51DA               	movf	_temperature& (0+255),w,b
  7195  000596  ECB6  F020         	call	_oled_putint8
  7196                           
  7197                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7198  00059A  9C89               	bcf	3977,6,c	;volatile
  7199                           
  7200                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7201  00059C  0E08               	movlw	8
  7202  00059E  0100               	movlb	0	; () banked
  7203  0005A0  6FF3               	movwf	_runningState& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;MOTEapp.c: 639: }
  7207                           ;MOTEapp.c: 640: break;
  7208  0005A2  0012               	return	
  7209  0005A4                     
  7210                           ; BSR set to: 0
  7211                           ;MOTEapp.c: 642: if ( messageReady )
  7212                           
  7213                           ; BSR set to: 0
  7214  0005A4  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7215  0005A6  B4D8               	btfsc	status,2,c
  7216  0005A8  D103               	goto	l490
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;MOTEapp.c: 643: {
  7220                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7221  0005AA  0E64               	movlw	low _moduleResonseBuffer
  7222  0005AC  6F60               	movwf	strcmp@s1& (0+255),b
  7223  0005AE  0E01               	movlw	high _moduleResonseBuffer
  7224  0005B0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7225  0005B2  0EF7               	movlw	low STR_44
  7226  0005B4  6F62               	movwf	strcmp@s2& (0+255),b
  7227  0005B6  0E7F               	movlw	high STR_44
  7228  0005B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7229  0005BA  ECDA  F027         	call	_strcmp	;wreg free
  7230  0005BE  0100               	movlb	0	; () banked
  7231  0005C0  5160               	movf	?_strcmp& (0+255),w,b
  7232  0005C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7233  0005C4  A4D8               	btfss	status,2,c
  7234  0005C6  D003               	goto	l491
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;MOTEapp.c: 645: {
  7238                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7239  0005C8  8C89               	bsf	3977,6,c	;volatile
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7243  0005CA  0E08               	movlw	8
  7244  0005CC  6FF3               	movwf	_runningState& (0+255),b
  7245  0005CE                     l491:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;MOTEapp.c: 648: }
  7249                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7250                           
  7251                           ; BSR set to: 0
  7252  0005CE  0E64               	movlw	low _moduleResonseBuffer
  7253  0005D0  6F60               	movwf	strncmp@s1& (0+255),b
  7254  0005D2  0E01               	movlw	high _moduleResonseBuffer
  7255  0005D4  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7256  0005D6  0EAA               	movlw	low STR_90
  7257  0005D8  6F62               	movwf	strncmp@s2& (0+255),b
  7258  0005DA  0E7F               	movlw	high STR_90
  7259  0005DC  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7260  0005DE  0E00               	movlw	0
  7261  0005E0  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7262  0005E2  0E06               	movlw	6
  7263  0005E4  6F64               	movwf	strncmp@len& (0+255),b
  7264  0005E6  ECC3  F022         	call	_strncmp	;wreg free
  7265  0005EA  0100               	movlb	0	; () banked
  7266  0005EC  5160               	movf	?_strncmp& (0+255),w,b
  7267  0005EE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7268  0005F0  A4D8               	btfss	status,2,c
  7269  0005F2  D078               	goto	l492
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;MOTEapp.c: 650: {
  7273                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7274  0005F4  0E07               	movlw	7
  7275  0005F6  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7279  0005F8  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7280  0005FA  0D01               	mullw	1
  7281  0005FC  0E64               	movlw	low _moduleResonseBuffer
  7282  0005FE  24F3               	addwf	prodl,w,c
  7283  000600  6ED9               	movwf	fsr2l,c
  7284  000602  0E01               	movlw	high _moduleResonseBuffer
  7285  000604  20F4               	addwfc	prodh,w,c
  7286  000606  6EDA               	movwf	fsr2h,c
  7287  000608  50DF               	movf	indf2,w,c
  7288  00060A  0101               	movlb	1	; () banked
  7289  00060C  6FF7               	movwf	_responsePortNum& (0+255),b
  7290                           
  7291                           ; BSR set to: 1
  7292  00060E  0100               	movlb	0	; () banked
  7293  000610  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7297  000612  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7298  000614  0D01               	mullw	1
  7299  000616  0E64               	movlw	low _moduleResonseBuffer
  7300  000618  24F3               	addwf	prodl,w,c
  7301  00061A  6ED9               	movwf	fsr2l,c
  7302  00061C  0E01               	movlw	high _moduleResonseBuffer
  7303  00061E  20F4               	addwfc	prodh,w,c
  7304  000620  6EDA               	movwf	fsr2h,c
  7305  000622  50DF               	movf	indf2,w,c
  7306  000624  0101               	movlb	1	; () banked
  7307  000626  6FF8               	movwf	(_responsePortNum+1)& (0+255),b
  7308                           
  7309                           ; BSR set to: 1
  7310  000628  0100               	movlb	0	; () banked
  7311  00062A  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7315  00062C  0E20               	movlw	32
  7316  00062E  0101               	movlb	1	; () banked
  7317  000630  19F8               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7318  000632  B4D8               	btfsc	status,2,c
  7319  000634  D015               	goto	l494
  7320                           
  7321                           ; BSR set to: 1
  7322                           ;MOTEapp.c: 658: {
  7323                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7324  000636  0100               	movlb	0	; () banked
  7325  000638  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7326  00063A  0D01               	mullw	1
  7327  00063C  0E64               	movlw	low _moduleResonseBuffer
  7328  00063E  24F3               	addwf	prodl,w,c
  7329  000640  6ED9               	movwf	fsr2l,c
  7330  000642  0E01               	movlw	high _moduleResonseBuffer
  7331  000644  20F4               	addwfc	prodh,w,c
  7332  000646  6EDA               	movwf	fsr2h,c
  7333  000648  50DF               	movf	indf2,w,c
  7334  00064A  0101               	movlb	1	; () banked
  7335  00064C  6FF9               	movwf	(_responsePortNum+2)& (0+255),b
  7336                           
  7337                           ; BSR set to: 1
  7338  00064E  0100               	movlb	0	; () banked
  7339  000650  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7343  000652  0E20               	movlw	32
  7344  000654  0101               	movlb	1	; () banked
  7345  000656  19F9               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7346  000658  B4D8               	btfsc	status,2,c
  7347  00065A  D002               	goto	l494
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;MOTEapp.c: 661: {
  7351                           ;MOTEapp.c: 662: bufferReadPos++;
  7352  00065C  0100               	movlb	0	; () banked
  7353  00065E  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7354  000660                     l494:
  7355                           
  7356                           ;MOTEapp.c: 663: }
  7357                           ;MOTEapp.c: 664: }
  7358                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7359                           
  7360                           ; BSR set to: 0
  7361                           
  7362                           ; BSR set to: 0
  7363  000660  0E00               	movlw	0
  7364  000662  0100               	movlb	0	; () banked
  7365  000664  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7366  000666                     l10607:
  7367                           
  7368                           ; BSR set to: 0
  7369  000666  0E3F               	movlw	63
  7370  000668  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7371  00066A  D001               	goto	l495
  7372  00066C  D023               	goto	u9250
  7373  00066E                     l495:
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;MOTEapp.c: 667: {
  7377                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7378                           
  7379                           ; BSR set to: 0
  7380  00066E  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7381  000670  0D01               	mullw	1
  7382  000672  0E64               	movlw	low _moduleResonseBuffer
  7383  000674  24F3               	addwf	prodl,w,c
  7384  000676  6ED9               	movwf	fsr2l,c
  7385  000678  0E01               	movlw	high _moduleResonseBuffer
  7386  00067A  20F4               	addwfc	prodh,w,c
  7387  00067C  6EDA               	movwf	fsr2h,c
  7388  00067E  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7389  000680  0D01               	mullw	1
  7390  000682  0EA4               	movlw	low _responseData
  7391  000684  24F3               	addwf	prodl,w,c
  7392  000686  6EE1               	movwf	fsr1l,c
  7393  000688  0E01               	movlw	high _responseData
  7394  00068A  20F4               	addwfc	prodh,w,c
  7395  00068C  6EE2               	movwf	fsr1h,c
  7396  00068E  CFDF FFE7          	movff	indf2,indf1
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7400  000692  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7401  000694  0D01               	mullw	1
  7402  000696  0EA4               	movlw	low _responseData
  7403  000698  24F3               	addwf	prodl,w,c
  7404  00069A  6ED9               	movwf	fsr2l,c
  7405  00069C  0E01               	movlw	high _responseData
  7406  00069E  20F4               	addwfc	prodh,w,c
  7407  0006A0  6EDA               	movwf	fsr2h,c
  7408  0006A2  50DF               	movf	indf2,w,c
  7409  0006A4  B4D8               	btfsc	status,2,c
  7410  0006A6  D002               	goto	l497
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;MOTEapp.c: 671: {
  7414                           ;MOTEapp.c: 672: bufferReadPos++;
  7415  0006A8  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7416                           
  7417                           ;MOTEapp.c: 673: } else {
  7418  0006AA  D002               	goto	l498
  7419  0006AC                     l497:
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7423                           
  7424                           ; BSR set to: 0
  7425  0006AC  0E40               	movlw	64
  7426  0006AE  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7427  0006B0                     l498:
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ; BSR set to: 0
  7432  0006B0  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7433  0006B2  D7D9               	goto	l10607
  7434  0006B4                     u9250:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;MOTEapp.c: 675: }
  7438                           ;MOTEapp.c: 676: }
  7439                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7440  0006B4  8E89               	bsf	3977,7,c	;volatile
  7441                           
  7442                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7443  0006B6  9C89               	bcf	3977,6,c	;volatile
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7447  0006B8  0E54               	movlw	low STR_91
  7448  0006BA  6F72               	movwf	oled_putString@string& (0+255),b
  7449  0006BC  0E7B               	movlw	high STR_91
  7450  0006BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7451  0006C0  0E00               	movlw	0
  7452  0006C2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7453  0006C4  0E02               	movlw	2
  7454  0006C6  6F75               	movwf	oled_putString@start_page& (0+255),b
  7455  0006C8  EC71  F025         	call	_oled_putString	;wreg free
  7456                           
  7457                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7458  0006CC  0ECC               	movlw	low STR_92
  7459  0006CE  0100               	movlb	0	; () banked
  7460  0006D0  6F72               	movwf	oled_putString@string& (0+255),b
  7461  0006D2  0E7A               	movlw	high STR_92
  7462  0006D4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7463  0006D6  0E00               	movlw	0
  7464  0006D8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7465  0006DA  0E03               	movlw	3
  7466  0006DC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7467  0006DE  EC71  F025         	call	_oled_putString	;wreg free
  7468                           
  7469                           ;MOTEapp.c: 683: }
  7470  0006E2  D05D               	goto	l504
  7471  0006E4                     l492:
  7472                           
  7473                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7474  0006E4  0E64               	movlw	low _moduleResonseBuffer
  7475  0006E6  0100               	movlb	0	; () banked
  7476  0006E8  6F60               	movwf	strncmp@s1& (0+255),b
  7477  0006EA  0E01               	movlw	high _moduleResonseBuffer
  7478  0006EC  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7479  0006EE  0EB1               	movlw	low STR_93
  7480  0006F0  6F62               	movwf	strncmp@s2& (0+255),b
  7481  0006F2  0E7F               	movlw	high STR_93
  7482  0006F4  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7483  0006F6  0E00               	movlw	0
  7484  0006F8  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7485  0006FA  0E06               	movlw	6
  7486  0006FC  6F64               	movwf	strncmp@len& (0+255),b
  7487  0006FE  ECC3  F022         	call	_strncmp	;wreg free
  7488  000702  0100               	movlb	0	; () banked
  7489  000704  5160               	movf	?_strncmp& (0+255),w,b
  7490  000706  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7491  000708  A4D8               	btfss	status,2,c
  7492  00070A  D00C               	goto	l500
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;MOTEapp.c: 685: {
  7496                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7497  00070C  9C89               	bcf	3977,6,c	;volatile
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7501  00070E  0EBA               	movlw	low STR_94
  7502  000710  6F72               	movwf	oled_putString@string& (0+255),b
  7503  000712  0E7B               	movlw	high STR_94
  7504  000714  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7505  000716  0E00               	movlw	0
  7506  000718  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7507  00071A  0E03               	movlw	3
  7508  00071C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7509  00071E  EC71  F025         	call	_oled_putString	;wreg free
  7510                           
  7511                           ;MOTEapp.c: 688: }
  7512  000722  D03D               	goto	l504
  7513  000724                     l500:
  7514                           
  7515                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7516  000724  0E64               	movlw	low _moduleResonseBuffer
  7517  000726  0100               	movlb	0	; () banked
  7518  000728  6F60               	movwf	strncmp@s1& (0+255),b
  7519  00072A  0E01               	movlw	high _moduleResonseBuffer
  7520  00072C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7521  00072E  0EA3               	movlw	low STR_95
  7522  000730  6F62               	movwf	strncmp@s2& (0+255),b
  7523  000732  0E7F               	movlw	high STR_95
  7524  000734  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7525  000736  0E00               	movlw	0
  7526  000738  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7527  00073A  0E06               	movlw	6
  7528  00073C  6F64               	movwf	strncmp@len& (0+255),b
  7529  00073E  ECC3  F022         	call	_strncmp	;wreg free
  7530  000742  0100               	movlb	0	; () banked
  7531  000744  5160               	movf	?_strncmp& (0+255),w,b
  7532  000746  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7533  000748  A4D8               	btfss	status,2,c
  7534  00074A  D00B               	goto	l502
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;MOTEapp.c: 690: {
  7538                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7539  00074C  0E96               	movlw	low STR_96
  7540  00074E  6F72               	movwf	oled_putString@string& (0+255),b
  7541  000750  0E7A               	movlw	high STR_96
  7542  000752  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7543  000754  0E00               	movlw	0
  7544  000756  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7545  000758  0E03               	movlw	3
  7546  00075A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7547  00075C  EC71  F025         	call	_oled_putString	;wreg free
  7548                           
  7549                           ;MOTEapp.c: 692: }
  7550  000760  D01E               	goto	l504
  7551  000762                     l502:
  7552                           
  7553                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7554  000762  0E64               	movlw	low _moduleResonseBuffer
  7555  000764  0100               	movlb	0	; () banked
  7556  000766  6F60               	movwf	strncmp@s1& (0+255),b
  7557  000768  0E01               	movlw	high _moduleResonseBuffer
  7558  00076A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7559  00076C  0E9C               	movlw	low STR_97
  7560  00076E  6F62               	movwf	strncmp@s2& (0+255),b
  7561  000770  0E7F               	movlw	high STR_97
  7562  000772  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7563  000774  0E00               	movlw	0
  7564  000776  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7565  000778  0E06               	movlw	6
  7566  00077A  6F64               	movwf	strncmp@len& (0+255),b
  7567  00077C  ECC3  F022         	call	_strncmp	;wreg free
  7568  000780  0100               	movlb	0	; () banked
  7569  000782  5160               	movf	?_strncmp& (0+255),w,b
  7570  000784  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7571  000786  A4D8               	btfss	status,2,c
  7572  000788  D00A               	goto	l504
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;MOTEapp.c: 694: {
  7576                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7577  00078A  0EB3               	movlw	low STR_98
  7578  00078C  6F72               	movwf	oled_putString@string& (0+255),b
  7579  00078E  0E7C               	movlw	high STR_98
  7580  000790  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7581  000792  0E00               	movlw	0
  7582  000794  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7583  000796  0E03               	movlw	3
  7584  000798  6F75               	movwf	oled_putString@start_page& (0+255),b
  7585  00079A  EC71  F025         	call	_oled_putString	;wreg free
  7586  00079E                     l504:
  7587                           
  7588                           ;MOTEapp.c: 696: }
  7589                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7590  00079E  0EFA               	movlw	250
  7591  0007A0  0100               	movlb	0	; () banked
  7592  0007A2  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7593  0007A4  0E58               	movlw	88
  7594  0007A6                     u10957:
  7595  0007A6  2EE8               	decfsz	wreg,f,c
  7596  0007A8  D7FE               	bra	u10957
  7597  0007AA  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7598  0007AC  D7FC               	bra	u10957
  7599  0007AE  F000               	nop	
  7600  0007B0                     l490:
  7601                           
  7602                           ;MOTEapp.c: 698: }
  7603                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7604  0007B0  0100               	movlb	0	; () banked
  7605  0007B2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7606  0007B4  A4D8               	btfss	status,2,c
  7607  0007B6  D003               	goto	u9300
  7608                           
  7609                           ; BSR set to: 0
  7610  0007B8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7611  0007BA  B4D8               	btfsc	status,2,c
  7612  0007BC  0012               	return	
  7613  0007BE                     u9300:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 700: {
  7617                           ;MOTEapp.c: 701: oled_clear();
  7618                           
  7619                           ; BSR set to: 0
  7620  0007BE  ECAD  F02B         	call	_oled_clear	;wreg free
  7621                           
  7622                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7623  0007C2  0E21               	movlw	low STR_75
  7624  0007C4  0100               	movlb	0	; () banked
  7625  0007C6  6F72               	movwf	oled_putString@string& (0+255),b
  7626  0007C8  0E7B               	movlw	high STR_75
  7627  0007CA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7628  0007CC  0E00               	movlw	0
  7629  0007CE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7630  0007D0  0E00               	movlw	0
  7631  0007D2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7632  0007D4  EC71  F025         	call	_oled_putString	;wreg free
  7633                           
  7634                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  7635  0007D8  0E87               	movlw	low STR_76
  7636  0007DA  0100               	movlb	0	; () banked
  7637  0007DC  6F72               	movwf	oled_putString@string& (0+255),b
  7638  0007DE  0E7B               	movlw	high STR_76
  7639  0007E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7640  0007E2  0E00               	movlw	0
  7641  0007E4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7642  0007E6  0E01               	movlw	1
  7643  0007E8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7644  0007EA  EC71  F025         	call	_oled_putString	;wreg free
  7645                           
  7646                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  7647  0007EE  0E83               	movlw	low STR_77
  7648  0007F0  0100               	movlb	0	; () banked
  7649  0007F2  6F72               	movwf	oled_putString@string& (0+255),b
  7650  0007F4  0E7C               	movlw	high STR_77
  7651  0007F6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7652  0007F8  0E00               	movlw	0
  7653  0007FA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7654  0007FC  0E03               	movlw	3
  7655  0007FE  6F75               	movwf	oled_putString@start_page& (0+255),b
  7656  000800  EC71  F025         	call	_oled_putString	;wreg free
  7657                           
  7658                           ;MOTEapp.c: 705: runningState = runningUplink;
  7659  000804  0E06               	movlw	6
  7660  000806  0100               	movlb	0	; () banked
  7661  000808  6FF3               	movwf	_runningState& (0+255),b
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;MOTEapp.c: 706: }
  7665                           ;MOTEapp.c: 707: break;
  7666  00080A  0012               	return	
  7667  00080C                     
  7668                           ; BSR set to: 0
  7669                           ;MOTEapp.c: 709: if (changeStates)
  7670                           
  7671                           ; BSR set to: 0
  7672  00080C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7673  00080E  B4D8               	btfsc	status,2,c
  7674  000810  D027               	goto	l509
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;MOTEapp.c: 710: {
  7678                           ;MOTEapp.c: 711: oled_clear();
  7679  000812  ECAD  F02B         	call	_oled_clear	;wreg free
  7680                           
  7681                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  7682  000816  0E63               	movlw	low STR_102
  7683  000818  0100               	movlb	0	; () banked
  7684  00081A  6F72               	movwf	oled_putString@string& (0+255),b
  7685  00081C  0E7C               	movlw	high STR_102
  7686  00081E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7687  000820  0E00               	movlw	0
  7688  000822  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7689  000824  0E00               	movlw	0
  7690  000826  6F75               	movwf	oled_putString@start_page& (0+255),b
  7691  000828  EC71  F025         	call	_oled_putString	;wreg free
  7692                           
  7693                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  7694  00082C  0E53               	movlw	low STR_103
  7695  00082E  0100               	movlb	0	; () banked
  7696  000830  6F72               	movwf	oled_putString@string& (0+255),b
  7697  000832  0E7C               	movlw	high STR_103
  7698  000834  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7699  000836  0E00               	movlw	0
  7700  000838  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7701  00083A  0E01               	movlw	1
  7702  00083C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7703  00083E  EC71  F025         	call	_oled_putString	;wreg free
  7704                           
  7705                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  7706  000842  0E83               	movlw	low STR_77
  7707  000844  0100               	movlb	0	; () banked
  7708  000846  6F72               	movwf	oled_putString@string& (0+255),b
  7709  000848  0E7C               	movlw	high STR_77
  7710  00084A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7711  00084C  0E00               	movlw	0
  7712  00084E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7713  000850  0E03               	movlw	3
  7714  000852  6F75               	movwf	oled_putString@start_page& (0+255),b
  7715  000854  EC71  F025         	call	_oled_putString	;wreg free
  7716                           
  7717                           ;MOTEapp.c: 715: runningState = runningSensor;
  7718  000858  0E01               	movlw	1
  7719  00085A  0100               	movlb	0	; () banked
  7720  00085C  6FF3               	movwf	_runningState& (0+255),b
  7721                           
  7722                           ;MOTEapp.c: 716: }
  7723  00085E  0012               	return	
  7724  000860                     l509:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;MOTEapp.c: 717: else if (selectButton)
  7728                           
  7729                           ; BSR set to: 0
  7730  000860  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7731  000862  B4D8               	btfsc	status,2,c
  7732  000864  0012               	return	
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;MOTEapp.c: 718: {
  7736                           ;MOTEapp.c: 720: oled_clear();
  7737  000866  ECAD  F02B         	call	_oled_clear	;wreg free
  7738                           
  7739                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  7740  00086A  9E89               	bcf	3977,7,c	;volatile
  7741                           
  7742                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  7743  00086C  0E42               	movlw	low STR_105
  7744  00086E  0100               	movlb	0	; () banked
  7745  000870  6F72               	movwf	oled_putString@string& (0+255),b
  7746  000872  0E7C               	movlw	high STR_105
  7747  000874  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7748  000876  0E00               	movlw	0
  7749  000878  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7750  00087A  0E00               	movlw	0
  7751  00087C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7752  00087E  EC71  F025         	call	_oled_putString	;wreg free
  7753                           
  7754                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  7755  000882  0ECA               	movlw	low STR_106
  7756  000884  0100               	movlb	0	; () banked
  7757  000886  6F72               	movwf	oled_putString@string& (0+255),b
  7758  000888  0E7E               	movlw	high STR_106
  7759  00088A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7760  00088C  0E00               	movlw	0
  7761  00088E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7762  000890  0E01               	movlw	1
  7763  000892  6F75               	movwf	oled_putString@start_page& (0+255),b
  7764  000894  EC71  F025         	call	_oled_putString	;wreg free
  7765                           
  7766                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  7767  000898  0EF7               	movlw	low _responsePortNum
  7768  00089A  0100               	movlb	0	; () banked
  7769  00089C  6F72               	movwf	oled_putString@string& (0+255),b
  7770  00089E  0E01               	movlw	high _responsePortNum
  7771  0008A0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7772  0008A2  0E09               	movlw	9
  7773  0008A4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7774  0008A6  0E01               	movlw	1
  7775  0008A8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7776  0008AA  EC71  F025         	call	_oled_putString	;wreg free
  7777                           
  7778                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  7779  0008AE  0E51               	movlw	low (STR_86+5)
  7780  0008B0  0100               	movlb	0	; () banked
  7781  0008B2  6F72               	movwf	oled_putString@string& (0+255),b
  7782  0008B4  0E7E               	movlw	high (STR_86+5)
  7783  0008B6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7784  0008B8  0E00               	movlw	0
  7785  0008BA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7786  0008BC  0E02               	movlw	2
  7787  0008BE  6F75               	movwf	oled_putString@start_page& (0+255),b
  7788  0008C0  EC71  F025         	call	_oled_putString	;wreg free
  7789                           
  7790                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  7791  0008C4  0EA4               	movlw	low _responseData
  7792  0008C6  0100               	movlb	0	; () banked
  7793  0008C8  6F72               	movwf	oled_putString@string& (0+255),b
  7794  0008CA  0E01               	movlw	high _responseData
  7795  0008CC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7796  0008CE  0E06               	movlw	6
  7797  0008D0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7798  0008D2  0E02               	movlw	2
  7799  0008D4  6F75               	movwf	oled_putString@start_page& (0+255),b
  7800  0008D6  EC71  F025         	call	_oled_putString	;wreg free
  7801                           
  7802                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  7803  0008DA  0EAE               	movlw	low (_responseData+10)
  7804  0008DC  0100               	movlb	0	; () banked
  7805  0008DE  6F72               	movwf	oled_putString@string& (0+255),b
  7806  0008E0  0E01               	movlw	high (_responseData+10)
  7807  0008E2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7808  0008E4  0E00               	movlw	0
  7809  0008E6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7810  0008E8  0E03               	movlw	3
  7811  0008EA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7812  0008EC  EC71  F025         	call	_oled_putString	;wreg free
  7813                           
  7814                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  7815  0008F0  0E0B               	movlw	11
  7816  0008F2  0100               	movlb	0	; () banked
  7817  0008F4  6FF3               	movwf	_runningState& (0+255),b
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;MOTEapp.c: 735: }
  7821                           ;MOTEapp.c: 736: break;
  7822                           
  7823                           ; BSR set to: 0
  7824  0008F6  0012               	return	
  7825  0008F8                     
  7826                           ; BSR set to: 0
  7827                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  7828                           
  7829                           ; BSR set to: 0
  7830  0008F8  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7831  0008FA  A4D8               	btfss	status,2,c
  7832  0008FC  D003               	goto	u9340
  7833                           
  7834                           ; BSR set to: 0
  7835  0008FE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7836  000900  B4D8               	btfsc	status,2,c
  7837  000902  0012               	return	
  7838  000904                     u9340:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;MOTEapp.c: 739: {
  7842                           ;MOTEapp.c: 740: oled_clear();
  7843                           
  7844                           ; BSR set to: 0
  7845  000904  ECAD  F02B         	call	_oled_clear	;wreg free
  7846                           
  7847                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  7848  000908  0E10               	movlw	low STR_78
  7849  00090A  0100               	movlb	0	; () banked
  7850  00090C  6F72               	movwf	oled_putString@string& (0+255),b
  7851  00090E  0E7B               	movlw	high STR_78
  7852  000910  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7853  000912  0E00               	movlw	0
  7854  000914  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7855  000916  0E00               	movlw	0
  7856  000918  6F75               	movwf	oled_putString@start_page& (0+255),b
  7857  00091A  EC71  F025         	call	_oled_putString	;wreg free
  7858                           
  7859                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  7860  00091E  0EFF               	movlw	low STR_79
  7861  000920  0100               	movlb	0	; () banked
  7862  000922  6F72               	movwf	oled_putString@string& (0+255),b
  7863  000924  0E7A               	movlw	high STR_79
  7864  000926  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7865  000928  0E00               	movlw	0
  7866  00092A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7867  00092C  0E01               	movlw	1
  7868  00092E  6F75               	movwf	oled_putString@start_page& (0+255),b
  7869  000930  EC71  F025         	call	_oled_putString	;wreg free
  7870                           
  7871                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  7872  000934  0E83               	movlw	low STR_77
  7873  000936  0100               	movlb	0	; () banked
  7874  000938  6F72               	movwf	oled_putString@string& (0+255),b
  7875  00093A  0E7C               	movlw	high STR_77
  7876  00093C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7877  00093E  0E00               	movlw	0
  7878  000940  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7879  000942  0E03               	movlw	3
  7880  000944  6F75               	movwf	oled_putString@start_page& (0+255),b
  7881  000946  EC71  F025         	call	_oled_putString	;wreg free
  7882                           
  7883                           ;MOTEapp.c: 744: runningState = runningDownlink;
  7884  00094A  0E0A               	movlw	10
  7885  00094C  0100               	movlb	0	; () banked
  7886  00094E  6FF3               	movwf	_runningState& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 745: }
  7890                           ;MOTEapp.c: 746: break;
  7891  000950  0012               	return	
  7892  000952                     
  7893                           ; BSR set to: 0
  7894                           ;MOTEapp.c: 748: if (changeStates)
  7895                           
  7896                           ; BSR set to: 0
  7897  000952  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7898  000954  B4D8               	btfsc	status,2,c
  7899  000956  D036               	goto	l517
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;MOTEapp.c: 749: {
  7903                           ;MOTEapp.c: 750: oled_clear();
  7904  000958  ECAD  F02B         	call	_oled_clear	;wreg free
  7905                           
  7906                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  7907  00095C  0E20               	movlw	low STR_111
  7908  00095E  0100               	movlb	0	; () banked
  7909  000960  6F72               	movwf	oled_putString@string& (0+255),b
  7910  000962  0E7C               	movlw	high STR_111
  7911  000964  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7912  000966  0E00               	movlw	0
  7913  000968  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7914  00096A  0E00               	movlw	0
  7915  00096C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7916  00096E  EC71  F025         	call	_oled_putString	;wreg free
  7917                           
  7918                           ;MOTEapp.c: 752: if (menuTimeout)
  7919  000972  0100               	movlb	0	; () banked
  7920  000974  51FB               	movf	_menuTimeout& (0+255),w,b
  7921  000976  B4D8               	btfsc	status,2,c
  7922  000978  D00B               	goto	l518
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  7926  00097A  0ED3               	movlw	low STR_112
  7927  00097C  6F72               	movwf	oled_putString@string& (0+255),b
  7928  00097E  0E7C               	movlw	high STR_112
  7929  000980  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7930  000982  0E00               	movlw	0
  7931  000984  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7932  000986  0E02               	movlw	2
  7933  000988  6F75               	movwf	oled_putString@start_page& (0+255),b
  7934  00098A  EC71  F025         	call	_oled_putString	;wreg free
  7935  00098E  D00B               	goto	l519
  7936  000990                     l518:
  7937                           
  7938                           ;MOTEapp.c: 754: else
  7939                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  7940  000990  0EE2               	movlw	low STR_113
  7941  000992  0100               	movlb	0	; () banked
  7942  000994  6F72               	movwf	oled_putString@string& (0+255),b
  7943  000996  0E7C               	movlw	high STR_113
  7944  000998  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7945  00099A  0E00               	movlw	0
  7946  00099C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7947  00099E  0E02               	movlw	2
  7948  0009A0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7949  0009A2  EC71  F025         	call	_oled_putString	;wreg free
  7950  0009A6                     l519:
  7951                           
  7952                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  7953  0009A6  0E73               	movlw	low STR_114
  7954  0009A8  0100               	movlb	0	; () banked
  7955  0009AA  6F72               	movwf	oled_putString@string& (0+255),b
  7956  0009AC  0E7C               	movlw	high STR_114
  7957  0009AE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7958  0009B0  0E00               	movlw	0
  7959  0009B2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7960  0009B4  0E03               	movlw	3
  7961  0009B6  6F75               	movwf	oled_putString@start_page& (0+255),b
  7962  0009B8  EC71  F025         	call	_oled_putString	;wreg free
  7963                           
  7964                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  7965  0009BC  0E0C               	movlw	12
  7966  0009BE  0100               	movlb	0	; () banked
  7967  0009C0  6FF3               	movwf	_runningState& (0+255),b
  7968                           
  7969                           ;MOTEapp.c: 758: }
  7970  0009C2  0012               	return	
  7971  0009C4                     l517:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;MOTEapp.c: 759: else if (selectButton)
  7975                           
  7976                           ; BSR set to: 0
  7977  0009C4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7978  0009C6  B4D8               	btfsc	status,2,c
  7979  0009C8  0012               	return	
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;MOTEapp.c: 760: {
  7983                           ;MOTEapp.c: 761: oled_clear();
  7984  0009CA  ECAD  F02B         	call	_oled_clear	;wreg free
  7985                           
  7986                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  7987  0009CE  0E63               	movlw	low STR_102
  7988  0009D0  0100               	movlb	0	; () banked
  7989  0009D2  6F72               	movwf	oled_putString@string& (0+255),b
  7990  0009D4  0E7C               	movlw	high STR_102
  7991  0009D6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7992  0009D8  0E00               	movlw	0
  7993  0009DA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7994  0009DC  0E00               	movlw	0
  7995  0009DE  6F75               	movwf	oled_putString@start_page& (0+255),b
  7996  0009E0  EC71  F025         	call	_oled_putString	;wreg free
  7997                           
  7998                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  7999  0009E4  0E80               	movlw	low STR_116
  8000  0009E6  0100               	movlb	0	; () banked
  8001  0009E8  6F72               	movwf	oled_putString@string& (0+255),b
  8002  0009EA  0E7F               	movlw	high STR_116
  8003  0009EC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8004  0009EE  0E00               	movlw	0
  8005  0009F0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8006  0009F2  0E01               	movlw	1
  8007  0009F4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8008  0009F6  EC71  F025         	call	_oled_putString	;wreg free
  8009                           
  8010                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8011  0009FA  0E79               	movlw	low STR_117
  8012  0009FC  0100               	movlb	0	; () banked
  8013  0009FE  6F72               	movwf	oled_putString@string& (0+255),b
  8014  000A00  0E7F               	movlw	high STR_117
  8015  000A02  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8016  000A04  0E00               	movlw	0
  8017  000A06  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8018  000A08  0E02               	movlw	2
  8019  000A0A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8020  000A0C  EC71  F025         	call	_oled_putString	;wreg free
  8021                           
  8022                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8023  000A10  0EFA               	movlw	low STR_118
  8024  000A12  0100               	movlb	0	; () banked
  8025  000A14  6F72               	movwf	oled_putString@string& (0+255),b
  8026  000A16  0E7F               	movlw	high STR_118
  8027  000A18  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8028  000A1A  0E0A               	movlw	10
  8029  000A1C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8030  000A1E  0E02               	movlw	2
  8031  000A20  6F75               	movwf	oled_putString@start_page& (0+255),b
  8032  000A22  EC71  F025         	call	_oled_putString	;wreg free
  8033                           
  8034                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8035  000A26  EC8C  F024         	call	_moteApp_setSensorsInput	;wreg free
  8036                           
  8037                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8038  000A2A  0E02               	movlw	2
  8039  000A2C  0100               	movlb	0	; () banked
  8040  000A2E  6FF3               	movwf	_runningState& (0+255),b
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;MOTEapp.c: 769: }
  8044                           ;MOTEapp.c: 770: break;
  8045                           
  8046                           ; BSR set to: 0
  8047  000A30  0012               	return	
  8048  000A32                     
  8049                           ; BSR set to: 0
  8050                           ;MOTEapp.c: 772: if (changeStates)
  8051                           
  8052                           ; BSR set to: 0
  8053  000A32  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8054  000A34  B4D8               	btfsc	status,2,c
  8055  000A36  D09B               	goto	l523
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;MOTEapp.c: 773: {
  8059                           ;MOTEapp.c: 774: oled_clear();
  8060  000A38  ECAD  F02B         	call	_oled_clear	;wreg free
  8061                           
  8062                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8063  000A3C  0E76               	movlw	low STR_119
  8064  000A3E  0100               	movlb	0	; () banked
  8065  000A40  6F72               	movwf	oled_putString@string& (0+255),b
  8066  000A42  0E7B               	movlw	high STR_119
  8067  000A44  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8068  000A46  0E00               	movlw	0
  8069  000A48  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8070  000A4A  0E00               	movlw	0
  8071  000A4C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8072  000A4E  EC71  F025         	call	_oled_putString	;wreg free
  8073                           
  8074                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8075  000A52  0E65               	movlw	low STR_120
  8076  000A54  0100               	movlb	0	; () banked
  8077  000A56  6F72               	movwf	oled_putString@string& (0+255),b
  8078  000A58  0E7B               	movlw	high STR_120
  8079  000A5A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8080  000A5C  0E00               	movlw	0
  8081  000A5E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8082  000A60  0E01               	movlw	1
  8083  000A62  6F75               	movwf	oled_putString@start_page& (0+255),b
  8084  000A64  EC71  F025         	call	_oled_putString	;wreg free
  8085                           
  8086                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8087  000A68  0E87               	movlw	low STR_121
  8088  000A6A  0100               	movlb	0	; () banked
  8089  000A6C  6F72               	movwf	oled_putString@string& (0+255),b
  8090  000A6E  0E7F               	movlw	high STR_121
  8091  000A70  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8092  000A72  0E00               	movlw	0
  8093  000A74  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8094  000A76  0E02               	movlw	2
  8095  000A78  6F75               	movwf	oled_putString@start_page& (0+255),b
  8096  000A7A  EC71  F025         	call	_oled_putString	;wreg free
  8097                           
  8098                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8099  000A7E  0EC2               	movlw	low STR_122
  8100  000A80  0100               	movlb	0	; () banked
  8101  000A82  6F72               	movwf	oled_putString@string& (0+255),b
  8102  000A84  0E7F               	movlw	high STR_122
  8103  000A86  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8104  000A88  0E0C               	movlw	12
  8105  000A8A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8106  000A8C  0E02               	movlw	2
  8107  000A8E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8108  000A90  EC71  F025         	call	_oled_putString	;wreg free
  8109                           
  8110                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8111  000A94  D048               	goto	l524
  8112  000A96                     
  8113                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8114                           
  8115                           ;MOTEapp.c: 783: case 0:
  8116  000A96  0ECB               	movlw	low (STR_169+11)
  8117  000A98  0100               	movlb	0	; () banked
  8118  000A9A  6F72               	movwf	oled_putString@string& (0+255),b
  8119  000A9C  0E7D               	movlw	high (STR_169+11)
  8120  000A9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8121  000AA0  0E07               	movlw	7
  8122  000AA2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8123  000AA4  0E02               	movlw	2
  8124  000AA6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8125  000AA8  EC71  F025         	call	_oled_putString	;wreg free
  8126                           
  8127                           ;MOTEapp.c: 785: break;
  8128  000AAC  D051               	goto	l527
  8129  000AAE                     
  8130                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8131  000AAE  0EE0               	movlw	low (STR_146+1)
  8132  000AB0  0100               	movlb	0	; () banked
  8133  000AB2  6F72               	movwf	oled_putString@string& (0+255),b
  8134  000AB4  0E7F               	movlw	high (STR_146+1)
  8135  000AB6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8136  000AB8  0E07               	movlw	7
  8137  000ABA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8138  000ABC  0E02               	movlw	2
  8139  000ABE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8140  000AC0  EC71  F025         	call	_oled_putString	;wreg free
  8141                           
  8142                           ;MOTEapp.c: 788: break;
  8143  000AC4  D045               	goto	l527
  8144  000AC6                     
  8145                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8146  000AC6  0EEC               	movlw	low (STR_147+1)
  8147  000AC8  0100               	movlb	0	; () banked
  8148  000ACA  6F72               	movwf	oled_putString@string& (0+255),b
  8149  000ACC  0E7F               	movlw	high (STR_147+1)
  8150  000ACE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8151  000AD0  0E07               	movlw	7
  8152  000AD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8153  000AD4  0E02               	movlw	2
  8154  000AD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8155  000AD8  EC71  F025         	call	_oled_putString	;wreg free
  8156                           
  8157                           ;MOTEapp.c: 791: break;
  8158  000ADC  D039               	goto	l527
  8159  000ADE                     
  8160                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8161  000ADE  0EE4               	movlw	low (STR_148+1)
  8162  000AE0  0100               	movlb	0	; () banked
  8163  000AE2  6F72               	movwf	oled_putString@string& (0+255),b
  8164  000AE4  0E7F               	movlw	high (STR_148+1)
  8165  000AE6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8166  000AE8  0E07               	movlw	7
  8167  000AEA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8168  000AEC  0E02               	movlw	2
  8169  000AEE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8170  000AF0  EC71  F025         	call	_oled_putString	;wreg free
  8171                           
  8172                           ;MOTEapp.c: 794: break;
  8173  000AF4  D02D               	goto	l527
  8174  000AF6                     
  8175                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8176  000AF6  0EE8               	movlw	low (STR_149+1)
  8177  000AF8  0100               	movlb	0	; () banked
  8178  000AFA  6F72               	movwf	oled_putString@string& (0+255),b
  8179  000AFC  0E7F               	movlw	high (STR_149+1)
  8180  000AFE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8181  000B00  0E07               	movlw	7
  8182  000B02  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8183  000B04  0E02               	movlw	2
  8184  000B06  6F75               	movwf	oled_putString@start_page& (0+255),b
  8185  000B08  EC71  F025         	call	_oled_putString	;wreg free
  8186                           
  8187                           ;MOTEapp.c: 797: break;
  8188  000B0C  D021               	goto	l527
  8189  000B0E                     
  8190                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8191  000B0E  0EEF               	movlw	low STR_128
  8192  000B10  0100               	movlb	0	; () banked
  8193  000B12  6F72               	movwf	oled_putString@string& (0+255),b
  8194  000B14  0E7F               	movlw	high STR_128
  8195  000B16  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8196  000B18  0E07               	movlw	7
  8197  000B1A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8198  000B1C  0E02               	movlw	2
  8199  000B1E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8200  000B20  EC71  F025         	call	_oled_putString	;wreg free
  8201                           
  8202                           ;MOTEapp.c: 801: }
  8203                           
  8204                           ;MOTEapp.c: 800: break;
  8205  000B24  D015               	goto	l527
  8206  000B26                     l524:
  8207  000B26  0100               	movlb	0	; () banked
  8208  000B28  51FE               	movf	_periodicUpValue& (0+255),w,b
  8209                           
  8210                           ; Switch size 1, requested type "space"
  8211                           ; Number of cases is 6, Range of values is 0 to 5
  8212                           ; switch strategies available:
  8213                           ; Name         Instructions Cycles
  8214                           ; simple_byte           19    10 (average)
  8215                           ;	Chosen strategy is simple_byte
  8216  000B2A  0A00               	xorlw	0	; case 0
  8217  000B2C  B4D8               	btfsc	status,2,c
  8218  000B2E  D7B3               	goto	l525
  8219  000B30  0A01               	xorlw	1	; case 1
  8220  000B32  B4D8               	btfsc	status,2,c
  8221  000B34  D7BC               	goto	l528
  8222  000B36  0A03               	xorlw	3	; case 2
  8223  000B38  B4D8               	btfsc	status,2,c
  8224  000B3A  D7C5               	goto	l529
  8225  000B3C  0A01               	xorlw	1	; case 3
  8226  000B3E  B4D8               	btfsc	status,2,c
  8227  000B40  D7CE               	goto	l530
  8228  000B42  0A07               	xorlw	7	; case 4
  8229  000B44  B4D8               	btfsc	status,2,c
  8230  000B46  D7D7               	goto	l531
  8231  000B48  0A01               	xorlw	1	; case 5
  8232  000B4A  B4D8               	btfsc	status,2,c
  8233  000B4C  D7E0               	goto	l532
  8234  000B4E  D7A3               	goto	l525
  8235  000B50                     l527:
  8236                           
  8237                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8238                           
  8239                           ; BSR set to: 0
  8240  000B50  0E73               	movlw	low STR_114
  8241  000B52  0100               	movlb	0	; () banked
  8242  000B54  6F72               	movwf	oled_putString@string& (0+255),b
  8243  000B56  0E7C               	movlw	high STR_114
  8244  000B58  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8245  000B5A  0E00               	movlw	0
  8246  000B5C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8247  000B5E  0E03               	movlw	3
  8248  000B60  6F75               	movwf	oled_putString@start_page& (0+255),b
  8249  000B62  EC71  F025         	call	_oled_putString	;wreg free
  8250                           
  8251                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8252  000B66  0E0D               	movlw	13
  8253  000B68  0100               	movlb	0	; () banked
  8254  000B6A  6FF3               	movwf	_runningState& (0+255),b
  8255                           
  8256                           ;MOTEapp.c: 804: }
  8257  000B6C  0012               	return	
  8258  000B6E                     l523:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;MOTEapp.c: 805: else if (selectButton)
  8262                           
  8263                           ; BSR set to: 0
  8264  000B6E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8265  000B70  B4D8               	btfsc	status,2,c
  8266  000B72  0012               	return	
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;MOTEapp.c: 806: {
  8270                           ;MOTEapp.c: 807: if (menuTimeout)
  8271  000B74  51FB               	movf	_menuTimeout& (0+255),w,b
  8272  000B76  B4D8               	btfsc	status,2,c
  8273  000B78  D00D               	goto	l535
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;MOTEapp.c: 808: {
  8277                           ;MOTEapp.c: 809: menuTimeout = 0;
  8278  000B7A  0E00               	movlw	0
  8279  000B7C  6FFB               	movwf	_menuTimeout& (0+255),b
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8283  000B7E  0EE2               	movlw	low STR_113
  8284  000B80  6F72               	movwf	oled_putString@string& (0+255),b
  8285  000B82  0E7C               	movlw	high STR_113
  8286  000B84  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8287  000B86  0E00               	movlw	0
  8288  000B88  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8289  000B8A  0E02               	movlw	2
  8290  000B8C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8291  000B8E  EC71  F025         	call	_oled_putString	;wreg free
  8292                           
  8293                           ;MOTEapp.c: 811: }
  8294  000B92  0012               	return	
  8295  000B94                     l535:
  8296                           
  8297                           ;MOTEapp.c: 812: else
  8298                           ;MOTEapp.c: 813: {
  8299                           ;MOTEapp.c: 814: menuTimeout = 1;
  8300  000B94  0E01               	movlw	1
  8301  000B96  0100               	movlb	0	; () banked
  8302  000B98  6FFB               	movwf	_menuTimeout& (0+255),b
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8306  000B9A  0ED3               	movlw	low STR_112
  8307  000B9C  6F72               	movwf	oled_putString@string& (0+255),b
  8308  000B9E  0E7C               	movlw	high STR_112
  8309  000BA0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8310  000BA2  0E00               	movlw	0
  8311  000BA4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8312  000BA6  0E02               	movlw	2
  8313  000BA8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8314  000BAA  EC71  F025         	call	_oled_putString	;wreg free
  8315                           
  8316                           ;MOTEapp.c: 816: }
  8317                           ;MOTEapp.c: 817: }
  8318                           ;MOTEapp.c: 818: break;
  8319  000BAE  0012               	return	
  8320  000BB0                     
  8321                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8322  000BB0  0100               	movlb	0	; () banked
  8323  000BB2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8324  000BB4  A4D8               	btfss	status,2,c
  8325  000BB6  D003               	goto	u9420
  8326                           
  8327                           ; BSR set to: 0
  8328  000BB8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8329  000BBA  B4D8               	btfsc	status,2,c
  8330  000BBC  0012               	return	
  8331  000BBE                     u9420:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;MOTEapp.c: 822: {
  8335                           ;MOTEapp.c: 823: oled_clear();
  8336                           
  8337                           ; BSR set to: 0
  8338  000BBE  ECAD  F02B         	call	_oled_clear	;wreg free
  8339                           
  8340                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8341  000BC2  0E63               	movlw	low STR_102
  8342  000BC4  0100               	movlb	0	; () banked
  8343  000BC6  6F72               	movwf	oled_putString@string& (0+255),b
  8344  000BC8  0E7C               	movlw	high STR_102
  8345  000BCA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8346  000BCC  0E00               	movlw	0
  8347  000BCE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8348  000BD0  0E00               	movlw	0
  8349  000BD2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8350  000BD4  EC71  F025         	call	_oled_putString	;wreg free
  8351                           
  8352                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8353  000BD8  0E53               	movlw	low STR_103
  8354  000BDA  0100               	movlb	0	; () banked
  8355  000BDC  6F72               	movwf	oled_putString@string& (0+255),b
  8356  000BDE  0E7C               	movlw	high STR_103
  8357  000BE0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8358  000BE2  0E00               	movlw	0
  8359  000BE4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8360  000BE6  0E01               	movlw	1
  8361  000BE8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8362  000BEA  EC71  F025         	call	_oled_putString	;wreg free
  8363                           
  8364                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8365  000BEE  0E83               	movlw	low STR_77
  8366  000BF0  0100               	movlb	0	; () banked
  8367  000BF2  6F72               	movwf	oled_putString@string& (0+255),b
  8368  000BF4  0E7C               	movlw	high STR_77
  8369  000BF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8370  000BF8  0E00               	movlw	0
  8371  000BFA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8372  000BFC  0E03               	movlw	3
  8373  000BFE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8374  000C00  EC71  F025         	call	_oled_putString	;wreg free
  8375                           
  8376                           ;MOTEapp.c: 827: runningState = runningSensor;
  8377  000C04  0E01               	movlw	1
  8378  000C06  0100               	movlb	0	; () banked
  8379  000C08  6FF3               	movwf	_runningState& (0+255),b
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;MOTEapp.c: 828: }
  8383                           ;MOTEapp.c: 829: break;
  8384  000C0A  0012               	return	
  8385  000C0C                     
  8386                           ; BSR set to: 0
  8387                           ;MOTEapp.c: 831: if (changeStates)
  8388                           
  8389                           ; BSR set to: 0
  8390  000C0C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8391  000C0E  B4D8               	btfsc	status,2,c
  8392  000C10  D092               	goto	l546
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;MOTEapp.c: 832: {
  8396                           ;MOTEapp.c: 833: oled_clear();
  8397  000C12  ECAD  F02B         	call	_oled_clear	;wreg free
  8398                           
  8399                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8400  000C16  0EED               	movlw	low STR_135
  8401  000C18  0100               	movlb	0	; () banked
  8402  000C1A  6F72               	movwf	oled_putString@string& (0+255),b
  8403  000C1C  0E7B               	movlw	high STR_135
  8404  000C1E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8405  000C20  0E00               	movlw	0
  8406  000C22  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8407  000C24  0E00               	movlw	0
  8408  000C26  6F75               	movwf	oled_putString@start_page& (0+255),b
  8409  000C28  EC71  F025         	call	_oled_putString	;wreg free
  8410                           
  8411                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8412  000C2C  0E58               	movlw	low STR_136
  8413  000C2E  0100               	movlb	0	; () banked
  8414  000C30  6F72               	movwf	oled_putString@string& (0+255),b
  8415  000C32  0E7E               	movlw	high STR_136
  8416  000C34  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8417  000C36  0E00               	movlw	0
  8418  000C38  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8419  000C3A  0E02               	movlw	2
  8420  000C3C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8421  000C3E  EC71  F025         	call	_oled_putString	;wreg free
  8422                           
  8423                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8424  000C42  0E73               	movlw	low STR_114
  8425  000C44  0100               	movlb	0	; () banked
  8426  000C46  6F72               	movwf	oled_putString@string& (0+255),b
  8427  000C48  0E7C               	movlw	high STR_114
  8428  000C4A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8429  000C4C  0E00               	movlw	0
  8430  000C4E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8431  000C50  0E03               	movlw	3
  8432  000C52  6F75               	movwf	oled_putString@start_page& (0+255),b
  8433  000C54  EC71  F025         	call	_oled_putString	;wreg free
  8434                           
  8435                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  8436  000C58  0E03               	movlw	3
  8437  000C5A  0100               	movlb	0	; () banked
  8438  000C5C  6FF3               	movwf	_runningState& (0+255),b
  8439                           
  8440                           ;MOTEapp.c: 840: switch (dataRateValue)
  8441  000C5E  D053               	goto	l543
  8442  000C60                     
  8443                           ; BSR set to: 0
  8444                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  8445                           
  8446                           ; BSR set to: 0
  8447                           
  8448                           ;MOTEapp.c: 843: case 0:
  8449                           
  8450                           ; BSR set to: 0
  8451  000C60  0EC7               	movlw	low STR_138
  8452  000C62  6F72               	movwf	oled_putString@string& (0+255),b
  8453  000C64  0E7F               	movlw	high STR_138
  8454  000C66  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8455  000C68  0E0A               	movlw	10
  8456  000C6A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8457  000C6C  0E02               	movlw	2
  8458  000C6E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8459  000C70  EC71  F025         	call	_oled_putString	;wreg free
  8460                           
  8461                           ;MOTEapp.c: 845: break;
  8462  000C74  D060               	goto	l546
  8463  000C76                     
  8464                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  8465  000C76  0ECB               	movlw	low STR_139
  8466  000C78  0100               	movlb	0	; () banked
  8467  000C7A  6F72               	movwf	oled_putString@string& (0+255),b
  8468  000C7C  0E7F               	movlw	high STR_139
  8469  000C7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8470  000C80  0E0A               	movlw	10
  8471  000C82  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8472  000C84  0E02               	movlw	2
  8473  000C86  6F75               	movwf	oled_putString@start_page& (0+255),b
  8474  000C88  EC71  F025         	call	_oled_putString	;wreg free
  8475                           
  8476                           ;MOTEapp.c: 848: break;
  8477  000C8C  D054               	goto	l546
  8478  000C8E                     
  8479                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  8480  000C8E  0ECF               	movlw	low STR_140
  8481  000C90  0100               	movlb	0	; () banked
  8482  000C92  6F72               	movwf	oled_putString@string& (0+255),b
  8483  000C94  0E7F               	movlw	high STR_140
  8484  000C96  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8485  000C98  0E0A               	movlw	10
  8486  000C9A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8487  000C9C  0E02               	movlw	2
  8488  000C9E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8489  000CA0  EC71  F025         	call	_oled_putString	;wreg free
  8490                           
  8491                           ;MOTEapp.c: 851: break;
  8492  000CA4  D048               	goto	l546
  8493  000CA6                     
  8494                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  8495  000CA6  0ED3               	movlw	low STR_141
  8496  000CA8  0100               	movlb	0	; () banked
  8497  000CAA  6F72               	movwf	oled_putString@string& (0+255),b
  8498  000CAC  0E7F               	movlw	high STR_141
  8499  000CAE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8500  000CB0  0E0A               	movlw	10
  8501  000CB2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8502  000CB4  0E02               	movlw	2
  8503  000CB6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8504  000CB8  EC71  F025         	call	_oled_putString	;wreg free
  8505                           
  8506                           ;MOTEapp.c: 854: break;
  8507  000CBC  D03C               	goto	l546
  8508  000CBE                     
  8509                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  8510  000CBE  0ED7               	movlw	low STR_142
  8511  000CC0  0100               	movlb	0	; () banked
  8512  000CC2  6F72               	movwf	oled_putString@string& (0+255),b
  8513  000CC4  0E7F               	movlw	high STR_142
  8514  000CC6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8515  000CC8  0E0A               	movlw	10
  8516  000CCA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8517  000CCC  0E02               	movlw	2
  8518  000CCE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8519  000CD0  EC71  F025         	call	_oled_putString	;wreg free
  8520                           
  8521                           ;MOTEapp.c: 857: break;
  8522  000CD4  D030               	goto	l546
  8523  000CD6                     
  8524                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  8525  000CD6  0EDB               	movlw	low STR_143
  8526  000CD8  0100               	movlb	0	; () banked
  8527  000CDA  6F72               	movwf	oled_putString@string& (0+255),b
  8528  000CDC  0E7F               	movlw	high STR_143
  8529  000CDE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8530  000CE0  0E0A               	movlw	10
  8531  000CE2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8532  000CE4  0E02               	movlw	2
  8533  000CE6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8534  000CE8  EC71  F025         	call	_oled_putString	;wreg free
  8535                           
  8536                           ;MOTEapp.c: 860: break;
  8537  000CEC  D024               	goto	l546
  8538  000CEE                     
  8539                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  8540  000CEE  0EF3               	movlw	low STR_144
  8541  000CF0  0100               	movlb	0	; () banked
  8542  000CF2  6F72               	movwf	oled_putString@string& (0+255),b
  8543  000CF4  0E7F               	movlw	high STR_144
  8544  000CF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8545  000CF8  0E0A               	movlw	10
  8546  000CFA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8547  000CFC  0E02               	movlw	2
  8548  000CFE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8549  000D00  EC71  F025         	call	_oled_putString	;wreg free
  8550                           
  8551                           ;MOTEapp.c: 864: }
  8552                           
  8553                           ;MOTEapp.c: 863: break;
  8554  000D04  D018               	goto	l546
  8555  000D06                     l543:
  8556  000D06  0100               	movlb	0	; () banked
  8557  000D08  51FC               	movf	_dataRateValue& (0+255),w,b
  8558                           
  8559                           ; Switch size 1, requested type "space"
  8560                           ; Number of cases is 7, Range of values is 0 to 6
  8561                           ; switch strategies available:
  8562                           ; Name         Instructions Cycles
  8563                           ; simple_byte           22    12 (average)
  8564                           ;	Chosen strategy is simple_byte
  8565  000D0A  0A00               	xorlw	0	; case 0
  8566  000D0C  B4D8               	btfsc	status,2,c
  8567  000D0E  D7A8               	goto	l544
  8568  000D10  0A01               	xorlw	1	; case 1
  8569  000D12  B4D8               	btfsc	status,2,c
  8570  000D14  D7B0               	goto	l547
  8571  000D16  0A03               	xorlw	3	; case 2
  8572  000D18  B4D8               	btfsc	status,2,c
  8573  000D1A  D7B9               	goto	l548
  8574  000D1C  0A01               	xorlw	1	; case 3
  8575  000D1E  B4D8               	btfsc	status,2,c
  8576  000D20  D7C2               	goto	l549
  8577  000D22  0A07               	xorlw	7	; case 4
  8578  000D24  B4D8               	btfsc	status,2,c
  8579  000D26  D7CB               	goto	l550
  8580  000D28  0A01               	xorlw	1	; case 5
  8581  000D2A  B4D8               	btfsc	status,2,c
  8582  000D2C  D7D4               	goto	l551
  8583  000D2E  0A03               	xorlw	3	; case 6
  8584  000D30  B4D8               	btfsc	status,2,c
  8585  000D32  D7DD               	goto	l552
  8586  000D34  D795               	goto	l544
  8587  000D36                     l546:
  8588                           
  8589                           ;MOTEapp.c: 865: }
  8590                           ;MOTEapp.c: 866: if (selectButton)
  8591                           
  8592                           ; BSR set to: 0
  8593                           
  8594                           ; BSR set to: 0
  8595  000D36  0100               	movlb	0	; () banked
  8596  000D38  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8597  000D3A  B4D8               	btfsc	status,2,c
  8598  000D3C  0012               	return	
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;MOTEapp.c: 867: {
  8602                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  8603  000D3E  0E05               	movlw	5
  8604  000D40  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8605  000D42  D002               	goto	l554
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;MOTEapp.c: 869: {
  8609                           ;MOTEapp.c: 870: periodicUpValue++;
  8610  000D44  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8611                           
  8612                           ;MOTEapp.c: 871: } else {
  8613  000D46  D054               	goto	l556
  8614  000D48                     l554:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;MOTEapp.c: 872: periodicUpValue = 0;
  8618                           
  8619                           ; BSR set to: 0
  8620  000D48  0E00               	movlw	0
  8621  000D4A  6FFE               	movwf	_periodicUpValue& (0+255),b
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;MOTEapp.c: 873: }
  8625                           ;MOTEapp.c: 875: switch (periodicUpValue)
  8626  000D4C  D051               	goto	l556
  8627  000D4E                     
  8628                           ; BSR set to: 0
  8629                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  8630                           
  8631                           ; BSR set to: 0
  8632                           
  8633                           ;MOTEapp.c: 878: case 0:
  8634                           
  8635                           ; BSR set to: 0
  8636  000D4E  0E09               	movlw	9
  8637  000D50  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  8641  000D52  0EDB               	movlw	low STR_143
  8642  000D54  6F72               	movwf	oled_putString@string& (0+255),b
  8643  000D56  0E7F               	movlw	high STR_143
  8644  000D58  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8645  000D5A  0E07               	movlw	7
  8646  000D5C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8647  000D5E  0E02               	movlw	2
  8648  000D60  6F75               	movwf	oled_putString@start_page& (0+255),b
  8649  000D62  EC71  F025         	call	_oled_putString	;wreg free
  8650                           
  8651                           ;MOTEapp.c: 881: break;
  8652  000D66  0012               	return	
  8653  000D68                     
  8654                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  8655  000D68  0E12               	movlw	18
  8656  000D6A  0100               	movlb	0	; () banked
  8657  000D6C  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  8661  000D6E  0EDF               	movlw	low STR_146
  8662  000D70  6F72               	movwf	oled_putString@string& (0+255),b
  8663  000D72  0E7F               	movlw	high STR_146
  8664  000D74  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8665  000D76  0E07               	movlw	7
  8666  000D78  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8667  000D7A  0E02               	movlw	2
  8668  000D7C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8669  000D7E  EC71  F025         	call	_oled_putString	;wreg free
  8670                           
  8671                           ;MOTEapp.c: 885: break;
  8672  000D82  0012               	return	
  8673  000D84                     
  8674                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  8675  000D84  0E1B               	movlw	27
  8676  000D86  0100               	movlb	0	; () banked
  8677  000D88  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  8681  000D8A  0EEB               	movlw	low STR_147
  8682  000D8C  6F72               	movwf	oled_putString@string& (0+255),b
  8683  000D8E  0E7F               	movlw	high STR_147
  8684  000D90  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8685  000D92  0E07               	movlw	7
  8686  000D94  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8687  000D96  0E02               	movlw	2
  8688  000D98  6F75               	movwf	oled_putString@start_page& (0+255),b
  8689  000D9A  EC71  F025         	call	_oled_putString	;wreg free
  8690                           
  8691                           ;MOTEapp.c: 889: break;
  8692  000D9E  0012               	return	
  8693  000DA0                     
  8694                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  8695  000DA0  0E36               	movlw	54
  8696  000DA2  0100               	movlb	0	; () banked
  8697  000DA4  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  8701  000DA6  0EE3               	movlw	low STR_148
  8702  000DA8  6F72               	movwf	oled_putString@string& (0+255),b
  8703  000DAA  0E7F               	movlw	high STR_148
  8704  000DAC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8705  000DAE  0E07               	movlw	7
  8706  000DB0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8707  000DB2  0E02               	movlw	2
  8708  000DB4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8709  000DB6  EC71  F025         	call	_oled_putString	;wreg free
  8710                           
  8711                           ;MOTEapp.c: 893: break;
  8712  000DBA  0012               	return	
  8713  000DBC                     
  8714                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  8715  000DBC  0E6C               	movlw	108
  8716  000DBE  0100               	movlb	0	; () banked
  8717  000DC0  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  8721  000DC2  0EE7               	movlw	low STR_149
  8722  000DC4  6F72               	movwf	oled_putString@string& (0+255),b
  8723  000DC6  0E7F               	movlw	high STR_149
  8724  000DC8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8725  000DCA  0E07               	movlw	7
  8726  000DCC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8727  000DCE  0E02               	movlw	2
  8728  000DD0  6F75               	movwf	oled_putString@start_page& (0+255),b
  8729  000DD2  EC71  F025         	call	_oled_putString	;wreg free
  8730                           
  8731                           ;MOTEapp.c: 897: break;
  8732  000DD6  0012               	return	
  8733  000DD8                     l564:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  8737  000DD8  69FD               	setf	_periodicTimerValue& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  8741  000DDA  0EEF               	movlw	low STR_128
  8742  000DDC  6F72               	movwf	oled_putString@string& (0+255),b
  8743  000DDE  0E7F               	movlw	high STR_128
  8744  000DE0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8745  000DE2  0E07               	movlw	7
  8746  000DE4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8747  000DE6  0E02               	movlw	2
  8748  000DE8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8749  000DEA  EC71  F025         	call	_oled_putString	;wreg free
  8750                           
  8751                           ;MOTEapp.c: 902: }
  8752                           
  8753                           ;MOTEapp.c: 901: break;
  8754  000DEE  0012               	return	
  8755  000DF0                     l556:
  8756  000DF0  0100               	movlb	0	; () banked
  8757  000DF2  51FE               	movf	_periodicUpValue& (0+255),w,b
  8758                           
  8759                           ; Switch size 1, requested type "space"
  8760                           ; Number of cases is 6, Range of values is 0 to 5
  8761                           ; switch strategies available:
  8762                           ; Name         Instructions Cycles
  8763                           ; simple_byte           19    10 (average)
  8764                           ;	Chosen strategy is simple_byte
  8765  000DF4  0A00               	xorlw	0	; case 0
  8766  000DF6  B4D8               	btfsc	status,2,c
  8767  000DF8  D7AA               	goto	l557
  8768  000DFA  0A01               	xorlw	1	; case 1
  8769  000DFC  B4D8               	btfsc	status,2,c
  8770  000DFE  D7B4               	goto	l560
  8771  000E00  0A03               	xorlw	3	; case 2
  8772  000E02  B4D8               	btfsc	status,2,c
  8773  000E04  D7BF               	goto	l561
  8774  000E06  0A01               	xorlw	1	; case 3
  8775  000E08  B4D8               	btfsc	status,2,c
  8776  000E0A  D7CA               	goto	l562
  8777  000E0C  0A07               	xorlw	7	; case 4
  8778  000E0E  B4D8               	btfsc	status,2,c
  8779  000E10  D7D5               	goto	l563
  8780  000E12  0A01               	xorlw	1	; case 5
  8781  000E14  B4D8               	btfsc	status,2,c
  8782  000E16  D7E0               	goto	l564
  8783  000E18  D79A               	goto	l557
  8784  000E1A                     
  8785                           ; BSR set to: 0
  8786                           ;MOTEapp.c: 906: if (changeStates)
  8787                           
  8788                           ; BSR set to: 0
  8789  000E1A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8790  000E1C  B4D8               	btfsc	status,2,c
  8791  000E1E  D01E               	goto	l566
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MOTEapp.c: 907: {
  8795                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  8796  000E20  51FC               	movf	_dataRateValue& (0+255),w,b
  8797  000E22  EC85  F011         	call	_MOTEapp_SetDataRateSetting
  8798                           
  8799                           ;MOTEapp.c: 911: oled_clear();
  8800  000E26  ECAD  F02B         	call	_oled_clear	;wreg free
  8801                           
  8802                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  8803  000E2A  0ECB               	movlw	low STR_151
  8804  000E2C  0100               	movlb	0	; () banked
  8805  000E2E  6F72               	movwf	oled_putString@string& (0+255),b
  8806  000E30  0E7B               	movlw	high STR_151
  8807  000E32  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8808  000E34  0E00               	movlw	0
  8809  000E36  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8810  000E38  0E00               	movlw	0
  8811  000E3A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8812  000E3C  EC71  F025         	call	_oled_putString	;wreg free
  8813                           
  8814                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  8815  000E40  0E93               	movlw	low STR_152
  8816  000E42  0100               	movlb	0	; () banked
  8817  000E44  6F72               	movwf	oled_putString@string& (0+255),b
  8818  000E46  0E7C               	movlw	high STR_152
  8819  000E48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8820  000E4A  0E00               	movlw	0
  8821  000E4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8822  000E4E  0E03               	movlw	3
  8823  000E50  6F75               	movwf	oled_putString@start_page& (0+255),b
  8824  000E52  EC71  F025         	call	_oled_putString	;wreg free
  8825                           
  8826                           ;MOTEapp.c: 914: runningState = runningSleep;
  8827  000E56  0E0F               	movlw	15
  8828  000E58  0100               	movlb	0	; () banked
  8829  000E5A  6FF3               	movwf	_runningState& (0+255),b
  8830  000E5C                     l566:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;MOTEapp.c: 915: }
  8834                           ;MOTEapp.c: 916: if (selectButton)
  8835                           
  8836                           ; BSR set to: 0
  8837  000E5C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8838  000E5E  B4D8               	btfsc	status,2,c
  8839  000E60  0012               	return	
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;MOTEapp.c: 917: {
  8843                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  8844  000E62  0E06               	movlw	6
  8845  000E64  61FC               	cpfslt	_dataRateValue& (0+255),b
  8846  000E66  D00A               	goto	l568
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;MOTEapp.c: 919: {
  8850                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  8851  000E68  05EE               	decf	_rnModule& (0+255),w,b
  8852  000E6A  A4D8               	btfss	status,2,c
  8853  000E6C  D005               	goto	l569
  8854                           
  8855                           ; BSR set to: 0
  8856  000E6E  0E03               	movlw	3
  8857  000E70  65FC               	cpfsgt	_dataRateValue& (0+255),b
  8858  000E72  D002               	goto	l569
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;MOTEapp.c: 921: dataRateValue = 6;
  8862  000E74  0E06               	movlw	6
  8863  000E76  D003               	goto	L5
  8864  000E78                     l569:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;MOTEapp.c: 922: else
  8868                           ;MOTEapp.c: 923: dataRateValue++;
  8869                           
  8870                           ; BSR set to: 0
  8871  000E78  2BFC               	incf	_dataRateValue& (0+255),f,b
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;MOTEapp.c: 924: }
  8875  000E7A  D056               	goto	l572
  8876  000E7C                     l568:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;MOTEapp.c: 925: else {
  8880                           ;MOTEapp.c: 926: dataRateValue = 0;
  8881                           
  8882                           ; BSR set to: 0
  8883  000E7C  0E00               	movlw	0
  8884  000E7E                     L5:
  8885  000E7E  6FFC               	movwf	_dataRateValue& (0+255),b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;MOTEapp.c: 927: }
  8889                           ;MOTEapp.c: 929: switch (dataRateValue)
  8890  000E80  D053               	goto	l572
  8891  000E82                     
  8892                           ; BSR set to: 0
  8893                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  8894                           
  8895                           ; BSR set to: 0
  8896                           
  8897                           ;MOTEapp.c: 932: case 0:
  8898                           
  8899                           ; BSR set to: 0
  8900  000E82  0EC7               	movlw	low STR_138
  8901  000E84  6F72               	movwf	oled_putString@string& (0+255),b
  8902  000E86  0E7F               	movlw	high STR_138
  8903  000E88  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8904  000E8A  0E0A               	movlw	10
  8905  000E8C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8906  000E8E  0E02               	movlw	2
  8907  000E90  6F75               	movwf	oled_putString@start_page& (0+255),b
  8908  000E92  EC71  F025         	call	_oled_putString	;wreg free
  8909                           
  8910                           ;MOTEapp.c: 934: break;
  8911  000E96  0012               	return	
  8912  000E98                     
  8913                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  8914  000E98  0ECB               	movlw	low STR_139
  8915  000E9A  0100               	movlb	0	; () banked
  8916  000E9C  6F72               	movwf	oled_putString@string& (0+255),b
  8917  000E9E  0E7F               	movlw	high STR_139
  8918  000EA0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8919  000EA2  0E0A               	movlw	10
  8920  000EA4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8921  000EA6  0E02               	movlw	2
  8922  000EA8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8923  000EAA  EC71  F025         	call	_oled_putString	;wreg free
  8924                           
  8925                           ;MOTEapp.c: 937: break;
  8926  000EAE  0012               	return	
  8927  000EB0                     
  8928                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  8929  000EB0  0ECF               	movlw	low STR_140
  8930  000EB2  0100               	movlb	0	; () banked
  8931  000EB4  6F72               	movwf	oled_putString@string& (0+255),b
  8932  000EB6  0E7F               	movlw	high STR_140
  8933  000EB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8934  000EBA  0E0A               	movlw	10
  8935  000EBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8936  000EBE  0E02               	movlw	2
  8937  000EC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  8938  000EC2  EC71  F025         	call	_oled_putString	;wreg free
  8939                           
  8940                           ;MOTEapp.c: 940: break;
  8941  000EC6  0012               	return	
  8942  000EC8                     
  8943                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  8944  000EC8  0ED3               	movlw	low STR_141
  8945  000ECA  0100               	movlb	0	; () banked
  8946  000ECC  6F72               	movwf	oled_putString@string& (0+255),b
  8947  000ECE  0E7F               	movlw	high STR_141
  8948  000ED0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8949  000ED2  0E0A               	movlw	10
  8950  000ED4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8951  000ED6  0E02               	movlw	2
  8952  000ED8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8953  000EDA  EC71  F025         	call	_oled_putString	;wreg free
  8954                           
  8955                           ;MOTEapp.c: 943: break;
  8956  000EDE  0012               	return	
  8957  000EE0                     
  8958                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  8959  000EE0  0ED7               	movlw	low STR_142
  8960  000EE2  0100               	movlb	0	; () banked
  8961  000EE4  6F72               	movwf	oled_putString@string& (0+255),b
  8962  000EE6  0E7F               	movlw	high STR_142
  8963  000EE8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8964  000EEA  0E0A               	movlw	10
  8965  000EEC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8966  000EEE  0E02               	movlw	2
  8967  000EF0  6F75               	movwf	oled_putString@start_page& (0+255),b
  8968  000EF2  EC71  F025         	call	_oled_putString	;wreg free
  8969                           
  8970                           ;MOTEapp.c: 946: break;
  8971  000EF6  0012               	return	
  8972  000EF8                     
  8973                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  8974  000EF8  0EDB               	movlw	low STR_143
  8975  000EFA  0100               	movlb	0	; () banked
  8976  000EFC  6F72               	movwf	oled_putString@string& (0+255),b
  8977  000EFE  0E7F               	movlw	high STR_143
  8978  000F00  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8979  000F02  0E0A               	movlw	10
  8980  000F04  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8981  000F06  0E02               	movlw	2
  8982  000F08  6F75               	movwf	oled_putString@start_page& (0+255),b
  8983  000F0A  EC71  F025         	call	_oled_putString	;wreg free
  8984                           
  8985                           ;MOTEapp.c: 949: break;
  8986  000F0E  0012               	return	
  8987  000F10                     
  8988                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  8989  000F10  0EF3               	movlw	low STR_144
  8990  000F12  0100               	movlb	0	; () banked
  8991  000F14  6F72               	movwf	oled_putString@string& (0+255),b
  8992  000F16  0E7F               	movlw	high STR_144
  8993  000F18  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8994  000F1A  0E0A               	movlw	10
  8995  000F1C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8996  000F1E  0E02               	movlw	2
  8997  000F20  6F75               	movwf	oled_putString@start_page& (0+255),b
  8998  000F22  EC71  F025         	call	_oled_putString	;wreg free
  8999                           
  9000                           ;MOTEapp.c: 953: }
  9001                           
  9002                           ;MOTEapp.c: 952: break;
  9003  000F26  0012               	return	
  9004  000F28                     l572:
  9005  000F28  0100               	movlb	0	; () banked
  9006  000F2A  51FC               	movf	_dataRateValue& (0+255),w,b
  9007                           
  9008                           ; Switch size 1, requested type "space"
  9009                           ; Number of cases is 7, Range of values is 0 to 6
  9010                           ; switch strategies available:
  9011                           ; Name         Instructions Cycles
  9012                           ; simple_byte           22    12 (average)
  9013                           ;	Chosen strategy is simple_byte
  9014  000F2C  0A00               	xorlw	0	; case 0
  9015  000F2E  B4D8               	btfsc	status,2,c
  9016  000F30  D7A8               	goto	l573
  9017  000F32  0A01               	xorlw	1	; case 1
  9018  000F34  B4D8               	btfsc	status,2,c
  9019  000F36  D7B0               	goto	l576
  9020  000F38  0A03               	xorlw	3	; case 2
  9021  000F3A  B4D8               	btfsc	status,2,c
  9022  000F3C  D7B9               	goto	l577
  9023  000F3E  0A01               	xorlw	1	; case 3
  9024  000F40  B4D8               	btfsc	status,2,c
  9025  000F42  D7C2               	goto	l578
  9026  000F44  0A07               	xorlw	7	; case 4
  9027  000F46  B4D8               	btfsc	status,2,c
  9028  000F48  D7CB               	goto	l579
  9029  000F4A  0A01               	xorlw	1	; case 5
  9030  000F4C  B4D8               	btfsc	status,2,c
  9031  000F4E  D7D4               	goto	l580
  9032  000F50  0A03               	xorlw	3	; case 6
  9033  000F52  B4D8               	btfsc	status,2,c
  9034  000F54  D7DD               	goto	l581
  9035  000F56  D795               	goto	l573
  9036  000F58                     
  9037                           ; BSR set to: 0
  9038                           ;MOTEapp.c: 957: if (selectButton)
  9039                           
  9040                           ; BSR set to: 0
  9041  000F58  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9042  000F5A  B4D8               	btfsc	status,2,c
  9043  000F5C  D00C               	goto	l585
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;MOTEapp.c: 958: {
  9047                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9048  000F5E  EC21  F01B         	call	_moteApp_GoToSleep	;wreg free
  9049  000F62  0900               	iorlw	0
  9050  000F64  B4D8               	btfsc	status,2,c
  9051  000F66  D004               	goto	l584
  9052                           
  9053                           ;MOTEapp.c: 960: {
  9054                           ;MOTEapp.c: 961: changeStates = 1;
  9055  000F68  0E01               	movlw	1
  9056  000F6A  0100               	movlb	0	; () banked
  9057  000F6C  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9058                           
  9059                           ;MOTEapp.c: 962: }
  9060  000F6E  D003               	goto	l585
  9061  000F70                     l584:
  9062                           
  9063                           ;MOTEapp.c: 963: else
  9064                           ;MOTEapp.c: 964: {
  9065                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9066                           
  9067                           ; BSR set to: 0
  9068  000F70  0E09               	movlw	9
  9069  000F72  0100               	movlb	0	; () banked
  9070  000F74  6FF0               	movwf	_secTicker& (0+255),b
  9071  000F76                     l585:
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;MOTEapp.c: 966: }
  9075                           ;MOTEapp.c: 967: }
  9076                           ;MOTEapp.c: 968: if (changeStates)
  9077                           
  9078                           ; BSR set to: 0
  9079  000F76  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9080  000F78  B4D8               	btfsc	status,2,c
  9081  000F7A  0012               	return	
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;MOTEapp.c: 969: {
  9085                           ;MOTEapp.c: 970: oled_clear();
  9086  000F7C  ECAD  F02B         	call	_oled_clear	;wreg free
  9087                           
  9088                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9089  000F80  0E21               	movlw	low STR_75
  9090  000F82  0100               	movlb	0	; () banked
  9091  000F84  6F72               	movwf	oled_putString@string& (0+255),b
  9092  000F86  0E7B               	movlw	high STR_75
  9093  000F88  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9094  000F8A  0E00               	movlw	0
  9095  000F8C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9096  000F8E  0E00               	movlw	0
  9097  000F90  6F75               	movwf	oled_putString@start_page& (0+255),b
  9098  000F92  EC71  F025         	call	_oled_putString	;wreg free
  9099                           
  9100                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9101  000F96  0E87               	movlw	low STR_76
  9102  000F98  0100               	movlb	0	; () banked
  9103  000F9A  6F72               	movwf	oled_putString@string& (0+255),b
  9104  000F9C  0E7B               	movlw	high STR_76
  9105  000F9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9106  000FA0  0E00               	movlw	0
  9107  000FA2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9108  000FA4  0E01               	movlw	1
  9109  000FA6  6F75               	movwf	oled_putString@start_page& (0+255),b
  9110  000FA8  EC71  F025         	call	_oled_putString	;wreg free
  9111                           
  9112                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9113  000FAC  0E83               	movlw	low STR_77
  9114  000FAE  0100               	movlb	0	; () banked
  9115  000FB0  6F72               	movwf	oled_putString@string& (0+255),b
  9116  000FB2  0E7C               	movlw	high STR_77
  9117  000FB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9118  000FB6  0E00               	movlw	0
  9119  000FB8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9120  000FBA  0E03               	movlw	3
  9121  000FBC  6F75               	movwf	oled_putString@start_page& (0+255),b
  9122  000FBE  EC71  F025         	call	_oled_putString	;wreg free
  9123                           
  9124                           ;MOTEapp.c: 974: runningState = runningUplink;
  9125  000FC2  0E06               	movlw	6
  9126  000FC4  0100               	movlb	0	; () banked
  9127  000FC6  6FF3               	movwf	_runningState& (0+255),b
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;MOTEapp.c: 977: }
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;MOTEapp.c: 975: }
  9134                           ;MOTEapp.c: 976: break;
  9135  000FC8  0012               	return	
  9136  000FCA                     l466:
  9137                           
  9138                           ; BSR set to: 0
  9139                           
  9140                           ; BSR set to: 0
  9141  000FCA  51F3               	movf	_runningState& (0+255),w,b
  9142                           
  9143                           ; Switch size 1, requested type "space"
  9144                           ; Number of cases is 12, Range of values is 0 to 15
  9145                           ; switch strategies available:
  9146                           ; Name         Instructions Cycles
  9147                           ; simple_byte           37    19 (average)
  9148                           ;	Chosen strategy is simple_byte
  9149  000FCC  0A00               	xorlw	0	; case 0
  9150  000FCE  B4D8               	btfsc	status,2,c
  9151  000FD0  EF73  F001         	goto	l472
  9152  000FD4  0A01               	xorlw	1	; case 1
  9153  000FD6  B4D8               	btfsc	status,2,c
  9154  000FD8  D4BC               	goto	l516
  9155  000FDA  0A03               	xorlw	3	; case 2
  9156  000FDC  B4D8               	btfsc	status,2,c
  9157  000FDE  D5E8               	goto	l537
  9158  000FE0  0A01               	xorlw	1	; case 3
  9159  000FE2  B4D8               	btfsc	status,2,c
  9160  000FE4  D71A               	goto	l565
  9161  000FE6  0A05               	xorlw	5	; case 6
  9162  000FE8  B4D8               	btfsc	status,2,c
  9163  000FEA  EFA1  F001         	goto	l476
  9164  000FEE  0A01               	xorlw	1	; case 7
  9165  000FF0  B4D8               	btfsc	status,2,c
  9166  000FF2  EF67  F002         	goto	l483
  9167  000FF6  0A0F               	xorlw	15	; case 8
  9168  000FF8  B4D8               	btfsc	status,2,c
  9169  000FFA  EFD2  F002         	goto	l489
  9170  000FFE  0A02               	xorlw	2	; case 10
  9171  001000  B4D8               	btfsc	status,2,c
  9172  001002  D404               	goto	l508
  9173  001004  0A01               	xorlw	1	; case 11
  9174  001006  B4D8               	btfsc	status,2,c
  9175  001008  D477               	goto	l512
  9176  00100A  0A07               	xorlw	7	; case 12
  9177  00100C  B4D8               	btfsc	status,2,c
  9178  00100E  D511               	goto	l522
  9179  001010  0A01               	xorlw	1	; case 13
  9180  001012  B4D8               	btfsc	status,2,c
  9181  001014  D5FB               	goto	l541
  9182  001016  0A02               	xorlw	2	; case 15
  9183  001018  B4D8               	btfsc	status,2,c
  9184  00101A  D79E               	goto	l582
  9185  00101C  EF72  F001         	goto	l467
  9186  001020                     __end_of_moteRunningProcess:
  9187                           	opt stack 0
  9188                           tblptru	equ	0xFF8
  9189                           tblptrh	equ	0xFF7
  9190                           tblptrl	equ	0xFF6
  9191                           tablat	equ	0xFF5
  9192                           prodh	equ	0xFF4
  9193                           prodl	equ	0xFF3
  9194                           intcon	equ	0xFF2
  9195                           postinc0	equ	0xFEE
  9196                           wreg	equ	0xFE8
  9197                           indf1	equ	0xFE7
  9198                           postdec1	equ	0xFE5
  9199                           fsr1h	equ	0xFE2
  9200                           fsr1l	equ	0xFE1
  9201                           indf2	equ	0xFDF
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8
  9205                           
  9206 ;; *************** function _sendDataCommand *****************
  9207 ;; Defined at:
  9208 ;;		line 1124 in file "../Includes/Board/MOTEapp.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9211 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9212 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9213 ;;		 -> dataBuffer(16), 
  9214 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9217 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9227 ;;      Params:         0       5       0       0       0       0       0       0       0
  9228 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9229 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9230 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9231 ;;Total ram usage:        8 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:   13
  9234 ;; This function calls:
  9235 ;;		_EUSART_Write
  9236 ;;		_EndLine
  9237 ;;		_hexToStr
  9238 ;; This function is called by:
  9239 ;;		_moteRunningProcess
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text11
  9244  003B0E                     __ptext11:
  9245                           	opt stack 0
  9246  003B0E                     _sendDataCommand:
  9247                           	opt stack 15
  9248                           
  9249                           ;MOTEapp.c: 1127: while (*string)
  9250                           
  9251                           ;incstack = 0
  9252  003B0E  D00B               	goto	l642
  9253  003B10                     
  9254                           ;MOTEapp.c: 1128: {
  9255                           ;MOTEapp.c: 1129: EUSART_Write(*string++);
  9256  003B10  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9257  003B14  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9258  003B18                     	if	0	;tblptru may be non-zero
  9259  003B18                     	endif
  9260  003B18                     	if	0	;tblptru may be non-zero
  9261  003B18                     	endif
  9262  003B18  0008               	tblrd		*
  9263  003B1A  50F5               	movf	tablat,w,c
  9264  003B1C  ECC7  F028         	call	_EUSART_Write
  9265  003B20  0100               	movlb	0	; () banked
  9266  003B22  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9267  003B24  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9268  003B26                     l642:
  9269                           
  9270                           ; BSR set to: 0
  9271  003B26  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9272  003B2A  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9273  003B2E                     	if	0	;tblptru may be non-zero
  9274  003B2E                     	endif
  9275  003B2E                     	if	0	;tblptru may be non-zero
  9276  003B2E                     	endif
  9277  003B2E  0008               	tblrd		*
  9278  003B30  50F5               	movf	tablat,w,c
  9279  003B32  0900               	iorlw	0
  9280  003B34  A4D8               	btfss	status,2,c
  9281  003B36  D7EC               	goto	l643
  9282                           
  9283                           ;MOTEapp.c: 1130: }
  9284                           ;MOTEapp.c: 1132: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9285  003B38  0E00               	movlw	0
  9286  003B3A  0100               	movlb	0	; () banked
  9287  003B3C  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9288  003B3E                     l9573:
  9289                           
  9290                           ; BSR set to: 0
  9291  003B3E  0E02               	movlw	2
  9292  003B40  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9293  003B42  D001               	goto	l645
  9294  003B44  D00E               	goto	u8100
  9295  003B46                     l645:
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;MOTEapp.c: 1133: {
  9299                           ;MOTEapp.c: 1134: EUSART_Write(appData[byteCount]);
  9300                           
  9301                           ; BSR set to: 0
  9302  003B46  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9303  003B48  0D01               	mullw	1
  9304  003B4A  50F3               	movf	prodl,w,c
  9305  003B4C  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9306  003B4E  6ED9               	movwf	fsr2l,c
  9307  003B50  50F4               	movf	prodh,w,c
  9308  003B52  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9309  003B54  6EDA               	movwf	fsr2h,c
  9310  003B56  50DF               	movf	indf2,w,c
  9311  003B58  ECC7  F028         	call	_EUSART_Write
  9312  003B5C  0100               	movlb	0	; () banked
  9313  003B5E  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9314  003B60  D7EE               	goto	l9573
  9315  003B62                     u8100:
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;MOTEapp.c: 1135: }
  9319                           ;MOTEapp.c: 1137: EUSART_Write(appData[3]);
  9320                           
  9321                           ; BSR set to: 0
  9322  003B62  EE20 F003          	lfsr	2,3
  9323  003B66  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9324  003B68  26D9               	addwf	fsr2l,f,c
  9325  003B6A  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9326  003B6C  22DA               	addwfc	fsr2h,f,c
  9327  003B6E  50DF               	movf	indf2,w,c
  9328  003B70  ECC7  F028         	call	_EUSART_Write
  9329                           
  9330                           ;MOTEapp.c: 1139: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9331  003B74  0E04               	movlw	4
  9332  003B76  0100               	movlb	0	; () banked
  9333  003B78  6F68               	movwf	sendDataCommand@byteCount_1627& (0+255),b
  9334  003B7A  D021               	goto	l647
  9335  003B7C                     
  9336                           ; BSR set to: 0
  9337                           ;MOTEapp.c: 1140: {
  9338                           ;MOTEapp.c: 1141: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9339                           
  9340                           ; BSR set to: 0
  9341  003B7C  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9342  003B7E  0D01               	mullw	1
  9343  003B80  50F3               	movf	prodl,w,c
  9344  003B82  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9345  003B84  6ED9               	movwf	fsr2l,c
  9346  003B86  50F4               	movf	prodh,w,c
  9347  003B88  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9348  003B8A  6EDA               	movwf	fsr2h,c
  9349  003B8C  50DF               	movf	indf2,w,c
  9350  003B8E  6F66               	movwf	??_sendDataCommand& (0+255),b
  9351  003B90  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9352  003B92  0B0F               	andlw	15
  9353  003B94  EC85  F02A         	call	_hexToStr
  9354  003B98  ECC7  F028         	call	_EUSART_Write
  9355                           
  9356                           ;MOTEapp.c: 1142: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9357  003B9C  0100               	movlb	0	; () banked
  9358  003B9E  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9359  003BA0  0D01               	mullw	1
  9360  003BA2  50F3               	movf	prodl,w,c
  9361  003BA4  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9362  003BA6  6ED9               	movwf	fsr2l,c
  9363  003BA8  50F4               	movf	prodh,w,c
  9364  003BAA  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9365  003BAC  6EDA               	movwf	fsr2h,c
  9366  003BAE  50DF               	movf	indf2,w,c
  9367  003BB0  0B0F               	andlw	15
  9368  003BB2  EC85  F02A         	call	_hexToStr
  9369  003BB6  ECC7  F028         	call	_EUSART_Write
  9370  003BBA  0100               	movlb	0	; () banked
  9371  003BBC  2B68               	incf	sendDataCommand@byteCount_1627& (0+255),f,b
  9372  003BBE                     l647:
  9373                           
  9374                           ; BSR set to: 0
  9375                           
  9376                           ; BSR set to: 0
  9377  003BBE  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9378  003BC0  5D68               	subwf	sendDataCommand@byteCount_1627& (0+255),w,b
  9379  003BC2  A0D8               	btfss	status,0,c
  9380  003BC4  D7DB               	goto	l648
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;MOTEapp.c: 1143: }
  9384                           ;MOTEapp.c: 1144: EndLine();
  9385                           
  9386                           ; BSR set to: 0
  9387  003BC6  EC44  F02C         	call	_EndLine	;wreg free
  9388  003BCA  0012               	return		;funcret
  9389  003BCC                     __end_of_sendDataCommand:
  9390                           	opt stack 0
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           intcon	equ	0xFF2
  9398                           postinc0	equ	0xFEE
  9399                           wreg	equ	0xFE8
  9400                           indf1	equ	0xFE7
  9401                           postdec1	equ	0xFE5
  9402                           fsr1h	equ	0xFE2
  9403                           fsr1l	equ	0xFE1
  9404                           indf2	equ	0xFDF
  9405                           fsr2h	equ	0xFDA
  9406                           fsr2l	equ	0xFD9
  9407                           status	equ	0xFD8
  9408                           
  9409 ;; *************** function _hexToStr *****************
  9410 ;; Defined at:
  9411 ;;		line 1156 in file "../Includes/Board/MOTEapp.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  character       1    wreg     unsigned char 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  character       1    0[BANK0 ] unsigned char 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      unsigned char 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0
  9426 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9428 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9429 ;;Total ram usage:        1 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:   11
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_sendDataCommand
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text12
  9440  00550A                     __ptext12:
  9441                           	opt stack 0
  9442  00550A                     _hexToStr:
  9443                           	opt stack 16
  9444                           
  9445                           ;incstack = 0
  9446                           ;hexToStr@character stored from wreg
  9447  00550A  0100               	movlb	0	; () banked
  9448  00550C  6F60               	movwf	hexToStr@character& (0+255),b
  9449                           
  9450                           ;MOTEapp.c: 1159: character = character & 0x0F;
  9451  00550E  0100               	movlb	0	; () banked
  9452  005510  5160               	movf	hexToStr@character& (0+255),w,b
  9453  005512  0B0F               	andlw	15
  9454  005514  6F60               	movwf	hexToStr@character& (0+255),b
  9455                           
  9456                           ;MOTEapp.c: 1161: if (character < 0x0A)
  9457  005516  0E0A               	movlw	10
  9458  005518  6160               	cpfslt	hexToStr@character& (0+255),b
  9459  00551A  D003               	goto	l658
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;MOTEapp.c: 1162: {
  9463                           ;MOTEapp.c: 1163: return character + '0';
  9464  00551C  5160               	movf	hexToStr@character& (0+255),w,b
  9465  00551E  0F30               	addlw	48
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;MOTEapp.c: 1164: }
  9469                           
  9470                           ; BSR set to: 0
  9471  005520  0012               	return	
  9472  005522                     l658:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;MOTEapp.c: 1165: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9476                           
  9477                           ; BSR set to: 0
  9478  005522  0E09               	movlw	9
  9479  005524  6560               	cpfsgt	hexToStr@character& (0+255),b
  9480  005526  D006               	goto	l661
  9481                           
  9482                           ; BSR set to: 0
  9483  005528  0E10               	movlw	16
  9484  00552A  6160               	cpfslt	hexToStr@character& (0+255),b
  9485  00552C  D003               	goto	l661
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;MOTEapp.c: 1166: {
  9489                           ;MOTEapp.c: 1167: return character + '0' + 7;
  9490  00552E  5160               	movf	hexToStr@character& (0+255),w,b
  9491  005530  0F37               	addlw	55
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;MOTEapp.c: 1168: }
  9495                           
  9496                           ; BSR set to: 0
  9497  005532  0012               	return	
  9498  005534                     l661:
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;MOTEapp.c: 1169: else
  9502                           ;MOTEapp.c: 1170: {
  9503                           ;MOTEapp.c: 1171: return 0;
  9504                           
  9505                           ; BSR set to: 0
  9506  005534  0E00               	movlw	0
  9507                           
  9508                           ; BSR set to: 0
  9509                           
  9510                           ; BSR set to: 0
  9511  005536  0012               	return	
  9512  005538                     __end_of_hexToStr:
  9513                           	opt stack 0
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           intcon	equ	0xFF2
  9521                           postinc0	equ	0xFEE
  9522                           wreg	equ	0xFE8
  9523                           indf1	equ	0xFE7
  9524                           postdec1	equ	0xFE5
  9525                           fsr1h	equ	0xFE2
  9526                           fsr1l	equ	0xFE1
  9527                           indf2	equ	0xFDF
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532 ;; *************** function _oled_putint8 *****************
  9533 ;; Defined at:
  9534 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  number          1    wreg     unsigned char 
  9537 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9538 ;;  start_page      1   24[BANK0 ] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  number          1   32[BANK0 ] unsigned char 
  9541 ;;  numData         6   26[BANK0 ] struct .
  9542 ;;  negative        1   25[BANK0 ] unsigned char 
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  1    wreg      void 
  9545 ;; Registers used:
  9546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9552 ;;      Params:         0       2       0       0       0       0       0       0       0
  9553 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9555 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9556 ;;Total ram usage:       10 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:   15
  9559 ;; This function calls:
  9560 ;;		___awmod
  9561 ;;		___lbdiv
  9562 ;;		_oled_putString
  9563 ;; This function is called by:
  9564 ;;		_moteHandler
  9565 ;;		_moteRunningProcess
  9566 ;;		_moteApp_testSensors
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text13
  9571  00416C                     __ptext13:
  9572                           	opt stack 0
  9573  00416C                     _oled_putint8:
  9574                           	opt stack 13
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;incstack = 0
  9578                           ;oled_putint8@number stored from wreg
  9579  00416C  0100               	movlb	0	; () banked
  9580  00416E  6F80               	movwf	oled_putint8@number& (0+255),b
  9581                           
  9582                           ;SSD1306oLED.c: 280: display_data_t numData;
  9583                           ;SSD1306oLED.c: 281: bool negative = 0;
  9584  004170  0E00               	movlw	0
  9585  004172  0100               	movlb	0	; () banked
  9586  004174  6F79               	movwf	oled_putint8@negative& (0+255),b
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;SSD1306oLED.c: 283: if(number & 0x80)
  9590  004176  AF80               	btfss	oled_putint8@number& (0+255),7,b
  9591  004178  D002               	goto	l1032
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;SSD1306oLED.c: 284: negative = 1;
  9595  00417A  0E01               	movlw	1
  9596  00417C  6F79               	movwf	oled_putint8@negative& (0+255),b
  9597  00417E                     l1032:
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
  9601                           
  9602                           ; BSR set to: 0
  9603  00417E  5180               	movf	oled_putint8@number& (0+255),w,b
  9604  004180  0B7F               	andlw	127
  9605  004182  6F80               	movwf	oled_putint8@number& (0+255),b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
  9609  004184  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9610  004188  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9611  00418A  0E00               	movlw	0
  9612  00418C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9613  00418E  0E0A               	movlw	10
  9614  004190  6F62               	movwf	___awmod@divisor& (0+255),b
  9615  004192  EC01  F025         	call	___awmod	;wreg free
  9616  004196  0100               	movlb	0	; () banked
  9617  004198  5160               	movf	?___awmod& (0+255),w,b
  9618  00419A  0F30               	addlw	48
  9619  00419C  6F7C               	movwf	(oled_putint8@numData+2)& (0+255),b
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;SSD1306oLED.c: 288: number /= 10;
  9623  00419E  0E0A               	movlw	10
  9624  0041A0  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9625  0041A2  5180               	movf	oled_putint8@number& (0+255),w,b
  9626  0041A4  ECA8  F028         	call	___lbdiv
  9627  0041A8  0100               	movlb	0	; () banked
  9628  0041AA  6F80               	movwf	oled_putint8@number& (0+255),b
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
  9632  0041AC  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9633  0041B0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9634  0041B2  0E00               	movlw	0
  9635  0041B4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9636  0041B6  0E0A               	movlw	10
  9637  0041B8  6F62               	movwf	___awmod@divisor& (0+255),b
  9638  0041BA  EC01  F025         	call	___awmod	;wreg free
  9639  0041BE  0100               	movlb	0	; () banked
  9640  0041C0  5160               	movf	?___awmod& (0+255),w,b
  9641  0041C2  0F30               	addlw	48
  9642  0041C4  6F7B               	movwf	(oled_putint8@numData+1)& (0+255),b
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;SSD1306oLED.c: 290: number /= 10;
  9646  0041C6  0E0A               	movlw	10
  9647  0041C8  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9648  0041CA  5180               	movf	oled_putint8@number& (0+255),w,b
  9649  0041CC  ECA8  F028         	call	___lbdiv
  9650  0041D0  0100               	movlb	0	; () banked
  9651  0041D2  6F80               	movwf	oled_putint8@number& (0+255),b
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
  9655  0041D4  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9656  0041D8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9657  0041DA  0E00               	movlw	0
  9658  0041DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9659  0041DE  0E0A               	movlw	10
  9660  0041E0  6F62               	movwf	___awmod@divisor& (0+255),b
  9661  0041E2  EC01  F025         	call	___awmod	;wreg free
  9662  0041E6  0100               	movlb	0	; () banked
  9663  0041E8  5160               	movf	?___awmod& (0+255),w,b
  9664  0041EA  0F30               	addlw	48
  9665  0041EC  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;SSD1306oLED.c: 292: if(negative)
  9669  0041EE  5179               	movf	oled_putint8@negative& (0+255),w,b
  9670  0041F0  B4D8               	btfsc	status,2,c
  9671  0041F2  D002               	goto	l1033
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;SSD1306oLED.c: 293: numData.d0 = '-';
  9675  0041F4  0E2D               	movlw	45
  9676  0041F6  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9677  0041F8                     l1033:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;SSD1306oLED.c: 295: numData.b[3]=0;
  9681  0041F8  0E00               	movlw	0
  9682  0041FA  6F7D               	movwf	(oled_putint8@numData+3)& (0+255),b
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
  9686  0041FC  0E7A               	movlw	low oled_putint8@numData
  9687  0041FE  6F72               	movwf	oled_putString@string& (0+255),b
  9688  004200  0E00               	movlw	high oled_putint8@numData
  9689  004202  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9690  004204  C077  F074         	movff	oled_putint8@station_dot,oled_putString@station_dot
  9691  004208  C078  F075         	movff	oled_putint8@start_page,oled_putString@start_page
  9692  00420C  EC71  F025         	call	_oled_putString	;wreg free
  9693  004210  0012               	return		;funcret
  9694  004212                     __end_of_oled_putint8:
  9695                           	opt stack 0
  9696                           tblptru	equ	0xFF8
  9697                           tblptrh	equ	0xFF7
  9698                           tblptrl	equ	0xFF6
  9699                           tablat	equ	0xFF5
  9700                           prodh	equ	0xFF4
  9701                           prodl	equ	0xFF3
  9702                           intcon	equ	0xFF2
  9703                           postinc0	equ	0xFEE
  9704                           wreg	equ	0xFE8
  9705                           indf1	equ	0xFE7
  9706                           postdec1	equ	0xFE5
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           indf2	equ	0xFDF
  9710                           fsr2h	equ	0xFDA
  9711                           fsr2l	equ	0xFD9
  9712                           status	equ	0xFD8
  9713                           
  9714 ;; *************** function _oled_putUint8 *****************
  9715 ;; Defined at:
  9716 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  number          1    wreg     unsigned char 
  9719 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9720 ;;  start_page      1   24[BANK0 ] unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  number          1   25[BANK0 ] unsigned char 
  9723 ;;  numData         6   26[BANK0 ] struct .
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9733 ;;      Params:         0       2       0       0       0       0       0       0       0
  9734 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9736 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9737 ;;Total ram usage:        9 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:   15
  9740 ;; This function calls:
  9741 ;;		___awmod
  9742 ;;		___lbdiv
  9743 ;;		_oled_putString
  9744 ;; This function is called by:
  9745 ;;		_moteRunningProcess
  9746 ;;		_test_adc
  9747 ;;		_ReadyByteFrame
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text14
  9752  0044FC                     __ptext14:
  9753                           	opt stack 0
  9754  0044FC                     _oled_putUint8:
  9755                           	opt stack 13
  9756                           
  9757                           ;incstack = 0
  9758                           ;oled_putUint8@number stored from wreg
  9759  0044FC  0100               	movlb	0	; () banked
  9760  0044FE  6F79               	movwf	oled_putUint8@number& (0+255),b
  9761                           
  9762                           ;SSD1306oLED.c: 266: display_data_t numData;
  9763                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  9764  004500  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9765  004504  0100               	movlb	0	; () banked
  9766  004506  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9767  004508  0E00               	movlw	0
  9768  00450A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9769  00450C  0E0A               	movlw	10
  9770  00450E  6F62               	movwf	___awmod@divisor& (0+255),b
  9771  004510  EC01  F025         	call	___awmod	;wreg free
  9772  004514  0100               	movlb	0	; () banked
  9773  004516  5160               	movf	?___awmod& (0+255),w,b
  9774  004518  0F30               	addlw	48
  9775  00451A  6F7C               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9776                           
  9777                           ;SSD1306oLED.c: 268: number /= 10;
  9778  00451C  0E0A               	movlw	10
  9779  00451E  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9780  004520  5179               	movf	oled_putUint8@number& (0+255),w,b
  9781  004522  ECA8  F028         	call	___lbdiv
  9782  004526  0100               	movlb	0	; () banked
  9783  004528  6F79               	movwf	oled_putUint8@number& (0+255),b
  9784                           
  9785                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  9786  00452A  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9787  00452E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9788  004530  0E00               	movlw	0
  9789  004532  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9790  004534  0E0A               	movlw	10
  9791  004536  6F62               	movwf	___awmod@divisor& (0+255),b
  9792  004538  EC01  F025         	call	___awmod	;wreg free
  9793  00453C  0100               	movlb	0	; () banked
  9794  00453E  5160               	movf	?___awmod& (0+255),w,b
  9795  004540  0F30               	addlw	48
  9796  004542  6F7B               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9797                           
  9798                           ;SSD1306oLED.c: 270: number /= 10;
  9799  004544  0E0A               	movlw	10
  9800  004546  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9801  004548  5179               	movf	oled_putUint8@number& (0+255),w,b
  9802  00454A  ECA8  F028         	call	___lbdiv
  9803  00454E  0100               	movlb	0	; () banked
  9804  004550  6F79               	movwf	oled_putUint8@number& (0+255),b
  9805                           
  9806                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  9807  004552  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9808  004556  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9809  004558  0E00               	movlw	0
  9810  00455A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9811  00455C  0E0A               	movlw	10
  9812  00455E  6F62               	movwf	___awmod@divisor& (0+255),b
  9813  004560  EC01  F025         	call	___awmod	;wreg free
  9814  004564  0100               	movlb	0	; () banked
  9815  004566  5160               	movf	?___awmod& (0+255),w,b
  9816  004568  0F30               	addlw	48
  9817  00456A  6F7A               	movwf	oled_putUint8@numData& (0+255),b
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  9821  00456C  0E00               	movlw	0
  9822  00456E  6F7D               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  9826  004570  0E7A               	movlw	low oled_putUint8@numData
  9827  004572  6F72               	movwf	oled_putString@string& (0+255),b
  9828  004574  0E00               	movlw	high oled_putUint8@numData
  9829  004576  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9830  004578  C077  F074         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9831  00457C  C078  F075         	movff	oled_putUint8@start_page,oled_putString@start_page
  9832  004580  EC71  F025         	call	_oled_putString	;wreg free
  9833  004584  0012               	return		;funcret
  9834  004586                     __end_of_oled_putUint8:
  9835                           	opt stack 0
  9836                           tblptru	equ	0xFF8
  9837                           tblptrh	equ	0xFF7
  9838                           tblptrl	equ	0xFF6
  9839                           tablat	equ	0xFF5
  9840                           prodh	equ	0xFF4
  9841                           prodl	equ	0xFF3
  9842                           intcon	equ	0xFF2
  9843                           postinc0	equ	0xFEE
  9844                           wreg	equ	0xFE8
  9845                           indf1	equ	0xFE7
  9846                           postdec1	equ	0xFE5
  9847                           fsr1h	equ	0xFE2
  9848                           fsr1l	equ	0xFE1
  9849                           indf2	equ	0xFDF
  9850                           fsr2h	equ	0xFDA
  9851                           fsr2l	equ	0xFD9
  9852                           status	equ	0xFD8
  9853                           
  9854 ;; *************** function _moteApp_setSensorsInput *****************
  9855 ;; Defined at:
  9856 ;;		line 1387 in file "../Includes/Board/MOTEapp.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0
  9871 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9873 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9874 ;;Total ram usage:        2 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:   14
  9877 ;; This function calls:
  9878 ;;		_MOTEapp_getModuleResponse
  9879 ;;		_moteApp_delayms
  9880 ;;		_sendCommand
  9881 ;; This function is called by:
  9882 ;;		_moteRunningProcess
  9883 ;;		_moteApp_testSensors
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text15
  9888  004918                     __ptext15:
  9889                           	opt stack 0
  9890  004918                     _moteApp_setSensorsInput:
  9891                           	opt stack 14
  9892                           
  9893                           ;MOTEapp.c: 1389: uint16_t escapeCounter = 0;
  9894                           
  9895                           ;incstack = 0
  9896  004918  0E00               	movlw	0
  9897  00491A  0100               	movlb	0	; () banked
  9898  00491C  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9899  00491E  0E00               	movlw	0
  9900  004920  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;MOTEapp.c: 1390: sendCommand("sys set pinmode GPIO13 ana");
  9904  004922  0ED3               	movlw	low STR_183
  9905  004924  6F61               	movwf	sendCommand@string& (0+255),b
  9906  004926  0E79               	movlw	high STR_183
  9907  004928  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9908  00492A  EC0D  F02A         	call	_sendCommand	;wreg free
  9909                           
  9910                           ;MOTEapp.c: 1391: while ( !MOTEapp_getModuleResponse() )
  9911  00492E  D009               	goto	l721
  9912  004930                     
  9913                           ;MOTEapp.c: 1392: {
  9914                           ;MOTEapp.c: 1393: if (++escapeCounter > 50000)
  9915  004930  0100               	movlb	0	; () banked
  9916  004932  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
  9917  004934  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
  9918  004936  0E51               	movlw	81
  9919  004938  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
  9920  00493A  0EC3               	movlw	195
  9921  00493C  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
  9922  00493E  B0D8               	btfsc	status,0,c
  9923  004940  D005               	goto	u8020
  9924  004942                     l721:
  9925                           
  9926                           ; BSR set to: 0
  9927                           
  9928                           ; BSR set to: 0
  9929  004942  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  9930  004946  0900               	iorlw	0
  9931  004948  B4D8               	btfsc	status,2,c
  9932  00494A  D7F2               	goto	l720
  9933  00494C                     u8020:
  9934                           
  9935                           ;MOTEapp.c: 1395: }
  9936                           ;MOTEapp.c: 1396: escapeCounter = 0;
  9937  00494C  0E00               	movlw	0
  9938  00494E  0100               	movlb	0	; () banked
  9939  004950  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9940  004952  0E00               	movlw	0
  9941  004954  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;MOTEapp.c: 1397: sendCommand("sys set pinmode GPIO12 ana");
  9945  004956  0EB8               	movlw	low STR_184
  9946  004958  6F61               	movwf	sendCommand@string& (0+255),b
  9947  00495A  0E79               	movlw	high STR_184
  9948  00495C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9949  00495E  EC0D  F02A         	call	_sendCommand	;wreg free
  9950                           
  9951                           ;MOTEapp.c: 1398: while ( !MOTEapp_getModuleResponse() )
  9952  004962  D009               	goto	l725
  9953  004964                     
  9954                           ;MOTEapp.c: 1399: {
  9955                           ;MOTEapp.c: 1400: if (++escapeCounter > 50000)
  9956  004964  0100               	movlb	0	; () banked
  9957  004966  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
  9958  004968  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
  9959  00496A  0E51               	movlw	81
  9960  00496C  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
  9961  00496E  0EC3               	movlw	195
  9962  004970  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
  9963  004972  B0D8               	btfsc	status,0,c
  9964  004974  D005               	goto	u8040
  9965  004976                     l725:
  9966                           
  9967                           ; BSR set to: 0
  9968                           
  9969                           ; BSR set to: 0
  9970  004976  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  9971  00497A  0900               	iorlw	0
  9972  00497C  B4D8               	btfsc	status,2,c
  9973  00497E  D7F2               	goto	l724
  9974  004980                     u8040:
  9975                           
  9976                           ;MOTEapp.c: 1402: }
  9977                           ;MOTEapp.c: 1403: moteApp_delayms(100);
  9978  004980  0E00               	movlw	0
  9979  004982  0100               	movlb	0	; () banked
  9980  004984  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9981  004986  0E64               	movlw	100
  9982  004988  6F60               	movwf	moteApp_delayms@length& (0+255),b
  9983  00498A  ECAA  F029         	call	_moteApp_delayms	;wreg free
  9984  00498E  0012               	return		;funcret
  9985  004990                     __end_of_moteApp_setSensorsInput:
  9986                           	opt stack 0
  9987                           tblptru	equ	0xFF8
  9988                           tblptrh	equ	0xFF7
  9989                           tblptrl	equ	0xFF6
  9990                           tablat	equ	0xFF5
  9991                           prodh	equ	0xFF4
  9992                           prodl	equ	0xFF3
  9993                           intcon	equ	0xFF2
  9994                           postinc0	equ	0xFEE
  9995                           wreg	equ	0xFE8
  9996                           indf1	equ	0xFE7
  9997                           postdec1	equ	0xFE5
  9998                           fsr1h	equ	0xFE2
  9999                           fsr1l	equ	0xFE1
 10000                           indf2	equ	0xFDF
 10001                           fsr2h	equ	0xFDA
 10002                           fsr2l	equ	0xFD9
 10003                           status	equ	0xFD8
 10004                           
 10005 ;; *************** function _moteApp_lightStringSize *****************
 10006 ;; Defined at:
 10007 ;;		line 1452 in file "../Includes/Board/MOTEapp.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      unsigned char 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:   11
 10028 ;; This function calls:
 10029 ;;		Nothing
 10030 ;; This function is called by:
 10031 ;;		_moteRunningProcess
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	text16
 10036  005902                     __ptext16:
 10037                           	opt stack 0
 10038  005902                     _moteApp_lightStringSize:
 10039                           	opt stack 17
 10040                           
 10041                           ;MOTEapp.c: 1454: return lightStringSize;
 10042                           
 10043                           ;incstack = 0
 10044  005902  0100               	movlb	0	; () banked
 10045  005904  51ED               	movf	_lightStringSize& (0+255),w,b
 10046  005906  0012               	return	
 10047  005908                     __end_of_moteApp_lightStringSize:
 10048                           	opt stack 0
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           wreg	equ	0xFE8
 10058                           indf1	equ	0xFE7
 10059                           postdec1	equ	0xFE5
 10060                           fsr1h	equ	0xFE2
 10061                           fsr1l	equ	0xFE1
 10062                           indf2	equ	0xFDF
 10063                           fsr2h	equ	0xFDA
 10064                           fsr2l	equ	0xFD9
 10065                           status	equ	0xFD8
 10066                           
 10067 ;; *************** function _moteApp_getTempValue *****************
 10068 ;; Defined at:
 10069 ;;		line 1405 in file "../Includes/Board/MOTEapp.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  2    3[BANK0 ] PTR unsigned char 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10083 ;;      Params:         0       2       0       0       0       0       0       0       0
 10084 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10086 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10087 ;;Total ram usage:        4 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:   14
 10090 ;; This function calls:
 10091 ;;		_MOTEapp_getModuleResponse
 10092 ;;		_sendCommand
 10093 ;; This function is called by:
 10094 ;;		_moteHandler
 10095 ;;		_moteRunningProcess
 10096 ;;		_moteApp_testSensors
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text17
 10101  005110                     __ptext17:
 10102                           	opt stack 0
 10103  005110                     _moteApp_getTempValue:
 10104                           	opt stack 14
 10105                           
 10106                           ;MOTEapp.c: 1407: uint16_t escapeCounter = 0;
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;incstack = 0
 10110  005110  0E00               	movlw	0
 10111  005112  0100               	movlb	0	; () banked
 10112  005114  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10113  005116  0E00               	movlw	0
 10114  005118  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;MOTEapp.c: 1409: sendCommand("sys get pinana GPIO12");
 10118  00511A  0E56               	movlw	low STR_185
 10119  00511C  6F61               	movwf	sendCommand@string& (0+255),b
 10120  00511E  0E7A               	movlw	high STR_185
 10121  005120  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10122  005122  EC0D  F02A         	call	_sendCommand	;wreg free
 10123                           
 10124                           ;MOTEapp.c: 1410: while ( !MOTEapp_getModuleResponse() )
 10125  005126  D009               	goto	l732
 10126  005128                     
 10127                           ;MOTEapp.c: 1411: {
 10128                           ;MOTEapp.c: 1412: if (++escapeCounter > 50000)
 10129  005128  0100               	movlb	0	; () banked
 10130  00512A  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10131  00512C  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10132  00512E  0E51               	movlw	81
 10133  005130  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10134  005132  0EC3               	movlw	195
 10135  005134  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10136  005136  B0D8               	btfsc	status,0,c
 10137  005138  D005               	goto	u7810
 10138  00513A                     l732:
 10139                           
 10140                           ; BSR set to: 0
 10141                           
 10142                           ; BSR set to: 0
 10143  00513A  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10144  00513E  0900               	iorlw	0
 10145  005140  B4D8               	btfsc	status,2,c
 10146  005142  D7F2               	goto	l731
 10147  005144                     u7810:
 10148                           
 10149                           ;MOTEapp.c: 1414: }
 10150                           ;MOTEapp.c: 1416: return &moduleResonseBuffer;
 10151  005144  0E64               	movlw	low _moduleResonseBuffer
 10152  005146  0100               	movlb	0	; () banked
 10153  005148  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10154  00514A  0E01               	movlw	high _moduleResonseBuffer
 10155  00514C  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10156  00514E  0012               	return	
 10157  005150                     __end_of_moteApp_getTempValue:
 10158                           	opt stack 0
 10159                           tblptru	equ	0xFF8
 10160                           tblptrh	equ	0xFF7
 10161                           tblptrl	equ	0xFF6
 10162                           tablat	equ	0xFF5
 10163                           prodh	equ	0xFF4
 10164                           prodl	equ	0xFF3
 10165                           intcon	equ	0xFF2
 10166                           postinc0	equ	0xFEE
 10167                           wreg	equ	0xFE8
 10168                           indf1	equ	0xFE7
 10169                           postdec1	equ	0xFE5
 10170                           fsr1h	equ	0xFE2
 10171                           fsr1l	equ	0xFE1
 10172                           indf2	equ	0xFDF
 10173                           fsr2h	equ	0xFDA
 10174                           fsr2l	equ	0xFD9
 10175                           status	equ	0xFD8
 10176                           
 10177 ;; *************** function _moteApp_getLightValue *****************
 10178 ;; Defined at:
 10179 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;		None
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  2   14[BANK0 ] PTR unsigned char 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10193 ;;      Params:         0       2       0       0       0       0       0       0       0
 10194 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10195 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10196 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10197 ;;Total ram usage:        4 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; Hardware stack levels required when called:   14
 10200 ;; This function calls:
 10201 ;;		_MOTEapp_getModuleResponse
 10202 ;;		_moteApp_setLightString
 10203 ;;		_sendCommand
 10204 ;; This function is called by:
 10205 ;;		_moteHandler
 10206 ;;		_moteRunningProcess
 10207 ;;		_moteApp_testSensors
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text18
 10212  004F66                     __ptext18:
 10213                           	opt stack 0
 10214  004F66                     _moteApp_getLightValue:
 10215                           	opt stack 14
 10216                           
 10217                           ;MOTEapp.c: 1421: uint16_t escapeCounter = 0;
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;incstack = 0
 10221  004F66  0E00               	movlw	0
 10222  004F68  0100               	movlb	0	; () banked
 10223  004F6A  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10224  004F6C  0E00               	movlw	0
 10225  004F6E  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;MOTEapp.c: 1423: sendCommand("sys get pinana GPIO13");
 10229  004F70  0E6C               	movlw	low STR_186
 10230  004F72  6F61               	movwf	sendCommand@string& (0+255),b
 10231  004F74  0E7A               	movlw	high STR_186
 10232  004F76  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10233  004F78  EC0D  F02A         	call	_sendCommand	;wreg free
 10234                           
 10235                           ;MOTEapp.c: 1424: while ( !MOTEapp_getModuleResponse() )
 10236  004F7C  D009               	goto	l739
 10237  004F7E                     
 10238                           ;MOTEapp.c: 1425: {
 10239                           ;MOTEapp.c: 1426: if (++escapeCounter > 50000)
 10240  004F7E  0100               	movlb	0	; () banked
 10241  004F80  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10242  004F82  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10243  004F84  0E51               	movlw	81
 10244  004F86  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10245  004F88  0EC3               	movlw	195
 10246  004F8A  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10247  004F8C  B0D8               	btfsc	status,0,c
 10248  004F8E  D005               	goto	u7790
 10249  004F90                     l739:
 10250                           
 10251                           ; BSR set to: 0
 10252                           
 10253                           ; BSR set to: 0
 10254  004F90  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10255  004F94  0900               	iorlw	0
 10256  004F96  B4D8               	btfsc	status,2,c
 10257  004F98  D7F2               	goto	l738
 10258  004F9A                     u7790:
 10259                           
 10260                           ;MOTEapp.c: 1428: }
 10261                           ;MOTEapp.c: 1429: moteApp_setLightString(moduleResonseBuffer);
 10262  004F9A  0E64               	movlw	low _moduleResonseBuffer
 10263  004F9C  0100               	movlb	0	; () banked
 10264  004F9E  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10265  004FA0  0E01               	movlw	high _moduleResonseBuffer
 10266  004FA2  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10267  004FA4  ECA7  F025         	call	_moteApp_setLightString	;wreg free
 10268                           
 10269                           ;MOTEapp.c: 1430: return &moduleResonseBuffer;
 10270  004FA8  0E64               	movlw	low _moduleResonseBuffer
 10271  004FAA  0100               	movlb	0	; () banked
 10272  004FAC  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10273  004FAE  0E01               	movlw	high _moduleResonseBuffer
 10274  004FB0  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10275  004FB2  0012               	return	
 10276  004FB4                     __end_of_moteApp_getLightValue:
 10277                           	opt stack 0
 10278                           tblptru	equ	0xFF8
 10279                           tblptrh	equ	0xFF7
 10280                           tblptrl	equ	0xFF6
 10281                           tablat	equ	0xFF5
 10282                           prodh	equ	0xFF4
 10283                           prodl	equ	0xFF3
 10284                           intcon	equ	0xFF2
 10285                           postinc0	equ	0xFEE
 10286                           wreg	equ	0xFE8
 10287                           indf1	equ	0xFE7
 10288                           postdec1	equ	0xFE5
 10289                           fsr1h	equ	0xFE2
 10290                           fsr1l	equ	0xFE1
 10291                           indf2	equ	0xFDF
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function _moteApp_setLightString *****************
 10297 ;; Defined at:
 10298 ;;		line 1437 in file "../Includes/Board/MOTEapp.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 10301 ;;		 -> moduleResonseBuffer(64), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  stingPos        1   13[BANK0 ] unsigned char 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10313 ;;      Params:         0       2       0       0       0       0       0       0       0
 10314 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10316 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10317 ;;Total ram usage:        3 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:   12
 10320 ;; This function calls:
 10321 ;;		_memcpy
 10322 ;; This function is called by:
 10323 ;;		_moteApp_getLightValue
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text19
 10328  004B4E                     __ptext19:
 10329                           	opt stack 0
 10330  004B4E                     _moteApp_setLightString:
 10331                           	opt stack 15
 10332                           
 10333                           ;MOTEapp.c: 1439: memcpy(storedLight, clearLight, sizeof(storedLight));
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;incstack = 0
 10337  004B4E  0EF2               	movlw	low _storedLight
 10338  004B50  0100               	movlb	0	; () banked
 10339  004B52  6F60               	movwf	memcpy@d1& (0+255),b
 10340  004B54  0E01               	movlw	high _storedLight
 10341  004B56  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10342  004B58  0EED               	movlw	low _clearLight
 10343  004B5A  6F62               	movwf	memcpy@s1& (0+255),b
 10344  004B5C  0E01               	movlw	high _clearLight
 10345  004B5E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10346  004B60  0E00               	movlw	0
 10347  004B62  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10348  004B64  0E05               	movlw	5
 10349  004B66  6F64               	movwf	memcpy@n& (0+255),b
 10350  004B68  EC00  F028         	call	_memcpy	;wreg free
 10351                           
 10352                           ;MOTEapp.c: 1440: memcpy(storedLight, lightString, sizeof(storedLight));
 10353  004B6C  0EF2               	movlw	low _storedLight
 10354  004B6E  0100               	movlb	0	; () banked
 10355  004B70  6F60               	movwf	memcpy@d1& (0+255),b
 10356  004B72  0E01               	movlw	high _storedLight
 10357  004B74  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10358  004B76  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10359  004B7A  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10360  004B7E  0E00               	movlw	0
 10361  004B80  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10362  004B82  0E05               	movlw	5
 10363  004B84  6F64               	movwf	memcpy@n& (0+255),b
 10364  004B86  EC00  F028         	call	_memcpy	;wreg free
 10365                           
 10366                           ;MOTEapp.c: 1442: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10367  004B8A  0E00               	movlw	0
 10368  004B8C  0100               	movlb	0	; () banked
 10369  004B8E  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10370  004B90                     l8479:
 10371                           
 10372                           ; BSR set to: 0
 10373  004B90  0E04               	movlw	4
 10374  004B92  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10375  004B94  D001               	goto	l750
 10376  004B96  D00E               	goto	u6480
 10377  004B98                     l750:
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;MOTEapp.c: 1443: {
 10381                           ;MOTEapp.c: 1444: if (storedLight[stingPos] == 0x00)
 10382                           
 10383                           ; BSR set to: 0
 10384  004B98  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10385  004B9A  0D01               	mullw	1
 10386  004B9C  0EF2               	movlw	low _storedLight
 10387  004B9E  24F3               	addwf	prodl,w,c
 10388  004BA0  6ED9               	movwf	fsr2l,c
 10389  004BA2  0E01               	movlw	high _storedLight
 10390  004BA4  20F4               	addwfc	prodh,w,c
 10391  004BA6  6EDA               	movwf	fsr2h,c
 10392  004BA8  50DF               	movf	indf2,w,c
 10393  004BAA  B4D8               	btfsc	status,2,c
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;MOTEapp.c: 1445: {
 10397                           ;MOTEapp.c: 1446: lightStringSize = stingPos;
 10398  004BAC  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10399                           
 10400                           ; BSR set to: 0
 10401                           
 10402                           ; BSR set to: 0
 10403  004BB0  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10404  004BB2  D7EE               	goto	l8479
 10405  004BB4                     u6480:
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;MOTEapp.c: 1447: }
 10409                           ;MOTEapp.c: 1448: }
 10410                           ;MOTEapp.c: 1449: __nop();
 10411  004BB4  F000               	nop	
 10412  004BB6  0012               	return		;funcret
 10413  004BB8                     __end_of_moteApp_setLightString:
 10414                           	opt stack 0
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           postinc0	equ	0xFEE
 10423                           wreg	equ	0xFE8
 10424                           indf1	equ	0xFE7
 10425                           postdec1	equ	0xFE5
 10426                           fsr1h	equ	0xFE2
 10427                           fsr1l	equ	0xFE1
 10428                           indf2	equ	0xFDF
 10429                           fsr2h	equ	0xFDA
 10430                           fsr2l	equ	0xFD9
 10431                           status	equ	0xFD8
 10432                           
 10433 ;; *************** function _memcpy *****************
 10434 ;; Defined at:
 10435 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  d1              2    0[BANK0 ] PTR void 
 10438 ;;		 -> storedLight(5), 
 10439 ;;  s1              2    2[BANK0 ] PTR const void 
 10440 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10441 ;;  n               2    4[BANK0 ] unsigned int 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10444 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10445 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10446 ;;		 -> storedLight(5), 
 10447 ;;  tmp             1   10[BANK0 ] unsigned char 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  2    0[BANK0 ] PTR void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10457 ;;      Params:         0       6       0       0       0       0       0       0       0
 10458 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10460 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10461 ;;Total ram usage:       11 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   11
 10464 ;; This function calls:
 10465 ;;		Nothing
 10466 ;; This function is called by:
 10467 ;;		_moteApp_setLightString
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text20
 10472  005000                     __ptext20:
 10473                           	opt stack 0
 10474  005000                     _memcpy:
 10475                           	opt stack 15
 10476                           
 10477                           ;incstack = 0
 10478  005000  C062  F068         	movff	memcpy@s1,memcpy@s
 10479  005004  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10480  005008  C060  F066         	movff	memcpy@d1,memcpy@d
 10481  00500C  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10482  005010  D011               	goto	l2666
 10483  005012                     l8047:
 10484  005012  C068  FFD9         	movff	memcpy@s,fsr2l
 10485  005016  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10486  00501A  50DF               	movf	indf2,w,c
 10487  00501C  0100               	movlb	0	; () banked
 10488  00501E  6F6A               	movwf	memcpy@tmp& (0+255),b
 10489                           
 10490                           ; BSR set to: 0
 10491  005020  4B68               	infsnz	memcpy@s& (0+255),f,b
 10492  005022  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10493                           
 10494                           ; BSR set to: 0
 10495  005024  C066  FFD9         	movff	memcpy@d,fsr2l
 10496  005028  C067  FFDA         	movff	memcpy@d+1,fsr2h
 10497  00502C  C06A  FFDF         	movff	memcpy@tmp,indf2
 10498                           
 10499                           ; BSR set to: 0
 10500  005030  4B66               	infsnz	memcpy@d& (0+255),f,b
 10501  005032  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10502  005034                     l2666:
 10503                           
 10504                           ; BSR set to: 0
 10505  005034  0100               	movlb	0	; () banked
 10506  005036  0764               	decf	memcpy@n& (0+255),f,b
 10507  005038  A0D8               	btfss	status,0,c
 10508  00503A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10509  00503C  2964               	incf	memcpy@n& (0+255),w,b
 10510  00503E  E1E9               	bnz	l8047
 10511  005040  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10512  005042  B4D8               	btfsc	status,2,c
 10513  005044  0012               	return	
 10514  005046  D7E5               	goto	l2667
 10515  005048                     __end_of_memcpy:
 10516                           	opt stack 0
 10517                           tblptru	equ	0xFF8
 10518                           tblptrh	equ	0xFF7
 10519                           tblptrl	equ	0xFF6
 10520                           tablat	equ	0xFF5
 10521                           prodh	equ	0xFF4
 10522                           prodl	equ	0xFF3
 10523                           intcon	equ	0xFF2
 10524                           postinc0	equ	0xFEE
 10525                           wreg	equ	0xFE8
 10526                           indf1	equ	0xFE7
 10527                           postdec1	equ	0xFE5
 10528                           fsr1h	equ	0xFE2
 10529                           fsr1l	equ	0xFE1
 10530                           indf2	equ	0xFDF
 10531                           fsr2h	equ	0xFDA
 10532                           fsr2l	equ	0xFD9
 10533                           status	equ	0xFD8
 10534                           
 10535 ;; *************** function _moteApp_getLightString *****************
 10536 ;; Defined at:
 10537 ;;		line 1456 in file "../Includes/Board/MOTEapp.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  2    0[BANK0 ] PTR unsigned char 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10551 ;;      Params:         0       2       0       0       0       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10554 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10555 ;;Total ram usage:        2 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:   11
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_moteRunningProcess
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text21
 10566  005896                     __ptext21:
 10567                           	opt stack 0
 10568  005896                     _moteApp_getLightString:
 10569                           	opt stack 17
 10570                           
 10571                           ;MOTEapp.c: 1458: return &storedLight;
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;incstack = 0
 10575  005896  0EF2               	movlw	low _storedLight
 10576  005898  0100               	movlb	0	; () banked
 10577  00589A  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 10578  00589C  0E01               	movlw	high _storedLight
 10579  00589E  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 10580  0058A0  0012               	return	
 10581  0058A2                     __end_of_moteApp_getLightString:
 10582                           	opt stack 0
 10583                           tblptru	equ	0xFF8
 10584                           tblptrh	equ	0xFF7
 10585                           tblptrl	equ	0xFF6
 10586                           tablat	equ	0xFF5
 10587                           prodh	equ	0xFF4
 10588                           prodl	equ	0xFF3
 10589                           intcon	equ	0xFF2
 10590                           postinc0	equ	0xFEE
 10591                           wreg	equ	0xFE8
 10592                           indf1	equ	0xFE7
 10593                           postdec1	equ	0xFE5
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           indf2	equ	0xFDF
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _moteApp_convertSensorValue *****************
 10602 ;; Defined at:
 10603 ;;		line 1347 in file "../Includes/Board/MOTEapp.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 10606 ;;		 -> moduleResonseBuffer(64), 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 10609 ;;  index           1   25[BANK0 ] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  2   18[BANK0 ] unsigned int 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10619 ;;      Params:         0       2       0       0       0       0       0       0       0
 10620 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10621 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10622 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10623 ;;Total ram usage:        8 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:   12
 10626 ;; This function calls:
 10627 ;;		___wmul
 10628 ;; This function is called by:
 10629 ;;		_moteHandler
 10630 ;;		_moteRunningProcess
 10631 ;;		_moteApp_testSensors
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text22
 10636  00489A                     __ptext22:
 10637                           	opt stack 0
 10638  00489A                     _moteApp_convertSensorValue:
 10639                           	opt stack 16
 10640                           
 10641                           ;MOTEapp.c: 1349: uint8_t index;
 10642                           ;MOTEapp.c: 1350: uint16_t convertedValue = 0;
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  00489A  0E00               	movlw	0
 10647  00489C  0100               	movlb	0	; () banked
 10648  00489E  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10649  0048A0  0E00               	movlw	0
 10650  0048A2  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10651                           
 10652                           ;MOTEapp.c: 1351: for(index = 0; index < 4; index++)
 10653  0048A4  0E00               	movlw	0
 10654  0048A6  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 10655  0048A8                     l9375:
 10656                           
 10657                           ; BSR set to: 0
 10658  0048A8  0E03               	movlw	3
 10659  0048AA  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 10660  0048AC  D001               	goto	l708
 10661  0048AE  D02F               	goto	u7850
 10662  0048B0                     l708:
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;MOTEapp.c: 1352: {
 10666                           ;MOTEapp.c: 1353: if (*string != 0)
 10667                           
 10668                           ; BSR set to: 0
 10669  0048B0  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10670  0048B4  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10671  0048B8  50DF               	movf	indf2,w,c
 10672  0048BA  B4D8               	btfsc	status,2,c
 10673  0048BC  D028               	goto	u7850
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;MOTEapp.c: 1354: {
 10677                           ;MOTEapp.c: 1355: if (index != 0)
 10678  0048BE  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 10679  0048C0  B4D8               	btfsc	status,2,c
 10680  0048C2  D00E               	goto	l711
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;MOTEapp.c: 1356: convertedValue = convertedValue * 10;
 10684  0048C4  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 10685  0048C8  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 10686  0048CC  0E00               	movlw	0
 10687  0048CE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10688  0048D0  0E0A               	movlw	10
 10689  0048D2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10690  0048D4  ECF3  F02A         	call	___wmul	;wreg free
 10691  0048D8  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 10692  0048DC  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 10693  0048E0                     l711:
 10694                           
 10695                           ;MOTEapp.c: 1358: convertedValue = (*string++ - '0') + convertedValue;
 10696  0048E0  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10697  0048E4  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10698  0048E8  50DF               	movf	indf2,w,c
 10699  0048EA  0100               	movlb	0	; () banked
 10700  0048EC  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 10701  0048EE  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 10702  0048F0  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 10703  0048F2  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 10704  0048F4  0E00               	movlw	0
 10705  0048F6  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 10706  0048F8  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 10707  0048FA  0ED0               	movlw	208
 10708  0048FC  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 10709  0048FE  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10710  004900  0EFF               	movlw	255
 10711  004902  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 10712  004904  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10713                           
 10714                           ; BSR set to: 0
 10715  004906  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 10716  004908  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 10717                           
 10718                           ; BSR set to: 0
 10719                           
 10720                           ; BSR set to: 0
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;MOTEapp.c: 1360: else
 10724                           ;MOTEapp.c: 1361: {
 10725                           ;MOTEapp.c: 1362: break;
 10726                           
 10727                           ;MOTEapp.c: 1359: }
 10728  00490A  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 10729  00490C  D7CD               	goto	l9375
 10730  00490E                     u7850:
 10731                           
 10732                           ; BSR set to: 0
 10733                           ;MOTEapp.c: 1363: }
 10734                           ;MOTEapp.c: 1364: }
 10735                           ;MOTEapp.c: 1365: return convertedValue;
 10736  00490E  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 10737  004912  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 10738                           
 10739                           ; BSR set to: 0
 10740  004916  0012               	return		;funcret
 10741  004918                     __end_of_moteApp_convertSensorValue:
 10742                           	opt stack 0
 10743                           tblptru	equ	0xFF8
 10744                           tblptrh	equ	0xFF7
 10745                           tblptrl	equ	0xFF6
 10746                           tablat	equ	0xFF5
 10747                           prodh	equ	0xFF4
 10748                           prodl	equ	0xFF3
 10749                           intcon	equ	0xFF2
 10750                           postinc0	equ	0xFEE
 10751                           wreg	equ	0xFE8
 10752                           indf1	equ	0xFE7
 10753                           postdec1	equ	0xFE5
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           fsr2h	equ	0xFDA
 10758                           fsr2l	equ	0xFD9
 10759                           status	equ	0xFD8
 10760                           
 10761 ;; *************** function ___wmul *****************
 10762 ;; Defined at:
 10763 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10766 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;  product         2    4[BANK0 ] unsigned int 
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2    0[BANK0 ] unsigned int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0, prodl, prodh
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10778 ;;      Params:         0       4       0       0       0       0       0       0       0
 10779 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10781 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10782 ;;Total ram usage:        6 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:   11
 10785 ;; This function calls:
 10786 ;;		Nothing
 10787 ;; This function is called by:
 10788 ;;		_moteApp_convertSensorValue
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text23
 10793  0055E6                     __ptext23:
 10794                           	opt stack 0
 10795  0055E6                     ___wmul:
 10796                           	opt stack 16
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;incstack = 0
 10800  0055E6  0100               	movlb	0	; () banked
 10801  0055E8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10802  0055EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10803  0055EC  CFF3 F064          	movff	prodl,___wmul@product
 10804  0055F0  CFF4 F065          	movff	prodh,___wmul@product+1
 10805  0055F4  5160               	movf	___wmul@multiplier& (0+255),w,b
 10806  0055F6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10807  0055F8  50F3               	movf	prodl,w,c
 10808  0055FA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10809  0055FC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10810  0055FE  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10811  005600  50F3               	movf	prodl,w,c
 10812  005602  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10813                           
 10814                           ; BSR set to: 0
 10815  005604  C064  F060         	movff	___wmul@product,?___wmul
 10816  005608  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10817  00560C  0012               	return	
 10818  00560E                     __end_of___wmul:
 10819                           	opt stack 0
 10820                           tblptru	equ	0xFF8
 10821                           tblptrh	equ	0xFF7
 10822                           tblptrl	equ	0xFF6
 10823                           tablat	equ	0xFF5
 10824                           prodh	equ	0xFF4
 10825                           prodl	equ	0xFF3
 10826                           intcon	equ	0xFF2
 10827                           postinc0	equ	0xFEE
 10828                           wreg	equ	0xFE8
 10829                           indf1	equ	0xFE7
 10830                           postdec1	equ	0xFE5
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function _moteApp_clearBuffers *****************
 10839 ;; Defined at:
 10840 ;;		line 1287 in file "../Includes/Board/MOTEapp.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  counter         1    3[BANK0 ] unsigned char 
 10845 ;;  counter         1    2[BANK0 ] unsigned char 
 10846 ;;  counter         1    1[BANK0 ] unsigned char 
 10847 ;;  counter         1    0[BANK0 ] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0
 10858 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10860 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10861 ;;Total ram usage:        4 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:   11
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_moteRunningProcess
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text24
 10872  0043E0                     __ptext24:
 10873                           	opt stack 0
 10874  0043E0                     _moteApp_clearBuffers:
 10875                           	opt stack 17
 10876                           
 10877                           ;MOTEapp.c: 1289: for (uint8_t counter = 0; counter < 3; counter++)
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;incstack = 0
 10881  0043E0  0E00               	movlw	0
 10882  0043E2  0100               	movlb	0	; () banked
 10883  0043E4  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 10884  0043E6                     l9449:
 10885                           
 10886                           ; BSR set to: 0
 10887  0043E6  0E02               	movlw	2
 10888  0043E8  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 10889  0043EA  D001               	goto	l684
 10890  0043EC  D00C               	goto	u7940
 10891  0043EE                     l684:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;MOTEapp.c: 1290: {
 10895                           ;MOTEapp.c: 1291: responsePortNum[counter] = 0;
 10896                           
 10897                           ; BSR set to: 0
 10898  0043EE  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 10899  0043F0  0D01               	mullw	1
 10900  0043F2  0EF7               	movlw	low _responsePortNum
 10901  0043F4  24F3               	addwf	prodl,w,c
 10902  0043F6  6ED9               	movwf	fsr2l,c
 10903  0043F8  0E01               	movlw	high _responsePortNum
 10904  0043FA  20F4               	addwfc	prodh,w,c
 10905  0043FC  6EDA               	movwf	fsr2h,c
 10906  0043FE  0E00               	movlw	0
 10907  004400  6EDF               	movwf	indf2,c
 10908                           
 10909                           ; BSR set to: 0
 10910  004402  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 10911  004404  D7F0               	goto	l9449
 10912  004406                     u7940:
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;MOTEapp.c: 1292: }
 10916                           ;MOTEapp.c: 1293: for (uint8_t counter = 0; counter < 34; counter++)
 10917                           
 10918                           ; BSR set to: 0
 10919  004406  0E00               	movlw	0
 10920  004408  6F61               	movwf	moteApp_clearBuffers@counter_1714& (0+255),b
 10921  00440A                     l9461:
 10922                           
 10923                           ; BSR set to: 0
 10924  00440A  0E21               	movlw	33
 10925  00440C  6561               	cpfsgt	moteApp_clearBuffers@counter_1714& (0+255),b
 10926  00440E  D001               	goto	l686
 10927  004410  D00C               	goto	u7960
 10928  004412                     l686:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;MOTEapp.c: 1294: {
 10932                           ;MOTEapp.c: 1295: responseId[counter] = 0;
 10933                           
 10934                           ; BSR set to: 0
 10935  004412  5161               	movf	moteApp_clearBuffers@counter_1714& (0+255),w,b
 10936  004414  0D01               	mullw	1
 10937  004416  0E30               	movlw	low _responseId
 10938  004418  24F3               	addwf	prodl,w,c
 10939  00441A  6ED9               	movwf	fsr2l,c
 10940  00441C  0E01               	movlw	high _responseId
 10941  00441E  20F4               	addwfc	prodh,w,c
 10942  004420  6EDA               	movwf	fsr2h,c
 10943  004422  0E00               	movlw	0
 10944  004424  6EDF               	movwf	indf2,c
 10945                           
 10946                           ; BSR set to: 0
 10947  004426  2B61               	incf	moteApp_clearBuffers@counter_1714& (0+255),f,b
 10948  004428  D7F0               	goto	l9461
 10949  00442A                     u7960:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;MOTEapp.c: 1296: }
 10953                           ;MOTEapp.c: 1297: for (uint8_t counter = 0; counter < 32; counter++)
 10954                           
 10955                           ; BSR set to: 0
 10956  00442A  0E00               	movlw	0
 10957  00442C  6F62               	movwf	moteApp_clearBuffers@counter_1715& (0+255),b
 10958  00442E                     l9473:
 10959                           
 10960                           ; BSR set to: 0
 10961  00442E  0E1F               	movlw	31
 10962  004430  6562               	cpfsgt	moteApp_clearBuffers@counter_1715& (0+255),b
 10963  004432  D001               	goto	l688
 10964  004434  D00C               	goto	u7980
 10965  004436                     l688:
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;MOTEapp.c: 1298: {
 10969                           ;MOTEapp.c: 1299: responseData[counter] = 0;
 10970                           
 10971                           ; BSR set to: 0
 10972  004436  5162               	movf	moteApp_clearBuffers@counter_1715& (0+255),w,b
 10973  004438  0D01               	mullw	1
 10974  00443A  0EA4               	movlw	low _responseData
 10975  00443C  24F3               	addwf	prodl,w,c
 10976  00443E  6ED9               	movwf	fsr2l,c
 10977  004440  0E01               	movlw	high _responseData
 10978  004442  20F4               	addwfc	prodh,w,c
 10979  004444  6EDA               	movwf	fsr2h,c
 10980  004446  0E00               	movlw	0
 10981  004448  6EDF               	movwf	indf2,c
 10982                           
 10983                           ; BSR set to: 0
 10984  00444A  2B62               	incf	moteApp_clearBuffers@counter_1715& (0+255),f,b
 10985  00444C  D7F0               	goto	l9473
 10986  00444E                     u7980:
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;MOTEapp.c: 1300: }
 10990                           ;MOTEapp.c: 1301: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 10991                           
 10992                           ; BSR set to: 0
 10993  00444E  0E00               	movlw	0
 10994  004450  6F63               	movwf	moteApp_clearBuffers@counter_1716& (0+255),b
 10995  004452                     l9485:
 10996                           
 10997                           ; BSR set to: 0
 10998  004452  0E0F               	movlw	15
 10999  004454  6563               	cpfsgt	moteApp_clearBuffers@counter_1716& (0+255),b
 11000  004456  D001               	goto	l690
 11001  004458  0012               	return	
 11002  00445A                     l690:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;MOTEapp.c: 1302: {
 11006                           ;MOTEapp.c: 1303: dataBuffer[counter] = 0;
 11007                           
 11008                           ; BSR set to: 0
 11009  00445A  5163               	movf	moteApp_clearBuffers@counter_1716& (0+255),w,b
 11010  00445C  0D01               	mullw	1
 11011  00445E  0EC4               	movlw	low _dataBuffer
 11012  004460  24F3               	addwf	prodl,w,c
 11013  004462  6ED9               	movwf	fsr2l,c
 11014  004464  0E01               	movlw	high _dataBuffer
 11015  004466  20F4               	addwfc	prodh,w,c
 11016  004468  6EDA               	movwf	fsr2h,c
 11017  00446A  0E00               	movlw	0
 11018  00446C  6EDF               	movwf	indf2,c
 11019                           
 11020                           ; BSR set to: 0
 11021  00446E  2B63               	incf	moteApp_clearBuffers@counter_1716& (0+255),f,b
 11022  004470  D7F0               	goto	l9485
 11023  004472                     __end_of_moteApp_clearBuffers:
 11024                           	opt stack 0
 11025                           tblptru	equ	0xFF8
 11026                           tblptrh	equ	0xFF7
 11027                           tblptrl	equ	0xFF6
 11028                           tablat	equ	0xFF5
 11029                           prodh	equ	0xFF4
 11030                           prodl	equ	0xFF3
 11031                           intcon	equ	0xFF2
 11032                           postinc0	equ	0xFEE
 11033                           wreg	equ	0xFE8
 11034                           indf1	equ	0xFE7
 11035                           postdec1	equ	0xFE5
 11036                           fsr1h	equ	0xFE2
 11037                           fsr1l	equ	0xFE1
 11038                           indf2	equ	0xFDF
 11039                           fsr2h	equ	0xFDA
 11040                           fsr2l	equ	0xFD9
 11041                           status	equ	0xFD8
 11042                           
 11043 ;; *************** function _moteApp_addToDataBuffer *****************
 11044 ;; Defined at:
 11045 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11048 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11049 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  index           1   21[BANK0 ] unsigned char 
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      unsigned char 
 11054 ;; Registers used:
 11055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11061 ;;      Params:         0       3       0       0       0       0       0       0       0
 11062 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11064 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11065 ;;Total ram usage:        4 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:   11
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_moteRunningProcess
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text25
 11076  004D4C                     __ptext25:
 11077                           	opt stack 0
 11078  004D4C                     _moteApp_addToDataBuffer:
 11079                           	opt stack 17
 11080                           
 11081                           ;MOTEapp.c: 1331: uint8_t index;
 11082                           ;MOTEapp.c: 1332: for(index = 0; index < 6; index++)
 11083                           
 11084                           ; BSR set to: 0
 11085                           ;incstack = 0
 11086  004D4C  0E00               	movlw	0
 11087  004D4E  0100               	movlb	0	; () banked
 11088  004D50  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11089  004D52                     l9523:
 11090                           
 11091                           ; BSR set to: 0
 11092  004D52  0E05               	movlw	5
 11093  004D54  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11094  004D56  D001               	goto	l701
 11095  004D58  D026               	goto	u8070
 11096  004D5A                     l701:
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;MOTEapp.c: 1333: {
 11100                           ;MOTEapp.c: 1334: if (*string != 0)
 11101                           
 11102                           ; BSR set to: 0
 11103  004D5A  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11104  004D5E  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11105  004D62  50DF               	movf	indf2,w,c
 11106  004D64  B4D8               	btfsc	status,2,c
 11107  004D66  D012               	goto	l703
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;MOTEapp.c: 1335: {
 11111                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation++] = *string++;
 11112  004D68  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11113  004D6C  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11114  004D70  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11115  004D72  0D01               	mullw	1
 11116  004D74  0EC4               	movlw	low _dataBuffer
 11117  004D76  24F3               	addwf	prodl,w,c
 11118  004D78  6EE1               	movwf	fsr1l,c
 11119  004D7A  0E01               	movlw	high _dataBuffer
 11120  004D7C  20F4               	addwfc	prodh,w,c
 11121  004D7E  6EE2               	movwf	fsr1h,c
 11122  004D80  CFDF FFE7          	movff	indf2,indf1
 11123                           
 11124                           ; BSR set to: 0
 11125  004D84  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11126  004D86  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11127                           
 11128                           ; BSR set to: 0
 11129  004D88  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11130                           
 11131                           ;MOTEapp.c: 1337: }
 11132  004D8A  D00B               	goto	l704
 11133  004D8C                     l703:
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;MOTEapp.c: 1338: else
 11137                           ;MOTEapp.c: 1339: {
 11138                           ;MOTEapp.c: 1340: dataBuffer[bufferLocation] = 0x20;
 11139                           
 11140                           ; BSR set to: 0
 11141  004D8C  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11142  004D8E  0D01               	mullw	1
 11143  004D90  0EC4               	movlw	low _dataBuffer
 11144  004D92  24F3               	addwf	prodl,w,c
 11145  004D94  6ED9               	movwf	fsr2l,c
 11146  004D96  0E01               	movlw	high _dataBuffer
 11147  004D98  20F4               	addwfc	prodh,w,c
 11148  004D9A  6EDA               	movwf	fsr2h,c
 11149  004D9C  0E20               	movlw	32
 11150  004D9E  6EDF               	movwf	indf2,c
 11151                           
 11152                           ;MOTEapp.c: 1341: break;
 11153  004DA0  D002               	goto	u8070
 11154  004DA2                     l704:
 11155                           
 11156                           ; BSR set to: 0
 11157                           
 11158                           ; BSR set to: 0
 11159  004DA2  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11160  004DA4  D7D6               	goto	l9523
 11161  004DA6                     u8070:
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;MOTEapp.c: 1342: }
 11165                           ;MOTEapp.c: 1343: }
 11166                           ;MOTEapp.c: 1344: return index;
 11167                           
 11168                           ; BSR set to: 0
 11169  004DA6  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11170  004DA8  0012               	return	
 11171  004DAA                     __end_of_moteApp_addToDataBuffer:
 11172                           	opt stack 0
 11173                           tblptru	equ	0xFF8
 11174                           tblptrh	equ	0xFF7
 11175                           tblptrl	equ	0xFF6
 11176                           tablat	equ	0xFF5
 11177                           prodh	equ	0xFF4
 11178                           prodl	equ	0xFF3
 11179                           intcon	equ	0xFF2
 11180                           postinc0	equ	0xFEE
 11181                           wreg	equ	0xFE8
 11182                           indf1	equ	0xFE7
 11183                           postdec1	equ	0xFE5
 11184                           fsr1h	equ	0xFE2
 11185                           fsr1l	equ	0xFE1
 11186                           indf2	equ	0xFDF
 11187                           fsr2h	equ	0xFDA
 11188                           fsr2l	equ	0xFD9
 11189                           status	equ	0xFD8
 11190                           
 11191 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11192 ;; Defined at:
 11193 ;;		line 1307 in file "../Includes/Board/MOTEapp.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  number          1    wreg     unsigned char 
 11196 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  number          1    9[BANK0 ] unsigned char 
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11208 ;;      Params:         0       1       0       0       0       0       0       0       0
 11209 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11210 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11211 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11212 ;;Total ram usage:        4 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; Hardware stack levels required when called:   12
 11215 ;; This function calls:
 11216 ;;		___awmod
 11217 ;;		___lbdiv
 11218 ;; This function is called by:
 11219 ;;		_moteRunningProcess
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text26
 11224  003DFC                     __ptext26:
 11225                           	opt stack 0
 11226  003DFC                     _moteApp_add8bToDataBuffer:
 11227                           	opt stack 16
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;incstack = 0
 11231                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11232  003DFC  0100               	movlb	0	; () banked
 11233  003DFE  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11234                           
 11235                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11236  003E00  0100               	movlb	0	; () banked
 11237  003E02  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11238  003E04  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11239  003E06  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11240  003E08  0E02               	movlw	2
 11241  003E0A  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11242  003E0C  0E00               	movlw	0
 11243  003E0E  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11244  003E10  0EC4               	movlw	low _dataBuffer
 11245  003E12  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11246  003E14  6ED9               	movwf	fsr2l,c
 11247  003E16  0E01               	movlw	high _dataBuffer
 11248  003E18  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11249  003E1A  6EDA               	movwf	fsr2h,c
 11250  003E1C  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11251  003E20  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11252  003E22  0E00               	movlw	0
 11253  003E24  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11254  003E26  0E0A               	movlw	10
 11255  003E28  6F62               	movwf	___awmod@divisor& (0+255),b
 11256  003E2A  EC01  F025         	call	___awmod	;wreg free
 11257  003E2E  0100               	movlb	0	; () banked
 11258  003E30  5160               	movf	?___awmod& (0+255),w,b
 11259  003E32  0F30               	addlw	48
 11260  003E34  6EDF               	movwf	indf2,c
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;MOTEapp.c: 1310: number /= 10;
 11264  003E36  0E0A               	movlw	10
 11265  003E38  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11266  003E3A  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11267  003E3C  ECA8  F028         	call	___lbdiv
 11268  003E40  0100               	movlb	0	; () banked
 11269  003E42  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11273  003E44  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11274  003E46  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11275  003E48  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11276  003E4A  0E01               	movlw	1
 11277  003E4C  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11278  003E4E  0E00               	movlw	0
 11279  003E50  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11280  003E52  0EC4               	movlw	low _dataBuffer
 11281  003E54  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11282  003E56  6ED9               	movwf	fsr2l,c
 11283  003E58  0E01               	movlw	high _dataBuffer
 11284  003E5A  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11285  003E5C  6EDA               	movwf	fsr2h,c
 11286  003E5E  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11287  003E62  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11288  003E64  0E00               	movlw	0
 11289  003E66  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11290  003E68  0E0A               	movlw	10
 11291  003E6A  6F62               	movwf	___awmod@divisor& (0+255),b
 11292  003E6C  EC01  F025         	call	___awmod	;wreg free
 11293  003E70  0100               	movlb	0	; () banked
 11294  003E72  5160               	movf	?___awmod& (0+255),w,b
 11295  003E74  0F30               	addlw	48
 11296  003E76  6EDF               	movwf	indf2,c
 11297                           
 11298                           ;MOTEapp.c: 1312: number /= 10;
 11299  003E78  0E0A               	movlw	10
 11300  003E7A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11301  003E7C  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11302  003E7E  ECA8  F028         	call	___lbdiv
 11303  003E82  0100               	movlb	0	; () banked
 11304  003E84  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;MOTEapp.c: 1313: dataBuffer[bufferLocation] = '0' + (number % 10);
 11308  003E86  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11309  003E88  0D01               	mullw	1
 11310  003E8A  0EC4               	movlw	low _dataBuffer
 11311  003E8C  24F3               	addwf	prodl,w,c
 11312  003E8E  6ED9               	movwf	fsr2l,c
 11313  003E90  0E01               	movlw	high _dataBuffer
 11314  003E92  20F4               	addwfc	prodh,w,c
 11315  003E94  6EDA               	movwf	fsr2h,c
 11316  003E96  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11317  003E9A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11318  003E9C  0E00               	movlw	0
 11319  003E9E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11320  003EA0  0E0A               	movlw	10
 11321  003EA2  6F62               	movwf	___awmod@divisor& (0+255),b
 11322  003EA4  EC01  F025         	call	___awmod	;wreg free
 11323  003EA8  0100               	movlb	0	; () banked
 11324  003EAA  5160               	movf	?___awmod& (0+255),w,b
 11325  003EAC  0F30               	addlw	48
 11326  003EAE  6EDF               	movwf	indf2,c
 11327                           
 11328                           ; BSR set to: 0
 11329  003EB0  0012               	return		;funcret
 11330  003EB2                     __end_of_moteApp_add8bToDataBuffer:
 11331                           	opt stack 0
 11332                           tblptru	equ	0xFF8
 11333                           tblptrh	equ	0xFF7
 11334                           tblptrl	equ	0xFF6
 11335                           tablat	equ	0xFF5
 11336                           prodh	equ	0xFF4
 11337                           prodl	equ	0xFF3
 11338                           intcon	equ	0xFF2
 11339                           postinc0	equ	0xFEE
 11340                           wreg	equ	0xFE8
 11341                           indf1	equ	0xFE7
 11342                           postdec1	equ	0xFE5
 11343                           fsr1h	equ	0xFE2
 11344                           fsr1l	equ	0xFE1
 11345                           indf2	equ	0xFDF
 11346                           fsr2h	equ	0xFDA
 11347                           fsr2l	equ	0xFD9
 11348                           status	equ	0xFD8
 11349                           
 11350 ;; *************** function ___lbdiv *****************
 11351 ;; Defined at:
 11352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  dividend        1    wreg     unsigned char 
 11355 ;;  divisor         1    0[BANK0 ] unsigned char 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;  dividend        1    1[BANK0 ] unsigned char 
 11358 ;;  quotient        1    3[BANK0 ] unsigned char 
 11359 ;;  counter         1    2[BANK0 ] unsigned char 
 11360 ;; Return value:  Size  Location     Type
 11361 ;;                  1    wreg      unsigned char 
 11362 ;; Registers used:
 11363 ;;		wreg, status,2, status,0
 11364 ;; Tracked objects:
 11365 ;;		On entry : 0/0
 11366 ;;		On exit  : 0/0
 11367 ;;		Unchanged: 0/0
 11368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11369 ;;      Params:         0       1       0       0       0       0       0       0       0
 11370 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11372 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11373 ;;Total ram usage:        4 bytes
 11374 ;; Hardware stack levels used:    1
 11375 ;; Hardware stack levels required when called:   11
 11376 ;; This function calls:
 11377 ;;		Nothing
 11378 ;; This function is called by:
 11379 ;;		_moteApp_add8bToDataBuffer
 11380 ;;		_oled_putUint8
 11381 ;;		_oled_putint8
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text27
 11386  005150                     __ptext27:
 11387                           	opt stack 0
 11388  005150                     ___lbdiv:
 11389                           	opt stack 16
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;incstack = 0
 11393                           ;___lbdiv@dividend stored from wreg
 11394  005150  0100               	movlb	0	; () banked
 11395  005152  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11396  005154  0E00               	movlw	0
 11397  005156  0100               	movlb	0	; () banked
 11398  005158  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11399                           
 11400                           ; BSR set to: 0
 11401  00515A  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11402  00515C  B4D8               	btfsc	status,2,c
 11403  00515E  D015               	goto	l2573
 11404                           
 11405                           ; BSR set to: 0
 11406  005160  0E01               	movlw	1
 11407  005162  6F62               	movwf	___lbdiv@counter& (0+255),b
 11408  005164  D003               	goto	l2568
 11409  005166                     
 11410                           ; BSR set to: 0
 11411                           
 11412                           ; BSR set to: 0
 11413  005166  90D8               	bcf	status,0,c
 11414  005168  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11415                           
 11416                           ; BSR set to: 0
 11417  00516A  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11418  00516C                     l2568:
 11419                           
 11420                           ; BSR set to: 0
 11421                           
 11422                           ; BSR set to: 0
 11423  00516C  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11424  00516E  D7FB               	goto	l2569
 11425  005170                     u7620:
 11426                           
 11427                           ; BSR set to: 0
 11428                           
 11429                           ; BSR set to: 0
 11430                           
 11431                           ; BSR set to: 0
 11432  005170  90D8               	bcf	status,0,c
 11433  005172  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11434  005174  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11435  005176  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11436  005178  A0D8               	btfss	status,0,c
 11437  00517A  D003               	goto	l2572
 11438                           
 11439                           ; BSR set to: 0
 11440  00517C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11441  00517E  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11442                           
 11443                           ; BSR set to: 0
 11444  005180  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11445  005182                     l2572:
 11446                           
 11447                           ; BSR set to: 0
 11448                           
 11449                           ; BSR set to: 0
 11450  005182  90D8               	bcf	status,0,c
 11451  005184  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11452                           
 11453                           ; BSR set to: 0
 11454  005186  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11455  005188  D7F3               	goto	u7620
 11456  00518A                     l2573:
 11457                           
 11458                           ; BSR set to: 0
 11459                           
 11460                           ; BSR set to: 0
 11461                           
 11462                           ; BSR set to: 0
 11463  00518A  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11464  00518C  0012               	return	
 11465  00518E                     __end_of___lbdiv:
 11466                           	opt stack 0
 11467                           tblptru	equ	0xFF8
 11468                           tblptrh	equ	0xFF7
 11469                           tblptrl	equ	0xFF6
 11470                           tablat	equ	0xFF5
 11471                           prodh	equ	0xFF4
 11472                           prodl	equ	0xFF3
 11473                           intcon	equ	0xFF2
 11474                           postinc0	equ	0xFEE
 11475                           wreg	equ	0xFE8
 11476                           indf1	equ	0xFE7
 11477                           postdec1	equ	0xFE5
 11478                           fsr1h	equ	0xFE2
 11479                           fsr1l	equ	0xFE1
 11480                           indf2	equ	0xFDF
 11481                           fsr2h	equ	0xFDA
 11482                           fsr2l	equ	0xFD9
 11483                           status	equ	0xFD8
 11484                           
 11485 ;; *************** function ___awmod *****************
 11486 ;; Defined at:
 11487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  dividend        2    0[BANK0 ] int 
 11490 ;;  divisor         2    2[BANK0 ] int 
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;  sign            1    5[BANK0 ] unsigned char 
 11493 ;;  counter         1    4[BANK0 ] unsigned char 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  2    0[BANK0 ] int 
 11496 ;; Registers used:
 11497 ;;		wreg, status,2, status,0
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11503 ;;      Params:         0       4       0       0       0       0       0       0       0
 11504 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11506 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11507 ;;Total ram usage:        6 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:   11
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_moteApp_add8bToDataBuffer
 11514 ;;		_oled_putUint8
 11515 ;;		_oled_putint8
 11516 ;; This function uses a non-reentrant model
 11517 ;;
 11518                           
 11519                           	psect	text28
 11520  004A02                     __ptext28:
 11521                           	opt stack 0
 11522  004A02                     ___awmod:
 11523                           	opt stack 16
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;incstack = 0
 11527  004A02  0E00               	movlw	0
 11528  004A04  0100               	movlb	0	; () banked
 11529  004A06  6F65               	movwf	___awmod@sign& (0+255),b
 11530                           
 11531                           ; BSR set to: 0
 11532  004A08  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11533  004A0A  D006               	goto	l2419
 11534                           
 11535                           ; BSR set to: 0
 11536  004A0C  6D60               	negf	___awmod@dividend& (0+255),b
 11537  004A0E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11538  004A10  B0D8               	btfsc	status,0,c
 11539  004A12  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11540                           
 11541                           ; BSR set to: 0
 11542  004A14  0E01               	movlw	1
 11543  004A16  6F65               	movwf	___awmod@sign& (0+255),b
 11544  004A18                     l2419:
 11545                           
 11546                           ; BSR set to: 0
 11547                           
 11548                           ; BSR set to: 0
 11549  004A18  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11550  004A1A  D004               	goto	l2420
 11551                           
 11552                           ; BSR set to: 0
 11553  004A1C  6D62               	negf	___awmod@divisor& (0+255),b
 11554  004A1E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11555  004A20  B0D8               	btfsc	status,0,c
 11556  004A22  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11557  004A24                     l2420:
 11558                           
 11559                           ; BSR set to: 0
 11560                           
 11561                           ; BSR set to: 0
 11562  004A24  5162               	movf	___awmod@divisor& (0+255),w,b
 11563  004A26  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11564  004A28  B4D8               	btfsc	status,2,c
 11565  004A2A  D018               	goto	l2427
 11566                           
 11567                           ; BSR set to: 0
 11568  004A2C  0E01               	movlw	1
 11569  004A2E  6F64               	movwf	___awmod@counter& (0+255),b
 11570  004A30  D004               	goto	l2422
 11571  004A32                     
 11572                           ; BSR set to: 0
 11573                           
 11574                           ; BSR set to: 0
 11575  004A32  90D8               	bcf	status,0,c
 11576  004A34  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11577  004A36  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11578  004A38  2B64               	incf	___awmod@counter& (0+255),f,b
 11579  004A3A                     l2422:
 11580                           
 11581                           ; BSR set to: 0
 11582                           
 11583                           ; BSR set to: 0
 11584  004A3A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11585  004A3C  D7FA               	goto	l2423
 11586  004A3E                     u7510:
 11587                           
 11588                           ; BSR set to: 0
 11589                           
 11590                           ; BSR set to: 0
 11591                           
 11592                           ; BSR set to: 0
 11593  004A3E  5162               	movf	___awmod@divisor& (0+255),w,b
 11594  004A40  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11595  004A42  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11596  004A44  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11597  004A46  A0D8               	btfss	status,0,c
 11598  004A48  D004               	goto	l2426
 11599                           
 11600                           ; BSR set to: 0
 11601  004A4A  5162               	movf	___awmod@divisor& (0+255),w,b
 11602  004A4C  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11603  004A4E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11604  004A50  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11605  004A52                     l2426:
 11606                           
 11607                           ; BSR set to: 0
 11608                           
 11609                           ; BSR set to: 0
 11610  004A52  90D8               	bcf	status,0,c
 11611  004A54  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11612  004A56  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11613                           
 11614                           ; BSR set to: 0
 11615  004A58  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11616  004A5A  D7F1               	goto	u7510
 11617  004A5C                     l2427:
 11618                           
 11619                           ; BSR set to: 0
 11620                           
 11621                           ; BSR set to: 0
 11622                           
 11623                           ; BSR set to: 0
 11624  004A5C  5165               	movf	___awmod@sign& (0+255),w,b
 11625  004A5E  B4D8               	btfsc	status,2,c
 11626  004A60  D004               	goto	l2428
 11627                           
 11628                           ; BSR set to: 0
 11629  004A62  6D60               	negf	___awmod@dividend& (0+255),b
 11630  004A64  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11631  004A66  B0D8               	btfsc	status,0,c
 11632  004A68  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11633  004A6A                     l2428:
 11634                           
 11635                           ; BSR set to: 0
 11636                           
 11637                           ; BSR set to: 0
 11638  004A6A  C060  F060         	movff	___awmod@dividend,?___awmod
 11639  004A6E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11640  004A72  0012               	return	
 11641  004A74                     __end_of___awmod:
 11642                           	opt stack 0
 11643                           tblptru	equ	0xFF8
 11644                           tblptrh	equ	0xFF7
 11645                           tblptrl	equ	0xFF6
 11646                           tablat	equ	0xFF5
 11647                           prodh	equ	0xFF4
 11648                           prodl	equ	0xFF3
 11649                           intcon	equ	0xFF2
 11650                           postinc0	equ	0xFEE
 11651                           wreg	equ	0xFE8
 11652                           indf1	equ	0xFE7
 11653                           postdec1	equ	0xFE5
 11654                           fsr1h	equ	0xFE2
 11655                           fsr1l	equ	0xFE1
 11656                           indf2	equ	0xFDF
 11657                           fsr2h	equ	0xFDA
 11658                           fsr2l	equ	0xFD9
 11659                           status	equ	0xFD8
 11660                           
 11661 ;; *************** function _moteApp_GoToSleep *****************
 11662 ;; Defined at:
 11663 ;;		line 1175 in file "../Includes/Board/MOTEapp.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;		None
 11666 ;; Auto vars:     Size  Location     Type
 11667 ;;  status          1   14[BANK0 ] unsigned char 
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1    wreg      unsigned char 
 11670 ;; Registers used:
 11671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/0
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11677 ;;      Params:         0       0       0       0       0       0       0       0       0
 11678 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11680 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11681 ;;Total ram usage:        1 bytes
 11682 ;; Hardware stack levels used:    1
 11683 ;; Hardware stack levels required when called:   17
 11684 ;; This function calls:
 11685 ;;		_EUSART_FlushBuffer
 11686 ;;		_PIN_MANAGER_Initialize
 11687 ;;		_moduleResync
 11688 ;;		_moduleSleep
 11689 ;;		_moteApp_delayms
 11690 ;;		_oled_displayOff
 11691 ;;		_oled_init
 11692 ;; This function is called by:
 11693 ;;		_moteRunningProcess
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           	psect	text29
 11698  003642                     __ptext29:
 11699                           	opt stack 0
 11700  003642                     _moteApp_GoToSleep:
 11701                           	opt stack 11
 11702                           
 11703                           ;MOTEapp.c: 1177: uint8_t status = 0;
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;incstack = 0
 11707  003642  0E00               	movlw	0
 11708  003644  0100               	movlb	0	; () banked
 11709  003646  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11710  003648                     
 11711                           ; BSR set to: 0
 11712  003648  A081               	btfss	3969,0,c	;volatile
 11713  00364A  D7FE               	goto	l666
 11714                           
 11715                           ;MOTEapp.c: 1179: moduleSleep();
 11716  00364C  EC1B  F02B         	call	_moduleSleep	;wreg free
 11717                           
 11718                           ;MOTEapp.c: 1180: oled_displayOff(1);
 11719  003650  0E01               	movlw	1
 11720  003652  EC71  F02C         	call	_oled_displayOff
 11721                           
 11722                           ;MOTEapp.c: 1181: ADCON0bits.ADON = 0;
 11723  003656  90C2               	bcf	4034,0,c	;volatile
 11724                           
 11725                           ;MOTEapp.c: 1182: INTCONbits.GIE = 0;
 11726  003658  9EF2               	bcf	intcon,7,c	;volatile
 11727                           
 11728                           ;MOTEapp.c: 1183: GIE = 0;
 11729  00365A  9EF2               	bcf	intcon,7,c	;volatile
 11730                           
 11731                           ;MOTEapp.c: 1184: PEIE = 0;
 11732  00365C  9CF2               	bcf	intcon,6,c	;volatile
 11733                           
 11734                           ;MOTEapp.c: 1186: LATEbits.LATE2 = 0;
 11735  00365E  948D               	bcf	3981,2,c	;volatile
 11736                           
 11737                           ;MOTEapp.c: 1187: PIE2bits.TMR3IE = 0;
 11738  003660  92A0               	bcf	4000,1,c	;volatile
 11739                           
 11740                           ;MOTEapp.c: 1189: ANSELAbits.ANSA0 = 1;
 11741  003662  010F               	movlb	15	; () banked
 11742  003664  815B               	bsf	91,0,b	;volatile
 11743                           
 11744                           ; BSR set to: 15
 11745                           ;MOTEapp.c: 1191: PIE2bits.C1IE = 1;
 11746  003666  8CA0               	bsf	4000,6,c	;volatile
 11747                           
 11748                           ; BSR set to: 15
 11749                           ;MOTEapp.c: 1192: INTCON3bits.INT1IE = 1;
 11750  003668  86F0               	bsf	intcon3,3,c	;volatile
 11751                           
 11752                           ; BSR set to: 15
 11753                           ;MOTEapp.c: 1193: INTCONbits.INT0IE = 1;
 11754  00366A  88F2               	bsf	intcon,4,c	;volatile
 11755                           
 11756                           ; BSR set to: 15
 11757                           ;MOTEapp.c: 1194: IOCCbits.IOCC2 = 1;
 11758  00366C  8487               	bsf	3975,2,c	;volatile
 11759                           
 11760                           ; BSR set to: 15
 11761                           ;MOTEapp.c: 1197: status = PORTBbits.RB1;
 11762  00366E  0E00               	movlw	0
 11763  003670  B281               	btfsc	3969,1,c	;volatile
 11764  003672  0E01               	movlw	1
 11765  003674  0100               	movlb	0	; () banked
 11766  003676  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;MOTEapp.c: 1198: status = PORTBbits.RB0;
 11770  003678  0E00               	movlw	0
 11771  00367A  B081               	btfsc	3969,0,c	;volatile
 11772  00367C  0E01               	movlw	1
 11773  00367E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;MOTEapp.c: 1199: status = PORTCbits.RC2;
 11777  003680  0E00               	movlw	0
 11778  003682  B482               	btfsc	3970,2,c	;volatile
 11779  003684  0E01               	movlw	1
 11780  003686  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;MOTEapp.c: 1201: if (periodicState)
 11784  003688  51FA               	movf	_periodicState& (0+255),w,b
 11785  00368A  A4D8               	btfss	status,2,c
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;MOTEapp.c: 1202: {
 11789                           ;MOTEapp.c: 1203: WDTCONbits.SWDTEN = 1;
 11790  00368C  80D1               	bsf	4049,0,c	;volatile
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;MOTEapp.c: 1204: }
 11794                           ;MOTEapp.c: 1207: INTCONbits.INT0IF = 0;
 11795  00368E  92F2               	bcf	intcon,1,c	;volatile
 11796                           
 11797                           ;MOTEapp.c: 1208: INTCON3bits.INT1IF = 0;
 11798  003690  90F0               	bcf	intcon3,0,c	;volatile
 11799                           
 11800                           ;MOTEapp.c: 1209: PIR2bits.C1IF = 0;
 11801  003692  9CA1               	bcf	4001,6,c	;volatile
 11802                           
 11803                           ;MOTEapp.c: 1210: __nop();
 11804  003694  F000               	nop	
 11805  003696  0003               	sleep		;# 
 11806                           
 11807                           ;MOTEapp.c: 1212: __nop();
 11808  003698  F000               	nop	
 11809                           
 11810                           ;MOTEapp.c: 1214: WDTCONbits.SWDTEN = 0;
 11811  00369A  90D1               	bcf	4049,0,c	;volatile
 11812                           
 11813                           ;MOTEapp.c: 1215: EUSART_FlushBuffer();
 11814  00369C  EC46  F028         	call	_EUSART_FlushBuffer	;wreg free
 11815                           
 11816                           ;MOTEapp.c: 1218: INTCON3bits.INT1IE = 0;
 11817  0036A0  96F0               	bcf	intcon3,3,c	;volatile
 11818                           
 11819                           ;MOTEapp.c: 1219: INTCONbits.INT0IE = 0;
 11820  0036A2  98F2               	bcf	intcon,4,c	;volatile
 11821                           
 11822                           ;MOTEapp.c: 1220: IOCCbits.IOCC2 = 0;
 11823  0036A4  9487               	bcf	3975,2,c	;volatile
 11824                           
 11825                           ;MOTEapp.c: 1221: PIE2bits.C1IE = 0;
 11826  0036A6  9CA0               	bcf	4000,6,c	;volatile
 11827                           
 11828                           ;MOTEapp.c: 1222: GIE = 1;
 11829  0036A8  8EF2               	bsf	intcon,7,c	;volatile
 11830                           
 11831                           ;MOTEapp.c: 1224: PIN_MANAGER_Initialize();
 11832  0036AA  EC89  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 11833                           
 11834                           ;MOTEapp.c: 1226: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 11835  0036AE  A2F2               	btfss	intcon,1,c	;volatile
 11836  0036B0  B0F0               	btfsc	intcon3,0,c	;volatile
 11837  0036B2  D002               	goto	u8170
 11838  0036B4  ACA1               	btfss	4001,6,c	;volatile
 11839  0036B6  D011               	goto	l669
 11840  0036B8                     u8170:
 11841                           
 11842                           ;MOTEapp.c: 1227: {
 11843                           ;MOTEapp.c: 1229: INTCONbits.INT0IF = 0;
 11844  0036B8  92F2               	bcf	intcon,1,c	;volatile
 11845                           
 11846                           ;MOTEapp.c: 1230: INTCON3bits.INT1IF = 0;
 11847  0036BA  90F0               	bcf	intcon3,0,c	;volatile
 11848                           
 11849                           ;MOTEapp.c: 1231: status = 1;
 11850  0036BC  0E01               	movlw	1
 11851  0036BE  0100               	movlb	0	; () banked
 11852  0036C0  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;MOTEapp.c: 1234: oled_displayOff(0);
 11856  0036C2  0E00               	movlw	0
 11857  0036C4  EC71  F02C         	call	_oled_displayOff
 11858                           
 11859                           ;MOTEapp.c: 1235: oled_init();
 11860  0036C8  ECF5  F029         	call	_oled_init	;wreg free
 11861                           
 11862                           ;MOTEapp.c: 1237: LATEbits.LATE2 = 1;
 11863  0036CC  848D               	bsf	3981,2,c	;volatile
 11864                           
 11865                           ;MOTEapp.c: 1238: TMR3H = 0xFB;
 11866  0036CE  0EFB               	movlw	251
 11867  0036D0  6EB3               	movwf	4019,c	;volatile
 11868                           
 11869                           ;MOTEapp.c: 1239: TMR3L = 0x50;
 11870  0036D2  0E50               	movlw	80
 11871  0036D4  6EB2               	movwf	4018,c	;volatile
 11872                           
 11873                           ;MOTEapp.c: 1240: PIE2bits.TMR3IE = 1;
 11874  0036D6  82A0               	bsf	4000,1,c	;volatile
 11875                           
 11876                           ;MOTEapp.c: 1241: }
 11877  0036D8  D007               	goto	l672
 11878  0036DA                     l669:
 11879                           
 11880                           ;MOTEapp.c: 1242: else
 11881                           ;MOTEapp.c: 1243: {
 11882                           ;MOTEapp.c: 1244: secTicker = 10;
 11883  0036DA  0E0A               	movlw	10
 11884  0036DC  0100               	movlb	0	; () banked
 11885  0036DE  6FF0               	movwf	_secTicker& (0+255),b
 11886                           
 11887                           ;MOTEapp.c: 1245: status = 0;
 11888  0036E0  0E00               	movlw	0
 11889  0036E2  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;MOTEapp.c: 1247: LATEbits.LATE2 = 0;
 11893  0036E4  948D               	bcf	3981,2,c	;volatile
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;MOTEapp.c: 1248: PIE2bits.TMR3IE = 0;
 11897  0036E6  92A0               	bcf	4000,1,c	;volatile
 11898  0036E8                     l672:
 11899                           
 11900                           ;MOTEapp.c: 1249: }
 11901                           ;MOTEapp.c: 1250: ANSELAbits.ANSA0 = 0;
 11902                           
 11903                           ; BSR set to: 0
 11904  0036E8  010F               	movlb	15	; () banked
 11905  0036EA  915B               	bcf	91,0,b	;volatile
 11906                           
 11907                           ; BSR set to: 15
 11908                           ;MOTEapp.c: 1252: moduleResync();
 11909  0036EC  EC07  F023         	call	_moduleResync	;wreg free
 11910                           
 11911                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 11912  0036F0  0E00               	movlw	0
 11913  0036F2  0100               	movlb	0	; () banked
 11914  0036F4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11915  0036F6  0E28               	movlw	40
 11916  0036F8  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11917  0036FA  ECAA  F029         	call	_moteApp_delayms	;wreg free
 11918                           
 11919                           ;MOTEapp.c: 1254: moduleResync();
 11920  0036FE  EC07  F023         	call	_moduleResync	;wreg free
 11921                           
 11922                           ;MOTEapp.c: 1255: moteApp_delayms(40);
 11923  003702  0E00               	movlw	0
 11924  003704  0100               	movlb	0	; () banked
 11925  003706  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11926  003708  0E28               	movlw	40
 11927  00370A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11928  00370C  ECAA  F029         	call	_moteApp_delayms	;wreg free
 11929                           
 11930                           ;MOTEapp.c: 1256: return status;
 11931  003710  0100               	movlb	0	; () banked
 11932  003712  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 11933  003714  0012               	return	
 11934  003716                     __end_of_moteApp_GoToSleep:
 11935                           	opt stack 0
 11936                           tblptru	equ	0xFF8
 11937                           tblptrh	equ	0xFF7
 11938                           tblptrl	equ	0xFF6
 11939                           tablat	equ	0xFF5
 11940                           prodh	equ	0xFF4
 11941                           prodl	equ	0xFF3
 11942                           intcon	equ	0xFF2
 11943                           intcon3	equ	0xFF0
 11944                           postinc0	equ	0xFEE
 11945                           wreg	equ	0xFE8
 11946                           indf1	equ	0xFE7
 11947                           postdec1	equ	0xFE5
 11948                           fsr1h	equ	0xFE2
 11949                           fsr1l	equ	0xFE1
 11950                           indf2	equ	0xFDF
 11951                           fsr2h	equ	0xFDA
 11952                           fsr2l	equ	0xFD9
 11953                           status	equ	0xFD8
 11954                           
 11955 ;; *************** function _oled_init *****************
 11956 ;; Defined at:
 11957 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11974 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11975 ;;Total ram usage:        0 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:   16
 11978 ;; This function calls:
 11979 ;;		_oled_clear
 11980 ;;		_oled_devInit
 11981 ;;		_oled_setDisplay
 11982 ;;		_oled_setFont
 11983 ;; This function is called by:
 11984 ;;		_main
 11985 ;;		_moteApp_GoToSleep
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text30
 11990  0053EA                     __ptext30:
 11991                           	opt stack 0
 11992  0053EA                     _oled_init:
 11993                           	opt stack 14
 11994                           
 11995                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;incstack = 0
 11999  0053EA  9496               	bcf	3990,2,c	;volatile
 12000                           
 12001                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12002  0053EC  848D               	bsf	3981,2,c	;volatile
 12003                           
 12004                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12005  0053EE  9493               	bcf	3987,2,c	;volatile
 12006                           
 12007                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12008  0053F0  9693               	bcf	3987,3,c	;volatile
 12009                           
 12010                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12011  0053F2  9893               	bcf	3987,4,c	;volatile
 12012                           
 12013                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12014  0053F4  9094               	bcf	3988,0,c	;volatile
 12015                           
 12016                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12017  0053F6  9294               	bcf	3988,1,c	;volatile
 12018                           
 12019                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12020  0053F8  868A               	bsf	3978,3,c	;volatile
 12021                           
 12022                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12023  0053FA  988A               	bcf	3978,4,c	;volatile
 12024                           
 12025                           ;SSD1306oLED.c: 381: oled_devInit();
 12026  0053FC  EC0D  F024         	call	_oled_devInit	;wreg free
 12027                           
 12028                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12029  005400  0E01               	movlw	1
 12030  005402  EC07  F02B         	call	_oled_setDisplay
 12031                           
 12032                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12033  005406  0EF7               	movlw	low _OledFont0
 12034  005408  0100               	movlb	0	; () banked
 12035  00540A  6F60               	movwf	oled_setFont@font& (0+255),b
 12036  00540C  0E75               	movlw	high _OledFont0
 12037  00540E  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12038  005410  ECF3  F02B         	call	_oled_setFont	;wreg free
 12039                           
 12040                           ;SSD1306oLED.c: 385: oled_clear();
 12041  005414  ECAD  F02B         	call	_oled_clear	;wreg free
 12042  005418  0012               	return		;funcret
 12043  00541A                     __end_of_oled_init:
 12044                           	opt stack 0
 12045                           tblptru	equ	0xFF8
 12046                           tblptrh	equ	0xFF7
 12047                           tblptrl	equ	0xFF6
 12048                           tablat	equ	0xFF5
 12049                           prodh	equ	0xFF4
 12050                           prodl	equ	0xFF3
 12051                           intcon	equ	0xFF2
 12052                           intcon3	equ	0xFF0
 12053                           postinc0	equ	0xFEE
 12054                           wreg	equ	0xFE8
 12055                           indf1	equ	0xFE7
 12056                           postdec1	equ	0xFE5
 12057                           fsr1h	equ	0xFE2
 12058                           fsr1l	equ	0xFE1
 12059                           indf2	equ	0xFDF
 12060                           fsr2h	equ	0xFDA
 12061                           fsr2l	equ	0xFD9
 12062                           status	equ	0xFD8
 12063                           
 12064 ;; *************** function _oled_setFont *****************
 12065 ;; Defined at:
 12066 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12069 ;;		 -> OledFont0(768), 
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;		None
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      void 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2, status,0
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12081 ;;      Params:         0       2       0       0       0       0       0       0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12084 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12085 ;;Total ram usage:        2 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:   11
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_oled_init
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text31
 12096  0057E6                     __ptext31:
 12097                           	opt stack 0
 12098  0057E6                     _oled_setFont:
 12099                           	opt stack 18
 12100                           
 12101                           ;SSD1306oLED.c: 258: if(font!=0)
 12102                           
 12103                           ;incstack = 0
 12104  0057E6  0100               	movlb	0	; () banked
 12105  0057E8  5160               	movf	oled_setFont@font& (0+255),w,b
 12106  0057EA  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12107  0057EC  B4D8               	btfsc	status,2,c
 12108  0057EE  0012               	return	
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;SSD1306oLED.c: 259: {
 12112                           ;SSD1306oLED.c: 260: selectedFont=font;
 12113  0057F0  C060  F1FA         	movff	oled_setFont@font,_selectedFont
 12114  0057F4  C061  F1FB         	movff	oled_setFont@font+1,_selectedFont+1
 12115  0057F8  0012               	return	
 12116  0057FA                     __end_of_oled_setFont:
 12117                           	opt stack 0
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           intcon3	equ	0xFF0
 12126                           postinc0	equ	0xFEE
 12127                           wreg	equ	0xFE8
 12128                           indf1	equ	0xFE7
 12129                           postdec1	equ	0xFE5
 12130                           fsr1h	equ	0xFE2
 12131                           fsr1l	equ	0xFE1
 12132                           indf2	equ	0xFDF
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _oled_setDisplay *****************
 12138 ;; Defined at:
 12139 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  displayType     1    wreg     enum E5868
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;  displayType     1    1[BANK0 ] enum E5868
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  1    wreg      void 
 12146 ;; Registers used:
 12147 ;;		wreg, status,2, cstack
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12153 ;;      Params:         0       0       0       0       0       0       0       0       0
 12154 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12155 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12156 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12157 ;;Total ram usage:        1 bytes
 12158 ;; Hardware stack levels used:    1
 12159 ;; Hardware stack levels required when called:   12
 12160 ;; This function calls:
 12161 ;;		_oled_writeCommand
 12162 ;; This function is called by:
 12163 ;;		_oled_init
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text32
 12168  00560E                     __ptext32:
 12169                           	opt stack 0
 12170  00560E                     _oled_setDisplay:
 12171                           	opt stack 17
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;incstack = 0
 12175                           ;oled_setDisplay@displayType stored from wreg
 12176  00560E  0100               	movlb	0	; () banked
 12177  005610  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12178                           
 12179                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12180  005612  0100               	movlb	0	; () banked
 12181  005614  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12182  005616  A4D8               	btfss	status,2,c
 12183  005618  D007               	goto	l1066
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;SSD1306oLED.c: 414: {
 12187                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12188  00561A  0EA0               	movlw	160
 12189  00561C  ECD2  F02B         	call	_oled_writeCommand
 12190                           
 12191                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12192  005620  0EC8               	movlw	200
 12193  005622  ECD2  F02B         	call	_oled_writeCommand
 12194                           
 12195                           ;SSD1306oLED.c: 417: }
 12196  005626  0012               	return	
 12197  005628                     l1066:
 12198                           
 12199                           ;SSD1306oLED.c: 418: else
 12200                           ;SSD1306oLED.c: 419: {
 12201                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12202  005628  0EA1               	movlw	161
 12203  00562A  ECD2  F02B         	call	_oled_writeCommand
 12204                           
 12205                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12206  00562E  0EC0               	movlw	192
 12207  005630  ECD2  F02B         	call	_oled_writeCommand
 12208  005634  0012               	return	
 12209  005636                     __end_of_oled_setDisplay:
 12210                           	opt stack 0
 12211                           tblptru	equ	0xFF8
 12212                           tblptrh	equ	0xFF7
 12213                           tblptrl	equ	0xFF6
 12214                           tablat	equ	0xFF5
 12215                           prodh	equ	0xFF4
 12216                           prodl	equ	0xFF3
 12217                           intcon	equ	0xFF2
 12218                           intcon3	equ	0xFF0
 12219                           postinc0	equ	0xFEE
 12220                           wreg	equ	0xFE8
 12221                           indf1	equ	0xFE7
 12222                           postdec1	equ	0xFE5
 12223                           fsr1h	equ	0xFE2
 12224                           fsr1l	equ	0xFE1
 12225                           indf2	equ	0xFDF
 12226                           fsr2h	equ	0xFDA
 12227                           fsr2l	equ	0xFD9
 12228                           status	equ	0xFD8
 12229                           
 12230 ;; *************** function _oled_devInit *****************
 12231 ;; Defined at:
 12232 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;		None
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;		None
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  1    wreg      void 
 12239 ;; Registers used:
 12240 ;;		wreg, status,2, status,0, cstack
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12246 ;;      Params:         0       0       0       0       0       0       0       0       0
 12247 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12248 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12249 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12250 ;;Total ram usage:        1 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:   13
 12253 ;; This function calls:
 12254 ;;		_oled_initialDispayLine
 12255 ;;		_oled_powerControl
 12256 ;;		_oled_regulorResistorSelect
 12257 ;;		_oled_setContrastControlRegister
 12258 ;;		_oled_writeCommand
 12259 ;; This function is called by:
 12260 ;;		_oled_init
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text33
 12265  00481A                     __ptext33:
 12266                           	opt stack 0
 12267  00481A                     _oled_devInit:
 12268                           	opt stack 16
 12269                           
 12270                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12271                           
 12272                           ;incstack = 0
 12273  00481A  0EE2               	movlw	226
 12274  00481C  ECD2  F02B         	call	_oled_writeCommand
 12275                           
 12276                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12277  004820  848A               	bsf	3978,2,c	;volatile
 12278                           
 12279                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12280  004822  0E04               	movlw	4
 12281  004824  0100               	movlb	0	; () banked
 12282  004826  6F62               	movwf	??_oled_devInit& (0+255),b
 12283  004828  0E1C               	movlw	28
 12284  00482A                     u10967:
 12285  00482A  2EE8               	decfsz	wreg,f,c
 12286  00482C  D7FE               	bra	u10967
 12287  00482E  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12288  004830  D7FC               	bra	u10967
 12289  004832  F000               	nop	
 12290                           
 12291                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12292  004834  948A               	bcf	3978,2,c	;volatile
 12293                           
 12294                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12295  004836  0E20               	movlw	32
 12296  004838  0100               	movlb	0	; () banked
 12297  00483A  6F62               	movwf	??_oled_devInit& (0+255),b
 12298  00483C  0E29               	movlw	41
 12299  00483E                     u10977:
 12300  00483E  2EE8               	decfsz	wreg,f,c
 12301  004840  D7FE               	bra	u10977
 12302  004842  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12303  004844  D7FC               	bra	u10977
 12304  004846  D000               	nop2	
 12305                           
 12306                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12307  004848  848A               	bsf	3978,2,c	;volatile
 12308                           
 12309                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12310  00484A  0E10               	movlw	16
 12311  00484C  0100               	movlb	0	; () banked
 12312  00484E  6F62               	movwf	??_oled_devInit& (0+255),b
 12313  004850  0E94               	movlw	148
 12314  004852                     u10987:
 12315  004852  2EE8               	decfsz	wreg,f,c
 12316  004854  D7FE               	bra	u10987
 12317  004856  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12318  004858  D7FC               	bra	u10987
 12319  00485A  F000               	nop	
 12320                           
 12321                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 12322  00485C  0EA1               	movlw	161
 12323  00485E  ECD2  F02B         	call	_oled_writeCommand
 12324                           
 12325                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 12326  004862  0EC0               	movlw	192
 12327  004864  ECD2  F02B         	call	_oled_writeCommand
 12328                           
 12329                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 12330  004868  0EA3               	movlw	163
 12331  00486A  ECD2  F02B         	call	_oled_writeCommand
 12332                           
 12333                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 12334  00486E  0E07               	movlw	7
 12335  004870  EC2C  F02C         	call	_oled_powerControl
 12336                           
 12337                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 12338  004874  0E05               	movlw	5
 12339  004876  EC24  F02C         	call	_oled_regulorResistorSelect
 12340                           
 12341                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 12342  00487A  505D               	movf	_Contrast_level,w,c
 12343  00487C  ECFD  F02B         	call	_oled_setContrastControlRegister
 12344                           
 12345                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 12346  004880  0E00               	movlw	0
 12347  004882  EC34  F02C         	call	_oled_initialDispayLine
 12348                           
 12349                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 12350  004886  0EF8               	movlw	248
 12351  004888  ECD2  F02B         	call	_oled_writeCommand
 12352                           
 12353                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 12354  00488C  0E00               	movlw	0
 12355  00488E  ECD2  F02B         	call	_oled_writeCommand
 12356                           
 12357                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 12358  004892  0EAF               	movlw	175
 12359  004894  ECD2  F02B         	call	_oled_writeCommand
 12360  004898  0012               	return		;funcret
 12361  00489A                     __end_of_oled_devInit:
 12362                           	opt stack 0
 12363                           tblptru	equ	0xFF8
 12364                           tblptrh	equ	0xFF7
 12365                           tblptrl	equ	0xFF6
 12366                           tablat	equ	0xFF5
 12367                           prodh	equ	0xFF4
 12368                           prodl	equ	0xFF3
 12369                           intcon	equ	0xFF2
 12370                           intcon3	equ	0xFF0
 12371                           postinc0	equ	0xFEE
 12372                           wreg	equ	0xFE8
 12373                           indf1	equ	0xFE7
 12374                           postdec1	equ	0xFE5
 12375                           fsr1h	equ	0xFE2
 12376                           fsr1l	equ	0xFE1
 12377                           indf2	equ	0xFDF
 12378                           fsr2h	equ	0xFDA
 12379                           fsr2l	equ	0xFD9
 12380                           status	equ	0xFD8
 12381                           
 12382 ;; *************** function _oled_setContrastControlRegister *****************
 12383 ;; Defined at:
 12384 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;  mod             1    wreg     unsigned char 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  mod             1    1[BANK0 ] unsigned char 
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, status,2, cstack
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0
 12399 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12401 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12402 ;;Total ram usage:        1 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:   12
 12405 ;; This function calls:
 12406 ;;		_oled_writeCommand
 12407 ;; This function is called by:
 12408 ;;		_oled_devInit
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           	psect	text34
 12413  0057FA                     __ptext34:
 12414                           	opt stack 0
 12415  0057FA                     _oled_setContrastControlRegister:
 12416                           	opt stack 16
 12417                           
 12418                           ;incstack = 0
 12419                           ;oled_setContrastControlRegister@mod stored from wreg
 12420  0057FA  0100               	movlb	0	; () banked
 12421  0057FC  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12422                           
 12423                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 12424  0057FE  0E81               	movlw	129
 12425  005800  ECD2  F02B         	call	_oled_writeCommand
 12426                           
 12427                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 12428  005804  0100               	movlb	0	; () banked
 12429  005806  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12430  005808  ECD2  F02B         	call	_oled_writeCommand
 12431  00580C  0012               	return	
 12432  00580E                     __end_of_oled_setContrastControlRegister:
 12433                           	opt stack 0
 12434                           tblptru	equ	0xFF8
 12435                           tblptrh	equ	0xFF7
 12436                           tblptrl	equ	0xFF6
 12437                           tablat	equ	0xFF5
 12438                           prodh	equ	0xFF4
 12439                           prodl	equ	0xFF3
 12440                           intcon	equ	0xFF2
 12441                           intcon3	equ	0xFF0
 12442                           postinc0	equ	0xFEE
 12443                           wreg	equ	0xFE8
 12444                           indf1	equ	0xFE7
 12445                           postdec1	equ	0xFE5
 12446                           fsr1h	equ	0xFE2
 12447                           fsr1l	equ	0xFE1
 12448                           indf2	equ	0xFDF
 12449                           fsr2h	equ	0xFDA
 12450                           fsr2l	equ	0xFD9
 12451                           status	equ	0xFD8
 12452                           
 12453 ;; *************** function _oled_regulorResistorSelect *****************
 12454 ;; Defined at:
 12455 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  r               1    wreg     unsigned char 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  r               1    1[BANK0 ] unsigned char 
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      void 
 12462 ;; Registers used:
 12463 ;;		wreg, status,2, status,0, cstack
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12469 ;;      Params:         0       0       0       0       0       0       0       0       0
 12470 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12472 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12473 ;;Total ram usage:        1 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; Hardware stack levels required when called:   12
 12476 ;; This function calls:
 12477 ;;		_oled_writeCommand
 12478 ;; This function is called by:
 12479 ;;		_oled_devInit
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text35
 12484  005848                     __ptext35:
 12485                           	opt stack 0
 12486  005848                     _oled_regulorResistorSelect:
 12487                           	opt stack 16
 12488                           
 12489                           ;incstack = 0
 12490                           ;oled_regulorResistorSelect@r stored from wreg
 12491  005848  0100               	movlb	0	; () banked
 12492  00584A  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12493                           
 12494                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 12495  00584C  0100               	movlb	0	; () banked
 12496  00584E  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12497  005850  0920               	iorlw	32
 12498  005852  ECD2  F02B         	call	_oled_writeCommand
 12499  005856  0012               	return	
 12500  005858                     __end_of_oled_regulorResistorSelect:
 12501                           	opt stack 0
 12502                           tblptru	equ	0xFF8
 12503                           tblptrh	equ	0xFF7
 12504                           tblptrl	equ	0xFF6
 12505                           tablat	equ	0xFF5
 12506                           prodh	equ	0xFF4
 12507                           prodl	equ	0xFF3
 12508                           intcon	equ	0xFF2
 12509                           intcon3	equ	0xFF0
 12510                           postinc0	equ	0xFEE
 12511                           wreg	equ	0xFE8
 12512                           indf1	equ	0xFE7
 12513                           postdec1	equ	0xFE5
 12514                           fsr1h	equ	0xFE2
 12515                           fsr1l	equ	0xFE1
 12516                           indf2	equ	0xFDF
 12517                           fsr2h	equ	0xFDA
 12518                           fsr2l	equ	0xFD9
 12519                           status	equ	0xFD8
 12520                           
 12521 ;; *************** function _oled_powerControl *****************
 12522 ;; Defined at:
 12523 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  vol             1    wreg     unsigned char 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  vol             1    1[BANK0 ] unsigned char 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		wreg, status,2, status,0, cstack
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0
 12538 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12539 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12540 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12541 ;;Total ram usage:        1 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; Hardware stack levels required when called:   12
 12544 ;; This function calls:
 12545 ;;		_oled_writeCommand
 12546 ;; This function is called by:
 12547 ;;		_oled_devInit
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           	psect	text36
 12552  005858                     __ptext36:
 12553                           	opt stack 0
 12554  005858                     _oled_powerControl:
 12555                           	opt stack 16
 12556                           
 12557                           ;incstack = 0
 12558                           ;oled_powerControl@vol stored from wreg
 12559  005858  0100               	movlb	0	; () banked
 12560  00585A  6F61               	movwf	oled_powerControl@vol& (0+255),b
 12561                           
 12562                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 12563  00585C  0100               	movlb	0	; () banked
 12564  00585E  5161               	movf	oled_powerControl@vol& (0+255),w,b
 12565  005860  0928               	iorlw	40
 12566  005862  ECD2  F02B         	call	_oled_writeCommand
 12567  005866  0012               	return	
 12568  005868                     __end_of_oled_powerControl:
 12569                           	opt stack 0
 12570                           tblptru	equ	0xFF8
 12571                           tblptrh	equ	0xFF7
 12572                           tblptrl	equ	0xFF6
 12573                           tablat	equ	0xFF5
 12574                           prodh	equ	0xFF4
 12575                           prodl	equ	0xFF3
 12576                           intcon	equ	0xFF2
 12577                           intcon3	equ	0xFF0
 12578                           postinc0	equ	0xFEE
 12579                           wreg	equ	0xFE8
 12580                           indf1	equ	0xFE7
 12581                           postdec1	equ	0xFE5
 12582                           fsr1h	equ	0xFE2
 12583                           fsr1l	equ	0xFE1
 12584                           indf2	equ	0xFDF
 12585                           fsr2h	equ	0xFDA
 12586                           fsr2l	equ	0xFD9
 12587                           status	equ	0xFD8
 12588                           
 12589 ;; *************** function _oled_initialDispayLine *****************
 12590 ;; Defined at:
 12591 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;  line            1    wreg     unsigned char 
 12594 ;; Auto vars:     Size  Location     Type
 12595 ;;  line            1    1[BANK0 ] unsigned char 
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  1    wreg      void 
 12598 ;; Registers used:
 12599 ;;		wreg, status,2, status,0, cstack
 12600 ;; Tracked objects:
 12601 ;;		On entry : 0/0
 12602 ;;		On exit  : 0/0
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12605 ;;      Params:         0       0       0       0       0       0       0       0       0
 12606 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12608 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12609 ;;Total ram usage:        1 bytes
 12610 ;; Hardware stack levels used:    1
 12611 ;; Hardware stack levels required when called:   12
 12612 ;; This function calls:
 12613 ;;		_oled_writeCommand
 12614 ;; This function is called by:
 12615 ;;		_oled_devInit
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text37
 12620  005868                     __ptext37:
 12621                           	opt stack 0
 12622  005868                     _oled_initialDispayLine:
 12623                           	opt stack 16
 12624                           
 12625                           ;incstack = 0
 12626                           ;oled_initialDispayLine@line stored from wreg
 12627  005868  0100               	movlb	0	; () banked
 12628  00586A  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 12629                           
 12630                           ;SSD1306oLED.c: 464: line|=0x40;
 12631  00586C  0100               	movlb	0	; () banked
 12632  00586E  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 12636  005870  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 12637  005872  ECD2  F02B         	call	_oled_writeCommand
 12638  005876  0012               	return	
 12639  005878                     __end_of_oled_initialDispayLine:
 12640                           	opt stack 0
 12641                           tblptru	equ	0xFF8
 12642                           tblptrh	equ	0xFF7
 12643                           tblptrl	equ	0xFF6
 12644                           tablat	equ	0xFF5
 12645                           prodh	equ	0xFF4
 12646                           prodl	equ	0xFF3
 12647                           intcon	equ	0xFF2
 12648                           intcon3	equ	0xFF0
 12649                           postinc0	equ	0xFEE
 12650                           wreg	equ	0xFE8
 12651                           indf1	equ	0xFE7
 12652                           postdec1	equ	0xFE5
 12653                           fsr1h	equ	0xFE2
 12654                           fsr1l	equ	0xFE1
 12655                           indf2	equ	0xFDF
 12656                           fsr2h	equ	0xFDA
 12657                           fsr2l	equ	0xFD9
 12658                           status	equ	0xFD8
 12659                           
 12660 ;; *************** function _oled_displayOff *****************
 12661 ;; Defined at:
 12662 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;  state           1    wreg     unsigned char 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  state           1    0[COMRAM] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  1    wreg      void 
 12669 ;; Registers used:
 12670 ;;		wreg, cstack
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12676 ;;      Params:         0       0       0       0       0       0       0       0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12679 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:        0 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:   12
 12683 ;; This function calls:
 12684 ;;		_oled_writeCommand
 12685 ;; This function is called by:
 12686 ;;		_moteApp_GoToSleep
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text38
 12691  0058E2                     __ptext38:
 12692                           	opt stack 0
 12693  0058E2                     _oled_displayOff:
 12694                           	opt stack 15
 12695                           
 12696                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 12697                           
 12698                           ;incstack = 0
 12699  0058E2  0EAE               	movlw	174
 12700  0058E4  ECD2  F02B         	call	_oled_writeCommand
 12701  0058E8  0012               	return		;funcret
 12702  0058EA                     __end_of_oled_displayOff:
 12703                           	opt stack 0
 12704                           tblptru	equ	0xFF8
 12705                           tblptrh	equ	0xFF7
 12706                           tblptrl	equ	0xFF6
 12707                           tablat	equ	0xFF5
 12708                           prodh	equ	0xFF4
 12709                           prodl	equ	0xFF3
 12710                           intcon	equ	0xFF2
 12711                           intcon3	equ	0xFF0
 12712                           postinc0	equ	0xFEE
 12713                           wreg	equ	0xFE8
 12714                           indf1	equ	0xFE7
 12715                           postdec1	equ	0xFE5
 12716                           fsr1h	equ	0xFE2
 12717                           fsr1l	equ	0xFE1
 12718                           indf2	equ	0xFDF
 12719                           fsr2h	equ	0xFDA
 12720                           fsr2l	equ	0xFD9
 12721                           status	equ	0xFD8
 12722                           
 12723 ;; *************** function _moduleSleep *****************
 12724 ;; Defined at:
 12725 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12742 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12743 ;;Total ram usage:        1 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:   14
 12746 ;; This function calls:
 12747 ;;		_sendCommand
 12748 ;; This function is called by:
 12749 ;;		_moteApp_GoToSleep
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           	psect	text39
 12754  005636                     __ptext39:
 12755                           	opt stack 0
 12756  005636                     _moduleSleep:
 12757                           	opt stack 13
 12758                           
 12759                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 12760                           
 12761                           ;incstack = 0
 12762  005636  0E82               	movlw	low STR_22
 12763  005638  0100               	movlb	0	; () banked
 12764  00563A  6F61               	movwf	sendCommand@string& (0+255),b
 12765  00563C  0E7A               	movlw	high STR_22
 12766  00563E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12767  005640  EC0D  F02A         	call	_sendCommand	;wreg free
 12768  005644                     
 12769                           ;MOTEapp.c: 179: ;
 12770  005644  B89D               	btfsc	3997,4,c	;volatile
 12771  005646  D7FE               	goto	l355
 12772                           
 12773                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 12774  005648  0EFA               	movlw	250
 12775  00564A  0100               	movlb	0	; () banked
 12776  00564C  6F63               	movwf	??_moduleSleep& (0+255),b
 12777  00564E  0E58               	movlw	88
 12778  005650                     u10997:
 12779  005650  2EE8               	decfsz	wreg,f,c
 12780  005652  D7FE               	bra	u10997
 12781  005654  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 12782  005656  D7FC               	bra	u10997
 12783  005658  F000               	nop	
 12784  00565A  0012               	return		;funcret
 12785  00565C                     __end_of_moduleSleep:
 12786                           	opt stack 0
 12787                           tblptru	equ	0xFF8
 12788                           tblptrh	equ	0xFF7
 12789                           tblptrl	equ	0xFF6
 12790                           tablat	equ	0xFF5
 12791                           prodh	equ	0xFF4
 12792                           prodl	equ	0xFF3
 12793                           intcon	equ	0xFF2
 12794                           intcon3	equ	0xFF0
 12795                           postinc0	equ	0xFEE
 12796                           wreg	equ	0xFE8
 12797                           indf1	equ	0xFE7
 12798                           postdec1	equ	0xFE5
 12799                           fsr1h	equ	0xFE2
 12800                           fsr1l	equ	0xFE1
 12801                           indf2	equ	0xFDF
 12802                           fsr2h	equ	0xFDA
 12803                           fsr2l	equ	0xFD9
 12804                           status	equ	0xFD8
 12805                           
 12806 ;; *************** function _moduleResync *****************
 12807 ;; Defined at:
 12808 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;		None
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 12813 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  1    wreg      void 
 12816 ;; Registers used:
 12817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0
 12824 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12826 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12827 ;;Total ram usage:        3 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:   14
 12830 ;; This function calls:
 12831 ;;		_MOTEapp_getModuleResponse
 12832 ;;		_moteApp_delayms
 12833 ;;		_sendCommand
 12834 ;; This function is called by:
 12835 ;;		_main
 12836 ;;		_moteApp_GoToSleep
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text40
 12841  00460E                     __ptext40:
 12842                           	opt stack 0
 12843  00460E                     _moduleResync:
 12844                           	opt stack 13
 12845                           
 12846                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 12847                           
 12848                           ;incstack = 0
 12849  00460E  0E00               	movlw	0
 12850  004610  0100               	movlb	0	; () banked
 12851  004612  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12852                           
 12853                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 12854  004614  0E00               	movlw	0
 12855  004616  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 12856  004618  0E00               	movlw	0
 12857  00461A  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 12861  00461C  9AAC               	bcf	4012,5,c	;volatile
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 12865  00461E  9C8B               	bcf	3979,6,c	;volatile
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;MOTEapp.c: 147: moteApp_delayms(10);
 12869  004620  0E00               	movlw	0
 12870  004622  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12871  004624  0E0A               	movlw	10
 12872  004626  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12873  004628  ECAA  F029         	call	_moteApp_delayms	;wreg free
 12874                           
 12875                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 12876  00462C  8AAC               	bsf	4012,5,c	;volatile
 12877                           
 12878                           ;MOTEapp.c: 149: moteApp_delayms(5);
 12879  00462E  0E00               	movlw	0
 12880  004630  0100               	movlb	0	; () banked
 12881  004632  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12882  004634  0E05               	movlw	5
 12883  004636  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12884  004638  ECAA  F029         	call	_moteApp_delayms	;wreg free
 12885                           
 12886                           ;MOTEapp.c: 151: TXREG = 0x55;
 12887  00463C  0E55               	movlw	85
 12888  00463E  6EAD               	movwf	4013,c	;volatile
 12889  004640                     
 12890                           ;MOTEapp.c: 153: {};
 12891  004640  A2AC               	btfss	4012,1,c	;volatile
 12892  004642  D7FE               	goto	l337
 12893                           
 12894                           ;MOTEapp.c: 155: sendCommand("z");
 12895  004644  0EFC               	movlw	low STR_21
 12896  004646  0100               	movlb	0	; () banked
 12897  004648  6F61               	movwf	sendCommand@string& (0+255),b
 12898  00464A  0E7F               	movlw	high STR_21
 12899  00464C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12900  00464E  EC0D  F02A         	call	_sendCommand	;wreg free
 12901                           
 12902                           ;MOTEapp.c: 157: moteApp_delayms(40);
 12903  004652  0E00               	movlw	0
 12904  004654  0100               	movlb	0	; () banked
 12905  004656  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12906  004658  0E28               	movlw	40
 12907  00465A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12908  00465C  ECAA  F029         	call	_moteApp_delayms	;wreg free
 12909                           
 12910                           ;MOTEapp.c: 158: while (escapeEvent)
 12911  004660  D013               	goto	l343
 12912  004662                     
 12913                           ;MOTEapp.c: 159: {
 12914                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 12915  004662  EC10  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 12916  004666  0900               	iorlw	0
 12917  004668  B4D8               	btfsc	status,2,c
 12918  00466A  D003               	goto	l341
 12919                           
 12920                           ;MOTEapp.c: 161: escapeEvent = 1;
 12921  00466C  0E01               	movlw	1
 12922  00466E  0100               	movlb	0	; () banked
 12923  004670  D00A               	goto	L6
 12924  004672                     l341:
 12925                           
 12926                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 12927                           
 12928                           ; BSR set to: 0
 12929  004672  0100               	movlb	0	; () banked
 12930  004674  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 12931  004676  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 12932  004678  0E89               	movlw	137
 12933  00467A  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 12934  00467C  0E13               	movlw	19
 12935  00467E  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 12936  004680  A0D8               	btfss	status,0,c
 12937  004682  D002               	goto	l343
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;MOTEapp.c: 163: escapeEvent = 1;
 12941  004684  0E01               	movlw	1
 12942  004686                     L6:
 12943  004686  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12944  004688                     l343:
 12945                           
 12946                           ; BSR set to: 0
 12947                           
 12948                           ; BSR set to: 0
 12949  004688  0100               	movlb	0	; () banked
 12950  00468A  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 12951  00468C  B4D8               	btfsc	status,2,c
 12952  00468E  0012               	return	
 12953  004690  D7E8               	goto	l340
 12954  004692                     __end_of_moduleResync:
 12955                           	opt stack 0
 12956                           tblptru	equ	0xFF8
 12957                           tblptrh	equ	0xFF7
 12958                           tblptrl	equ	0xFF6
 12959                           tablat	equ	0xFF5
 12960                           prodh	equ	0xFF4
 12961                           prodl	equ	0xFF3
 12962                           intcon	equ	0xFF2
 12963                           intcon3	equ	0xFF0
 12964                           postinc0	equ	0xFEE
 12965                           wreg	equ	0xFE8
 12966                           indf1	equ	0xFE7
 12967                           postdec1	equ	0xFE5
 12968                           fsr1h	equ	0xFE2
 12969                           fsr1l	equ	0xFE1
 12970                           indf2	equ	0xFDF
 12971                           fsr2h	equ	0xFDA
 12972                           fsr2l	equ	0xFD9
 12973                           status	equ	0xFD8
 12974                           
 12975 ;; *************** function _MOTEapp_getModuleResponse *****************
 12976 ;; Defined at:
 12977 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;		None
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 12982 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      unsigned char 
 12985 ;; Registers used:
 12986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0
 12993 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12995 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12996 ;;Total ram usage:        2 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:   12
 12999 ;; This function calls:
 13000 ;;		_EUSART_Read
 13001 ;; This function is called by:
 13002 ;;		_moduleResync
 13003 ;;		_moteHandler
 13004 ;;		_moteApp_setSensorsInput
 13005 ;;		_moteApp_getTempValue
 13006 ;;		_moteApp_getLightValue
 13007 ;; This function uses a non-reentrant model
 13008 ;;
 13009                           
 13010                           	psect	text41
 13011  004C20                     __ptext41:
 13012                           	opt stack 0
 13013  004C20                     _MOTEapp_getModuleResponse:
 13014                           	opt stack 15
 13015                           
 13016                           ;MOTEapp.c: 1076: bool terminatorReceived = 0;
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;incstack = 0
 13020  004C20  0E00               	movlw	0
 13021  004C22  0100               	movlb	0	; () banked
 13022  004C24  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13023                           
 13024                           ;MOTEapp.c: 1078: if ((eusartRxCount))
 13025  004C26  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13026  004C28  B4D8               	btfsc	status,2,c
 13027  004C2A  D02B               	goto	l626
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;MOTEapp.c: 1079: {
 13031                           ;MOTEapp.c: 1080: uint8_t bufferByte = 0;
 13032  004C2C  0E00               	movlw	0
 13033  004C2E  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;MOTEapp.c: 1081: bufferByte = EUSART_Read();
 13037  004C30  EC22  F029         	call	_EUSART_Read	;wreg free
 13038  004C34  0100               	movlb	0	; () banked
 13039  004C36  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;MOTEapp.c: 1083: if (bufferByte == 0x0D)
 13043  004C38  0E0D               	movlw	13
 13044  004C3A  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13045  004C3C  A4D8               	btfss	status,2,c
 13046  004C3E  D00F               	goto	l621
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;MOTEapp.c: 1084: {
 13050                           ;MOTEapp.c: 1085: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13051  004C40  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13052  004C42  0D01               	mullw	1
 13053  004C44  0E64               	movlw	low _moduleResonseBuffer
 13054  004C46  24F3               	addwf	prodl,w,c
 13055  004C48  6ED9               	movwf	fsr2l,c
 13056  004C4A  0E01               	movlw	high _moduleResonseBuffer
 13057  004C4C  20F4               	addwfc	prodh,w,c
 13058  004C4E  6EDA               	movwf	fsr2h,c
 13059  004C50  0E00               	movlw	0
 13060  004C52  6EDF               	movwf	indf2,c
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;MOTEapp.c: 1086: terminatorReceived = 1;
 13064  004C54  0E01               	movlw	1
 13065  004C56  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;MOTEapp.c: 1087: moduleBufferIndex = 0;
 13069  004C58  0E00               	movlw	0
 13070  004C5A  6FF2               	movwf	_moduleBufferIndex& (0+255),b
 13071                           
 13072                           ;MOTEapp.c: 1088: }
 13073  004C5C  D012               	goto	l626
 13074  004C5E                     l621:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;MOTEapp.c: 1089: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13078                           
 13079                           ; BSR set to: 0
 13080  004C5E  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13081  004C60  B4D8               	btfsc	status,2,c
 13082  004C62  D00F               	goto	l626
 13083                           
 13084                           ; BSR set to: 0
 13085  004C64  0E0A               	movlw	10
 13086  004C66  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13087  004C68  B4D8               	btfsc	status,2,c
 13088  004C6A  D00B               	goto	l626
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;MOTEapp.c: 1093: else
 13092                           ;MOTEapp.c: 1094: {
 13093                           ;MOTEapp.c: 1095: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13094                           
 13095                           ; BSR set to: 0
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;MOTEapp.c: 1090: {
 13099                           ;MOTEapp.c: 1092: }
 13100  004C6C  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13101  004C6E  0D01               	mullw	1
 13102  004C70  0E64               	movlw	low _moduleResonseBuffer
 13103  004C72  24F3               	addwf	prodl,w,c
 13104  004C74  6ED9               	movwf	fsr2l,c
 13105  004C76  0E01               	movlw	high _moduleResonseBuffer
 13106  004C78  20F4               	addwfc	prodh,w,c
 13107  004C7A  6EDA               	movwf	fsr2h,c
 13108  004C7C  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13109                           
 13110                           ; BSR set to: 0
 13111                           ;MOTEapp.c: 1097: moduleBufferIndex++;
 13112  004C80  2BF2               	incf	_moduleBufferIndex& (0+255),f,b
 13113  004C82                     l626:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;MOTEapp.c: 1098: }
 13117                           ;MOTEapp.c: 1099: }
 13118                           ;MOTEapp.c: 1100: return terminatorReceived;
 13119                           
 13120                           ; BSR set to: 0
 13121                           
 13122                           ; BSR set to: 0
 13123                           
 13124                           ; BSR set to: 0
 13125  004C82  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13126  004C84  0012               	return	
 13127  004C86                     __end_of_MOTEapp_getModuleResponse:
 13128                           	opt stack 0
 13129                           tblptru	equ	0xFF8
 13130                           tblptrh	equ	0xFF7
 13131                           tblptrl	equ	0xFF6
 13132                           tablat	equ	0xFF5
 13133                           prodh	equ	0xFF4
 13134                           prodl	equ	0xFF3
 13135                           intcon	equ	0xFF2
 13136                           intcon3	equ	0xFF0
 13137                           postinc0	equ	0xFEE
 13138                           wreg	equ	0xFE8
 13139                           indf1	equ	0xFE7
 13140                           postdec1	equ	0xFE5
 13141                           fsr1h	equ	0xFE2
 13142                           fsr1l	equ	0xFE1
 13143                           indf2	equ	0xFDF
 13144                           fsr2h	equ	0xFDA
 13145                           fsr2l	equ	0xFD9
 13146                           status	equ	0xFD8
 13147                           
 13148 ;; *************** function _EUSART_FlushBuffer *****************
 13149 ;; Defined at:
 13150 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  index           1    0[BANK0 ] unsigned char 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0
 13165 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13167 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13168 ;;Total ram usage:        1 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:   11
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_test_powerup
 13175 ;;		_moteApp_GoToSleep
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text42
 13180  00508C                     __ptext42:
 13181                           	opt stack 0
 13182  00508C                     _EUSART_FlushBuffer:
 13183                           	opt stack 18
 13184                           
 13185                           ;eusart.c: 204: uint8_t index;
 13186                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;incstack = 0
 13190  00508C  0E00               	movlw	0
 13191  00508E  0100               	movlb	0	; () banked
 13192  005090  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13193  005092                     l8401:
 13194                           
 13195                           ; BSR set to: 0
 13196  005092  0E3F               	movlw	63
 13197  005094  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13198  005096  D001               	goto	l1232
 13199  005098  D00C               	goto	u6410
 13200  00509A                     l1232:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;eusart.c: 206: {
 13204                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13205                           
 13206                           ; BSR set to: 0
 13207  00509A  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13208  00509C  0D01               	mullw	1
 13209  00509E  0E00               	movlw	low _eusartRxBuffer
 13210  0050A0  24F3               	addwf	prodl,w,c
 13211  0050A2  6ED9               	movwf	fsr2l,c
 13212  0050A4  0E02               	movlw	high _eusartRxBuffer
 13213  0050A6  20F4               	addwfc	prodh,w,c
 13214  0050A8  6EDA               	movwf	fsr2h,c
 13215  0050AA  0E00               	movlw	0
 13216  0050AC  6EDF               	movwf	indf2,c
 13217                           
 13218                           ; BSR set to: 0
 13219  0050AE  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13220  0050B0  D7F0               	goto	l8401
 13221  0050B2                     u6410:
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;eusart.c: 208: }
 13225                           ;eusart.c: 209: eusartRxHead = 0;
 13226                           
 13227                           ; BSR set to: 0
 13228  0050B2  0E00               	movlw	0
 13229  0050B4  6FE0               	movwf	_eusartRxHead& (0+255),b
 13230                           
 13231                           ;eusart.c: 210: eusartRxTail = 0;
 13232  0050B6  0E00               	movlw	0
 13233  0050B8  6FDF               	movwf	_eusartRxTail& (0+255),b
 13234                           
 13235                           ;eusart.c: 211: eusartRxCount = 0;
 13236  0050BA  0E00               	movlw	0
 13237  0050BC  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13241  0050BE  989D               	bcf	3997,4,c	;volatile
 13242                           
 13243                           ;eusart.c: 214: eusartTxHead = 0;
 13244  0050C0  0E00               	movlw	0
 13245  0050C2  6FE3               	movwf	_eusartTxHead& (0+255),b
 13246                           
 13247                           ;eusart.c: 215: eusartTxTail = 0;
 13248  0050C4  0E00               	movlw	0
 13249  0050C6  6FE2               	movwf	_eusartTxTail& (0+255),b
 13250                           
 13251                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13252  0050C8  0E40               	movlw	64
 13253  0050CA  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13254                           
 13255                           ; BSR set to: 0
 13256  0050CC  0012               	return		;funcret
 13257  0050CE                     __end_of_EUSART_FlushBuffer:
 13258                           	opt stack 0
 13259                           tblptru	equ	0xFF8
 13260                           tblptrh	equ	0xFF7
 13261                           tblptrl	equ	0xFF6
 13262                           tablat	equ	0xFF5
 13263                           prodh	equ	0xFF4
 13264                           prodl	equ	0xFF3
 13265                           intcon	equ	0xFF2
 13266                           intcon3	equ	0xFF0
 13267                           postinc0	equ	0xFEE
 13268                           wreg	equ	0xFE8
 13269                           indf1	equ	0xFE7
 13270                           postdec1	equ	0xFE5
 13271                           fsr1h	equ	0xFE2
 13272                           fsr1l	equ	0xFE1
 13273                           indf2	equ	0xFDF
 13274                           fsr2h	equ	0xFDA
 13275                           fsr2l	equ	0xFD9
 13276                           status	equ	0xFD8
 13277                           
 13278 ;; *************** function _TMR2_ReadTimer *****************
 13279 ;; Defined at:
 13280 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;		None
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;  readVal         1    0[BANK0 ] unsigned char 
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  1    wreg      unsigned char 
 13287 ;; Registers used:
 13288 ;;		wreg, status,2
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13294 ;;      Params:         0       0       0       0       0       0       0       0       0
 13295 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13297 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13298 ;;Total ram usage:        1 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:   11
 13301 ;; This function calls:
 13302 ;;		Nothing
 13303 ;; This function is called by:
 13304 ;;		_moteRunningProcess
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text43
 13309  0058BA                     __ptext43:
 13310                           	opt stack 0
 13311  0058BA                     _TMR2_ReadTimer:
 13312                           	opt stack 17
 13313                           
 13314                           ;tmr2.c: 88: uint8_t readVal;
 13315                           ;tmr2.c: 90: readVal = TMR2;
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;incstack = 0
 13319  0058BA  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13320                           
 13321                           ;tmr2.c: 92: return readVal;
 13322  0058BE  0100               	movlb	0	; () banked
 13323  0058C0  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13324  0058C2  0012               	return	
 13325  0058C4                     __end_of_TMR2_ReadTimer:
 13326                           	opt stack 0
 13327                           tblptru	equ	0xFF8
 13328                           tblptrh	equ	0xFF7
 13329                           tblptrl	equ	0xFF6
 13330                           tablat	equ	0xFF5
 13331                           prodh	equ	0xFF4
 13332                           prodl	equ	0xFF3
 13333                           intcon	equ	0xFF2
 13334                           intcon3	equ	0xFF0
 13335                           postinc0	equ	0xFEE
 13336                           wreg	equ	0xFE8
 13337                           indf1	equ	0xFE7
 13338                           postdec1	equ	0xFE5
 13339                           fsr1h	equ	0xFE2
 13340                           fsr1l	equ	0xFE1
 13341                           indf2	equ	0xFDF
 13342                           fsr2h	equ	0xFDA
 13343                           fsr2l	equ	0xFD9
 13344                           status	equ	0xFD8
 13345                           
 13346 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13347 ;; Defined at:
 13348 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;  dr              1    wreg     unsigned char 
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;  dr              1    4[BANK0 ] unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  1    wreg      void 
 13355 ;; Registers used:
 13356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13362 ;;      Params:         0       0       0       0       0       0       0       0       0
 13363 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13364 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13365 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13366 ;;Total ram usage:        2 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:   14
 13369 ;; This function calls:
 13370 ;;		_sendCommand
 13371 ;; This function is called by:
 13372 ;;		_moteRunningProcess
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text44
 13377  00230A                     __ptext44:
 13378                           	opt stack 0
 13379  00230A                     _MOTEapp_SetDataRateSetting:
 13380                           	opt stack 14
 13381                           
 13382                           ; BSR set to: 0
 13383                           ;incstack = 0
 13384                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13385  00230A  0100               	movlb	0	; () banked
 13386  00230C  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13387                           
 13388                           ;MOTEapp.c: 983: if (dr != 8)
 13389  00230E  0E08               	movlw	8
 13390  002310  0100               	movlb	0	; () banked
 13391  002312  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13392  002314  B4D8               	btfsc	status,2,c
 13393  002316  D06A               	goto	l591
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;MOTEapp.c: 984: {
 13397                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 13398  002318  0EA3               	movlw	low STR_163
 13399  00231A  6F61               	movwf	sendCommand@string& (0+255),b
 13400  00231C  0E7C               	movlw	high STR_163
 13401  00231E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13402  002320  EC0D  F02A         	call	_sendCommand	;wreg free
 13403                           
 13404                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 13405  002324  0EFA               	movlw	250
 13406  002326  0100               	movlb	0	; () banked
 13407  002328  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13408  00232A  0E58               	movlw	88
 13409  00232C                     u11007:
 13410  00232C  2EE8               	decfsz	wreg,f,c
 13411  00232E  D7FE               	bra	u11007
 13412  002330  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13413  002332  D7FC               	bra	u11007
 13414  002334  F000               	nop	
 13415                           
 13416                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 13417  002336  0EFA               	movlw	250
 13418  002338  0100               	movlb	0	; () banked
 13419  00233A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13420  00233C  0E58               	movlw	88
 13421  00233E                     u11017:
 13422  00233E  2EE8               	decfsz	wreg,f,c
 13423  002340  D7FE               	bra	u11017
 13424  002342  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13425  002344  D7FC               	bra	u11017
 13426  002346  F000               	nop	
 13427                           
 13428                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 13429  002348  0EFA               	movlw	250
 13430  00234A  0100               	movlb	0	; () banked
 13431  00234C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13432  00234E  0E58               	movlw	88
 13433  002350                     u11027:
 13434  002350  2EE8               	decfsz	wreg,f,c
 13435  002352  D7FE               	bra	u11027
 13436  002354  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13437  002356  D7FC               	bra	u11027
 13438  002358  F000               	nop	
 13439                           
 13440                           ;MOTEapp.c: 989: }
 13441                           ;MOTEapp.c: 991: switch (dr)
 13442  00235A  D048               	goto	l591
 13443  00235C                     
 13444                           ;MOTEapp.c: 994: sendCommand("mac set dr 0");
 13445  00235C  0E7F               	movlw	low STR_164
 13446  00235E  0100               	movlb	0	; () banked
 13447  002360  6F61               	movwf	sendCommand@string& (0+255),b
 13448  002362  0E7D               	movlw	high STR_164
 13449  002364  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13450  002366  EC0D  F02A         	call	_sendCommand	;wreg free
 13451                           
 13452                           ;MOTEapp.c: 995: break;
 13453  00236A  D05D               	goto	l593
 13454  00236C                     
 13455                           ;MOTEapp.c: 997: sendCommand("mac set dr 1");
 13456  00236C  0E8C               	movlw	low STR_165
 13457  00236E  0100               	movlb	0	; () banked
 13458  002370  6F61               	movwf	sendCommand@string& (0+255),b
 13459  002372  0E7D               	movlw	high STR_165
 13460  002374  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13461  002376  EC0D  F02A         	call	_sendCommand	;wreg free
 13462                           
 13463                           ;MOTEapp.c: 998: break;
 13464  00237A  D055               	goto	l593
 13465  00237C                     
 13466                           ;MOTEapp.c: 1000: sendCommand("mac set dr 2");
 13467  00237C  0E99               	movlw	low STR_166
 13468  00237E  0100               	movlb	0	; () banked
 13469  002380  6F61               	movwf	sendCommand@string& (0+255),b
 13470  002382  0E7D               	movlw	high STR_166
 13471  002384  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13472  002386  EC0D  F02A         	call	_sendCommand	;wreg free
 13473                           
 13474                           ;MOTEapp.c: 1001: break;
 13475  00238A  D04D               	goto	l593
 13476  00238C                     
 13477                           ;MOTEapp.c: 1003: sendCommand("mac set dr 3");
 13478  00238C  0EA6               	movlw	low STR_167
 13479  00238E  0100               	movlb	0	; () banked
 13480  002390  6F61               	movwf	sendCommand@string& (0+255),b
 13481  002392  0E7D               	movlw	high STR_167
 13482  002394  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13483  002396  EC0D  F02A         	call	_sendCommand	;wreg free
 13484                           
 13485                           ;MOTEapp.c: 1004: break;
 13486  00239A  D045               	goto	l593
 13487  00239C                     
 13488                           ;MOTEapp.c: 1006: sendCommand("mac set dr 4");
 13489  00239C  0EB3               	movlw	low STR_168
 13490  00239E  0100               	movlb	0	; () banked
 13491  0023A0  6F61               	movwf	sendCommand@string& (0+255),b
 13492  0023A2  0E7D               	movlw	high STR_168
 13493  0023A4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13494  0023A6  EC0D  F02A         	call	_sendCommand	;wreg free
 13495                           
 13496                           ;MOTEapp.c: 1007: break;
 13497  0023AA  D03D               	goto	l593
 13498  0023AC                     
 13499                           ;MOTEapp.c: 1009: sendCommand("mac set dr 5");
 13500  0023AC  0EC0               	movlw	low STR_169
 13501  0023AE  0100               	movlb	0	; () banked
 13502  0023B0  6F61               	movwf	sendCommand@string& (0+255),b
 13503  0023B2  0E7D               	movlw	high STR_169
 13504  0023B4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13505  0023B6  EC0D  F02A         	call	_sendCommand	;wreg free
 13506                           
 13507                           ;MOTEapp.c: 1010: break;
 13508  0023BA  D035               	goto	l593
 13509  0023BC                     
 13510                           ;MOTEapp.c: 1012: sendCommand("mac set dr 6");
 13511  0023BC  0ECD               	movlw	low STR_170
 13512  0023BE  0100               	movlb	0	; () banked
 13513  0023C0  6F61               	movwf	sendCommand@string& (0+255),b
 13514  0023C2  0E7D               	movlw	high STR_170
 13515  0023C4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13516  0023C6  EC0D  F02A         	call	_sendCommand	;wreg free
 13517                           
 13518                           ;MOTEapp.c: 1013: break;
 13519  0023CA  D02D               	goto	l593
 13520  0023CC                     
 13521                           ;MOTEapp.c: 1015: sendCommand("mac set dr 7");
 13522  0023CC  0EDA               	movlw	low STR_171
 13523  0023CE  0100               	movlb	0	; () banked
 13524  0023D0  6F61               	movwf	sendCommand@string& (0+255),b
 13525  0023D2  0E7D               	movlw	high STR_171
 13526  0023D4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13527  0023D6  EC0D  F02A         	call	_sendCommand	;wreg free
 13528                           
 13529                           ;MOTEapp.c: 1016: break;
 13530  0023DA  D025               	goto	l593
 13531  0023DC                     
 13532                           ;MOTEapp.c: 1018: sendCommand("mac set adr on");
 13533  0023DC  0EF1               	movlw	low STR_172
 13534  0023DE  0100               	movlb	0	; () banked
 13535  0023E0  6F61               	movwf	sendCommand@string& (0+255),b
 13536  0023E2  0E7C               	movlw	high STR_172
 13537  0023E4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13538  0023E6  EC0D  F02A         	call	_sendCommand	;wreg free
 13539                           
 13540                           ;MOTEapp.c: 1020: }
 13541                           
 13542                           ;MOTEapp.c: 1019: break;
 13543  0023EA  D01D               	goto	l593
 13544  0023EC                     l591:
 13545  0023EC  0100               	movlb	0	; () banked
 13546  0023EE  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13547                           
 13548                           ; Switch size 1, requested type "space"
 13549                           ; Number of cases is 9, Range of values is 0 to 8
 13550                           ; switch strategies available:
 13551                           ; Name         Instructions Cycles
 13552                           ; simple_byte           28    15 (average)
 13553                           ;	Chosen strategy is simple_byte
 13554  0023F0  0A00               	xorlw	0	; case 0
 13555  0023F2  B4D8               	btfsc	status,2,c
 13556  0023F4  D7B3               	goto	l592
 13557  0023F6  0A01               	xorlw	1	; case 1
 13558  0023F8  B4D8               	btfsc	status,2,c
 13559  0023FA  D7B8               	goto	l594
 13560  0023FC  0A03               	xorlw	3	; case 2
 13561  0023FE  B4D8               	btfsc	status,2,c
 13562  002400  D7BD               	goto	l595
 13563  002402  0A01               	xorlw	1	; case 3
 13564  002404  B4D8               	btfsc	status,2,c
 13565  002406  D7C2               	goto	l596
 13566  002408  0A07               	xorlw	7	; case 4
 13567  00240A  B4D8               	btfsc	status,2,c
 13568  00240C  D7C7               	goto	l597
 13569  00240E  0A01               	xorlw	1	; case 5
 13570  002410  B4D8               	btfsc	status,2,c
 13571  002412  D7CC               	goto	l598
 13572  002414  0A03               	xorlw	3	; case 6
 13573  002416  B4D8               	btfsc	status,2,c
 13574  002418  D7D1               	goto	l599
 13575  00241A  0A01               	xorlw	1	; case 7
 13576  00241C  B4D8               	btfsc	status,2,c
 13577  00241E  D7D6               	goto	l600
 13578  002420  0A0F               	xorlw	15	; case 8
 13579  002422  B4D8               	btfsc	status,2,c
 13580  002424  D7DB               	goto	l601
 13581  002426                     l593:
 13582                           
 13583                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 13584                           
 13585                           ; BSR set to: 0
 13586  002426  0EFA               	movlw	250
 13587  002428  0100               	movlb	0	; () banked
 13588  00242A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13589  00242C  0E58               	movlw	88
 13590  00242E                     u11037:
 13591  00242E  2EE8               	decfsz	wreg,f,c
 13592  002430  D7FE               	bra	u11037
 13593  002432  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13594  002434  D7FC               	bra	u11037
 13595  002436  F000               	nop	
 13596                           
 13597                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 13598  002438  0EFA               	movlw	250
 13599  00243A  0100               	movlb	0	; () banked
 13600  00243C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13601  00243E  0E58               	movlw	88
 13602  002440                     u11047:
 13603  002440  2EE8               	decfsz	wreg,f,c
 13604  002442  D7FE               	bra	u11047
 13605  002444  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13606  002446  D7FC               	bra	u11047
 13607  002448  F000               	nop	
 13608                           
 13609                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 13610  00244A  0EFA               	movlw	250
 13611  00244C  0100               	movlb	0	; () banked
 13612  00244E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13613  002450  0E58               	movlw	88
 13614  002452                     u11057:
 13615  002452  2EE8               	decfsz	wreg,f,c
 13616  002454  D7FE               	bra	u11057
 13617  002456  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13618  002458  D7FC               	bra	u11057
 13619  00245A  F000               	nop	
 13620                           
 13621                           ;MOTEapp.c: 1024: sendCommand("mac save");
 13622  00245C  0E2B               	movlw	low STR_173
 13623  00245E  0100               	movlb	0	; () banked
 13624  002460  6F61               	movwf	sendCommand@string& (0+255),b
 13625  002462  0E7F               	movlw	high STR_173
 13626  002464  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13627  002466  EC0D  F02A         	call	_sendCommand	;wreg free
 13628  00246A  0012               	return		;funcret
 13629  00246C                     __end_of_MOTEapp_SetDataRateSetting:
 13630                           	opt stack 0
 13631                           tblptru	equ	0xFF8
 13632                           tblptrh	equ	0xFF7
 13633                           tblptrl	equ	0xFF6
 13634                           tablat	equ	0xFF5
 13635                           prodh	equ	0xFF4
 13636                           prodl	equ	0xFF3
 13637                           intcon	equ	0xFF2
 13638                           intcon3	equ	0xFF0
 13639                           postinc0	equ	0xFEE
 13640                           wreg	equ	0xFE8
 13641                           indf1	equ	0xFE7
 13642                           postdec1	equ	0xFE5
 13643                           fsr1h	equ	0xFE2
 13644                           fsr1l	equ	0xFE1
 13645                           indf2	equ	0xFDF
 13646                           fsr2h	equ	0xFDA
 13647                           fsr2l	equ	0xFD9
 13648                           status	equ	0xFD8
 13649                           
 13650 ;; *************** function _ADC_TempConversion *****************
 13651 ;; Defined at:
 13652 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  tempRaw         1    wreg     enum E5749
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;  tempRaw         1   70[BANK0 ] enum E5749
 13657 ;;  val             4   72[BANK0 ] enum E5749
 13658 ;;  temp            1   71[BANK0 ] unsigned char 
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      unsigned char 
 13661 ;; Registers used:
 13662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0
 13669 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13671 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13672 ;;Total ram usage:        6 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:   12
 13675 ;; This function calls:
 13676 ;;		___fladd
 13677 ;;		___fldiv
 13678 ;;		___flmul
 13679 ;;		___fltol
 13680 ;;		___xxtofl
 13681 ;; This function is called by:
 13682 ;;		_moteHandler
 13683 ;;		_moteRunningProcess
 13684 ;;		_moteApp_testSensors
 13685 ;;		_test_adc
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           	psect	text45
 13690  00300C                     __ptext45:
 13691                           	opt stack 0
 13692  00300C                     _ADC_TempConversion:
 13693                           	opt stack 16
 13694                           
 13695                           ;incstack = 0
 13696                           ;ADC_TempConversion@tempRaw stored from wreg
 13697  00300C  0100               	movlb	0	; () banked
 13698  00300E  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13699                           
 13700                           ;adc.c: 138: uint8_t temp;
 13701                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 13702  003010  0ECD               	movlw	205
 13703  003012  0100               	movlb	0	; () banked
 13704  003014  6F78               	movwf	___flmul@a& (0+255),b
 13705  003016  0ECC               	movlw	204
 13706  003018  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13707  00301A  0E4C               	movlw	76
 13708  00301C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13709  00301E  0E40               	movlw	64
 13710  003020  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13711  003022  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 13712  003024  6F60               	movwf	___xxtofl@val& (0+255),b
 13713  003026  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13714  003028  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13715  00302A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13716  00302C  0E00               	movlw	0
 13717  00302E  EC36  F012         	call	___xxtofl
 13718  003032  C060  F074         	movff	?___xxtofl,___flmul@b
 13719  003036  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 13720  00303A  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 13721  00303E  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 13722  003042  ECA3  F00A         	call	___flmul	;wreg free
 13723  003046  C074  F08D         	movff	?___flmul,___fldiv@b
 13724  00304A  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 13725  00304E  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 13726  003052  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 13727  003056  0E00               	movlw	0
 13728  003058  0100               	movlb	0	; () banked
 13729  00305A  6F91               	movwf	___fldiv@a& (0+255),b
 13730  00305C  0E00               	movlw	0
 13731  00305E  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 13732  003060  0E80               	movlw	128
 13733  003062  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 13734  003064  0E44               	movlw	68
 13735  003066  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 13736  003068  ECEB  F00D         	call	___fldiv	;wreg free
 13737  00306C  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 13738  003070  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 13739  003074  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 13740  003078  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 13741                           
 13742                           ;adc.c: 141: val = ((val - 0.5)*100);
 13743  00307C  0E00               	movlw	0
 13744  00307E  0100               	movlb	0	; () banked
 13745  003080  6F64               	movwf	___fladd@a& (0+255),b
 13746  003082  0E00               	movlw	0
 13747  003084  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13748  003086  0E00               	movlw	0
 13749  003088  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13750  00308A  0EBF               	movlw	191
 13751  00308C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13752  00308E  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 13753  003092  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 13754  003096  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 13755  00309A  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 13756  00309E  EC4C  F00C         	call	___fladd	;wreg free
 13757  0030A2  C060  F074         	movff	?___fladd,___flmul@b
 13758  0030A6  C061  F075         	movff	?___fladd+1,___flmul@b+1
 13759  0030AA  C062  F076         	movff	?___fladd+2,___flmul@b+2
 13760  0030AE  C063  F077         	movff	?___fladd+3,___flmul@b+3
 13761  0030B2  0E00               	movlw	0
 13762  0030B4  0100               	movlb	0	; () banked
 13763  0030B6  6F78               	movwf	___flmul@a& (0+255),b
 13764  0030B8  0E00               	movlw	0
 13765  0030BA  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13766  0030BC  0EC8               	movlw	200
 13767  0030BE  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13768  0030C0  0E42               	movlw	66
 13769  0030C2  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13770  0030C4  ECA3  F00A         	call	___flmul	;wreg free
 13771  0030C8  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 13772  0030CC  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 13773  0030D0  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 13774  0030D4  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 13775                           
 13776                           ;adc.c: 142: temp = (uint8_t) val;
 13777  0030D8  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 13778  0030DC  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 13779  0030E0  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 13780  0030E4  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 13781  0030E8  ECB2  F01A         	call	___fltol	;wreg free
 13782  0030EC  0100               	movlb	0	; () banked
 13783  0030EE  5160               	movf	?___fltol& (0+255),w,b
 13784  0030F0  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;adc.c: 144: return temp;
 13788  0030F2  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 13789  0030F4  0012               	return	
 13790  0030F6                     __end_of_ADC_TempConversion:
 13791                           	opt stack 0
 13792                           tblptru	equ	0xFF8
 13793                           tblptrh	equ	0xFF7
 13794                           tblptrl	equ	0xFF6
 13795                           tablat	equ	0xFF5
 13796                           prodh	equ	0xFF4
 13797                           prodl	equ	0xFF3
 13798                           intcon	equ	0xFF2
 13799                           intcon3	equ	0xFF0
 13800                           postinc0	equ	0xFEE
 13801                           wreg	equ	0xFE8
 13802                           indf1	equ	0xFE7
 13803                           postdec1	equ	0xFE5
 13804                           fsr1h	equ	0xFE2
 13805                           fsr1l	equ	0xFE1
 13806                           indf2	equ	0xFDF
 13807                           fsr2h	equ	0xFDA
 13808                           fsr2l	equ	0xFD9
 13809                           status	equ	0xFD8
 13810                           
 13811 ;; *************** function ___xxtofl *****************
 13812 ;; Defined at:
 13813 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;  sign            1    wreg     unsigned char 
 13816 ;;  val             4    0[BANK0 ] long 
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;  sign            1    8[BANK0 ] unsigned char 
 13819 ;;  arg             4   10[BANK0 ] unsigned long 
 13820 ;;  exp             1    9[BANK0 ] unsigned char 
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  4    0[BANK0 ] unsigned char 
 13823 ;; Registers used:
 13824 ;;		wreg, status,2, status,0
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13830 ;;      Params:         0       4       0       0       0       0       0       0       0
 13831 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13832 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13833 ;;      Totals:         0      14       0       0       0       0       0       0       0
 13834 ;;Total ram usage:       14 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; Hardware stack levels required when called:   11
 13837 ;; This function calls:
 13838 ;;		Nothing
 13839 ;; This function is called by:
 13840 ;;		_ADC_TempConversion
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           
 13844                           	psect	text46
 13845  00246C                     __ptext46:
 13846                           	opt stack 0
 13847  00246C                     ___xxtofl:
 13848                           	opt stack 16
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;incstack = 0
 13852                           ;___xxtofl@sign stored from wreg
 13853  00246C  0100               	movlb	0	; () banked
 13854  00246E  6F68               	movwf	___xxtofl@sign& (0+255),b
 13855  002470  0100               	movlb	0	; () banked
 13856  002472  5168               	movf	___xxtofl@sign& (0+255),w,b
 13857  002474  A4D8               	btfss	status,2,c
 13858                           
 13859                           ; BSR set to: 0
 13860  002476  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 13861  002478  D01A               	goto	l2815
 13862                           
 13863                           ; BSR set to: 0
 13864  00247A  C060  F064         	movff	___xxtofl@val,??___xxtofl
 13865  00247E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 13866  002482  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 13867  002486  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 13868  00248A  1F64               	comf	??___xxtofl& (0+255),f,b
 13869  00248C  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 13870  00248E  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 13871  002490  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 13872  002492  2B64               	incf	??___xxtofl& (0+255),f,b
 13873  002494  0E00               	movlw	0
 13874  002496  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 13875  002498  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 13876  00249A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 13877  00249C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 13878  0024A0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 13879  0024A4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 13880  0024A8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 13881  0024AC  D008               	goto	l2816
 13882  0024AE                     l2815:
 13883                           
 13884                           ; BSR set to: 0
 13885  0024AE  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 13886  0024B2  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13887  0024B6  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13888  0024BA  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13889  0024BE                     l2816:
 13890                           
 13891                           ; BSR set to: 0
 13892                           
 13893                           ; BSR set to: 0
 13894  0024BE  5160               	movf	___xxtofl@val& (0+255),w,b
 13895  0024C0  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 13896  0024C2  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 13897  0024C4  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 13898  0024C6  A4D8               	btfss	status,2,c
 13899  0024C8  D009               	goto	l2817
 13900                           
 13901                           ; BSR set to: 0
 13902  0024CA  0E00               	movlw	0
 13903  0024CC  6F60               	movwf	?___xxtofl& (0+255),b
 13904  0024CE  0E00               	movlw	0
 13905  0024D0  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 13906  0024D2  0E00               	movlw	0
 13907  0024D4  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 13908  0024D6  0E00               	movlw	0
 13909  0024D8  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 13910                           
 13911                           ; BSR set to: 0
 13912  0024DA  0012               	return	
 13913  0024DC                     l2817:
 13914                           
 13915                           ; BSR set to: 0
 13916                           
 13917                           ; BSR set to: 0
 13918  0024DC  0E96               	movlw	150
 13919  0024DE  6F69               	movwf	___xxtofl@exp& (0+255),b
 13920  0024E0  D006               	goto	l2819
 13921  0024E2                     
 13922                           ; BSR set to: 0
 13923                           
 13924                           ; BSR set to: 0
 13925  0024E2  2B69               	incf	___xxtofl@exp& (0+255),f,b
 13926  0024E4  90D8               	bcf	status,0,c
 13927  0024E6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 13928  0024E8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 13929  0024EA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 13930  0024EC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 13931  0024EE                     l2819:
 13932                           
 13933                           ; BSR set to: 0
 13934                           
 13935                           ; BSR set to: 0
 13936  0024EE  0E00               	movlw	0
 13937  0024F0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 13938  0024F2  6F64               	movwf	??___xxtofl& (0+255),b
 13939  0024F4  0E00               	movlw	0
 13940  0024F6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 13941  0024F8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 13942  0024FA  0E00               	movlw	0
 13943  0024FC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 13944  0024FE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 13945  002500  0EFE               	movlw	254
 13946  002502  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 13947  002504  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 13948  002506  5164               	movf	??___xxtofl& (0+255),w,b
 13949  002508  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 13950  00250A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 13951  00250C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 13952  00250E  B4D8               	btfsc	status,2,c
 13953  002510  D00D               	goto	l2822
 13954  002512  D7E7               	goto	l2820
 13955  002514                     
 13956                           ; BSR set to: 0
 13957                           
 13958                           ; BSR set to: 0
 13959  002514  2B69               	incf	___xxtofl@exp& (0+255),f,b
 13960                           
 13961                           ; BSR set to: 0
 13962  002516  0E01               	movlw	1
 13963  002518  276A               	addwf	___xxtofl@arg& (0+255),f,b
 13964  00251A  0E00               	movlw	0
 13965  00251C  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 13966  00251E  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 13967  002520  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 13968                           
 13969                           ; BSR set to: 0
 13970  002522  90D8               	bcf	status,0,c
 13971  002524  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 13972  002526  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 13973  002528  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 13974  00252A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 13975  00252C                     l2822:
 13976                           
 13977                           ; BSR set to: 0
 13978  00252C  0E00               	movlw	0
 13979  00252E  156A               	andwf	___xxtofl@arg& (0+255),w,b
 13980  002530  6F64               	movwf	??___xxtofl& (0+255),b
 13981  002532  0E00               	movlw	0
 13982  002534  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 13983  002536  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 13984  002538  0E00               	movlw	0
 13985  00253A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 13986  00253C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 13987  00253E  0EFF               	movlw	255
 13988  002540  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 13989  002542  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 13990  002544  5164               	movf	??___xxtofl& (0+255),w,b
 13991  002546  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 13992  002548  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 13993  00254A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 13994  00254C  B4D8               	btfsc	status,2,c
 13995  00254E  D007               	goto	l2825
 13996  002550  D7E1               	goto	l2823
 13997  002552                     
 13998                           ; BSR set to: 0
 13999                           
 14000                           ; BSR set to: 0
 14001  002552  0769               	decf	___xxtofl@exp& (0+255),f,b
 14002  002554  90D8               	bcf	status,0,c
 14003  002556  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14004  002558  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14005  00255A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14006  00255C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14007  00255E                     l2825:
 14008                           
 14009                           ; BSR set to: 0
 14010                           
 14011                           ; BSR set to: 0
 14012  00255E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14013  002560  D003               	goto	u7700
 14014                           
 14015                           ; BSR set to: 0
 14016  002562  0E02               	movlw	2
 14017  002564  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14018  002566  D7F5               	goto	l2826
 14019  002568                     u7700:
 14020                           
 14021                           ; BSR set to: 0
 14022                           
 14023                           ; BSR set to: 0
 14024  002568  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14025  00256A  D008               	goto	l2830
 14026                           
 14027                           ; BSR set to: 0
 14028  00256C  0EFF               	movlw	255
 14029  00256E  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14030  002570  0EFF               	movlw	255
 14031  002572  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14032  002574  0E7F               	movlw	127
 14033  002576  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14034  002578  0EFF               	movlw	255
 14035  00257A  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14036  00257C                     l2830:
 14037                           
 14038                           ; BSR set to: 0
 14039  00257C  90D8               	bcf	status,0,c
 14040  00257E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14041  002580  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14042  002584  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14043  002586  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14044  002588  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14045  00258A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14046  00258E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14047  002590  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14048  002592  6B64               	clrf	??___xxtofl& (0+255),b
 14049  002594  5164               	movf	??___xxtofl& (0+255),w,b
 14050  002596  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14051  002598  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14052  00259A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14053  00259C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14054  00259E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14055  0025A0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14056  0025A2  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14057                           
 14058                           ; BSR set to: 0
 14059  0025A4  5168               	movf	___xxtofl@sign& (0+255),w,b
 14060  0025A6  A4D8               	btfss	status,2,c
 14061                           
 14062                           ; BSR set to: 0
 14063  0025A8  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14064  0025AA  D001               	goto	l2831
 14065                           
 14066                           ; BSR set to: 0
 14067  0025AC  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14068  0025AE                     l2831:
 14069                           
 14070                           ; BSR set to: 0
 14071                           
 14072                           ; BSR set to: 0
 14073  0025AE  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14074  0025B2  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14075  0025B6  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14076  0025BA  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14077  0025BE  0012               	return	
 14078  0025C0                     __end_of___xxtofl:
 14079                           	opt stack 0
 14080                           tblptru	equ	0xFF8
 14081                           tblptrh	equ	0xFF7
 14082                           tblptrl	equ	0xFF6
 14083                           tablat	equ	0xFF5
 14084                           prodh	equ	0xFF4
 14085                           prodl	equ	0xFF3
 14086                           intcon	equ	0xFF2
 14087                           intcon3	equ	0xFF0
 14088                           postinc0	equ	0xFEE
 14089                           wreg	equ	0xFE8
 14090                           indf1	equ	0xFE7
 14091                           postdec1	equ	0xFE5
 14092                           fsr1h	equ	0xFE2
 14093                           fsr1l	equ	0xFE1
 14094                           indf2	equ	0xFDF
 14095                           fsr2h	equ	0xFDA
 14096                           fsr2l	equ	0xFD9
 14097                           status	equ	0xFD8
 14098                           
 14099 ;; *************** function ___fltol *****************
 14100 ;; Defined at:
 14101 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14102 ;; Parameters:    Size  Location     Type
 14103 ;;  f1              4    0[BANK0 ] unsigned char 
 14104 ;; Auto vars:     Size  Location     Type
 14105 ;;  exp1            1    9[BANK0 ] unsigned char 
 14106 ;;  sign1           1    8[BANK0 ] unsigned char 
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  4    0[BANK0 ] long 
 14109 ;; Registers used:
 14110 ;;		wreg, status,2, status,0
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14116 ;;      Params:         0       4       0       0       0       0       0       0       0
 14117 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14118 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14119 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14120 ;;Total ram usage:       10 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:   11
 14123 ;; This function calls:
 14124 ;;		Nothing
 14125 ;; This function is called by:
 14126 ;;		_ADC_TempConversion
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text47
 14131  003564                     __ptext47:
 14132                           	opt stack 0
 14133  003564                     ___fltol:
 14134                           	opt stack 16
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;incstack = 0
 14138  003564  0100               	movlb	0	; () banked
 14139  003566  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14140  003568  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14141  00356A  6F69               	movwf	___fltol@exp1& (0+255),b
 14142  00356C  5169               	movf	___fltol@exp1& (0+255),w,b
 14143  00356E  A4D8               	btfss	status,2,c
 14144  003570  D009               	goto	l2468
 14145                           
 14146                           ; BSR set to: 0
 14147  003572  0E00               	movlw	0
 14148  003574  6F60               	movwf	?___fltol& (0+255),b
 14149  003576  0E00               	movlw	0
 14150  003578  6F61               	movwf	(?___fltol+1)& (0+255),b
 14151  00357A  0E00               	movlw	0
 14152  00357C  6F62               	movwf	(?___fltol+2)& (0+255),b
 14153  00357E  0E00               	movlw	0
 14154  003580  6F63               	movwf	(?___fltol+3)& (0+255),b
 14155                           
 14156                           ; BSR set to: 0
 14157  003582  0012               	return	
 14158  003584                     l2468:
 14159                           
 14160                           ; BSR set to: 0
 14161                           
 14162                           ; BSR set to: 0
 14163  003584  C060  F064         	movff	___fltol@f1,??___fltol
 14164  003588  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14165  00358C  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14166  003590  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14167  003594  0E20               	movlw	32
 14168  003596  D005               	goto	u7550
 14169  003598                     u7555:
 14170  003598  90D8               	bcf	status,0,c
 14171  00359A  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14172  00359C  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14173  00359E  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14174  0035A0  3364               	rrcf	??___fltol& (0+255),f,b
 14175  0035A2                     u7550:
 14176  0035A2  2EE8               	decfsz	wreg,f,c
 14177  0035A4  D7F9               	goto	u7555
 14178  0035A6  5164               	movf	??___fltol& (0+255),w,b
 14179  0035A8  6F68               	movwf	___fltol@sign1& (0+255),b
 14180                           
 14181                           ; BSR set to: 0
 14182  0035AA  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14183                           
 14184                           ; BSR set to: 0
 14185  0035AC  0EFF               	movlw	255
 14186  0035AE  1760               	andwf	___fltol@f1& (0+255),f,b
 14187  0035B0  0EFF               	movlw	255
 14188  0035B2  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14189  0035B4  0EFF               	movlw	255
 14190  0035B6  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14191  0035B8  0E00               	movlw	0
 14192  0035BA  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14193                           
 14194                           ; BSR set to: 0
 14195  0035BC  0E96               	movlw	150
 14196  0035BE  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14197                           
 14198                           ; BSR set to: 0
 14199  0035C0  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14200  0035C2  D016               	goto	l2470
 14201                           
 14202                           ; BSR set to: 0
 14203  0035C4  5169               	movf	___fltol@exp1& (0+255),w,b
 14204  0035C6  0A80               	xorlw	128
 14205  0035C8  0F97               	addlw	151
 14206  0035CA  B0D8               	btfsc	status,0,c
 14207  0035CC  D009               	goto	l2471
 14208                           
 14209                           ; BSR set to: 0
 14210  0035CE  0E00               	movlw	0
 14211  0035D0  6F60               	movwf	?___fltol& (0+255),b
 14212  0035D2  0E00               	movlw	0
 14213  0035D4  6F61               	movwf	(?___fltol+1)& (0+255),b
 14214  0035D6  0E00               	movlw	0
 14215  0035D8  6F62               	movwf	(?___fltol+2)& (0+255),b
 14216  0035DA  0E00               	movlw	0
 14217  0035DC  6F63               	movwf	(?___fltol+3)& (0+255),b
 14218                           
 14219                           ; BSR set to: 0
 14220  0035DE  0012               	return	
 14221  0035E0                     l2471:
 14222                           
 14223                           ; BSR set to: 0
 14224                           
 14225                           ; BSR set to: 0
 14226                           
 14227                           ; BSR set to: 0
 14228  0035E0  90D8               	bcf	status,0,c
 14229  0035E2  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14230  0035E4  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14231  0035E6  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14232  0035E8  3360               	rrcf	___fltol@f1& (0+255),f,b
 14233                           
 14234                           ; BSR set to: 0
 14235  0035EA  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14236  0035EC  D7F9               	goto	l2471
 14237                           
 14238                           ; BSR set to: 0
 14239  0035EE  D015               	goto	u7590
 14240  0035F0                     l2470:
 14241                           
 14242                           ; BSR set to: 0
 14243                           
 14244                           ; BSR set to: 0
 14245  0035F0  0E1F               	movlw	31
 14246  0035F2  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14247  0035F4  D00F               	goto	l2476
 14248                           
 14249                           ; BSR set to: 0
 14250  0035F6  0E00               	movlw	0
 14251  0035F8  6F60               	movwf	?___fltol& (0+255),b
 14252  0035FA  0E00               	movlw	0
 14253  0035FC  6F61               	movwf	(?___fltol+1)& (0+255),b
 14254  0035FE  0E00               	movlw	0
 14255  003600  6F62               	movwf	(?___fltol+2)& (0+255),b
 14256  003602  0E00               	movlw	0
 14257  003604  6F63               	movwf	(?___fltol+3)& (0+255),b
 14258                           
 14259                           ; BSR set to: 0
 14260  003606  0012               	return	
 14261  003608                     
 14262                           ; BSR set to: 0
 14263                           
 14264                           ; BSR set to: 0
 14265  003608  90D8               	bcf	status,0,c
 14266  00360A  3760               	rlcf	___fltol@f1& (0+255),f,b
 14267  00360C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14268  00360E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14269  003610  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14270  003612  0769               	decf	___fltol@exp1& (0+255),f,b
 14271  003614                     l2476:
 14272                           
 14273                           ; BSR set to: 0
 14274                           
 14275                           ; BSR set to: 0
 14276  003614  5169               	movf	___fltol@exp1& (0+255),w,b
 14277  003616  A4D8               	btfss	status,2,c
 14278  003618  D7F7               	goto	l2477
 14279  00361A                     u7590:
 14280                           
 14281                           ; BSR set to: 0
 14282                           
 14283                           ; BSR set to: 0
 14284                           
 14285                           ; BSR set to: 0
 14286  00361A  5168               	movf	___fltol@sign1& (0+255),w,b
 14287  00361C  B4D8               	btfsc	status,2,c
 14288  00361E  D008               	goto	l2479
 14289                           
 14290                           ; BSR set to: 0
 14291  003620  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14292  003622  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14293  003624  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14294  003626  6D60               	negf	___fltol@f1& (0+255),b
 14295  003628  0E00               	movlw	0
 14296  00362A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14297  00362C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14298  00362E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14299  003630                     l2479:
 14300                           
 14301                           ; BSR set to: 0
 14302                           
 14303                           ; BSR set to: 0
 14304  003630  C060  F060         	movff	___fltol@f1,?___fltol
 14305  003634  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14306  003638  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14307  00363C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14308  003640  0012               	return	
 14309  003642                     __end_of___fltol:
 14310                           	opt stack 0
 14311                           tblptru	equ	0xFF8
 14312                           tblptrh	equ	0xFF7
 14313                           tblptrl	equ	0xFF6
 14314                           tablat	equ	0xFF5
 14315                           prodh	equ	0xFF4
 14316                           prodl	equ	0xFF3
 14317                           intcon	equ	0xFF2
 14318                           intcon3	equ	0xFF0
 14319                           postinc0	equ	0xFEE
 14320                           wreg	equ	0xFE8
 14321                           indf1	equ	0xFE7
 14322                           postdec1	equ	0xFE5
 14323                           fsr1h	equ	0xFE2
 14324                           fsr1l	equ	0xFE1
 14325                           indf2	equ	0xFDF
 14326                           fsr2h	equ	0xFDA
 14327                           fsr2l	equ	0xFD9
 14328                           status	equ	0xFD8
 14329                           
 14330 ;; *************** function ___flmul *****************
 14331 ;; Defined at:
 14332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;  b               4   20[BANK0 ] long 
 14335 ;;  a               4   24[BANK0 ] long 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  prod            4   39[BANK0 ] struct .
 14338 ;;  grs             4   33[BANK0 ] unsigned long 
 14339 ;;  temp            2   43[BANK0 ] struct .
 14340 ;;  bexp            1   38[BANK0 ] unsigned char 
 14341 ;;  aexp            1   37[BANK0 ] unsigned char 
 14342 ;;  sign            1   32[BANK0 ] unsigned char 
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  4   20[BANK0 ] unsigned char 
 14345 ;; Registers used:
 14346 ;;		wreg, status,2, status,0, prodl, prodh
 14347 ;; Tracked objects:
 14348 ;;		On entry : 0/0
 14349 ;;		On exit  : 0/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14352 ;;      Params:         0       8       0       0       0       0       0       0       0
 14353 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14354 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14355 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14356 ;;Total ram usage:       25 bytes
 14357 ;; Hardware stack levels used:    1
 14358 ;; Hardware stack levels required when called:   11
 14359 ;; This function calls:
 14360 ;;		Nothing
 14361 ;; This function is called by:
 14362 ;;		_ADC_TempConversion
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           	psect	text48
 14367  001546                     __ptext48:
 14368                           	opt stack 0
 14369  001546                     ___flmul:
 14370                           	opt stack 16
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;incstack = 0
 14374  001546  0100               	movlb	0	; () banked
 14375  001548  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14376  00154A  0B80               	andlw	128
 14377  00154C  6F80               	movwf	___flmul@sign& (0+255),b
 14378  00154E  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14379  001550  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14380  001552  6F86               	movwf	___flmul@bexp& (0+255),b
 14381                           
 14382                           ; BSR set to: 0
 14383  001554  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14384                           
 14385                           ; BSR set to: 0
 14386  001556  8186               	bsf	___flmul@bexp& (0+255),0,b
 14387                           
 14388                           ; BSR set to: 0
 14389                           
 14390                           ; BSR set to: 0
 14391  001558  5186               	movf	___flmul@bexp& (0+255),w,b
 14392  00155A  B4D8               	btfsc	status,2,c
 14393  00155C  D00D               	goto	l2770
 14394                           
 14395                           ; BSR set to: 0
 14396  00155E  2986               	incf	___flmul@bexp& (0+255),w,b
 14397  001560  A4D8               	btfss	status,2,c
 14398  001562  D008               	goto	l2771
 14399                           
 14400                           ; BSR set to: 0
 14401  001564  0E00               	movlw	0
 14402  001566  6F74               	movwf	___flmul@b& (0+255),b
 14403  001568  0E00               	movlw	0
 14404  00156A  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14405  00156C  0E00               	movlw	0
 14406  00156E  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14407  001570  0E00               	movlw	0
 14408  001572  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14409  001574                     l2771:
 14410                           
 14411                           ; BSR set to: 0
 14412                           
 14413                           ; BSR set to: 0
 14414  001574  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 14415  001576  D008               	goto	l2772
 14416  001578                     l2770:
 14417                           
 14418                           ; BSR set to: 0
 14419                           
 14420                           ; BSR set to: 0
 14421  001578  0E00               	movlw	0
 14422  00157A  6F74               	movwf	___flmul@b& (0+255),b
 14423  00157C  0E00               	movlw	0
 14424  00157E  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14425  001580  0E00               	movlw	0
 14426  001582  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14427  001584  0E00               	movlw	0
 14428  001586  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14429  001588                     l2772:
 14430                           
 14431                           ; BSR set to: 0
 14432                           
 14433                           ; BSR set to: 0
 14434  001588  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14435  00158A  0B80               	andlw	128
 14436  00158C  1B80               	xorwf	___flmul@sign& (0+255),f,b
 14437                           
 14438                           ; BSR set to: 0
 14439  00158E  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14440  001590  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 14441  001592  6F85               	movwf	___flmul@aexp& (0+255),b
 14442                           
 14443                           ; BSR set to: 0
 14444  001594  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 14445                           
 14446                           ; BSR set to: 0
 14447  001596  8185               	bsf	___flmul@aexp& (0+255),0,b
 14448                           
 14449                           ; BSR set to: 0
 14450                           
 14451                           ; BSR set to: 0
 14452  001598  5185               	movf	___flmul@aexp& (0+255),w,b
 14453  00159A  B4D8               	btfsc	status,2,c
 14454  00159C  D00D               	goto	l2774
 14455                           
 14456                           ; BSR set to: 0
 14457  00159E  2985               	incf	___flmul@aexp& (0+255),w,b
 14458  0015A0  A4D8               	btfss	status,2,c
 14459  0015A2  D008               	goto	l2775
 14460                           
 14461                           ; BSR set to: 0
 14462  0015A4  0E00               	movlw	0
 14463  0015A6  6F78               	movwf	___flmul@a& (0+255),b
 14464  0015A8  0E00               	movlw	0
 14465  0015AA  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14466  0015AC  0E00               	movlw	0
 14467  0015AE  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14468  0015B0  0E00               	movlw	0
 14469  0015B2  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14470  0015B4                     l2775:
 14471                           
 14472                           ; BSR set to: 0
 14473                           
 14474                           ; BSR set to: 0
 14475  0015B4  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 14476  0015B6  D008               	goto	l2776
 14477  0015B8                     l2774:
 14478                           
 14479                           ; BSR set to: 0
 14480                           
 14481                           ; BSR set to: 0
 14482  0015B8  0E00               	movlw	0
 14483  0015BA  6F78               	movwf	___flmul@a& (0+255),b
 14484  0015BC  0E00               	movlw	0
 14485  0015BE  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14486  0015C0  0E00               	movlw	0
 14487  0015C2  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14488  0015C4  0E00               	movlw	0
 14489  0015C6  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14490  0015C8                     l2776:
 14491                           
 14492                           ; BSR set to: 0
 14493  0015C8  5185               	movf	___flmul@aexp& (0+255),w,b
 14494  0015CA  B4D8               	btfsc	status,2,c
 14495  0015CC  D003               	goto	u7360
 14496                           
 14497                           ; BSR set to: 0
 14498  0015CE  5186               	movf	___flmul@bexp& (0+255),w,b
 14499  0015D0  A4D8               	btfss	status,2,c
 14500  0015D2  D009               	goto	l2777
 14501  0015D4                     u7360:
 14502                           
 14503                           ; BSR set to: 0
 14504                           
 14505                           ; BSR set to: 0
 14506  0015D4  0E00               	movlw	0
 14507  0015D6  6F74               	movwf	?___flmul& (0+255),b
 14508  0015D8  0E00               	movlw	0
 14509  0015DA  6F75               	movwf	(?___flmul+1)& (0+255),b
 14510  0015DC  0E00               	movlw	0
 14511  0015DE  6F76               	movwf	(?___flmul+2)& (0+255),b
 14512  0015E0  0E00               	movlw	0
 14513  0015E2  6F77               	movwf	(?___flmul+3)& (0+255),b
 14514                           
 14515                           ; BSR set to: 0
 14516  0015E4  0012               	return	
 14517  0015E6                     l2777:
 14518                           
 14519                           ; BSR set to: 0
 14520                           
 14521                           ; BSR set to: 0
 14522  0015E6  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14523  0015E8  0374               	mulwf	___flmul@b& (0+255),b
 14524  0015EA  CFF3 F08B          	movff	prodl,___flmul@temp
 14525  0015EE  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14526                           
 14527                           ; BSR set to: 0
 14528  0015F2  518B               	movf	___flmul@temp& (0+255),w,b
 14529  0015F4  6F81               	movwf	___flmul@grs& (0+255),b
 14530  0015F6  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 14531  0015F8  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 14532  0015FA  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 14533                           
 14534                           ; BSR set to: 0
 14535  0015FC  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14536  0015FE  6F87               	movwf	___flmul@prod& (0+255),b
 14537  001600  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 14538  001602  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 14539  001604  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 14540  001606  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14541  001608  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14542  00160A  CFF3 F08B          	movff	prodl,___flmul@temp
 14543  00160E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14544                           
 14545                           ; BSR set to: 0
 14546  001612  518B               	movf	___flmul@temp& (0+255),w,b
 14547  001614  2781               	addwf	___flmul@grs& (0+255),f,b
 14548  001616  0E00               	movlw	0
 14549  001618  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14550  00161A  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14551  00161C  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14552                           
 14553                           ; BSR set to: 0
 14554  00161E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14555  001620  2787               	addwf	___flmul@prod& (0+255),f,b
 14556  001622  0E00               	movlw	0
 14557  001624  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14558  001626  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14559  001628  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14560  00162A  5178               	movf	___flmul@a& (0+255),w,b
 14561  00162C  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14562  00162E  CFF3 F08B          	movff	prodl,___flmul@temp
 14563  001632  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14564                           
 14565                           ; BSR set to: 0
 14566  001636  518B               	movf	___flmul@temp& (0+255),w,b
 14567  001638  2781               	addwf	___flmul@grs& (0+255),f,b
 14568  00163A  0E00               	movlw	0
 14569  00163C  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14570  00163E  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14571  001640  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14572                           
 14573                           ; BSR set to: 0
 14574  001642  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14575  001644  2787               	addwf	___flmul@prod& (0+255),f,b
 14576  001646  0E00               	movlw	0
 14577  001648  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14578  00164A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14579  00164C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14580                           
 14581                           ; BSR set to: 0
 14582  00164E  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14583  001652  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14584  001656  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14585  00165A  6B81               	clrf	___flmul@grs& (0+255),b
 14586                           
 14587                           ; BSR set to: 0
 14588  00165C  5178               	movf	___flmul@a& (0+255),w,b
 14589  00165E  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14590  001660  CFF3 F08B          	movff	prodl,___flmul@temp
 14591  001664  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14592                           
 14593                           ; BSR set to: 0
 14594  001668  518B               	movf	___flmul@temp& (0+255),w,b
 14595  00166A  2781               	addwf	___flmul@grs& (0+255),f,b
 14596  00166C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14597  00166E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14598  001670  0E00               	movlw	0
 14599  001672  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14600  001674  0E00               	movlw	0
 14601  001676  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14602                           
 14603                           ; BSR set to: 0
 14604  001678  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14605  00167A  0374               	mulwf	___flmul@b& (0+255),b
 14606  00167C  CFF3 F08B          	movff	prodl,___flmul@temp
 14607  001680  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14608                           
 14609                           ; BSR set to: 0
 14610  001684  518B               	movf	___flmul@temp& (0+255),w,b
 14611  001686  2781               	addwf	___flmul@grs& (0+255),f,b
 14612  001688  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14613  00168A  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14614  00168C  0E00               	movlw	0
 14615  00168E  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14616  001690  0E00               	movlw	0
 14617  001692  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14618                           
 14619                           ; BSR set to: 0
 14620  001694  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14621  001698  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14622  00169C  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14623  0016A0  6B81               	clrf	___flmul@grs& (0+255),b
 14624  0016A2  5178               	movf	___flmul@a& (0+255),w,b
 14625  0016A4  0374               	mulwf	___flmul@b& (0+255),b
 14626  0016A6  CFF3 F08B          	movff	prodl,___flmul@temp
 14627  0016AA  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14628                           
 14629                           ; BSR set to: 0
 14630  0016AE  518B               	movf	___flmul@temp& (0+255),w,b
 14631  0016B0  2781               	addwf	___flmul@grs& (0+255),f,b
 14632  0016B2  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14633  0016B4  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14634  0016B6  0E00               	movlw	0
 14635  0016B8  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14636  0016BA  0E00               	movlw	0
 14637  0016BC  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14638                           
 14639                           ; BSR set to: 0
 14640  0016BE  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14641  0016C0  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14642  0016C2  CFF3 F08B          	movff	prodl,___flmul@temp
 14643  0016C6  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14644  0016CA  518B               	movf	___flmul@temp& (0+255),w,b
 14645  0016CC  2787               	addwf	___flmul@prod& (0+255),f,b
 14646  0016CE  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14647  0016D0  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14648  0016D2  0E00               	movlw	0
 14649  0016D4  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14650  0016D6  0E00               	movlw	0
 14651  0016D8  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14652                           
 14653                           ; BSR set to: 0
 14654  0016DA  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14655  0016DC  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14656  0016DE  CFF3 F08B          	movff	prodl,___flmul@temp
 14657  0016E2  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14658                           
 14659                           ; BSR set to: 0
 14660  0016E6  518B               	movf	___flmul@temp& (0+255),w,b
 14661  0016E8  2787               	addwf	___flmul@prod& (0+255),f,b
 14662  0016EA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14663  0016EC  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14664  0016EE  0E00               	movlw	0
 14665  0016F0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14666  0016F2  0E00               	movlw	0
 14667  0016F4  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14668  0016F6  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14669  0016F8  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14670  0016FA  CFF3 F08B          	movff	prodl,___flmul@temp
 14671  0016FE  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14672                           
 14673                           ; BSR set to: 0
 14674  001702  518B               	movf	___flmul@temp& (0+255),w,b
 14675  001704  6F7C               	movwf	??___flmul& (0+255),b
 14676  001706  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14677  001708  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14678  00170A  6B7E               	clrf	(??___flmul+2)& (0+255),b
 14679  00170C  6B7F               	clrf	(??___flmul+3)& (0+255),b
 14680  00170E  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 14681  001712  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 14682  001716  C07C  F07D         	movff	??___flmul,??___flmul+1
 14683  00171A  6B7C               	clrf	??___flmul& (0+255),b
 14684  00171C  517C               	movf	??___flmul& (0+255),w,b
 14685  00171E  2787               	addwf	___flmul@prod& (0+255),f,b
 14686  001720  517D               	movf	(??___flmul+1)& (0+255),w,b
 14687  001722  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14688  001724  517E               	movf	(??___flmul+2)& (0+255),w,b
 14689  001726  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14690  001728  517F               	movf	(??___flmul+3)& (0+255),w,b
 14691  00172A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14692                           
 14693                           ; BSR set to: 0
 14694  00172C  C081  F07C         	movff	___flmul@grs,??___flmul
 14695  001730  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 14696  001734  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 14697  001738  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 14698  00173C  0E19               	movlw	25
 14699  00173E  D005               	goto	u7370
 14700  001740                     u7375:
 14701  001740  90D8               	bcf	status,0,c
 14702  001742  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14703  001744  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14704  001746  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14705  001748  337C               	rrcf	??___flmul& (0+255),f,b
 14706  00174A                     u7370:
 14707  00174A  2EE8               	decfsz	wreg,f,c
 14708  00174C  D7F9               	goto	u7375
 14709  00174E  517C               	movf	??___flmul& (0+255),w,b
 14710  001750  2787               	addwf	___flmul@prod& (0+255),f,b
 14711  001752  517D               	movf	(??___flmul+1)& (0+255),w,b
 14712  001754  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14713  001756  517E               	movf	(??___flmul+2)& (0+255),w,b
 14714  001758  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14715  00175A  517F               	movf	(??___flmul+3)& (0+255),w,b
 14716  00175C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14717                           
 14718                           ; BSR set to: 0
 14719  00175E  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14720  001762  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14721  001766  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14722  00176A  6B81               	clrf	___flmul@grs& (0+255),b
 14723                           
 14724                           ; BSR set to: 0
 14725  00176C  5185               	movf	___flmul@aexp& (0+255),w,b
 14726  00176E  C086  F07C         	movff	___flmul@bexp,??___flmul
 14727  001772  6B7D               	clrf	(??___flmul+1)& (0+255),b
 14728  001774  277C               	addwf	??___flmul& (0+255),f,b
 14729  001776  0E00               	movlw	0
 14730  001778  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 14731  00177A  0E82               	movlw	130
 14732  00177C  257C               	addwf	??___flmul& (0+255),w,b
 14733  00177E  6F8B               	movwf	___flmul@temp& (0+255),b
 14734  001780  0EFF               	movlw	255
 14735  001782  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 14736  001784  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 14737  001786  D00F               	goto	l2781
 14738  001788                     
 14739                           ; BSR set to: 0
 14740                           
 14741                           ; BSR set to: 0
 14742  001788  90D8               	bcf	status,0,c
 14743  00178A  3787               	rlcf	___flmul@prod& (0+255),f,b
 14744  00178C  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14745  00178E  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14746  001790  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14747                           
 14748                           ; BSR set to: 0
 14749  001792  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14750                           
 14751                           ; BSR set to: 0
 14752  001794  8187               	bsf	___flmul@prod& (0+255),0,b
 14753                           
 14754                           ; BSR set to: 0
 14755  001796  90D8               	bcf	status,0,c
 14756  001798  3781               	rlcf	___flmul@grs& (0+255),f,b
 14757  00179A  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14758  00179C  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14759  00179E  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14760  0017A0  078B               	decf	___flmul@temp& (0+255),f,b
 14761  0017A2  A0D8               	btfss	status,0,c
 14762  0017A4  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 14763  0017A6                     l2781:
 14764                           
 14765                           ; BSR set to: 0
 14766                           
 14767                           ; BSR set to: 0
 14768  0017A6  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 14769  0017A8  D7EF               	goto	l2782
 14770                           
 14771                           ; BSR set to: 0
 14772                           
 14773                           ; BSR set to: 0
 14774  0017AA  0E00               	movlw	0
 14775  0017AC  6F85               	movwf	___flmul@aexp& (0+255),b
 14776                           
 14777                           ; BSR set to: 0
 14778  0017AE  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 14779  0017B0  D016               	goto	l2788
 14780                           
 14781                           ; BSR set to: 0
 14782  0017B2  0EFF               	movlw	255
 14783  0017B4  1581               	andwf	___flmul@grs& (0+255),w,b
 14784  0017B6  6F7C               	movwf	??___flmul& (0+255),b
 14785  0017B8  0EFF               	movlw	255
 14786  0017BA  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 14787  0017BC  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14788  0017BE  0EFF               	movlw	255
 14789  0017C0  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 14790  0017C2  6F7E               	movwf	(??___flmul+2)& (0+255),b
 14791  0017C4  0E7F               	movlw	127
 14792  0017C6  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 14793  0017C8  6F7F               	movwf	(??___flmul+3)& (0+255),b
 14794  0017CA  517C               	movf	??___flmul& (0+255),w,b
 14795  0017CC  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 14796  0017CE  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 14797  0017D0  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 14798  0017D2  A4D8               	btfss	status,2,c
 14799  0017D4  D002               	goto	u7420
 14800                           
 14801                           ; BSR set to: 0
 14802                           
 14803                           ; BSR set to: 0
 14804  0017D6  A187               	btfss	___flmul@prod& (0+255),0,b
 14805  0017D8  D002               	goto	l2788
 14806  0017DA                     u7420:
 14807                           
 14808                           ; BSR set to: 0
 14809  0017DA  0E01               	movlw	1
 14810  0017DC  6F85               	movwf	___flmul@aexp& (0+255),b
 14811  0017DE                     l2788:
 14812                           
 14813                           ; BSR set to: 0
 14814                           
 14815                           ; BSR set to: 0
 14816                           
 14817                           ; BSR set to: 0
 14818  0017DE  5185               	movf	___flmul@aexp& (0+255),w,b
 14819  0017E0  B4D8               	btfsc	status,2,c
 14820  0017E2  D01F               	goto	l2790
 14821                           
 14822                           ; BSR set to: 0
 14823  0017E4  0E01               	movlw	1
 14824  0017E6  2787               	addwf	___flmul@prod& (0+255),f,b
 14825  0017E8  0E00               	movlw	0
 14826  0017EA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14827  0017EC  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14828  0017EE  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14829                           
 14830                           ; BSR set to: 0
 14831  0017F0  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 14832  0017F2  D017               	goto	l2790
 14833                           
 14834                           ; BSR set to: 0
 14835  0017F4  C087  F07C         	movff	___flmul@prod,??___flmul
 14836  0017F8  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 14837  0017FC  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 14838  001800  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 14839  001804  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 14840  001806  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14841  001808  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14842  00180A  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14843  00180C  337C               	rrcf	??___flmul& (0+255),f,b
 14844  00180E  C07C  F087         	movff	??___flmul,___flmul@prod
 14845  001812  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 14846  001816  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 14847  00181A  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 14848                           
 14849                           ; BSR set to: 0
 14850  00181E  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 14851  001820  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 14852  001822                     l2790:
 14853                           
 14854                           ; BSR set to: 0
 14855                           
 14856                           ; BSR set to: 0
 14857                           
 14858                           ; BSR set to: 0
 14859  001822  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14860  001824  D00D               	goto	l2791
 14861  001826  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14862  001828  E103               	bnz	u7450
 14863  00182A  298B               	incf	___flmul@temp& (0+255),w,b
 14864  00182C  A0D8               	btfss	status,0,c
 14865  00182E  D008               	goto	l2791
 14866  001830                     u7450:
 14867                           
 14868                           ; BSR set to: 0
 14869  001830  0E00               	movlw	0
 14870  001832  6F87               	movwf	___flmul@prod& (0+255),b
 14871  001834  0E00               	movlw	0
 14872  001836  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14873  001838  0E80               	movlw	128
 14874  00183A  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14875  00183C  0E7F               	movlw	127
 14876  00183E  D020               	goto	L7
 14877  001840                     l2791:
 14878                           
 14879                           ; BSR set to: 0
 14880                           
 14881                           ; BSR set to: 0
 14882  001840  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14883  001842  D005               	goto	u7460
 14884  001844  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14885  001846  E10E               	bnz	l2793
 14886  001848  058B               	decf	___flmul@temp& (0+255),w,b
 14887  00184A  B0D8               	btfsc	status,0,c
 14888  00184C  D00B               	goto	l2793
 14889  00184E                     u7460:
 14890                           
 14891                           ; BSR set to: 0
 14892  00184E  0E00               	movlw	0
 14893  001850  6F87               	movwf	___flmul@prod& (0+255),b
 14894  001852  0E00               	movlw	0
 14895  001854  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14896  001856  0E00               	movlw	0
 14897  001858  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14898  00185A  0E00               	movlw	0
 14899  00185C  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14900  00185E  0E00               	movlw	0
 14901  001860  6F80               	movwf	___flmul@sign& (0+255),b
 14902  001862  D00F               	goto	l2794
 14903  001864                     l2793:
 14904                           
 14905                           ; BSR set to: 0
 14906  001864  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 14907                           
 14908                           ; BSR set to: 0
 14909  001868  0EFF               	movlw	255
 14910  00186A  1787               	andwf	___flmul@prod& (0+255),f,b
 14911  00186C  0EFF               	movlw	255
 14912  00186E  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 14913  001870  0E7F               	movlw	127
 14914  001872  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 14915  001874  0E00               	movlw	0
 14916  001876  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 14917                           
 14918                           ; BSR set to: 0
 14919  001878  B186               	btfsc	___flmul@bexp& (0+255),0,b
 14920                           
 14921                           ; BSR set to: 0
 14922  00187A  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 14923                           
 14924                           ; BSR set to: 0
 14925                           
 14926                           ; BSR set to: 0
 14927  00187C  90D8               	bcf	status,0,c
 14928  00187E  3186               	rrcf	___flmul@bexp& (0+255),w,b
 14929  001880                     L7:
 14930  001880  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14931  001882                     l2794:
 14932                           
 14933                           ; BSR set to: 0
 14934                           
 14935                           ; BSR set to: 0
 14936                           
 14937                           ; BSR set to: 0
 14938  001882  5180               	movf	___flmul@sign& (0+255),w,b
 14939  001884  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 14940                           
 14941                           ; BSR set to: 0
 14942  001886  C087  F074         	movff	___flmul@prod,?___flmul
 14943  00188A  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 14944  00188E  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 14945  001892  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 14946  001896  0012               	return	
 14947  001898                     __end_of___flmul:
 14948                           	opt stack 0
 14949                           tblptru	equ	0xFF8
 14950                           tblptrh	equ	0xFF7
 14951                           tblptrl	equ	0xFF6
 14952                           tablat	equ	0xFF5
 14953                           prodh	equ	0xFF4
 14954                           prodl	equ	0xFF3
 14955                           intcon	equ	0xFF2
 14956                           intcon3	equ	0xFF0
 14957                           postinc0	equ	0xFEE
 14958                           wreg	equ	0xFE8
 14959                           indf1	equ	0xFE7
 14960                           postdec1	equ	0xFE5
 14961                           fsr1h	equ	0xFE2
 14962                           fsr1l	equ	0xFE1
 14963                           indf2	equ	0xFDF
 14964                           fsr2h	equ	0xFDA
 14965                           fsr2l	equ	0xFD9
 14966                           status	equ	0xFD8
 14967                           
 14968 ;; *************** function ___fldiv *****************
 14969 ;; Defined at:
 14970 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  b               4   45[BANK0 ] unsigned char 
 14973 ;;  a               4   49[BANK0 ] unsigned char 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  grs             4   64[BANK0 ] unsigned long 
 14976 ;;  rem             4   58[BANK0 ] unsigned long 
 14977 ;;  new_exp         2   62[BANK0 ] int 
 14978 ;;  aexp            1   69[BANK0 ] unsigned char 
 14979 ;;  bexp            1   68[BANK0 ] unsigned char 
 14980 ;;  sign            1   57[BANK0 ] unsigned char 
 14981 ;; Return value:  Size  Location     Type
 14982 ;;                  4   45[BANK0 ] unsigned char 
 14983 ;; Registers used:
 14984 ;;		wreg, status,2, status,0
 14985 ;; Tracked objects:
 14986 ;;		On entry : 0/0
 14987 ;;		On exit  : 0/0
 14988 ;;		Unchanged: 0/0
 14989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14990 ;;      Params:         0       8       0       0       0       0       0       0       0
 14991 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14992 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14993 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14994 ;;Total ram usage:       25 bytes
 14995 ;; Hardware stack levels used:    1
 14996 ;; Hardware stack levels required when called:   11
 14997 ;; This function calls:
 14998 ;;		Nothing
 14999 ;; This function is called by:
 15000 ;;		_ADC_TempConversion
 15001 ;; This function uses a non-reentrant model
 15002 ;;
 15003                           
 15004                           	psect	text49
 15005  001BD6                     __ptext49:
 15006                           	opt stack 0
 15007  001BD6                     ___fldiv:
 15008                           	opt stack 16
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;incstack = 0
 15012  001BD6  0100               	movlb	0	; () banked
 15013  001BD8  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15014  001BDA  0B80               	andlw	128
 15015  001BDC  6F99               	movwf	___fldiv@sign& (0+255),b
 15016  001BDE  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15017  001BE0  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15018  001BE2  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15019                           
 15020                           ; BSR set to: 0
 15021  001BE4  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15022                           
 15023                           ; BSR set to: 0
 15024  001BE6  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15025                           
 15026                           ; BSR set to: 0
 15027                           
 15028                           ; BSR set to: 0
 15029  001BE8  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15030  001BEA  B4D8               	btfsc	status,2,c
 15031  001BEC  D00D               	goto	l2736
 15032                           
 15033                           ; BSR set to: 0
 15034  001BEE  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15035  001BF0  A4D8               	btfss	status,2,c
 15036  001BF2  D008               	goto	l2737
 15037                           
 15038                           ; BSR set to: 0
 15039  001BF4  0E00               	movlw	0
 15040  001BF6  6F8D               	movwf	___fldiv@b& (0+255),b
 15041  001BF8  0E00               	movlw	0
 15042  001BFA  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15043  001BFC  0E00               	movlw	0
 15044  001BFE  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15045  001C00  0E00               	movlw	0
 15046  001C02  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15047  001C04                     l2737:
 15048                           
 15049                           ; BSR set to: 0
 15050                           
 15051                           ; BSR set to: 0
 15052  001C04  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15053  001C06  D006               	goto	L8
 15054  001C08                     l2736:
 15055                           
 15056                           ; BSR set to: 0
 15057                           
 15058                           ; BSR set to: 0
 15059  001C08  0E00               	movlw	0
 15060  001C0A  6F8D               	movwf	___fldiv@b& (0+255),b
 15061  001C0C  0E00               	movlw	0
 15062  001C0E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15063  001C10  0E00               	movlw	0
 15064  001C12  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15065  001C14                     L8:
 15066  001C14  0E00               	movlw	0
 15067  001C16  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15068                           
 15069                           ; BSR set to: 0
 15070                           
 15071                           ; BSR set to: 0
 15072  001C18  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15073  001C1A  0B80               	andlw	128
 15074  001C1C  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15075                           
 15076                           ; BSR set to: 0
 15077  001C1E  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15078  001C20  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15079  001C22  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15080                           
 15081                           ; BSR set to: 0
 15082  001C24  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15083                           
 15084                           ; BSR set to: 0
 15085  001C26  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15086                           
 15087                           ; BSR set to: 0
 15088                           
 15089                           ; BSR set to: 0
 15090  001C28  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15091  001C2A  B4D8               	btfsc	status,2,c
 15092  001C2C  D00D               	goto	l2740
 15093                           
 15094                           ; BSR set to: 0
 15095  001C2E  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15096  001C30  A4D8               	btfss	status,2,c
 15097  001C32  D008               	goto	l2741
 15098                           
 15099                           ; BSR set to: 0
 15100  001C34  0E00               	movlw	0
 15101  001C36  6F91               	movwf	___fldiv@a& (0+255),b
 15102  001C38  0E00               	movlw	0
 15103  001C3A  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15104  001C3C  0E00               	movlw	0
 15105  001C3E  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15106  001C40  0E00               	movlw	0
 15107  001C42  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15108  001C44                     l2741:
 15109                           
 15110                           ; BSR set to: 0
 15111                           
 15112                           ; BSR set to: 0
 15113  001C44  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15114  001C46  D006               	goto	L9
 15115  001C48                     l2740:
 15116                           
 15117                           ; BSR set to: 0
 15118                           
 15119                           ; BSR set to: 0
 15120  001C48  0E00               	movlw	0
 15121  001C4A  6F91               	movwf	___fldiv@a& (0+255),b
 15122  001C4C  0E00               	movlw	0
 15123  001C4E  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15124  001C50  0E00               	movlw	0
 15125  001C52  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15126  001C54                     L9:
 15127  001C54  0E00               	movlw	0
 15128  001C56  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15129                           
 15130                           ; BSR set to: 0
 15131                           
 15132                           ; BSR set to: 0
 15133  001C58  5191               	movf	___fldiv@a& (0+255),w,b
 15134  001C5A  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15135  001C5C  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15136  001C5E  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15137  001C60  A4D8               	btfss	status,2,c
 15138  001C62  D015               	goto	l2743
 15139                           
 15140                           ; BSR set to: 0
 15141  001C64  0E00               	movlw	0
 15142  001C66  6F8D               	movwf	___fldiv@b& (0+255),b
 15143  001C68  0E00               	movlw	0
 15144  001C6A  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15145  001C6C  0E00               	movlw	0
 15146  001C6E  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15147  001C70  0E00               	movlw	0
 15148  001C72  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151  001C74  0E80               	movlw	128
 15152  001C76  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15153  001C78  0E7F               	movlw	127
 15154  001C7A  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15155                           
 15156                           ; BSR set to: 0
 15157  001C7C  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15158  001C80  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15159  001C84  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15160  001C88  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15161                           
 15162                           ; BSR set to: 0
 15163  001C8C  0012               	return	
 15164  001C8E                     l2743:
 15165                           
 15166                           ; BSR set to: 0
 15167                           
 15168                           ; BSR set to: 0
 15169  001C8E  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15170  001C90  A4D8               	btfss	status,2,c
 15171  001C92  D011               	goto	l2745
 15172                           
 15173                           ; BSR set to: 0
 15174  001C94  0E00               	movlw	0
 15175  001C96  6F8D               	movwf	___fldiv@b& (0+255),b
 15176  001C98  0E00               	movlw	0
 15177  001C9A  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15178  001C9C  0E00               	movlw	0
 15179  001C9E  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15180  001CA0  0E00               	movlw	0
 15181  001CA2  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15182                           
 15183                           ; BSR set to: 0
 15184  001CA4  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15185  001CA8  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15186  001CAC  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15187  001CB0  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15188                           
 15189                           ; BSR set to: 0
 15190  001CB4  0012               	return	
 15191  001CB6                     l2745:
 15192                           
 15193                           ; BSR set to: 0
 15194                           
 15195                           ; BSR set to: 0
 15196  001CB6  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15197  001CB8  6F95               	movwf	??___fldiv& (0+255),b
 15198  001CBA  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15199  001CBC  1F95               	comf	??___fldiv& (0+255),f,b
 15200  001CBE  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15201  001CC0  4B95               	infsnz	??___fldiv& (0+255),f,b
 15202  001CC2  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15203  001CC4  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15204  001CC6  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15205  001CC8  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15206  001CCA  5195               	movf	??___fldiv& (0+255),w,b
 15207  001CCC  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15208  001CCE  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15209  001CD0  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15210  001CD2  0E7F               	movlw	127
 15211  001CD4  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15212  001CD6  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15213  001CD8  0E00               	movlw	0
 15214  001CDA  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15215  001CDC  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15216                           
 15217                           ; BSR set to: 0
 15218  001CDE  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15219  001CE2  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15220  001CE6  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15221  001CEA  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15222                           
 15223                           ; BSR set to: 0
 15224  001CEE  0E00               	movlw	0
 15225  001CF0  6F8D               	movwf	___fldiv@b& (0+255),b
 15226  001CF2  0E00               	movlw	0
 15227  001CF4  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15228  001CF6  0E00               	movlw	0
 15229  001CF8  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15230  001CFA  0E00               	movlw	0
 15231  001CFC  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15232                           
 15233                           ; BSR set to: 0
 15234  001CFE  0E00               	movlw	0
 15235  001D00  6FA0               	movwf	___fldiv@grs& (0+255),b
 15236  001D02  0E00               	movlw	0
 15237  001D04  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15238  001D06  0E00               	movlw	0
 15239  001D08  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15240  001D0A  0E00               	movlw	0
 15241  001D0C  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15242                           
 15243                           ; BSR set to: 0
 15244  001D0E  0E00               	movlw	0
 15245  001D10  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15246  001D12  D028               	goto	l2746
 15247  001D14                     
 15248                           ; BSR set to: 0
 15249                           
 15250                           ; BSR set to: 0
 15251  001D14  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15252  001D16  B4D8               	btfsc	status,2,c
 15253  001D18  D011               	goto	l2748
 15254                           
 15255                           ; BSR set to: 0
 15256  001D1A  90D8               	bcf	status,0,c
 15257  001D1C  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15258  001D1E  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15259  001D20  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15260  001D22  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15261  001D24  90D8               	bcf	status,0,c
 15262  001D26  378D               	rlcf	___fldiv@b& (0+255),f,b
 15263  001D28  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15264  001D2A  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15265  001D2C  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15266                           
 15267                           ; BSR set to: 0
 15268  001D2E  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15269                           
 15270                           ; BSR set to: 0
 15271  001D30  818D               	bsf	___fldiv@b& (0+255),0,b
 15272                           
 15273                           ; BSR set to: 0
 15274  001D32  90D8               	bcf	status,0,c
 15275  001D34  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15276  001D36  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15277  001D38  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15278  001D3A  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15279  001D3C                     l2748:
 15280                           
 15281                           ; BSR set to: 0
 15282                           
 15283                           ; BSR set to: 0
 15284  001D3C  5191               	movf	___fldiv@a& (0+255),w,b
 15285  001D3E  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15286  001D40  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15287  001D42  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15288  001D44  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15289  001D46  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15290  001D48  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15291  001D4A  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15292  001D4C  A0D8               	btfss	status,0,c
 15293  001D4E  D009               	goto	l2750
 15294                           
 15295                           ; BSR set to: 0
 15296  001D50  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15297                           
 15298                           ; BSR set to: 0
 15299  001D52  5191               	movf	___fldiv@a& (0+255),w,b
 15300  001D54  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15301  001D56  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15302  001D58  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15303  001D5A  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15304  001D5C  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15305  001D5E  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15306  001D60  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15307  001D62                     l2750:
 15308                           
 15309                           ; BSR set to: 0
 15310                           
 15311                           ; BSR set to: 0
 15312  001D62  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15313  001D64                     l2746:
 15314                           
 15315                           ; BSR set to: 0
 15316  001D64  0E19               	movlw	25
 15317  001D66  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15318  001D68  D7D5               	goto	l2747
 15319                           
 15320                           ; BSR set to: 0
 15321                           
 15322                           ; BSR set to: 0
 15323  001D6A  519A               	movf	___fldiv@rem& (0+255),w,b
 15324  001D6C  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15325  001D6E  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15326  001D70  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15327  001D72  B4D8               	btfsc	status,2,c
 15328  001D74  D011               	goto	l2753
 15329                           
 15330                           ; BSR set to: 0
 15331  001D76  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15332                           
 15333                           ; BSR set to: 0
 15334  001D78  D00F               	goto	l2753
 15335  001D7A                     
 15336                           ; BSR set to: 0
 15337                           
 15338                           ; BSR set to: 0
 15339  001D7A  90D8               	bcf	status,0,c
 15340  001D7C  378D               	rlcf	___fldiv@b& (0+255),f,b
 15341  001D7E  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15342  001D80  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15343  001D82  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15344                           
 15345                           ; BSR set to: 0
 15346  001D84  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15347                           
 15348                           ; BSR set to: 0
 15349  001D86  818D               	bsf	___fldiv@b& (0+255),0,b
 15350                           
 15351                           ; BSR set to: 0
 15352  001D88  90D8               	bcf	status,0,c
 15353  001D8A  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15354  001D8C  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15355  001D8E  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15356  001D90  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15357  001D92  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15358  001D94  A0D8               	btfss	status,0,c
 15359  001D96  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15360  001D98                     l2753:
 15361                           
 15362                           ; BSR set to: 0
 15363                           
 15364                           ; BSR set to: 0
 15365  001D98  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15366  001D9A  D7EF               	goto	l2754
 15367                           
 15368                           ; BSR set to: 0
 15369                           
 15370                           ; BSR set to: 0
 15371  001D9C  0E00               	movlw	0
 15372  001D9E  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15373                           
 15374                           ; BSR set to: 0
 15375  001DA0  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15376  001DA2  D016               	goto	l2760
 15377                           
 15378                           ; BSR set to: 0
 15379  001DA4  0EFF               	movlw	255
 15380  001DA6  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15381  001DA8  6F95               	movwf	??___fldiv& (0+255),b
 15382  001DAA  0EFF               	movlw	255
 15383  001DAC  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15384  001DAE  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15385  001DB0  0EFF               	movlw	255
 15386  001DB2  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15387  001DB4  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15388  001DB6  0E7F               	movlw	127
 15389  001DB8  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15390  001DBA  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15391  001DBC  5195               	movf	??___fldiv& (0+255),w,b
 15392  001DBE  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15393  001DC0  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15394  001DC2  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15395  001DC4  A4D8               	btfss	status,2,c
 15396  001DC6  D002               	goto	u7230
 15397                           
 15398                           ; BSR set to: 0
 15399                           
 15400                           ; BSR set to: 0
 15401  001DC8  A18D               	btfss	___fldiv@b& (0+255),0,b
 15402  001DCA  D002               	goto	l2760
 15403  001DCC                     u7230:
 15404                           
 15405                           ; BSR set to: 0
 15406  001DCC  0E01               	movlw	1
 15407  001DCE  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15408  001DD0                     l2760:
 15409                           
 15410                           ; BSR set to: 0
 15411                           
 15412                           ; BSR set to: 0
 15413                           
 15414                           ; BSR set to: 0
 15415  001DD0  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15416  001DD2  B4D8               	btfsc	status,2,c
 15417  001DD4  D01F               	goto	l2762
 15418                           
 15419                           ; BSR set to: 0
 15420  001DD6  0E01               	movlw	1
 15421  001DD8  278D               	addwf	___fldiv@b& (0+255),f,b
 15422  001DDA  0E00               	movlw	0
 15423  001DDC  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15424  001DDE  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15425  001DE0  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15426                           
 15427                           ; BSR set to: 0
 15428  001DE2  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 15429  001DE4  D017               	goto	l2762
 15430                           
 15431                           ; BSR set to: 0
 15432  001DE6  C08D  F095         	movff	___fldiv@b,??___fldiv
 15433  001DEA  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 15434  001DEE  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 15435  001DF2  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 15436  001DF6  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 15437  001DF8  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 15438  001DFA  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 15439  001DFC  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 15440  001DFE  3395               	rrcf	??___fldiv& (0+255),f,b
 15441  001E00  C095  F08D         	movff	??___fldiv,___fldiv@b
 15442  001E04  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 15443  001E08  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 15444  001E0C  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 15445                           
 15446                           ; BSR set to: 0
 15447  001E10  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15448  001E12  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15449  001E14                     l2762:
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ; BSR set to: 0
 15454                           
 15455                           ; BSR set to: 0
 15456  001E14  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15457  001E16  D010               	goto	l2763
 15458  001E18  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15459  001E1A  E103               	bnz	u7260
 15460  001E1C  299E               	incf	___fldiv@new_exp& (0+255),w,b
 15461  001E1E  A0D8               	btfss	status,0,c
 15462  001E20  D00B               	goto	l2763
 15463  001E22                     u7260:
 15464                           
 15465                           ; BSR set to: 0
 15466  001E22  0E00               	movlw	0
 15467  001E24  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15468  001E26  699E               	setf	___fldiv@new_exp& (0+255),b
 15469  001E28  0E00               	movlw	0
 15470  001E2A  6F8D               	movwf	___fldiv@b& (0+255),b
 15471  001E2C  0E00               	movlw	0
 15472  001E2E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15473  001E30  0E00               	movlw	0
 15474  001E32  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15475  001E34  0E00               	movlw	0
 15476  001E36  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15477  001E38                     l2763:
 15478                           
 15479                           ; BSR set to: 0
 15480                           
 15481                           ; BSR set to: 0
 15482  001E38  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15483  001E3A  D005               	goto	u7270
 15484  001E3C  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15485  001E3E  E111               	bnz	l8985
 15486  001E40  059E               	decf	___fldiv@new_exp& (0+255),w,b
 15487  001E42  B0D8               	btfsc	status,0,c
 15488  001E44  D00E               	goto	l2764
 15489  001E46                     u7270:
 15490                           
 15491                           ; BSR set to: 0
 15492  001E46  0E00               	movlw	0
 15493  001E48  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15494  001E4A  0E00               	movlw	0
 15495  001E4C  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15496  001E4E  0E00               	movlw	0
 15497  001E50  6F8D               	movwf	___fldiv@b& (0+255),b
 15498  001E52  0E00               	movlw	0
 15499  001E54  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15500  001E56  0E00               	movlw	0
 15501  001E58  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15502  001E5A  0E00               	movlw	0
 15503  001E5C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15504  001E5E  0E00               	movlw	0
 15505  001E60  6F99               	movwf	___fldiv@sign& (0+255),b
 15506  001E62                     l2764:
 15507  001E62                     l8985:
 15508                           
 15509                           ; BSR set to: 0
 15510  001E62  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 15511                           
 15512                           ; BSR set to: 0
 15513  001E66  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 15514  001E68  D002               	goto	l2765
 15515                           
 15516                           ; BSR set to: 0
 15517  001E6A  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15518  001E6C  D001               	goto	l2766
 15519  001E6E                     l2765:
 15520                           
 15521                           ; BSR set to: 0
 15522                           
 15523                           ; BSR set to: 0
 15524  001E6E  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 15525  001E70                     l2766:
 15526                           
 15527                           ; BSR set to: 0
 15528                           
 15529                           ; BSR set to: 0
 15530  001E70  90D8               	bcf	status,0,c
 15531  001E72  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 15532  001E74  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15533                           
 15534                           ; BSR set to: 0
 15535  001E76  5199               	movf	___fldiv@sign& (0+255),w,b
 15536  001E78  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15537                           
 15538                           ; BSR set to: 0
 15539  001E7A  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15540  001E7E  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15541  001E82  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15542  001E86  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15543  001E8A  0012               	return	
 15544  001E8C                     __end_of___fldiv:
 15545                           	opt stack 0
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           intcon	equ	0xFF2
 15553                           intcon3	equ	0xFF0
 15554                           postinc0	equ	0xFEE
 15555                           wreg	equ	0xFE8
 15556                           indf1	equ	0xFE7
 15557                           postdec1	equ	0xFE5
 15558                           fsr1h	equ	0xFE2
 15559                           fsr1l	equ	0xFE1
 15560                           indf2	equ	0xFDF
 15561                           fsr2h	equ	0xFDA
 15562                           fsr2l	equ	0xFD9
 15563                           status	equ	0xFD8
 15564                           
 15565 ;; *************** function ___fladd *****************
 15566 ;; Defined at:
 15567 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;  b               4    0[BANK0 ] unsigned char 
 15570 ;;  a               4    4[BANK0 ] unsigned char 
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  grs             1   19[BANK0 ] unsigned char 
 15573 ;;  bexp            1   18[BANK0 ] unsigned char 
 15574 ;;  aexp            1   17[BANK0 ] unsigned char 
 15575 ;;  signs           1   16[BANK0 ] unsigned char 
 15576 ;; Return value:  Size  Location     Type
 15577 ;;                  4    0[BANK0 ] unsigned char 
 15578 ;; Registers used:
 15579 ;;		wreg, status,2, status,0
 15580 ;; Tracked objects:
 15581 ;;		On entry : 0/0
 15582 ;;		On exit  : 0/0
 15583 ;;		Unchanged: 0/0
 15584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15585 ;;      Params:         0       8       0       0       0       0       0       0       0
 15586 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15587 ;;      Temps:          0       8       0       0       0       0       0       0       0
 15588 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15589 ;;Total ram usage:       20 bytes
 15590 ;; Hardware stack levels used:    1
 15591 ;; Hardware stack levels required when called:   11
 15592 ;; This function calls:
 15593 ;;		Nothing
 15594 ;; This function is called by:
 15595 ;;		_ADC_TempConversion
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	text50
 15600  001898                     __ptext50:
 15601                           	opt stack 0
 15602  001898                     ___fladd:
 15603                           	opt stack 16
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;incstack = 0
 15607  001898  0100               	movlb	0	; () banked
 15608  00189A  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15609  00189C  0B80               	andlw	128
 15610  00189E  6F70               	movwf	___fladd@signs& (0+255),b
 15611  0018A0  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15612  0018A2  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 15613  0018A4  6F72               	movwf	___fladd@bexp& (0+255),b
 15614                           
 15615                           ; BSR set to: 0
 15616  0018A6  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 15617                           
 15618                           ; BSR set to: 0
 15619  0018A8  8172               	bsf	___fladd@bexp& (0+255),0,b
 15620                           
 15621                           ; BSR set to: 0
 15622                           
 15623                           ; BSR set to: 0
 15624  0018AA  5172               	movf	___fladd@bexp& (0+255),w,b
 15625  0018AC  B4D8               	btfsc	status,2,c
 15626  0018AE  D00D               	goto	l2679
 15627                           
 15628                           ; BSR set to: 0
 15629  0018B0  2972               	incf	___fladd@bexp& (0+255),w,b
 15630  0018B2  A4D8               	btfss	status,2,c
 15631  0018B4  D008               	goto	l2680
 15632                           
 15633                           ; BSR set to: 0
 15634  0018B6  0E00               	movlw	0
 15635  0018B8  6F60               	movwf	___fladd@b& (0+255),b
 15636  0018BA  0E00               	movlw	0
 15637  0018BC  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15638  0018BE  0E00               	movlw	0
 15639  0018C0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15640  0018C2  0E00               	movlw	0
 15641  0018C4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15642  0018C6                     l2680:
 15643                           
 15644                           ; BSR set to: 0
 15645                           
 15646                           ; BSR set to: 0
 15647  0018C6  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15648  0018C8  D006               	goto	L10
 15649  0018CA                     l2679:
 15650                           
 15651                           ; BSR set to: 0
 15652                           
 15653                           ; BSR set to: 0
 15654  0018CA  0E00               	movlw	0
 15655  0018CC  6F60               	movwf	___fladd@b& (0+255),b
 15656  0018CE  0E00               	movlw	0
 15657  0018D0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15658  0018D2  0E00               	movlw	0
 15659  0018D4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15660  0018D6                     L10:
 15661  0018D6  0E00               	movlw	0
 15662  0018D8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15663                           
 15664                           ; BSR set to: 0
 15665                           
 15666                           ; BSR set to: 0
 15667  0018DA  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15668  0018DC  0B80               	andlw	128
 15669  0018DE  6F71               	movwf	___fladd@aexp& (0+255),b
 15670                           
 15671                           ; BSR set to: 0
 15672  0018E0  5170               	movf	___fladd@signs& (0+255),w,b
 15673  0018E2  1971               	xorwf	___fladd@aexp& (0+255),w,b
 15674  0018E4  A4D8               	btfss	status,2,c
 15675                           
 15676                           ; BSR set to: 0
 15677  0018E6  8D70               	bsf	___fladd@signs& (0+255),6,b
 15678                           
 15679                           ; BSR set to: 0
 15680                           
 15681                           ; BSR set to: 0
 15682  0018E8  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15683  0018EA  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 15684  0018EC  6F71               	movwf	___fladd@aexp& (0+255),b
 15685                           
 15686                           ; BSR set to: 0
 15687  0018EE  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 15688                           
 15689                           ; BSR set to: 0
 15690  0018F0  8171               	bsf	___fladd@aexp& (0+255),0,b
 15691                           
 15692                           ; BSR set to: 0
 15693                           
 15694                           ; BSR set to: 0
 15695  0018F2  5171               	movf	___fladd@aexp& (0+255),w,b
 15696  0018F4  B4D8               	btfsc	status,2,c
 15697  0018F6  D00D               	goto	l2684
 15698                           
 15699                           ; BSR set to: 0
 15700  0018F8  2971               	incf	___fladd@aexp& (0+255),w,b
 15701  0018FA  A4D8               	btfss	status,2,c
 15702  0018FC  D008               	goto	l2685
 15703                           
 15704                           ; BSR set to: 0
 15705  0018FE  0E00               	movlw	0
 15706  001900  6F64               	movwf	___fladd@a& (0+255),b
 15707  001902  0E00               	movlw	0
 15708  001904  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15709  001906  0E00               	movlw	0
 15710  001908  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15711  00190A  0E00               	movlw	0
 15712  00190C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15713  00190E                     l2685:
 15714                           
 15715                           ; BSR set to: 0
 15716                           
 15717                           ; BSR set to: 0
 15718  00190E  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 15719  001910  D006               	goto	L11
 15720  001912                     l2684:
 15721                           
 15722                           ; BSR set to: 0
 15723                           
 15724                           ; BSR set to: 0
 15725  001912  0E00               	movlw	0
 15726  001914  6F64               	movwf	___fladd@a& (0+255),b
 15727  001916  0E00               	movlw	0
 15728  001918  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15729  00191A  0E00               	movlw	0
 15730  00191C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15731  00191E                     L11:
 15732  00191E  0E00               	movlw	0
 15733  001920  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15734                           
 15735                           ; BSR set to: 0
 15736                           
 15737                           ; BSR set to: 0
 15738  001922  5172               	movf	___fladd@bexp& (0+255),w,b
 15739  001924  5D71               	subwf	___fladd@aexp& (0+255),w,b
 15740  001926  B0D8               	btfsc	status,0,c
 15741  001928  D022               	goto	l2687
 15742                           
 15743                           ; BSR set to: 0
 15744  00192A  AD70               	btfss	___fladd@signs& (0+255),6,b
 15745  00192C  D002               	goto	l2688
 15746                           
 15747                           ; BSR set to: 0
 15748  00192E  0E80               	movlw	128
 15749  001930  1B70               	xorwf	___fladd@signs& (0+255),f,b
 15750  001932                     l2688:
 15751                           
 15752                           ; BSR set to: 0
 15753                           
 15754                           ; BSR set to: 0
 15755  001932  C072  F073         	movff	___fladd@bexp,___fladd@grs
 15756                           
 15757                           ; BSR set to: 0
 15758  001936  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15759                           
 15760                           ; BSR set to: 0
 15761  00193A  C073  F071         	movff	___fladd@grs,___fladd@aexp
 15762                           
 15763                           ; BSR set to: 0
 15764  00193E  C060  F073         	movff	___fladd@b,___fladd@grs
 15765                           
 15766                           ; BSR set to: 0
 15767  001942  C064  F060         	movff	___fladd@a,___fladd@b
 15768                           
 15769                           ; BSR set to: 0
 15770  001946  C073  F064         	movff	___fladd@grs,___fladd@a
 15771                           
 15772                           ; BSR set to: 0
 15773  00194A  C061  F073         	movff	___fladd@b+1,___fladd@grs
 15774                           
 15775                           ; BSR set to: 0
 15776  00194E  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 15777                           
 15778                           ; BSR set to: 0
 15779  001952  C073  F065         	movff	___fladd@grs,___fladd@a+1
 15780                           
 15781                           ; BSR set to: 0
 15782  001956  C062  F073         	movff	___fladd@b+2,___fladd@grs
 15783                           
 15784                           ; BSR set to: 0
 15785  00195A  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 15786                           
 15787                           ; BSR set to: 0
 15788  00195E  C073  F066         	movff	___fladd@grs,___fladd@a+2
 15789                           
 15790                           ; BSR set to: 0
 15791  001962  C063  F073         	movff	___fladd@b+3,___fladd@grs
 15792                           
 15793                           ; BSR set to: 0
 15794  001966  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 15795                           
 15796                           ; BSR set to: 0
 15797  00196A  C073  F067         	movff	___fladd@grs,___fladd@a+3
 15798  00196E                     l2687:
 15799                           
 15800                           ; BSR set to: 0
 15801                           
 15802                           ; BSR set to: 0
 15803  00196E  0E00               	movlw	0
 15804  001970  6F73               	movwf	___fladd@grs& (0+255),b
 15805                           
 15806                           ; BSR set to: 0
 15807  001972  5172               	movf	___fladd@bexp& (0+255),w,b
 15808  001974  6F68               	movwf	??___fladd& (0+255),b
 15809  001976  6B69               	clrf	(??___fladd+1)& (0+255),b
 15810  001978  1F68               	comf	??___fladd& (0+255),f,b
 15811  00197A  1F69               	comf	(??___fladd+1)& (0+255),f,b
 15812  00197C  4B68               	infsnz	??___fladd& (0+255),f,b
 15813  00197E  2B69               	incf	(??___fladd+1)& (0+255),f,b
 15814  001980  5171               	movf	___fladd@aexp& (0+255),w,b
 15815  001982  6F6A               	movwf	(??___fladd+2)& (0+255),b
 15816  001984  6B6B               	clrf	(??___fladd+3)& (0+255),b
 15817  001986  5168               	movf	??___fladd& (0+255),w,b
 15818  001988  276A               	addwf	(??___fladd+2)& (0+255),f,b
 15819  00198A  5169               	movf	(??___fladd+1)& (0+255),w,b
 15820  00198C  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 15821  00198E  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 15822  001990  D02C               	goto	l2691
 15823  001992  516B               	movf	(??___fladd+3)& (0+255),w,b
 15824  001994  E104               	bnz	u6760
 15825  001996  0E1A               	movlw	26
 15826  001998  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 15827  00199A  A0D8               	btfss	status,0,c
 15828  00199C  D026               	goto	l2691
 15829  00199E                     u6760:
 15830                           
 15831                           ; BSR set to: 0
 15832  00199E  5160               	movf	___fladd@b& (0+255),w,b
 15833  0019A0  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 15834  0019A2  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 15835  0019A4  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 15836  0019A6  B4D8               	btfsc	status,2,c
 15837  0019A8  D002               	goto	u6770
 15838  0019AA  0E01               	movlw	1
 15839  0019AC  D001               	goto	u6780
 15840  0019AE                     u6770:
 15841  0019AE  0E00               	movlw	0
 15842  0019B0                     u6780:
 15843  0019B0  6F73               	movwf	___fladd@grs& (0+255),b
 15844                           
 15845                           ; BSR set to: 0
 15846  0019B2  0E00               	movlw	0
 15847  0019B4  6F60               	movwf	___fladd@b& (0+255),b
 15848  0019B6  0E00               	movlw	0
 15849  0019B8  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15850  0019BA  0E00               	movlw	0
 15851  0019BC  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15852  0019BE  0E00               	movlw	0
 15853  0019C0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15854                           
 15855                           ; BSR set to: 0
 15856  0019C2  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15857  0019C6  D015               	goto	u6810
 15858  0019C8                     l2692:
 15859                           
 15860                           ; BSR set to: 0
 15861  0019C8  A173               	btfss	___fladd@grs& (0+255),0,b
 15862  0019CA  D005               	goto	l2693
 15863                           
 15864                           ; BSR set to: 0
 15865  0019CC  90D8               	bcf	status,0,c
 15866  0019CE  3173               	rrcf	___fladd@grs& (0+255),w,b
 15867  0019D0  0901               	iorlw	1
 15868  0019D2  6F73               	movwf	___fladd@grs& (0+255),b
 15869  0019D4  D002               	goto	l2694
 15870  0019D6                     l2693:
 15871                           
 15872                           ; BSR set to: 0
 15873                           
 15874                           ; BSR set to: 0
 15875  0019D6  90D8               	bcf	status,0,c
 15876  0019D8  3373               	rrcf	___fladd@grs& (0+255),f,b
 15877  0019DA                     l2694:
 15878                           
 15879                           ; BSR set to: 0
 15880                           
 15881                           ; BSR set to: 0
 15882  0019DA  B160               	btfsc	___fladd@b& (0+255),0,b
 15883                           
 15884                           ; BSR set to: 0
 15885  0019DC  8F73               	bsf	___fladd@grs& (0+255),7,b
 15886                           
 15887                           ; BSR set to: 0
 15888                           
 15889                           ; BSR set to: 0
 15890  0019DE  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15891  0019E0  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15892  0019E2  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15893  0019E4  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15894  0019E6  3360               	rrcf	___fladd@b& (0+255),f,b
 15895                           
 15896                           ; BSR set to: 0
 15897  0019E8  2B72               	incf	___fladd@bexp& (0+255),f,b
 15898  0019EA                     l2691:
 15899                           
 15900                           ; BSR set to: 0
 15901  0019EA  5171               	movf	___fladd@aexp& (0+255),w,b
 15902  0019EC  5D72               	subwf	___fladd@bexp& (0+255),w,b
 15903  0019EE  A0D8               	btfss	status,0,c
 15904  0019F0  D7EB               	goto	l2692
 15905  0019F2                     u6810:
 15906                           
 15907                           ; BSR set to: 0
 15908                           
 15909                           ; BSR set to: 0
 15910  0019F2  BD70               	btfsc	___fladd@signs& (0+255),6,b
 15911  0019F4  D029               	goto	l2697
 15912                           
 15913                           ; BSR set to: 0
 15914  0019F6  5172               	movf	___fladd@bexp& (0+255),w,b
 15915  0019F8  A4D8               	btfss	status,2,c
 15916  0019FA  D009               	goto	l2698
 15917                           
 15918                           ; BSR set to: 0
 15919  0019FC  0E00               	movlw	0
 15920  0019FE  6F60               	movwf	?___fladd& (0+255),b
 15921  001A00  0E00               	movlw	0
 15922  001A02  6F61               	movwf	(?___fladd+1)& (0+255),b
 15923  001A04  0E00               	movlw	0
 15924  001A06  6F62               	movwf	(?___fladd+2)& (0+255),b
 15925  001A08  0E00               	movlw	0
 15926  001A0A  6F63               	movwf	(?___fladd+3)& (0+255),b
 15927                           
 15928                           ; BSR set to: 0
 15929  001A0C  0012               	return	
 15930  001A0E                     l2698:
 15931                           
 15932                           ; BSR set to: 0
 15933                           
 15934                           ; BSR set to: 0
 15935  001A0E  5164               	movf	___fladd@a& (0+255),w,b
 15936  001A10  2760               	addwf	___fladd@b& (0+255),f,b
 15937  001A12  5165               	movf	(___fladd@a+1)& (0+255),w,b
 15938  001A14  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 15939  001A16  5166               	movf	(___fladd@a+2)& (0+255),w,b
 15940  001A18  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 15941  001A1A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15942  001A1C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 15943                           
 15944                           ; BSR set to: 0
 15945  001A1E  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 15946  001A20  D083               	goto	u6940
 15947                           
 15948                           ; BSR set to: 0
 15949  001A22  A173               	btfss	___fladd@grs& (0+255),0,b
 15950  001A24  D006               	goto	l2701
 15951                           
 15952                           ; BSR set to: 0
 15953  001A26  90D8               	bcf	status,0,c
 15954  001A28  3373               	rrcf	___fladd@grs& (0+255),f,b
 15955  001A2A  5173               	movf	___fladd@grs& (0+255),w,b
 15956  001A2C  0901               	iorlw	1
 15957  001A2E  6F73               	movwf	___fladd@grs& (0+255),b
 15958  001A30  D002               	goto	l2702
 15959  001A32                     l2701:
 15960                           
 15961                           ; BSR set to: 0
 15962                           
 15963                           ; BSR set to: 0
 15964  001A32  90D8               	bcf	status,0,c
 15965  001A34  3373               	rrcf	___fladd@grs& (0+255),f,b
 15966  001A36                     l2702:
 15967                           
 15968                           ; BSR set to: 0
 15969                           
 15970                           ; BSR set to: 0
 15971  001A36  B160               	btfsc	___fladd@b& (0+255),0,b
 15972                           
 15973                           ; BSR set to: 0
 15974  001A38  8F73               	bsf	___fladd@grs& (0+255),7,b
 15975                           
 15976                           ; BSR set to: 0
 15977                           
 15978                           ; BSR set to: 0
 15979  001A3A  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15980  001A3C  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15981  001A3E  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15982  001A40  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15983  001A42  3360               	rrcf	___fladd@b& (0+255),f,b
 15984                           
 15985                           ; BSR set to: 0
 15986  001A44  2B72               	incf	___fladd@bexp& (0+255),f,b
 15987                           
 15988                           ; BSR set to: 0
 15989  001A46  D070               	goto	u6940
 15990  001A48                     l2697:
 15991                           
 15992                           ; BSR set to: 0
 15993                           
 15994                           ; BSR set to: 0
 15995  001A48  5164               	movf	___fladd@a& (0+255),w,b
 15996  001A4A  5D60               	subwf	___fladd@b& (0+255),w,b
 15997  001A4C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 15998  001A4E  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 15999  001A50  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16000  001A52  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16001  001A54  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16002  001A56  0A80               	xorlw	128
 16003  001A58  6F68               	movwf	??___fladd& (0+255),b
 16004  001A5A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16005  001A5C  0A80               	xorlw	128
 16006  001A5E  5968               	subwfb	??___fladd& (0+255),w,b
 16007  001A60  B0D8               	btfsc	status,0,c
 16008  001A62  D036               	goto	l2705
 16009                           
 16010                           ; BSR set to: 0
 16011  001A64  C060  F068         	movff	___fladd@b,??___fladd
 16012  001A68  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16013  001A6C  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16014  001A70  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16015  001A74  1F68               	comf	??___fladd& (0+255),f,b
 16016  001A76  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16017  001A78  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16018  001A7A  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16019  001A7C  2B68               	incf	??___fladd& (0+255),f,b
 16020  001A7E  0E00               	movlw	0
 16021  001A80  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16022  001A82  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16023  001A84  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16024  001A86  5164               	movf	___fladd@a& (0+255),w,b
 16025  001A88  2568               	addwf	??___fladd& (0+255),w,b
 16026  001A8A  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16027  001A8C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16028  001A8E  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16029  001A90  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16030  001A92  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16031  001A94  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16032  001A96  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16033  001A98  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16034  001A9A  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16035  001A9C  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16036  001A9E  0EFF               	movlw	255
 16037  001AA0  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16038  001AA2  6F60               	movwf	___fladd@b& (0+255),b
 16039  001AA4  0EFF               	movlw	255
 16040  001AA6  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16041  001AA8  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16042  001AAA  0EFF               	movlw	255
 16043  001AAC  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16044  001AAE  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16045  001AB0  0EFF               	movlw	255
 16046  001AB2  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16047  001AB4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16048  001AB6  0E80               	movlw	128
 16049  001AB8  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16050                           
 16051                           ; BSR set to: 0
 16052  001ABA  6D73               	negf	___fladd@grs& (0+255),b
 16053                           
 16054                           ; BSR set to: 0
 16055  001ABC  5173               	movf	___fladd@grs& (0+255),w,b
 16056  001ABE  A4D8               	btfss	status,2,c
 16057  001AC0  D00F               	goto	l2707
 16058                           
 16059                           ; BSR set to: 0
 16060  001AC2  0E01               	movlw	1
 16061  001AC4  2760               	addwf	___fladd@b& (0+255),f,b
 16062  001AC6  0E00               	movlw	0
 16063  001AC8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16064  001ACA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16065  001ACC  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 0
 16068  001ACE  D008               	goto	l2707
 16069  001AD0                     l2705:
 16070                           
 16071                           ; BSR set to: 0
 16072                           
 16073                           ; BSR set to: 0
 16074  001AD0  5164               	movf	___fladd@a& (0+255),w,b
 16075  001AD2  5F60               	subwf	___fladd@b& (0+255),f,b
 16076  001AD4  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16077  001AD6  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16078  001AD8  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16079  001ADA  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16080  001ADC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16081  001ADE  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16082  001AE0                     l2707:
 16083                           
 16084                           ; BSR set to: 0
 16085  001AE0  5160               	movf	___fladd@b& (0+255),w,b
 16086  001AE2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16087  001AE4  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16088  001AE6  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16089  001AE8  A4D8               	btfss	status,2,c
 16090  001AEA  D01C               	goto	l2714
 16091                           
 16092                           ; BSR set to: 0
 16093  001AEC  5173               	movf	___fladd@grs& (0+255),w,b
 16094  001AEE  A4D8               	btfss	status,2,c
 16095  001AF0  D019               	goto	l2714
 16096                           
 16097                           ; BSR set to: 0
 16098  001AF2  0E00               	movlw	0
 16099  001AF4  6F60               	movwf	?___fladd& (0+255),b
 16100  001AF6  0E00               	movlw	0
 16101  001AF8  6F61               	movwf	(?___fladd+1)& (0+255),b
 16102  001AFA  0E00               	movlw	0
 16103  001AFC  6F62               	movwf	(?___fladd+2)& (0+255),b
 16104  001AFE  0E00               	movlw	0
 16105  001B00  6F63               	movwf	(?___fladd+3)& (0+255),b
 16106                           
 16107                           ; BSR set to: 0
 16108  001B02  0012               	return	
 16109  001B04                     
 16110                           ; BSR set to: 0
 16111                           
 16112                           ; BSR set to: 0
 16113  001B04  90D8               	bcf	status,0,c
 16114  001B06  3760               	rlcf	___fladd@b& (0+255),f,b
 16115  001B08  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16116  001B0A  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16117  001B0C  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16118                           
 16119                           ; BSR set to: 0
 16120  001B0E  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16121                           
 16122                           ; BSR set to: 0
 16123  001B10  8160               	bsf	___fladd@b& (0+255),0,b
 16124                           
 16125                           ; BSR set to: 0
 16126                           
 16127                           ; BSR set to: 0
 16128  001B12  A173               	btfss	___fladd@grs& (0+255),0,b
 16129  001B14  D002               	goto	l2712
 16130                           
 16131                           ; BSR set to: 0
 16132  001B16  80D8               	bsf	status,0,c
 16133  001B18  D001               	goto	L12
 16134  001B1A                     l2712:
 16135                           
 16136                           ; BSR set to: 0
 16137                           
 16138                           ; BSR set to: 0
 16139  001B1A  90D8               	bcf	status,0,c
 16140  001B1C                     L12:
 16141  001B1C  3773               	rlcf	___fladd@grs& (0+255),f,b
 16142                           
 16143                           ; BSR set to: 0
 16144                           
 16145                           ; BSR set to: 0
 16146  001B1E  5172               	movf	___fladd@bexp& (0+255),w,b
 16147  001B20  A4D8               	btfss	status,2,c
 16148                           
 16149                           ; BSR set to: 0
 16150  001B22  0772               	decf	___fladd@bexp& (0+255),f,b
 16151  001B24                     l2714:
 16152                           
 16153                           ; BSR set to: 0
 16154                           
 16155                           ; BSR set to: 0
 16156                           
 16157                           ; BSR set to: 0
 16158  001B24  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16159  001B26  D7EE               	goto	l2710
 16160  001B28                     u6940:
 16161                           
 16162                           ; BSR set to: 0
 16163                           
 16164                           ; BSR set to: 0
 16165                           
 16166                           ; BSR set to: 0
 16167  001B28  0E00               	movlw	0
 16168  001B2A  6F71               	movwf	___fladd@aexp& (0+255),b
 16169                           
 16170                           ; BSR set to: 0
 16171  001B2C  AF73               	btfss	___fladd@grs& (0+255),7,b
 16172  001B2E  D00A               	goto	l2719
 16173                           
 16174                           ; BSR set to: 0
 16175  001B30  C073  F068         	movff	___fladd@grs,??___fladd
 16176  001B34  0E7F               	movlw	127
 16177  001B36  1768               	andwf	??___fladd& (0+255),f,b
 16178  001B38  A4D8               	btfss	status,2,c
 16179  001B3A  D002               	goto	u6970
 16180                           
 16181                           ; BSR set to: 0
 16182                           
 16183                           ; BSR set to: 0
 16184  001B3C  A160               	btfss	___fladd@b& (0+255),0,b
 16185  001B3E  D002               	goto	l2719
 16186  001B40                     u6970:
 16187                           
 16188                           ; BSR set to: 0
 16189  001B40  0E01               	movlw	1
 16190  001B42  6F71               	movwf	___fladd@aexp& (0+255),b
 16191  001B44                     l2719:
 16192                           
 16193                           ; BSR set to: 0
 16194                           
 16195                           ; BSR set to: 0
 16196                           
 16197                           ; BSR set to: 0
 16198  001B44  5171               	movf	___fladd@aexp& (0+255),w,b
 16199  001B46  B4D8               	btfsc	status,2,c
 16200  001B48  D020               	goto	l2722
 16201                           
 16202                           ; BSR set to: 0
 16203  001B4A  0E01               	movlw	1
 16204  001B4C  2760               	addwf	___fladd@b& (0+255),f,b
 16205  001B4E  0E00               	movlw	0
 16206  001B50  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16207  001B52  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16208  001B54  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16209                           
 16210                           ; BSR set to: 0
 16211  001B56  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16212  001B58  D018               	goto	l2722
 16213                           
 16214                           ; BSR set to: 0
 16215  001B5A  C060  F068         	movff	___fladd@b,??___fladd
 16216  001B5E  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16217  001B62  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16218  001B66  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16219  001B6A  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16220  001B6C  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16221  001B6E  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16222  001B70  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16223  001B72  3368               	rrcf	??___fladd& (0+255),f,b
 16224  001B74  C068  F060         	movff	??___fladd,___fladd@b
 16225  001B78  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16226  001B7C  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16227  001B80  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16228  001B84  2972               	incf	___fladd@bexp& (0+255),w,b
 16229  001B86  A4D8               	btfss	status,2,c
 16230                           
 16231                           ; BSR set to: 0
 16232  001B88  2B72               	incf	___fladd@bexp& (0+255),f,b
 16233  001B8A                     l2722:
 16234                           
 16235                           ; BSR set to: 0
 16236                           
 16237                           ; BSR set to: 0
 16238                           
 16239                           ; BSR set to: 0
 16240                           
 16241                           ; BSR set to: 0
 16242  001B8A  2972               	incf	___fladd@bexp& (0+255),w,b
 16243  001B8C  B4D8               	btfsc	status,2,c
 16244  001B8E  D003               	goto	u7020
 16245                           
 16246                           ; BSR set to: 0
 16247  001B90  5172               	movf	___fladd@bexp& (0+255),w,b
 16248  001B92  A4D8               	btfss	status,2,c
 16249  001B94  D00D               	goto	l2726
 16250  001B96                     u7020:
 16251                           
 16252                           ; BSR set to: 0
 16253                           
 16254                           ; BSR set to: 0
 16255  001B96  0E00               	movlw	0
 16256  001B98  6F60               	movwf	___fladd@b& (0+255),b
 16257  001B9A  0E00               	movlw	0
 16258  001B9C  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16259  001B9E  0E00               	movlw	0
 16260  001BA0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16261  001BA2  0E00               	movlw	0
 16262  001BA4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16263  001BA6  5172               	movf	___fladd@bexp& (0+255),w,b
 16264  001BA8  A4D8               	btfss	status,2,c
 16265  001BAA  D002               	goto	l2726
 16266                           
 16267                           ; BSR set to: 0
 16268  001BAC  0E00               	movlw	0
 16269  001BAE  6F70               	movwf	___fladd@signs& (0+255),b
 16270  001BB0                     l2726:
 16271                           
 16272                           ; BSR set to: 0
 16273                           
 16274                           ; BSR set to: 0
 16275                           
 16276                           ; BSR set to: 0
 16277  001BB0  A172               	btfss	___fladd@bexp& (0+255),0,b
 16278  001BB2  D002               	goto	l2727
 16279                           
 16280                           ; BSR set to: 0
 16281  001BB4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16282  001BB6  D001               	goto	l2728
 16283  001BB8                     l2727:
 16284                           
 16285                           ; BSR set to: 0
 16286                           
 16287                           ; BSR set to: 0
 16288  001BB8  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16289  001BBA                     l2728:
 16290                           
 16291                           ; BSR set to: 0
 16292                           
 16293                           ; BSR set to: 0
 16294  001BBA  90D8               	bcf	status,0,c
 16295  001BBC  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16296  001BBE  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16297                           
 16298                           ; BSR set to: 0
 16299  001BC0  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16300                           
 16301                           ; BSR set to: 0
 16302  001BC2  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16303                           
 16304                           ; BSR set to: 0
 16305                           
 16306                           ; BSR set to: 0
 16307  001BC4  C060  F060         	movff	___fladd@b,?___fladd
 16308  001BC8  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16309  001BCC  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16310  001BD0  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16311  001BD4  0012               	return	
 16312  001BD6                     __end_of___fladd:
 16313                           	opt stack 0
 16314                           tblptru	equ	0xFF8
 16315                           tblptrh	equ	0xFF7
 16316                           tblptrl	equ	0xFF6
 16317                           tablat	equ	0xFF5
 16318                           prodh	equ	0xFF4
 16319                           prodl	equ	0xFF3
 16320                           intcon	equ	0xFF2
 16321                           intcon3	equ	0xFF0
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           postdec1	equ	0xFE5
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           fsr2h	equ	0xFDA
 16330                           fsr2l	equ	0xFD9
 16331                           status	equ	0xFD8
 16332                           
 16333 ;; *************** function _moteJoiningProcess *****************
 16334 ;; Defined at:
 16335 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 16336 ;; Parameters:    Size  Location     Type
 16337 ;;  messageReady    1    wreg     unsigned char 
 16338 ;;  changeStates    1   23[BANK0 ] unsigned char 
 16339 ;;  selectButton    1   24[BANK0 ] unsigned char 
 16340 ;; Auto vars:     Size  Location     Type
 16341 ;;  messageReady    1   28[BANK0 ] unsigned char 
 16342 ;;  readDataRate    1   26[BANK0 ] unsigned char 
 16343 ;;  joiningCompl    1   27[BANK0 ] unsigned char 
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  1    wreg      enum E6152
 16346 ;; Registers used:
 16347 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16353 ;;      Params:         0       2       0       0       0       0       0       0       0
 16354 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16355 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16356 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16357 ;;Total ram usage:        6 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:   16
 16360 ;; This function calls:
 16361 ;;		_DATAEE_WriteByte
 16362 ;;		_moteApp_delayms
 16363 ;;		_oled_clear
 16364 ;;		_oled_putString
 16365 ;;		_sendCommand
 16366 ;;		_strcmp
 16367 ;;		_strncmp
 16368 ;; This function is called by:
 16369 ;;		_moteHandler
 16370 ;; This function uses a non-reentrant model
 16371 ;;
 16372                           
 16373                           	psect	text51
 16374  001020                     __ptext51:
 16375                           	opt stack 0
 16376  001020                     _moteJoiningProcess:
 16377                           	opt stack 13
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;incstack = 0
 16381                           ;moteJoiningProcess@messageReady stored from wreg
 16382  001020  0100               	movlb	0	; () banked
 16383  001022  6F7C               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16384                           
 16385                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 16386  001024  0E00               	movlw	0
 16387  001026  0100               	movlb	0	; () banked
 16388  001028  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16389                           
 16390                           ;MOTEapp.c: 297: switch (activeState)
 16391  00102A  D266               	goto	l390
 16392  00102C                     
 16393                           ; BSR set to: 0
 16394                           ;MOTEapp.c: 300: while(1);
 16395  00102C  D7FF               	goto	l391
 16396  00102E                     
 16397                           ;MOTEapp.c: 303: sendCommand("sys reset");
 16398  00102E  0EFC               	movlw	low STR_30
 16399  001030  0100               	movlb	0	; () banked
 16400  001032  6F61               	movwf	sendCommand@string& (0+255),b
 16401  001034  0E7E               	movlw	high STR_30
 16402  001036  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16403  001038  EC0D  F02A         	call	_sendCommand	;wreg free
 16404  00103C  D13A               	goto	l10287
 16405  00103E                     
 16406                           ; BSR set to: 0
 16407                           ;MOTEapp.c: 307: if (selectButton)
 16408                           
 16409                           ; BSR set to: 0
 16410  00103E  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16411  001040  B4D8               	btfsc	status,2,c
 16412  001042  D002               	goto	l398
 16413                           
 16414                           ; BSR set to: 0
 16415                           ;MOTEapp.c: 308: {
 16416                           ;MOTEapp.c: 309: activeState = moteComFailure;
 16417  001044  0E0A               	movlw	10
 16418  001046  6FF4               	movwf	_activeState& (0+255),b
 16419  001048                     l398:
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;MOTEapp.c: 310: }
 16423                           ;MOTEapp.c: 311: if ( messageReady )
 16424  001048  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16425  00104A  B4D8               	btfsc	status,2,c
 16426  00104C  D279               	goto	l395
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;MOTEapp.c: 312: {
 16430                           ;MOTEapp.c: 313: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16431  00104E  0E64               	movlw	low _moduleResonseBuffer
 16432  001050  6F60               	movwf	strncmp@s1& (0+255),b
 16433  001052  0E01               	movlw	high _moduleResonseBuffer
 16434  001054  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16435  001056  0EB8               	movlw	low STR_31
 16436  001058  6F62               	movwf	strncmp@s2& (0+255),b
 16437  00105A  0E7F               	movlw	high STR_31
 16438  00105C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16439  00105E  0E00               	movlw	0
 16440  001060  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16441  001062  0E04               	movlw	4
 16442  001064  6F64               	movwf	strncmp@len& (0+255),b
 16443  001066  ECC3  F022         	call	_strncmp	;wreg free
 16444  00106A  0100               	movlb	0	; () banked
 16445  00106C  5160               	movf	?_strncmp& (0+255),w,b
 16446  00106E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16447  001070  A4D8               	btfss	status,2,c
 16448  001072  D029               	goto	l400
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;MOTEapp.c: 314: {
 16452                           ;MOTEapp.c: 315: rnModule = rn2483;
 16453  001074  0E00               	movlw	0
 16454  001076  6FEE               	movwf	_rnModule& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;MOTEapp.c: 316: oled_clear();
 16458  001078  ECAD  F02B         	call	_oled_clear	;wreg free
 16459                           
 16460                           ;MOTEapp.c: 317: oled_putString(" Joining Method ",0,0);
 16461  00107C  0E43               	movlw	low STR_32
 16462  00107E  0100               	movlb	0	; () banked
 16463  001080  6F72               	movwf	oled_putString@string& (0+255),b
 16464  001082  0E7B               	movlw	high STR_32
 16465  001084  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16466  001086  0E00               	movlw	0
 16467  001088  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16468  00108A  0E00               	movlw	0
 16469  00108C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16470  00108E  EC71  F025         	call	_oled_putString	;wreg free
 16471                           
 16472                           ;MOTEapp.c: 318: oled_putString("<- ABP   OTAA ->", 0,2);
 16473  001092  0E98               	movlw	low STR_33
 16474  001094  0100               	movlb	0	; () banked
 16475  001096  6F72               	movwf	oled_putString@string& (0+255),b
 16476  001098  0E7B               	movlw	high STR_33
 16477  00109A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16478  00109C  0E00               	movlw	0
 16479  00109E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16480  0010A0  0E02               	movlw	2
 16481  0010A2  6F75               	movwf	oled_putString@start_page& (0+255),b
 16482  0010A4  EC71  F025         	call	_oled_putString	;wreg free
 16483                           
 16484                           ;MOTEapp.c: 319: oled_putString("  (S2)   (S3)   ", 0,3);
 16485  0010A8  0EEE               	movlw	low STR_34
 16486  0010AA  0100               	movlb	0	; () banked
 16487  0010AC  6F72               	movwf	oled_putString@string& (0+255),b
 16488  0010AE  0E7A               	movlw	high STR_34
 16489  0010B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16490  0010B2  0E00               	movlw	0
 16491  0010B4  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16492  0010B6  0E03               	movlw	3
 16493  0010B8  6F75               	movwf	oled_putString@start_page& (0+255),b
 16494  0010BA  EC71  F025         	call	_oled_putString	;wreg free
 16495  0010BE  D03B               	goto	l10225
 16496  0010C0                     L13:
 16497  0010C0  0100               	movlb	0	; () banked
 16498  0010C2                     L14:
 16499  0010C2  6FF4               	movwf	_activeState& (0+255),b
 16500                           
 16501                           ;MOTEapp.c: 321: }
 16502  0010C4  D23D               	goto	l395
 16503  0010C6                     l400:
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;MOTEapp.c: 322: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16507                           
 16508                           ; BSR set to: 0
 16509  0010C6  0E64               	movlw	low _moduleResonseBuffer
 16510  0010C8  6F60               	movwf	strncmp@s1& (0+255),b
 16511  0010CA  0E01               	movlw	high _moduleResonseBuffer
 16512  0010CC  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16513  0010CE  0EBD               	movlw	low STR_35
 16514  0010D0  6F62               	movwf	strncmp@s2& (0+255),b
 16515  0010D2  0E7F               	movlw	high STR_35
 16516  0010D4  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16517  0010D6  0E00               	movlw	0
 16518  0010D8  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16519  0010DA  0E04               	movlw	4
 16520  0010DC  6F64               	movwf	strncmp@len& (0+255),b
 16521  0010DE  ECC3  F022         	call	_strncmp	;wreg free
 16522  0010E2  0100               	movlb	0	; () banked
 16523  0010E4  5160               	movf	?_strncmp& (0+255),w,b
 16524  0010E6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16525  0010E8  A4D8               	btfss	status,2,c
 16526  0010EA  D027               	goto	l402
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;MOTEapp.c: 323: {
 16530                           ;MOTEapp.c: 324: rnModule = rn2903;
 16531  0010EC  0E01               	movlw	1
 16532  0010EE  6FEE               	movwf	_rnModule& (0+255),b
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;MOTEapp.c: 325: oled_clear();
 16536  0010F0  ECAD  F02B         	call	_oled_clear	;wreg free
 16537                           
 16538                           ;MOTEapp.c: 326: oled_putString(" Joining Method ",0,0);
 16539  0010F4  0E43               	movlw	low STR_32
 16540  0010F6  0100               	movlb	0	; () banked
 16541  0010F8  6F72               	movwf	oled_putString@string& (0+255),b
 16542  0010FA  0E7B               	movlw	high STR_32
 16543  0010FC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16544  0010FE  0E00               	movlw	0
 16545  001100  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16546  001102  0E00               	movlw	0
 16547  001104  6F75               	movwf	oled_putString@start_page& (0+255),b
 16548  001106  EC71  F025         	call	_oled_putString	;wreg free
 16549                           
 16550                           ;MOTEapp.c: 327: oled_putString("<- ABP   OTAA ->", 0,2);
 16551  00110A  0E98               	movlw	low STR_33
 16552  00110C  0100               	movlb	0	; () banked
 16553  00110E  6F72               	movwf	oled_putString@string& (0+255),b
 16554  001110  0E7B               	movlw	high STR_33
 16555  001112  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16556  001114  0E00               	movlw	0
 16557  001116  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16558  001118  0E02               	movlw	2
 16559  00111A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16560  00111C  EC71  F025         	call	_oled_putString	;wreg free
 16561                           
 16562                           ;MOTEapp.c: 328: oled_putString("  (S2)   (S3)   ", 0,3);
 16563  001120  0EEE               	movlw	low STR_34
 16564  001122  0100               	movlb	0	; () banked
 16565  001124  6F72               	movwf	oled_putString@string& (0+255),b
 16566  001126  0E7A               	movlw	high STR_34
 16567  001128  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16568  00112A  0E00               	movlw	0
 16569  00112C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16570  00112E  0E03               	movlw	3
 16571  001130  6F75               	movwf	oled_putString@start_page& (0+255),b
 16572  001132  EC71  F025         	call	_oled_putString	;wreg free
 16573  001136                     l10225:
 16574                           
 16575                           ;MOTEapp.c: 329: activeState = moteJoinMethod;
 16576  001136  0E02               	movlw	2
 16577  001138  D7C3               	goto	L13
 16578  00113A                     l402:
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;MOTEapp.c: 331: else
 16582                           ;MOTEapp.c: 332: {
 16583                           ;MOTEapp.c: 333: sendCommand("sys reset");
 16584                           
 16585                           ; BSR set to: 0
 16586  00113A  0EFC               	movlw	low STR_30
 16587  00113C  6F61               	movwf	sendCommand@string& (0+255),b
 16588  00113E  0E7E               	movlw	high STR_30
 16589  001140  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16590  001142  EC0D  F02A         	call	_sendCommand	;wreg free
 16591                           
 16592                           ;MOTEapp.c: 334: moteApp_delayms(25);
 16593  001146  0E00               	movlw	0
 16594  001148  0100               	movlb	0	; () banked
 16595  00114A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16596  00114C  0E19               	movlw	25
 16597  00114E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16598  001150  ECAA  F029         	call	_moteApp_delayms	;wreg free
 16599                           
 16600                           ;MOTEapp.c: 335: activeState = moteStartup;
 16601  001154  0E00               	movlw	0
 16602  001156  D7B4               	goto	L13
 16603  001158                     
 16604                           ; BSR set to: 0
 16605                           ;MOTEapp.c: 340: if (changeStates)
 16606                           
 16607                           ; BSR set to: 0
 16608  001158  5177               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16609  00115A  B4D8               	btfsc	status,2,c
 16610  00115C  D019               	goto	l405
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;MOTEapp.c: 341: {
 16614                           ;MOTEapp.c: 342: oled_putString("  (S2)          ", 0,3);
 16615  00115E  0EBB               	movlw	low STR_40
 16616  001160  6F72               	movwf	oled_putString@string& (0+255),b
 16617  001162  0E7A               	movlw	high STR_40
 16618  001164  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16619  001166  0E00               	movlw	0
 16620  001168  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16621  00116A  0E03               	movlw	3
 16622  00116C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16623  00116E  EC71  F025         	call	_oled_putString	;wreg free
 16624                           
 16625                           ;MOTEapp.c: 343: moteApp_delayms(500);
 16626  001172  0E01               	movlw	1
 16627  001174  0100               	movlb	0	; () banked
 16628  001176  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16629  001178  0EF4               	movlw	244
 16630  00117A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16631  00117C  ECAA  F029         	call	_moteApp_delayms	;wreg free
 16632                           
 16633                           ;MOTEapp.c: 344: sendCommand("mac join abp");
 16634  001180  0EE7               	movlw	low STR_41
 16635  001182  0100               	movlb	0	; () banked
 16636  001184  6F61               	movwf	sendCommand@string& (0+255),b
 16637  001186  0E7D               	movlw	high STR_41
 16638  001188  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16639  00118A  EC0D  F02A         	call	_sendCommand	;wreg free
 16640  00118E  D05E               	goto	l10271
 16641  001190                     l405:
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;MOTEapp.c: 347: else if (selectButton)
 16645                           
 16646                           ; BSR set to: 0
 16647  001190  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16648  001192  B4D8               	btfsc	status,2,c
 16649  001194  D1D5               	goto	l395
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;MOTEapp.c: 348: {
 16653                           ;MOTEapp.c: 349: oled_putString("         (S3)   ", 0,3);
 16654  001196  0EDD               	movlw	low STR_42
 16655  001198  6F72               	movwf	oled_putString@string& (0+255),b
 16656  00119A  0E7A               	movlw	high STR_42
 16657  00119C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16658  00119E  0E00               	movlw	0
 16659  0011A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16660  0011A2  0E03               	movlw	3
 16661  0011A4  6F75               	movwf	oled_putString@start_page& (0+255),b
 16662  0011A6  EC71  F025         	call	_oled_putString	;wreg free
 16663                           
 16664                           ;MOTEapp.c: 350: moteApp_delayms(500);
 16665  0011AA  0E01               	movlw	1
 16666  0011AC  0100               	movlb	0	; () banked
 16667  0011AE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16668  0011B0  0EF4               	movlw	244
 16669  0011B2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16670  0011B4  ECAA  F029         	call	_moteApp_delayms	;wreg free
 16671                           
 16672                           ;MOTEapp.c: 351: sendCommand("mac join otaa");
 16673  0011B8  0E3B               	movlw	low STR_43
 16674  0011BA  0100               	movlb	0	; () banked
 16675  0011BC  6F61               	movwf	sendCommand@string& (0+255),b
 16676  0011BE  0E7D               	movlw	high STR_43
 16677  0011C0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16678  0011C2  EC0D  F02A         	call	_sendCommand	;wreg free
 16679  0011C6  D12F               	goto	l10337
 16680  0011C8                     
 16681                           ; BSR set to: 0
 16682                           ;MOTEapp.c: 356: if ( messageReady )
 16683                           
 16684                           ; BSR set to: 0
 16685  0011C8  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16686  0011CA  B4D8               	btfsc	status,2,c
 16687  0011CC  D1B9               	goto	l395
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;MOTEapp.c: 357: {
 16691                           ;MOTEapp.c: 358: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16692  0011CE  0E64               	movlw	low _moduleResonseBuffer
 16693  0011D0  6F60               	movwf	strcmp@s1& (0+255),b
 16694  0011D2  0E01               	movlw	high _moduleResonseBuffer
 16695  0011D4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16696  0011D6  0EF7               	movlw	low STR_44
 16697  0011D8  6F62               	movwf	strcmp@s2& (0+255),b
 16698  0011DA  0E7F               	movlw	high STR_44
 16699  0011DC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16700  0011DE  ECDA  F027         	call	_strcmp	;wreg free
 16701  0011E2  0100               	movlb	0	; () banked
 16702  0011E4  5160               	movf	?_strcmp& (0+255),w,b
 16703  0011E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16704  0011E8  A4D8               	btfss	status,2,c
 16705  0011EA  D002               	goto	l410
 16706                           
 16707                           ; BSR set to: 0
 16708                           ;MOTEapp.c: 359: {
 16709                           ;MOTEapp.c: 360: activeState = moteWaitAbp;
 16710  0011EC  0E04               	movlw	4
 16711  0011EE  D769               	goto	L14
 16712  0011F0                     l410:
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;MOTEapp.c: 362: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16716                           
 16717                           ; BSR set to: 0
 16718  0011F0  0E64               	movlw	low _moduleResonseBuffer
 16719  0011F2  6F60               	movwf	strcmp@s1& (0+255),b
 16720  0011F4  0E01               	movlw	high _moduleResonseBuffer
 16721  0011F6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16722  0011F8  0E57               	movlw	low STR_45
 16723  0011FA  6F62               	movwf	strcmp@s2& (0+255),b
 16724  0011FC  0E7D               	movlw	high STR_45
 16725  0011FE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16726  001200  ECDA  F027         	call	_strcmp	;wreg free
 16727  001204  0100               	movlb	0	; () banked
 16728  001206  5160               	movf	?_strcmp& (0+255),w,b
 16729  001208  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16730  00120A  A4D8               	btfss	status,2,c
 16731  00120C  D019               	goto	l412
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;MOTEapp.c: 363: {
 16735                           ;MOTEapp.c: 364: oled_clear();
 16736  00120E  ECAD  F02B         	call	_oled_clear	;wreg free
 16737                           
 16738                           ;MOTEapp.c: 365: oled_putString("Valid Keys",0,0);
 16739  001212  0EB4               	movlw	low STR_46
 16740  001214  0100               	movlb	0	; () banked
 16741  001216  6F72               	movwf	oled_putString@string& (0+255),b
 16742  001218  0E7E               	movlw	high STR_46
 16743  00121A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16744  00121C  0E00               	movlw	0
 16745  00121E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16746  001220  0E00               	movlw	0
 16747  001222  6F75               	movwf	oled_putString@start_page& (0+255),b
 16748  001224  EC71  F025         	call	_oled_putString	;wreg free
 16749                           
 16750                           ;MOTEapp.c: 366: oled_putString("Required",0,1);
 16751  001228  0E19               	movlw	low STR_47
 16752  00122A  0100               	movlb	0	; () banked
 16753  00122C  6F72               	movwf	oled_putString@string& (0+255),b
 16754  00122E  0E7F               	movlw	high STR_47
 16755  001230  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16756  001232  0E00               	movlw	0
 16757  001234  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16758  001236  0E01               	movlw	1
 16759  001238  6F75               	movwf	oled_putString@start_page& (0+255),b
 16760  00123A  EC71  F025         	call	_oled_putString	;wreg free
 16761  00123E  D076               	goto	l10303
 16762  001240                     l412:
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;MOTEapp.c: 369: else
 16766                           ;MOTEapp.c: 370: {
 16767                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 16768                           
 16769                           ; BSR set to: 0
 16770  001240  0EE7               	movlw	low STR_41
 16771  001242  6F61               	movwf	sendCommand@string& (0+255),b
 16772  001244  0E7D               	movlw	high STR_41
 16773  001246  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16774  001248  EC0D  F02A         	call	_sendCommand	;wreg free
 16775  00124C                     l10271:
 16776                           
 16777                           ;MOTEapp.c: 372: activeState = moteCheckAbp;
 16778  00124C  0E03               	movlw	3
 16779  00124E  D738               	goto	L13
 16780  001250                     
 16781                           ; BSR set to: 0
 16782                           ;MOTEapp.c: 377: if ( messageReady )
 16783                           
 16784                           ; BSR set to: 0
 16785  001250  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16786  001252  B4D8               	btfsc	status,2,c
 16787  001254  D175               	goto	l395
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;MOTEapp.c: 378: {
 16791                           ;MOTEapp.c: 379: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16792  001256  0E64               	movlw	low _moduleResonseBuffer
 16793  001258  6F60               	movwf	strcmp@s1& (0+255),b
 16794  00125A  0E01               	movlw	high _moduleResonseBuffer
 16795  00125C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16796  00125E  0E22               	movlw	low STR_49
 16797  001260  6F62               	movwf	strcmp@s2& (0+255),b
 16798  001262  0E7F               	movlw	high STR_49
 16799  001264  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16800  001266  ECDA  F027         	call	_strcmp	;wreg free
 16801  00126A  0100               	movlb	0	; () banked
 16802  00126C  5160               	movf	?_strcmp& (0+255),w,b
 16803  00126E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16804  001270  A4D8               	btfss	status,2,c
 16805  001272  D019               	goto	l416
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;MOTEapp.c: 380: {
 16809                           ;MOTEapp.c: 381: oled_clear();
 16810  001274  ECAD  F02B         	call	_oled_clear	;wreg free
 16811                           
 16812                           ;MOTEapp.c: 382: oled_putString("ABP Join ",0,0);
 16813  001278  0ED4               	movlw	low STR_50
 16814  00127A  0100               	movlb	0	; () banked
 16815  00127C  6F72               	movwf	oled_putString@string& (0+255),b
 16816  00127E  0E7E               	movlw	high STR_50
 16817  001280  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16818  001282  0E00               	movlw	0
 16819  001284  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16820  001286  0E00               	movlw	0
 16821  001288  6F75               	movwf	oled_putString@start_page& (0+255),b
 16822  00128A  EC71  F025         	call	_oled_putString	;wreg free
 16823                           
 16824                           ;MOTEapp.c: 383: oled_putString("Successful",0,1);
 16825  00128E  0E9E               	movlw	low STR_51
 16826  001290  0100               	movlb	0	; () banked
 16827  001292  6F72               	movwf	oled_putString@string& (0+255),b
 16828  001294  0E7E               	movlw	high STR_51
 16829  001296  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16830  001298  0E00               	movlw	0
 16831  00129A  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16832  00129C  0E01               	movlw	1
 16833  00129E  6F75               	movwf	oled_putString@start_page& (0+255),b
 16834  0012A0  EC71  F025         	call	_oled_putString	;wreg free
 16835  0012A4  D090               	goto	l10325
 16836  0012A6                     l416:
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;MOTEapp.c: 386: else
 16840                           ;MOTEapp.c: 387: {
 16841                           ;MOTEapp.c: 388: sendCommand("mac reset");
 16842                           
 16843                           ; BSR set to: 0
 16844  0012A6  0EF2               	movlw	low STR_52
 16845  0012A8  6F61               	movwf	sendCommand@string& (0+255),b
 16846  0012AA  0E7E               	movlw	high STR_52
 16847  0012AC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16848  0012AE  EC0D  F02A         	call	_sendCommand	;wreg free
 16849  0012B2                     l10287:
 16850                           
 16851                           ;MOTEapp.c: 389: activeState = moteReset;
 16852  0012B2  0E01               	movlw	1
 16853  0012B4  D705               	goto	L13
 16854  0012B6                     
 16855                           ; BSR set to: 0
 16856                           ;MOTEapp.c: 395: if ( messageReady )
 16857                           
 16858                           ; BSR set to: 0
 16859  0012B6  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16860  0012B8  B4D8               	btfsc	status,2,c
 16861  0012BA  D142               	goto	l395
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;MOTEapp.c: 396: {
 16865                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16866  0012BC  0E64               	movlw	low _moduleResonseBuffer
 16867  0012BE  6F60               	movwf	strcmp@s1& (0+255),b
 16868  0012C0  0E01               	movlw	high _moduleResonseBuffer
 16869  0012C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16870  0012C4  0EF7               	movlw	low STR_44
 16871  0012C6  6F62               	movwf	strcmp@s2& (0+255),b
 16872  0012C8  0E7F               	movlw	high STR_44
 16873  0012CA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16874  0012CC  ECDA  F027         	call	_strcmp	;wreg free
 16875  0012D0  0100               	movlb	0	; () banked
 16876  0012D2  5160               	movf	?_strcmp& (0+255),w,b
 16877  0012D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16878  0012D6  A4D8               	btfss	status,2,c
 16879  0012D8  D002               	goto	l420
 16880                           
 16881                           ; BSR set to: 0
 16882                           ;MOTEapp.c: 398: {
 16883                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 16884  0012DA  0E06               	movlw	6
 16885  0012DC  D6F2               	goto	L14
 16886  0012DE                     l420:
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16890                           
 16891                           ; BSR set to: 0
 16892  0012DE  0E64               	movlw	low _moduleResonseBuffer
 16893  0012E0  6F60               	movwf	strcmp@s1& (0+255),b
 16894  0012E2  0E01               	movlw	high _moduleResonseBuffer
 16895  0012E4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16896  0012E6  0E57               	movlw	low STR_45
 16897  0012E8  6F62               	movwf	strcmp@s2& (0+255),b
 16898  0012EA  0E7D               	movlw	high STR_45
 16899  0012EC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16900  0012EE  ECDA  F027         	call	_strcmp	;wreg free
 16901  0012F2  0100               	movlb	0	; () banked
 16902  0012F4  5160               	movf	?_strcmp& (0+255),w,b
 16903  0012F6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16904  0012F8  A4D8               	btfss	status,2,c
 16905  0012FA  D01A               	goto	l422
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;MOTEapp.c: 402: {
 16909                           ;MOTEapp.c: 403: oled_clear();
 16910  0012FC  ECAD  F02B         	call	_oled_clear	;wreg free
 16911                           
 16912                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 16913  001300  0EB4               	movlw	low STR_46
 16914  001302  0100               	movlb	0	; () banked
 16915  001304  6F72               	movwf	oled_putString@string& (0+255),b
 16916  001306  0E7E               	movlw	high STR_46
 16917  001308  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16918  00130A  0E00               	movlw	0
 16919  00130C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16920  00130E  0E00               	movlw	0
 16921  001310  6F75               	movwf	oled_putString@start_page& (0+255),b
 16922  001312  EC71  F025         	call	_oled_putString	;wreg free
 16923                           
 16924                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 16925  001316  0E19               	movlw	low STR_47
 16926  001318  0100               	movlb	0	; () banked
 16927  00131A  6F72               	movwf	oled_putString@string& (0+255),b
 16928  00131C  0E7F               	movlw	high STR_47
 16929  00131E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16930  001320  0E00               	movlw	0
 16931  001322  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16932  001324  0E01               	movlw	1
 16933  001326  6F75               	movwf	oled_putString@start_page& (0+255),b
 16934  001328  EC71  F025         	call	_oled_putString	;wreg free
 16935  00132C                     l10303:
 16936                           
 16937                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 16938  00132C  0E09               	movlw	9
 16939  00132E  D6C8               	goto	L13
 16940  001330                     l422:
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 16944                           
 16945                           ; BSR set to: 0
 16946  001330  0E64               	movlw	low _moduleResonseBuffer
 16947  001332  6F60               	movwf	strcmp@s1& (0+255),b
 16948  001334  0E01               	movlw	high _moduleResonseBuffer
 16949  001336  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16950  001338  0E49               	movlw	low STR_57
 16951  00133A  6F62               	movwf	strcmp@s2& (0+255),b
 16952  00133C  0E7D               	movlw	high STR_57
 16953  00133E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16954  001340  ECDA  F027         	call	_strcmp	;wreg free
 16955  001344  0100               	movlb	0	; () banked
 16956  001346  5160               	movf	?_strcmp& (0+255),w,b
 16957  001348  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16958  00134A  A4D8               	btfss	status,2,c
 16959  00134C  D007               	goto	l424
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;MOTEapp.c: 409: {
 16963                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 16964  00134E  0E3B               	movlw	low STR_43
 16965  001350  6F61               	movwf	sendCommand@string& (0+255),b
 16966  001352  0E7D               	movlw	high STR_43
 16967  001354  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16968  001356  EC0D  F02A         	call	_sendCommand	;wreg free
 16969  00135A  D065               	goto	l10337
 16970  00135C                     l424:
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 16974                           
 16975                           ; BSR set to: 0
 16976  00135C  0E64               	movlw	low _moduleResonseBuffer
 16977  00135E  6F60               	movwf	strcmp@s1& (0+255),b
 16978  001360  0E01               	movlw	high _moduleResonseBuffer
 16979  001362  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16980  001364  0E93               	movlw	low STR_59
 16981  001366  6F62               	movwf	strcmp@s2& (0+255),b
 16982  001368  0E7E               	movlw	high STR_59
 16983  00136A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16984  00136C  ECDA  F027         	call	_strcmp	;wreg free
 16985  001370  D066               	goto	L15
 16986  001372                     
 16987                           ; BSR set to: 0
 16988                           ;MOTEapp.c: 420: if ( messageReady )
 16989                           
 16990                           ; BSR set to: 0
 16991  001372  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16992  001374  B4D8               	btfsc	status,2,c
 16993  001376  D0E4               	goto	l395
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;MOTEapp.c: 421: {
 16997                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16998  001378  0E64               	movlw	low _moduleResonseBuffer
 16999  00137A  6F60               	movwf	strcmp@s1& (0+255),b
 17000  00137C  0E01               	movlw	high _moduleResonseBuffer
 17001  00137E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17002  001380  0E22               	movlw	low STR_49
 17003  001382  6F62               	movwf	strcmp@s2& (0+255),b
 17004  001384  0E7F               	movlw	high STR_49
 17005  001386  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17006  001388  ECDA  F027         	call	_strcmp	;wreg free
 17007  00138C  0100               	movlb	0	; () banked
 17008  00138E  5160               	movf	?_strcmp& (0+255),w,b
 17009  001390  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17010  001392  A4D8               	btfss	status,2,c
 17011  001394  D01A               	goto	l429
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;MOTEapp.c: 423: {
 17015                           ;MOTEapp.c: 424: oled_clear();
 17016  001396  ECAD  F02B         	call	_oled_clear	;wreg free
 17017                           
 17018                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 17019  00139A  0E88               	movlw	low STR_61
 17020  00139C  0100               	movlb	0	; () banked
 17021  00139E  6F72               	movwf	oled_putString@string& (0+255),b
 17022  0013A0  0E7E               	movlw	high STR_61
 17023  0013A2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17024  0013A4  0E00               	movlw	0
 17025  0013A6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17026  0013A8  0E00               	movlw	0
 17027  0013AA  6F75               	movwf	oled_putString@start_page& (0+255),b
 17028  0013AC  EC71  F025         	call	_oled_putString	;wreg free
 17029                           
 17030                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 17031  0013B0  0E9E               	movlw	low STR_51
 17032  0013B2  0100               	movlb	0	; () banked
 17033  0013B4  6F72               	movwf	oled_putString@string& (0+255),b
 17034  0013B6  0E7E               	movlw	high STR_51
 17035  0013B8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17036  0013BA  0E00               	movlw	0
 17037  0013BC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17038  0013BE  0E01               	movlw	1
 17039  0013C0  6F75               	movwf	oled_putString@start_page& (0+255),b
 17040  0013C2  EC71  F025         	call	_oled_putString	;wreg free
 17041  0013C6                     l10325:
 17042                           
 17043                           ;MOTEapp.c: 427: activeState = moteJoined;
 17044  0013C6  0E07               	movlw	7
 17045  0013C8  D67B               	goto	L13
 17046  0013CA                     l429:
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17050                           
 17051                           ; BSR set to: 0
 17052  0013CA  0E64               	movlw	low _moduleResonseBuffer
 17053  0013CC  6F60               	movwf	strcmp@s1& (0+255),b
 17054  0013CE  0E01               	movlw	high _moduleResonseBuffer
 17055  0013D0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17056  0013D2  0E95               	movlw	low STR_63
 17057  0013D4  6F62               	movwf	strcmp@s2& (0+255),b
 17058  0013D6  0E7F               	movlw	high STR_63
 17059  0013D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17060  0013DA  ECDA  F027         	call	_strcmp	;wreg free
 17061  0013DE  0100               	movlb	0	; () banked
 17062  0013E0  5160               	movf	?_strcmp& (0+255),w,b
 17063  0013E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17064  0013E4  A4D8               	btfss	status,2,c
 17065  0013E6  D021               	goto	l431
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;MOTEapp.c: 430: {
 17069                           ;MOTEapp.c: 431: oled_clear();
 17070  0013E8  ECAD  F02B         	call	_oled_clear	;wreg free
 17071                           
 17072                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 17073  0013EC  0EE8               	movlw	low STR_64
 17074  0013EE  0100               	movlb	0	; () banked
 17075  0013F0  6F72               	movwf	oled_putString@string& (0+255),b
 17076  0013F2  0E7E               	movlw	high STR_64
 17077  0013F4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17078  0013F6  0E01               	movlw	1
 17079  0013F8  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17080  0013FA  0E00               	movlw	0
 17081  0013FC  6F75               	movwf	oled_putString@start_page& (0+255),b
 17082  0013FE  EC71  F025         	call	_oled_putString	;wreg free
 17083                           
 17084                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 17085  001402  0E8E               	movlw	low STR_65
 17086  001404  0100               	movlb	0	; () banked
 17087  001406  6F72               	movwf	oled_putString@string& (0+255),b
 17088  001408  0E7F               	movlw	high STR_65
 17089  00140A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17090  00140C  0E02               	movlw	2
 17091  00140E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17092  001410  0E01               	movlw	1
 17093  001412  6F75               	movwf	oled_putString@start_page& (0+255),b
 17094  001414  EC71  F025         	call	_oled_putString	;wreg free
 17095                           
 17096                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 17097  001418  0E3B               	movlw	low STR_43
 17098  00141A  0100               	movlb	0	; () banked
 17099  00141C  6F61               	movwf	sendCommand@string& (0+255),b
 17100  00141E  0E7D               	movlw	high STR_43
 17101  001420  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17102  001422  EC0D  F02A         	call	_sendCommand	;wreg free
 17103  001426                     l10337:
 17104                           
 17105                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 17106  001426  0E05               	movlw	5
 17107  001428  D64B               	goto	L13
 17108  00142A                     l431:
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17112                           
 17113                           ; BSR set to: 0
 17114  00142A  0E64               	movlw	low _moduleResonseBuffer
 17115  00142C  6F60               	movwf	strcmp@s1& (0+255),b
 17116  00142E  0E01               	movlw	high _moduleResonseBuffer
 17117  001430  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17118  001432  0E93               	movlw	low STR_59
 17119  001434  6F62               	movwf	strcmp@s2& (0+255),b
 17120  001436  0E7E               	movlw	high STR_59
 17121  001438  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17122  00143A  ECDA  F027         	call	_strcmp	;wreg free
 17123  00143E                     L15:
 17124  00143E  0100               	movlb	0	; () banked
 17125  001440  5160               	movf	?_strcmp& (0+255),w,b
 17126  001442  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17127  001444  A4D8               	btfss	status,2,c
 17128  001446  D07C               	goto	l395
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;MOTEapp.c: 438: {
 17132                           ;MOTEapp.c: 439: activeState = moteStartup;
 17133  001448  0E00               	movlw	0
 17134  00144A  D63B               	goto	L14
 17135  00144C                     
 17136                           ; BSR set to: 0
 17137                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 17138                           
 17139                           ; BSR set to: 0
 17140  00144C  0EA9               	movlw	low STR_68
 17141  00144E  6F61               	movwf	sendCommand@string& (0+255),b
 17142  001450  0E7E               	movlw	high STR_68
 17143  001452  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17144  001454  EC0D  F02A         	call	_sendCommand	;wreg free
 17145  001458  D018               	goto	l10353
 17146  00145A                     
 17147                           ; BSR set to: 0
 17148                           ;MOTEapp.c: 448: if ( messageReady )
 17149                           
 17150                           ; BSR set to: 0
 17151  00145A  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17152  00145C  B4D8               	btfsc	status,2,c
 17153  00145E  D070               	goto	l395
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;MOTEapp.c: 449: {
 17157                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17158  001460  0E64               	movlw	low _moduleResonseBuffer
 17159  001462  6F60               	movwf	strcmp@s1& (0+255),b
 17160  001464  0E01               	movlw	high _moduleResonseBuffer
 17161  001466  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17162  001468  0E49               	movlw	low STR_57
 17163  00146A  6F62               	movwf	strcmp@s2& (0+255),b
 17164  00146C  0E7D               	movlw	high STR_57
 17165  00146E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17166  001470  ECDA  F027         	call	_strcmp	;wreg free
 17167  001474  0100               	movlb	0	; () banked
 17168  001476  5160               	movf	?_strcmp& (0+255),w,b
 17169  001478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17170  00147A  A4D8               	btfss	status,2,c
 17171  00147C  D008               	goto	l437
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;MOTEapp.c: 451: {
 17175                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 17176  00147E  0EA9               	movlw	low STR_68
 17177  001480  6F61               	movwf	sendCommand@string& (0+255),b
 17178  001482  0E7E               	movlw	high STR_68
 17179  001484  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17180  001486  EC0D  F02A         	call	_sendCommand	;wreg free
 17181  00148A                     l10353:
 17182                           
 17183                           ;MOTEapp.c: 453: activeState = moteGetDr;
 17184  00148A  0E08               	movlw	8
 17185  00148C  D619               	goto	L13
 17186  00148E                     l437:
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;MOTEapp.c: 455: else
 17190                           ;MOTEapp.c: 456: {
 17191                           ;MOTEapp.c: 457: uint8_t readDataRate;
 17192                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 17193                           
 17194                           ; BSR set to: 0
 17195  00148E  0101               	movlb	1	; () banked
 17196  001490  5164               	movf	_moduleResonseBuffer& (0+255),w,b
 17197  001492  0FD0               	addlw	208
 17198  001494  0100               	movlb	0	; () banked
 17199  001496  6F7A               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 17203  001498  C07A  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17204                           
 17205                           ; BSR set to: 0
 17206                           ;MOTEapp.c: 460: joiningComplete = 1;
 17207  00149C  0E01               	movlw	1
 17208  00149E  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;MOTEapp.c: 461: }
 17212                           ;MOTEapp.c: 462: }
 17213                           ;MOTEapp.c: 463: break;
 17214                           
 17215                           ; BSR set to: 0
 17216  0014A0  D04F               	goto	l395
 17217  0014A2                     
 17218                           ; BSR set to: 0
 17219                           ;MOTEapp.c: 465: if (selectButton)
 17220                           
 17221                           ; BSR set to: 0
 17222  0014A2  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17223  0014A4  B4D8               	btfsc	status,2,c
 17224  0014A6  D04C               	goto	l395
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;MOTEapp.c: 466: {
 17228                           ;MOTEapp.c: 467: activeState = moteComFailure;
 17229  0014A8  0E0A               	movlw	10
 17230  0014AA  D60B               	goto	L14
 17231  0014AC                     
 17232                           ; BSR set to: 0
 17233                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 17234                           
 17235                           ; BSR set to: 0
 17236  0014AC  0E00               	movlw	0
 17237  0014AE  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17238  0014B0  0E00               	movlw	0
 17239  0014B2  ECE6  F028         	call	_DATAEE_WriteByte
 17240  0014B6  B281               	btfsc	3969,1,c	;volatile
 17241  0014B8  D002               	goto	u9010
 17242  0014BA  A081               	btfss	3969,0,c	;volatile
 17243  0014BC  D7FC               	goto	l443
 17244  0014BE                     u9010:
 17245                           
 17246                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 17247  0014BE  0EFA               	movlw	250
 17248  0014C0  0100               	movlb	0	; () banked
 17249  0014C2  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17250  0014C4  0E58               	movlw	88
 17251  0014C6                     u11067:
 17252  0014C6  2EE8               	decfsz	wreg,f,c
 17253  0014C8  D7FE               	bra	u11067
 17254  0014CA  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17255  0014CC  D7FC               	bra	u11067
 17256  0014CE  F000               	nop	
 17257                           
 17258                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 17259  0014D0  0EFA               	movlw	250
 17260  0014D2  0100               	movlb	0	; () banked
 17261  0014D4  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17262  0014D6  0E58               	movlw	88
 17263  0014D8                     u11077:
 17264  0014D8  2EE8               	decfsz	wreg,f,c
 17265  0014DA  D7FE               	bra	u11077
 17266  0014DC  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17267  0014DE  D7FC               	bra	u11077
 17268  0014E0  F000               	nop	
 17269                           
 17270                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 17271  0014E2  0EFA               	movlw	250
 17272  0014E4  0100               	movlb	0	; () banked
 17273  0014E6  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17274  0014E8  0E58               	movlw	88
 17275  0014EA                     u11087:
 17276  0014EA  2EE8               	decfsz	wreg,f,c
 17277  0014EC  D7FE               	bra	u11087
 17278  0014EE  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17279  0014F0  D7FC               	bra	u11087
 17280  0014F2  F000               	nop	
 17281  0014F4  00FF               	reset		;# 
 17282                           
 17283                           ;MOTEapp.c: 480: }
 17284                           
 17285                           ;MOTEapp.c: 479: break;
 17286  0014F6  D024               	goto	l395
 17287  0014F8                     l390:
 17288  0014F8  0100               	movlb	0	; () banked
 17289  0014FA  51F4               	movf	_activeState& (0+255),w,b
 17290                           
 17291                           ; Switch size 1, requested type "space"
 17292                           ; Number of cases is 11, Range of values is 0 to 10
 17293                           ; switch strategies available:
 17294                           ; Name         Instructions Cycles
 17295                           ; simple_byte           34    18 (average)
 17296                           ;	Chosen strategy is simple_byte
 17297  0014FC  0A00               	xorlw	0	; case 0
 17298  0014FE  B4D8               	btfsc	status,2,c
 17299  001500  D596               	goto	l396
 17300  001502  0A01               	xorlw	1	; case 1
 17301  001504  B4D8               	btfsc	status,2,c
 17302  001506  D59B               	goto	l397
 17303  001508  0A03               	xorlw	3	; case 2
 17304  00150A  B4D8               	btfsc	status,2,c
 17305  00150C  D625               	goto	l404
 17306  00150E  0A01               	xorlw	1	; case 3
 17307  001510  B4D8               	btfsc	status,2,c
 17308  001512  D65A               	goto	l408
 17309  001514  0A07               	xorlw	7	; case 4
 17310  001516  B4D8               	btfsc	status,2,c
 17311  001518  D69B               	goto	l414
 17312  00151A  0A01               	xorlw	1	; case 5
 17313  00151C  B4D8               	btfsc	status,2,c
 17314  00151E  D6CB               	goto	l418
 17315  001520  0A03               	xorlw	3	; case 6
 17316  001522  B4D8               	btfsc	status,2,c
 17317  001524  D726               	goto	l427
 17318  001526  0A01               	xorlw	1	; case 7
 17319  001528  B4D8               	btfsc	status,2,c
 17320  00152A  D790               	goto	l434
 17321  00152C  0A0F               	xorlw	15	; case 8
 17322  00152E  B4D8               	btfsc	status,2,c
 17323  001530  D794               	goto	l435
 17324  001532  0A01               	xorlw	1	; case 9
 17325  001534  B4D8               	btfsc	status,2,c
 17326  001536  D7B5               	goto	l439
 17327  001538  0A03               	xorlw	3	; case 10
 17328  00153A  B4D8               	btfsc	status,2,c
 17329  00153C  D7B7               	goto	l441
 17330  00153E  D576               	goto	l391
 17331  001540                     l395:
 17332                           
 17333                           ;MOTEapp.c: 481: return joiningComplete;
 17334                           
 17335                           ; BSR set to: 0
 17336  001540  0100               	movlb	0	; () banked
 17337  001542  517B               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17338  001544  0012               	return	
 17339  001546                     __end_of_moteJoiningProcess:
 17340                           	opt stack 0
 17341                           tblptru	equ	0xFF8
 17342                           tblptrh	equ	0xFF7
 17343                           tblptrl	equ	0xFF6
 17344                           tablat	equ	0xFF5
 17345                           prodh	equ	0xFF4
 17346                           prodl	equ	0xFF3
 17347                           intcon	equ	0xFF2
 17348                           intcon3	equ	0xFF0
 17349                           postinc0	equ	0xFEE
 17350                           wreg	equ	0xFE8
 17351                           indf1	equ	0xFE7
 17352                           postdec1	equ	0xFE5
 17353                           fsr1h	equ	0xFE2
 17354                           fsr1l	equ	0xFE1
 17355                           indf2	equ	0xFDF
 17356                           fsr2h	equ	0xFDA
 17357                           fsr2l	equ	0xFD9
 17358                           status	equ	0xFD8
 17359                           
 17360 ;; *************** function _strncmp *****************
 17361 ;; Defined at:
 17362 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17363 ;; Parameters:    Size  Location     Type
 17364 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17365 ;;		 -> moduleResonseBuffer(64), 
 17366 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17367 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17368 ;;		 -> STR_35(5), STR_31(5), 
 17369 ;;  len             2    4[BANK0 ] unsigned int 
 17370 ;; Auto vars:     Size  Location     Type
 17371 ;;		None
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  2    0[BANK0 ] int 
 17374 ;; Registers used:
 17375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17381 ;;      Params:         0       6       0       0       0       0       0       0       0
 17382 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17383 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17384 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17385 ;;Total ram usage:        9 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:   11
 17388 ;; This function calls:
 17389 ;;		Nothing
 17390 ;; This function is called by:
 17391 ;;		_moteJoiningProcess
 17392 ;;		_moteRunningProcess
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text52
 17397  004586                     __ptext52:
 17398                           	opt stack 0
 17399  004586                     _strncmp:
 17400                           	opt stack 17
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;incstack = 0
 17404  004586  D035               	goto	l2806
 17405  004588                     l9419:
 17406  004588  C060  FFD9         	movff	strncmp@s1,fsr2l
 17407  00458C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17408  004590  50DF               	movf	indf2,w,c
 17409  004592  B4D8               	btfsc	status,2,c
 17410  004594  D010               	goto	u7890
 17411  004596  C060  FFD9         	movff	strncmp@s1,fsr2l
 17412  00459A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17413  00459E  50DF               	movf	indf2,w,c
 17414  0045A0  0100               	movlb	0	; () banked
 17415  0045A2  6F66               	movwf	??_strncmp& (0+255),b
 17416  0045A4  C062  FFF6         	movff	strncmp@s2,tblptrl
 17417  0045A8  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17418  0045AC                     	if	0	;tblptru may be non-zero
 17419  0045AC                     	endif
 17420  0045AC                     	if	0	;tblptru may be non-zero
 17421  0045AC                     	endif
 17422  0045AC  0008               	tblrd		*
 17423  0045AE  50F5               	movf	tablat,w,c
 17424  0045B0  1966               	xorwf	??_strncmp& (0+255),w,b
 17425  0045B2  B4D8               	btfsc	status,2,c
 17426  0045B4  D01A               	goto	l2808
 17427  0045B6                     u7890:
 17428                           
 17429                           ; BSR set to: 0
 17430  0045B6  C062  FFF6         	movff	strncmp@s2,tblptrl
 17431  0045BA  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17432  0045BE                     	if	0	;tblptru may be non-zero
 17433  0045BE                     	endif
 17434  0045BE                     	if	0	;tblptru may be non-zero
 17435  0045BE                     	endif
 17436  0045BE  0008               	tblrd		*
 17437  0045C0  50F5               	movf	tablat,w,c
 17438  0045C2  0100               	movlb	0	; () banked
 17439  0045C4  6F66               	movwf	??_strncmp& (0+255),b
 17440  0045C6  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17441  0045C8  1F66               	comf	??_strncmp& (0+255),f,b
 17442  0045CA  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17443  0045CC  4B66               	infsnz	??_strncmp& (0+255),f,b
 17444  0045CE  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17445  0045D0  C060  FFD9         	movff	strncmp@s1,fsr2l
 17446  0045D4  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17447  0045D8  50DF               	movf	indf2,w,c
 17448  0045DA  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17449  0045DC  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17450  0045DE  2566               	addwf	??_strncmp& (0+255),w,b
 17451  0045E0  6F60               	movwf	?_strncmp& (0+255),b
 17452  0045E2  0E00               	movlw	0
 17453  0045E4  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17454  0045E6  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17455                           
 17456                           ; BSR set to: 0
 17457  0045E8  0012               	return	
 17458  0045EA                     l2808:
 17459                           
 17460                           ; BSR set to: 0
 17461                           
 17462                           ; BSR set to: 0
 17463  0045EA  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17464  0045EC  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17465  0045EE  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17466  0045F0  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17467  0045F2                     l2806:
 17468                           
 17469                           ; BSR set to: 0
 17470  0045F2  0100               	movlb	0	; () banked
 17471  0045F4  0764               	decf	strncmp@len& (0+255),f,b
 17472  0045F6  A0D8               	btfss	status,0,c
 17473  0045F8  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17474  0045FA  2964               	incf	strncmp@len& (0+255),w,b
 17475  0045FC  E1C5               	bnz	l9419
 17476  0045FE  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17477  004600  A4D8               	btfss	status,2,c
 17478  004602  D7C2               	goto	l2807
 17479                           
 17480                           ; BSR set to: 0
 17481                           
 17482                           ; BSR set to: 0
 17483  004604  0E00               	movlw	0
 17484  004606  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17485  004608  0E00               	movlw	0
 17486  00460A  6F60               	movwf	?_strncmp& (0+255),b
 17487  00460C  0012               	return	
 17488  00460E                     __end_of_strncmp:
 17489                           	opt stack 0
 17490                           tblptru	equ	0xFF8
 17491                           tblptrh	equ	0xFF7
 17492                           tblptrl	equ	0xFF6
 17493                           tablat	equ	0xFF5
 17494                           prodh	equ	0xFF4
 17495                           prodl	equ	0xFF3
 17496                           intcon	equ	0xFF2
 17497                           intcon3	equ	0xFF0
 17498                           postinc0	equ	0xFEE
 17499                           wreg	equ	0xFE8
 17500                           indf1	equ	0xFE7
 17501                           postdec1	equ	0xFE5
 17502                           fsr1h	equ	0xFE2
 17503                           fsr1l	equ	0xFE1
 17504                           indf2	equ	0xFDF
 17505                           fsr2h	equ	0xFDA
 17506                           fsr2l	equ	0xFD9
 17507                           status	equ	0xFD8
 17508                           
 17509 ;; *************** function _strcmp *****************
 17510 ;; Defined at:
 17511 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17514 ;;		 -> moduleResonseBuffer(64), 
 17515 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17516 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17517 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17518 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;  r               1    5[BANK0 ] char 
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  2    0[BANK0 ] int 
 17523 ;; Registers used:
 17524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17530 ;;      Params:         0       4       0       0       0       0       0       0       0
 17531 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17532 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17533 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17534 ;;Total ram usage:        6 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:   11
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_moteJoiningProcess
 17541 ;;		_moteRunningProcess
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text53
 17546  004FB4                     __ptext53:
 17547                           	opt stack 0
 17548  004FB4                     _strcmp:
 17549                           	opt stack 17
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;incstack = 0
 17553  004FB4  D005               	goto	l2798
 17554  004FB6  0100               	movlb	0	; () banked
 17555  004FB8  4B60               	infsnz	strcmp@s1& (0+255),f,b
 17556  004FBA  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 17557  004FBC  4B62               	infsnz	strcmp@s2& (0+255),f,b
 17558  004FBE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 17559  004FC0                     l2798:
 17560                           
 17561                           ; BSR set to: 0
 17562  004FC0  C060  FFD9         	movff	strcmp@s1,fsr2l
 17563  004FC4  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17564  004FC8  50DF               	movf	indf2,w,c
 17565  004FCA  0100               	movlb	0	; () banked
 17566  004FCC  6F64               	movwf	??_strcmp& (0+255),b
 17567  004FCE  C062  FFF6         	movff	strcmp@s2,tblptrl
 17568  004FD2  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 17569  004FD6                     	if	0	;tblptru may be non-zero
 17570  004FD6                     	endif
 17571  004FD6                     	if	0	;tblptru may be non-zero
 17572  004FD6                     	endif
 17573  004FD6  0008               	tblrd		*
 17574  004FD8  50F5               	movf	tablat,w,c
 17575  004FDA  0800               	sublw	0
 17576  004FDC  2564               	addwf	??_strcmp& (0+255),w,b
 17577  004FDE  6F65               	movwf	strcmp@r& (0+255),b
 17578  004FE0  5165               	movf	strcmp@r& (0+255),w,b
 17579  004FE2  A4D8               	btfss	status,2,c
 17580  004FE4  D007               	goto	u7920
 17581                           
 17582                           ; BSR set to: 0
 17583  004FE6  C060  FFD9         	movff	strcmp@s1,fsr2l
 17584  004FEA  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17585  004FEE  50DF               	movf	indf2,w,c
 17586  004FF0  A4D8               	btfss	status,2,c
 17587  004FF2  D7E1               	goto	l2799
 17588  004FF4                     u7920:
 17589                           
 17590                           ; BSR set to: 0
 17591                           
 17592                           ; BSR set to: 0
 17593                           
 17594                           ; BSR set to: 0
 17595  004FF4  5165               	movf	strcmp@r& (0+255),w,b
 17596  004FF6  6F60               	movwf	?_strcmp& (0+255),b
 17597  004FF8  6B61               	clrf	(?_strcmp+1)& (0+255),b
 17598  004FFA  BF60               	btfsc	?_strcmp& (0+255),7,b
 17599  004FFC  0761               	decf	(?_strcmp+1)& (0+255),f,b
 17600  004FFE  0012               	return	
 17601  005000                     __end_of_strcmp:
 17602                           	opt stack 0
 17603                           tblptru	equ	0xFF8
 17604                           tblptrh	equ	0xFF7
 17605                           tblptrl	equ	0xFF6
 17606                           tablat	equ	0xFF5
 17607                           prodh	equ	0xFF4
 17608                           prodl	equ	0xFF3
 17609                           intcon	equ	0xFF2
 17610                           intcon3	equ	0xFF0
 17611                           postinc0	equ	0xFEE
 17612                           wreg	equ	0xFE8
 17613                           indf1	equ	0xFE7
 17614                           postdec1	equ	0xFE5
 17615                           fsr1h	equ	0xFE2
 17616                           fsr1l	equ	0xFE1
 17617                           indf2	equ	0xFDF
 17618                           fsr2h	equ	0xFDA
 17619                           fsr2l	equ	0xFD9
 17620                           status	equ	0xFD8
 17621                           
 17622 ;; *************** function _moteApp_delayms *****************
 17623 ;; Defined at:
 17624 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 17625 ;; Parameters:    Size  Location     Type
 17626 ;;  length          2    0[BANK0 ] unsigned int 
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;  counter         2    3[BANK0 ] unsigned int 
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      void 
 17631 ;; Registers used:
 17632 ;;		wreg, status,2, status,0
 17633 ;; Tracked objects:
 17634 ;;		On entry : 0/0
 17635 ;;		On exit  : 0/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17638 ;;      Params:         0       2       0       0       0       0       0       0       0
 17639 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17640 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17641 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17642 ;;Total ram usage:        5 bytes
 17643 ;; Hardware stack levels used:    1
 17644 ;; Hardware stack levels required when called:   11
 17645 ;; This function calls:
 17646 ;;		Nothing
 17647 ;; This function is called by:
 17648 ;;		_main
 17649 ;;		_test_powerup
 17650 ;;		_moduleResync
 17651 ;;		_moteJoiningProcess
 17652 ;;		_moteRunningProcess
 17653 ;;		_moteApp_GoToSleep
 17654 ;;		_moteApp_setSensorsInput
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text54
 17659  005354                     __ptext54:
 17660                           	opt stack 0
 17661  005354                     _moteApp_delayms:
 17662                           	opt stack 16
 17663                           
 17664                           ;MOTEapp.c: 169: uint16_t counter;
 17665                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;incstack = 0
 17669  005354  0E00               	movlw	0
 17670  005356  0100               	movlb	0	; () banked
 17671  005358  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17672  00535A  0E00               	movlw	0
 17673  00535C  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 17674  00535E  D00C               	goto	l348
 17675  005360                     
 17676                           ; BSR set to: 0
 17677                           ;MOTEapp.c: 171: {
 17678                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 17679                           
 17680                           ; BSR set to: 0
 17681  005360  0E10               	movlw	16
 17682  005362  0100               	movlb	0	; () banked
 17683  005364  6F62               	movwf	??_moteApp_delayms& (0+255),b
 17684  005366  0E94               	movlw	148
 17685  005368                     u11097:
 17686  005368  2EE8               	decfsz	wreg,f,c
 17687  00536A  D7FE               	bra	u11097
 17688  00536C  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 17689  00536E  D7FC               	bra	u11097
 17690  005370  F000               	nop	
 17691  005372  0100               	movlb	0	; () banked
 17692  005374  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17693  005376  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17694  005378                     l348:
 17695                           
 17696                           ; BSR set to: 0
 17697  005378  5160               	movf	moteApp_delayms@length& (0+255),w,b
 17698  00537A  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 17699  00537C  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17700  00537E  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17701  005380  B0D8               	btfsc	status,0,c
 17702  005382  0012               	return	
 17703  005384  D7ED               	goto	l349
 17704  005386                     __end_of_moteApp_delayms:
 17705                           	opt stack 0
 17706                           tblptru	equ	0xFF8
 17707                           tblptrh	equ	0xFF7
 17708                           tblptrl	equ	0xFF6
 17709                           tablat	equ	0xFF5
 17710                           prodh	equ	0xFF4
 17711                           prodl	equ	0xFF3
 17712                           intcon	equ	0xFF2
 17713                           intcon3	equ	0xFF0
 17714                           postinc0	equ	0xFEE
 17715                           wreg	equ	0xFE8
 17716                           indf1	equ	0xFE7
 17717                           postdec1	equ	0xFE5
 17718                           fsr1h	equ	0xFE2
 17719                           fsr1l	equ	0xFE1
 17720                           indf2	equ	0xFDF
 17721                           fsr2h	equ	0xFDA
 17722                           fsr2l	equ	0xFD9
 17723                           status	equ	0xFD8
 17724                           
 17725 ;; *************** function _DATAEE_WriteByte *****************
 17726 ;; Defined at:
 17727 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  bAdd            1    wreg     unsigned char 
 17730 ;;  bData           1    0[BANK0 ] unsigned char 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17733 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  1    wreg      void 
 17736 ;; Registers used:
 17737 ;;		wreg, status,2
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17743 ;;      Params:         0       1       0       0       0       0       0       0       0
 17744 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17746 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17747 ;;Total ram usage:        3 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:   11
 17750 ;; This function calls:
 17751 ;;		Nothing
 17752 ;; This function is called by:
 17753 ;;		_main
 17754 ;;		_moteJoiningProcess
 17755 ;; This function uses a non-reentrant model
 17756 ;;
 17757                           
 17758                           	psect	text55
 17759  0051CC                     __ptext55:
 17760                           	opt stack 0
 17761  0051CC                     _DATAEE_WriteByte:
 17762                           	opt stack 17
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;incstack = 0
 17766                           ;DATAEE_WriteByte@bAdd stored from wreg
 17767  0051CC  0100               	movlb	0	; () banked
 17768  0051CE  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17769                           
 17770                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17771  0051D0  0E00               	movlw	0
 17772  0051D2  BEF2               	btfsc	intcon,7,c	;volatile
 17773  0051D4  0E01               	movlw	1
 17774  0051D6  0100               	movlb	0	; () banked
 17775  0051D8  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17776                           
 17777                           ; BSR set to: 0
 17778                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17779  0051DA  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;memory.c: 171: EEDATA = bData;
 17783  0051DE  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17787  0051E2  9EA6               	bcf	4006,7,c	;volsfr
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17791  0051E4  9CA6               	bcf	4006,6,c	;volsfr
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;memory.c: 174: EECON1bits.WREN = 1;
 17795  0051E6  84A6               	bsf	4006,2,c	;volsfr
 17796                           
 17797                           ; BSR set to: 0
 17798                           ;memory.c: 175: INTCONbits.GIE = 0;
 17799  0051E8  9EF2               	bcf	intcon,7,c	;volatile
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;memory.c: 176: EECON2 = 0x55;
 17803  0051EA  0E55               	movlw	85
 17804  0051EC  6EA7               	movwf	4007,c	;volsfr
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;memory.c: 177: EECON2 = 0xAA;
 17808  0051EE  0EAA               	movlw	170
 17809  0051F0  6EA7               	movwf	4007,c	;volsfr
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;memory.c: 178: EECON1bits.WR = 1;
 17813  0051F2  82A6               	bsf	4006,1,c	;volsfr
 17814  0051F4                     
 17815                           ; BSR set to: 0
 17816                           ;memory.c: 181: {
 17817  0051F4  B2A6               	btfsc	4006,1,c	;volsfr
 17818  0051F6  D7FE               	goto	l1543
 17819                           
 17820                           ;memory.c: 182: }
 17821                           ;memory.c: 184: EECON1bits.WREN = 0;
 17822  0051F8  94A6               	bcf	4006,2,c	;volsfr
 17823                           
 17824                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17825  0051FA  0100               	movlb	0	; () banked
 17826  0051FC  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17827  0051FE  D002               	bra	u7755
 17828  005200  9EF2               	bcf	intcon,7,c	;volatile
 17829  005202  D001               	bra	u7756
 17830  005204                     u7755:
 17831  005204  8EF2               	bsf	intcon,7,c	;volatile
 17832  005206                     u7756:
 17833  005206  0012               	return		;funcret
 17834  005208                     __end_of_DATAEE_WriteByte:
 17835                           	opt stack 0
 17836                           tblptru	equ	0xFF8
 17837                           tblptrh	equ	0xFF7
 17838                           tblptrl	equ	0xFF6
 17839                           tablat	equ	0xFF5
 17840                           prodh	equ	0xFF4
 17841                           prodl	equ	0xFF3
 17842                           intcon	equ	0xFF2
 17843                           intcon3	equ	0xFF0
 17844                           postinc0	equ	0xFEE
 17845                           wreg	equ	0xFE8
 17846                           indf1	equ	0xFE7
 17847                           postdec1	equ	0xFE5
 17848                           fsr1h	equ	0xFE2
 17849                           fsr1l	equ	0xFE1
 17850                           indf2	equ	0xFDF
 17851                           fsr2h	equ	0xFDA
 17852                           fsr2l	equ	0xFD9
 17853                           status	equ	0xFD8
 17854                           
 17855 ;; *************** function _USBapp_exitCDCState *****************
 17856 ;; Defined at:
 17857 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17858 ;; Parameters:    Size  Location     Type
 17859 ;;  usbState        1    wreg     enum E5838
 17860 ;; Auto vars:     Size  Location     Type
 17861 ;;  usbState        1    0[BANK0 ] enum E5838
 17862 ;; Return value:  Size  Location     Type
 17863 ;;                  1    wreg      void 
 17864 ;; Registers used:
 17865 ;;		wreg
 17866 ;; Tracked objects:
 17867 ;;		On entry : 0/0
 17868 ;;		On exit  : 0/0
 17869 ;;		Unchanged: 0/0
 17870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17871 ;;      Params:         0       0       0       0       0       0       0       0       0
 17872 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17874 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17875 ;;Total ram usage:        1 bytes
 17876 ;; Hardware stack levels used:    1
 17877 ;; Hardware stack levels required when called:   11
 17878 ;; This function calls:
 17879 ;;		Nothing
 17880 ;; This function is called by:
 17881 ;;		_moteHandler
 17882 ;; This function uses a non-reentrant model
 17883 ;;
 17884                           
 17885                           	psect	text56
 17886  0058C4                     __ptext56:
 17887                           	opt stack 0
 17888  0058C4                     _USBapp_exitCDCState:
 17889                           	opt stack 18
 17890                           
 17891                           ;incstack = 0
 17892                           ;USBapp_exitCDCState@usbState stored from wreg
 17893  0058C4  0100               	movlb	0	; () banked
 17894  0058C6  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 17895                           
 17896                           ;USBapp.c: 141: exitUSB = usbState;
 17897  0058C8  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 17898  0058CC  0012               	return		;funcret
 17899  0058CE                     __end_of_USBapp_exitCDCState:
 17900                           	opt stack 0
 17901                           tblptru	equ	0xFF8
 17902                           tblptrh	equ	0xFF7
 17903                           tblptrl	equ	0xFF6
 17904                           tablat	equ	0xFF5
 17905                           prodh	equ	0xFF4
 17906                           prodl	equ	0xFF3
 17907                           intcon	equ	0xFF2
 17908                           intcon3	equ	0xFF0
 17909                           postinc0	equ	0xFEE
 17910                           wreg	equ	0xFE8
 17911                           indf1	equ	0xFE7
 17912                           postdec1	equ	0xFE5
 17913                           fsr1h	equ	0xFE2
 17914                           fsr1l	equ	0xFE1
 17915                           indf2	equ	0xFDF
 17916                           fsr2h	equ	0xFDA
 17917                           fsr2l	equ	0xFD9
 17918                           status	equ	0xFD8
 17919                           
 17920 ;; *************** function _USBapp_exitCDC *****************
 17921 ;; Defined at:
 17922 ;;		line 134 in file "../Includes/Board/USBapp.c"
 17923 ;; Parameters:    Size  Location     Type
 17924 ;;		None
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;		None
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  1    wreg      enum E5902
 17929 ;; Registers used:
 17930 ;;		wreg, status,2
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/0
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17936 ;;      Params:         0       0       0       0       0       0       0       0       0
 17937 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17938 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17939 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17940 ;;Total ram usage:        0 bytes
 17941 ;; Hardware stack levels used:    1
 17942 ;; Hardware stack levels required when called:   11
 17943 ;; This function calls:
 17944 ;;		Nothing
 17945 ;; This function is called by:
 17946 ;;		_moteHandler
 17947 ;; This function uses a non-reentrant model
 17948 ;;
 17949                           
 17950                           	psect	text57
 17951  005908                     __ptext57:
 17952                           	opt stack 0
 17953  005908                     _USBapp_exitCDC:
 17954                           	opt stack 18
 17955                           
 17956                           ;USBapp.c: 136: return exitUSB;
 17957                           
 17958                           ;incstack = 0
 17959  005908  0100               	movlb	0	; () banked
 17960  00590A  51F9               	movf	_exitUSB& (0+255),w,b
 17961  00590C  0012               	return	
 17962  00590E                     __end_of_USBapp_exitCDC:
 17963                           	opt stack 0
 17964                           tblptru	equ	0xFF8
 17965                           tblptrh	equ	0xFF7
 17966                           tblptrl	equ	0xFF6
 17967                           tablat	equ	0xFF5
 17968                           prodh	equ	0xFF4
 17969                           prodl	equ	0xFF3
 17970                           intcon	equ	0xFF2
 17971                           intcon3	equ	0xFF0
 17972                           postinc0	equ	0xFEE
 17973                           wreg	equ	0xFE8
 17974                           indf1	equ	0xFE7
 17975                           postdec1	equ	0xFE5
 17976                           fsr1h	equ	0xFE2
 17977                           fsr1l	equ	0xFE1
 17978                           indf2	equ	0xFDF
 17979                           fsr2h	equ	0xFDA
 17980                           fsr2l	equ	0xFD9
 17981                           status	equ	0xFD8
 17982                           
 17983 ;; *************** function _TMRapp_Handler *****************
 17984 ;; Defined at:
 17985 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 17986 ;; Parameters:    Size  Location     Type
 17987 ;;		None
 17988 ;; Auto vars:     Size  Location     Type
 17989 ;;		None
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  1    wreg      void 
 17992 ;; Registers used:
 17993 ;;		wreg, status,2, status,0, cstack
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17999 ;;      Params:         0       0       0       0       0       0       0       0       0
 18000 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18002 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18003 ;;Total ram usage:        0 bytes
 18004 ;; Hardware stack levels used:    1
 18005 ;; Hardware stack levels required when called:   12
 18006 ;; This function calls:
 18007 ;;		___almod
 18008 ;;		___lwmod
 18009 ;; This function is called by:
 18010 ;;		_moteHandler
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           	psect	text58
 18015  002E0E                     __ptext58:
 18016                           	opt stack 0
 18017  002E0E                     _TMRapp_Handler:
 18018                           	opt stack 17
 18019                           
 18020                           ;TMRapp.c: 60: timerMsTickCount++;
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;incstack = 0
 18024  002E0E  0100               	movlb	0	; () banked
 18025  002E10  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 18026  002E12  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18030  002E14  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18031  002E18  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18032  002E1C  0E00               	movlw	0
 18033  002E1E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18034  002E20  0E0A               	movlw	10
 18035  002E22  6F62               	movwf	___lwmod@divisor& (0+255),b
 18036  002E24  EC24  F028         	call	___lwmod	;wreg free
 18037  002E28  0100               	movlb	0	; () banked
 18038  002E2A  5160               	movf	?___lwmod& (0+255),w,b
 18039  002E2C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18040  002E2E  A4D8               	btfss	status,2,c
 18041  002E30  0012               	return	
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;TMRapp.c: 63: {
 18045                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18046  002E32  83F8               	bsf	_appTimer& (0+255),1,b
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18050  002E34  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18051  002E38  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18052  002E3C  0E00               	movlw	0
 18053  002E3E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18054  002E40  0E64               	movlw	100
 18055  002E42  6F62               	movwf	___lwmod@divisor& (0+255),b
 18056  002E44  EC24  F028         	call	___lwmod	;wreg free
 18057  002E48  0100               	movlb	0	; () banked
 18058  002E4A  5160               	movf	?___lwmod& (0+255),w,b
 18059  002E4C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18060  002E4E  A4D8               	btfss	status,2,c
 18061  002E50  0012               	return	
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;TMRapp.c: 66: {
 18065                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18066  002E52  85F8               	bsf	_appTimer& (0+255),2,b
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18070  002E54  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18071  002E58  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18072  002E5C  0E03               	movlw	3
 18073  002E5E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18074  002E60  0EE8               	movlw	232
 18075  002E62  6F62               	movwf	___lwmod@divisor& (0+255),b
 18076  002E64  EC24  F028         	call	___lwmod	;wreg free
 18077  002E68  0100               	movlb	0	; () banked
 18078  002E6A  5160               	movf	?___lwmod& (0+255),w,b
 18079  002E6C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18080  002E6E  A4D8               	btfss	status,2,c
 18081  002E70  0012               	return	
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;TMRapp.c: 69: {
 18085                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18086  002E72  87F8               	bsf	_appTimer& (0+255),3,b
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18090  002E74  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 18091  002E78  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 18092  002E7C  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 18093  002E7E  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 18094  002E80  0E60               	movlw	96
 18095  002E82  6F64               	movwf	___almod@divisor& (0+255),b
 18096  002E84  0EEA               	movlw	234
 18097  002E86  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 18098  002E88  0E00               	movlw	0
 18099  002E8A  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 18100  002E8C  0E00               	movlw	0
 18101  002E8E  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 18102  002E90  EC0B  F020         	call	___almod	;wreg free
 18103  002E94  0100               	movlb	0	; () banked
 18104  002E96  5160               	movf	?___almod& (0+255),w,b
 18105  002E98  1161               	iorwf	(?___almod+1)& (0+255),w,b
 18106  002E9A  1162               	iorwf	(?___almod+2)& (0+255),w,b
 18107  002E9C  1163               	iorwf	(?___almod+3)& (0+255),w,b
 18108  002E9E  A4D8               	btfss	status,2,c
 18109  002EA0  0012               	return	
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;TMRapp.c: 72: {
 18113                           ;TMRapp.c: 73: timerMinTickCount++;
 18114  002EA2  4A3F               	infsnz	_timerMinTickCount,f,c
 18115  002EA4  2A40               	incf	_timerMinTickCount+1,f,c
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18119  002EA6  89F8               	bsf	_appTimer& (0+255),4,b
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18123  002EA8  C03F  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18124  002EAC  C040  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18125  002EB0  0E00               	movlw	0
 18126  002EB2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18127  002EB4  0E3C               	movlw	60
 18128  002EB6  6F62               	movwf	___lwmod@divisor& (0+255),b
 18129  002EB8  EC24  F028         	call	___lwmod	;wreg free
 18130  002EBC  0100               	movlb	0	; () banked
 18131  002EBE  5160               	movf	?___lwmod& (0+255),w,b
 18132  002EC0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18133  002EC2  A4D8               	btfss	status,2,c
 18134  002EC4  0012               	return	
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;TMRapp.c: 76: {
 18138                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18139  002EC6  8BF8               	bsf	_appTimer& (0+255),5,b
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18143  002EC8  C03F  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18144  002ECC  C040  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18145  002ED0  0E02               	movlw	2
 18146  002ED2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18147  002ED4  0ED0               	movlw	208
 18148  002ED6  6F62               	movwf	___lwmod@divisor& (0+255),b
 18149  002ED8  EC24  F028         	call	___lwmod	;wreg free
 18150  002EDC  0100               	movlb	0	; () banked
 18151  002EDE  5160               	movf	?___lwmod& (0+255),w,b
 18152  002EE0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18153  002EE2  A4D8               	btfss	status,2,c
 18154  002EE4  0012               	return	
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;TMRapp.c: 79: {
 18158                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18159  002EE6  8DF8               	bsf	_appTimer& (0+255),6,b
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18163  002EE8  C03F  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18164  002EEC  C040  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18165  002EF0  0E05               	movlw	5
 18166  002EF2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18167  002EF4  0EA0               	movlw	160
 18168  002EF6  6F62               	movwf	___lwmod@divisor& (0+255),b
 18169  002EF8  EC24  F028         	call	___lwmod	;wreg free
 18170  002EFC  0100               	movlb	0	; () banked
 18171  002EFE  5160               	movf	?___lwmod& (0+255),w,b
 18172  002F00  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18173  002F02  A4D8               	btfss	status,2,c
 18174  002F04  0012               	return	
 18175                           
 18176                           ; BSR set to: 0
 18177                           ;TMRapp.c: 82: {
 18178                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18179  002F06  8FF8               	bsf	_appTimer& (0+255),7,b
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18183  002F08  0E00               	movlw	0
 18184  002F0A  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 18185  002F0C  0E00               	movlw	0
 18186  002F0E  6FD8               	movwf	_timerMsTickCount& (0+255),b
 18187                           
 18188                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18189  002F10  0E00               	movlw	0
 18190  002F12  6E40               	movwf	_timerMinTickCount+1,c
 18191  002F14  0E00               	movlw	0
 18192  002F16  6E3F               	movwf	_timerMinTickCount,c
 18193                           
 18194                           ; BSR set to: 0
 18195                           
 18196                           ; BSR set to: 0
 18197                           
 18198                           ; BSR set to: 0
 18199                           
 18200                           ; BSR set to: 0
 18201                           
 18202                           ; BSR set to: 0
 18203                           
 18204                           ; BSR set to: 0
 18205  002F18  0012               	return	
 18206  002F1A                     __end_of_TMRapp_Handler:
 18207                           	opt stack 0
 18208                           tblptru	equ	0xFF8
 18209                           tblptrh	equ	0xFF7
 18210                           tblptrl	equ	0xFF6
 18211                           tablat	equ	0xFF5
 18212                           prodh	equ	0xFF4
 18213                           prodl	equ	0xFF3
 18214                           intcon	equ	0xFF2
 18215                           intcon3	equ	0xFF0
 18216                           postinc0	equ	0xFEE
 18217                           wreg	equ	0xFE8
 18218                           indf1	equ	0xFE7
 18219                           postdec1	equ	0xFE5
 18220                           fsr1h	equ	0xFE2
 18221                           fsr1l	equ	0xFE1
 18222                           indf2	equ	0xFDF
 18223                           fsr2h	equ	0xFDA
 18224                           fsr2l	equ	0xFD9
 18225                           status	equ	0xFD8
 18226                           
 18227 ;; *************** function ___lwmod *****************
 18228 ;; Defined at:
 18229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18230 ;; Parameters:    Size  Location     Type
 18231 ;;  dividend        2    0[BANK0 ] unsigned int 
 18232 ;;  divisor         2    2[BANK0 ] unsigned int 
 18233 ;; Auto vars:     Size  Location     Type
 18234 ;;  counter         1    4[BANK0 ] unsigned char 
 18235 ;; Return value:  Size  Location     Type
 18236 ;;                  2    0[BANK0 ] unsigned int 
 18237 ;; Registers used:
 18238 ;;		wreg, status,2, status,0
 18239 ;; Tracked objects:
 18240 ;;		On entry : 0/0
 18241 ;;		On exit  : 0/0
 18242 ;;		Unchanged: 0/0
 18243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18244 ;;      Params:         0       4       0       0       0       0       0       0       0
 18245 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18246 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18247 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18248 ;;Total ram usage:        5 bytes
 18249 ;; Hardware stack levels used:    1
 18250 ;; Hardware stack levels required when called:   11
 18251 ;; This function calls:
 18252 ;;		Nothing
 18253 ;; This function is called by:
 18254 ;;		_TMRapp_Handler
 18255 ;;		_moteApp_add16bToDataBuffer
 18256 ;;		_oled_putUint16
 18257 ;; This function uses a non-reentrant model
 18258 ;;
 18259                           
 18260                           	psect	text59
 18261  005048                     __ptext59:
 18262                           	opt stack 0
 18263  005048                     ___lwmod:
 18264                           	opt stack 17
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;incstack = 0
 18268  005048  0100               	movlb	0	; () banked
 18269  00504A  5162               	movf	___lwmod@divisor& (0+255),w,b
 18270  00504C  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18271  00504E  B4D8               	btfsc	status,2,c
 18272  005050  D018               	goto	l2657
 18273                           
 18274                           ; BSR set to: 0
 18275  005052  0E01               	movlw	1
 18276  005054  6F64               	movwf	___lwmod@counter& (0+255),b
 18277  005056  D004               	goto	l2652
 18278  005058                     
 18279                           ; BSR set to: 0
 18280                           
 18281                           ; BSR set to: 0
 18282  005058  90D8               	bcf	status,0,c
 18283  00505A  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18284  00505C  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18285  00505E  2B64               	incf	___lwmod@counter& (0+255),f,b
 18286  005060                     l2652:
 18287                           
 18288                           ; BSR set to: 0
 18289                           
 18290                           ; BSR set to: 0
 18291  005060  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18292  005062  D7FA               	goto	l2653
 18293  005064                     u8540:
 18294                           
 18295                           ; BSR set to: 0
 18296                           
 18297                           ; BSR set to: 0
 18298                           
 18299                           ; BSR set to: 0
 18300  005064  5162               	movf	___lwmod@divisor& (0+255),w,b
 18301  005066  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18302  005068  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18303  00506A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18304  00506C  A0D8               	btfss	status,0,c
 18305  00506E  D004               	goto	l2656
 18306                           
 18307                           ; BSR set to: 0
 18308  005070  5162               	movf	___lwmod@divisor& (0+255),w,b
 18309  005072  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18310  005074  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18311  005076  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18312  005078                     l2656:
 18313                           
 18314                           ; BSR set to: 0
 18315                           
 18316                           ; BSR set to: 0
 18317  005078  90D8               	bcf	status,0,c
 18318  00507A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18319  00507C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18320                           
 18321                           ; BSR set to: 0
 18322  00507E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18323  005080  D7F1               	goto	u8540
 18324  005082                     l2657:
 18325                           
 18326                           ; BSR set to: 0
 18327                           
 18328                           ; BSR set to: 0
 18329  005082  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18330  005086  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18331                           
 18332                           ; BSR set to: 0
 18333  00508A  0012               	return		;funcret
 18334  00508C                     __end_of___lwmod:
 18335                           	opt stack 0
 18336                           tblptru	equ	0xFF8
 18337                           tblptrh	equ	0xFF7
 18338                           tblptrl	equ	0xFF6
 18339                           tablat	equ	0xFF5
 18340                           prodh	equ	0xFF4
 18341                           prodl	equ	0xFF3
 18342                           intcon	equ	0xFF2
 18343                           intcon3	equ	0xFF0
 18344                           postinc0	equ	0xFEE
 18345                           wreg	equ	0xFE8
 18346                           indf1	equ	0xFE7
 18347                           postdec1	equ	0xFE5
 18348                           fsr1h	equ	0xFE2
 18349                           fsr1l	equ	0xFE1
 18350                           indf2	equ	0xFDF
 18351                           fsr2h	equ	0xFDA
 18352                           fsr2l	equ	0xFD9
 18353                           status	equ	0xFD8
 18354                           
 18355 ;; *************** function ___almod *****************
 18356 ;; Defined at:
 18357 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  dividend        4    0[BANK0 ] long 
 18360 ;;  divisor         4    4[BANK0 ] long 
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;  sign            1    9[BANK0 ] unsigned char 
 18363 ;;  counter         1    8[BANK0 ] unsigned char 
 18364 ;; Return value:  Size  Location     Type
 18365 ;;                  4    0[BANK0 ] long 
 18366 ;; Registers used:
 18367 ;;		wreg, status,2, status,0
 18368 ;; Tracked objects:
 18369 ;;		On entry : 0/0
 18370 ;;		On exit  : 0/0
 18371 ;;		Unchanged: 0/0
 18372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18373 ;;      Params:         0       8       0       0       0       0       0       0       0
 18374 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18376 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18377 ;;Total ram usage:       10 bytes
 18378 ;; Hardware stack levels used:    1
 18379 ;; Hardware stack levels required when called:   11
 18380 ;; This function calls:
 18381 ;;		Nothing
 18382 ;; This function is called by:
 18383 ;;		_TMRapp_Handler
 18384 ;; This function uses a non-reentrant model
 18385 ;;
 18386                           
 18387                           	psect	text60
 18388  004016                     __ptext60:
 18389                           	opt stack 0
 18390  004016                     ___almod:
 18391                           	opt stack 17
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;incstack = 0
 18395  004016  0E00               	movlw	0
 18396  004018  0100               	movlb	0	; () banked
 18397  00401A  6F69               	movwf	___almod@sign& (0+255),b
 18398                           
 18399                           ; BSR set to: 0
 18400  00401C  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18401  00401E  D00A               	goto	l2307
 18402                           
 18403                           ; BSR set to: 0
 18404  004020  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18405  004022  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18406  004024  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18407  004026  6D60               	negf	___almod@dividend& (0+255),b
 18408  004028  0E00               	movlw	0
 18409  00402A  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18410  00402C  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18411  00402E  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18412                           
 18413                           ; BSR set to: 0
 18414  004030  0E01               	movlw	1
 18415  004032  6F69               	movwf	___almod@sign& (0+255),b
 18416  004034                     l2307:
 18417                           
 18418                           ; BSR set to: 0
 18419                           
 18420                           ; BSR set to: 0
 18421  004034  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18422  004036  D008               	goto	l2308
 18423                           
 18424                           ; BSR set to: 0
 18425  004038  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18426  00403A  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18427  00403C  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18428  00403E  6D64               	negf	___almod@divisor& (0+255),b
 18429  004040  0E00               	movlw	0
 18430  004042  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18431  004044  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18432  004046  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18433  004048                     l2308:
 18434                           
 18435                           ; BSR set to: 0
 18436                           
 18437                           ; BSR set to: 0
 18438  004048  5164               	movf	___almod@divisor& (0+255),w,b
 18439  00404A  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18440  00404C  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18441  00404E  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18442  004050  B4D8               	btfsc	status,2,c
 18443  004052  D024               	goto	l2315
 18444                           
 18445                           ; BSR set to: 0
 18446  004054  0E01               	movlw	1
 18447  004056  6F68               	movwf	___almod@counter& (0+255),b
 18448  004058  D006               	goto	l2310
 18449  00405A                     
 18450                           ; BSR set to: 0
 18451                           
 18452                           ; BSR set to: 0
 18453  00405A  90D8               	bcf	status,0,c
 18454  00405C  3764               	rlcf	___almod@divisor& (0+255),f,b
 18455  00405E  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18456  004060  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18457  004062  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18458  004064  2B68               	incf	___almod@counter& (0+255),f,b
 18459  004066                     l2310:
 18460                           
 18461                           ; BSR set to: 0
 18462                           
 18463                           ; BSR set to: 0
 18464  004066  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18465  004068  D7F8               	goto	l2311
 18466  00406A                     u8500:
 18467                           
 18468                           ; BSR set to: 0
 18469                           
 18470                           ; BSR set to: 0
 18471                           
 18472                           ; BSR set to: 0
 18473  00406A  5164               	movf	___almod@divisor& (0+255),w,b
 18474  00406C  5D60               	subwf	___almod@dividend& (0+255),w,b
 18475  00406E  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18476  004070  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18477  004072  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18478  004074  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18479  004076  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18480  004078  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18481  00407A  A0D8               	btfss	status,0,c
 18482  00407C  D008               	goto	l2314
 18483                           
 18484                           ; BSR set to: 0
 18485  00407E  5164               	movf	___almod@divisor& (0+255),w,b
 18486  004080  5F60               	subwf	___almod@dividend& (0+255),f,b
 18487  004082  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18488  004084  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18489  004086  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18490  004088  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18491  00408A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18492  00408C  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18493  00408E                     l2314:
 18494                           
 18495                           ; BSR set to: 0
 18496                           
 18497                           ; BSR set to: 0
 18498  00408E  90D8               	bcf	status,0,c
 18499  004090  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18500  004092  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18501  004094  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18502  004096  3364               	rrcf	___almod@divisor& (0+255),f,b
 18503                           
 18504                           ; BSR set to: 0
 18505  004098  2F68               	decfsz	___almod@counter& (0+255),f,b
 18506  00409A  D7E7               	goto	u8500
 18507  00409C                     l2315:
 18508                           
 18509                           ; BSR set to: 0
 18510                           
 18511                           ; BSR set to: 0
 18512                           
 18513                           ; BSR set to: 0
 18514  00409C  5169               	movf	___almod@sign& (0+255),w,b
 18515  00409E  B4D8               	btfsc	status,2,c
 18516  0040A0  D008               	goto	l2316
 18517                           
 18518                           ; BSR set to: 0
 18519  0040A2  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18520  0040A4  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18521  0040A6  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18522  0040A8  6D60               	negf	___almod@dividend& (0+255),b
 18523  0040AA  0E00               	movlw	0
 18524  0040AC  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18525  0040AE  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18526  0040B0  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18527  0040B2                     l2316:
 18528                           
 18529                           ; BSR set to: 0
 18530                           
 18531                           ; BSR set to: 0
 18532  0040B2  C060  F060         	movff	___almod@dividend,?___almod
 18533  0040B6  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18534  0040BA  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18535  0040BE  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18536  0040C2  0012               	return	
 18537  0040C4                     __end_of___almod:
 18538                           	opt stack 0
 18539                           tblptru	equ	0xFF8
 18540                           tblptrh	equ	0xFF7
 18541                           tblptrl	equ	0xFF6
 18542                           tablat	equ	0xFF5
 18543                           prodh	equ	0xFF4
 18544                           prodl	equ	0xFF3
 18545                           intcon	equ	0xFF2
 18546                           intcon3	equ	0xFF0
 18547                           postinc0	equ	0xFEE
 18548                           wreg	equ	0xFE8
 18549                           indf1	equ	0xFE7
 18550                           postdec1	equ	0xFE5
 18551                           fsr1h	equ	0xFE2
 18552                           fsr1l	equ	0xFE1
 18553                           indf2	equ	0xFDF
 18554                           fsr2h	equ	0xFDA
 18555                           fsr2l	equ	0xFD9
 18556                           status	equ	0xFD8
 18557                           
 18558 ;; *************** function _TMRapp_ClearBitFlags *****************
 18559 ;; Defined at:
 18560 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;		None
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;		None
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  1    wreg      void 
 18567 ;; Registers used:
 18568 ;;		wreg, status,2
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18574 ;;      Params:         0       0       0       0       0       0       0       0       0
 18575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18577 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18578 ;;Total ram usage:        0 bytes
 18579 ;; Hardware stack levels used:    1
 18580 ;; Hardware stack levels required when called:   11
 18581 ;; This function calls:
 18582 ;;		Nothing
 18583 ;; This function is called by:
 18584 ;;		_moteHandler
 18585 ;; This function uses a non-reentrant model
 18586 ;;
 18587                           
 18588                           	psect	text61
 18589  0058EA                     __ptext61:
 18590                           	opt stack 0
 18591  0058EA                     _TMRapp_ClearBitFlags:
 18592                           	opt stack 18
 18593                           
 18594                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;incstack = 0
 18598  0058EA  0E00               	movlw	0
 18599  0058EC  0100               	movlb	0	; () banked
 18600  0058EE  6FF8               	movwf	_appTimer& (0+255),b
 18601                           
 18602                           ; BSR set to: 0
 18603  0058F0  0012               	return		;funcret
 18604  0058F2                     __end_of_TMRapp_ClearBitFlags:
 18605                           	opt stack 0
 18606                           tblptru	equ	0xFF8
 18607                           tblptrh	equ	0xFF7
 18608                           tblptrl	equ	0xFF6
 18609                           tablat	equ	0xFF5
 18610                           prodh	equ	0xFF4
 18611                           prodl	equ	0xFF3
 18612                           intcon	equ	0xFF2
 18613                           intcon3	equ	0xFF0
 18614                           postinc0	equ	0xFEE
 18615                           wreg	equ	0xFE8
 18616                           indf1	equ	0xFE7
 18617                           postdec1	equ	0xFE5
 18618                           fsr1h	equ	0xFE2
 18619                           fsr1l	equ	0xFE1
 18620                           indf2	equ	0xFDF
 18621                           fsr2h	equ	0xFDA
 18622                           fsr2l	equ	0xFD9
 18623                           status	equ	0xFD8
 18624                           
 18625 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18626 ;; Defined at:
 18627 ;;		line 1027 in file "../Includes/Board/MOTEapp.c"
 18628 ;; Parameters:    Size  Location     Type
 18629 ;;  timerTask       1    wreg     struct .
 18630 ;; Auto vars:     Size  Location     Type
 18631 ;;  timerTask       1    0[BANK0 ] struct .
 18632 ;; Return value:  Size  Location     Type
 18633 ;;                  1    wreg      void 
 18634 ;; Registers used:
 18635 ;;		wreg, status,2, status,0
 18636 ;; Tracked objects:
 18637 ;;		On entry : 0/0
 18638 ;;		On exit  : 0/0
 18639 ;;		Unchanged: 0/0
 18640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18641 ;;      Params:         0       0       0       0       0       0       0       0       0
 18642 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18643 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18644 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18645 ;;Total ram usage:        1 bytes
 18646 ;; Hardware stack levels used:    1
 18647 ;; Hardware stack levels required when called:   11
 18648 ;; This function calls:
 18649 ;;		Nothing
 18650 ;; This function is called by:
 18651 ;;		_moteHandler
 18652 ;; This function uses a non-reentrant model
 18653 ;;
 18654                           
 18655                           	psect	text62
 18656  0056C6                     __ptext62:
 18657                           	opt stack 0
 18658  0056C6                     _MOTEapp_TimerBasedTask:
 18659                           	opt stack 18
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;incstack = 0
 18663                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18664  0056C6  0100               	movlb	0	; () banked
 18665  0056C8  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18666                           
 18667                           ;MOTEapp.c: 1032: if (timerTask.mSecTenTick)
 18668  0056CA  0100               	movlb	0	; () banked
 18669  0056CC  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18670  0056CE  D003               	goto	l605
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;MOTEapp.c: 1033: {
 18674                           ;MOTEapp.c: 1035: m10SecTicker++;
 18675  0056D0  0101               	movlb	1	; () banked
 18676  0056D2  4B56               	infsnz	_m10SecTicker& (0+255),f,b
 18677  0056D4  2B57               	incf	(_m10SecTicker+1)& (0+255),f,b
 18678  0056D6                     l605:
 18679                           
 18680                           ;MOTEapp.c: 1041: }
 18681                           ;MOTEapp.c: 1042: if (timerTask.SecTick)
 18682                           
 18683                           ; BSR set to: 1
 18684                           
 18685                           ;MOTEapp.c: 1038: {
 18686                           
 18687                           ; BSR set to: 1
 18688                           
 18689                           ; BSR set to: 1
 18690  0056D6  0100               	movlb	0	; () banked
 18691  0056D8  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;MOTEapp.c: 1043: {
 18695                           ;MOTEapp.c: 1045: secTicker++;
 18696  0056DA  2BF0               	incf	_secTicker& (0+255),f,b
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;MOTEapp.c: 1046: }
 18700                           ;MOTEapp.c: 1047: if (timerTask.MinTick)
 18701                           
 18702                           ; BSR set to: 0
 18703  0056DC  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18704  0056DE  0012               	return	
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;MOTEapp.c: 1048: {
 18708                           ;MOTEapp.c: 1050: minTicker++;
 18709  0056E0  0101               	movlb	1	; () banked
 18710  0056E2  2B61               	incf	_minTicker& (0+255),f,b
 18711                           
 18712                           ; BSR set to: 1
 18713                           
 18714                           ; BSR set to: 1
 18715                           
 18716                           ;MOTEapp.c: 1057: {
 18717                           
 18718                           ; BSR set to: 1
 18719                           
 18720                           ; BSR set to: 1
 18721                           
 18722                           ;MOTEapp.c: 1053: {
 18723                           
 18724                           ; BSR set to: 1
 18725                           
 18726                           ; BSR set to: 1
 18727  0056E4  0012               	return	
 18728  0056E6                     __end_of_MOTEapp_TimerBasedTask:
 18729                           	opt stack 0
 18730                           tblptru	equ	0xFF8
 18731                           tblptrh	equ	0xFF7
 18732                           tblptrl	equ	0xFF6
 18733                           tablat	equ	0xFF5
 18734                           prodh	equ	0xFF4
 18735                           prodl	equ	0xFF3
 18736                           intcon	equ	0xFF2
 18737                           intcon3	equ	0xFF0
 18738                           postinc0	equ	0xFEE
 18739                           wreg	equ	0xFE8
 18740                           indf1	equ	0xFE7
 18741                           postdec1	equ	0xFE5
 18742                           fsr1h	equ	0xFE2
 18743                           fsr1l	equ	0xFE1
 18744                           indf2	equ	0xFDF
 18745                           fsr2h	equ	0xFDA
 18746                           fsr2l	equ	0xFD9
 18747                           status	equ	0xFD8
 18748                           
 18749 ;; *************** function _moteApp_clearCommand *****************
 18750 ;; Defined at:
 18751 ;;		line 1259 in file "../Includes/Board/MOTEapp.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;		None
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;		None
 18756 ;; Return value:  Size  Location     Type
 18757 ;;                  1    wreg      void 
 18758 ;; Registers used:
 18759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18760 ;; Tracked objects:
 18761 ;;		On entry : 0/0
 18762 ;;		On exit  : 0/0
 18763 ;;		Unchanged: 0/0
 18764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18765 ;;      Params:         0       0       0       0       0       0       0       0       0
 18766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18768 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18769 ;;Total ram usage:        0 bytes
 18770 ;; Hardware stack levels used:    1
 18771 ;; Hardware stack levels required when called:   14
 18772 ;; This function calls:
 18773 ;;		_sendCommand
 18774 ;; This function is called by:
 18775 ;;		_main
 18776 ;; This function uses a non-reentrant model
 18777 ;;
 18778                           
 18779                           	psect	text63
 18780  005878                     __ptext63:
 18781                           	opt stack 0
 18782  005878                     _moteApp_clearCommand:
 18783                           	opt stack 16
 18784                           
 18785                           ;MOTEapp.c: 1261: sendCommand("\r\n");
 18786                           
 18787                           ;incstack = 0
 18788  005878  0E05               	movlw	low (STR_177+23)
 18789  00587A  0100               	movlb	0	; () banked
 18790  00587C  6F61               	movwf	sendCommand@string& (0+255),b
 18791  00587E  0E7A               	movlw	high (STR_177+23)
 18792  005880  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18793  005882  EC0D  F02A         	call	_sendCommand	;wreg free
 18794  005886  0012               	return		;funcret
 18795  005888                     __end_of_moteApp_clearCommand:
 18796                           	opt stack 0
 18797                           tblptru	equ	0xFF8
 18798                           tblptrh	equ	0xFF7
 18799                           tblptrl	equ	0xFF6
 18800                           tablat	equ	0xFF5
 18801                           prodh	equ	0xFF4
 18802                           prodl	equ	0xFF3
 18803                           intcon	equ	0xFF2
 18804                           intcon3	equ	0xFF0
 18805                           postinc0	equ	0xFEE
 18806                           wreg	equ	0xFE8
 18807                           indf1	equ	0xFE7
 18808                           postdec1	equ	0xFE5
 18809                           fsr1h	equ	0xFE2
 18810                           fsr1l	equ	0xFE1
 18811                           indf2	equ	0xFDF
 18812                           fsr2h	equ	0xFDA
 18813                           fsr2l	equ	0xFD9
 18814                           status	equ	0xFD8
 18815                           
 18816 ;; *************** function _sendCommand *****************
 18817 ;; Defined at:
 18818 ;;		line 1114 in file "../Includes/Board/MOTEapp.c"
 18819 ;; Parameters:    Size  Location     Type
 18820 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18821 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 18822 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 18823 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 18824 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 18825 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 18826 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 18827 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 18828 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;		None
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18840 ;;      Params:         0       2       0       0       0       0       0       0       0
 18841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18843 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18844 ;;Total ram usage:        2 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:   13
 18847 ;; This function calls:
 18848 ;;		_EUSART_Write
 18849 ;;		_EndLine
 18850 ;; This function is called by:
 18851 ;;		_moduleResync
 18852 ;;		_moduleSleep
 18853 ;;		_moteJoiningProcess
 18854 ;;		_MOTEapp_SetDataRateSetting
 18855 ;;		_moteApp_clearCommand
 18856 ;;		_moteApp_toggleLeds
 18857 ;;		_moteApp_setSensorsInput
 18858 ;;		_moteApp_getTempValue
 18859 ;;		_moteApp_getLightValue
 18860 ;; This function uses a non-reentrant model
 18861 ;;
 18862                           
 18863                           	psect	text64
 18864  00541A                     __ptext64:
 18865                           	opt stack 0
 18866  00541A                     _sendCommand:
 18867                           	opt stack 14
 18868                           
 18869                           ;MOTEapp.c: 1117: while (*string)
 18870                           
 18871                           ;incstack = 0
 18872  00541A  D00B               	goto	l636
 18873  00541C                     
 18874                           ;MOTEapp.c: 1118: {
 18875                           ;MOTEapp.c: 1119: EUSART_Write(*string++);
 18876  00541C  C061  FFF6         	movff	sendCommand@string,tblptrl
 18877  005420  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18878  005424                     	if	0	;tblptru may be non-zero
 18879  005424                     	endif
 18880  005424                     	if	0	;tblptru may be non-zero
 18881  005424                     	endif
 18882  005424  0008               	tblrd		*
 18883  005426  50F5               	movf	tablat,w,c
 18884  005428  ECC7  F028         	call	_EUSART_Write
 18885  00542C  0100               	movlb	0	; () banked
 18886  00542E  4B61               	infsnz	sendCommand@string& (0+255),f,b
 18887  005430  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 18888  005432                     l636:
 18889                           
 18890                           ; BSR set to: 0
 18891  005432  C061  FFF6         	movff	sendCommand@string,tblptrl
 18892  005436  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18893  00543A                     	if	0	;tblptru may be non-zero
 18894  00543A                     	endif
 18895  00543A                     	if	0	;tblptru may be non-zero
 18896  00543A                     	endif
 18897  00543A  0008               	tblrd		*
 18898  00543C  50F5               	movf	tablat,w,c
 18899  00543E  0900               	iorlw	0
 18900  005440  A4D8               	btfss	status,2,c
 18901  005442  D7EC               	goto	l637
 18902                           
 18903                           ;MOTEapp.c: 1120: }
 18904                           ;MOTEapp.c: 1121: EndLine();
 18905  005444  EC44  F02C         	call	_EndLine	;wreg free
 18906  005448  0012               	return		;funcret
 18907  00544A                     __end_of_sendCommand:
 18908                           	opt stack 0
 18909                           tblptru	equ	0xFF8
 18910                           tblptrh	equ	0xFF7
 18911                           tblptrl	equ	0xFF6
 18912                           tablat	equ	0xFF5
 18913                           prodh	equ	0xFF4
 18914                           prodl	equ	0xFF3
 18915                           intcon	equ	0xFF2
 18916                           intcon3	equ	0xFF0
 18917                           postinc0	equ	0xFEE
 18918                           wreg	equ	0xFE8
 18919                           indf1	equ	0xFE7
 18920                           postdec1	equ	0xFE5
 18921                           fsr1h	equ	0xFE2
 18922                           fsr1l	equ	0xFE1
 18923                           indf2	equ	0xFDF
 18924                           fsr2h	equ	0xFDA
 18925                           fsr2l	equ	0xFD9
 18926                           status	equ	0xFD8
 18927                           
 18928 ;; *************** function _EndLine *****************
 18929 ;; Defined at:
 18930 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
 18931 ;; Parameters:    Size  Location     Type
 18932 ;;		None
 18933 ;; Auto vars:     Size  Location     Type
 18934 ;;		None
 18935 ;; Return value:  Size  Location     Type
 18936 ;;                  1    wreg      void 
 18937 ;; Registers used:
 18938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18939 ;; Tracked objects:
 18940 ;;		On entry : 0/0
 18941 ;;		On exit  : 0/0
 18942 ;;		Unchanged: 0/0
 18943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18944 ;;      Params:         0       0       0       0       0       0       0       0       0
 18945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18947 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18948 ;;Total ram usage:        0 bytes
 18949 ;; Hardware stack levels used:    1
 18950 ;; Hardware stack levels required when called:   12
 18951 ;; This function calls:
 18952 ;;		_EUSART_Write
 18953 ;; This function is called by:
 18954 ;;		_sendCommand
 18955 ;;		_sendDataCommand
 18956 ;; This function uses a non-reentrant model
 18957 ;;
 18958                           
 18959                           	psect	text65
 18960  005888                     __ptext65:
 18961                           	opt stack 0
 18962  005888                     _EndLine:
 18963                           	opt stack 14
 18964                           
 18965                           ;MOTEapp.c: 1110: EUSART_Write(0x0D);
 18966                           
 18967                           ;incstack = 0
 18968  005888  0E0D               	movlw	13
 18969  00588A  ECC7  F028         	call	_EUSART_Write
 18970                           
 18971                           ;MOTEapp.c: 1111: EUSART_Write(0x0A);
 18972  00588E  0E0A               	movlw	10
 18973  005890  ECC7  F028         	call	_EUSART_Write
 18974  005894  0012               	return		;funcret
 18975  005896                     __end_of_EndLine:
 18976                           	opt stack 0
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           intcon	equ	0xFF2
 18984                           intcon3	equ	0xFF0
 18985                           postinc0	equ	0xFEE
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postdec1	equ	0xFE5
 18989                           fsr1h	equ	0xFE2
 18990                           fsr1l	equ	0xFE1
 18991                           indf2	equ	0xFDF
 18992                           fsr2h	equ	0xFDA
 18993                           fsr2l	equ	0xFD9
 18994                           status	equ	0xFD8
 18995                           
 18996 ;; *************** function _USBapp_handlerState *****************
 18997 ;; Defined at:
 18998 ;;		line 78 in file "../Includes/Board/USBapp.c"
 18999 ;; Parameters:    Size  Location     Type
 19000 ;;  state           1    wreg     enum E5833
 19001 ;; Auto vars:     Size  Location     Type
 19002 ;;  state           1    0[BANK0 ] enum E5833
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  1    wreg      void 
 19005 ;; Registers used:
 19006 ;;		wreg
 19007 ;; Tracked objects:
 19008 ;;		On entry : 0/0
 19009 ;;		On exit  : 0/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19012 ;;      Params:         0       0       0       0       0       0       0       0       0
 19013 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19015 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19016 ;;Total ram usage:        1 bytes
 19017 ;; Hardware stack levels used:    1
 19018 ;; Hardware stack levels required when called:   11
 19019 ;; This function calls:
 19020 ;;		Nothing
 19021 ;; This function is called by:
 19022 ;;		_main
 19023 ;; This function uses a non-reentrant model
 19024 ;;
 19025                           
 19026                           	psect	text66
 19027  0058CE                     __ptext66:
 19028                           	opt stack 0
 19029  0058CE                     _USBapp_handlerState:
 19030                           	opt stack 19
 19031                           
 19032                           ;incstack = 0
 19033                           ;USBapp_handlerState@state stored from wreg
 19034  0058CE  0100               	movlb	0	; () banked
 19035  0058D0  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 19036                           
 19037                           ;USBapp.c: 80: usbState = state;
 19038  0058D2  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 19039  0058D6  0012               	return		;funcret
 19040  0058D8                     __end_of_USBapp_handlerState:
 19041                           	opt stack 0
 19042                           tblptru	equ	0xFF8
 19043                           tblptrh	equ	0xFF7
 19044                           tblptrl	equ	0xFF6
 19045                           tablat	equ	0xFF5
 19046                           prodh	equ	0xFF4
 19047                           prodl	equ	0xFF3
 19048                           intcon	equ	0xFF2
 19049                           intcon3	equ	0xFF0
 19050                           postinc0	equ	0xFEE
 19051                           wreg	equ	0xFE8
 19052                           indf1	equ	0xFE7
 19053                           postdec1	equ	0xFE5
 19054                           fsr1h	equ	0xFE2
 19055                           fsr1l	equ	0xFE1
 19056                           indf2	equ	0xFDF
 19057                           fsr2h	equ	0xFDA
 19058                           fsr2l	equ	0xFD9
 19059                           status	equ	0xFD8
 19060                           
 19061 ;; *************** function _USBapp_Handler *****************
 19062 ;; Defined at:
 19063 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19064 ;; Parameters:    Size  Location     Type
 19065 ;;		None
 19066 ;; Auto vars:     Size  Location     Type
 19067 ;;  buttonPress     1   23[BANK0 ] enum E5867
 19068 ;; Return value:  Size  Location     Type
 19069 ;;                  1    wreg      void 
 19070 ;; Registers used:
 19071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19072 ;; Tracked objects:
 19073 ;;		On entry : 0/0
 19074 ;;		On exit  : 0/0
 19075 ;;		Unchanged: 0/0
 19076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19077 ;;      Params:         0       0       0       0       0       0       0       0       0
 19078 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19080 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19081 ;;Total ram usage:        1 bytes
 19082 ;; Hardware stack levels used:    1
 19083 ;; Hardware stack levels required when called:   16
 19084 ;; This function calls:
 19085 ;;		_USBapp_DeviceCdcEmulatorHandler
 19086 ;;		_oled_clear
 19087 ;;		_oled_putString
 19088 ;;		_service_pushbutton
 19089 ;; This function is called by:
 19090 ;;		_main
 19091 ;; This function uses a non-reentrant model
 19092 ;;
 19093                           
 19094                           	psect	text67
 19095  003EB2                     __ptext67:
 19096                           	opt stack 0
 19097  003EB2                     _USBapp_Handler:
 19098                           	opt stack 14
 19099                           
 19100                           ;USBapp.c: 90: {
 19101                           ;USBapp.c: 91: switch(usbState)
 19102                           
 19103                           ;incstack = 0
 19104                           ;USBapp.c: 89: do
 19105  003EB2  D03E               	goto	l845
 19106  003EB4                     
 19107                           ;USBapp.c: 94: while(1);
 19108  003EB4  D7FF               	goto	l846
 19109  003EB6                     
 19110                           ;USBapp.c: 98: oled_clear();
 19111  003EB6  ECAD  F02B         	call	_oled_clear	;wreg free
 19112                           
 19113                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19114  003EBA  0E10               	movlw	low STR_187
 19115  003EBC  0100               	movlb	0	; () banked
 19116  003EBE  6F72               	movwf	oled_putString@string& (0+255),b
 19117  003EC0  0E7F               	movlw	high STR_187
 19118  003EC2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19119  003EC4  0E01               	movlw	1
 19120  003EC6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19121  003EC8  0E00               	movlw	0
 19122  003ECA  6F75               	movwf	oled_putString@start_page& (0+255),b
 19123  003ECC  EC71  F025         	call	_oled_putString	;wreg free
 19124                           
 19125                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19126  003ED0  0E61               	movlw	low STR_188
 19127  003ED2  0100               	movlb	0	; () banked
 19128  003ED4  6F72               	movwf	oled_putString@string& (0+255),b
 19129  003ED6  0E7F               	movlw	high STR_188
 19130  003ED8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19131  003EDA  0E02               	movlw	2
 19132  003EDC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19133  003EDE  0E01               	movlw	1
 19134  003EE0  6F75               	movwf	oled_putString@start_page& (0+255),b
 19135  003EE2  EC71  F025         	call	_oled_putString	;wreg free
 19136                           
 19137                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19138  003EE6  0E28               	movlw	low STR_189
 19139  003EE8  0100               	movlb	0	; () banked
 19140  003EEA  6F72               	movwf	oled_putString@string& (0+255),b
 19141  003EEC  0E7E               	movlw	high STR_189
 19142  003EEE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19143  003EF0  0E00               	movlw	0
 19144  003EF2  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19145  003EF4  0E02               	movlw	2
 19146  003EF6  6F75               	movwf	oled_putString@start_page& (0+255),b
 19147  003EF8  EC71  F025         	call	_oled_putString	;wreg free
 19148                           
 19149                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19150  003EFC  0E01               	movlw	1
 19151  003EFE  0100               	movlb	0	; () banked
 19152  003F00  D005               	goto	L16
 19153  003F02                     
 19154                           ; BSR set to: 0
 19155                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19156                           
 19157                           ; BSR set to: 0
 19158  003F02  0E20               	movlw	32
 19159  003F04  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19160  003F06  D001               	goto	l853
 19161  003F08  D01F               	goto	l850
 19162  003F0A                     l853:
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;USBapp.c: 111: }
 19166                           ;USBapp.c: 112: usbState = USB_CDC;
 19167                           
 19168                           ; BSR set to: 0
 19169  003F0A  0E02               	movlw	2
 19170  003F0C                     L16:
 19171  003F0C  6FEA               	movwf	_usbState& (0+255),b
 19172                           
 19173                           ;USBapp.c: 113: break;
 19174  003F0E  D01C               	goto	l850
 19175  003F10                     
 19176                           ; BSR set to: 0
 19177                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19178                           
 19179                           ; BSR set to: 0
 19180  003F10  EC42  F01A         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19181                           
 19182                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19183  003F14  0E03               	movlw	3
 19184  003F16  0100               	movlb	0	; () banked
 19185  003F18  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19189  003F1A  EC3A  F025         	call	_service_pushbutton	;wreg free
 19190  003F1E  0100               	movlb	0	; () banked
 19191  003F20  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19192                           
 19193                           ; BSR set to: 0
 19194                           ;USBapp.c: 122: if (buttonPress != Released )
 19195  003F22  0E03               	movlw	3
 19196  003F24  1977               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19197  003F26  B4D8               	btfsc	status,2,c
 19198  003F28  D00F               	goto	l850
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;USBapp.c: 123: {
 19202                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19203  003F2A  0E02               	movlw	2
 19204  003F2C  6FF9               	movwf	_exitUSB& (0+255),b
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;USBapp.c: 127: }
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;USBapp.c: 125: }
 19211                           ;USBapp.c: 126: break;
 19212  003F2E  D00C               	goto	l850
 19213  003F30                     l845:
 19214                           
 19215                           ; BSR set to: 0
 19216  003F30  0100               	movlb	0	; () banked
 19217  003F32  51EA               	movf	_usbState& (0+255),w,b
 19218                           
 19219                           ; Switch size 1, requested type "space"
 19220                           ; Number of cases is 3, Range of values is 0 to 2
 19221                           ; switch strategies available:
 19222                           ; Name         Instructions Cycles
 19223                           ; simple_byte           10     6 (average)
 19224                           ;	Chosen strategy is simple_byte
 19225  003F34  0A00               	xorlw	0	; case 0
 19226  003F36  B4D8               	btfsc	status,2,c
 19227  003F38  D7BE               	goto	l851
 19228  003F3A  0A01               	xorlw	1	; case 1
 19229  003F3C  B4D8               	btfsc	status,2,c
 19230  003F3E  D7E1               	goto	l852
 19231  003F40  0A03               	xorlw	3	; case 2
 19232  003F42  B4D8               	btfsc	status,2,c
 19233  003F44  D7E5               	goto	l855
 19234  003F46  D7B6               	goto	l846
 19235  003F48                     l850:
 19236                           
 19237                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19238                           
 19239                           ; BSR set to: 0
 19240  003F48  A080               	btfss	3968,0,c	;volatile
 19241  003F4A  D004               	goto	u9920
 19242  003F4C  0100               	movlb	0	; () banked
 19243  003F4E  51F9               	movf	_exitUSB& (0+255),w,b
 19244  003F50  B4D8               	btfsc	status,2,c
 19245  003F52  D7EE               	goto	l845
 19246  003F54                     u9920:
 19247                           
 19248                           ;USBapp.c: 129: __nop();
 19249                           
 19250                           ; BSR set to: 0
 19251  003F54  F000               	nop	
 19252                           
 19253                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19254  003F56  0E02               	movlw	2
 19255  003F58  0100               	movlb	0	; () banked
 19256  003F5A  19F9               	xorwf	_exitUSB& (0+255),w,b
 19257  003F5C  B4D8               	btfsc	status,2,c
 19258  003F5E  0012               	return	
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;USBapp.c: 131: exitUSB = NO_USB;
 19262  003F60  0E00               	movlw	0
 19263  003F62  6FF9               	movwf	_exitUSB& (0+255),b
 19264  003F64  0012               	return	
 19265  003F66                     __end_of_USBapp_Handler:
 19266                           	opt stack 0
 19267                           tblptru	equ	0xFF8
 19268                           tblptrh	equ	0xFF7
 19269                           tblptrl	equ	0xFF6
 19270                           tablat	equ	0xFF5
 19271                           prodh	equ	0xFF4
 19272                           prodl	equ	0xFF3
 19273                           intcon	equ	0xFF2
 19274                           intcon3	equ	0xFF0
 19275                           postinc0	equ	0xFEE
 19276                           wreg	equ	0xFE8
 19277                           indf1	equ	0xFE7
 19278                           postdec1	equ	0xFE5
 19279                           fsr1h	equ	0xFE2
 19280                           fsr1l	equ	0xFE1
 19281                           indf2	equ	0xFDF
 19282                           fsr2h	equ	0xFDA
 19283                           fsr2l	equ	0xFD9
 19284                           status	equ	0xFD8
 19285                           
 19286 ;; *************** function _service_pushbutton *****************
 19287 ;; Defined at:
 19288 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;  bs              1    0[BANK0 ] enum E5748
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1    wreg      enum E5836
 19295 ;; Registers used:
 19296 ;;		wreg, status,2, status,0
 19297 ;; Tracked objects:
 19298 ;;		On entry : 0/0
 19299 ;;		On exit  : 0/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0
 19303 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19305 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19306 ;;Total ram usage:        1 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; Hardware stack levels required when called:   11
 19309 ;; This function calls:
 19310 ;;		Nothing
 19311 ;; This function is called by:
 19312 ;;		_moteHandler
 19313 ;;		_USBapp_Handler
 19314 ;; This function uses a non-reentrant model
 19315 ;;
 19316                           
 19317                           	psect	text68
 19318  004A74                     __ptext68:
 19319                           	opt stack 0
 19320  004A74                     _service_pushbutton:
 19321                           	opt stack 18
 19322                           
 19323                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19324                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19325                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;incstack = 0
 19329  004A74  0E00               	movlw	0
 19330  004A76  0100               	movlb	0	; () banked
 19331  004A78  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19335  004A7A  A281               	btfss	3969,1,c	;volatile
 19336  004A7C  D002               	goto	u8730
 19337                           
 19338                           ; BSR set to: 0
 19339  004A7E  B081               	btfsc	3969,0,c	;volatile
 19340  004A80  D01A               	goto	l938
 19341  004A82                     u8730:
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;buttons.c: 56: {
 19345                           ;buttons.c: 57: ++PB_Timer;
 19346                           
 19347                           ; BSR set to: 0
 19348  004A82  0E01               	movlw	1
 19349  004A84  0101               	movlb	1	; () banked
 19350  004A86  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19351  004A88  0E00               	movlw	0
 19352  004A8A  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19353  004A8C  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19354  004A8E  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19355                           
 19356                           ;buttons.c: 61: if (PB_Timer == 55)
 19357  004A90  0E37               	movlw	55
 19358  004A92  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19359  004A94  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19360  004A96  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19361  004A98  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19362  004A9A  A4D8               	btfss	status,2,c
 19363  004A9C  D009               	goto	l941
 19364                           
 19365                           ; BSR set to: 1
 19366                           ;buttons.c: 62: {
 19367                           ;buttons.c: 63: Release_Timer = 0;
 19368  004A9E  0E00               	movlw	0
 19369  004AA0  0100               	movlb	0	; () banked
 19370  004AA2  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19374  004AA4  B281               	btfsc	3969,1,c	;volatile
 19375  004AA6  D002               	goto	l942
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;buttons.c: 66: {
 19379                           ;buttons.c: 67: bs = ShortPress1;
 19380  004AA8  0E01               	movlw	1
 19381  004AAA  D018               	goto	L19
 19382  004AAC                     l942:
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;buttons.c: 69: else
 19386                           ;buttons.c: 70: {
 19387                           ;buttons.c: 71: bs = ShortPress2;
 19388                           
 19389                           ; BSR set to: 0
 19390  004AAC  0E02               	movlw	2
 19391  004AAE  D016               	goto	L19
 19392  004AB0                     l941:
 19393                           
 19394                           ;buttons.c: 74: else
 19395                           ;buttons.c: 75: {
 19396                           ;buttons.c: 76: bs = NoButton;
 19397                           
 19398                           ; BSR set to: 0
 19399  004AB0  0E00               	movlw	0
 19400  004AB2  0100               	movlb	0	; () banked
 19401  004AB4  D013               	goto	L19
 19402  004AB6                     l938:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;buttons.c: 79: else
 19406                           ;buttons.c: 80: {
 19407                           ;buttons.c: 81: if (Release_Timer == 20)
 19408                           
 19409                           ; BSR set to: 0
 19410  004AB6  0E14               	movlw	20
 19411  004AB8  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19412  004ABA  A4D8               	btfss	status,2,c
 19413  004ABC  D00D               	goto	l946
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;buttons.c: 82: {
 19417                           ;buttons.c: 83: PB_Timer = 0;
 19418  004ABE  0E00               	movlw	0
 19419  004AC0  0101               	movlb	1	; () banked
 19420  004AC2  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19421  004AC4  0E00               	movlw	0
 19422  004AC6  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19423  004AC8  0E00               	movlw	0
 19424  004ACA  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19425  004ACC  0E00               	movlw	0
 19426  004ACE  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19427                           
 19428                           ;buttons.c: 84: Release_Timer = 0;
 19429  004AD0  0E00               	movlw	0
 19430  004AD2  0100               	movlb	0	; () banked
 19431  004AD4  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19432                           
 19433                           ;buttons.c: 85: }
 19434  004AD6  D001               	goto	l947
 19435  004AD8                     l946:
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;buttons.c: 86: else
 19439                           ;buttons.c: 87: {
 19440                           ;buttons.c: 88: Release_Timer++;
 19441                           
 19442                           ; BSR set to: 0
 19443  004AD8  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19444  004ADA                     l947:
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;buttons.c: 89: }
 19448                           ;buttons.c: 90: bs = Released;
 19449                           
 19450                           ; BSR set to: 0
 19451  004ADA  0E03               	movlw	3
 19452  004ADC                     L19:
 19453  004ADC  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;buttons.c: 91: }
 19457                           ;buttons.c: 93: return bs;
 19458                           
 19459                           ; BSR set to: 0
 19460  004ADE  5160               	movf	service_pushbutton@bs& (0+255),w,b
 19461  004AE0  0012               	return	
 19462  004AE2                     __end_of_service_pushbutton:
 19463                           	opt stack 0
 19464                           tblptru	equ	0xFF8
 19465                           tblptrh	equ	0xFF7
 19466                           tblptrl	equ	0xFF6
 19467                           tablat	equ	0xFF5
 19468                           prodh	equ	0xFF4
 19469                           prodl	equ	0xFF3
 19470                           intcon	equ	0xFF2
 19471                           intcon3	equ	0xFF0
 19472                           postinc0	equ	0xFEE
 19473                           wreg	equ	0xFE8
 19474                           indf1	equ	0xFE7
 19475                           postdec1	equ	0xFE5
 19476                           fsr1h	equ	0xFE2
 19477                           fsr1l	equ	0xFE1
 19478                           indf2	equ	0xFDF
 19479                           fsr2h	equ	0xFDA
 19480                           fsr2l	equ	0xFD9
 19481                           status	equ	0xFD8
 19482                           
 19483 ;; *************** function _oled_putString *****************
 19484 ;; Defined at:
 19485 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 19488 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 19489 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 19490 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 19491 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 19492 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 19493 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 19494 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 19495 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 19496 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 19497 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 19498 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 19499 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 19500 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 19501 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 19502 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 19503 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 19504 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 19505 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 19506 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 19507 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 19508 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 19509 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 19510 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 19511 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 19512 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 19513 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 19514 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 19515 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 19516 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 19517 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 19518 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 19519 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 19520 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 19521 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 19522 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 19523 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 19524 ;;  station_dot     1   20[BANK0 ] unsigned char 
 19525 ;;  start_page      1   21[BANK0 ] unsigned char 
 19526 ;; Auto vars:     Size  Location     Type
 19527 ;;  index           1   22[BANK0 ] unsigned char 
 19528 ;; Return value:  Size  Location     Type
 19529 ;;                  1    wreg      void 
 19530 ;; Registers used:
 19531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19532 ;; Tracked objects:
 19533 ;;		On entry : 0/0
 19534 ;;		On exit  : 0/0
 19535 ;;		Unchanged: 0/0
 19536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19537 ;;      Params:         0       4       0       0       0       0       0       0       0
 19538 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19539 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19540 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19541 ;;Total ram usage:        5 bytes
 19542 ;; Hardware stack levels used:    1
 19543 ;; Hardware stack levels required when called:   14
 19544 ;; This function calls:
 19545 ;;		_oled_putChar
 19546 ;; This function is called by:
 19547 ;;		_main
 19548 ;;		_test_oled
 19549 ;;		_test_switch
 19550 ;;		_test_comms
 19551 ;;		_test_leds
 19552 ;;		_moteHandler
 19553 ;;		_moteJoiningProcess
 19554 ;;		_moteRunningProcess
 19555 ;;		_moteApp_testSensors
 19556 ;;		_USBapp_Handler
 19557 ;;		_oled_putUint8
 19558 ;;		_oled_putint8
 19559 ;;		_test_adc
 19560 ;;		_test_rf
 19561 ;;		_oled_putUint16
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text69
 19566  004AE2                     __ptext69:
 19567                           	opt stack 0
 19568  004AE2                     _oled_putString:
 19569                           	opt stack 14
 19570                           
 19571                           ;SSD1306oLED.c: 333: uint8_t index;
 19572                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;incstack = 0
 19576  004AE2  C074  F076         	movff	oled_putString@station_dot,oled_putString@index
 19577  004AE6  0E0F               	movlw	15
 19578  004AE8  0100               	movlb	0	; () banked
 19579  004AEA  6576               	cpfsgt	oled_putString@index& (0+255),b
 19580  004AEC  D001               	goto	l1045
 19581  004AEE  0012               	return	
 19582  004AF0                     l1045:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;SSD1306oLED.c: 335: {
 19586                           ;SSD1306oLED.c: 336: if (*string != 0)
 19587                           
 19588                           ; BSR set to: 0
 19589  004AF0  C072  FFF6         	movff	oled_putString@string,tblptrl
 19590  004AF4  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19591  004AF8  6AF8               	clrf	tblptru,c
 19592  004AFA  0E07               	movlw	(high __ramtop+-1)
 19593  004AFC  64F7               	cpfsgt	tblptrh,c
 19594  004AFE  D003               	bra	u6367
 19595  004B00  0008               	tblrd		*
 19596  004B02  50F5               	movf	tablat,w,c
 19597  004B04  D005               	bra	u6360
 19598  004B06                     u6367:
 19599  004B06  CFF6 FFE9          	movff	tblptrl,fsr0l
 19600  004B0A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19601  004B0E  50EF               	movf	indf0,w,c
 19602  004B10                     u6360:
 19603  004B10  0900               	iorlw	0
 19604  004B12  B4D8               	btfsc	status,2,c
 19605  004B14  0012               	return	
 19606                           
 19607                           ;SSD1306oLED.c: 337: {
 19608                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19609  004B16  C076  F062         	movff	oled_putString@index,oled_putChar@station_dot
 19610  004B1A  C075  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 19611  004B1E  C072  FFF6         	movff	oled_putString@string,tblptrl
 19612  004B22  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19613  004B26  6AF8               	clrf	tblptru,c
 19614  004B28  0E07               	movlw	(high __ramtop+-1)
 19615  004B2A  64F7               	cpfsgt	tblptrh,c
 19616  004B2C  D003               	bra	u6387
 19617  004B2E  0008               	tblrd		*
 19618  004B30  50F5               	movf	tablat,w,c
 19619  004B32  D005               	bra	u6380
 19620  004B34                     u6387:
 19621  004B34  CFF6 FFE9          	movff	tblptrl,fsr0l
 19622  004B38  CFF7 FFEA          	movff	tblptrh,fsr0h
 19623  004B3C  50EF               	movf	indf0,w,c
 19624  004B3E                     u6380:
 19625  004B3E  EC8B  F023         	call	_oled_putChar
 19626                           
 19627                           ;SSD1306oLED.c: 339: *string++;
 19628  004B42  0100               	movlb	0	; () banked
 19629  004B44  4B72               	infsnz	oled_putString@string& (0+255),f,b
 19630  004B46  2B73               	incf	(oled_putString@string+1)& (0+255),f,b
 19631                           
 19632                           ; BSR set to: 0
 19633                           
 19634                           ; BSR set to: 0
 19635                           
 19636                           ; BSR set to: 0
 19637                           ;SSD1306oLED.c: 341: else
 19638                           ;SSD1306oLED.c: 342: {
 19639                           ;SSD1306oLED.c: 343: break;
 19640                           
 19641                           ;SSD1306oLED.c: 340: }
 19642  004B48  2B76               	incf	oled_putString@index& (0+255),f,b
 19643                           
 19644                           ; BSR set to: 0
 19645  004B4A  0E0F               	movlw	15
 19646  004B4C  D7CE               	goto	L20
 19647  004B4E                     __end_of_oled_putString:
 19648                           	opt stack 0
 19649                           tblptru	equ	0xFF8
 19650                           tblptrh	equ	0xFF7
 19651                           tblptrl	equ	0xFF6
 19652                           tablat	equ	0xFF5
 19653                           prodh	equ	0xFF4
 19654                           prodl	equ	0xFF3
 19655                           intcon	equ	0xFF2
 19656                           intcon3	equ	0xFF0
 19657                           indf0	equ	0xFEF
 19658                           postinc0	equ	0xFEE
 19659                           fsr0h	equ	0xFEA
 19660                           fsr0l	equ	0xFE9
 19661                           wreg	equ	0xFE8
 19662                           indf1	equ	0xFE7
 19663                           postdec1	equ	0xFE5
 19664                           fsr1h	equ	0xFE2
 19665                           fsr1l	equ	0xFE1
 19666                           indf2	equ	0xFDF
 19667                           fsr2h	equ	0xFDA
 19668                           fsr2l	equ	0xFD9
 19669                           status	equ	0xFD8
 19670                           
 19671 ;; *************** function _oled_clear *****************
 19672 ;; Defined at:
 19673 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19674 ;; Parameters:    Size  Location     Type
 19675 ;;		None
 19676 ;; Auto vars:     Size  Location     Type
 19677 ;;		None
 19678 ;; Return value:  Size  Location     Type
 19679 ;;                  1    wreg      void 
 19680 ;; Registers used:
 19681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19682 ;; Tracked objects:
 19683 ;;		On entry : 0/0
 19684 ;;		On exit  : 0/0
 19685 ;;		Unchanged: 0/0
 19686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19687 ;;      Params:         0       0       0       0       0       0       0       0       0
 19688 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19689 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19690 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19691 ;;Total ram usage:        0 bytes
 19692 ;; Hardware stack levels used:    1
 19693 ;; Hardware stack levels required when called:   15
 19694 ;; This function calls:
 19695 ;;		_oled_clearRow
 19696 ;; This function is called by:
 19697 ;;		_main
 19698 ;;		_test_powerup
 19699 ;;		_test_oled
 19700 ;;		_test_switch
 19701 ;;		_moteHandler
 19702 ;;		_moteJoiningProcess
 19703 ;;		_moteRunningProcess
 19704 ;;		_moteApp_testSensors
 19705 ;;		_USBapp_Handler
 19706 ;;		_oled_init
 19707 ;;		_test_adc
 19708 ;;		_test_rf
 19709 ;; This function uses a non-reentrant model
 19710 ;;
 19711                           
 19712                           	psect	text70
 19713  00575A                     __ptext70:
 19714                           	opt stack 0
 19715  00575A                     _oled_clear:
 19716                           	opt stack 13
 19717                           
 19718                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19719                           
 19720                           ;incstack = 0
 19721  00575A  0E00               	movlw	0
 19722  00575C  EC2E  F02B         	call	_oled_clearRow
 19723                           
 19724                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19725  005760  0E01               	movlw	1
 19726  005762  EC2E  F02B         	call	_oled_clearRow
 19727                           
 19728                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19729  005766  0E02               	movlw	2
 19730  005768  EC2E  F02B         	call	_oled_clearRow
 19731                           
 19732                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19733  00576C  0E03               	movlw	3
 19734  00576E  EC2E  F02B         	call	_oled_clearRow
 19735  005772  0012               	return		;funcret
 19736  005774                     __end_of_oled_clear:
 19737                           	opt stack 0
 19738                           tblptru	equ	0xFF8
 19739                           tblptrh	equ	0xFF7
 19740                           tblptrl	equ	0xFF6
 19741                           tablat	equ	0xFF5
 19742                           prodh	equ	0xFF4
 19743                           prodl	equ	0xFF3
 19744                           intcon	equ	0xFF2
 19745                           intcon3	equ	0xFF0
 19746                           indf0	equ	0xFEF
 19747                           postinc0	equ	0xFEE
 19748                           fsr0h	equ	0xFEA
 19749                           fsr0l	equ	0xFE9
 19750                           wreg	equ	0xFE8
 19751                           indf1	equ	0xFE7
 19752                           postdec1	equ	0xFE5
 19753                           fsr1h	equ	0xFE2
 19754                           fsr1l	equ	0xFE1
 19755                           indf2	equ	0xFDF
 19756                           fsr2h	equ	0xFDA
 19757                           fsr2l	equ	0xFD9
 19758                           status	equ	0xFD8
 19759                           
 19760 ;; *************** function _oled_clearRow *****************
 19761 ;; Defined at:
 19762 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 19763 ;; Parameters:    Size  Location     Type
 19764 ;;  page            1    wreg     unsigned char 
 19765 ;; Auto vars:     Size  Location     Type
 19766 ;;  page            1   12[BANK0 ] unsigned char 
 19767 ;;  index           1   13[BANK0 ] unsigned char 
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  1    wreg      void 
 19770 ;; Registers used:
 19771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/0
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19777 ;;      Params:         0       0       0       0       0       0       0       0       0
 19778 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19780 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19781 ;;Total ram usage:        2 bytes
 19782 ;; Hardware stack levels used:    1
 19783 ;; Hardware stack levels required when called:   14
 19784 ;; This function calls:
 19785 ;;		_oled_putChar
 19786 ;; This function is called by:
 19787 ;;		_oled_clear
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text71
 19792  00565C                     __ptext71:
 19793                           	opt stack 0
 19794  00565C                     _oled_clearRow:
 19795                           	opt stack 13
 19796                           
 19797                           ;incstack = 0
 19798                           ;oled_clearRow@page stored from wreg
 19799  00565C  0100               	movlb	0	; () banked
 19800  00565E  6F6C               	movwf	oled_clearRow@page& (0+255),b
 19801                           
 19802                           ;SSD1306oLED.c: 358: uint8_t index;
 19803                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 19804  005660  0E00               	movlw	0
 19805  005662  0100               	movlb	0	; () banked
 19806  005664  6F6D               	movwf	oled_clearRow@index& (0+255),b
 19807  005666                     l7897:
 19808                           
 19809                           ; BSR set to: 0
 19810  005666  0E0F               	movlw	15
 19811  005668  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 19812  00566A  D001               	goto	l1055
 19813  00566C  0012               	return	
 19814  00566E                     l1055:
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;SSD1306oLED.c: 361: {
 19818                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 19819                           
 19820                           ; BSR set to: 0
 19821  00566E  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 19822  005672  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 19823  005676  0E20               	movlw	32
 19824  005678  EC8B  F023         	call	_oled_putChar
 19825  00567C  0100               	movlb	0	; () banked
 19826  00567E  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 19827  005680  D7F2               	goto	l7897
 19828  005682                     __end_of_oled_clearRow:
 19829                           	opt stack 0
 19830                           tblptru	equ	0xFF8
 19831                           tblptrh	equ	0xFF7
 19832                           tblptrl	equ	0xFF6
 19833                           tablat	equ	0xFF5
 19834                           prodh	equ	0xFF4
 19835                           prodl	equ	0xFF3
 19836                           intcon	equ	0xFF2
 19837                           intcon3	equ	0xFF0
 19838                           indf0	equ	0xFEF
 19839                           postinc0	equ	0xFEE
 19840                           fsr0h	equ	0xFEA
 19841                           fsr0l	equ	0xFE9
 19842                           wreg	equ	0xFE8
 19843                           indf1	equ	0xFE7
 19844                           postdec1	equ	0xFE5
 19845                           fsr1h	equ	0xFE2
 19846                           fsr1l	equ	0xFE1
 19847                           indf2	equ	0xFDF
 19848                           fsr2h	equ	0xFDA
 19849                           fsr2l	equ	0xFD9
 19850                           status	equ	0xFD8
 19851                           
 19852 ;; *************** function _oled_putChar *****************
 19853 ;; Defined at:
 19854 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 19855 ;; Parameters:    Size  Location     Type
 19856 ;;  k               1    wreg     unsigned char 
 19857 ;;  station_dot     1    2[BANK0 ] unsigned char 
 19858 ;;  start_page      1    3[BANK0 ] unsigned char 
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;  k               1   10[BANK0 ] unsigned char 
 19861 ;;  index           1   11[BANK0 ] unsigned char 
 19862 ;; Return value:  Size  Location     Type
 19863 ;;                  1    wreg      void 
 19864 ;; Registers used:
 19865 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19866 ;; Tracked objects:
 19867 ;;		On entry : 0/0
 19868 ;;		On exit  : 0/0
 19869 ;;		Unchanged: 0/0
 19870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19871 ;;      Params:         0       2       0       0       0       0       0       0       0
 19872 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19873 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19874 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19875 ;;Total ram usage:       10 bytes
 19876 ;; Hardware stack levels used:    1
 19877 ;; Hardware stack levels required when called:   13
 19878 ;; This function calls:
 19879 ;;		_Set_Column_Address
 19880 ;;		_Set_Page_Address
 19881 ;;		_oled_writeData
 19882 ;; This function is called by:
 19883 ;;		_moteApp_testSensors
 19884 ;;		_oled_putString
 19885 ;;		_oled_clearRow
 19886 ;;		_test_adc
 19887 ;; This function uses a non-reentrant model
 19888 ;;
 19889                           
 19890                           	psect	text72
 19891  004716                     __ptext72:
 19892                           	opt stack 0
 19893  004716                     _oled_putChar:
 19894                           	opt stack 14
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;incstack = 0
 19898                           ;oled_putChar@k stored from wreg
 19899  004716  0100               	movlb	0	; () banked
 19900  004718  6F6A               	movwf	oled_putChar@k& (0+255),b
 19901                           
 19902                           ;SSD1306oLED.c: 320: uint8_t index;
 19903                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 19904  00471A  0100               	movlb	0	; () banked
 19905  00471C  5163               	movf	oled_putChar@start_page& (0+255),w,b
 19906  00471E  EC07  F02C         	call	_Set_Page_Address
 19907                           
 19908                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 19909  004722  0100               	movlb	0	; () banked
 19910  004724  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 19911  004726  0D08               	mullw	8
 19912  004728  50F3               	movf	prodl,w,c
 19913  00472A  0F04               	addlw	4
 19914  00472C  EC91  F02B         	call	_Set_Column_Address
 19915                           
 19916                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 19917  004730  0E00               	movlw	0
 19918  004732  0100               	movlb	0	; () banked
 19919  004734  6F6B               	movwf	oled_putChar@index& (0+255),b
 19920  004736                     l7761:
 19921                           
 19922                           ; BSR set to: 0
 19923  004736  0E07               	movlw	7
 19924  004738  656B               	cpfsgt	oled_putChar@index& (0+255),b
 19925  00473A  D001               	goto	l1040
 19926  00473C  0012               	return	
 19927  00473E                     l1040:
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;SSD1306oLED.c: 326: {
 19931                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 19932                           
 19933                           ; BSR set to: 0
 19934  00473E  516B               	movf	oled_putChar@index& (0+255),w,b
 19935  004740  0D01               	mullw	1
 19936  004742  0E00               	movlw	0
 19937  004744  6F64               	movwf	??_oled_putChar& (0+255),b
 19938  004746  0EFF               	movlw	255
 19939  004748  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 19940  00474A  516A               	movf	oled_putChar@k& (0+255),w,b
 19941  00474C  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 19942  00474E  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 19943  004750  90D8               	bcf	status,0,c
 19944  004752  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19945  004754  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19946  004756  90D8               	bcf	status,0,c
 19947  004758  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19948  00475A  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19949  00475C  90D8               	bcf	status,0,c
 19950  00475E  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19951  004760  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19952  004762  5164               	movf	??_oled_putChar& (0+255),w,b
 19953  004764  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 19954  004766  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 19955  004768  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 19956  00476A  C1FA  F068         	movff	_selectedFont,??_oled_putChar+4
 19957  00476E  C1FB  F069         	movff	_selectedFont+1,??_oled_putChar+5
 19958  004772  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 19959  004774  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19960  004776  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 19961  004778  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19962  00477A  50F3               	movf	prodl,w,c
 19963  00477C  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19964  00477E  50F4               	movf	prodh,w,c
 19965  004780  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19966  004782  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 19967  004786  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 19968  00478A                     	if	0	;tblptru may be non-zero
 19969  00478A                     	endif
 19970  00478A                     	if	0	;tblptru may be non-zero
 19971  00478A                     	endif
 19972  00478A  0008               	tblrd		*
 19973  00478C  50F5               	movf	tablat,w,c
 19974  00478E  ECC7  F02B         	call	_oled_writeData
 19975  004792  0100               	movlb	0	; () banked
 19976  004794  2B6B               	incf	oled_putChar@index& (0+255),f,b
 19977  004796  D7CF               	goto	l7761
 19978  004798                     __end_of_oled_putChar:
 19979                           	opt stack 0
 19980                           tblptru	equ	0xFF8
 19981                           tblptrh	equ	0xFF7
 19982                           tblptrl	equ	0xFF6
 19983                           tablat	equ	0xFF5
 19984                           prodh	equ	0xFF4
 19985                           prodl	equ	0xFF3
 19986                           intcon	equ	0xFF2
 19987                           intcon3	equ	0xFF0
 19988                           indf0	equ	0xFEF
 19989                           postinc0	equ	0xFEE
 19990                           fsr0h	equ	0xFEA
 19991                           fsr0l	equ	0xFE9
 19992                           wreg	equ	0xFE8
 19993                           indf1	equ	0xFE7
 19994                           postdec1	equ	0xFE5
 19995                           fsr1h	equ	0xFE2
 19996                           fsr1l	equ	0xFE1
 19997                           indf2	equ	0xFDF
 19998                           fsr2h	equ	0xFDA
 19999                           fsr2l	equ	0xFD9
 20000                           status	equ	0xFD8
 20001                           
 20002 ;; *************** function _oled_writeData *****************
 20003 ;; Defined at:
 20004 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20005 ;; Parameters:    Size  Location     Type
 20006 ;;  data            1    wreg     unsigned char 
 20007 ;; Auto vars:     Size  Location     Type
 20008 ;;  data            1    0[BANK0 ] unsigned char 
 20009 ;; Return value:  Size  Location     Type
 20010 ;;                  1    wreg      void 
 20011 ;; Registers used:
 20012 ;;		wreg
 20013 ;; Tracked objects:
 20014 ;;		On entry : 0/0
 20015 ;;		On exit  : 0/0
 20016 ;;		Unchanged: 0/0
 20017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20018 ;;      Params:         0       0       0       0       0       0       0       0       0
 20019 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20021 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20022 ;;Total ram usage:        1 bytes
 20023 ;; Hardware stack levels used:    1
 20024 ;; Hardware stack levels required when called:   11
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_oled_putChar
 20029 ;; This function uses a non-reentrant model
 20030 ;;
 20031                           
 20032                           	psect	text73
 20033  00578E                     __ptext73:
 20034                           	opt stack 0
 20035  00578E                     _oled_writeData:
 20036                           	opt stack 15
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;incstack = 0
 20040                           ;oled_writeData@data stored from wreg
 20041  00578E  0100               	movlb	0	; () banked
 20042  005790  6F60               	movwf	oled_writeData@data& (0+255),b
 20043                           
 20044                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20045  005792  988A               	bcf	3978,4,c	;volatile
 20046                           
 20047                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20048  005794  808B               	bsf	3979,0,c	;volatile
 20049                           
 20050                           ;SSD1306oLED.c: 446: LATD=data;
 20051  005796  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 20052                           
 20053                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20054  00579A  928B               	bcf	3979,1,c	;volatile
 20055                           
 20056                           ;SSD1306oLED.c: 448: __nop();
 20057  00579C  F000               	nop	
 20058                           
 20059                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20060  00579E  828B               	bsf	3979,1,c	;volatile
 20061                           
 20062                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20063  0057A0  888A               	bsf	3978,4,c	;volatile
 20064  0057A2  0012               	return	
 20065  0057A4                     __end_of_oled_writeData:
 20066                           	opt stack 0
 20067                           tblptru	equ	0xFF8
 20068                           tblptrh	equ	0xFF7
 20069                           tblptrl	equ	0xFF6
 20070                           tablat	equ	0xFF5
 20071                           prodh	equ	0xFF4
 20072                           prodl	equ	0xFF3
 20073                           intcon	equ	0xFF2
 20074                           intcon3	equ	0xFF0
 20075                           indf0	equ	0xFEF
 20076                           postinc0	equ	0xFEE
 20077                           fsr0h	equ	0xFEA
 20078                           fsr0l	equ	0xFE9
 20079                           wreg	equ	0xFE8
 20080                           indf1	equ	0xFE7
 20081                           postdec1	equ	0xFE5
 20082                           fsr1h	equ	0xFE2
 20083                           fsr1l	equ	0xFE1
 20084                           indf2	equ	0xFDF
 20085                           fsr2h	equ	0xFDA
 20086                           fsr2l	equ	0xFD9
 20087                           status	equ	0xFD8
 20088                           
 20089 ;; *************** function _Set_Page_Address *****************
 20090 ;; Defined at:
 20091 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20092 ;; Parameters:    Size  Location     Type
 20093 ;;  address         1    wreg     unsigned char 
 20094 ;; Auto vars:     Size  Location     Type
 20095 ;;  address         1    1[BANK0 ] unsigned char 
 20096 ;; Return value:  Size  Location     Type
 20097 ;;                  1    wreg      void 
 20098 ;; Registers used:
 20099 ;;		wreg, status,2, status,0, cstack
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20105 ;;      Params:         0       0       0       0       0       0       0       0       0
 20106 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20107 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20108 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20109 ;;Total ram usage:        1 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; Hardware stack levels required when called:   12
 20112 ;; This function calls:
 20113 ;;		_oled_writeCommand
 20114 ;; This function is called by:
 20115 ;;		_oled_putChar
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           	psect	text74
 20120  00580E                     __ptext74:
 20121                           	opt stack 0
 20122  00580E                     _Set_Page_Address:
 20123                           	opt stack 14
 20124                           
 20125                           ;incstack = 0
 20126                           ;Set_Page_Address@address stored from wreg
 20127  00580E  0100               	movlb	0	; () banked
 20128  005810  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20129                           
 20130                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20131  005812  0100               	movlb	0	; () banked
 20132  005814  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20133  005816  09B0               	iorlw	176
 20134  005818  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20138  00581A  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20139  00581C  ECD2  F02B         	call	_oled_writeCommand
 20140  005820  0012               	return	
 20141  005822                     __end_of_Set_Page_Address:
 20142                           	opt stack 0
 20143                           tblptru	equ	0xFF8
 20144                           tblptrh	equ	0xFF7
 20145                           tblptrl	equ	0xFF6
 20146                           tablat	equ	0xFF5
 20147                           prodh	equ	0xFF4
 20148                           prodl	equ	0xFF3
 20149                           intcon	equ	0xFF2
 20150                           intcon3	equ	0xFF0
 20151                           indf0	equ	0xFEF
 20152                           postinc0	equ	0xFEE
 20153                           fsr0h	equ	0xFEA
 20154                           fsr0l	equ	0xFE9
 20155                           wreg	equ	0xFE8
 20156                           indf1	equ	0xFE7
 20157                           postdec1	equ	0xFE5
 20158                           fsr1h	equ	0xFE2
 20159                           fsr1l	equ	0xFE1
 20160                           indf2	equ	0xFDF
 20161                           fsr2h	equ	0xFDA
 20162                           fsr2l	equ	0xFD9
 20163                           status	equ	0xFD8
 20164                           
 20165 ;; *************** function _Set_Column_Address *****************
 20166 ;; Defined at:
 20167 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20168 ;; Parameters:    Size  Location     Type
 20169 ;;  address         1    wreg     unsigned char 
 20170 ;; Auto vars:     Size  Location     Type
 20171 ;;  address         1    1[BANK0 ] unsigned char 
 20172 ;; Return value:  Size  Location     Type
 20173 ;;                  1    wreg      void 
 20174 ;; Registers used:
 20175 ;;		wreg, status,2, status,0, cstack
 20176 ;; Tracked objects:
 20177 ;;		On entry : 0/0
 20178 ;;		On exit  : 0/0
 20179 ;;		Unchanged: 0/0
 20180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20181 ;;      Params:         0       0       0       0       0       0       0       0       0
 20182 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20183 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20184 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20185 ;;Total ram usage:        1 bytes
 20186 ;; Hardware stack levels used:    1
 20187 ;; Hardware stack levels required when called:   12
 20188 ;; This function calls:
 20189 ;;		_oled_writeCommand
 20190 ;; This function is called by:
 20191 ;;		_oled_putChar
 20192 ;; This function uses a non-reentrant model
 20193 ;;
 20194                           
 20195                           	psect	text75
 20196  005722                     __ptext75:
 20197                           	opt stack 0
 20198  005722                     _Set_Column_Address:
 20199                           	opt stack 14
 20200                           
 20201                           ;incstack = 0
 20202                           ;Set_Column_Address@address stored from wreg
 20203  005722  0100               	movlb	0	; () banked
 20204  005724  6F61               	movwf	Set_Column_Address@address& (0+255),b
 20205                           
 20206                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20207  005726  0100               	movlb	0	; () banked
 20208  005728  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 20209  00572A  0B0F               	andlw	15
 20210  00572C  0910               	iorlw	16
 20211  00572E  ECD2  F02B         	call	_oled_writeCommand
 20212                           
 20213                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20214  005732  0100               	movlb	0	; () banked
 20215  005734  5161               	movf	Set_Column_Address@address& (0+255),w,b
 20216  005736  0B0F               	andlw	15
 20217  005738  ECD2  F02B         	call	_oled_writeCommand
 20218  00573C  0012               	return	
 20219  00573E                     __end_of_Set_Column_Address:
 20220                           	opt stack 0
 20221                           tblptru	equ	0xFF8
 20222                           tblptrh	equ	0xFF7
 20223                           tblptrl	equ	0xFF6
 20224                           tablat	equ	0xFF5
 20225                           prodh	equ	0xFF4
 20226                           prodl	equ	0xFF3
 20227                           intcon	equ	0xFF2
 20228                           intcon3	equ	0xFF0
 20229                           indf0	equ	0xFEF
 20230                           postinc0	equ	0xFEE
 20231                           fsr0h	equ	0xFEA
 20232                           fsr0l	equ	0xFE9
 20233                           wreg	equ	0xFE8
 20234                           indf1	equ	0xFE7
 20235                           postdec1	equ	0xFE5
 20236                           fsr1h	equ	0xFE2
 20237                           fsr1l	equ	0xFE1
 20238                           indf2	equ	0xFDF
 20239                           fsr2h	equ	0xFDA
 20240                           fsr2l	equ	0xFD9
 20241                           status	equ	0xFD8
 20242                           
 20243 ;; *************** function _oled_writeCommand *****************
 20244 ;; Defined at:
 20245 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20246 ;; Parameters:    Size  Location     Type
 20247 ;;  command         1    wreg     unsigned char 
 20248 ;; Auto vars:     Size  Location     Type
 20249 ;;  command         1    0[BANK0 ] unsigned char 
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  1    wreg      void 
 20252 ;; Registers used:
 20253 ;;		wreg
 20254 ;; Tracked objects:
 20255 ;;		On entry : 0/0
 20256 ;;		On exit  : 0/0
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20259 ;;      Params:         0       0       0       0       0       0       0       0       0
 20260 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20262 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20263 ;;Total ram usage:        1 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:   11
 20266 ;; This function calls:
 20267 ;;		Nothing
 20268 ;; This function is called by:
 20269 ;;		_Set_Page_Address
 20270 ;;		_Set_Column_Address
 20271 ;;		_oled_devInit
 20272 ;;		_oled_setDisplay
 20273 ;;		_oled_displayOff
 20274 ;;		_oled_setContrastControlRegister
 20275 ;;		_oled_initialDispayLine
 20276 ;;		_oled_powerControl
 20277 ;;		_oled_regulorResistorSelect
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281                           	psect	text76
 20282  0057A4                     __ptext76:
 20283                           	opt stack 0
 20284  0057A4                     _oled_writeCommand:
 20285                           	opt stack 14
 20286                           
 20287                           ;incstack = 0
 20288                           ;oled_writeCommand@command stored from wreg
 20289  0057A4  0100               	movlb	0	; () banked
 20290  0057A6  6F60               	movwf	oled_writeCommand@command& (0+255),b
 20291                           
 20292                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20293  0057A8  988A               	bcf	3978,4,c	;volatile
 20294                           
 20295                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20296  0057AA  908B               	bcf	3979,0,c	;volatile
 20297                           
 20298                           ;SSD1306oLED.c: 434: LATD=command;
 20299  0057AC  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20300                           
 20301                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20302  0057B0  928B               	bcf	3979,1,c	;volatile
 20303                           
 20304                           ;SSD1306oLED.c: 436: __nop();
 20305  0057B2  F000               	nop	
 20306                           
 20307                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20308  0057B4  828B               	bsf	3979,1,c	;volatile
 20309                           
 20310                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20311  0057B6  888A               	bsf	3978,4,c	;volatile
 20312  0057B8  0012               	return	
 20313  0057BA                     __end_of_oled_writeCommand:
 20314                           	opt stack 0
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon3	equ	0xFF0
 20323                           indf0	equ	0xFEF
 20324                           postinc0	equ	0xFEE
 20325                           fsr0h	equ	0xFEA
 20326                           fsr0l	equ	0xFE9
 20327                           wreg	equ	0xFE8
 20328                           indf1	equ	0xFE7
 20329                           postdec1	equ	0xFE5
 20330                           fsr1h	equ	0xFE2
 20331                           fsr1l	equ	0xFE1
 20332                           indf2	equ	0xFDF
 20333                           fsr2h	equ	0xFDA
 20334                           fsr2l	equ	0xFD9
 20335                           status	equ	0xFD8
 20336                           
 20337 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20338 ;; Defined at:
 20339 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20340 ;; Parameters:    Size  Location     Type
 20341 ;;		None
 20342 ;; Auto vars:     Size  Location     Type
 20343 ;;		None
 20344 ;; Return value:  Size  Location     Type
 20345 ;;                  1    wreg      void 
 20346 ;; Registers used:
 20347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20348 ;; Tracked objects:
 20349 ;;		On entry : 0/0
 20350 ;;		On exit  : 0/0
 20351 ;;		Unchanged: 0/0
 20352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20353 ;;      Params:         0       0       0       0       0       0       0       0       0
 20354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20355 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20356 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20357 ;;Total ram usage:        1 bytes
 20358 ;; Hardware stack levels used:    1
 20359 ;; Hardware stack levels required when called:   13
 20360 ;; This function calls:
 20361 ;;		_CDCTxService
 20362 ;;		_EUSART_Read
 20363 ;;		_EUSART_Write
 20364 ;;		_MOTEapp_setResponseReady
 20365 ;;		_USBapp_getrxByteFlag
 20366 ;;		_getsUSBUSART
 20367 ;;		_putUSBUSART
 20368 ;; This function is called by:
 20369 ;;		_USBapp_Handler
 20370 ;; This function uses a non-reentrant model
 20371 ;;
 20372                           
 20373                           	psect	text77
 20374  003484                     __ptext77:
 20375                           	opt stack 0
 20376  003484                     _USBapp_DeviceCdcEmulatorHandler:
 20377                           	opt stack 16
 20378                           
 20379                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20380                           
 20381                           ;incstack = 0
 20382  003484  0E1F               	movlw	31
 20383  003486  0100               	movlb	0	; () banked
 20384  003488  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20385  00348A  0012               	return	
 20386                           
 20387                           ; BSR set to: 0
 20388  00348C  B260               	btfsc	3936,1,c	;volatile
 20389  00348E  0012               	return	
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20393                           
 20394                           ; BSR set to: 0
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;USBapp.c: 166: return;
 20398  003490  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20399  003492  A4D8               	btfss	status,2,c
 20400  003494  D011               	goto	l880
 20401                           
 20402                           ; BSR set to: 0
 20403                           ;USBapp.c: 169: {
 20404                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20405  003496  0E80               	movlw	low _USB_Buffer
 20406  003498  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20407  00349A  0E02               	movlw	high _USB_Buffer
 20408  00349C  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20409  00349E  0E40               	movlw	64
 20410  0034A0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20411  0034A2  ECA2  F01E         	call	_getsUSBUSART	;wreg free
 20412  0034A6  0100               	movlb	0	; () banked
 20413  0034A8  6FE6               	movwf	_LastRS232Out& (0+255),b
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20417  0034AA  51E6               	movf	_LastRS232Out& (0+255),w,b
 20418  0034AC  B4D8               	btfsc	status,2,c
 20419  0034AE  D004               	goto	l880
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;USBapp.c: 172: {
 20423                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20424  0034B0  0E01               	movlw	1
 20425  0034B2  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20426                           
 20427                           ;USBapp.c: 174: RS232cp = 0;
 20428  0034B4  0E00               	movlw	0
 20429  0034B6  6FE5               	movwf	_RS232cp& (0+255),b
 20430  0034B8                     l880:
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;USBapp.c: 175: }
 20434                           ;USBapp.c: 176: }
 20435                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20436                           
 20437                           ; BSR set to: 0
 20438  0034B8  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20439  0034BA  A4D8               	btfss	status,2,c
 20440                           
 20441                           ; BSR set to: 0
 20442  0034BC  A2AC               	btfss	4012,1,c	;volatile
 20443  0034BE  D013               	goto	l882
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;USBapp.c: 180: {
 20447                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20448  0034C0  51E5               	movf	_RS232cp& (0+255),w,b
 20449  0034C2  0D01               	mullw	1
 20450  0034C4  0E80               	movlw	low _USB_Buffer
 20451  0034C6  24F3               	addwf	prodl,w,c
 20452  0034C8  6ED9               	movwf	fsr2l,c
 20453  0034CA  0E02               	movlw	high _USB_Buffer
 20454  0034CC  20F4               	addwfc	prodh,w,c
 20455  0034CE  6EDA               	movwf	fsr2h,c
 20456  0034D0  50DF               	movf	indf2,w,c
 20457  0034D2  ECC7  F028         	call	_EUSART_Write
 20458                           
 20459                           ;USBapp.c: 183: ++RS232cp;
 20460  0034D6  0100               	movlb	0	; () banked
 20461  0034D8  2BE5               	incf	_RS232cp& (0+255),f,b
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20465  0034DA  51E6               	movf	_LastRS232Out& (0+255),w,b
 20466  0034DC  19E5               	xorwf	_RS232cp& (0+255),w,b
 20467  0034DE  A4D8               	btfss	status,2,c
 20468  0034E0  D002               	goto	l882
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20472  0034E2  0E00               	movlw	0
 20473  0034E4  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20474  0034E6                     l882:
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;USBapp.c: 186: }
 20478                           ;USBapp.c: 189: if ((eusartRxCount))
 20479                           
 20480                           ; BSR set to: 0
 20481  0034E6  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 20482  0034E8  B4D8               	btfsc	status,2,c
 20483  0034EA  D025               	goto	l884
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;USBapp.c: 190: {
 20487                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20488  0034EC  EC87  F02C         	call	_USBapp_getrxByteFlag	;wreg free
 20489  0034F0  0900               	iorlw	0
 20490  0034F2  B4D8               	btfsc	status,2,c
 20491  0034F4  D020               	goto	l884
 20492  0034F6  0E3F               	movlw	63
 20493  0034F8  0100               	movlb	0	; () banked
 20494  0034FA  61E8               	cpfslt	_NextUSBOut& (0+255),b
 20495  0034FC  D01C               	goto	l884
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;USBapp.c: 192: {
 20499                           ;USBapp.c: 193: __nop();
 20500  0034FE  F000               	nop	
 20501                           
 20502                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20503  003500  EC22  F029         	call	_EUSART_Read	;wreg free
 20504  003504  0100               	movlb	0	; () banked
 20505  003506  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20506  003508  51E8               	movf	_NextUSBOut& (0+255),w,b
 20507  00350A  0D01               	mullw	1
 20508  00350C  0E80               	movlw	low _USB_Buffer
 20509  00350E  24F3               	addwf	prodl,w,c
 20510  003510  6ED9               	movwf	fsr2l,c
 20511  003512  0E02               	movlw	high _USB_Buffer
 20512  003514  20F4               	addwfc	prodh,w,c
 20513  003516  6EDA               	movwf	fsr2h,c
 20514  003518  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;USBapp.c: 195: ++NextUSBOut;
 20518  00351C  2BE8               	incf	_NextUSBOut& (0+255),f,b
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20522  00351E  51E8               	movf	_NextUSBOut& (0+255),w,b
 20523  003520  0D01               	mullw	1
 20524  003522  0E80               	movlw	low _USB_Buffer
 20525  003524  24F3               	addwf	prodl,w,c
 20526  003526  6ED9               	movwf	fsr2l,c
 20527  003528  0E02               	movlw	high _USB_Buffer
 20528  00352A  20F4               	addwfc	prodh,w,c
 20529  00352C  6EDA               	movwf	fsr2h,c
 20530  00352E  0E00               	movlw	0
 20531  003530  6EDF               	movwf	indf2,c
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;USBapp.c: 197: rxByteFlag = 0;
 20535  003532  0E00               	movlw	0
 20536  003534  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 20537  003536                     l884:
 20538                           
 20539                           ;USBapp.c: 198: }
 20540                           ;USBapp.c: 199: }
 20541                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20542                           
 20543                           ; BSR set to: 0
 20544                           
 20545                           ; BSR set to: 0
 20546  003536  0100               	movlb	0	; () banked
 20547  003538  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20548  00353A  A4D8               	btfss	status,2,c
 20549  00353C  D010               	goto	l885
 20550                           
 20551                           ; BSR set to: 0
 20552  00353E  51E8               	movf	_NextUSBOut& (0+255),w,b
 20553  003540  B4D8               	btfsc	status,2,c
 20554  003542  D00D               	goto	l885
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;USBapp.c: 204: {
 20558                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20559  003544  0E80               	movlw	low _USB_Buffer
 20560  003546  6F60               	movwf	putUSBUSART@data& (0+255),b
 20561  003548  0E02               	movlw	high _USB_Buffer
 20562  00354A  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20563  00354C  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 20564  003550  EC41  F02B         	call	_putUSBUSART	;wreg free
 20565                           
 20566                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20567  003554  EC8A  F02C         	call	_MOTEapp_setResponseReady	;wreg free
 20568                           
 20569                           ;USBapp.c: 207: NextUSBOut = 0;
 20570  003558  0E00               	movlw	0
 20571  00355A  0100               	movlb	0	; () banked
 20572  00355C  6FE8               	movwf	_NextUSBOut& (0+255),b
 20573  00355E                     l885:
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;USBapp.c: 208: }
 20577                           ;USBapp.c: 210: CDCTxService();
 20578                           
 20579                           ; BSR set to: 0
 20580  00355E  ECE0  F012         	call	_CDCTxService	;wreg free
 20581  003562  0012               	return		;funcret
 20582  003564                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20583                           	opt stack 0
 20584                           tblptru	equ	0xFF8
 20585                           tblptrh	equ	0xFF7
 20586                           tblptrl	equ	0xFF6
 20587                           tablat	equ	0xFF5
 20588                           prodh	equ	0xFF4
 20589                           prodl	equ	0xFF3
 20590                           intcon	equ	0xFF2
 20591                           intcon3	equ	0xFF0
 20592                           indf0	equ	0xFEF
 20593                           postinc0	equ	0xFEE
 20594                           fsr0h	equ	0xFEA
 20595                           fsr0l	equ	0xFE9
 20596                           wreg	equ	0xFE8
 20597                           indf1	equ	0xFE7
 20598                           postdec1	equ	0xFE5
 20599                           fsr1h	equ	0xFE2
 20600                           fsr1l	equ	0xFE1
 20601                           indf2	equ	0xFDF
 20602                           fsr2h	equ	0xFDA
 20603                           fsr2l	equ	0xFD9
 20604                           status	equ	0xFD8
 20605                           
 20606 ;; *************** function _putUSBUSART *****************
 20607 ;; Defined at:
 20608 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20609 ;; Parameters:    Size  Location     Type
 20610 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20611 ;;		 -> USB_Buffer(64), 
 20612 ;;  length          1    2[BANK0 ] unsigned char 
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;		None
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  1    wreg      void 
 20617 ;; Registers used:
 20618 ;;		wreg, status,2, status,0
 20619 ;; Tracked objects:
 20620 ;;		On entry : 0/0
 20621 ;;		On exit  : 0/0
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20624 ;;      Params:         0       3       0       0       0       0       0       0       0
 20625 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20627 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20628 ;;Total ram usage:        3 bytes
 20629 ;; Hardware stack levels used:    1
 20630 ;; Hardware stack levels required when called:   11
 20631 ;; This function calls:
 20632 ;;		Nothing
 20633 ;; This function is called by:
 20634 ;;		_USBapp_DeviceCdcEmulatorHandler
 20635 ;; This function uses a non-reentrant model
 20636 ;;
 20637                           
 20638                           	psect	text78
 20639  005682                     __ptext78:
 20640                           	opt stack 0
 20641  005682                     _putUSBUSART:
 20642                           	opt stack 17
 20643                           
 20644                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20645                           
 20646                           ;incstack = 0
 20647  005682  94A3               	bcf	4003,2,c	;volatile
 20648                           
 20649                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20650  005684  0100               	movlb	0	; () banked
 20651  005686  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20652  005688  A4D8               	btfss	status,2,c
 20653  00568A  D00A               	goto	l2183
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;usb_device_cdc.c: 530: {
 20657                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20658  00568C  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 20659  005690  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20660                           
 20661                           ; BSR set to: 0
 20662  005694  C062  F0DD         	movff	putUSBUSART@length,_cdc_tx_len
 20663                           
 20664                           ; BSR set to: 0
 20665  005698  0E01               	movlw	1
 20666  00569A  6FDC               	movwf	_cdc_mem_type& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669  00569C  0E01               	movlw	1
 20670  00569E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 20671  0056A0                     l2183:
 20672                           
 20673                           ; BSR set to: 0
 20674                           ;usb_device_cdc.c: 532: }
 20675                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20676                           
 20677                           ; BSR set to: 0
 20678  0056A0  84A3               	bsf	4003,2,c	;volatile
 20679                           
 20680                           ; BSR set to: 0
 20681  0056A2  0012               	return		;funcret
 20682  0056A4                     __end_of_putUSBUSART:
 20683                           	opt stack 0
 20684                           tblptru	equ	0xFF8
 20685                           tblptrh	equ	0xFF7
 20686                           tblptrl	equ	0xFF6
 20687                           tablat	equ	0xFF5
 20688                           prodh	equ	0xFF4
 20689                           prodl	equ	0xFF3
 20690                           intcon	equ	0xFF2
 20691                           intcon3	equ	0xFF0
 20692                           indf0	equ	0xFEF
 20693                           postinc0	equ	0xFEE
 20694                           fsr0h	equ	0xFEA
 20695                           fsr0l	equ	0xFE9
 20696                           wreg	equ	0xFE8
 20697                           indf1	equ	0xFE7
 20698                           postdec1	equ	0xFE5
 20699                           fsr1h	equ	0xFE2
 20700                           fsr1l	equ	0xFE1
 20701                           indf2	equ	0xFDF
 20702                           fsr2h	equ	0xFDA
 20703                           fsr2l	equ	0xFD9
 20704                           status	equ	0xFD8
 20705                           
 20706 ;; *************** function _getsUSBUSART *****************
 20707 ;; Defined at:
 20708 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20709 ;; Parameters:    Size  Location     Type
 20710 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20711 ;;		 -> USB_Buffer(64), 
 20712 ;;  len             1    9[BANK0 ] unsigned char 
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;		None
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  1    wreg      unsigned char 
 20717 ;; Registers used:
 20718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/0
 20721 ;;		On exit  : 0/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20724 ;;      Params:         0       3       0       0       0       0       0       0       0
 20725 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20726 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20727 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20728 ;;Total ram usage:        6 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:   12
 20731 ;; This function calls:
 20732 ;;		_USBTransferOnePacket
 20733 ;; This function is called by:
 20734 ;;		_USBapp_DeviceCdcEmulatorHandler
 20735 ;; This function uses a non-reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text79
 20739  003D44                     __ptext79:
 20740                           	opt stack 0
 20741  003D44                     _getsUSBUSART:
 20742                           	opt stack 16
 20743                           
 20744                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;incstack = 0
 20748  003D44  0E00               	movlw	0
 20749  003D46  0100               	movlb	0	; () banked
 20750  003D48  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20754  003D4A  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20755  003D4C  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 20756  003D4E  B4D8               	btfsc	status,2,c
 20757  003D50  D00F               	goto	l2173
 20758                           
 20759                           ; BSR set to: 0
 20760  003D52  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20761  003D56  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20762  003D5A  AEDF               	btfss	indf2,7,c
 20763  003D5C  D003               	goto	u8190
 20764  003D5E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20765  003D60  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20766  003D62  D002               	goto	u8198
 20767  003D64                     u8190:
 20768  003D64  0100               	movlb	0	; () banked
 20769  003D66  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20770  003D68                     u8198:
 20771  003D68  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20772  003D6A  6F6B               	movwf	_getsUSBUSART$6620& (0+255),b
 20773  003D6C  6B6C               	clrf	(_getsUSBUSART$6620+1)& (0+255),b
 20774  003D6E  D004               	goto	l2175
 20775  003D70                     l2173:
 20776                           
 20777                           ; BSR set to: 0
 20778                           
 20779                           ; BSR set to: 0
 20780  003D70  0E00               	movlw	0
 20781  003D72  6F6C               	movwf	(_getsUSBUSART$6620+1)& (0+255),b
 20782  003D74  0E00               	movlw	0
 20783  003D76  6F6B               	movwf	_getsUSBUSART$6620& (0+255),b
 20784  003D78                     l2175:
 20785                           
 20786                           ; BSR set to: 0
 20787                           
 20788                           ; BSR set to: 0
 20789  003D78  516B               	movf	_getsUSBUSART$6620& (0+255),w,b
 20790  003D7A  116C               	iorwf	(_getsUSBUSART$6620+1)& (0+255),w,b
 20791  003D7C  A4D8               	btfss	status,2,c
 20792  003D7E  D03B               	goto	l2171
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;usb_device_cdc.c: 437: {
 20796                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20797  003D80  EE20 F001          	lfsr	2,1
 20798  003D84  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20799  003D86  26D9               	addwf	fsr2l,f,c
 20800  003D88  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20801  003D8A  22DA               	addwfc	fsr2h,f,c
 20802  003D8C  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20803  003D8E  5CDE               	subwf	postinc2,w,c
 20804  003D90  B0D8               	btfsc	status,0,c
 20805  003D92  D008               	goto	l2176
 20806                           
 20807                           ; BSR set to: 0
 20808                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20809  003D94  EE20 F001          	lfsr	2,1
 20810  003D98  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20811  003D9A  26D9               	addwf	fsr2l,f,c
 20812  003D9C  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20813  003D9E  22DA               	addwfc	fsr2h,f,c
 20814  003DA0  50DF               	movf	indf2,w,c
 20815  003DA2  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20816  003DA4                     l2176:
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20820                           
 20821                           ; BSR set to: 0
 20822  003DA4  0E00               	movlw	0
 20823  003DA6  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20824  003DA8  D013               	goto	l2177
 20825  003DAA                     
 20826                           ; BSR set to: 0
 20827                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20828                           
 20829                           ; BSR set to: 0
 20830  003DAA  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20831  003DAC  0D01               	mullw	1
 20832  003DAE  0E40               	movlw	64
 20833  003DB0  24F3               	addwf	prodl,w,c
 20834  003DB2  6ED9               	movwf	fsr2l,c
 20835  003DB4  0E05               	movlw	5
 20836  003DB6  20F4               	addwfc	prodh,w,c
 20837  003DB8  6EDA               	movwf	fsr2h,c
 20838  003DBA  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20839  003DBC  0D01               	mullw	1
 20840  003DBE  50F3               	movf	prodl,w,c
 20841  003DC0  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20842  003DC2  6EE1               	movwf	fsr1l,c
 20843  003DC4  50F4               	movf	prodh,w,c
 20844  003DC6  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20845  003DC8  6EE2               	movwf	fsr1h,c
 20846  003DCA  CFDF FFE7          	movff	indf2,indf1
 20847                           
 20848                           ; BSR set to: 0
 20849  003DCE  2BDE               	incf	_cdc_rx_len& (0+255),f,b
 20850  003DD0                     l2177:
 20851                           
 20852                           ; BSR set to: 0
 20853                           
 20854                           ; BSR set to: 0
 20855  003DD0  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20856  003DD2  5DDE               	subwf	_cdc_rx_len& (0+255),w,b
 20857  003DD4  A0D8               	btfss	status,0,c
 20858  003DD6  D7E9               	goto	l2178
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20862                           
 20863                           ; BSR set to: 0
 20864  003DD8  0E00               	movlw	0
 20865  003DDA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20866  003DDC  0E40               	movlw	64
 20867  003DDE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20868  003DE0  0E05               	movlw	5
 20869  003DE2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20870  003DE4  0E40               	movlw	64
 20871  003DE6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20872  003DE8  0E02               	movlw	2
 20873  003DEA  ECE6  F01D         	call	_USBTransferOnePacket
 20874  003DEE  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20875  003DF2  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20876  003DF6                     l2171:
 20877                           
 20878                           ;usb_device_cdc.c: 457: }
 20879                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 20880  003DF6  0100               	movlb	0	; () banked
 20881  003DF8  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20882  003DFA  0012               	return	
 20883  003DFC                     __end_of_getsUSBUSART:
 20884                           	opt stack 0
 20885                           tblptru	equ	0xFF8
 20886                           tblptrh	equ	0xFF7
 20887                           tblptrl	equ	0xFF6
 20888                           tablat	equ	0xFF5
 20889                           prodh	equ	0xFF4
 20890                           prodl	equ	0xFF3
 20891                           intcon	equ	0xFF2
 20892                           intcon3	equ	0xFF0
 20893                           indf0	equ	0xFEF
 20894                           postinc0	equ	0xFEE
 20895                           fsr0h	equ	0xFEA
 20896                           fsr0l	equ	0xFE9
 20897                           wreg	equ	0xFE8
 20898                           indf1	equ	0xFE7
 20899                           postdec1	equ	0xFE5
 20900                           fsr1h	equ	0xFE2
 20901                           fsr1l	equ	0xFE1
 20902                           indf2	equ	0xFDF
 20903                           postinc2	equ	0xFDE
 20904                           fsr2h	equ	0xFDA
 20905                           fsr2l	equ	0xFD9
 20906                           status	equ	0xFD8
 20907                           
 20908 ;; *************** function _USBapp_getrxByteFlag *****************
 20909 ;; Defined at:
 20910 ;;		line 268 in file "../Includes/Board/USBapp.c"
 20911 ;; Parameters:    Size  Location     Type
 20912 ;;		None
 20913 ;; Auto vars:     Size  Location     Type
 20914 ;;		None
 20915 ;; Return value:  Size  Location     Type
 20916 ;;                  1    wreg      unsigned char 
 20917 ;; Registers used:
 20918 ;;		wreg, status,2
 20919 ;; Tracked objects:
 20920 ;;		On entry : 0/0
 20921 ;;		On exit  : 0/0
 20922 ;;		Unchanged: 0/0
 20923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20924 ;;      Params:         0       0       0       0       0       0       0       0       0
 20925 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20927 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20928 ;;Total ram usage:        0 bytes
 20929 ;; Hardware stack levels used:    1
 20930 ;; Hardware stack levels required when called:   11
 20931 ;; This function calls:
 20932 ;;		Nothing
 20933 ;; This function is called by:
 20934 ;;		_USBapp_DeviceCdcEmulatorHandler
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text80
 20939  00590E                     __ptext80:
 20940                           	opt stack 0
 20941  00590E                     _USBapp_getrxByteFlag:
 20942                           	opt stack 17
 20943                           
 20944                           ;USBapp.c: 270: return rxByteFlag;
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;incstack = 0
 20948  00590E  0100               	movlb	0	; () banked
 20949  005910  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 20950  005912  0012               	return	
 20951  005914                     __end_of_USBapp_getrxByteFlag:
 20952                           	opt stack 0
 20953                           tblptru	equ	0xFF8
 20954                           tblptrh	equ	0xFF7
 20955                           tblptrl	equ	0xFF6
 20956                           tablat	equ	0xFF5
 20957                           prodh	equ	0xFF4
 20958                           prodl	equ	0xFF3
 20959                           intcon	equ	0xFF2
 20960                           intcon3	equ	0xFF0
 20961                           indf0	equ	0xFEF
 20962                           postinc0	equ	0xFEE
 20963                           fsr0h	equ	0xFEA
 20964                           fsr0l	equ	0xFE9
 20965                           wreg	equ	0xFE8
 20966                           indf1	equ	0xFE7
 20967                           postdec1	equ	0xFE5
 20968                           fsr1h	equ	0xFE2
 20969                           fsr1l	equ	0xFE1
 20970                           indf2	equ	0xFDF
 20971                           postinc2	equ	0xFDE
 20972                           fsr2h	equ	0xFDA
 20973                           fsr2l	equ	0xFD9
 20974                           status	equ	0xFD8
 20975                           
 20976 ;; *************** function _MOTEapp_setResponseReady *****************
 20977 ;; Defined at:
 20978 ;;		line 1103 in file "../Includes/Board/MOTEapp.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;		None
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;		None
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  1    wreg      void 
 20985 ;; Registers used:
 20986 ;;		wreg, status,2
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20992 ;;      Params:         0       0       0       0       0       0       0       0       0
 20993 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20995 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20996 ;;Total ram usage:        0 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:   11
 20999 ;; This function calls:
 21000 ;;		Nothing
 21001 ;; This function is called by:
 21002 ;;		_USBapp_DeviceCdcEmulatorHandler
 21003 ;; This function uses a non-reentrant model
 21004 ;;
 21005                           
 21006                           	psect	text81
 21007  005914                     __ptext81:
 21008                           	opt stack 0
 21009  005914                     _MOTEapp_setResponseReady:
 21010                           	opt stack 17
 21011                           
 21012                           ;MOTEapp.c: 1105: responseReady = 1;
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;incstack = 0
 21016  005914  0E01               	movlw	1
 21017  005916  6E52               	movwf	_responseReady,c
 21018  005918  0012               	return		;funcret
 21019  00591A                     __end_of_MOTEapp_setResponseReady:
 21020                           	opt stack 0
 21021                           tblptru	equ	0xFF8
 21022                           tblptrh	equ	0xFF7
 21023                           tblptrl	equ	0xFF6
 21024                           tablat	equ	0xFF5
 21025                           prodh	equ	0xFF4
 21026                           prodl	equ	0xFF3
 21027                           intcon	equ	0xFF2
 21028                           intcon3	equ	0xFF0
 21029                           indf0	equ	0xFEF
 21030                           postinc0	equ	0xFEE
 21031                           fsr0h	equ	0xFEA
 21032                           fsr0l	equ	0xFE9
 21033                           wreg	equ	0xFE8
 21034                           indf1	equ	0xFE7
 21035                           postdec1	equ	0xFE5
 21036                           fsr1h	equ	0xFE2
 21037                           fsr1l	equ	0xFE1
 21038                           indf2	equ	0xFDF
 21039                           postinc2	equ	0xFDE
 21040                           fsr2h	equ	0xFDA
 21041                           fsr2l	equ	0xFD9
 21042                           status	equ	0xFD8
 21043                           
 21044 ;; *************** function _EUSART_Write *****************
 21045 ;; Defined at:
 21046 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21047 ;; Parameters:    Size  Location     Type
 21048 ;;  txData          1    wreg     unsigned char 
 21049 ;; Auto vars:     Size  Location     Type
 21050 ;;  txData          1    0[BANK0 ] unsigned char 
 21051 ;; Return value:  Size  Location     Type
 21052 ;;                  1    wreg      void 
 21053 ;; Registers used:
 21054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21055 ;; Tracked objects:
 21056 ;;		On entry : 0/0
 21057 ;;		On exit  : 0/0
 21058 ;;		Unchanged: 0/0
 21059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21060 ;;      Params:         0       0       0       0       0       0       0       0       0
 21061 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21063 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21064 ;;Total ram usage:        1 bytes
 21065 ;; Hardware stack levels used:    1
 21066 ;; Hardware stack levels required when called:   11
 21067 ;; This function calls:
 21068 ;;		Nothing
 21069 ;; This function is called by:
 21070 ;;		_EndLine
 21071 ;;		_sendCommand
 21072 ;;		_sendDataCommand
 21073 ;;		_USBapp_DeviceCdcEmulatorHandler
 21074 ;; This function uses a non-reentrant model
 21075 ;;
 21076                           
 21077                           	psect	text82
 21078  00518E                     __ptext82:
 21079                           	opt stack 0
 21080  00518E                     _EUSART_Write:
 21081                           	opt stack 14
 21082                           
 21083                           ;incstack = 0
 21084                           ;EUSART_Write@txData stored from wreg
 21085  00518E  0100               	movlb	0	; () banked
 21086  005190  6F60               	movwf	EUSART_Write@txData& (0+255),b
 21087  005192                     
 21088                           ;eusart.c: 142: {
 21089                           
 21090                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21091  005192  0100               	movlb	0	; () banked
 21092  005194  51E1               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 21093  005196  B4D8               	btfsc	status,2,c
 21094  005198  D7FC               	goto	l7771
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;eusart.c: 143: }
 21098                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21099  00519A  B89D               	btfsc	3997,4,c	;volatile
 21100  00519C  D003               	goto	l1214
 21101                           
 21102                           ; BSR set to: 0
 21103                           ;eusart.c: 146: {
 21104                           ;eusart.c: 147: TXREG = txData;
 21105  00519E  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21106                           
 21107                           ;eusart.c: 148: }
 21108  0051A2  D012               	goto	l1215
 21109  0051A4                     l1214:
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;eusart.c: 149: else
 21113                           ;eusart.c: 150: {
 21114                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21115  0051A4  989D               	bcf	3997,4,c	;volatile
 21116                           
 21117                           ; BSR set to: 0
 21118                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21119  0051A6  51E3               	movf	_eusartTxHead& (0+255),w,b
 21120  0051A8  0D01               	mullw	1
 21121  0051AA  0E40               	movlw	low _eusartTxBuffer
 21122  0051AC  24F3               	addwf	prodl,w,c
 21123  0051AE  6ED9               	movwf	fsr2l,c
 21124  0051B0  0E02               	movlw	high _eusartTxBuffer
 21125  0051B2  20F4               	addwfc	prodh,w,c
 21126  0051B4  6EDA               	movwf	fsr2h,c
 21127  0051B6  C060  FFDF         	movff	EUSART_Write@txData,indf2
 21128                           
 21129                           ; BSR set to: 0
 21130  0051BA  2BE3               	incf	_eusartTxHead& (0+255),f,b
 21131                           
 21132                           ; BSR set to: 0
 21133                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21134  0051BC  0E3F               	movlw	63
 21135  0051BE  65E3               	cpfsgt	_eusartTxHead& (0+255),b
 21136  0051C0  D002               	goto	l1216
 21137                           
 21138                           ; BSR set to: 0
 21139                           ;eusart.c: 154: {
 21140                           ;eusart.c: 155: eusartTxHead = 0;
 21141  0051C2  0E00               	movlw	0
 21142  0051C4  6FE3               	movwf	_eusartTxHead& (0+255),b
 21143  0051C6                     l1216:
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;eusart.c: 156: }
 21147                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21148                           
 21149                           ; BSR set to: 0
 21150  0051C6  07E1               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 21151  0051C8                     l1215:
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;eusart.c: 158: }
 21155                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21156                           
 21157                           ; BSR set to: 0
 21158  0051C8  889D               	bsf	3997,4,c	;volatile
 21159                           
 21160                           ; BSR set to: 0
 21161  0051CA  0012               	return		;funcret
 21162  0051CC                     __end_of_EUSART_Write:
 21163                           	opt stack 0
 21164                           tblptru	equ	0xFF8
 21165                           tblptrh	equ	0xFF7
 21166                           tblptrl	equ	0xFF6
 21167                           tablat	equ	0xFF5
 21168                           prodh	equ	0xFF4
 21169                           prodl	equ	0xFF3
 21170                           intcon	equ	0xFF2
 21171                           intcon3	equ	0xFF0
 21172                           indf0	equ	0xFEF
 21173                           postinc0	equ	0xFEE
 21174                           fsr0h	equ	0xFEA
 21175                           fsr0l	equ	0xFE9
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postdec1	equ	0xFE5
 21179                           fsr1h	equ	0xFE2
 21180                           fsr1l	equ	0xFE1
 21181                           indf2	equ	0xFDF
 21182                           postinc2	equ	0xFDE
 21183                           fsr2h	equ	0xFDA
 21184                           fsr2l	equ	0xFD9
 21185                           status	equ	0xFD8
 21186                           
 21187 ;; *************** function _EUSART_Read *****************
 21188 ;; Defined at:
 21189 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;  readValue       1    0[BANK0 ] unsigned char 
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      unsigned char 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0
 21204 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21206 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21207 ;;Total ram usage:        1 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:   11
 21210 ;; This function calls:
 21211 ;;		Nothing
 21212 ;; This function is called by:
 21213 ;;		_MOTEapp_getModuleResponse
 21214 ;;		_USBapp_DeviceCdcEmulatorHandler
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text83
 21219  005244                     __ptext83:
 21220                           	opt stack 0
 21221  005244                     _EUSART_Read:
 21222                           	opt stack 15
 21223                           
 21224                           ;eusart.c: 119: uint8_t readValue = 0;
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;incstack = 0
 21228  005244  0E00               	movlw	0
 21229  005246  0100               	movlb	0	; () banked
 21230  005248  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21231                           
 21232                           ;eusart.c: 121: while(0 == eusartRxCount)
 21233  00524A  D001               	goto	l1204
 21234  00524C                     l1205:
 21235                           
 21236                           ; BSR set to: 0
 21237                           ;eusart.c: 122: {
 21238                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21239  00524C  8E89               	bsf	3977,7,c	;volatile
 21240  00524E                     l1204:
 21241                           
 21242                           ; BSR set to: 0
 21243                           
 21244                           ; BSR set to: 0
 21245  00524E  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 21246  005250  B4D8               	btfsc	status,2,c
 21247  005252  D7FC               	goto	l1205
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;eusart.c: 124: }
 21251                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21252  005254  9A9D               	bcf	3997,5,c	;volatile
 21253                           
 21254                           ; BSR set to: 0
 21255                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21256  005256  51DF               	movf	_eusartRxTail& (0+255),w,b
 21257  005258  0D01               	mullw	1
 21258  00525A  0E00               	movlw	low _eusartRxBuffer
 21259  00525C  24F3               	addwf	prodl,w,c
 21260  00525E  6ED9               	movwf	fsr2l,c
 21261  005260  0E02               	movlw	high _eusartRxBuffer
 21262  005262  20F4               	addwfc	prodh,w,c
 21263  005264  6EDA               	movwf	fsr2h,c
 21264  005266  50DF               	movf	indf2,w,c
 21265  005268  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21266                           
 21267                           ; BSR set to: 0
 21268  00526A  2BDF               	incf	_eusartRxTail& (0+255),f,b
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21272  00526C  0E3F               	movlw	63
 21273  00526E  65DF               	cpfsgt	_eusartRxTail& (0+255),b
 21274  005270  D002               	goto	l1207
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;eusart.c: 130: {
 21278                           ;eusart.c: 131: eusartRxTail = 0;
 21279  005272  0E00               	movlw	0
 21280  005274  6FDF               	movwf	_eusartRxTail& (0+255),b
 21281  005276                     l1207:
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;eusart.c: 132: }
 21285                           ;eusart.c: 133: eusartRxCount--;
 21286                           
 21287                           ; BSR set to: 0
 21288  005276  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21292  005278  8A9D               	bsf	3997,5,c	;volatile
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;eusart.c: 136: return readValue;
 21296  00527A  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 21297  00527C  0012               	return	
 21298  00527E                     __end_of_EUSART_Read:
 21299                           	opt stack 0
 21300                           tblptru	equ	0xFF8
 21301                           tblptrh	equ	0xFF7
 21302                           tblptrl	equ	0xFF6
 21303                           tablat	equ	0xFF5
 21304                           prodh	equ	0xFF4
 21305                           prodl	equ	0xFF3
 21306                           intcon	equ	0xFF2
 21307                           intcon3	equ	0xFF0
 21308                           indf0	equ	0xFEF
 21309                           postinc0	equ	0xFEE
 21310                           fsr0h	equ	0xFEA
 21311                           fsr0l	equ	0xFE9
 21312                           wreg	equ	0xFE8
 21313                           indf1	equ	0xFE7
 21314                           postdec1	equ	0xFE5
 21315                           fsr1h	equ	0xFE2
 21316                           fsr1l	equ	0xFE1
 21317                           indf2	equ	0xFDF
 21318                           postinc2	equ	0xFDE
 21319                           fsr2h	equ	0xFDA
 21320                           fsr2l	equ	0xFD9
 21321                           status	equ	0xFD8
 21322                           
 21323 ;; *************** function _CDCTxService *****************
 21324 ;; Defined at:
 21325 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21326 ;; Parameters:    Size  Location     Type
 21327 ;;		None
 21328 ;; Auto vars:     Size  Location     Type
 21329 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21330 ;;  i               1   10[BANK0 ] unsigned char 
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  1    wreg      void 
 21333 ;; Registers used:
 21334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21340 ;;      Params:         0       0       0       0       0       0       0       0       0
 21341 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21342 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21343 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21344 ;;Total ram usage:        5 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:   12
 21347 ;; This function calls:
 21348 ;;		_USBTransferOnePacket
 21349 ;; This function is called by:
 21350 ;;		_USBapp_DeviceCdcEmulatorHandler
 21351 ;; This function uses a non-reentrant model
 21352 ;;
 21353                           
 21354                           	psect	text84
 21355  0025C0                     __ptext84:
 21356                           	opt stack 0
 21357  0025C0                     _CDCTxService:
 21358                           	opt stack 16
 21359                           
 21360                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21361                           ;usb_device_cdc.c: 786: uint8_t i;
 21362                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;incstack = 0
 21366  0025C0  94A3               	bcf	4003,2,c	;volatile
 21367                           
 21368                           ;usb_device_cdc.c: 790: {};
 21369                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21370  0025C2  5033               	movf	_CDCDataInHandle,w,c
 21371  0025C4  1034               	iorwf	_CDCDataInHandle+1,w,c
 21372  0025C6  B4D8               	btfsc	status,2,c
 21373  0025C8  D010               	goto	l2203
 21374  0025CA  C033  FFD9         	movff	_CDCDataInHandle,fsr2l
 21375  0025CE  C034  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21376  0025D2  AEDF               	btfss	indf2,7,c
 21377  0025D4  D004               	goto	u8250
 21378  0025D6  0100               	movlb	0	; () banked
 21379  0025D8  6B67               	clrf	??_CDCTxService& (0+255),b
 21380  0025DA  2B67               	incf	??_CDCTxService& (0+255),f,b
 21381  0025DC  D002               	goto	u8258
 21382  0025DE                     u8250:
 21383  0025DE  0100               	movlb	0	; () banked
 21384  0025E0  6B67               	clrf	??_CDCTxService& (0+255),b
 21385  0025E2                     u8258:
 21386  0025E2  5167               	movf	??_CDCTxService& (0+255),w,b
 21387  0025E4  6F68               	movwf	_CDCTxService$6668& (0+255),b
 21388  0025E6  6B69               	clrf	(_CDCTxService$6668+1)& (0+255),b
 21389  0025E8  D005               	goto	l2205
 21390  0025EA                     l2203:
 21391                           
 21392                           ; BSR set to: 0
 21393  0025EA  0E00               	movlw	0
 21394  0025EC  0100               	movlb	0	; () banked
 21395  0025EE  6F69               	movwf	(_CDCTxService$6668+1)& (0+255),b
 21396  0025F0  0E00               	movlw	0
 21397  0025F2  6F68               	movwf	_CDCTxService$6668& (0+255),b
 21398  0025F4                     l2205:
 21399                           
 21400                           ; BSR set to: 0
 21401                           
 21402                           ; BSR set to: 0
 21403  0025F4  5168               	movf	_CDCTxService$6668& (0+255),w,b
 21404  0025F6  1169               	iorwf	(_CDCTxService$6668+1)& (0+255),w,b
 21405  0025F8  B4D8               	btfsc	status,2,c
 21406  0025FA  D002               	goto	l2201
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;usb_device_cdc.c: 793: {
 21410                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21411  0025FC  84A3               	bsf	4003,2,c	;volatile
 21412                           
 21413                           ;usb_device_cdc.c: 795: return;
 21414  0025FE  0012               	return	
 21415  002600                     l2201:
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;usb_device_cdc.c: 796: }
 21419                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21420                           
 21421                           ; BSR set to: 0
 21422  002600  0E03               	movlw	3
 21423  002602  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21424  002604  A4D8               	btfss	status,2,c
 21425  002606  D002               	goto	l2207
 21426                           
 21427                           ; BSR set to: 0
 21428                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21429  002608  0E00               	movlw	0
 21430  00260A  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21431  00260C                     l2207:
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21435  00260C  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21436  00260E  A4D8               	btfss	status,2,c
 21437  002610  D002               	goto	l2208
 21438                           
 21439                           ; BSR set to: 0
 21440                           ;usb_device_cdc.c: 810: {
 21441                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21442  002612  84A3               	bsf	4003,2,c	;volatile
 21443                           
 21444                           ;usb_device_cdc.c: 812: return;
 21445  002614  0012               	return	
 21446  002616                     l2208:
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;usb_device_cdc.c: 813: }
 21450                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21451                           
 21452                           ; BSR set to: 0
 21453  002616  0E02               	movlw	2
 21454  002618  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21455  00261A  A4D8               	btfss	status,2,c
 21456  00261C  D013               	goto	l2209
 21457                           
 21458                           ; BSR set to: 0
 21459                           ;usb_device_cdc.c: 819: {
 21460                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21461  00261E  0E01               	movlw	1
 21462  002620  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21463  002622  0E00               	movlw	0
 21464  002624  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21465  002626  0E00               	movlw	0
 21466  002628  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21467  00262A  0E00               	movlw	0
 21468  00262C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21469  00262E  0E02               	movlw	2
 21470  002630  ECE6  F01D         	call	_USBTransferOnePacket
 21471  002634  C060  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21472  002638  C061  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21473                           
 21474                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21475  00263C  0E03               	movlw	3
 21476  00263E  0100               	movlb	0	; () banked
 21477  002640  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21478                           
 21479                           ;usb_device_cdc.c: 823: }
 21480  002642  D05E               	goto	l2211
 21481  002644                     l2209:
 21482                           
 21483                           ; BSR set to: 0
 21484                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21485                           
 21486                           ; BSR set to: 0
 21487  002644  05EB               	decf	_cdc_trf_state& (0+255),w,b
 21488  002646  A4D8               	btfss	status,2,c
 21489  002648  D05B               	goto	l2211
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;usb_device_cdc.c: 825: {
 21493                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21494  00264A  0E40               	movlw	64
 21495  00264C  65DD               	cpfsgt	_cdc_tx_len& (0+255),b
 21496  00264E  D003               	goto	l2212
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21500  002650  0E40               	movlw	64
 21501  002652  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21502  002654  D002               	goto	l2213
 21503  002656                     l2212:
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;usb_device_cdc.c: 831: else
 21507                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21508  002656  C0DD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21509  00265A                     l2213:
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21513                           
 21514                           ; BSR set to: 0
 21515  00265A  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21516  00265C  0800               	sublw	0
 21517  00265E  25DD               	addwf	_cdc_tx_len& (0+255),w,b
 21518  002660  6FDD               	movwf	_cdc_tx_len& (0+255),b
 21519                           
 21520                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21521  002662  0E00               	movlw	0
 21522  002664  0101               	movlb	1	; () banked
 21523  002666  6F4E               	movwf	_pCDCDst& (0+255),b
 21524  002668  0E05               	movlw	5
 21525  00266A  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 21526                           
 21527                           ; BSR set to: 1
 21528                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21529  00266C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21530                           
 21531                           ; BSR set to: 1
 21532                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21533  002670  0100               	movlb	0	; () banked
 21534  002672  51DC               	movf	_cdc_mem_type& (0+255),w,b
 21535  002674  B4D8               	btfsc	status,2,c
 21536  002676  D012               	goto	l2215
 21537  002678  D026               	goto	l2219
 21538  00267A                     
 21539                           ; BSR set to: 0
 21540                           ;usb_device_cdc.c: 845: {
 21541                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21542                           
 21543                           ; BSR set to: 0
 21544  00267A  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21545  00267E  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21546  002682  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21547  002686  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21548  00268A  CFDF FFE7          	movff	indf2,indf1
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21552  00268E  0101               	movlb	1	; () banked
 21553  002690  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21554  002692  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21555                           
 21556                           ; BSR set to: 1
 21557                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21558  002694  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21559  002696  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21560                           
 21561                           ; BSR set to: 1
 21562                           ;usb_device_cdc.c: 849: i--;
 21563  002698  0100               	movlb	0	; () banked
 21564  00269A  076A               	decf	CDCTxService@i& (0+255),f,b
 21565  00269C                     l2215:
 21566                           
 21567                           ; BSR set to: 0
 21568                           
 21569                           ; BSR set to: 0
 21570  00269C  516A               	movf	CDCTxService@i& (0+255),w,b
 21571  00269E  B4D8               	btfsc	status,2,c
 21572  0026A0  D015               	goto	u8340
 21573  0026A2  D7EB               	goto	l2216
 21574  0026A4                     
 21575                           ; BSR set to: 0
 21576                           ;usb_device_cdc.c: 855: {
 21577                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21578                           
 21579                           ; BSR set to: 0
 21580  0026A4  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21581  0026A8  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21582  0026AC  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21583  0026B0  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21584  0026B4  CFDF FFE7          	movff	indf2,indf1
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21588  0026B8  0101               	movlb	1	; () banked
 21589  0026BA  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21590  0026BC  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21591                           
 21592                           ; BSR set to: 1
 21593                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21594  0026BE  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21595  0026C0  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21596                           
 21597                           ; BSR set to: 1
 21598                           ;usb_device_cdc.c: 859: i--;
 21599  0026C2  0100               	movlb	0	; () banked
 21600  0026C4  076A               	decf	CDCTxService@i& (0+255),f,b
 21601  0026C6                     l2219:
 21602                           
 21603                           ; BSR set to: 0
 21604                           
 21605                           ; BSR set to: 0
 21606  0026C6  516A               	movf	CDCTxService@i& (0+255),w,b
 21607  0026C8  A4D8               	btfss	status,2,c
 21608  0026CA  D7EC               	goto	l2220
 21609  0026CC                     u8340:
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;usb_device_cdc.c: 860: }
 21613                           ;usb_device_cdc.c: 861: }
 21614                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21615                           
 21616                           ; BSR set to: 0
 21617                           
 21618                           ; BSR set to: 0
 21619  0026CC  51DD               	movf	_cdc_tx_len& (0+255),w,b
 21620  0026CE  A4D8               	btfss	status,2,c
 21621  0026D0  D008               	goto	l2224
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;usb_device_cdc.c: 868: {
 21625                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21626  0026D2  0E40               	movlw	64
 21627  0026D4  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21628  0026D6  A4D8               	btfss	status,2,c
 21629  0026D8  D002               	goto	l2223
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21633  0026DA  0E02               	movlw	2
 21634  0026DC  D001               	goto	L21
 21635  0026DE                     l2223:
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;usb_device_cdc.c: 871: else
 21639                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21640                           
 21641                           ; BSR set to: 0
 21642  0026DE  0E03               	movlw	3
 21643  0026E0                     L21:
 21644  0026E0  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21645  0026E2                     l2224:
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;usb_device_cdc.c: 873: }
 21649                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21650                           
 21651                           ; BSR set to: 0
 21652                           
 21653                           ; BSR set to: 0
 21654  0026E2  0E01               	movlw	1
 21655  0026E4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21656  0026E6  0E00               	movlw	0
 21657  0026E8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21658  0026EA  0E05               	movlw	5
 21659  0026EC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21660  0026EE  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21661  0026F2  0E02               	movlw	2
 21662  0026F4  ECE6  F01D         	call	_USBTransferOnePacket
 21663  0026F8  C060  F033         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21664  0026FC  C061  F034         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21665  002700                     l2211:
 21666                           
 21667                           ;usb_device_cdc.c: 876: }
 21668                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 21669  002700  84A3               	bsf	4003,2,c	;volatile
 21670  002702  0012               	return		;funcret
 21671  002704                     __end_of_CDCTxService:
 21672                           	opt stack 0
 21673                           tblptru	equ	0xFF8
 21674                           tblptrh	equ	0xFF7
 21675                           tblptrl	equ	0xFF6
 21676                           tablat	equ	0xFF5
 21677                           prodh	equ	0xFF4
 21678                           prodl	equ	0xFF3
 21679                           intcon	equ	0xFF2
 21680                           intcon3	equ	0xFF0
 21681                           indf0	equ	0xFEF
 21682                           postinc0	equ	0xFEE
 21683                           fsr0h	equ	0xFEA
 21684                           fsr0l	equ	0xFE9
 21685                           wreg	equ	0xFE8
 21686                           indf1	equ	0xFE7
 21687                           postdec1	equ	0xFE5
 21688                           fsr1h	equ	0xFE2
 21689                           fsr1l	equ	0xFE1
 21690                           indf2	equ	0xFDF
 21691                           postinc2	equ	0xFDE
 21692                           fsr2h	equ	0xFDA
 21693                           fsr2l	equ	0xFD9
 21694                           status	equ	0xFD8
 21695                           
 21696 ;; *************** function _USBTransferOnePacket *****************
 21697 ;; Defined at:
 21698 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;  ep              1    wreg     unsigned char 
 21701 ;;  dir             1    0[BANK0 ] unsigned char 
 21702 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21703 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21704 ;;  len             1    3[BANK0 ] unsigned char 
 21705 ;; Auto vars:     Size  Location     Type
 21706 ;;  ep              1    4[BANK0 ] unsigned char 
 21707 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21708 ;;		 -> BDT(48), NULL(0), 
 21709 ;; Return value:  Size  Location     Type
 21710 ;;                  2    0[BANK0 ] PTR void 
 21711 ;; Registers used:
 21712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21713 ;; Tracked objects:
 21714 ;;		On entry : 0/0
 21715 ;;		On exit  : 0/0
 21716 ;;		Unchanged: 0/0
 21717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21718 ;;      Params:         0       4       0       0       0       0       0       0       0
 21719 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21720 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21721 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21722 ;;Total ram usage:        7 bytes
 21723 ;; Hardware stack levels used:    1
 21724 ;; Hardware stack levels required when called:   11
 21725 ;; This function calls:
 21726 ;;		Nothing
 21727 ;; This function is called by:
 21728 ;;		_getsUSBUSART
 21729 ;;		_CDCTxService
 21730 ;;		_USBCDCEventHandler
 21731 ;; This function uses a non-reentrant model
 21732 ;;
 21733                           
 21734                           	psect	text85
 21735  003BCC                     __ptext85:
 21736                           	opt stack 0
 21737  003BCC                     _USBTransferOnePacket:
 21738                           	opt stack 16
 21739                           
 21740                           ;incstack = 0
 21741                           ;USBTransferOnePacket@ep stored from wreg
 21742  003BCC  0100               	movlb	0	; () banked
 21743  003BCE  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21744                           
 21745                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 21746                           ;usb_device.c: 762: if(dir != 0)
 21747  003BD0  0100               	movlb	0	; () banked
 21748  003BD2  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21749  003BD4  B4D8               	btfsc	status,2,c
 21750  003BD6  D007               	goto	l1886
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;usb_device.c: 763: {
 21754                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 21755  003BD8  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21756  003BDA  0D02               	mullw	2
 21757  003BDC  0ECA               	movlw	low _pBDTEntryIn
 21758  003BDE  24F3               	addwf	prodl,w,c
 21759  003BE0  6ED9               	movwf	fsr2l,c
 21760  003BE2  0E00               	movlw	high _pBDTEntryIn
 21761  003BE4  D006               	goto	L22
 21762  003BE6                     l1886:
 21763                           
 21764                           ; BSR set to: 0
 21765                           ;usb_device.c: 767: else
 21766                           ;usb_device.c: 768: {
 21767                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 21768                           
 21769                           ; BSR set to: 0
 21770  003BE6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21771  003BE8  0D02               	mullw	2
 21772  003BEA  0E40               	movlw	low _pBDTEntryOut
 21773  003BEC  24F3               	addwf	prodl,w,c
 21774  003BEE  6ED9               	movwf	fsr2l,c
 21775  003BF0  0E01               	movlw	high _pBDTEntryOut
 21776  003BF2                     L22:
 21777  003BF2  20F4               	addwfc	prodh,w,c
 21778  003BF4  6EDA               	movwf	fsr2h,c
 21779  003BF6  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21780  003BFA  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;usb_device.c: 771: }
 21784                           ;usb_device.c: 775: if(handle == 0)
 21785                           
 21786                           ; BSR set to: 0
 21787  003BFE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21788  003C00  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21789  003C02  A4D8               	btfss	status,2,c
 21790  003C04  D005               	goto	l1888
 21791                           
 21792                           ; BSR set to: 0
 21793                           ;usb_device.c: 776: {
 21794                           ;usb_device.c: 777: return 0;
 21795  003C06  0E00               	movlw	0
 21796  003C08  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21797  003C0A  0E00               	movlw	0
 21798  003C0C  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21799                           
 21800                           ; BSR set to: 0
 21801  003C0E  0012               	return	
 21802  003C10                     l1888:
 21803                           
 21804                           ; BSR set to: 0
 21805                           ;usb_device.c: 778: }
 21806                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 21807                           
 21808                           ; BSR set to: 0
 21809  003C10  EE20 F002          	lfsr	2,2
 21810  003C14  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21811  003C16  26D9               	addwf	fsr2l,f,c
 21812  003C18  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21813  003C1A  22DA               	addwfc	fsr2h,f,c
 21814  003C1C  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21815  003C20  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21816                           
 21817                           ;usb_device.c: 781: handle->CNT = len;
 21818  003C24  EE20 F001          	lfsr	2,1
 21819  003C28  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21820  003C2A  26D9               	addwf	fsr2l,f,c
 21821  003C2C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21822  003C2E  22DA               	addwfc	fsr2h,f,c
 21823  003C30  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 21827  003C34  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21828  003C38  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21829  003C3C  0E40               	movlw	64
 21830  003C3E  16DF               	andwf	indf2,f,c
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 21834  003C40  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21835  003C44  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21836  003C48  0E00               	movlw	0
 21837  003C4A  86DB               	bsf	plusw2,3,c
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 21841  003C4C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21842  003C50  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21843  003C54  0E00               	movlw	0
 21844  003C56  8EDB               	bsf	plusw2,7,c
 21845                           
 21846                           ; BSR set to: 0
 21847                           ;usb_device.c: 787: if(dir != 0)
 21848  003C58  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21849  003C5A  B4D8               	btfsc	status,2,c
 21850  003C5C  D007               	goto	l1890
 21851                           
 21852                           ; BSR set to: 0
 21853                           ;usb_device.c: 788: {
 21854                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21855  003C5E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21856  003C60  0D02               	mullw	2
 21857  003C62  0ECA               	movlw	low _pBDTEntryIn
 21858  003C64  24F3               	addwf	prodl,w,c
 21859  003C66  6ED9               	movwf	fsr2l,c
 21860  003C68  0E00               	movlw	high _pBDTEntryIn
 21861  003C6A  D006               	goto	L23
 21862  003C6C                     l1890:
 21863                           
 21864                           ; BSR set to: 0
 21865                           ;usb_device.c: 792: else
 21866                           ;usb_device.c: 793: {
 21867                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21868                           
 21869                           ; BSR set to: 0
 21870  003C6C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21871  003C6E  0D02               	mullw	2
 21872  003C70  0E40               	movlw	low _pBDTEntryOut
 21873  003C72  24F3               	addwf	prodl,w,c
 21874  003C74  6ED9               	movwf	fsr2l,c
 21875  003C76  0E01               	movlw	high _pBDTEntryOut
 21876  003C78                     L23:
 21877  003C78  20F4               	addwfc	prodh,w,c
 21878  003C7A  6EDA               	movwf	fsr2h,c
 21879  003C7C  0E04               	movlw	4
 21880  003C7E  1ADF               	xorwf	indf2,f,c
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;usb_device.c: 796: }
 21884                           ;usb_device.c: 797: return (void*)handle;
 21885                           
 21886                           ; BSR set to: 0
 21887  003C80  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21888  003C84  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21889  003C88  0012               	return	
 21890  003C8A                     __end_of_USBTransferOnePacket:
 21891                           	opt stack 0
 21892                           tblptru	equ	0xFF8
 21893                           tblptrh	equ	0xFF7
 21894                           tblptrl	equ	0xFF6
 21895                           tablat	equ	0xFF5
 21896                           prodh	equ	0xFF4
 21897                           prodl	equ	0xFF3
 21898                           intcon	equ	0xFF2
 21899                           intcon3	equ	0xFF0
 21900                           indf0	equ	0xFEF
 21901                           postinc0	equ	0xFEE
 21902                           fsr0h	equ	0xFEA
 21903                           fsr0l	equ	0xFE9
 21904                           wreg	equ	0xFE8
 21905                           indf1	equ	0xFE7
 21906                           postdec1	equ	0xFE5
 21907                           fsr1h	equ	0xFE2
 21908                           fsr1l	equ	0xFE1
 21909                           indf2	equ	0xFDF
 21910                           postinc2	equ	0xFDE
 21911                           postdec2	equ	0xFDD
 21912                           plusw2	equ	0xFDB
 21913                           fsr2h	equ	0xFDA
 21914                           fsr2l	equ	0xFD9
 21915                           status	equ	0xFD8
 21916                           
 21917 ;; *************** function _USBDeviceInit *****************
 21918 ;; Defined at:
 21919 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 21920 ;; Parameters:    Size  Location     Type
 21921 ;;		None
 21922 ;; Auto vars:     Size  Location     Type
 21923 ;;  i               1    8[BANK0 ] unsigned char 
 21924 ;; Return value:  Size  Location     Type
 21925 ;;                  1    wreg      void 
 21926 ;; Registers used:
 21927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21928 ;; Tracked objects:
 21929 ;;		On entry : 0/0
 21930 ;;		On exit  : 0/0
 21931 ;;		Unchanged: 0/0
 21932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21933 ;;      Params:         0       0       0       0       0       0       0       0       0
 21934 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21936 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21937 ;;Total ram usage:        1 bytes
 21938 ;; Hardware stack levels used:    1
 21939 ;; Hardware stack levels required when called:   12
 21940 ;; This function calls:
 21941 ;;		_memset
 21942 ;; This function is called by:
 21943 ;;		_main
 21944 ;; This function uses a non-reentrant model
 21945 ;;
 21946                           
 21947                           	psect	text86
 21948  00296A                     __ptext86:
 21949                           	opt stack 0
 21950  00296A                     _USBDeviceInit:
 21951                           	opt stack 18
 21952                           
 21953                           ;usb_device.c: 239: uint8_t i;
 21954                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;incstack = 0
 21958  00296A  94A3               	bcf	4003,2,c	;volatile
 21959                           
 21960                           ;usb_device.c: 244: {UEIR = 0;};
 21961  00296C  0E00               	movlw	0
 21962  00296E  6E67               	movwf	3943,c	;volatile
 21963                           
 21964                           ;usb_device.c: 247: {UIR = 0;};
 21965  002970  0E00               	movlw	0
 21966  002972  6E65               	movwf	3941,c	;volatile
 21967                           
 21968                           ;usb_device.c: 250: UEP0 = 0;
 21969  002974  0E00               	movlw	0
 21970  002976  6E6A               	movwf	3946,c	;volatile
 21971                           
 21972                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 21973  002978  0E6B               	movlw	107
 21974  00297A  0100               	movlb	0	; () banked
 21975  00297C  6F60               	movwf	memset@p1& (0+255),b
 21976  00297E  0E0F               	movlw	15
 21977  002980  6F61               	movwf	(memset@p1+1)& (0+255),b
 21978  002982  0E00               	movlw	0
 21979  002984  6F63               	movwf	(memset@c+1)& (0+255),b
 21980  002986  0E00               	movlw	0
 21981  002988  6F62               	movwf	memset@c& (0+255),b
 21982  00298A  0E00               	movlw	0
 21983  00298C  6F65               	movwf	(memset@n+1)& (0+255),b
 21984  00298E  0E02               	movlw	2
 21985  002990  6F64               	movwf	memset@n& (0+255),b
 21986  002992  EC25  F02A         	call	_memset	;wreg free
 21987                           
 21988                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21989  002996  0E16               	movlw	22
 21990  002998  6E62               	movwf	3938,c	;volatile
 21991  00299A  0E9F               	movlw	159
 21992  00299C  6E66               	movwf	3942,c	;volatile
 21993  00299E  0E7B               	movlw	123
 21994  0029A0  6E64               	movwf	3940,c	;volatile
 21995                           
 21996                           ;usb_device.c: 257: ;
 21997                           ;usb_device.c: 260: ;
 21998                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 21999  0029A2  0E00               	movlw	0
 22000  0029A4  0100               	movlb	0	; () banked
 22001  0029A6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22002  0029A8                     l11225:
 22003                           
 22004                           ; BSR set to: 0
 22005  0029A8  0E0B               	movlw	11
 22006  0029AA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22007  0029AC  D001               	goto	l1846
 22008  0029AE  D00E               	goto	u9830
 22009  0029B0                     l1846:
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;usb_device.c: 264: {
 22013                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22014                           
 22015                           ; BSR set to: 0
 22016  0029B0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22017  0029B2  0D04               	mullw	4
 22018  0029B4  0E00               	movlw	0
 22019  0029B6  24F3               	addwf	prodl,w,c
 22020  0029B8  6ED9               	movwf	fsr2l,c
 22021  0029BA  0E04               	movlw	4
 22022  0029BC  20F4               	addwfc	prodh,w,c
 22023  0029BE  6EDA               	movwf	fsr2h,c
 22024  0029C0  6ADE               	clrf	postinc2,c
 22025  0029C2  6ADE               	clrf	postinc2,c
 22026  0029C4  6ADE               	clrf	postinc2,c
 22027  0029C6  6ADD               	clrf	postdec2,c
 22028                           
 22029                           ; BSR set to: 0
 22030  0029C8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22031  0029CA  D7EE               	goto	l11225
 22032  0029CC                     u9830:
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;usb_device.c: 266: }
 22036                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22037  0029CC  8C60               	bsf	3936,6,c	;volatile
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;usb_device.c: 272: UADDR = 0x00;
 22041  0029CE  0E00               	movlw	0
 22042  0029D0  6E63               	movwf	3939,c	;volatile
 22043                           
 22044                           ; BSR set to: 0
 22045                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22046  0029D2  9860               	bcf	3936,4,c	;volatile
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22050  0029D4  9C60               	bcf	3936,6,c	;volatile
 22051                           
 22052                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22053  0029D6  D009               	goto	l1848
 22054  0029D8                     
 22055                           ; BSR set to: 0
 22056                           ;usb_device.c: 282: {
 22057                           ;usb_device.c: 283: (UIR &= 0xF7);
 22058                           
 22059                           ; BSR set to: 0
 22060  0029D8  9665               	bcf	3941,3,c	;volatile
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22064  0029DA  0E00               	movlw	0
 22065  0029DC  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22069  0029DE  0E00               	movlw	0
 22070  0029E0  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22074  0029E2  0E00               	movlw	0
 22075  0029E4  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22076  0029E6  0E00               	movlw	0
 22077  0029E8  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22078  0029EA                     l1848:
 22079                           
 22080                           ; BSR set to: 0
 22081                           
 22082                           ; BSR set to: 0
 22083  0029EA  B665               	btfsc	3941,3,c	;volatile
 22084  0029EC  D7F5               	goto	l1849
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;usb_device.c: 288: }
 22088                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22089                           
 22090                           ; BSR set to: 0
 22091  0029EE  0E01               	movlw	1
 22092  0029F0  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22093                           
 22094                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22095  0029F2  0E01               	movlw	1
 22096  0029F4  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22097                           
 22098                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22099  0029F6  0E00               	movlw	0
 22100  0029F8  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22101                           
 22102                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22103  0029FA  0E00               	movlw	0
 22104  0029FC  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22105                           
 22106                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22107  0029FE  0E00               	movlw	0
 22108  002A00  0101               	movlb	1	; () banked
 22109  002A02  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22110                           
 22111                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22112  002A04  0E00               	movlw	0
 22113  002A06  0100               	movlb	0	; () banked
 22114  002A08  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22115  002A0A                     l11253:
 22116                           
 22117                           ; BSR set to: 0
 22118  002A0A  0E02               	movlw	2
 22119  002A0C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22120  002A0E  D001               	goto	l1851
 22121  002A10  D02E               	goto	u9860
 22122  002A12                     l1851:
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;usb_device.c: 302: {
 22126                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22127                           
 22128                           ; BSR set to: 0
 22129  002A12  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22130  002A14  0D02               	mullw	2
 22131  002A16  0ECA               	movlw	low _pBDTEntryIn
 22132  002A18  24F3               	addwf	prodl,w,c
 22133  002A1A  6ED9               	movwf	fsr2l,c
 22134  002A1C  0E00               	movlw	high _pBDTEntryIn
 22135  002A1E  20F4               	addwfc	prodh,w,c
 22136  002A20  6EDA               	movwf	fsr2h,c
 22137  002A22  0E00               	movlw	0
 22138  002A24  6EDE               	movwf	postinc2,c
 22139  002A26  0E00               	movlw	0
 22140  002A28  6EDD               	movwf	postdec2,c
 22141                           
 22142                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22143  002A2A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22144  002A2C  0D02               	mullw	2
 22145  002A2E  0E40               	movlw	low _pBDTEntryOut
 22146  002A30  24F3               	addwf	prodl,w,c
 22147  002A32  6ED9               	movwf	fsr2l,c
 22148  002A34  0E01               	movlw	high _pBDTEntryOut
 22149  002A36  20F4               	addwfc	prodh,w,c
 22150  002A38  6EDA               	movwf	fsr2h,c
 22151  002A3A  0E00               	movlw	0
 22152  002A3C  6EDE               	movwf	postinc2,c
 22153  002A3E  0E00               	movlw	0
 22154  002A40  6EDD               	movwf	postdec2,c
 22155                           
 22156                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22157  002A42  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22158  002A44  0D01               	mullw	1
 22159  002A46  0ED3               	movlw	low _ep_data_in
 22160  002A48  24F3               	addwf	prodl,w,c
 22161  002A4A  6ED9               	movwf	fsr2l,c
 22162  002A4C  0E00               	movlw	high _ep_data_in
 22163  002A4E  20F4               	addwfc	prodh,w,c
 22164  002A50  6EDA               	movwf	fsr2h,c
 22165  002A52  0E00               	movlw	0
 22166  002A54  6EDF               	movwf	indf2,c
 22167                           
 22168                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22169  002A56  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22170  002A58  0D01               	mullw	1
 22171  002A5A  0ED0               	movlw	low _ep_data_out
 22172  002A5C  24F3               	addwf	prodl,w,c
 22173  002A5E  6ED9               	movwf	fsr2l,c
 22174  002A60  0E00               	movlw	high _ep_data_out
 22175  002A62  20F4               	addwfc	prodh,w,c
 22176  002A64  6EDA               	movwf	fsr2h,c
 22177  002A66  0E00               	movlw	0
 22178  002A68  6EDF               	movwf	indf2,c
 22179                           
 22180                           ; BSR set to: 0
 22181  002A6A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22182  002A6C  D7CE               	goto	l11253
 22183  002A6E                     u9860:
 22184                           
 22185                           ; BSR set to: 0
 22186                           ;usb_device.c: 307: }
 22187                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22188                           
 22189                           ; BSR set to: 0
 22190  002A6E  0E08               	movlw	8
 22191  002A70  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 22192  002A72  0E04               	movlw	4
 22193  002A74  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22197  002A76  0E16               	movlw	22
 22198  002A78  6E6A               	movwf	3946,c	;volatile
 22199                           
 22200                           ; BSR set to: 0
 22201                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22202  002A7A  0E04               	movlw	4
 22203  002A7C  0104               	movlb	4	; () banked
 22204  002A7E  6F03               	movwf	3,b	;volatile
 22205  002A80  0E30               	movlw	48
 22206  002A82  6F02               	movwf	2,b	;volatile
 22207                           
 22208                           ; BSR set to: 4
 22209                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22210  002A84  0E08               	movlw	8
 22211  002A86  6F01               	movwf	1,b	;volatile
 22212                           
 22213                           ; BSR set to: 4
 22214                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22215  002A88  0E04               	movlw	4
 22216  002A8A  6F00               	movwf	0,b	;volatile
 22217                           
 22218                           ; BSR set to: 4
 22219                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22220  002A8C  8F00               	bsf	0,7,b	;volatile
 22221                           
 22222                           ; BSR set to: 4
 22223                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22224  002A8E  0E00               	movlw	0
 22225  002A90  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 22226                           
 22227                           ; BSR set to: 4
 22228                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22229  002A92  0E00               	movlw	0
 22230  002A94  0100               	movlb	0	; () banked
 22231  002A96  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22232                           
 22233                           ; BSR set to: 0
 22234  002A98  0012               	return		;funcret
 22235  002A9A                     __end_of_USBDeviceInit:
 22236                           	opt stack 0
 22237                           tblptru	equ	0xFF8
 22238                           tblptrh	equ	0xFF7
 22239                           tblptrl	equ	0xFF6
 22240                           tablat	equ	0xFF5
 22241                           prodh	equ	0xFF4
 22242                           prodl	equ	0xFF3
 22243                           intcon	equ	0xFF2
 22244                           intcon3	equ	0xFF0
 22245                           indf0	equ	0xFEF
 22246                           postinc0	equ	0xFEE
 22247                           fsr0h	equ	0xFEA
 22248                           fsr0l	equ	0xFE9
 22249                           wreg	equ	0xFE8
 22250                           indf1	equ	0xFE7
 22251                           postdec1	equ	0xFE5
 22252                           fsr1h	equ	0xFE2
 22253                           fsr1l	equ	0xFE1
 22254                           indf2	equ	0xFDF
 22255                           postinc2	equ	0xFDE
 22256                           postdec2	equ	0xFDD
 22257                           plusw2	equ	0xFDB
 22258                           fsr2h	equ	0xFDA
 22259                           fsr2l	equ	0xFD9
 22260                           status	equ	0xFD8
 22261                           
 22262 ;; *************** function _memset *****************
 22263 ;; Defined at:
 22264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  p1              2    0[BANK0 ] PTR void 
 22267 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22268 ;;  c               2    2[BANK0 ] int 
 22269 ;;  n               2    4[BANK0 ] unsigned int 
 22270 ;; Auto vars:     Size  Location     Type
 22271 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22272 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22273 ;; Return value:  Size  Location     Type
 22274 ;;                  2    0[BANK0 ] PTR void 
 22275 ;; Registers used:
 22276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22277 ;; Tracked objects:
 22278 ;;		On entry : 0/0
 22279 ;;		On exit  : 0/0
 22280 ;;		Unchanged: 0/0
 22281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22282 ;;      Params:         0       6       0       0       0       0       0       0       0
 22283 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22285 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22286 ;;Total ram usage:        8 bytes
 22287 ;; Hardware stack levels used:    1
 22288 ;; Hardware stack levels required when called:   11
 22289 ;; This function calls:
 22290 ;;		Nothing
 22291 ;; This function is called by:
 22292 ;;		_USBDeviceInit
 22293 ;; This function uses a non-reentrant model
 22294 ;;
 22295                           
 22296                           	psect	text87
 22297  00544A                     __ptext87:
 22298                           	opt stack 0
 22299  00544A                     _memset:
 22300                           	opt stack 18
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;incstack = 0
 22304  00544A  C060  F066         	movff	memset@p1,memset@p
 22305  00544E  C061  F067         	movff	memset@p1+1,memset@p+1
 22306  005452  D009               	goto	l2672
 22307  005454                     l11049:
 22308  005454  C066  FFD9         	movff	memset@p,fsr2l
 22309  005458  C067  FFDA         	movff	memset@p+1,fsr2h
 22310  00545C  C062  FFDF         	movff	memset@c,indf2
 22311  005460  0100               	movlb	0	; () banked
 22312  005462  4B66               	infsnz	memset@p& (0+255),f,b
 22313  005464  2B67               	incf	(memset@p+1)& (0+255),f,b
 22314  005466                     l2672:
 22315                           
 22316                           ; BSR set to: 0
 22317  005466  0100               	movlb	0	; () banked
 22318  005468  0764               	decf	memset@n& (0+255),f,b
 22319  00546A  A0D8               	btfss	status,0,c
 22320  00546C  0765               	decf	(memset@n+1)& (0+255),f,b
 22321  00546E  2964               	incf	memset@n& (0+255),w,b
 22322  005470  E1F1               	bnz	l11049
 22323  005472  2965               	incf	(memset@n+1)& (0+255),w,b
 22324  005474  B4D8               	btfsc	status,2,c
 22325  005476  0012               	return	
 22326  005478  D7ED               	goto	l2673
 22327  00547A                     __end_of_memset:
 22328                           	opt stack 0
 22329                           tblptru	equ	0xFF8
 22330                           tblptrh	equ	0xFF7
 22331                           tblptrl	equ	0xFF6
 22332                           tablat	equ	0xFF5
 22333                           prodh	equ	0xFF4
 22334                           prodl	equ	0xFF3
 22335                           intcon	equ	0xFF2
 22336                           intcon3	equ	0xFF0
 22337                           indf0	equ	0xFEF
 22338                           postinc0	equ	0xFEE
 22339                           fsr0h	equ	0xFEA
 22340                           fsr0l	equ	0xFE9
 22341                           wreg	equ	0xFE8
 22342                           indf1	equ	0xFE7
 22343                           postdec1	equ	0xFE5
 22344                           fsr1h	equ	0xFE2
 22345                           fsr1l	equ	0xFE1
 22346                           indf2	equ	0xFDF
 22347                           postinc2	equ	0xFDE
 22348                           postdec2	equ	0xFDD
 22349                           plusw2	equ	0xFDB
 22350                           fsr2h	equ	0xFDA
 22351                           fsr2l	equ	0xFD9
 22352                           status	equ	0xFD8
 22353                           
 22354 ;; *************** function _USBDeviceAttach *****************
 22355 ;; Defined at:
 22356 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22357 ;; Parameters:    Size  Location     Type
 22358 ;;		None
 22359 ;; Auto vars:     Size  Location     Type
 22360 ;;		None
 22361 ;; Return value:  Size  Location     Type
 22362 ;;                  1    wreg      void 
 22363 ;; Registers used:
 22364 ;;		wreg, status,2
 22365 ;; Tracked objects:
 22366 ;;		On entry : 0/0
 22367 ;;		On exit  : 0/0
 22368 ;;		Unchanged: 0/0
 22369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22370 ;;      Params:         0       0       0       0       0       0       0       0       0
 22371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22373 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22374 ;;Total ram usage:        0 bytes
 22375 ;; Hardware stack levels used:    1
 22376 ;; Hardware stack levels required when called:   11
 22377 ;; This function calls:
 22378 ;;		Nothing
 22379 ;; This function is called by:
 22380 ;;		_main
 22381 ;; This function uses a non-reentrant model
 22382 ;;
 22383                           
 22384                           	psect	text88
 22385  0052EE                     __ptext88:
 22386                           	opt stack 0
 22387  0052EE                     _USBDeviceAttach:
 22388                           	opt stack 19
 22389                           
 22390                           ;usb_device.c: 1050: {
 22391                           ;usb_device.c: 1051: if(1 == 1)
 22392                           
 22393                           ; BSR set to: 0
 22394                           ;incstack = 0
 22395  0052EE  0100               	movlb	0	; () banked
 22396  0052F0  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22397  0052F2  A4D8               	btfss	status,2,c
 22398  0052F4  0012               	return	
 22399                           
 22400                           ; BSR set to: 0
 22401                           ;usb_device.c: 1052: {
 22402                           ;usb_device.c: 1054: UCON = 0;
 22403  0052F6  0E00               	movlw	0
 22404  0052F8  6E60               	movwf	3936,c	;volatile
 22405                           
 22406                           ;usb_device.c: 1057: UIE = 0;
 22407  0052FA  0E00               	movlw	0
 22408  0052FC  6E64               	movwf	3940,c	;volatile
 22409                           
 22410                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22411  0052FE  0E16               	movlw	22
 22412  005300  6E62               	movwf	3938,c	;volatile
 22413  005302  0E9F               	movlw	159
 22414  005304  6E66               	movwf	3942,c	;volatile
 22415  005306  0E7B               	movlw	123
 22416  005308  6E64               	movwf	3940,c	;volatile
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22420  00530A  8ED0               	bsf	4048,7,c	;volatile
 22421                           
 22422                           ; BSR set to: 0
 22423  00530C  84A5               	bsf	4005,2,c	;volatile
 22424                           
 22425                           ; BSR set to: 0
 22426  00530E  84A3               	bsf	4003,2,c	;volatile
 22427                           
 22428                           ; BSR set to: 0
 22429  005310  8EF2               	bsf	intcon,7,c	;volatile
 22430                           
 22431                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22432  005312  D001               	goto	l1908
 22433  005314                     l1909:
 22434  005314  8660               	bsf	3936,3,c	;volatile
 22435  005316                     l1908:
 22436  005316  A660               	btfss	3936,3,c	;volatile
 22437  005318  D7FD               	goto	l1909
 22438                           
 22439                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22440  00531A  0E01               	movlw	1
 22441  00531C  0100               	movlb	0	; () banked
 22442  00531E  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22443                           
 22444                           ; BSR set to: 0
 22445  005320  0012               	return	
 22446  005322                     __end_of_USBDeviceAttach:
 22447                           	opt stack 0
 22448                           tblptru	equ	0xFF8
 22449                           tblptrh	equ	0xFF7
 22450                           tblptrl	equ	0xFF6
 22451                           tablat	equ	0xFF5
 22452                           prodh	equ	0xFF4
 22453                           prodl	equ	0xFF3
 22454                           intcon	equ	0xFF2
 22455                           intcon3	equ	0xFF0
 22456                           indf0	equ	0xFEF
 22457                           postinc0	equ	0xFEE
 22458                           fsr0h	equ	0xFEA
 22459                           fsr0l	equ	0xFE9
 22460                           wreg	equ	0xFE8
 22461                           indf1	equ	0xFE7
 22462                           postdec1	equ	0xFE5
 22463                           fsr1h	equ	0xFE2
 22464                           fsr1l	equ	0xFE1
 22465                           indf2	equ	0xFDF
 22466                           postinc2	equ	0xFDE
 22467                           postdec2	equ	0xFDD
 22468                           plusw2	equ	0xFDB
 22469                           fsr2h	equ	0xFDA
 22470                           fsr2l	equ	0xFD9
 22471                           status	equ	0xFD8
 22472                           
 22473 ;; *************** function _SYSTEM_Initialize *****************
 22474 ;; Defined at:
 22475 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 22476 ;; Parameters:    Size  Location     Type
 22477 ;;		None
 22478 ;; Auto vars:     Size  Location     Type
 22479 ;;		None
 22480 ;; Return value:  Size  Location     Type
 22481 ;;                  1    wreg      void 
 22482 ;; Registers used:
 22483 ;;		wreg, status,2, status,0, cstack
 22484 ;; Tracked objects:
 22485 ;;		On entry : 0/0
 22486 ;;		On exit  : 0/0
 22487 ;;		Unchanged: 0/0
 22488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22489 ;;      Params:         0       0       0       0       0       0       0       0       0
 22490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22492 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22493 ;;Total ram usage:        0 bytes
 22494 ;; Hardware stack levels used:    1
 22495 ;; Hardware stack levels required when called:   13
 22496 ;; This function calls:
 22497 ;;		_ADC_Initialize
 22498 ;;		_CMP1_Initialize
 22499 ;;		_EUSART_Initialize
 22500 ;;		_InitSwUart
 22501 ;;		_OSCILLATOR_Initialize
 22502 ;;		_PIN_MANAGER_Initialize
 22503 ;;		_TMR0_Initialize
 22504 ;;		_TMR1_Initialize
 22505 ;;		_TMR2_Initialize
 22506 ;;		_TMR3_Initialize
 22507 ;; This function is called by:
 22508 ;;		_main
 22509 ;; This function uses a non-reentrant model
 22510 ;;
 22511                           
 22512                           	psect	text89
 22513  005592                     __ptext89:
 22514                           	opt stack 0
 22515  005592                     _SYSTEM_Initialize:
 22516                           	opt stack 17
 22517                           
 22518                           ;mcc.c: 96: OSCILLATOR_Initialize();
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;incstack = 0
 22522  005592  ECDD  F02B         	call	_OSCILLATOR_Initialize	;wreg free
 22523                           
 22524                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 22525  005596  EC89  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 22526                           
 22527                           ;mcc.c: 99: TMR1_Initialize();
 22528  00559A  ECC3  F029         	call	_TMR1_Initialize	;wreg free
 22529                           
 22530                           ;mcc.c: 100: TMR2_Initialize();
 22531  00559E  EC11  F02C         	call	_TMR2_Initialize	;wreg free
 22532                           
 22533                           ;mcc.c: 101: TMR3_Initialize();
 22534  0055A2  EC52  F02B         	call	_TMR3_Initialize	;wreg free
 22535                           
 22536                           ;mcc.c: 102: EUSART_Initialize();
 22537  0055A6  EC3F  F029         	call	_EUSART_Initialize	;wreg free
 22538                           
 22539                           ;mcc.c: 103: TMR0_Initialize();
 22540  0055AA  EC73  F02B         	call	_TMR0_Initialize	;wreg free
 22541                           
 22542                           ;mcc.c: 104: ADC_Initialize();
 22543  0055AE  ECBA  F02B         	call	_ADC_Initialize	;wreg free
 22544                           
 22545                           ;mcc.c: 105: CMP1_Initialize();
 22546  0055B2  EC1B  F02C         	call	_CMP1_Initialize	;wreg free
 22547                           
 22548                           ;mcc.c: 107: InitSwUart();
 22549  0055B6  EC9F  F02B         	call	_InitSwUart	;wreg free
 22550  0055BA  0012               	return		;funcret
 22551  0055BC                     __end_of_SYSTEM_Initialize:
 22552                           	opt stack 0
 22553                           tblptru	equ	0xFF8
 22554                           tblptrh	equ	0xFF7
 22555                           tblptrl	equ	0xFF6
 22556                           tablat	equ	0xFF5
 22557                           prodh	equ	0xFF4
 22558                           prodl	equ	0xFF3
 22559                           intcon	equ	0xFF2
 22560                           intcon3	equ	0xFF0
 22561                           indf0	equ	0xFEF
 22562                           postinc0	equ	0xFEE
 22563                           fsr0h	equ	0xFEA
 22564                           fsr0l	equ	0xFE9
 22565                           wreg	equ	0xFE8
 22566                           indf1	equ	0xFE7
 22567                           postdec1	equ	0xFE5
 22568                           fsr1h	equ	0xFE2
 22569                           fsr1l	equ	0xFE1
 22570                           indf2	equ	0xFDF
 22571                           postinc2	equ	0xFDE
 22572                           postdec2	equ	0xFDD
 22573                           plusw2	equ	0xFDB
 22574                           fsr2h	equ	0xFDA
 22575                           fsr2l	equ	0xFD9
 22576                           status	equ	0xFD8
 22577                           
 22578 ;; *************** function _TMR3_Initialize *****************
 22579 ;; Defined at:
 22580 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22581 ;; Parameters:    Size  Location     Type
 22582 ;;		None
 22583 ;; Auto vars:     Size  Location     Type
 22584 ;;		None
 22585 ;; Return value:  Size  Location     Type
 22586 ;;                  1    wreg      void 
 22587 ;; Registers used:
 22588 ;;		wreg, status,2, cstack
 22589 ;; Tracked objects:
 22590 ;;		On entry : 0/0
 22591 ;;		On exit  : 0/0
 22592 ;;		Unchanged: 0/0
 22593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22594 ;;      Params:         0       0       0       0       0       0       0       0       0
 22595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22598 ;;Total ram usage:        0 bytes
 22599 ;; Hardware stack levels used:    1
 22600 ;; Hardware stack levels required when called:   12
 22601 ;; This function calls:
 22602 ;;		_TMR3_StartTimer
 22603 ;; This function is called by:
 22604 ;;		_SYSTEM_Initialize
 22605 ;; This function uses a non-reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text90
 22609  0056A4                     __ptext90:
 22610                           	opt stack 0
 22611  0056A4                     _TMR3_Initialize:
 22612                           	opt stack 17
 22613                           
 22614                           ;tmr3.c: 72: T3CON = 0x04;
 22615                           
 22616                           ;incstack = 0
 22617  0056A4  0E04               	movlw	4
 22618  0056A6  6EB1               	movwf	4017,c	;volatile
 22619                           
 22620                           ;tmr3.c: 75: T3GCON = 0x00;
 22621  0056A8  0E00               	movlw	0
 22622  0056AA  6EB4               	movwf	4020,c	;volatile
 22623                           
 22624                           ;tmr3.c: 78: TMR3H = 0xD5;
 22625  0056AC  0ED5               	movlw	213
 22626  0056AE  6EB3               	movwf	4019,c	;volatile
 22627                           
 22628                           ;tmr3.c: 81: TMR3L = 0xD0;
 22629  0056B0  0ED0               	movlw	208
 22630  0056B2  6EB2               	movwf	4018,c	;volatile
 22631                           
 22632                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22633  0056B4  CFB2 F03B          	movff	4018,_timer3ReloadVal	;volatile
 22634  0056B8  CFB3 F03C          	movff	4019,_timer3ReloadVal+1	;volatile
 22635                           
 22636                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22637  0056BC  92A1               	bcf	4001,1,c	;volatile
 22638                           
 22639                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22640  0056BE  82A0               	bsf	4000,1,c	;volatile
 22641                           
 22642                           ;tmr3.c: 93: TMR3_StartTimer();
 22643  0056C0  EC90  F02C         	call	_TMR3_StartTimer	;wreg free
 22644  0056C4  0012               	return		;funcret
 22645  0056C6                     __end_of_TMR3_Initialize:
 22646                           	opt stack 0
 22647                           tblptru	equ	0xFF8
 22648                           tblptrh	equ	0xFF7
 22649                           tblptrl	equ	0xFF6
 22650                           tablat	equ	0xFF5
 22651                           prodh	equ	0xFF4
 22652                           prodl	equ	0xFF3
 22653                           intcon	equ	0xFF2
 22654                           intcon3	equ	0xFF0
 22655                           indf0	equ	0xFEF
 22656                           postinc0	equ	0xFEE
 22657                           fsr0h	equ	0xFEA
 22658                           fsr0l	equ	0xFE9
 22659                           wreg	equ	0xFE8
 22660                           indf1	equ	0xFE7
 22661                           postdec1	equ	0xFE5
 22662                           fsr1h	equ	0xFE2
 22663                           fsr1l	equ	0xFE1
 22664                           indf2	equ	0xFDF
 22665                           postinc2	equ	0xFDE
 22666                           postdec2	equ	0xFDD
 22667                           plusw2	equ	0xFDB
 22668                           fsr2h	equ	0xFDA
 22669                           fsr2l	equ	0xFD9
 22670                           status	equ	0xFD8
 22671                           
 22672 ;; *************** function _TMR3_StartTimer *****************
 22673 ;; Defined at:
 22674 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22675 ;; Parameters:    Size  Location     Type
 22676 ;;		None
 22677 ;; Auto vars:     Size  Location     Type
 22678 ;;		None
 22679 ;; Return value:  Size  Location     Type
 22680 ;;                  1    wreg      void 
 22681 ;; Registers used:
 22682 ;;		None
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/0
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22688 ;;      Params:         0       0       0       0       0       0       0       0       0
 22689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22692 ;;Total ram usage:        0 bytes
 22693 ;; Hardware stack levels used:    1
 22694 ;; Hardware stack levels required when called:   11
 22695 ;; This function calls:
 22696 ;;		Nothing
 22697 ;; This function is called by:
 22698 ;;		_TMR3_Initialize
 22699 ;; This function uses a non-reentrant model
 22700 ;;
 22701                           
 22702                           	psect	text91
 22703  005920                     __ptext91:
 22704                           	opt stack 0
 22705  005920                     _TMR3_StartTimer:
 22706                           	opt stack 17
 22707                           
 22708                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22709                           
 22710                           ;incstack = 0
 22711  005920  80B1               	bsf	4017,0,c	;volatile
 22712  005922  0012               	return		;funcret
 22713  005924                     __end_of_TMR3_StartTimer:
 22714                           	opt stack 0
 22715                           tblptru	equ	0xFF8
 22716                           tblptrh	equ	0xFF7
 22717                           tblptrl	equ	0xFF6
 22718                           tablat	equ	0xFF5
 22719                           prodh	equ	0xFF4
 22720                           prodl	equ	0xFF3
 22721                           intcon	equ	0xFF2
 22722                           intcon3	equ	0xFF0
 22723                           indf0	equ	0xFEF
 22724                           postinc0	equ	0xFEE
 22725                           fsr0h	equ	0xFEA
 22726                           fsr0l	equ	0xFE9
 22727                           wreg	equ	0xFE8
 22728                           indf1	equ	0xFE7
 22729                           postdec1	equ	0xFE5
 22730                           fsr1h	equ	0xFE2
 22731                           fsr1l	equ	0xFE1
 22732                           indf2	equ	0xFDF
 22733                           postinc2	equ	0xFDE
 22734                           postdec2	equ	0xFDD
 22735                           plusw2	equ	0xFDB
 22736                           fsr2h	equ	0xFDA
 22737                           fsr2l	equ	0xFD9
 22738                           status	equ	0xFD8
 22739                           
 22740 ;; *************** function _TMR2_Initialize *****************
 22741 ;; Defined at:
 22742 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22743 ;; Parameters:    Size  Location     Type
 22744 ;;		None
 22745 ;; Auto vars:     Size  Location     Type
 22746 ;;		None
 22747 ;; Return value:  Size  Location     Type
 22748 ;;                  1    wreg      void 
 22749 ;; Registers used:
 22750 ;;		wreg, status,2, cstack
 22751 ;; Tracked objects:
 22752 ;;		On entry : 0/0
 22753 ;;		On exit  : 0/0
 22754 ;;		Unchanged: 0/0
 22755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22756 ;;      Params:         0       0       0       0       0       0       0       0       0
 22757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22759 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22760 ;;Total ram usage:        0 bytes
 22761 ;; Hardware stack levels used:    1
 22762 ;; Hardware stack levels required when called:   12
 22763 ;; This function calls:
 22764 ;;		_TMR2_StartTimer
 22765 ;; This function is called by:
 22766 ;;		_SYSTEM_Initialize
 22767 ;; This function uses a non-reentrant model
 22768 ;;
 22769                           
 22770                           	psect	text92
 22771  005822                     __ptext92:
 22772                           	opt stack 0
 22773  005822                     _TMR2_Initialize:
 22774                           	opt stack 17
 22775                           
 22776                           ;tmr2.c: 62: T2CON = 0x7A;
 22777                           
 22778                           ;incstack = 0
 22779  005822  0E7A               	movlw	122
 22780  005824  6EBA               	movwf	4026,c	;volatile
 22781                           
 22782                           ;tmr2.c: 65: PR2 = 0x9B;
 22783  005826  0E9B               	movlw	155
 22784  005828  6EBB               	movwf	4027,c	;volatile
 22785                           
 22786                           ;tmr2.c: 68: TMR2 = 0x00;
 22787  00582A  0E00               	movlw	0
 22788  00582C  6EBC               	movwf	4028,c	;volatile
 22789                           
 22790                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22791  00582E  929E               	bcf	3998,1,c	;volatile
 22792                           
 22793                           ;tmr2.c: 74: TMR2_StartTimer();
 22794  005830  EC92  F02C         	call	_TMR2_StartTimer	;wreg free
 22795  005834  0012               	return		;funcret
 22796  005836                     __end_of_TMR2_Initialize:
 22797                           	opt stack 0
 22798                           tblptru	equ	0xFF8
 22799                           tblptrh	equ	0xFF7
 22800                           tblptrl	equ	0xFF6
 22801                           tablat	equ	0xFF5
 22802                           prodh	equ	0xFF4
 22803                           prodl	equ	0xFF3
 22804                           intcon	equ	0xFF2
 22805                           intcon3	equ	0xFF0
 22806                           indf0	equ	0xFEF
 22807                           postinc0	equ	0xFEE
 22808                           fsr0h	equ	0xFEA
 22809                           fsr0l	equ	0xFE9
 22810                           wreg	equ	0xFE8
 22811                           indf1	equ	0xFE7
 22812                           postdec1	equ	0xFE5
 22813                           fsr1h	equ	0xFE2
 22814                           fsr1l	equ	0xFE1
 22815                           indf2	equ	0xFDF
 22816                           postinc2	equ	0xFDE
 22817                           postdec2	equ	0xFDD
 22818                           plusw2	equ	0xFDB
 22819                           fsr2h	equ	0xFDA
 22820                           fsr2l	equ	0xFD9
 22821                           status	equ	0xFD8
 22822                           
 22823 ;; *************** function _TMR2_StartTimer *****************
 22824 ;; Defined at:
 22825 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22826 ;; Parameters:    Size  Location     Type
 22827 ;;		None
 22828 ;; Auto vars:     Size  Location     Type
 22829 ;;		None
 22830 ;; Return value:  Size  Location     Type
 22831 ;;                  1    wreg      void 
 22832 ;; Registers used:
 22833 ;;		None
 22834 ;; Tracked objects:
 22835 ;;		On entry : 0/0
 22836 ;;		On exit  : 0/0
 22837 ;;		Unchanged: 0/0
 22838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22839 ;;      Params:         0       0       0       0       0       0       0       0       0
 22840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22842 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22843 ;;Total ram usage:        0 bytes
 22844 ;; Hardware stack levels used:    1
 22845 ;; Hardware stack levels required when called:   11
 22846 ;; This function calls:
 22847 ;;		Nothing
 22848 ;; This function is called by:
 22849 ;;		_TMR2_Initialize
 22850 ;; This function uses a non-reentrant model
 22851 ;;
 22852                           
 22853                           	psect	text93
 22854  005924                     __ptext93:
 22855                           	opt stack 0
 22856  005924                     _TMR2_StartTimer:
 22857                           	opt stack 17
 22858                           
 22859                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22860                           
 22861                           ;incstack = 0
 22862  005924  84BA               	bsf	4026,2,c	;volatile
 22863  005926  0012               	return		;funcret
 22864  005928                     __end_of_TMR2_StartTimer:
 22865                           	opt stack 0
 22866                           tblptru	equ	0xFF8
 22867                           tblptrh	equ	0xFF7
 22868                           tblptrl	equ	0xFF6
 22869                           tablat	equ	0xFF5
 22870                           prodh	equ	0xFF4
 22871                           prodl	equ	0xFF3
 22872                           intcon	equ	0xFF2
 22873                           intcon3	equ	0xFF0
 22874                           indf0	equ	0xFEF
 22875                           postinc0	equ	0xFEE
 22876                           fsr0h	equ	0xFEA
 22877                           fsr0l	equ	0xFE9
 22878                           wreg	equ	0xFE8
 22879                           indf1	equ	0xFE7
 22880                           postdec1	equ	0xFE5
 22881                           fsr1h	equ	0xFE2
 22882                           fsr1l	equ	0xFE1
 22883                           indf2	equ	0xFDF
 22884                           postinc2	equ	0xFDE
 22885                           postdec2	equ	0xFDD
 22886                           plusw2	equ	0xFDB
 22887                           fsr2h	equ	0xFDA
 22888                           fsr2l	equ	0xFD9
 22889                           status	equ	0xFD8
 22890                           
 22891 ;; *************** function _TMR1_Initialize *****************
 22892 ;; Defined at:
 22893 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;		None
 22896 ;; Auto vars:     Size  Location     Type
 22897 ;;		None
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1    wreg      void 
 22900 ;; Registers used:
 22901 ;;		wreg, status,2, status,0, cstack
 22902 ;; Tracked objects:
 22903 ;;		On entry : 0/0
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22907 ;;      Params:         0       0       0       0       0       0       0       0       0
 22908 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22909 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22910 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22911 ;;Total ram usage:        2 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:   12
 22914 ;; This function calls:
 22915 ;;		_TMR1_StartTimer
 22916 ;; This function is called by:
 22917 ;;		_SYSTEM_Initialize
 22918 ;; This function uses a non-reentrant model
 22919 ;;
 22920                           
 22921                           	psect	text94
 22922  005386                     __ptext94:
 22923                           	opt stack 0
 22924  005386                     _TMR1_Initialize:
 22925                           	opt stack 17
 22926                           
 22927                           ;tmr1.c: 68: T1CON = 0x00;
 22928                           
 22929                           ;incstack = 0
 22930  005386  0E00               	movlw	0
 22931  005388  6ECD               	movwf	4045,c	;volatile
 22932                           
 22933                           ;tmr1.c: 71: T1GCON = 0x00;
 22934  00538A  0E00               	movlw	0
 22935  00538C  6ECC               	movwf	4044,c	;volatile
 22936                           
 22937                           ;tmr1.c: 74: TMR1H = 0xD0;
 22938  00538E  0ED0               	movlw	208
 22939  005390  6ECF               	movwf	4047,c	;volatile
 22940                           
 22941                           ;tmr1.c: 77: TMR1L = 0x20;
 22942  005392  0E20               	movlw	32
 22943  005394  6ECE               	movwf	4046,c	;volatile
 22944                           
 22945                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 22946  005396  50CE               	movf	4046,w,c	;volatile
 22947  005398  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 22948  00539C  0100               	movlb	0	; () banked
 22949  00539E  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 22950  0053A0  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 22951  0053A4  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 22952  0053A6  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 22953  0053A8  6E3D               	movwf	_timer1ReloadVal,c	;volatile
 22954  0053AA  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 22955  0053AC  6E3E               	movwf	_timer1ReloadVal+1,c	;volatile
 22956                           
 22957                           ; BSR set to: 0
 22958                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 22959  0053AE  909E               	bcf	3998,0,c	;volatile
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 22963  0053B0  809D               	bsf	3997,0,c	;volatile
 22964                           
 22965                           ; BSR set to: 0
 22966                           ;tmr1.c: 89: TMR1_StartTimer();
 22967  0053B2  EC94  F02C         	call	_TMR1_StartTimer	;wreg free
 22968  0053B6  0012               	return		;funcret
 22969  0053B8                     __end_of_TMR1_Initialize:
 22970                           	opt stack 0
 22971                           tblptru	equ	0xFF8
 22972                           tblptrh	equ	0xFF7
 22973                           tblptrl	equ	0xFF6
 22974                           tablat	equ	0xFF5
 22975                           prodh	equ	0xFF4
 22976                           prodl	equ	0xFF3
 22977                           intcon	equ	0xFF2
 22978                           intcon3	equ	0xFF0
 22979                           indf0	equ	0xFEF
 22980                           postinc0	equ	0xFEE
 22981                           fsr0h	equ	0xFEA
 22982                           fsr0l	equ	0xFE9
 22983                           wreg	equ	0xFE8
 22984                           indf1	equ	0xFE7
 22985                           postdec1	equ	0xFE5
 22986                           fsr1h	equ	0xFE2
 22987                           fsr1l	equ	0xFE1
 22988                           indf2	equ	0xFDF
 22989                           postinc2	equ	0xFDE
 22990                           postdec2	equ	0xFDD
 22991                           plusw2	equ	0xFDB
 22992                           fsr2h	equ	0xFDA
 22993                           fsr2l	equ	0xFD9
 22994                           status	equ	0xFD8
 22995                           
 22996 ;; *************** function _TMR1_StartTimer *****************
 22997 ;; Defined at:
 22998 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 22999 ;; Parameters:    Size  Location     Type
 23000 ;;		None
 23001 ;; Auto vars:     Size  Location     Type
 23002 ;;		None
 23003 ;; Return value:  Size  Location     Type
 23004 ;;                  1    wreg      void 
 23005 ;; Registers used:
 23006 ;;		None
 23007 ;; Tracked objects:
 23008 ;;		On entry : 0/0
 23009 ;;		On exit  : 0/0
 23010 ;;		Unchanged: 0/0
 23011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23012 ;;      Params:         0       0       0       0       0       0       0       0       0
 23013 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23015 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23016 ;;Total ram usage:        0 bytes
 23017 ;; Hardware stack levels used:    1
 23018 ;; Hardware stack levels required when called:   11
 23019 ;; This function calls:
 23020 ;;		Nothing
 23021 ;; This function is called by:
 23022 ;;		_TMR1_Initialize
 23023 ;; This function uses a non-reentrant model
 23024 ;;
 23025                           
 23026                           	psect	text95
 23027  005928                     __ptext95:
 23028                           	opt stack 0
 23029  005928                     _TMR1_StartTimer:
 23030                           	opt stack 17
 23031                           
 23032                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23033                           
 23034                           ;incstack = 0
 23035  005928  80CD               	bsf	4045,0,c	;volatile
 23036  00592A  0012               	return		;funcret
 23037  00592C                     __end_of_TMR1_StartTimer:
 23038                           	opt stack 0
 23039                           tblptru	equ	0xFF8
 23040                           tblptrh	equ	0xFF7
 23041                           tblptrl	equ	0xFF6
 23042                           tablat	equ	0xFF5
 23043                           prodh	equ	0xFF4
 23044                           prodl	equ	0xFF3
 23045                           intcon	equ	0xFF2
 23046                           intcon3	equ	0xFF0
 23047                           indf0	equ	0xFEF
 23048                           postinc0	equ	0xFEE
 23049                           fsr0h	equ	0xFEA
 23050                           fsr0l	equ	0xFE9
 23051                           wreg	equ	0xFE8
 23052                           indf1	equ	0xFE7
 23053                           postdec1	equ	0xFE5
 23054                           fsr1h	equ	0xFE2
 23055                           fsr1l	equ	0xFE1
 23056                           indf2	equ	0xFDF
 23057                           postinc2	equ	0xFDE
 23058                           postdec2	equ	0xFDD
 23059                           plusw2	equ	0xFDB
 23060                           fsr2h	equ	0xFDA
 23061                           fsr2l	equ	0xFD9
 23062                           status	equ	0xFD8
 23063                           
 23064 ;; *************** function _TMR0_Initialize *****************
 23065 ;; Defined at:
 23066 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 23067 ;; Parameters:    Size  Location     Type
 23068 ;;		None
 23069 ;; Auto vars:     Size  Location     Type
 23070 ;;		None
 23071 ;; Return value:  Size  Location     Type
 23072 ;;                  1    wreg      void 
 23073 ;; Registers used:
 23074 ;;		wreg, status,2, cstack
 23075 ;; Tracked objects:
 23076 ;;		On entry : 0/0
 23077 ;;		On exit  : 0/0
 23078 ;;		Unchanged: 0/0
 23079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23080 ;;      Params:         0       0       0       0       0       0       0       0       0
 23081 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23083 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23084 ;;Total ram usage:        0 bytes
 23085 ;; Hardware stack levels used:    1
 23086 ;; Hardware stack levels required when called:   12
 23087 ;; This function calls:
 23088 ;;		_TMR0_StartTimer
 23089 ;; This function is called by:
 23090 ;;		_SYSTEM_Initialize
 23091 ;; This function uses a non-reentrant model
 23092 ;;
 23093                           
 23094                           	psect	text96
 23095  0056E6                     __ptext96:
 23096                           	opt stack 0
 23097  0056E6                     _TMR0_Initialize:
 23098                           	opt stack 17
 23099                           
 23100                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 23101                           
 23102                           ;incstack = 0
 23103  0056E6  9AD5               	bcf	4053,5,c	;volatile
 23104                           
 23105                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 23106  0056E8  98D5               	bcf	4053,4,c	;volatile
 23107                           
 23108                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 23109  0056EA  96D5               	bcf	4053,3,c	;volatile
 23110                           
 23111                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 23112  0056EC  94D5               	bcf	4053,2,c	;volatile
 23113                           
 23114                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 23115  0056EE  82D5               	bsf	4053,1,c	;volatile
 23116                           
 23117                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 23118  0056F0  90D5               	bcf	4053,0,c	;volatile
 23119                           
 23120                           ;tmr0.c: 77: timer0ReloadVal=110;
 23121  0056F2  0E00               	movlw	0
 23122  0056F4  6E3A               	movwf	_timer0ReloadVal+1,c	;volatile
 23123  0056F6  0E6E               	movlw	110
 23124  0056F8  6E39               	movwf	_timer0ReloadVal,c	;volatile
 23125                           
 23126                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 23127  0056FA  94F2               	bcf	intcon,2,c	;volatile
 23128                           
 23129                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 23130  0056FC  8AF2               	bsf	intcon,5,c	;volatile
 23131                           
 23132                           ;tmr0.c: 86: TMR0_StartTimer();
 23133  0056FE  EC96  F02C         	call	_TMR0_StartTimer	;wreg free
 23134  005702  0012               	return		;funcret
 23135  005704                     __end_of_TMR0_Initialize:
 23136                           	opt stack 0
 23137                           tblptru	equ	0xFF8
 23138                           tblptrh	equ	0xFF7
 23139                           tblptrl	equ	0xFF6
 23140                           tablat	equ	0xFF5
 23141                           prodh	equ	0xFF4
 23142                           prodl	equ	0xFF3
 23143                           intcon	equ	0xFF2
 23144                           intcon3	equ	0xFF0
 23145                           indf0	equ	0xFEF
 23146                           postinc0	equ	0xFEE
 23147                           fsr0h	equ	0xFEA
 23148                           fsr0l	equ	0xFE9
 23149                           wreg	equ	0xFE8
 23150                           indf1	equ	0xFE7
 23151                           postdec1	equ	0xFE5
 23152                           fsr1h	equ	0xFE2
 23153                           fsr1l	equ	0xFE1
 23154                           indf2	equ	0xFDF
 23155                           postinc2	equ	0xFDE
 23156                           postdec2	equ	0xFDD
 23157                           plusw2	equ	0xFDB
 23158                           fsr2h	equ	0xFDA
 23159                           fsr2l	equ	0xFD9
 23160                           status	equ	0xFD8
 23161                           
 23162 ;; *************** function _TMR0_StartTimer *****************
 23163 ;; Defined at:
 23164 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 23165 ;; Parameters:    Size  Location     Type
 23166 ;;		None
 23167 ;; Auto vars:     Size  Location     Type
 23168 ;;		None
 23169 ;; Return value:  Size  Location     Type
 23170 ;;                  1    wreg      void 
 23171 ;; Registers used:
 23172 ;;		None
 23173 ;; Tracked objects:
 23174 ;;		On entry : 0/0
 23175 ;;		On exit  : 0/0
 23176 ;;		Unchanged: 0/0
 23177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23178 ;;      Params:         0       0       0       0       0       0       0       0       0
 23179 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23181 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23182 ;;Total ram usage:        0 bytes
 23183 ;; Hardware stack levels used:    1
 23184 ;; Hardware stack levels required when called:   11
 23185 ;; This function calls:
 23186 ;;		Nothing
 23187 ;; This function is called by:
 23188 ;;		_TMR0_Initialize
 23189 ;; This function uses a non-reentrant model
 23190 ;;
 23191                           
 23192                           	psect	text97
 23193  00592C                     __ptext97:
 23194                           	opt stack 0
 23195  00592C                     _TMR0_StartTimer:
 23196                           	opt stack 17
 23197                           
 23198                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 23199                           
 23200                           ;incstack = 0
 23201  00592C  8ED5               	bsf	4053,7,c	;volatile
 23202  00592E  0012               	return		;funcret
 23203  005930                     __end_of_TMR0_StartTimer:
 23204                           	opt stack 0
 23205                           tblptru	equ	0xFF8
 23206                           tblptrh	equ	0xFF7
 23207                           tblptrl	equ	0xFF6
 23208                           tablat	equ	0xFF5
 23209                           prodh	equ	0xFF4
 23210                           prodl	equ	0xFF3
 23211                           intcon	equ	0xFF2
 23212                           intcon3	equ	0xFF0
 23213                           indf0	equ	0xFEF
 23214                           postinc0	equ	0xFEE
 23215                           fsr0h	equ	0xFEA
 23216                           fsr0l	equ	0xFE9
 23217                           wreg	equ	0xFE8
 23218                           indf1	equ	0xFE7
 23219                           postdec1	equ	0xFE5
 23220                           fsr1h	equ	0xFE2
 23221                           fsr1l	equ	0xFE1
 23222                           indf2	equ	0xFDF
 23223                           postinc2	equ	0xFDE
 23224                           postdec2	equ	0xFDD
 23225                           plusw2	equ	0xFDB
 23226                           fsr2h	equ	0xFDA
 23227                           fsr2l	equ	0xFD9
 23228                           status	equ	0xFD8
 23229                           
 23230 ;; *************** function _PIN_MANAGER_Initialize *****************
 23231 ;; Defined at:
 23232 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23233 ;; Parameters:    Size  Location     Type
 23234 ;;		None
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;		None
 23237 ;; Return value:  Size  Location     Type
 23238 ;;                  1    wreg      void 
 23239 ;; Registers used:
 23240 ;;		wreg, status,2
 23241 ;; Tracked objects:
 23242 ;;		On entry : 0/0
 23243 ;;		On exit  : 0/0
 23244 ;;		Unchanged: 0/0
 23245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23246 ;;      Params:         0       0       0       0       0       0       0       0       0
 23247 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23248 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23249 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23250 ;;Total ram usage:        0 bytes
 23251 ;; Hardware stack levels used:    1
 23252 ;; Hardware stack levels required when called:   11
 23253 ;; This function calls:
 23254 ;;		Nothing
 23255 ;; This function is called by:
 23256 ;;		_moteApp_GoToSleep
 23257 ;;		_SYSTEM_Initialize
 23258 ;; This function uses a non-reentrant model
 23259 ;;
 23260                           
 23261                           	psect	text98
 23262  004F12                     __ptext98:
 23263                           	opt stack 0
 23264  004F12                     _PIN_MANAGER_Initialize:
 23265                           	opt stack 16
 23266                           
 23267                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23268                           
 23269                           ;incstack = 0
 23270  004F12  8092               	bsf	3986,0,c	;volatile
 23271                           
 23272                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23273  004F14  8292               	bsf	3986,1,c	;volatile
 23274                           
 23275                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23276  004F16  8492               	bsf	3986,2,c	;volatile
 23277                           
 23278                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23279  004F18  8692               	bsf	3986,3,c	;volatile
 23280                           
 23281                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23282  004F1A  948D               	bcf	3981,2,c	;volatile
 23283                           
 23284                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23285  004F1C  9496               	bcf	3990,2,c	;volatile
 23286                           
 23287                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23288  004F1E  9A92               	bcf	3986,5,c	;volatile
 23289                           
 23290                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23291  004F20  9C92               	bcf	3986,6,c	;volatile
 23292                           
 23293                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23294  004F22  9E92               	bcf	3986,7,c	;volatile
 23295                           
 23296                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 23297  004F24  9EF1               	bcf	intcon2,7,c	;volatile
 23298                           
 23299                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 23300  004F26  8E86               	bsf	3974,7,c	;volatile
 23301                           
 23302                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 23303  004F28  86F2               	bsf	intcon,3,c	;volatile
 23304                           
 23305                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 23306  004F2A  8293               	bsf	3987,1,c	;volatile
 23307                           
 23308                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 23309  004F2C  8093               	bsf	3987,0,c	;volatile
 23310                           
 23311                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 23312  004F2E  8E93               	bsf	3987,7,c	;volatile
 23313                           
 23314                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 23315  004F30  9493               	bcf	3987,2,c	;volatile
 23316                           
 23317                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 23318  004F32  9693               	bcf	3987,3,c	;volatile
 23319                           
 23320                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 23321  004F34  9893               	bcf	3987,4,c	;volatile
 23322                           
 23323                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 23324  004F36  9A93               	bcf	3987,5,c	;volatile
 23325                           
 23326                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 23327  004F38  9094               	bcf	3988,0,c	;volatile
 23328                           
 23329                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 23330  004F3A  9294               	bcf	3988,1,c	;volatile
 23331                           
 23332                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 23333  004F3C  8494               	bsf	3988,2,c	;volatile
 23334                           
 23335                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 23336  004F3E  9C94               	bcf	3988,6,c	;volatile
 23337                           
 23338                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 23339  004F40  8E94               	bsf	3988,7,c	;volatile
 23340                           
 23341                           ;pin_manager.c: 83: TRISD = 0b00000000;
 23342  004F42  0E00               	movlw	0
 23343  004F44  6E95               	movwf	3989,c	;volatile
 23344                           
 23345                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 23346  004F46  9496               	bcf	3990,2,c	;volatile
 23347                           
 23348                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 23349  004F48  9A89               	bcf	3977,5,c	;volatile
 23350                           
 23351                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 23352  004F4A  9C89               	bcf	3977,6,c	;volatile
 23353                           
 23354                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 23355  004F4C  9E89               	bcf	3977,7,c	;volatile
 23356                           
 23357                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 23358  004F4E  948A               	bcf	3978,2,c	;volatile
 23359                           
 23360                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 23361  004F50  948B               	bcf	3979,2,c	;volatile
 23362                           
 23363                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 23364  004F52  9C8B               	bcf	3979,6,c	;volatile
 23365                           
 23366                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 23367  004F54  848D               	bsf	3981,2,c	;volatile
 23368                           
 23369                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 23370  004F56  010F               	movlb	15	; () banked
 23371  004F58  915B               	bcf	91,0,b	;volatile
 23372                           
 23373                           ; BSR set to: 15
 23374                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 23375  004F5A  835B               	bsf	91,1,b	;volatile
 23376                           
 23377                           ; BSR set to: 15
 23378                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 23379  004F5C  855B               	bsf	91,2,b	;volatile
 23380                           
 23381                           ; BSR set to: 15
 23382                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 23383  004F5E  875B               	bsf	91,3,b	;volatile
 23384                           
 23385                           ; BSR set to: 15
 23386                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 23387  004F60  9F5D               	bcf	93,7,b	;volatile
 23388                           
 23389                           ; BSR set to: 15
 23390                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 23391  004F62  9D5D               	bcf	93,6,b	;volatile
 23392                           
 23393                           ; BSR set to: 15
 23394  004F64  0012               	return		;funcret
 23395  004F66                     __end_of_PIN_MANAGER_Initialize:
 23396                           	opt stack 0
 23397                           tblptru	equ	0xFF8
 23398                           tblptrh	equ	0xFF7
 23399                           tblptrl	equ	0xFF6
 23400                           tablat	equ	0xFF5
 23401                           prodh	equ	0xFF4
 23402                           prodl	equ	0xFF3
 23403                           intcon	equ	0xFF2
 23404                           intcon2	equ	0xFF1
 23405                           intcon3	equ	0xFF0
 23406                           indf0	equ	0xFEF
 23407                           postinc0	equ	0xFEE
 23408                           fsr0h	equ	0xFEA
 23409                           fsr0l	equ	0xFE9
 23410                           wreg	equ	0xFE8
 23411                           indf1	equ	0xFE7
 23412                           postdec1	equ	0xFE5
 23413                           fsr1h	equ	0xFE2
 23414                           fsr1l	equ	0xFE1
 23415                           indf2	equ	0xFDF
 23416                           postinc2	equ	0xFDE
 23417                           postdec2	equ	0xFDD
 23418                           plusw2	equ	0xFDB
 23419                           fsr2h	equ	0xFDA
 23420                           fsr2l	equ	0xFD9
 23421                           status	equ	0xFD8
 23422                           
 23423 ;; *************** function _OSCILLATOR_Initialize *****************
 23424 ;; Defined at:
 23425 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;		None
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;		None
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  1    wreg      void 
 23432 ;; Registers used:
 23433 ;;		wreg, status,2
 23434 ;; Tracked objects:
 23435 ;;		On entry : 0/0
 23436 ;;		On exit  : 0/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23439 ;;      Params:         0       0       0       0       0       0       0       0       0
 23440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23442 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23443 ;;Total ram usage:        0 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:   11
 23446 ;; This function calls:
 23447 ;;		Nothing
 23448 ;; This function is called by:
 23449 ;;		_SYSTEM_Initialize
 23450 ;; This function uses a non-reentrant model
 23451 ;;
 23452                           
 23453                           	psect	text99
 23454  0057BA                     __ptext99:
 23455                           	opt stack 0
 23456  0057BA                     _OSCILLATOR_Initialize:
 23457                           	opt stack 18
 23458                           
 23459                           ;mcc.c: 113: OSCTUNE = 0x80;
 23460                           
 23461                           ; BSR set to: 15
 23462                           ;incstack = 0
 23463  0057BA  0E80               	movlw	128
 23464  0057BC  6E9B               	movwf	3995,c	;volatile
 23465                           
 23466                           ;mcc.c: 114: OSCCON = 0x70;
 23467  0057BE  0E70               	movlw	112
 23468  0057C0  6ED3               	movwf	4051,c	;volatile
 23469                           
 23470                           ;mcc.c: 115: OSCCON2 = 0x10;
 23471  0057C2  0E10               	movlw	16
 23472  0057C4  6ED2               	movwf	4050,c	;volatile
 23473  0057C6  AED2               	btfss	4050,7,c	;volatile
 23474  0057C8  D7FE               	goto	l1325
 23475                           
 23476                           ;mcc.c: 117: ACTCON = 0x90;
 23477  0057CA  0E90               	movlw	144
 23478  0057CC  6EB5               	movwf	4021,c	;volatile
 23479  0057CE  0012               	return		;funcret
 23480  0057D0                     __end_of_OSCILLATOR_Initialize:
 23481                           	opt stack 0
 23482                           tblptru	equ	0xFF8
 23483                           tblptrh	equ	0xFF7
 23484                           tblptrl	equ	0xFF6
 23485                           tablat	equ	0xFF5
 23486                           prodh	equ	0xFF4
 23487                           prodl	equ	0xFF3
 23488                           intcon	equ	0xFF2
 23489                           intcon2	equ	0xFF1
 23490                           intcon3	equ	0xFF0
 23491                           indf0	equ	0xFEF
 23492                           postinc0	equ	0xFEE
 23493                           fsr0h	equ	0xFEA
 23494                           fsr0l	equ	0xFE9
 23495                           wreg	equ	0xFE8
 23496                           indf1	equ	0xFE7
 23497                           postdec1	equ	0xFE5
 23498                           fsr1h	equ	0xFE2
 23499                           fsr1l	equ	0xFE1
 23500                           indf2	equ	0xFDF
 23501                           postinc2	equ	0xFDE
 23502                           postdec2	equ	0xFDD
 23503                           plusw2	equ	0xFDB
 23504                           fsr2h	equ	0xFDA
 23505                           fsr2l	equ	0xFD9
 23506                           status	equ	0xFD8
 23507                           
 23508 ;; *************** function _InitSwUart *****************
 23509 ;; Defined at:
 23510 ;;		line 69 in file "../Includes/Drivers/swUart.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;		None
 23513 ;; Auto vars:     Size  Location     Type
 23514 ;;		None
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  1    wreg      void 
 23517 ;; Registers used:
 23518 ;;		wreg, status,2
 23519 ;; Tracked objects:
 23520 ;;		On entry : 0/0
 23521 ;;		On exit  : 0/0
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23524 ;;      Params:         0       0       0       0       0       0       0       0       0
 23525 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23526 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23527 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23528 ;;Total ram usage:        0 bytes
 23529 ;; Hardware stack levels used:    1
 23530 ;; Hardware stack levels required when called:   11
 23531 ;; This function calls:
 23532 ;;		Nothing
 23533 ;; This function is called by:
 23534 ;;		_SYSTEM_Initialize
 23535 ;; This function uses a non-reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text100
 23539  00573E                     __ptext100:
 23540                           	opt stack 0
 23541  00573E                     _InitSwUart:
 23542                           	opt stack 18
 23543                           
 23544                           ;swUart.c: 71: status = SILENT;
 23545                           
 23546                           ;incstack = 0
 23547  00573E  0E00               	movlw	0
 23548  005740  6E51               	movwf	_status,c
 23549                           
 23550                           ;swUart.c: 72: n_bit = 0;
 23551  005742  0E00               	movlw	0
 23552  005744  6E5B               	movwf	_n_bit,c
 23553                           
 23554                           ;swUart.c: 73: rx_data = 0;
 23555  005746  0E00               	movlw	0
 23556  005748  6E50               	movwf	_rx_data,c
 23557                           
 23558                           ;swUart.c: 74: cs = 0;
 23559  00574A  0E00               	movlw	0
 23560  00574C  0101               	movlb	1	; () banked
 23561  00574E  6F5C               	movwf	_cs& (0+255),b
 23562                           
 23563                           ;swUart.c: 75: countRX = 0;
 23564  005750  0E00               	movlw	0
 23565  005752  6E4F               	movwf	_countRX,c
 23566                           
 23567                           ;swUart.c: 76: countBitsSilent = 0;
 23568  005754  0E00               	movlw	0
 23569  005756  6E4E               	movwf	_countBitsSilent,c
 23570                           
 23571                           ; BSR set to: 1
 23572  005758  0012               	return		;funcret
 23573  00575A                     __end_of_InitSwUart:
 23574                           	opt stack 0
 23575                           tblptru	equ	0xFF8
 23576                           tblptrh	equ	0xFF7
 23577                           tblptrl	equ	0xFF6
 23578                           tablat	equ	0xFF5
 23579                           prodh	equ	0xFF4
 23580                           prodl	equ	0xFF3
 23581                           intcon	equ	0xFF2
 23582                           intcon2	equ	0xFF1
 23583                           intcon3	equ	0xFF0
 23584                           indf0	equ	0xFEF
 23585                           postinc0	equ	0xFEE
 23586                           fsr0h	equ	0xFEA
 23587                           fsr0l	equ	0xFE9
 23588                           wreg	equ	0xFE8
 23589                           indf1	equ	0xFE7
 23590                           postdec1	equ	0xFE5
 23591                           fsr1h	equ	0xFE2
 23592                           fsr1l	equ	0xFE1
 23593                           indf2	equ	0xFDF
 23594                           postinc2	equ	0xFDE
 23595                           postdec2	equ	0xFDD
 23596                           plusw2	equ	0xFDB
 23597                           fsr2h	equ	0xFDA
 23598                           fsr2l	equ	0xFD9
 23599                           status	equ	0xFD8
 23600                           
 23601 ;; *************** function _EUSART_Initialize *****************
 23602 ;; Defined at:
 23603 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23604 ;; Parameters:    Size  Location     Type
 23605 ;;		None
 23606 ;; Auto vars:     Size  Location     Type
 23607 ;;		None
 23608 ;; Return value:  Size  Location     Type
 23609 ;;                  1    wreg      void 
 23610 ;; Registers used:
 23611 ;;		wreg, status,2
 23612 ;; Tracked objects:
 23613 ;;		On entry : 0/0
 23614 ;;		On exit  : 0/0
 23615 ;;		Unchanged: 0/0
 23616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23617 ;;      Params:         0       0       0       0       0       0       0       0       0
 23618 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23619 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23620 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23621 ;;Total ram usage:        0 bytes
 23622 ;; Hardware stack levels used:    1
 23623 ;; Hardware stack levels required when called:   11
 23624 ;; This function calls:
 23625 ;;		Nothing
 23626 ;; This function is called by:
 23627 ;;		_SYSTEM_Initialize
 23628 ;; This function uses a non-reentrant model
 23629 ;;
 23630                           
 23631                           	psect	text101
 23632  00527E                     __ptext101:
 23633                           	opt stack 0
 23634  00527E                     _EUSART_Initialize:
 23635                           	opt stack 18
 23636                           
 23637                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23638                           
 23639                           ; BSR set to: 1
 23640                           ;incstack = 0
 23641  00527E  9A9D               	bcf	3997,5,c	;volatile
 23642                           
 23643                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23644  005280  989D               	bcf	3997,4,c	;volatile
 23645                           
 23646                           ;eusart.c: 85: BAUDCON = 0x48;
 23647  005282  0E48               	movlw	72
 23648  005284  6EB8               	movwf	4024,c	;volatile
 23649                           
 23650                           ;eusart.c: 88: RCSTA = 0x90;
 23651  005286  0E90               	movlw	144
 23652  005288  6EAB               	movwf	4011,c	;volatile
 23653                           
 23654                           ;eusart.c: 91: TXSTA = 0x26;
 23655  00528A  0E26               	movlw	38
 23656  00528C  6EAC               	movwf	4012,c	;volatile
 23657                           
 23658                           ;eusart.c: 95: SPBRG = 0xD0;
 23659  00528E  0ED0               	movlw	208
 23660  005290  6EAF               	movwf	4015,c	;volatile
 23661                           
 23662                           ;eusart.c: 100: SPBRGH = 0x00;
 23663  005292  0E00               	movlw	0
 23664  005294  6EB0               	movwf	4016,c	;volatile
 23665                           
 23666                           ;eusart.c: 103: eusartTxHead = 0;
 23667  005296  0E00               	movlw	0
 23668  005298  0100               	movlb	0	; () banked
 23669  00529A  6FE3               	movwf	_eusartTxHead& (0+255),b
 23670                           
 23671                           ;eusart.c: 104: eusartTxTail = 0;
 23672  00529C  0E00               	movlw	0
 23673  00529E  6FE2               	movwf	_eusartTxTail& (0+255),b
 23674                           
 23675                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23676  0052A0  0E40               	movlw	64
 23677  0052A2  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 23678                           
 23679                           ;eusart.c: 107: eusartRxHead = 0;
 23680  0052A4  0E00               	movlw	0
 23681  0052A6  6FE0               	movwf	_eusartRxHead& (0+255),b
 23682                           
 23683                           ;eusart.c: 108: eusartRxTail = 0;
 23684  0052A8  0E00               	movlw	0
 23685  0052AA  6FDF               	movwf	_eusartRxTail& (0+255),b
 23686                           
 23687                           ;eusart.c: 109: eusartRxCount = 0;
 23688  0052AC  0E00               	movlw	0
 23689  0052AE  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23693  0052B0  8A9D               	bsf	3997,5,c	;volatile
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23697  0052B2  88AB               	bsf	4011,4,c	;volatile
 23698                           
 23699                           ; BSR set to: 0
 23700  0052B4  0012               	return		;funcret
 23701  0052B6                     __end_of_EUSART_Initialize:
 23702                           	opt stack 0
 23703                           tblptru	equ	0xFF8
 23704                           tblptrh	equ	0xFF7
 23705                           tblptrl	equ	0xFF6
 23706                           tablat	equ	0xFF5
 23707                           prodh	equ	0xFF4
 23708                           prodl	equ	0xFF3
 23709                           intcon	equ	0xFF2
 23710                           intcon2	equ	0xFF1
 23711                           intcon3	equ	0xFF0
 23712                           indf0	equ	0xFEF
 23713                           postinc0	equ	0xFEE
 23714                           fsr0h	equ	0xFEA
 23715                           fsr0l	equ	0xFE9
 23716                           wreg	equ	0xFE8
 23717                           indf1	equ	0xFE7
 23718                           postdec1	equ	0xFE5
 23719                           fsr1h	equ	0xFE2
 23720                           fsr1l	equ	0xFE1
 23721                           indf2	equ	0xFDF
 23722                           postinc2	equ	0xFDE
 23723                           postdec2	equ	0xFDD
 23724                           plusw2	equ	0xFDB
 23725                           fsr2h	equ	0xFDA
 23726                           fsr2l	equ	0xFD9
 23727                           status	equ	0xFD8
 23728                           
 23729 ;; *************** function _CMP1_Initialize *****************
 23730 ;; Defined at:
 23731 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23732 ;; Parameters:    Size  Location     Type
 23733 ;;		None
 23734 ;; Auto vars:     Size  Location     Type
 23735 ;;		None
 23736 ;; Return value:  Size  Location     Type
 23737 ;;                  1    wreg      void 
 23738 ;; Registers used:
 23739 ;;		wreg, status,2
 23740 ;; Tracked objects:
 23741 ;;		On entry : 0/0
 23742 ;;		On exit  : 0/0
 23743 ;;		Unchanged: 0/0
 23744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23745 ;;      Params:         0       0       0       0       0       0       0       0       0
 23746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23748 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23749 ;;Total ram usage:        0 bytes
 23750 ;; Hardware stack levels used:    1
 23751 ;; Hardware stack levels required when called:   11
 23752 ;; This function calls:
 23753 ;;		Nothing
 23754 ;; This function is called by:
 23755 ;;		_SYSTEM_Initialize
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           
 23759                           	psect	text102
 23760  005836                     __ptext102:
 23761                           	opt stack 0
 23762  005836                     _CMP1_Initialize:
 23763                           	opt stack 18
 23764                           
 23765                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23766                           
 23767                           ; BSR set to: 0
 23768                           ;incstack = 0
 23769  005836  9CA0               	bcf	4000,6,c	;volatile
 23770                           
 23771                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23772  005838  0E9C               	movlw	156
 23773  00583A  6E98               	movwf	3992,c	;volatile
 23774                           
 23775                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23776  00583C  8A9A               	bsf	3994,5,c	;volatile
 23777                           
 23778                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23779  00583E  929A               	bcf	3994,1,c	;volatile
 23780                           
 23781                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23782  005840  969A               	bcf	3994,3,c	;volatile
 23783                           
 23784                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23785  005842  9CA1               	bcf	4001,6,c	;volatile
 23786                           
 23787                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23788  005844  9CA0               	bcf	4000,6,c	;volatile
 23789  005846  0012               	return		;funcret
 23790  005848                     __end_of_CMP1_Initialize:
 23791                           	opt stack 0
 23792                           tblptru	equ	0xFF8
 23793                           tblptrh	equ	0xFF7
 23794                           tblptrl	equ	0xFF6
 23795                           tablat	equ	0xFF5
 23796                           prodh	equ	0xFF4
 23797                           prodl	equ	0xFF3
 23798                           intcon	equ	0xFF2
 23799                           intcon2	equ	0xFF1
 23800                           intcon3	equ	0xFF0
 23801                           indf0	equ	0xFEF
 23802                           postinc0	equ	0xFEE
 23803                           fsr0h	equ	0xFEA
 23804                           fsr0l	equ	0xFE9
 23805                           wreg	equ	0xFE8
 23806                           indf1	equ	0xFE7
 23807                           postdec1	equ	0xFE5
 23808                           fsr1h	equ	0xFE2
 23809                           fsr1l	equ	0xFE1
 23810                           indf2	equ	0xFDF
 23811                           postinc2	equ	0xFDE
 23812                           postdec2	equ	0xFDD
 23813                           plusw2	equ	0xFDB
 23814                           fsr2h	equ	0xFDA
 23815                           fsr2l	equ	0xFD9
 23816                           status	equ	0xFD8
 23817                           
 23818 ;; *************** function _ADC_Initialize *****************
 23819 ;; Defined at:
 23820 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23821 ;; Parameters:    Size  Location     Type
 23822 ;;		None
 23823 ;; Auto vars:     Size  Location     Type
 23824 ;;		None
 23825 ;; Return value:  Size  Location     Type
 23826 ;;                  1    wreg      void 
 23827 ;; Registers used:
 23828 ;;		wreg, status,2
 23829 ;; Tracked objects:
 23830 ;;		On entry : 0/0
 23831 ;;		On exit  : 0/0
 23832 ;;		Unchanged: 0/0
 23833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23834 ;;      Params:         0       0       0       0       0       0       0       0       0
 23835 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23836 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23837 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23838 ;;Total ram usage:        0 bytes
 23839 ;; Hardware stack levels used:    1
 23840 ;; Hardware stack levels required when called:   11
 23841 ;; This function calls:
 23842 ;;		Nothing
 23843 ;; This function is called by:
 23844 ;;		_SYSTEM_Initialize
 23845 ;; This function uses a non-reentrant model
 23846 ;;
 23847                           
 23848                           	psect	text103
 23849  005774                     __ptext103:
 23850                           	opt stack 0
 23851  005774                     _ADC_Initialize:
 23852                           	opt stack 18
 23853                           
 23854                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23855                           
 23856                           ;incstack = 0
 23857  005774  0EA0               	movlw	160
 23858  005776  6E7D               	movwf	3965,c	;volatile
 23859                           
 23860                           ;adc.c: 70: ADCON0 = 0x01;
 23861  005778  0E01               	movlw	1
 23862  00577A  6EC2               	movwf	4034,c	;volatile
 23863                           
 23864                           ;adc.c: 73: ADCON1 = 0x08;
 23865  00577C  0E08               	movlw	8
 23866  00577E  6EC1               	movwf	4033,c	;volatile
 23867                           
 23868                           ;adc.c: 76: ADCON2 = 0b10001110;
 23869  005780  0E8E               	movlw	142
 23870  005782  6EC0               	movwf	4032,c	;volatile
 23871                           
 23872                           ;adc.c: 79: ADRESL = 0x00;
 23873  005784  0E00               	movlw	0
 23874  005786  6EC3               	movwf	4035,c	;volatile
 23875                           
 23876                           ;adc.c: 82: ADRESH = 0x00;
 23877  005788  0E00               	movlw	0
 23878  00578A  6EC4               	movwf	4036,c	;volatile
 23879  00578C  0012               	return		;funcret
 23880  00578E                     __end_of_ADC_Initialize:
 23881                           	opt stack 0
 23882                           tblptru	equ	0xFF8
 23883                           tblptrh	equ	0xFF7
 23884                           tblptrl	equ	0xFF6
 23885                           tablat	equ	0xFF5
 23886                           prodh	equ	0xFF4
 23887                           prodl	equ	0xFF3
 23888                           intcon	equ	0xFF2
 23889                           intcon2	equ	0xFF1
 23890                           intcon3	equ	0xFF0
 23891                           indf0	equ	0xFEF
 23892                           postinc0	equ	0xFEE
 23893                           fsr0h	equ	0xFEA
 23894                           fsr0l	equ	0xFE9
 23895                           wreg	equ	0xFE8
 23896                           indf1	equ	0xFE7
 23897                           postdec1	equ	0xFE5
 23898                           fsr1h	equ	0xFE2
 23899                           fsr1l	equ	0xFE1
 23900                           indf2	equ	0xFDF
 23901                           postinc2	equ	0xFDE
 23902                           postdec2	equ	0xFDD
 23903                           plusw2	equ	0xFDB
 23904                           fsr2h	equ	0xFDA
 23905                           fsr2l	equ	0xFD9
 23906                           status	equ	0xFD8
 23907                           
 23908 ;; *************** function _MOTEapp_handlerState *****************
 23909 ;; Defined at:
 23910 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;  state           1    wreg     enum E5864
 23913 ;; Auto vars:     Size  Location     Type
 23914 ;;  state           1    0[BANK0 ] enum E5864
 23915 ;; Return value:  Size  Location     Type
 23916 ;;                  1    wreg      void 
 23917 ;; Registers used:
 23918 ;;		wreg
 23919 ;; Tracked objects:
 23920 ;;		On entry : 0/0
 23921 ;;		On exit  : 0/0
 23922 ;;		Unchanged: 0/0
 23923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23924 ;;      Params:         0       0       0       0       0       0       0       0       0
 23925 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23927 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23928 ;;Total ram usage:        1 bytes
 23929 ;; Hardware stack levels used:    1
 23930 ;; Hardware stack levels required when called:   11
 23931 ;; This function calls:
 23932 ;;		Nothing
 23933 ;; This function is called by:
 23934 ;;		_main
 23935 ;; This function uses a non-reentrant model
 23936 ;;
 23937                           
 23938                           	psect	text104
 23939  0058D8                     __ptext104:
 23940                           	opt stack 0
 23941  0058D8                     _MOTEapp_handlerState:
 23942                           	opt stack 19
 23943                           
 23944                           ;incstack = 0
 23945                           ;MOTEapp_handlerState@state stored from wreg
 23946  0058D8  0100               	movlb	0	; () banked
 23947  0058DA  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 23948                           
 23949                           ;MOTEapp.c: 185: moteState = state;
 23950  0058DC  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 23951  0058E0  0012               	return		;funcret
 23952  0058E2                     __end_of_MOTEapp_handlerState:
 23953                           	opt stack 0
 23954                           tblptru	equ	0xFF8
 23955                           tblptrh	equ	0xFF7
 23956                           tblptrl	equ	0xFF6
 23957                           tablat	equ	0xFF5
 23958                           prodh	equ	0xFF4
 23959                           prodl	equ	0xFF3
 23960                           intcon	equ	0xFF2
 23961                           intcon2	equ	0xFF1
 23962                           intcon3	equ	0xFF0
 23963                           indf0	equ	0xFEF
 23964                           postinc0	equ	0xFEE
 23965                           fsr0h	equ	0xFEA
 23966                           fsr0l	equ	0xFE9
 23967                           wreg	equ	0xFE8
 23968                           indf1	equ	0xFE7
 23969                           postdec1	equ	0xFE5
 23970                           fsr1h	equ	0xFE2
 23971                           fsr1l	equ	0xFE1
 23972                           indf2	equ	0xFDF
 23973                           postinc2	equ	0xFDE
 23974                           postdec2	equ	0xFDD
 23975                           plusw2	equ	0xFDB
 23976                           fsr2h	equ	0xFDA
 23977                           fsr2l	equ	0xFD9
 23978                           status	equ	0xFD8
 23979                           
 23980 ;; *************** function _DATAEE_ReadByte *****************
 23981 ;; Defined at:
 23982 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;  bAdd            1    wreg     unsigned char 
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;  bAdd            1    0[BANK0 ] unsigned char 
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  1    wreg      unsigned char 
 23989 ;; Registers used:
 23990 ;;		wreg, status,2
 23991 ;; Tracked objects:
 23992 ;;		On entry : 0/0
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23996 ;;      Params:         0       0       0       0       0       0       0       0       0
 23997 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23999 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24000 ;;Total ram usage:        1 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   11
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_main
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text105
 24011  0057D0                     __ptext105:
 24012                           	opt stack 0
 24013  0057D0                     _DATAEE_ReadByte:
 24014                           	opt stack 19
 24015                           
 24016                           ;incstack = 0
 24017                           ;DATAEE_ReadByte@bAdd stored from wreg
 24018  0057D0  0100               	movlb	0	; () banked
 24019  0057D2  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24020                           
 24021                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24022  0057D4  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24023                           
 24024                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24025  0057D8  9CA6               	bcf	4006,6,c	;volsfr
 24026                           
 24027                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24028  0057DA  9EA6               	bcf	4006,7,c	;volsfr
 24029                           
 24030                           ;memory.c: 193: EECON1bits.RD = 1;
 24031  0057DC  80A6               	bsf	4006,0,c	;volsfr
 24032                           
 24033                           ;memory.c: 194: __nop();
 24034  0057DE  F000               	nop	
 24035                           
 24036                           ;memory.c: 195: __nop();
 24037  0057E0  F000               	nop	
 24038                           
 24039                           ;memory.c: 197: return (EEDATA);
 24040  0057E2  50A8               	movf	4008,w,c	;volatile
 24041  0057E4  0012               	return	
 24042  0057E6                     __end_of_DATAEE_ReadByte:
 24043                           	opt stack 0
 24044                           tblptru	equ	0xFF8
 24045                           tblptrh	equ	0xFF7
 24046                           tblptrl	equ	0xFF6
 24047                           tablat	equ	0xFF5
 24048                           prodh	equ	0xFF4
 24049                           prodl	equ	0xFF3
 24050                           intcon	equ	0xFF2
 24051                           intcon2	equ	0xFF1
 24052                           intcon3	equ	0xFF0
 24053                           indf0	equ	0xFEF
 24054                           postinc0	equ	0xFEE
 24055                           fsr0h	equ	0xFEA
 24056                           fsr0l	equ	0xFE9
 24057                           wreg	equ	0xFE8
 24058                           indf1	equ	0xFE7
 24059                           postdec1	equ	0xFE5
 24060                           fsr1h	equ	0xFE2
 24061                           fsr1l	equ	0xFE1
 24062                           indf2	equ	0xFDF
 24063                           postinc2	equ	0xFDE
 24064                           postdec2	equ	0xFDD
 24065                           plusw2	equ	0xFDB
 24066                           fsr2h	equ	0xFDA
 24067                           fsr2l	equ	0xFD9
 24068                           status	equ	0xFD8
 24069                           
 24070 ;; *************** function _INTERRUPT_InterruptManager *****************
 24071 ;; Defined at:
 24072 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;		None
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;		None
 24077 ;; Return value:  Size  Location     Type
 24078 ;;                  1    wreg      void 
 24079 ;; Registers used:
 24080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24081 ;; Tracked objects:
 24082 ;;		On entry : 0/0
 24083 ;;		On exit  : 0/0
 24084 ;;		Unchanged: 0/0
 24085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24086 ;;      Params:         0       0       0       0       0       0       0       0       0
 24087 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24088 ;;      Temps:         19       0       0       0       0       0       0       0       0
 24089 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24090 ;;Total ram usage:       19 bytes
 24091 ;; Hardware stack levels used:    1
 24092 ;; Hardware stack levels required when called:   10
 24093 ;; This function calls:
 24094 ;;		_CMP1_ISR
 24095 ;;		_EUSART_Receive_ISR
 24096 ;;		_EUSART_Transmit_ISR
 24097 ;;		_InterruptPinRX
 24098 ;;		_TMR0_ISR
 24099 ;;		_TMR1_ISR
 24100 ;;		_TMR3_ISR
 24101 ;;		_TMRapp_Tick
 24102 ;;		_USBDeviceTasks
 24103 ;;		_USBapp_setrxByteFlag
 24104 ;; This function is called by:
 24105 ;;		Interrupt level 2
 24106 ;; This function uses a non-reentrant model
 24107 ;;
 24108                           
 24109                           	psect	intcode
 24110  000008                     __pintcode:
 24111                           	opt stack 0
 24112  000008                     _INTERRUPT_InterruptManager:
 24113                           	opt stack 11
 24114                           
 24115                           ;incstack = 0
 24116  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24117  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager+1
 24118  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+2
 24119  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+3
 24120  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+4
 24121  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+5
 24122  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+6
 24123  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+7
 24124  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+8
 24125  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+9
 24126  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+10
 24127  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+11
 24128  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+12
 24129  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+13
 24130  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+14
 24131  000042  C05E  F02F         	movff	btemp,??_INTERRUPT_InterruptManager+15
 24132  000046  C05F  F030         	movff	btemp+1,??_INTERRUPT_InterruptManager+16
 24133  00004A  C060  F031         	movff	btemp+2,??_INTERRUPT_InterruptManager+17
 24134  00004E  C061  F032         	movff	btemp+3,??_INTERRUPT_InterruptManager+18
 24135                           
 24136                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24137  000052  B09D               	btfsc	3997,0,c	;volatile
 24138  000054  A09E               	btfss	3998,0,c	;volatile
 24139  000056  D004               	goto	i2l1275
 24140                           
 24141                           ;interrupt_manager.c: 60: {
 24142                           ;interrupt_manager.c: 61: TMR1_ISR();
 24143  000058  EC51  F02C         	call	_TMR1_ISR	;wreg free
 24144                           
 24145                           ;interrupt_manager.c: 63: TMRapp_Tick();
 24146  00005C  EC8D  F02C         	call	_TMRapp_Tick	;wreg free
 24147  000060                     i2l1275:
 24148                           
 24149                           ;interrupt_manager.c: 64: }
 24150                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24151  000060  B2A0               	btfsc	4000,1,c	;volatile
 24152  000062  A2A1               	btfss	4001,1,c	;volatile
 24153  000064  D003               	goto	i2l1276
 24154                           
 24155                           ;interrupt_manager.c: 66: {
 24156                           ;interrupt_manager.c: 67: TMR3_ISR();
 24157  000066  EC82  F02B         	call	_TMR3_ISR	;wreg free
 24158                           
 24159                           ;interrupt_manager.c: 68: }
 24160  00006A  D013               	goto	i2l1282
 24161  00006C                     i2l1276:
 24162                           
 24163                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24164  00006C  BA9D               	btfsc	3997,5,c	;volatile
 24165  00006E  AA9E               	btfss	3998,5,c	;volatile
 24166  000070  D005               	goto	i2l1278
 24167                           
 24168                           ;interrupt_manager.c: 70: {
 24169                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 24170  000072  EC79  F02C         	call	_USBapp_setrxByteFlag	;wreg free
 24171                           
 24172                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 24173  000076  EC6D  F02A         	call	_EUSART_Receive_ISR	;wreg free
 24174                           
 24175                           ;interrupt_manager.c: 73: }
 24176  00007A  D00B               	goto	i2l1282
 24177  00007C                     i2l1278:
 24178                           
 24179                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 24180  00007C  B89D               	btfsc	3997,4,c	;volatile
 24181  00007E  A89E               	btfss	3998,4,c	;volatile
 24182  000080  D003               	goto	i2l1280
 24183                           
 24184                           ;interrupt_manager.c: 75: {
 24185                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 24186  000082  EC55  F02A         	call	_EUSART_Transmit_ISR	;wreg free
 24187                           
 24188                           ;interrupt_manager.c: 77: }
 24189  000086  D005               	goto	i2l1282
 24190  000088                     i2l1280:
 24191                           
 24192                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 24193  000088  BCA0               	btfsc	4000,6,c	;volatile
 24194  00008A  ACA1               	btfss	4001,6,c	;volatile
 24195  00008C  D002               	goto	i2l1282
 24196                           
 24197                           ;interrupt_manager.c: 79: {
 24198                           ;interrupt_manager.c: 80: CMP1_ISR();
 24199  00008E  EC9A  F02C         	call	_CMP1_ISR	;wreg free
 24200  000092                     i2l1282:
 24201                           
 24202                           ;interrupt_manager.c: 81: }
 24203                           ;interrupt_manager.c: 82: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 24204  000092  BAF2               	btfsc	intcon,5,c	;volatile
 24205  000094  A4F2               	btfss	intcon,2,c	;volatile
 24206  000096  D003               	goto	i2l1283
 24207                           
 24208                           ;interrupt_manager.c: 83: {
 24209                           ;interrupt_manager.c: 84: TMR0_ISR();
 24210  000098  EC57  F02C         	call	_TMR0_ISR	;wreg free
 24211                           
 24212                           ;interrupt_manager.c: 87: }
 24213  00009C  D018               	goto	i2l1287
 24214  00009E                     i2l1283:
 24215                           
 24216                           ;interrupt_manager.c: 88: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 24217  00009E  B6F2               	btfsc	intcon,3,c	;volatile
 24218  0000A0  A0F2               	btfss	intcon,0,c	;volatile
 24219  0000A2  D013               	goto	i2l1285
 24220                           
 24221                           ;interrupt_manager.c: 89: {
 24222                           ;interrupt_manager.c: 90: INTCONbits.IOCIF = 0;
 24223  0000A4  90F2               	bcf	intcon,0,c	;volatile
 24224                           
 24225                           ;interrupt_manager.c: 92: if(IOCBbits.IOCB7 == 1)
 24226  0000A6  AE86               	btfss	3974,7,c	;volatile
 24227  0000A8  D012               	goto	i2l1287
 24228                           
 24229                           ;interrupt_manager.c: 93: {
 24230                           ;interrupt_manager.c: 95: InterruptPinRX();
 24231  0000AA  EC9C  F02A         	call	_InterruptPinRX	;wreg free
 24232                           
 24233                           ;interrupt_manager.c: 96: PORTAbits.RA7 = !PORTAbits.RA7;
 24234  0000AE  BE80               	btfsc	3968,7,c	;volatile
 24235  0000B0  D003               	goto	i2u1069_40
 24236  0000B2  6A20               	clrf	??_INTERRUPT_InterruptManager& (0+255),c
 24237  0000B4  2A20               	incf	??_INTERRUPT_InterruptManager& (0+255),f,c
 24238  0000B6  D001               	goto	i2u1070_48
 24239  0000B8                     i2u1069_40:
 24240  0000B8  6A20               	clrf	??_INTERRUPT_InterruptManager& (0+255),c
 24241  0000BA                     i2u1070_48:
 24242  0000BA  3220               	rrcf	??_INTERRUPT_InterruptManager,f,c
 24243  0000BC  3220               	rrcf	??_INTERRUPT_InterruptManager,f,c
 24244  0000BE  5080               	movf	3968,w,c	;volatile
 24245  0000C0  1820               	xorwf	??_INTERRUPT_InterruptManager,w,c
 24246  0000C2  0B7F               	andlw	-129
 24247  0000C4  1820               	xorwf	??_INTERRUPT_InterruptManager,w,c
 24248  0000C6  6E80               	movwf	3968,c	;volatile
 24249                           
 24250                           ;interrupt_manager.c: 107: }
 24251                           ;interrupt_manager.c: 108: }
 24252  0000C8  D002               	goto	i2l1287
 24253  0000CA                     i2l1285:
 24254                           
 24255                           ;interrupt_manager.c: 109: else
 24256                           ;interrupt_manager.c: 110: {
 24257                           ;interrupt_manager.c: 112: USBDeviceTasks();
 24258  0000CA  EC1C  F014         	call	_USBDeviceTasks	;wreg free
 24259  0000CE                     i2l1287:
 24260  0000CE  C032  F061         	movff	??_INTERRUPT_InterruptManager+18,btemp+3
 24261  0000D2  C031  F060         	movff	??_INTERRUPT_InterruptManager+17,btemp+2
 24262  0000D6  C030  F05F         	movff	??_INTERRUPT_InterruptManager+16,btemp+1
 24263  0000DA  C02F  F05E         	movff	??_INTERRUPT_InterruptManager+15,btemp
 24264  0000DE  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+14,tablat
 24265  0000E2  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+13,tblptru
 24266  0000E6  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+12,tblptrh
 24267  0000EA  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+11,tblptrl
 24268  0000EE  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+10,prodh
 24269  0000F2  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+9,prodl
 24270  0000F6  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+8,fsr2h
 24271  0000FA  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+7,fsr2l
 24272  0000FE  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+6,fsr1h
 24273  000102  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+5,fsr1l
 24274  000106  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+4,fsr0h
 24275  00010A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+3,fsr0l
 24276  00010E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+2,pclatu
 24277  000112  C021  FFFA         	movff	??_INTERRUPT_InterruptManager+1,pclath
 24278  000116  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24279  000118  0011               	retfie		f
 24280  00011A                     __end_of_INTERRUPT_InterruptManager:
 24281                           	opt stack 0
 24282                           pclatu	equ	0xFFB
 24283                           pclath	equ	0xFFA
 24284                           tblptru	equ	0xFF8
 24285                           tblptrh	equ	0xFF7
 24286                           tblptrl	equ	0xFF6
 24287                           tablat	equ	0xFF5
 24288                           prodh	equ	0xFF4
 24289                           prodl	equ	0xFF3
 24290                           intcon	equ	0xFF2
 24291                           intcon2	equ	0xFF1
 24292                           intcon3	equ	0xFF0
 24293                           indf0	equ	0xFEF
 24294                           postinc0	equ	0xFEE
 24295                           fsr0h	equ	0xFEA
 24296                           fsr0l	equ	0xFE9
 24297                           wreg	equ	0xFE8
 24298                           indf1	equ	0xFE7
 24299                           postdec1	equ	0xFE5
 24300                           fsr1h	equ	0xFE2
 24301                           fsr1l	equ	0xFE1
 24302                           indf2	equ	0xFDF
 24303                           postinc2	equ	0xFDE
 24304                           postdec2	equ	0xFDD
 24305                           plusw2	equ	0xFDB
 24306                           fsr2h	equ	0xFDA
 24307                           fsr2l	equ	0xFD9
 24308                           status	equ	0xFD8
 24309                           
 24310 ;; *************** function _USBapp_setrxByteFlag *****************
 24311 ;; Defined at:
 24312 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24313 ;; Parameters:    Size  Location     Type
 24314 ;;		None
 24315 ;; Auto vars:     Size  Location     Type
 24316 ;;		None
 24317 ;; Return value:  Size  Location     Type
 24318 ;;                  1    wreg      void 
 24319 ;; Registers used:
 24320 ;;		wreg, status,2
 24321 ;; Tracked objects:
 24322 ;;		On entry : 0/0
 24323 ;;		On exit  : 0/0
 24324 ;;		Unchanged: 0/0
 24325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24326 ;;      Params:         0       0       0       0       0       0       0       0       0
 24327 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24328 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24329 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24330 ;;Total ram usage:        0 bytes
 24331 ;; Hardware stack levels used:    1
 24332 ;; This function calls:
 24333 ;;		Nothing
 24334 ;; This function is called by:
 24335 ;;		_INTERRUPT_InterruptManager
 24336 ;; This function uses a non-reentrant model
 24337 ;;
 24338                           
 24339                           	psect	text107
 24340  0058F2                     __ptext107:
 24341                           	opt stack 0
 24342  0058F2                     _USBapp_setrxByteFlag:
 24343                           	opt stack 20
 24344                           
 24345                           ;USBapp.c: 265: rxByteFlag = 1;
 24346                           
 24347                           ;incstack = 0
 24348  0058F2  0E01               	movlw	1
 24349  0058F4  0100               	movlb	0	; () banked
 24350  0058F6  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 24351                           
 24352                           ; BSR set to: 0
 24353  0058F8  0012               	return		;funcret
 24354  0058FA                     __end_of_USBapp_setrxByteFlag:
 24355                           	opt stack 0
 24356                           pclatu	equ	0xFFB
 24357                           pclath	equ	0xFFA
 24358                           tblptru	equ	0xFF8
 24359                           tblptrh	equ	0xFF7
 24360                           tblptrl	equ	0xFF6
 24361                           tablat	equ	0xFF5
 24362                           prodh	equ	0xFF4
 24363                           prodl	equ	0xFF3
 24364                           intcon	equ	0xFF2
 24365                           intcon2	equ	0xFF1
 24366                           intcon3	equ	0xFF0
 24367                           indf0	equ	0xFEF
 24368                           postinc0	equ	0xFEE
 24369                           fsr0h	equ	0xFEA
 24370                           fsr0l	equ	0xFE9
 24371                           wreg	equ	0xFE8
 24372                           indf1	equ	0xFE7
 24373                           postdec1	equ	0xFE5
 24374                           fsr1h	equ	0xFE2
 24375                           fsr1l	equ	0xFE1
 24376                           indf2	equ	0xFDF
 24377                           postinc2	equ	0xFDE
 24378                           postdec2	equ	0xFDD
 24379                           plusw2	equ	0xFDB
 24380                           fsr2h	equ	0xFDA
 24381                           fsr2l	equ	0xFD9
 24382                           status	equ	0xFD8
 24383                           
 24384 ;; *************** function _USBDeviceTasks *****************
 24385 ;; Defined at:
 24386 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;  i               1   30[COMRAM] unsigned char 
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1    wreg      void 
 24393 ;; Registers used:
 24394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/0
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0
 24401 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24403 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24404 ;;Total ram usage:        1 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:    9
 24407 ;; This function calls:
 24408 ;;		_USBCtrlEPAllowStatusStage
 24409 ;;		_USBCtrlEPService
 24410 ;;		_USBStallHandler
 24411 ;;		_USBSuspend
 24412 ;;		_USBWakeFromSuspend
 24413 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24414 ;;		i2_USBDeviceInit
 24415 ;; This function is called by:
 24416 ;;		_INTERRUPT_InterruptManager
 24417 ;; This function uses a non-reentrant model
 24418 ;;
 24419                           
 24420                           	psect	text108
 24421  002838                     __ptext108:
 24422                           	opt stack 0
 24423  002838                     _USBDeviceTasks:
 24424                           	opt stack 11
 24425                           
 24426                           ;usb_device.c: 430: uint8_t i;
 24427                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24428                           
 24429                           ; BSR set to: 0
 24430                           ;incstack = 0
 24431  002838  0100               	movlb	0	; () banked
 24432  00283A  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24433  00283C  B4D8               	btfsc	status,2,c
 24434                           
 24435                           ; BSR set to: 0
 24436                           ;usb_device.c: 433: {
 24437                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24438  00283E  BA60               	btfsc	3936,5,c	;volatile
 24439  002840  D006               	goto	i2l1857
 24440                           
 24441                           ; BSR set to: 0
 24442                           ;usb_device.c: 444: {
 24443                           ;usb_device.c: 445: {UIR = 0;};
 24444  002842  0E00               	movlw	0
 24445  002844  6E65               	movwf	3941,c	;volatile
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24449  002846  8064               	bsf	3940,0,c	;volatile
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24453  002848  8864               	bsf	3940,4,c	;volatile
 24454                           
 24455                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24456  00284A  0E02               	movlw	2
 24457  00284C  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24458  00284E                     i2l1857:
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;usb_device.c: 449: }
 24462                           ;usb_device.c: 450: }
 24463                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24464                           
 24465                           ; BSR set to: 0
 24466                           
 24467                           ; BSR set to: 0
 24468  00284E  B465               	btfsc	3941,2,c	;volatile
 24469                           
 24470                           ; BSR set to: 0
 24471  002850  A464               	btfss	3940,2,c	;volatile
 24472  002852  D003               	goto	i2l1858
 24473                           
 24474                           ; BSR set to: 0
 24475                           ;usb_device.c: 455: {
 24476                           ;usb_device.c: 456: (UIR &= 0xFB);
 24477  002854  9465               	bcf	3941,2,c	;volatile
 24478                           
 24479                           ; BSR set to: 0
 24480                           ;usb_device.c: 457: USBWakeFromSuspend();
 24481  002856  EC3D  F02A         	call	_USBWakeFromSuspend	;wreg free
 24482  00285A                     i2l1858:
 24483                           
 24484                           ;usb_device.c: 458: }
 24485                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24486  00285A  A260               	btfss	3936,1,c	;volatile
 24487  00285C  D002               	goto	i2l1859
 24488                           
 24489                           ;usb_device.c: 464: {
 24490                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24491  00285E  94A4               	bcf	4004,2,c	;volatile
 24492                           
 24493                           ;usb_device.c: 466: return;
 24494  002860  0012               	return	
 24495  002862                     i2l1859:
 24496                           
 24497                           ;usb_device.c: 467: }
 24498                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24499  002862  B065               	btfsc	3941,0,c	;volatile
 24500  002864  A064               	btfss	3940,0,c	;volatile
 24501  002866  D007               	goto	i2l1861
 24502                           
 24503                           ;usb_device.c: 480: {
 24504                           ;usb_device.c: 481: USBDeviceInit();
 24505  002868  EC4D  F015         	call	i2_USBDeviceInit	;wreg free
 24506                           
 24507                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24508  00286C  84A3               	bsf	4003,2,c	;volatile
 24509                           
 24510                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24511  00286E  0E04               	movlw	4
 24512  002870  0100               	movlb	0	; () banked
 24513  002872  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24514                           
 24515                           ; BSR set to: 0
 24516                           ;usb_device.c: 489: (UIR &= 0xFE);
 24517  002874  9065               	bcf	3941,0,c	;volatile
 24518  002876                     i2l1861:
 24519                           
 24520                           ;usb_device.c: 490: }
 24521                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24522                           
 24523                           ; BSR set to: 0
 24524  002876  B865               	btfsc	3941,4,c	;volatile
 24525  002878  A864               	btfss	3940,4,c	;volatile
 24526  00287A  D003               	goto	i2l1862
 24527                           
 24528                           ;usb_device.c: 496: {
 24529                           ;usb_device.c: 497: USBSuspend();
 24530  00287C  ECDE  F02A         	call	_USBSuspend	;wreg free
 24531                           
 24532                           ;usb_device.c: 498: (UIR &= 0xEF);
 24533  002880  9865               	bcf	3941,4,c	;volatile
 24534  002882                     i2l1862:
 24535                           
 24536                           ;usb_device.c: 499: }
 24537                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24538  002882  AC65               	btfss	3941,6,c	;volatile
 24539  002884  D018               	goto	i2l1866
 24540                           
 24541                           ;usb_device.c: 502: {
 24542                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24543  002886  AC64               	btfss	3940,6,c	;volatile
 24544  002888  D00E               	goto	i2l1864
 24545                           
 24546                           ;usb_device.c: 504: {
 24547                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24548  00288A  0E00               	movlw	0
 24549  00288C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24550  00288E  0E73               	movlw	115
 24551  002890  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24552  002892  0E00               	movlw	0
 24553  002894  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24554  002896  0E00               	movlw	0
 24555  002898  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24556  00289A  0E00               	movlw	0
 24557  00289C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24558  00289E  0E01               	movlw	1
 24559  0028A0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24560  0028A2  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24561  0028A6                     i2l1864:
 24562                           
 24563                           ;usb_device.c: 506: }
 24564                           ;usb_device.c: 507: (UIR &= 0xBF);
 24565  0028A6  9C65               	bcf	3941,6,c	;volatile
 24566                           
 24567                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24568  0028A8  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24569  0028AA  A4D8               	btfss	status,2,c
 24570                           
 24571                           ;usb_device.c: 513: {
 24572                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24573  0028AC  0648               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24574                           
 24575                           ;usb_device.c: 515: }
 24576                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24577  0028AE  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24578  0028B0  B4D8               	btfsc	status,2,c
 24579                           
 24580                           ;usb_device.c: 522: {
 24581                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24582  0028B2  EC25  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24583  0028B6                     i2l1866:
 24584                           
 24585                           ;usb_device.c: 524: }
 24586                           ;usb_device.c: 525: }
 24587                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24588  0028B6  BA65               	btfsc	3941,5,c	;volatile
 24589  0028B8  AA64               	btfss	3940,5,c	;volatile
 24590  0028BA  D002               	goto	i2l1867
 24591                           
 24592                           ;usb_device.c: 528: {
 24593                           ;usb_device.c: 529: USBStallHandler();
 24594  0028BC  EC67  F028         	call	_USBStallHandler	;wreg free
 24595  0028C0                     i2l1867:
 24596                           
 24597                           ;usb_device.c: 530: }
 24598                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24599  0028C0  B265               	btfsc	3941,1,c	;volatile
 24600  0028C2  A264               	btfss	3940,1,c	;volatile
 24601  0028C4  D00F               	goto	i2l1868
 24602                           
 24603                           ;usb_device.c: 533: {
 24604                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24605  0028C6  0E7F               	movlw	127
 24606  0028C8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24607  0028CA  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24608  0028CC  0E00               	movlw	0
 24609  0028CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24610  0028D0  0E00               	movlw	0
 24611  0028D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24612  0028D4  0E00               	movlw	0
 24613  0028D6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24614  0028D8  0E01               	movlw	1
 24615  0028DA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24616  0028DC  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24617                           
 24618                           ;usb_device.c: 535: {UEIR = 0;};
 24619  0028E0  0E00               	movlw	0
 24620  0028E2  6E67               	movwf	3943,c	;volatile
 24621  0028E4                     i2l1868:
 24622                           
 24623                           ;usb_device.c: 536: }
 24624                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24625  0028E4  0E04               	movlw	4
 24626  0028E6  0100               	movlb	0	; () banked
 24627  0028E8  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24628  0028EA  D002               	goto	i2l1869
 24629                           
 24630                           ; BSR set to: 0
 24631                           ;usb_device.c: 544: {
 24632                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24633  0028EC  94A4               	bcf	4004,2,c	;volatile
 24634                           
 24635                           ;usb_device.c: 546: return;
 24636  0028EE  0012               	return	
 24637  0028F0                     i2l1869:
 24638                           
 24639                           ; BSR set to: 0
 24640                           ;usb_device.c: 547: }
 24641                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24642  0028F0  A664               	btfss	3940,3,c	;volatile
 24643  0028F2  D039               	goto	i2u1035_40
 24644                           
 24645                           ; BSR set to: 0
 24646                           ;usb_device.c: 553: {
 24647                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24648  0028F4  0E00               	movlw	0
 24649  0028F6  6E1F               	movwf	USBDeviceTasks@i,c
 24650  0028F8                     i2l11601:
 24651                           
 24652                           ; BSR set to: 0
 24653  0028F8  0E03               	movlw	3
 24654  0028FA  641F               	cpfsgt	USBDeviceTasks@i,c
 24655  0028FC  D001               	goto	i2l1871
 24656  0028FE  D033               	goto	i2u1035_40
 24657  002900                     i2l1871:
 24658                           
 24659                           ;usb_device.c: 555: {
 24660                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24661  002900  A665               	btfss	3941,3,c	;volatile
 24662  002902  D031               	goto	i2u1035_40
 24663                           
 24664                           ;usb_device.c: 557: {
 24665                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24666  002904  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24667                           
 24668                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24669  002908  3059               	rrcf	_USTATcopy,w,c	;volatile
 24670  00290A  32E8               	rrcf	wreg,f,c
 24671  00290C  32E8               	rrcf	wreg,f,c
 24672  00290E  0B0F               	andlw	15
 24673  002910  6E4A               	movwf	_endpoint_number,c	;volatile
 24674                           
 24675                           ;usb_device.c: 562: (UIR &= 0xF7);
 24676  002912  9665               	bcf	3941,3,c	;volatile
 24677                           
 24678                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24679  002914  B459               	btfsc	_USTATcopy,2,c	;volatile
 24680  002916  D007               	goto	i2l1874
 24681                           
 24682                           ;usb_device.c: 567: {
 24683                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24684  002918  504A               	movf	_endpoint_number,w,c	;volatile
 24685  00291A  0D01               	mullw	1
 24686  00291C  0ED0               	movlw	low _ep_data_out
 24687  00291E  24F3               	addwf	prodl,w,c
 24688  002920  6ED9               	movwf	fsr2l,c
 24689  002922  0E00               	movlw	high _ep_data_out
 24690  002924  D006               	goto	L24
 24691  002926                     i2l1874:
 24692                           
 24693                           ;usb_device.c: 570: else
 24694                           ;usb_device.c: 571: {
 24695                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24696                           
 24697                           ; BSR set to: 0
 24698  002926  504A               	movf	_endpoint_number,w,c	;volatile
 24699  002928  0D01               	mullw	1
 24700  00292A  0ED3               	movlw	low _ep_data_in
 24701  00292C  24F3               	addwf	prodl,w,c
 24702  00292E  6ED9               	movwf	fsr2l,c
 24703  002930  0E00               	movlw	high _ep_data_in
 24704  002932                     L24:
 24705  002932  20F4               	addwfc	prodh,w,c
 24706  002934  6EDA               	movwf	fsr2h,c
 24707  002936  0100               	movlb	0	; () banked
 24708  002938  70DF               	btg	indf2,0,c
 24709                           
 24710                           ; BSR set to: 0
 24711                           ;usb_device.c: 573: }
 24712                           ;usb_device.c: 577: if(endpoint_number == 0)
 24713                           
 24714                           ; BSR set to: 0
 24715  00293A  504A               	movf	_endpoint_number,w,c	;volatile
 24716  00293C  A4D8               	btfss	status,2,c
 24717  00293E  D003               	goto	i2l1876
 24718                           
 24719                           ; BSR set to: 0
 24720                           ;usb_device.c: 578: {
 24721                           ;usb_device.c: 579: USBCtrlEPService();
 24722  002940  ECF5  F01B         	call	_USBCtrlEPService	;wreg free
 24723                           
 24724                           ;usb_device.c: 580: }
 24725  002944  D00E               	goto	i2l1878
 24726  002946                     i2l1876:
 24727                           
 24728                           ;usb_device.c: 581: else
 24729                           ;usb_device.c: 582: {
 24730                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24731  002946  0E00               	movlw	0
 24732  002948  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24733  00294A  0E72               	movlw	114
 24734  00294C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24735  00294E  0E59               	movlw	low _USTATcopy
 24736  002950  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24737  002952  0E00               	movlw	high _USTATcopy
 24738  002954  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24739  002956  0E00               	movlw	0
 24740  002958  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24741  00295A  0E00               	movlw	0
 24742  00295C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24743  00295E  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24744  002962                     i2l1878:
 24745  002962  2A1F               	incf	USBDeviceTasks@i,f,c
 24746  002964  D7C9               	goto	i2l11601
 24747  002966                     i2u1035_40:
 24748                           
 24749                           ;usb_device.c: 589: }
 24750                           ;usb_device.c: 590: }
 24751                           ;usb_device.c: 591: }
 24752                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24753  002966  94A4               	bcf	4004,2,c	;volatile
 24754  002968  0012               	return		;funcret
 24755  00296A                     __end_of_USBDeviceTasks:
 24756                           	opt stack 0
 24757                           pclatu	equ	0xFFB
 24758                           pclath	equ	0xFFA
 24759                           tblptru	equ	0xFF8
 24760                           tblptrh	equ	0xFF7
 24761                           tblptrl	equ	0xFF6
 24762                           tablat	equ	0xFF5
 24763                           prodh	equ	0xFF4
 24764                           prodl	equ	0xFF3
 24765                           intcon	equ	0xFF2
 24766                           intcon2	equ	0xFF1
 24767                           intcon3	equ	0xFF0
 24768                           indf0	equ	0xFEF
 24769                           postinc0	equ	0xFEE
 24770                           fsr0h	equ	0xFEA
 24771                           fsr0l	equ	0xFE9
 24772                           wreg	equ	0xFE8
 24773                           indf1	equ	0xFE7
 24774                           postdec1	equ	0xFE5
 24775                           fsr1h	equ	0xFE2
 24776                           fsr1l	equ	0xFE1
 24777                           indf2	equ	0xFDF
 24778                           postinc2	equ	0xFDE
 24779                           postdec2	equ	0xFDD
 24780                           plusw2	equ	0xFDB
 24781                           fsr2h	equ	0xFDA
 24782                           fsr2l	equ	0xFD9
 24783                           status	equ	0xFD8
 24784                           
 24785 ;; *************** function i2_USBDeviceInit *****************
 24786 ;; Defined at:
 24787 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;		None
 24790 ;; Auto vars:     Size  Location     Type
 24791 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24792 ;; Return value:  Size  Location     Type
 24793 ;;                  1    wreg      void 
 24794 ;; Registers used:
 24795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24796 ;; Tracked objects:
 24797 ;;		On entry : 0/0
 24798 ;;		On exit  : 0/0
 24799 ;;		Unchanged: 0/0
 24800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24801 ;;      Params:         0       0       0       0       0       0       0       0       0
 24802 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24804 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24805 ;;Total ram usage:        1 bytes
 24806 ;; Hardware stack levels used:    1
 24807 ;; Hardware stack levels required when called:    1
 24808 ;; This function calls:
 24809 ;;		i2_memset
 24810 ;; This function is called by:
 24811 ;;		_USBDeviceTasks
 24812 ;; This function uses a non-reentrant model
 24813 ;;
 24814                           
 24815                           	psect	text109
 24816  002A9A                     __ptext109:
 24817                           	opt stack 0
 24818  002A9A                     i2_USBDeviceInit:
 24819                           	opt stack 18
 24820                           
 24821                           ;usb_device.c: 239: uint8_t i;
 24822                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24823                           
 24824                           ;incstack = 0
 24825  002A9A  94A3               	bcf	4003,2,c	;volatile
 24826                           
 24827                           ;usb_device.c: 244: {UEIR = 0;};
 24828  002A9C  0E00               	movlw	0
 24829  002A9E  6E67               	movwf	3943,c	;volatile
 24830                           
 24831                           ;usb_device.c: 247: {UIR = 0;};
 24832  002AA0  0E00               	movlw	0
 24833  002AA2  6E65               	movwf	3941,c	;volatile
 24834                           
 24835                           ;usb_device.c: 250: UEP0 = 0;
 24836  002AA4  0E00               	movlw	0
 24837  002AA6  6E6A               	movwf	3946,c	;volatile
 24838                           
 24839                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24840  002AA8  0E6B               	movlw	107
 24841  002AAA  6E01               	movwf	i2memset@p1,c
 24842  002AAC  0E0F               	movlw	15
 24843  002AAE  6E02               	movwf	i2memset@p1+1,c
 24844  002AB0  0E00               	movlw	0
 24845  002AB2  6E04               	movwf	i2memset@c+1,c
 24846  002AB4  0E00               	movlw	0
 24847  002AB6  6E03               	movwf	i2memset@c,c
 24848  002AB8  0E00               	movlw	0
 24849  002ABA  6E06               	movwf	i2memset@n+1,c
 24850  002ABC  0E02               	movlw	2
 24851  002ABE  6E05               	movwf	i2memset@n,c
 24852  002AC0  ECB3  F02A         	call	i2_memset	;wreg free
 24853                           
 24854                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24855  002AC4  0E16               	movlw	22
 24856  002AC6  6E62               	movwf	3938,c	;volatile
 24857  002AC8  0E9F               	movlw	159
 24858  002ACA  6E66               	movwf	3942,c	;volatile
 24859  002ACC  0E7B               	movlw	123
 24860  002ACE  6E64               	movwf	3940,c	;volatile
 24861                           
 24862                           ;usb_device.c: 257: ;
 24863                           ;usb_device.c: 260: ;
 24864                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24865  002AD0  0E00               	movlw	0
 24866  002AD2  6E09               	movwf	i2USBDeviceInit@i,c
 24867  002AD4                     i2l11139:
 24868  002AD4  0E0B               	movlw	11
 24869  002AD6  6409               	cpfsgt	i2USBDeviceInit@i,c
 24870  002AD8  D001               	goto	i2l1846
 24871  002ADA  D00E               	goto	i2u978_40
 24872  002ADC                     i2l1846:
 24873                           
 24874                           ;usb_device.c: 264: {
 24875                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24876  002ADC  5009               	movf	i2USBDeviceInit@i,w,c
 24877  002ADE  0D04               	mullw	4
 24878  002AE0  0E00               	movlw	0
 24879  002AE2  24F3               	addwf	prodl,w,c
 24880  002AE4  6ED9               	movwf	fsr2l,c
 24881  002AE6  0E04               	movlw	4
 24882  002AE8  20F4               	addwfc	prodh,w,c
 24883  002AEA  6EDA               	movwf	fsr2h,c
 24884  002AEC  6ADE               	clrf	postinc2,c
 24885  002AEE  6ADE               	clrf	postinc2,c
 24886  002AF0  6ADE               	clrf	postinc2,c
 24887  002AF2  6ADD               	clrf	postdec2,c
 24888  002AF4  2A09               	incf	i2USBDeviceInit@i,f,c
 24889  002AF6  D7EE               	goto	i2l11139
 24890  002AF8                     i2u978_40:
 24891                           
 24892                           ;usb_device.c: 266: }
 24893                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24894  002AF8  8C60               	bsf	3936,6,c	;volatile
 24895                           
 24896                           ;usb_device.c: 272: UADDR = 0x00;
 24897  002AFA  0E00               	movlw	0
 24898  002AFC  6E63               	movwf	3939,c	;volatile
 24899                           
 24900                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24901  002AFE  9860               	bcf	3936,4,c	;volatile
 24902                           
 24903                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24904  002B00  9C60               	bcf	3936,6,c	;volatile
 24905                           
 24906                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24907  002B02  D00A               	goto	i2l1848
 24908  002B04                     
 24909                           ;usb_device.c: 282: {
 24910                           ;usb_device.c: 283: (UIR &= 0xF7);
 24911  002B04  9665               	bcf	3941,3,c	;volatile
 24912                           
 24913                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24914  002B06  0E00               	movlw	0
 24915  002B08  0100               	movlb	0	; () banked
 24916  002B0A  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24917                           
 24918                           ; BSR set to: 0
 24919                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24920  002B0C  0E00               	movlw	0
 24921  002B0E  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24922                           
 24923                           ; BSR set to: 0
 24924                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24925  002B10  0E00               	movlw	0
 24926  002B12  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24927  002B14  0E00               	movlw	0
 24928  002B16  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24929  002B18                     i2l1848:
 24930                           
 24931                           ; BSR set to: 0
 24932  002B18  B665               	btfsc	3941,3,c	;volatile
 24933  002B1A  D7F4               	goto	i2l1849
 24934                           
 24935                           ;usb_device.c: 288: }
 24936                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24937  002B1C  0E01               	movlw	1
 24938  002B1E  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24939                           
 24940                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24941  002B20  0E01               	movlw	1
 24942  002B22  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24943                           
 24944                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24945  002B24  0E00               	movlw	0
 24946  002B26  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24947                           
 24948                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24949  002B28  0E00               	movlw	0
 24950  002B2A  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24951                           
 24952                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24953  002B2C  0E00               	movlw	0
 24954  002B2E  0101               	movlb	1	; () banked
 24955  002B30  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24956                           
 24957                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24958  002B32  0E00               	movlw	0
 24959  002B34  6E09               	movwf	i2USBDeviceInit@i,c
 24960  002B36                     i2l11167:
 24961                           
 24962                           ; BSR set to: 1
 24963  002B36  0E02               	movlw	2
 24964  002B38  6409               	cpfsgt	i2USBDeviceInit@i,c
 24965  002B3A  D001               	goto	i2l1851
 24966  002B3C  D02E               	goto	i2u981_40
 24967  002B3E                     i2l1851:
 24968                           
 24969                           ;usb_device.c: 302: {
 24970                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24971                           
 24972                           ; BSR set to: 1
 24973  002B3E  5009               	movf	i2USBDeviceInit@i,w,c
 24974  002B40  0D02               	mullw	2
 24975  002B42  0ECA               	movlw	low _pBDTEntryIn
 24976  002B44  24F3               	addwf	prodl,w,c
 24977  002B46  6ED9               	movwf	fsr2l,c
 24978  002B48  0E00               	movlw	high _pBDTEntryIn
 24979  002B4A  20F4               	addwfc	prodh,w,c
 24980  002B4C  6EDA               	movwf	fsr2h,c
 24981  002B4E  0E00               	movlw	0
 24982  002B50  6EDE               	movwf	postinc2,c
 24983  002B52  0E00               	movlw	0
 24984  002B54  6EDD               	movwf	postdec2,c
 24985                           
 24986                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24987  002B56  5009               	movf	i2USBDeviceInit@i,w,c
 24988  002B58  0D02               	mullw	2
 24989  002B5A  0E40               	movlw	low _pBDTEntryOut
 24990  002B5C  24F3               	addwf	prodl,w,c
 24991  002B5E  6ED9               	movwf	fsr2l,c
 24992  002B60  0E01               	movlw	high _pBDTEntryOut
 24993  002B62  20F4               	addwfc	prodh,w,c
 24994  002B64  6EDA               	movwf	fsr2h,c
 24995  002B66  0E00               	movlw	0
 24996  002B68  6EDE               	movwf	postinc2,c
 24997  002B6A  0E00               	movlw	0
 24998  002B6C  6EDD               	movwf	postdec2,c
 24999                           
 25000                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25001  002B6E  5009               	movf	i2USBDeviceInit@i,w,c
 25002  002B70  0D01               	mullw	1
 25003  002B72  0ED3               	movlw	low _ep_data_in
 25004  002B74  24F3               	addwf	prodl,w,c
 25005  002B76  6ED9               	movwf	fsr2l,c
 25006  002B78  0E00               	movlw	high _ep_data_in
 25007  002B7A  20F4               	addwfc	prodh,w,c
 25008  002B7C  6EDA               	movwf	fsr2h,c
 25009  002B7E  0E00               	movlw	0
 25010  002B80  6EDF               	movwf	indf2,c
 25011                           
 25012                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25013  002B82  5009               	movf	i2USBDeviceInit@i,w,c
 25014  002B84  0D01               	mullw	1
 25015  002B86  0ED0               	movlw	low _ep_data_out
 25016  002B88  24F3               	addwf	prodl,w,c
 25017  002B8A  6ED9               	movwf	fsr2l,c
 25018  002B8C  0E00               	movlw	high _ep_data_out
 25019  002B8E  20F4               	addwfc	prodh,w,c
 25020  002B90  6EDA               	movwf	fsr2h,c
 25021  002B92  0E00               	movlw	0
 25022  002B94  6EDF               	movwf	indf2,c
 25023  002B96  2A09               	incf	i2USBDeviceInit@i,f,c
 25024  002B98  D7CE               	goto	i2l11167
 25025  002B9A                     i2u981_40:
 25026                           
 25027                           ;usb_device.c: 307: }
 25028                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25029  002B9A  0E08               	movlw	8
 25030  002B9C  0100               	movlb	0	; () banked
 25031  002B9E  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 25032  002BA0  0E04               	movlw	4
 25033  002BA2  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25034                           
 25035                           ; BSR set to: 0
 25036                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25037  002BA4  0E16               	movlw	22
 25038  002BA6  6E6A               	movwf	3946,c	;volatile
 25039                           
 25040                           ; BSR set to: 0
 25041                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25042  002BA8  0E04               	movlw	4
 25043  002BAA  0104               	movlb	4	; () banked
 25044  002BAC  6F03               	movwf	3,b	;volatile
 25045  002BAE  0E30               	movlw	48
 25046  002BB0  6F02               	movwf	2,b	;volatile
 25047                           
 25048                           ; BSR set to: 4
 25049                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25050  002BB2  0E08               	movlw	8
 25051  002BB4  6F01               	movwf	1,b	;volatile
 25052                           
 25053                           ; BSR set to: 4
 25054                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25055  002BB6  0E04               	movlw	4
 25056  002BB8  6F00               	movwf	0,b	;volatile
 25057                           
 25058                           ; BSR set to: 4
 25059                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25060  002BBA  8F00               	bsf	0,7,b	;volatile
 25061                           
 25062                           ; BSR set to: 4
 25063                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25064  002BBC  0E00               	movlw	0
 25065  002BBE  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 25066                           
 25067                           ; BSR set to: 4
 25068                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25069  002BC0  0E00               	movlw	0
 25070  002BC2  0100               	movlb	0	; () banked
 25071  002BC4  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25072                           
 25073                           ; BSR set to: 0
 25074  002BC6  0012               	return		;funcret
 25075  002BC8                     __end_ofi2_USBDeviceInit:
 25076                           	opt stack 0
 25077                           pclatu	equ	0xFFB
 25078                           pclath	equ	0xFFA
 25079                           tblptru	equ	0xFF8
 25080                           tblptrh	equ	0xFF7
 25081                           tblptrl	equ	0xFF6
 25082                           tablat	equ	0xFF5
 25083                           prodh	equ	0xFF4
 25084                           prodl	equ	0xFF3
 25085                           intcon	equ	0xFF2
 25086                           intcon2	equ	0xFF1
 25087                           intcon3	equ	0xFF0
 25088                           indf0	equ	0xFEF
 25089                           postinc0	equ	0xFEE
 25090                           fsr0h	equ	0xFEA
 25091                           fsr0l	equ	0xFE9
 25092                           wreg	equ	0xFE8
 25093                           indf1	equ	0xFE7
 25094                           postdec1	equ	0xFE5
 25095                           fsr1h	equ	0xFE2
 25096                           fsr1l	equ	0xFE1
 25097                           indf2	equ	0xFDF
 25098                           postinc2	equ	0xFDE
 25099                           postdec2	equ	0xFDD
 25100                           plusw2	equ	0xFDB
 25101                           fsr2h	equ	0xFDA
 25102                           fsr2l	equ	0xFD9
 25103                           status	equ	0xFD8
 25104                           
 25105 ;; *************** function _USBWakeFromSuspend *****************
 25106 ;; Defined at:
 25107 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25108 ;; Parameters:    Size  Location     Type
 25109 ;;		None
 25110 ;; Auto vars:     Size  Location     Type
 25111 ;;		None
 25112 ;; Return value:  Size  Location     Type
 25113 ;;                  1    wreg      void 
 25114 ;; Registers used:
 25115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25116 ;; Tracked objects:
 25117 ;;		On entry : 0/0
 25118 ;;		On exit  : 0/0
 25119 ;;		Unchanged: 0/0
 25120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25121 ;;      Params:         0       0       0       0       0       0       0       0       0
 25122 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25124 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25125 ;;Total ram usage:        0 bytes
 25126 ;; Hardware stack levels used:    1
 25127 ;; Hardware stack levels required when called:    5
 25128 ;; This function calls:
 25129 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25130 ;; This function is called by:
 25131 ;;		_USBDeviceTasks
 25132 ;; This function uses a non-reentrant model
 25133 ;;
 25134                           
 25135                           	psect	text110
 25136  00547A                     __ptext110:
 25137                           	opt stack 0
 25138  00547A                     _USBWakeFromSuspend:
 25139                           	opt stack 14
 25140                           
 25141                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;incstack = 0
 25145  00547A  0E00               	movlw	0
 25146  00547C  0101               	movlb	1	; () banked
 25147  00547E  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25148                           
 25149                           ; BSR set to: 1
 25150                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25151  005480  0E00               	movlw	0
 25152  005482  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25153  005484  0E74               	movlw	116
 25154  005486  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25155  005488  0E00               	movlw	0
 25156  00548A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25157  00548C  0E00               	movlw	0
 25158  00548E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25159  005490  0E00               	movlw	0
 25160  005492  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25161  005494  0E00               	movlw	0
 25162  005496  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25163  005498  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25164                           
 25165                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25166  00549C  9260               	bcf	3936,1,c	;volatile
 25167                           
 25168                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25169  00549E  9464               	bcf	3940,2,c	;volatile
 25170                           
 25171                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25172  0054A0  D001               	goto	i2l2017
 25173  0054A2                     
 25174                           ;usb_device.c: 1977: {
 25175                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25176  0054A2  9465               	bcf	3941,2,c	;volatile
 25177  0054A4                     i2l2017:
 25178  0054A4  A465               	btfss	3941,2,c	;volatile
 25179  0054A6  0012               	return	
 25180  0054A8  D7FC               	goto	i2l2018
 25181  0054AA                     __end_of_USBWakeFromSuspend:
 25182                           	opt stack 0
 25183                           pclatu	equ	0xFFB
 25184                           pclath	equ	0xFFA
 25185                           tblptru	equ	0xFF8
 25186                           tblptrh	equ	0xFF7
 25187                           tblptrl	equ	0xFF6
 25188                           tablat	equ	0xFF5
 25189                           prodh	equ	0xFF4
 25190                           prodl	equ	0xFF3
 25191                           intcon	equ	0xFF2
 25192                           intcon2	equ	0xFF1
 25193                           intcon3	equ	0xFF0
 25194                           indf0	equ	0xFEF
 25195                           postinc0	equ	0xFEE
 25196                           fsr0h	equ	0xFEA
 25197                           fsr0l	equ	0xFE9
 25198                           wreg	equ	0xFE8
 25199                           indf1	equ	0xFE7
 25200                           postdec1	equ	0xFE5
 25201                           fsr1h	equ	0xFE2
 25202                           fsr1l	equ	0xFE1
 25203                           indf2	equ	0xFDF
 25204                           postinc2	equ	0xFDE
 25205                           postdec2	equ	0xFDD
 25206                           plusw2	equ	0xFDB
 25207                           fsr2h	equ	0xFDA
 25208                           fsr2l	equ	0xFD9
 25209                           status	equ	0xFD8
 25210                           
 25211 ;; *************** function _USBSuspend *****************
 25212 ;; Defined at:
 25213 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 25214 ;; Parameters:    Size  Location     Type
 25215 ;;		None
 25216 ;; Auto vars:     Size  Location     Type
 25217 ;;		None
 25218 ;; Return value:  Size  Location     Type
 25219 ;;                  1    wreg      void 
 25220 ;; Registers used:
 25221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25222 ;; Tracked objects:
 25223 ;;		On entry : 0/0
 25224 ;;		On exit  : 0/0
 25225 ;;		Unchanged: 0/0
 25226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25227 ;;      Params:         0       0       0       0       0       0       0       0       0
 25228 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25230 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25231 ;;Total ram usage:        0 bytes
 25232 ;; Hardware stack levels used:    1
 25233 ;; Hardware stack levels required when called:    5
 25234 ;; This function calls:
 25235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25236 ;; This function is called by:
 25237 ;;		_USBDeviceTasks
 25238 ;; This function uses a non-reentrant model
 25239 ;;
 25240                           
 25241                           	psect	text111
 25242  0055BC                     __ptext111:
 25243                           	opt stack 0
 25244  0055BC                     _USBSuspend:
 25245                           	opt stack 14
 25246                           
 25247                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 25248                           
 25249                           ;incstack = 0
 25250  0055BC  8464               	bsf	3940,2,c	;volatile
 25251                           
 25252                           ;usb_device.c: 1915: (UIR &= 0xEF);
 25253  0055BE  9865               	bcf	3941,4,c	;volatile
 25254                           
 25255                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 25256  0055C0  8260               	bsf	3936,1,c	;volatile
 25257                           
 25258                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25259  0055C2  0E01               	movlw	1
 25260  0055C4  0101               	movlb	1	; () banked
 25261  0055C6  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25262                           
 25263                           ; BSR set to: 1
 25264                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25265  0055C8  0E00               	movlw	0
 25266  0055CA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25267  0055CC  0E75               	movlw	117
 25268  0055CE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25269  0055D0  0E00               	movlw	0
 25270  0055D2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25271  0055D4  0E00               	movlw	0
 25272  0055D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25273  0055D8  0E00               	movlw	0
 25274  0055DA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25275  0055DC  0E00               	movlw	0
 25276  0055DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25277  0055E0  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25278  0055E4  0012               	return		;funcret
 25279  0055E6                     __end_of_USBSuspend:
 25280                           	opt stack 0
 25281                           pclatu	equ	0xFFB
 25282                           pclath	equ	0xFFA
 25283                           tblptru	equ	0xFF8
 25284                           tblptrh	equ	0xFF7
 25285                           tblptrl	equ	0xFF6
 25286                           tablat	equ	0xFF5
 25287                           prodh	equ	0xFF4
 25288                           prodl	equ	0xFF3
 25289                           intcon	equ	0xFF2
 25290                           intcon2	equ	0xFF1
 25291                           intcon3	equ	0xFF0
 25292                           indf0	equ	0xFEF
 25293                           postinc0	equ	0xFEE
 25294                           fsr0h	equ	0xFEA
 25295                           fsr0l	equ	0xFE9
 25296                           wreg	equ	0xFE8
 25297                           indf1	equ	0xFE7
 25298                           postdec1	equ	0xFE5
 25299                           fsr1h	equ	0xFE2
 25300                           fsr1l	equ	0xFE1
 25301                           indf2	equ	0xFDF
 25302                           postinc2	equ	0xFDE
 25303                           postdec2	equ	0xFDD
 25304                           plusw2	equ	0xFDB
 25305                           fsr2h	equ	0xFDA
 25306                           fsr2l	equ	0xFD9
 25307                           status	equ	0xFD8
 25308                           
 25309 ;; *************** function _USBStallHandler *****************
 25310 ;; Defined at:
 25311 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25312 ;; Parameters:    Size  Location     Type
 25313 ;;		None
 25314 ;; Auto vars:     Size  Location     Type
 25315 ;;		None
 25316 ;; Return value:  Size  Location     Type
 25317 ;;                  1    wreg      void 
 25318 ;; Registers used:
 25319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25320 ;; Tracked objects:
 25321 ;;		On entry : 0/0
 25322 ;;		On exit  : 0/0
 25323 ;;		Unchanged: 0/0
 25324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25325 ;;      Params:         0       0       0       0       0       0       0       0       0
 25326 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25327 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25328 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25329 ;;Total ram usage:        1 bytes
 25330 ;; Hardware stack levels used:    1
 25331 ;; This function calls:
 25332 ;;		Nothing
 25333 ;; This function is called by:
 25334 ;;		_USBDeviceTasks
 25335 ;; This function uses a non-reentrant model
 25336 ;;
 25337                           
 25338                           	psect	text112
 25339  0050CE                     __ptext112:
 25340                           	opt stack 0
 25341  0050CE                     _USBStallHandler:
 25342                           	opt stack 19
 25343                           
 25344                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25345                           
 25346                           ;incstack = 0
 25347  0050CE  A06A               	btfss	3946,0,c	;volatile
 25348  0050D0  D01D               	goto	i2l2009
 25349                           
 25350                           ;usb_device.c: 1859: {
 25351                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25352  0050D2  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25353  0050D6  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25354  0050DA  0E80               	movlw	128
 25355  0050DC  18DE               	xorwf	postinc2,w,c
 25356  0050DE  A4D8               	btfss	status,2,c
 25357  0050E0  D014               	goto	i2l2010
 25358  0050E2  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25359  0050E6  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25360  0050EA  0E84               	movlw	132
 25361  0050EC  18DE               	xorwf	postinc2,w,c
 25362  0050EE  A4D8               	btfss	status,2,c
 25363  0050F0  D00C               	goto	i2l2010
 25364                           
 25365                           ;usb_device.c: 1862: {
 25366                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25367  0050F2  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25368  0050F6  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25369  0050FA  0E0C               	movlw	12
 25370  0050FC  6EDF               	movwf	indf2,c
 25371                           
 25372                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25373  0050FE  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25374  005102  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25375  005106  0E00               	movlw	0
 25376  005108  8EDB               	bsf	plusw2,7,c
 25377  00510A                     i2l2010:
 25378                           
 25379                           ;usb_device.c: 1866: }
 25380                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25381  00510A  906A               	bcf	3946,0,c	;volatile
 25382  00510C                     i2l2009:
 25383                           
 25384                           ;usb_device.c: 1868: }
 25385                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25386  00510C  9A65               	bcf	3941,5,c	;volatile
 25387  00510E  0012               	return		;funcret
 25388  005110                     __end_of_USBStallHandler:
 25389                           	opt stack 0
 25390                           pclatu	equ	0xFFB
 25391                           pclath	equ	0xFFA
 25392                           tblptru	equ	0xFF8
 25393                           tblptrh	equ	0xFF7
 25394                           tblptrl	equ	0xFF6
 25395                           tablat	equ	0xFF5
 25396                           prodh	equ	0xFF4
 25397                           prodl	equ	0xFF3
 25398                           intcon	equ	0xFF2
 25399                           intcon2	equ	0xFF1
 25400                           intcon3	equ	0xFF0
 25401                           indf0	equ	0xFEF
 25402                           postinc0	equ	0xFEE
 25403                           fsr0h	equ	0xFEA
 25404                           fsr0l	equ	0xFE9
 25405                           wreg	equ	0xFE8
 25406                           indf1	equ	0xFE7
 25407                           postdec1	equ	0xFE5
 25408                           fsr1h	equ	0xFE2
 25409                           fsr1l	equ	0xFE1
 25410                           indf2	equ	0xFDF
 25411                           postinc2	equ	0xFDE
 25412                           postdec2	equ	0xFDD
 25413                           plusw2	equ	0xFDB
 25414                           fsr2h	equ	0xFDA
 25415                           fsr2l	equ	0xFD9
 25416                           status	equ	0xFD8
 25417                           
 25418 ;; *************** function _USBCtrlEPService *****************
 25419 ;; Defined at:
 25420 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;		None
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25425 ;; Return value:  Size  Location     Type
 25426 ;;                  1    wreg      void 
 25427 ;; Registers used:
 25428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25429 ;; Tracked objects:
 25430 ;;		On entry : 0/0
 25431 ;;		On exit  : 0/0
 25432 ;;		Unchanged: 0/0
 25433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25434 ;;      Params:         0       0       0       0       0       0       0       0       0
 25435 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25436 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25437 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25438 ;;Total ram usage:        3 bytes
 25439 ;; Hardware stack levels used:    1
 25440 ;; Hardware stack levels required when called:    8
 25441 ;; This function calls:
 25442 ;;		_USBCtrlTrfInHandler
 25443 ;;		_USBCtrlTrfOutHandler
 25444 ;;		_USBCtrlTrfSetupHandler
 25445 ;; This function is called by:
 25446 ;;		_USBDeviceTasks
 25447 ;; This function uses a non-reentrant model
 25448 ;;
 25449                           
 25450                           	psect	text113
 25451  0037EA                     __ptext113:
 25452                           	opt stack 0
 25453  0037EA                     _USBCtrlEPService:
 25454                           	opt stack 11
 25455                           
 25456                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25457                           
 25458                           ;incstack = 0
 25459  0037EA  0E2D               	movlw	45
 25460  0037EC  6E48               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25461                           
 25462                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25463  0037EE  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25464  0037F2  0EFD               	movlw	253
 25465  0037F4  161C               	andwf	??_USBCtrlEPService,f,c
 25466  0037F6  A4D8               	btfss	status,2,c
 25467  0037F8  D057               	goto	i2l2023
 25468                           
 25469                           ;usb_device.c: 2013: {
 25470                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25471  0037FA  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25472  0037FE  90D8               	bcf	status,0,c
 25473  003800  321C               	rrcf	??_USBCtrlEPService,f,c
 25474  003802  0E3F               	movlw	63
 25475  003804  161C               	andwf	??_USBCtrlEPService,f,c
 25476  003806  501C               	movf	??_USBCtrlEPService,w,c
 25477  003808  0D04               	mullw	4
 25478  00380A  0E00               	movlw	0
 25479  00380C  24F3               	addwf	prodl,w,c
 25480  00380E  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 25481  003810  0E04               	movlw	4
 25482  003812  20F4               	addwfc	prodh,w,c
 25483  003814  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25484                           
 25485                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25486  003816  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25487  00381A  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25488                           
 25489                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25490  00381E  0E04               	movlw	4
 25491  003820  1A35               	xorwf	_pBDTEntryEP0OutNext,f,c
 25492                           
 25493                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25494  003822  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25495  003826  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25496  00382A  30DF               	rrcf	indf2,w,c
 25497  00382C  32E8               	rrcf	wreg,f,c
 25498  00382E  0B0F               	andlw	15
 25499  003830  0A0D               	xorlw	13
 25500  003832  A4D8               	btfss	status,2,c
 25501  003834  D036               	goto	i2l2024
 25502                           
 25503                           ;usb_device.c: 2025: {
 25504                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25505                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25506  003836  0E00               	movlw	0
 25507  003838  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25508  00383A                     i2l11103:
 25509  00383A  0E07               	movlw	7
 25510  00383C  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25511  00383E  D001               	goto	i2l2025
 25512  003840  D023               	goto	i2u975_40
 25513  003842                     i2l2025:
 25514                           
 25515                           ;usb_device.c: 2033: {
 25516                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25517  003842  EE20 F002          	lfsr	2,2
 25518  003846  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25519  003848  26D9               	addwf	fsr2l,f,c
 25520  00384A  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25521  00384C  22DA               	addwfc	fsr2h,f,c
 25522  00384E  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25523  003852  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25524  003856  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25525  00385A  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25526  00385E  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25527  003860  0D01               	mullw	1
 25528  003862  0E30               	movlw	48
 25529  003864  24F3               	addwf	prodl,w,c
 25530  003866  6EE1               	movwf	fsr1l,c
 25531  003868  0E04               	movlw	4
 25532  00386A  20F4               	addwfc	prodh,w,c
 25533  00386C  6EE2               	movwf	fsr1h,c
 25534  00386E  CFDF FFE7          	movff	indf2,indf1
 25535                           
 25536                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25537  003872  EE20 F002          	lfsr	2,2
 25538  003876  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25539  003878  26D9               	addwf	fsr2l,f,c
 25540  00387A  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25541  00387C  22DA               	addwfc	fsr2h,f,c
 25542  00387E  2ADE               	incf	postinc2,f,c
 25543  003880  0E00               	movlw	0
 25544  003882  22DD               	addwfc	postdec2,f,c
 25545  003884  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25546  003886  D7D9               	goto	i2l11103
 25547  003888                     i2u975_40:
 25548                           
 25549                           ;usb_device.c: 2036: }
 25550                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25551  003888  EE20 F002          	lfsr	2,2
 25552  00388C  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 25553  00388E  26D9               	addwf	fsr2l,f,c
 25554  003890  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25555  003892  22DA               	addwfc	fsr2h,f,c
 25556  003894  0E30               	movlw	48
 25557  003896  6EDE               	movwf	postinc2,c
 25558  003898  0E04               	movlw	4
 25559  00389A  6EDD               	movwf	postdec2,c
 25560                           
 25561                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25562  00389C  EC49  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 25563                           
 25564                           ;usb_device.c: 2041: }
 25565  0038A0  0012               	return	
 25566  0038A2                     i2l2024:
 25567                           
 25568                           ;usb_device.c: 2042: else
 25569                           ;usb_device.c: 2043: {
 25570                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25571  0038A2  EC03  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 25572                           
 25573                           ;usb_device.c: 2046: }
 25574                           ;usb_device.c: 2047: }
 25575  0038A6  0012               	return	
 25576  0038A8                     i2l2023:
 25577                           
 25578                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25579  0038A8  5059               	movf	_USTATcopy,w,c	;volatile
 25580  0038AA  0BFD               	andlw	253
 25581  0038AC  0A04               	xorlw	4
 25582  0038AE  A4D8               	btfss	status,2,c
 25583  0038B0  0012               	return	
 25584                           
 25585                           ;usb_device.c: 2049: {
 25586                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25587  0038B2  ECD1  F019         	call	_USBCtrlTrfInHandler	;wreg free
 25588  0038B6  0012               	return	
 25589  0038B8                     __end_of_USBCtrlEPService:
 25590                           	opt stack 0
 25591                           pclatu	equ	0xFFB
 25592                           pclath	equ	0xFFA
 25593                           tblptru	equ	0xFF8
 25594                           tblptrh	equ	0xFF7
 25595                           tblptrl	equ	0xFF6
 25596                           tablat	equ	0xFF5
 25597                           prodh	equ	0xFF4
 25598                           prodl	equ	0xFF3
 25599                           intcon	equ	0xFF2
 25600                           intcon2	equ	0xFF1
 25601                           intcon3	equ	0xFF0
 25602                           indf0	equ	0xFEF
 25603                           postinc0	equ	0xFEE
 25604                           fsr0h	equ	0xFEA
 25605                           fsr0l	equ	0xFE9
 25606                           wreg	equ	0xFE8
 25607                           indf1	equ	0xFE7
 25608                           postdec1	equ	0xFE5
 25609                           fsr1h	equ	0xFE2
 25610                           fsr1l	equ	0xFE1
 25611                           indf2	equ	0xFDF
 25612                           postinc2	equ	0xFDE
 25613                           postdec2	equ	0xFDD
 25614                           plusw2	equ	0xFDB
 25615                           fsr2h	equ	0xFDA
 25616                           fsr2l	equ	0xFD9
 25617                           status	equ	0xFD8
 25618                           
 25619 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25620 ;; Defined at:
 25621 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25622 ;; Parameters:    Size  Location     Type
 25623 ;;		None
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;		None
 25626 ;; Return value:  Size  Location     Type
 25627 ;;                  1    wreg      void 
 25628 ;; Registers used:
 25629 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25630 ;; Tracked objects:
 25631 ;;		On entry : 0/0
 25632 ;;		On exit  : 0/0
 25633 ;;		Unchanged: 0/0
 25634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25635 ;;      Params:         0       0       0       0       0       0       0       0       0
 25636 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25638 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25639 ;;Total ram usage:        0 bytes
 25640 ;; Hardware stack levels used:    1
 25641 ;; Hardware stack levels required when called:    7
 25642 ;; This function calls:
 25643 ;;		_USBCheckStdRequest
 25644 ;;		_USBCtrlEPServiceComplete
 25645 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25646 ;; This function is called by:
 25647 ;;		_USBCtrlEPService
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text114
 25652  004692                     __ptext114:
 25653                           	opt stack 0
 25654  004692                     _USBCtrlTrfSetupHandler:
 25655                           	opt stack 11
 25656                           
 25657                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25658                           
 25659                           ;incstack = 0
 25660  004692  0E00               	movlw	0
 25661  004694  6E4D               	movwf	_shortPacketStatus,c	;volatile
 25662                           
 25663                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25664  004696  0E00               	movlw	0
 25665  004698  6E47               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25666                           
 25667                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25668  00469A  0E00               	movlw	0
 25669  00469C  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25670                           
 25671                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25672  00469E  0E00               	movlw	0
 25673  0046A0  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25674                           
 25675                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25676  0046A2  0E00               	movlw	0
 25677  0046A4  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25678                           
 25679                           ;usb_device.c: 2107: controlTransferState = 0;
 25680  0046A6  0E00               	movlw	0
 25681  0046A8  6E4C               	movwf	_controlTransferState,c	;volatile
 25682                           
 25683                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25684  0046AA  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25685  0046AE  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25686  0046B2  0E7F               	movlw	127
 25687  0046B4  16DF               	andwf	indf2,f,c
 25688                           
 25689                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25690  0046B6  0E04               	movlw	4
 25691  0046B8  0100               	movlb	0	; () banked
 25692  0046BA  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25696  0046BC  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25697  0046C0  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25698  0046C4  0E7F               	movlw	127
 25699  0046C6  16DF               	andwf	indf2,f,c
 25700                           
 25701                           ; BSR set to: 0
 25702                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25703  0046C8  0E04               	movlw	4
 25704  0046CA  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25705                           
 25706                           ; BSR set to: 0
 25707                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25708  0046CC  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25709  0046D0  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25710  0046D4  0E7F               	movlw	127
 25711  0046D6  16DF               	andwf	indf2,f,c
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25715  0046D8  0E00               	movlw	0
 25716  0046DA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25717                           
 25718                           ; BSR set to: 0
 25719                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25720  0046DC  0E00               	movlw	0
 25721  0046DE  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25722  0046E0  0E00               	movlw	0
 25723  0046E2  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25724                           
 25725                           ; BSR set to: 0
 25726                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25727  0046E4  0E00               	movlw	0
 25728  0046E6  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25732  0046E8  0E00               	movlw	0
 25733  0046EA  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25734  0046EC  0E00               	movlw	0
 25735  0046EE  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;usb_device.c: 2131: USBCheckStdRequest();
 25739  0046F0  ECEF  F018         	call	_USBCheckStdRequest	;wreg free
 25740                           
 25741                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25742  0046F4  0E00               	movlw	0
 25743  0046F6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25744  0046F8  0E03               	movlw	3
 25745  0046FA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25746  0046FC  0E00               	movlw	0
 25747  0046FE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25748  004700  0E00               	movlw	0
 25749  004702  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25750  004704  0E00               	movlw	0
 25751  004706  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25752  004708  0E00               	movlw	0
 25753  00470A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25754  00470C  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25755                           
 25756                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25757  004710  EC8D  F017         	call	_USBCtrlEPServiceComplete	;wreg free
 25758  004714  0012               	return		;funcret
 25759  004716                     __end_of_USBCtrlTrfSetupHandler:
 25760                           	opt stack 0
 25761                           pclatu	equ	0xFFB
 25762                           pclath	equ	0xFFA
 25763                           tblptru	equ	0xFF8
 25764                           tblptrh	equ	0xFF7
 25765                           tblptrl	equ	0xFF6
 25766                           tablat	equ	0xFF5
 25767                           prodh	equ	0xFF4
 25768                           prodl	equ	0xFF3
 25769                           intcon	equ	0xFF2
 25770                           intcon2	equ	0xFF1
 25771                           intcon3	equ	0xFF0
 25772                           indf0	equ	0xFEF
 25773                           postinc0	equ	0xFEE
 25774                           fsr0h	equ	0xFEA
 25775                           fsr0l	equ	0xFE9
 25776                           wreg	equ	0xFE8
 25777                           indf1	equ	0xFE7
 25778                           postdec1	equ	0xFE5
 25779                           fsr1h	equ	0xFE2
 25780                           fsr1l	equ	0xFE1
 25781                           indf2	equ	0xFDF
 25782                           postinc2	equ	0xFDE
 25783                           postdec2	equ	0xFDD
 25784                           plusw2	equ	0xFDB
 25785                           fsr2h	equ	0xFDA
 25786                           fsr2l	equ	0xFD9
 25787                           status	equ	0xFD8
 25788                           
 25789 ;; *************** function _USBCtrlEPServiceComplete *****************
 25790 ;; Defined at:
 25791 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25792 ;; Parameters:    Size  Location     Type
 25793 ;;		None
 25794 ;; Auto vars:     Size  Location     Type
 25795 ;;		None
 25796 ;; Return value:  Size  Location     Type
 25797 ;;                  1    wreg      void 
 25798 ;; Registers used:
 25799 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25800 ;; Tracked objects:
 25801 ;;		On entry : 0/0
 25802 ;;		On exit  : 0/0
 25803 ;;		Unchanged: 0/0
 25804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25805 ;;      Params:         0       0       0       0       0       0       0       0       0
 25806 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25808 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25809 ;;Total ram usage:        0 bytes
 25810 ;; Hardware stack levels used:    1
 25811 ;; Hardware stack levels required when called:    2
 25812 ;; This function calls:
 25813 ;;		_USBCtrlEPAllowDataStage
 25814 ;;		_USBCtrlEPAllowStatusStage
 25815 ;; This function is called by:
 25816 ;;		_USBCtrlTrfSetupHandler
 25817 ;; This function uses a non-reentrant model
 25818 ;;
 25819                           
 25820                           	psect	text115
 25821  002F1A                     __ptext115:
 25822                           	opt stack 0
 25823  002F1A                     _USBCtrlEPServiceComplete:
 25824                           	opt stack 15
 25825                           
 25826                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25827                           
 25828                           ;incstack = 0
 25829  002F1A  9860               	bcf	3936,4,c	;volatile
 25830                           
 25831                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25832  002F1C  0100               	movlb	0	; () banked
 25833  002F1E  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25834  002F20  D038               	goto	i2l1933
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;usb_device.c: 1295: {
 25838                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25839  002F22  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25840  002F24  D00B               	goto	i2l1934
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;usb_device.c: 1297: {
 25844                           ;usb_device.c: 1298: controlTransferState = 2;
 25845  002F26  0E02               	movlw	2
 25846  002F28  6E4C               	movwf	_controlTransferState,c	;volatile
 25847                           
 25848                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25849  002F2A  5043               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25850  002F2C  B4D8               	btfsc	status,2,c
 25851                           
 25852                           ; BSR set to: 0
 25853                           ;usb_device.c: 1310: {
 25854                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25855  002F2E  EC09  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25856                           
 25857                           ;usb_device.c: 1312: }
 25858                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25859  002F32  0E00               	movlw	0
 25860  002F34  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25861                           
 25862                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25863  002F36  0E00               	movlw	0
 25864  002F38  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25865                           
 25866                           ;usb_device.c: 1318: }
 25867  002F3A  0012               	return	
 25868  002F3C                     i2l1934:
 25869                           
 25870                           ;usb_device.c: 1319: else
 25871                           ;usb_device.c: 1320: {
 25872                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25873  002F3C  EE20 F001          	lfsr	2,1
 25874  002F40  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25875  002F42  26D9               	addwf	fsr2l,f,c
 25876  002F44  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25877  002F46  22DA               	addwfc	fsr2h,f,c
 25878  002F48  0E08               	movlw	8
 25879  002F4A  6EDF               	movwf	indf2,c
 25880                           
 25881                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25882  002F4C  EE20 F002          	lfsr	2,2
 25883  002F50  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25884  002F52  26D9               	addwf	fsr2l,f,c
 25885  002F54  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25886  002F56  22DA               	addwfc	fsr2h,f,c
 25887  002F58  0E30               	movlw	48
 25888  002F5A  6EDE               	movwf	postinc2,c
 25889  002F5C  0E04               	movlw	4
 25890  002F5E  6EDD               	movwf	postdec2,c
 25891                           
 25892                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25893  002F60  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25894  002F64  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25895  002F68  0E0C               	movlw	12
 25896  002F6A  6EDF               	movwf	indf2,c
 25897                           
 25898                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25899  002F6C  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25900  002F70  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25901  002F74  0E00               	movlw	0
 25902  002F76  8EDB               	bsf	plusw2,7,c
 25903                           
 25904                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25905  002F78  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25906  002F7C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25907  002F80  0E04               	movlw	4
 25908  002F82  6EDF               	movwf	indf2,c
 25909                           
 25910                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25911  002F84  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25912  002F88  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25913  002F8C  0E00               	movlw	0
 25914  002F8E  8EDB               	bsf	plusw2,7,c
 25915                           
 25916                           ;usb_device.c: 1331: }
 25917                           ;usb_device.c: 1332: }
 25918  002F90  0012               	return	
 25919  002F92                     i2l1933:
 25920                           
 25921                           ; BSR set to: 0
 25922                           ;usb_device.c: 1333: else
 25923                           ;usb_device.c: 1334: {
 25924                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25925  002F92  0104               	movlb	4	; () banked
 25926  002F94  AF30               	btfss	48,7,b	;volatile
 25927  002F96  D010               	goto	i2l1938
 25928                           
 25929                           ; BSR set to: 4
 25930                           ;usb_device.c: 1336: {
 25931                           ;usb_device.c: 1337: controlTransferState = 1;
 25932  002F98  0E01               	movlw	1
 25933  002F9A  6E4C               	movwf	_controlTransferState,c	;volatile
 25934                           
 25935                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25936  002F9C  5044               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25937  002F9E  B4D8               	btfsc	status,2,c
 25938                           
 25939                           ; BSR set to: 4
 25940                           ;usb_device.c: 1352: {
 25941                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 25942  002FA0  EC09  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25943                           
 25944                           ;usb_device.c: 1354: }
 25945                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 25946  002FA4  0E00               	movlw	0
 25947  002FA6  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25948                           
 25949                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 25950  002FA8  0E00               	movlw	0
 25951  002FAA  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25952                           
 25953                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 25954  002FAC  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25955  002FAE  A4D8               	btfss	status,2,c
 25956  002FB0  0012               	return	
 25957                           
 25958                           ;usb_device.c: 1379: {
 25959                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 25960  002FB2  EC25  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25961                           
 25962                           ;usb_device.c: 1381: }
 25963                           ;usb_device.c: 1382: }
 25964  002FB6  0012               	return	
 25965  002FB8                     i2l1938:
 25966                           
 25967                           ;usb_device.c: 1383: else
 25968                           ;usb_device.c: 1384: {
 25969                           ;usb_device.c: 1395: controlTransferState = 2;
 25970  002FB8  0E02               	movlw	2
 25971  002FBA  6E4C               	movwf	_controlTransferState,c	;volatile
 25972                           
 25973                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 25974  002FBC  EE20 F001          	lfsr	2,1
 25975  002FC0  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25976  002FC2  26D9               	addwf	fsr2l,f,c
 25977  002FC4  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25978  002FC6  22DA               	addwfc	fsr2h,f,c
 25979  002FC8  0E08               	movlw	8
 25980  002FCA  6EDF               	movwf	indf2,c
 25981                           
 25982                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25983  002FCC  EE20 F002          	lfsr	2,2
 25984  002FD0  5035               	movf	_pBDTEntryEP0OutNext,w,c
 25985  002FD2  26D9               	addwf	fsr2l,f,c
 25986  002FD4  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 25987  002FD6  22DA               	addwfc	fsr2h,f,c
 25988  002FD8  0E30               	movlw	48
 25989  002FDA  6EDE               	movwf	postinc2,c
 25990  002FDC  0E04               	movlw	4
 25991  002FDE  6EDD               	movwf	postdec2,c
 25992                           
 25993                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25994  002FE0  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25995  002FE4  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25996  002FE8  0E04               	movlw	4
 25997  002FEA  6EDF               	movwf	indf2,c
 25998                           
 25999                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26000  002FEC  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26001  002FF0  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26002  002FF4  0E00               	movlw	0
 26003  002FF6  8EDB               	bsf	plusw2,7,c
 26004                           
 26005                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26006  002FF8  0E00               	movlw	0
 26007  002FFA  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26008                           
 26009                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26010  002FFC  0E00               	movlw	0
 26011  002FFE  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26012                           
 26013                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26014  003000  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26015  003002  A4D8               	btfss	status,2,c
 26016  003004  0012               	return	
 26017                           
 26018                           ;usb_device.c: 1407: {
 26019                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26020  003006  EC25  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26021  00300A  0012               	return	
 26022  00300C                     __end_of_USBCtrlEPServiceComplete:
 26023                           	opt stack 0
 26024                           pclatu	equ	0xFFB
 26025                           pclath	equ	0xFFA
 26026                           tblptru	equ	0xFF8
 26027                           tblptrh	equ	0xFF7
 26028                           tblptrl	equ	0xFF6
 26029                           tablat	equ	0xFF5
 26030                           prodh	equ	0xFF4
 26031                           prodl	equ	0xFF3
 26032                           intcon	equ	0xFF2
 26033                           intcon2	equ	0xFF1
 26034                           intcon3	equ	0xFF0
 26035                           indf0	equ	0xFEF
 26036                           postinc0	equ	0xFEE
 26037                           fsr0h	equ	0xFEA
 26038                           fsr0l	equ	0xFE9
 26039                           wreg	equ	0xFE8
 26040                           indf1	equ	0xFE7
 26041                           postdec1	equ	0xFE5
 26042                           fsr1h	equ	0xFE2
 26043                           fsr1l	equ	0xFE1
 26044                           indf2	equ	0xFDF
 26045                           postinc2	equ	0xFDE
 26046                           postdec2	equ	0xFDD
 26047                           plusw2	equ	0xFDB
 26048                           fsr2h	equ	0xFDA
 26049                           fsr2l	equ	0xFD9
 26050                           status	equ	0xFD8
 26051                           
 26052 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26053 ;; Defined at:
 26054 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26055 ;; Parameters:    Size  Location     Type
 26056 ;;		None
 26057 ;; Auto vars:     Size  Location     Type
 26058 ;;		None
 26059 ;; Return value:  Size  Location     Type
 26060 ;;                  1    wreg      void 
 26061 ;; Registers used:
 26062 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26063 ;; Tracked objects:
 26064 ;;		On entry : 0/0
 26065 ;;		On exit  : 0/0
 26066 ;;		Unchanged: 0/0
 26067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26068 ;;      Params:         0       0       0       0       0       0       0       0       0
 26069 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26070 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26071 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26072 ;;Total ram usage:        0 bytes
 26073 ;; Hardware stack levels used:    1
 26074 ;; Hardware stack levels required when called:    1
 26075 ;; This function calls:
 26076 ;;		_USBCtrlTrfTxService
 26077 ;; This function is called by:
 26078 ;;		_USBCtrlEPServiceComplete
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           
 26082                           	psect	text116
 26083  004212                     __ptext116:
 26084                           	opt stack 0
 26085  004212                     _USBCtrlEPAllowDataStage:
 26086                           	opt stack 15
 26087                           
 26088                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26089                           
 26090                           ;incstack = 0
 26091  004212  0E00               	movlw	0
 26092  004214  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26093                           
 26094                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26095  004216  0E00               	movlw	0
 26096  004218  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26097                           
 26098                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26099  00421A  0E02               	movlw	2
 26100  00421C  184C               	xorwf	_controlTransferState,w,c	;volatile
 26101  00421E  A4D8               	btfss	status,2,c
 26102  004220  D01F               	goto	i2l1922
 26103                           
 26104                           ;usb_device.c: 1179: {
 26105                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26106  004222  EE20 F001          	lfsr	2,1
 26107  004226  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26108  004228  26D9               	addwf	fsr2l,f,c
 26109  00422A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26110  00422C  22DA               	addwfc	fsr2h,f,c
 26111  00422E  0E08               	movlw	8
 26112  004230  6EDF               	movwf	indf2,c
 26113                           
 26114                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26115  004232  EE20 F002          	lfsr	2,2
 26116  004236  5035               	movf	_pBDTEntryEP0OutNext,w,c
 26117  004238  26D9               	addwf	fsr2l,f,c
 26118  00423A  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 26119  00423C  22DA               	addwfc	fsr2h,f,c
 26120  00423E  0E38               	movlw	56
 26121  004240  6EDE               	movwf	postinc2,c
 26122  004242  0E04               	movlw	4
 26123  004244  6EDD               	movwf	postdec2,c
 26124                           
 26125                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26126  004246  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26127  00424A  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26128  00424E  0E48               	movlw	72
 26129  004250  6EDF               	movwf	indf2,c
 26130                           
 26131                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26132  004252  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26133  004256  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26134  00425A  0E00               	movlw	0
 26135  00425C  8EDB               	bsf	plusw2,7,c
 26136                           
 26137                           ;usb_device.c: 1185: }
 26138  00425E  0012               	return	
 26139  004260                     i2l1922:
 26140                           
 26141                           ;usb_device.c: 1186: else
 26142                           ;usb_device.c: 1187: {
 26143                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26144  004260  0100               	movlb	0	; () banked
 26145  004262  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26146  004264  0104               	movlb	4	; () banked
 26147  004266  5D36               	subwf	54,w,b	;volatile
 26148  004268  0100               	movlb	0	; () banked
 26149  00426A  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26150  00426C  0104               	movlb	4	; () banked
 26151  00426E  5937               	subwfb	55,w,b	;volatile
 26152  004270  B0D8               	btfsc	status,0,c
 26153  004272  D004               	goto	i2l1924
 26154                           
 26155                           ; BSR set to: 4
 26156                           ;usb_device.c: 1191: {
 26157                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26158  004274  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 26159  004278  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 26160  00427C                     i2l1924:
 26161                           
 26162                           ; BSR set to: 4
 26163                           ;usb_device.c: 1193: }
 26164                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26165                           
 26166                           ; BSR set to: 4
 26167  00427C  EC8B  F01B         	call	_USBCtrlTrfTxService	;wreg free
 26168                           
 26169                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26170  004280  0100               	movlb	0	; () banked
 26171  004282  EE20 F002          	lfsr	2,2
 26172  004286  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 26173  004288  26D9               	addwf	fsr2l,f,c
 26174  00428A  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26175  00428C  22DA               	addwfc	fsr2h,f,c
 26176  00428E  0E38               	movlw	56
 26177  004290  6EDE               	movwf	postinc2,c
 26178  004292  0E04               	movlw	4
 26179  004294  6EDD               	movwf	postdec2,c
 26180                           
 26181                           ; BSR set to: 0
 26182                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26183  004296  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26184  00429A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26185  00429E  0E48               	movlw	72
 26186  0042A0  6EDF               	movwf	indf2,c
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26190  0042A2  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26191  0042A6  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26192  0042AA  0E00               	movlw	0
 26193  0042AC  8EDB               	bsf	plusw2,7,c
 26194  0042AE  0012               	return	
 26195  0042B0                     __end_of_USBCtrlEPAllowDataStage:
 26196                           	opt stack 0
 26197                           pclatu	equ	0xFFB
 26198                           pclath	equ	0xFFA
 26199                           tblptru	equ	0xFF8
 26200                           tblptrh	equ	0xFF7
 26201                           tblptrl	equ	0xFF6
 26202                           tablat	equ	0xFF5
 26203                           prodh	equ	0xFF4
 26204                           prodl	equ	0xFF3
 26205                           intcon	equ	0xFF2
 26206                           intcon2	equ	0xFF1
 26207                           intcon3	equ	0xFF0
 26208                           indf0	equ	0xFEF
 26209                           postinc0	equ	0xFEE
 26210                           fsr0h	equ	0xFEA
 26211                           fsr0l	equ	0xFE9
 26212                           wreg	equ	0xFE8
 26213                           indf1	equ	0xFE7
 26214                           postdec1	equ	0xFE5
 26215                           fsr1h	equ	0xFE2
 26216                           fsr1l	equ	0xFE1
 26217                           indf2	equ	0xFDF
 26218                           postinc2	equ	0xFDE
 26219                           postdec2	equ	0xFDD
 26220                           plusw2	equ	0xFDB
 26221                           fsr2h	equ	0xFDA
 26222                           fsr2l	equ	0xFD9
 26223                           status	equ	0xFD8
 26224                           
 26225 ;; *************** function _USBCheckStdRequest *****************
 26226 ;; Defined at:
 26227 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 26228 ;; Parameters:    Size  Location     Type
 26229 ;;		None
 26230 ;; Auto vars:     Size  Location     Type
 26231 ;;		None
 26232 ;; Return value:  Size  Location     Type
 26233 ;;                  1    wreg      void 
 26234 ;; Registers used:
 26235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26236 ;; Tracked objects:
 26237 ;;		On entry : 0/0
 26238 ;;		On exit  : 0/0
 26239 ;;		Unchanged: 0/0
 26240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26241 ;;      Params:         0       0       0       0       0       0       0       0       0
 26242 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26244 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26245 ;;Total ram usage:        0 bytes
 26246 ;; Hardware stack levels used:    1
 26247 ;; Hardware stack levels required when called:    6
 26248 ;; This function calls:
 26249 ;;		_USBStdFeatureReqHandler
 26250 ;;		_USBStdGetDscHandler
 26251 ;;		_USBStdGetStatusHandler
 26252 ;;		_USBStdSetCfgHandler
 26253 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26254 ;; This function is called by:
 26255 ;;		_USBCtrlTrfSetupHandler
 26256 ;; This function uses a non-reentrant model
 26257 ;;
 26258                           
 26259                           	psect	text117
 26260  0031DE                     __ptext117:
 26261                           	opt stack 0
 26262  0031DE                     _USBCheckStdRequest:
 26263                           	opt stack 11
 26264                           
 26265                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26266                           
 26267                           ;incstack = 0
 26268  0031DE  0104               	movlb	4	; () banked
 26269  0031E0  3930               	swapf	48,w,b	;volatile
 26270  0031E2  32E8               	rrcf	wreg,f,c
 26271  0031E4  0B03               	andlw	3
 26272  0031E6  0900               	iorlw	0
 26273  0031E8  A4D8               	btfss	status,2,c
 26274  0031EA  0012               	return	
 26275  0031EC  D047               	goto	i2l2059
 26276  0031EE                     i2l2060:
 26277                           
 26278                           ; BSR set to: 4
 26279                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26280  0031EE  0100               	movlb	0	; () banked
 26281  0031F0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26282                           
 26283                           ; BSR set to: 0
 26284                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26285  0031F2  0E08               	movlw	8
 26286  0031F4  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26287                           
 26288                           ;usb_device.c: 2327: break;
 26289  0031F6  0012               	return	
 26290  0031F8                     
 26291                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26292                           
 26293                           ; BSR set to: 0
 26294  0031F8  ECE4  F015         	call	_USBStdGetDscHandler	;wreg free
 26295                           
 26296                           ;usb_device.c: 2330: break;
 26297  0031FC  0012               	return	
 26298  0031FE                     
 26299                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26300  0031FE  EC60  F019         	call	_USBStdSetCfgHandler	;wreg free
 26301                           
 26302                           ;usb_device.c: 2333: break;
 26303  003202  0012               	return	
 26304  003204                     
 26305                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26306  003204  0E5A               	movlw	low _USBActiveConfiguration
 26307  003206  0100               	movlb	0	; () banked
 26308  003208  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26309  00320A  0E00               	movlw	high _USBActiveConfiguration
 26310  00320C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26314  00320E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26318  003210  0E01               	movlw	1
 26319  003212  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26323  003214  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26324                           
 26325                           ;usb_device.c: 2339: break;
 26326  003216  0012               	return	
 26327  003218                     
 26328                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26329                           
 26330                           ; BSR set to: 0
 26331  003218  EC62  F020         	call	_USBStdGetStatusHandler	;wreg free
 26332                           
 26333                           ;usb_device.c: 2342: break;
 26334  00321C  0012               	return	
 26335  00321E                     
 26336                           ;usb_device.c: 2344: case 3:
 26337                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26338  00321E  EC46  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 26339                           
 26340                           ;usb_device.c: 2346: break;
 26341  003222  0012               	return	
 26342  003224                     
 26343                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26344  003224  0104               	movlb	4	; () banked
 26345  003226  5134               	movf	52,w,b	;volatile
 26346  003228  0D01               	mullw	1
 26347  00322A  0E57               	movlw	low _USBAlternateInterface
 26348  00322C  24F3               	addwf	prodl,w,c
 26349  00322E  0100               	movlb	0	; () banked
 26350  003230  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26351  003232  0E00               	movlw	high _USBAlternateInterface
 26352  003234  20F4               	addwfc	prodh,w,c
 26353  003236  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26354                           
 26355                           ; BSR set to: 0
 26356                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26357  003238  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26358                           
 26359                           ; BSR set to: 0
 26360                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26361  00323A  0E01               	movlw	1
 26362  00323C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26363                           
 26364                           ; BSR set to: 0
 26365                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26366  00323E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26367                           
 26368                           ;usb_device.c: 2352: break;
 26369  003240  0012               	return	
 26370  003242                     i2l2069:
 26371                           
 26372                           ; BSR set to: 4
 26373                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26374  003242  0100               	movlb	0	; () banked
 26375  003244  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26379  003246  0104               	movlb	4	; () banked
 26380  003248  5134               	movf	52,w,b	;volatile
 26381  00324A  0D01               	mullw	1
 26382  00324C  0E57               	movlw	low _USBAlternateInterface
 26383  00324E  24F3               	addwf	prodl,w,c
 26384  003250  6ED9               	movwf	fsr2l,c
 26385  003252  0E00               	movlw	high _USBAlternateInterface
 26386  003254  20F4               	addwfc	prodh,w,c
 26387  003256  6EDA               	movwf	fsr2h,c
 26388  003258  C432 FFDF          	movff	1074,indf2	;volatile
 26389                           
 26390                           ;usb_device.c: 2356: break;
 26391  00325C  0012               	return	
 26392  00325E                     
 26393                           ; BSR set to: 4
 26394                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26395                           
 26396                           ; BSR set to: 4
 26397  00325E  0E00               	movlw	0
 26398  003260  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26399  003262  0E02               	movlw	2
 26400  003264  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26401  003266  0E00               	movlw	0
 26402  003268  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26403  00326A  0E00               	movlw	0
 26404  00326C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26405  00326E  0E00               	movlw	0
 26406  003270  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26407  003272  0E00               	movlw	0
 26408  003274  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26409  003276  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26410                           
 26411                           ;usb_device.c: 2363: }
 26412                           
 26413                           ;usb_device.c: 2362: break;
 26414                           
 26415                           ;usb_device.c: 2361: default:
 26416                           
 26417                           ;usb_device.c: 2360: case 12:
 26418                           
 26419                           ;usb_device.c: 2359: break;
 26420  00327A  0012               	return	
 26421  00327C                     i2l2059:
 26422  00327C  0104               	movlb	4	; () banked
 26423  00327E  5131               	movf	49,w,b	;volatile
 26424                           
 26425                           ; Switch size 1, requested type "space"
 26426                           ; Number of cases is 11, Range of values is 0 to 12
 26427                           ; switch strategies available:
 26428                           ; Name         Instructions Cycles
 26429                           ; simple_byte           34    18 (average)
 26430                           ;	Chosen strategy is simple_byte
 26431  003280  0A00               	xorlw	0	; case 0
 26432  003282  B4D8               	btfsc	status,2,c
 26433  003284  D7C9               	goto	i2l2065
 26434  003286  0A01               	xorlw	1	; case 1
 26435  003288  B4D8               	btfsc	status,2,c
 26436  00328A  D7C9               	goto	i2l2066
 26437  00328C  0A02               	xorlw	2	; case 3
 26438  00328E  B4D8               	btfsc	status,2,c
 26439  003290  D7C6               	goto	i2l2066
 26440  003292  0A06               	xorlw	6	; case 5
 26441  003294  B4D8               	btfsc	status,2,c
 26442  003296  D7AB               	goto	i2l2060
 26443  003298  0A03               	xorlw	3	; case 6
 26444  00329A  B4D8               	btfsc	status,2,c
 26445  00329C  D7AD               	goto	i2l2062
 26446  00329E  0A01               	xorlw	1	; case 7
 26447  0032A0  B4D8               	btfsc	status,2,c
 26448  0032A2  D7DD               	goto	i2l2070
 26449  0032A4  0A0F               	xorlw	15	; case 8
 26450  0032A6  B4D8               	btfsc	status,2,c
 26451  0032A8  D7AD               	goto	i2l2064
 26452  0032AA  0A01               	xorlw	1	; case 9
 26453  0032AC  B4D8               	btfsc	status,2,c
 26454  0032AE  D7A7               	goto	i2l2063
 26455  0032B0  0A03               	xorlw	3	; case 10
 26456  0032B2  B4D8               	btfsc	status,2,c
 26457  0032B4  D7B7               	goto	i2l2068
 26458  0032B6  0A01               	xorlw	1	; case 11
 26459  0032B8  B4D8               	btfsc	status,2,c
 26460  0032BA  D7C3               	goto	i2l2069
 26461  0032BC  0A07               	xorlw	7	; case 12
 26462  0032BE  0012               	return	
 26463  0032C0                     __end_of_USBCheckStdRequest:
 26464                           	opt stack 0
 26465                           pclatu	equ	0xFFB
 26466                           pclath	equ	0xFFA
 26467                           tblptru	equ	0xFF8
 26468                           tblptrh	equ	0xFF7
 26469                           tblptrl	equ	0xFF6
 26470                           tablat	equ	0xFF5
 26471                           prodh	equ	0xFF4
 26472                           prodl	equ	0xFF3
 26473                           intcon	equ	0xFF2
 26474                           intcon2	equ	0xFF1
 26475                           intcon3	equ	0xFF0
 26476                           indf0	equ	0xFEF
 26477                           postinc0	equ	0xFEE
 26478                           fsr0h	equ	0xFEA
 26479                           fsr0l	equ	0xFE9
 26480                           wreg	equ	0xFE8
 26481                           indf1	equ	0xFE7
 26482                           postdec1	equ	0xFE5
 26483                           fsr1h	equ	0xFE2
 26484                           fsr1l	equ	0xFE1
 26485                           indf2	equ	0xFDF
 26486                           postinc2	equ	0xFDE
 26487                           postdec2	equ	0xFDD
 26488                           plusw2	equ	0xFDB
 26489                           fsr2h	equ	0xFDA
 26490                           fsr2l	equ	0xFD9
 26491                           status	equ	0xFD8
 26492                           
 26493 ;; *************** function _USBStdSetCfgHandler *****************
 26494 ;; Defined at:
 26495 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26496 ;; Parameters:    Size  Location     Type
 26497 ;;		None
 26498 ;; Auto vars:     Size  Location     Type
 26499 ;;  i               1   21[COMRAM] unsigned char 
 26500 ;; Return value:  Size  Location     Type
 26501 ;;                  1    wreg      void 
 26502 ;; Registers used:
 26503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26504 ;; Tracked objects:
 26505 ;;		On entry : 0/0
 26506 ;;		On exit  : 0/0
 26507 ;;		Unchanged: 0/0
 26508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26509 ;;      Params:         0       0       0       0       0       0       0       0       0
 26510 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26512 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26513 ;;Total ram usage:        1 bytes
 26514 ;; Hardware stack levels used:    1
 26515 ;; Hardware stack levels required when called:    5
 26516 ;; This function calls:
 26517 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26518 ;;		i2_memset
 26519 ;; This function is called by:
 26520 ;;		_USBCheckStdRequest
 26521 ;; This function uses a non-reentrant model
 26522 ;;
 26523                           
 26524                           	psect	text118
 26525  0032C0                     __ptext118:
 26526                           	opt stack 0
 26527  0032C0                     _USBStdSetCfgHandler:
 26528                           	opt stack 11
 26529                           
 26530                           ;usb_device.c: 1631: uint8_t i;
 26531                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26532                           
 26533                           ;incstack = 0
 26534  0032C0  0100               	movlb	0	; () banked
 26535  0032C2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26536                           
 26537                           ; BSR set to: 0
 26538                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26539  0032C4  0E6B               	movlw	107
 26540  0032C6  6E01               	movwf	i2memset@p1,c
 26541  0032C8  0E0F               	movlw	15
 26542  0032CA  6E02               	movwf	i2memset@p1+1,c
 26543  0032CC  0E00               	movlw	0
 26544  0032CE  6E04               	movwf	i2memset@c+1,c
 26545  0032D0  0E00               	movlw	0
 26546  0032D2  6E03               	movwf	i2memset@c,c
 26547  0032D4  0E00               	movlw	0
 26548  0032D6  6E06               	movwf	i2memset@n+1,c
 26549  0032D8  0E02               	movlw	2
 26550  0032DA  6E05               	movwf	i2memset@n,c
 26551  0032DC  ECB3  F02A         	call	i2_memset	;wreg free
 26552                           
 26553                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26554  0032E0  0E00               	movlw	0
 26555  0032E2  6E01               	movwf	i2memset@p1,c
 26556  0032E4  0E04               	movlw	4
 26557  0032E6  6E02               	movwf	i2memset@p1+1,c
 26558  0032E8  0E00               	movlw	0
 26559  0032EA  6E04               	movwf	i2memset@c+1,c
 26560  0032EC  0E00               	movlw	0
 26561  0032EE  6E03               	movwf	i2memset@c,c
 26562  0032F0  0E00               	movlw	0
 26563  0032F2  6E06               	movwf	i2memset@n+1,c
 26564  0032F4  0E30               	movlw	48
 26565  0032F6  6E05               	movwf	i2memset@n,c
 26566  0032F8  ECB3  F02A         	call	i2_memset	;wreg free
 26567                           
 26568                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26569  0032FC  8C60               	bsf	3936,6,c	;volatile
 26570                           
 26571                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26572  0032FE  0E00               	movlw	0
 26573  003300  6E16               	movwf	USBStdSetCfgHandler@i,c
 26574  003302                     i2l8175:
 26575  003302  0E02               	movlw	2
 26576  003304  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26577  003306  D001               	goto	i2l1974
 26578  003308  D016               	goto	i2u600_40
 26579  00330A                     i2l1974:
 26580                           
 26581                           ;usb_device.c: 1649: {
 26582                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26583  00330A  5016               	movf	USBStdSetCfgHandler@i,w,c
 26584  00330C  0D01               	mullw	1
 26585  00330E  0ED3               	movlw	low _ep_data_in
 26586  003310  24F3               	addwf	prodl,w,c
 26587  003312  6ED9               	movwf	fsr2l,c
 26588  003314  0E00               	movlw	high _ep_data_in
 26589  003316  20F4               	addwfc	prodh,w,c
 26590  003318  6EDA               	movwf	fsr2h,c
 26591  00331A  0E00               	movlw	0
 26592  00331C  6EDF               	movwf	indf2,c
 26593                           
 26594                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26595  00331E  5016               	movf	USBStdSetCfgHandler@i,w,c
 26596  003320  0D01               	mullw	1
 26597  003322  0ED0               	movlw	low _ep_data_out
 26598  003324  24F3               	addwf	prodl,w,c
 26599  003326  6ED9               	movwf	fsr2l,c
 26600  003328  0E00               	movlw	high _ep_data_out
 26601  00332A  20F4               	addwfc	prodh,w,c
 26602  00332C  6EDA               	movwf	fsr2h,c
 26603  00332E  0E00               	movlw	0
 26604  003330  6EDF               	movwf	indf2,c
 26605  003332  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26606  003334  D7E6               	goto	i2l8175
 26607  003336                     i2u600_40:
 26608                           
 26609                           ;usb_device.c: 1652: }
 26610                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26611  003336  0E57               	movlw	low _USBAlternateInterface
 26612  003338  6E01               	movwf	i2memset@p1,c
 26613  00333A  0E00               	movlw	high _USBAlternateInterface
 26614  00333C  6E02               	movwf	i2memset@p1+1,c
 26615  00333E  0E00               	movlw	0
 26616  003340  6E04               	movwf	i2memset@c+1,c
 26617  003342  0E00               	movlw	0
 26618  003344  6E03               	movwf	i2memset@c,c
 26619  003346  0E00               	movlw	0
 26620  003348  6E06               	movwf	i2memset@n+1,c
 26621  00334A  0E02               	movlw	2
 26622  00334C  6E05               	movwf	i2memset@n,c
 26623  00334E  ECB3  F02A         	call	i2_memset	;wreg free
 26624                           
 26625                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26626  003352  9C60               	bcf	3936,6,c	;volatile
 26627                           
 26628                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26629  003354  0E08               	movlw	8
 26630  003356  0100               	movlb	0	; () banked
 26631  003358  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 26632  00335A  0E04               	movlw	4
 26633  00335C  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26634                           
 26635                           ; BSR set to: 0
 26636                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26637  00335E  0E00               	movlw	0
 26638  003360  6E37               	movwf	_pBDTEntryEP0OutCurrent,c
 26639  003362  0E04               	movlw	4
 26640  003364  6E38               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26641                           
 26642                           ; BSR set to: 0
 26643                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26644  003366  C037  F035         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26645  00336A  C038  F036         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26649  00336E  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 26650                           
 26651                           ; BSR set to: 0
 26652                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26653  003372  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 26654  003374  A4D8               	btfss	status,2,c
 26655  003376  D003               	goto	i2l1976
 26656                           
 26657                           ; BSR set to: 0
 26658                           ;usb_device.c: 1671: {
 26659                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26660  003378  0E10               	movlw	16
 26661  00337A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26662                           
 26663                           ;usb_device.c: 1674: }
 26664  00337C  0012               	return	
 26665  00337E                     i2l1976:
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;usb_device.c: 1675: else
 26669                           ;usb_device.c: 1676: {
 26670                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26671                           
 26672                           ; BSR set to: 0
 26673  00337E  0E00               	movlw	0
 26674  003380  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26675  003382  0E01               	movlw	1
 26676  003384  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26677  003386  0E5A               	movlw	low _USBActiveConfiguration
 26678  003388  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26679  00338A  0E00               	movlw	high _USBActiveConfiguration
 26680  00338C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26681  00338E  0E00               	movlw	0
 26682  003390  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26683  003392  0E01               	movlw	1
 26684  003394  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26685  003396  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26686                           
 26687                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26688  00339A  0E20               	movlw	32
 26689  00339C  0100               	movlb	0	; () banked
 26690  00339E  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26691  0033A0  0012               	return	
 26692  0033A2                     __end_of_USBStdSetCfgHandler:
 26693                           	opt stack 0
 26694                           pclatu	equ	0xFFB
 26695                           pclath	equ	0xFFA
 26696                           tblptru	equ	0xFF8
 26697                           tblptrh	equ	0xFF7
 26698                           tblptrl	equ	0xFF6
 26699                           tablat	equ	0xFF5
 26700                           prodh	equ	0xFF4
 26701                           prodl	equ	0xFF3
 26702                           intcon	equ	0xFF2
 26703                           intcon2	equ	0xFF1
 26704                           intcon3	equ	0xFF0
 26705                           indf0	equ	0xFEF
 26706                           postinc0	equ	0xFEE
 26707                           fsr0h	equ	0xFEA
 26708                           fsr0l	equ	0xFE9
 26709                           wreg	equ	0xFE8
 26710                           indf1	equ	0xFE7
 26711                           postdec1	equ	0xFE5
 26712                           fsr1h	equ	0xFE2
 26713                           fsr1l	equ	0xFE1
 26714                           indf2	equ	0xFDF
 26715                           postinc2	equ	0xFDE
 26716                           postdec2	equ	0xFDD
 26717                           plusw2	equ	0xFDB
 26718                           fsr2h	equ	0xFDA
 26719                           fsr2l	equ	0xFD9
 26720                           status	equ	0xFD8
 26721                           
 26722 ;; *************** function i2_memset *****************
 26723 ;; Defined at:
 26724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 26725 ;; Parameters:    Size  Location     Type
 26726 ;;  p1              2    0[COMRAM] PTR void 
 26727 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26728 ;;  c               2    2[COMRAM] int 
 26729 ;;  n               2    4[COMRAM] unsigned int 
 26730 ;; Auto vars:     Size  Location     Type
 26731 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26732 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26733 ;; Return value:  Size  Location     Type
 26734 ;;                  2    0[COMRAM] PTR void 
 26735 ;; Registers used:
 26736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26737 ;; Tracked objects:
 26738 ;;		On entry : 0/0
 26739 ;;		On exit  : 0/0
 26740 ;;		Unchanged: 0/0
 26741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26742 ;;      Params:         6       0       0       0       0       0       0       0       0
 26743 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26745 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26746 ;;Total ram usage:        8 bytes
 26747 ;; Hardware stack levels used:    1
 26748 ;; This function calls:
 26749 ;;		Nothing
 26750 ;; This function is called by:
 26751 ;;		_USBStdSetCfgHandler
 26752 ;;		i2_USBDeviceInit
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text119
 26757  005566                     __ptext119:
 26758                           	opt stack 0
 26759  005566                     i2_memset:
 26760                           	opt stack 18
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;incstack = 0
 26764  005566  C001  F007         	movff	i2memset@p1,i2memset@p
 26765  00556A  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26766  00556E  D008               	goto	i2l2672
 26767  005570                     i2l7995:
 26768  005570  C007  FFD9         	movff	i2memset@p,fsr2l
 26769  005574  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26770  005578  C003  FFDF         	movff	i2memset@c,indf2
 26771  00557C  4A07               	infsnz	i2memset@p,f,c
 26772  00557E  2A08               	incf	i2memset@p+1,f,c
 26773  005580                     i2l2672:
 26774  005580  0605               	decf	i2memset@n,f,c
 26775  005582  A0D8               	btfss	status,0,c
 26776  005584  0606               	decf	i2memset@n+1,f,c
 26777  005586  2805               	incf	i2memset@n,w,c
 26778  005588  E1F3               	bnz	i2l7995
 26779  00558A  2806               	incf	i2memset@n+1,w,c
 26780  00558C  B4D8               	btfsc	status,2,c
 26781  00558E  0012               	return	
 26782  005590  D7EF               	goto	i2l2673
 26783  005592                     __end_ofi2_memset:
 26784                           	opt stack 0
 26785                           pclatu	equ	0xFFB
 26786                           pclath	equ	0xFFA
 26787                           tblptru	equ	0xFF8
 26788                           tblptrh	equ	0xFF7
 26789                           tblptrl	equ	0xFF6
 26790                           tablat	equ	0xFF5
 26791                           prodh	equ	0xFF4
 26792                           prodl	equ	0xFF3
 26793                           intcon	equ	0xFF2
 26794                           intcon2	equ	0xFF1
 26795                           intcon3	equ	0xFF0
 26796                           indf0	equ	0xFEF
 26797                           postinc0	equ	0xFEE
 26798                           fsr0h	equ	0xFEA
 26799                           fsr0l	equ	0xFE9
 26800                           wreg	equ	0xFE8
 26801                           indf1	equ	0xFE7
 26802                           postdec1	equ	0xFE5
 26803                           fsr1h	equ	0xFE2
 26804                           fsr1l	equ	0xFE1
 26805                           indf2	equ	0xFDF
 26806                           postinc2	equ	0xFDE
 26807                           postdec2	equ	0xFDD
 26808                           plusw2	equ	0xFDB
 26809                           fsr2h	equ	0xFDA
 26810                           fsr2l	equ	0xFD9
 26811                           status	equ	0xFD8
 26812                           
 26813 ;; *************** function _USBStdGetStatusHandler *****************
 26814 ;; Defined at:
 26815 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;		None
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;  p               2    1[COMRAM] PTR struct __BDT
 26820 ;;		 -> BDT(48), NULL(0), 
 26821 ;; Return value:  Size  Location     Type
 26822 ;;                  1    wreg      void 
 26823 ;; Registers used:
 26824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26825 ;; Tracked objects:
 26826 ;;		On entry : 0/0
 26827 ;;		On exit  : 0/0
 26828 ;;		Unchanged: 0/0
 26829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26830 ;;      Params:         0       0       0       0       0       0       0       0       0
 26831 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26832 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26833 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26834 ;;Total ram usage:        3 bytes
 26835 ;; Hardware stack levels used:    1
 26836 ;; This function calls:
 26837 ;;		Nothing
 26838 ;; This function is called by:
 26839 ;;		_USBCheckStdRequest
 26840 ;; This function uses a non-reentrant model
 26841 ;;
 26842                           
 26843                           	psect	text120
 26844  0040C4                     __ptext120:
 26845                           	opt stack 0
 26846  0040C4                     _USBStdGetStatusHandler:
 26847                           	opt stack 16
 26848                           
 26849                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26850                           
 26851                           ;incstack = 0
 26852  0040C4  0E00               	movlw	0
 26853  0040C6  0104               	movlb	4	; () banked
 26854  0040C8  6F38               	movwf	56,b	;volatile
 26855                           
 26856                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26857  0040CA  0E00               	movlw	0
 26858  0040CC  6F39               	movwf	57,b	;volatile
 26859                           
 26860                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26861  0040CE  D038               	goto	i2l1995
 26862  0040D0                     i2l1996:
 26863                           
 26864                           ; BSR set to: 4
 26865                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26866  0040D0  0100               	movlb	0	; () banked
 26867  0040D2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26868                           
 26869                           ;usb_device.c: 1789: }
 26870                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26871                           
 26872                           ; BSR set to: 4
 26873                           
 26874                           ; BSR set to: 0
 26875                           ;usb_device.c: 1787: {
 26876                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26877                           
 26878                           ;usb_device.c: 1786: if(0 == 1)
 26879  0040D4  044B               	decf	_RemoteWakeup,w,c	;volatile
 26880  0040D6  A4D8               	btfss	status,2,c
 26881  0040D8  D03E               	goto	i2l1999
 26882                           
 26883                           ;usb_device.c: 1792: {
 26884                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26885  0040DA  0104               	movlb	4	; () banked
 26886  0040DC  8338               	bsf	56,1,b	;volatile
 26887                           
 26888                           ; BSR set to: 4
 26889                           ;usb_device.c: 1794: }
 26890                           ;usb_device.c: 1795: break;
 26891  0040DE  D03B               	goto	i2l1999
 26892  0040E0                     i2l2000:
 26893                           
 26894                           ; BSR set to: 4
 26895                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26896  0040E0  0100               	movlb	0	; () banked
 26897  0040E2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26898                           
 26899                           ;usb_device.c: 1798: break;
 26900  0040E4  D038               	goto	i2l1999
 26901  0040E6                     i2l2001:
 26902                           
 26903                           ; BSR set to: 4
 26904                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26905  0040E6  0100               	movlb	0	; () banked
 26906  0040E8  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26907                           
 26908                           ;usb_device.c: 1804: {
 26909                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26910                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26911  0040EA  0104               	movlb	4	; () banked
 26912  0040EC  BF34               	btfsc	52,7,b	;volatile
 26913  0040EE  D00A               	goto	i2l2002
 26914                           
 26915                           ; BSR set to: 4
 26916                           ;usb_device.c: 1808: {
 26917                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26918  0040F0  5134               	movf	52,w,b	;volatile
 26919  0040F2  0B0F               	andlw	15
 26920  0040F4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26921  0040F6  5001               	movf	??_USBStdGetStatusHandler,w,c
 26922  0040F8  0D02               	mullw	2
 26923  0040FA  0E40               	movlw	low _pBDTEntryOut
 26924  0040FC  24F3               	addwf	prodl,w,c
 26925  0040FE  6ED9               	movwf	fsr2l,c
 26926  004100  0E01               	movlw	high _pBDTEntryOut
 26927  004102  D009               	goto	L25
 26928  004104                     i2l2002:
 26929                           
 26930                           ; BSR set to: 4
 26931                           ;usb_device.c: 1811: else
 26932                           ;usb_device.c: 1812: {
 26933                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26934                           
 26935                           ; BSR set to: 4
 26936  004104  5134               	movf	52,w,b	;volatile
 26937  004106  0B0F               	andlw	15
 26938  004108  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26939  00410A  5001               	movf	??_USBStdGetStatusHandler,w,c
 26940  00410C  0D02               	mullw	2
 26941  00410E  0ECA               	movlw	low _pBDTEntryIn
 26942  004110  24F3               	addwf	prodl,w,c
 26943  004112  6ED9               	movwf	fsr2l,c
 26944  004114  0E00               	movlw	high _pBDTEntryIn
 26945  004116                     L25:
 26946  004116  20F4               	addwfc	prodh,w,c
 26947  004118  6EDA               	movwf	fsr2h,c
 26948  00411A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26949  00411E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26950                           
 26951                           ; BSR set to: 4
 26952                           ;usb_device.c: 1814: }
 26953                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26954                           
 26955                           ; BSR set to: 4
 26956  004122  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26957  004126  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26958  00412A  AEDF               	btfss	indf2,7,c
 26959  00412C  D014               	goto	i2l1999
 26960                           
 26961                           ; BSR set to: 4
 26962  00412E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26963  004132  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26964  004136  A4DF               	btfss	indf2,2,c
 26965  004138  D00E               	goto	i2l1999
 26966                           
 26967                           ; BSR set to: 4
 26968                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 26969  00413A  0E01               	movlw	1
 26970  00413C  6F38               	movwf	56,b	;volatile
 26971                           
 26972                           ; BSR set to: 4
 26973                           ;usb_device.c: 1819: }
 26974                           ;usb_device.c: 1820: }
 26975                           
 26976                           ; BSR set to: 4
 26977                           ;usb_device.c: 1818: break;
 26978  00413E  D00B               	goto	i2l1999
 26979  004140                     i2l1995:
 26980                           
 26981                           ; BSR set to: 4
 26982                           
 26983                           ; BSR set to: 4
 26984  004140  5130               	movf	48,w,b	;volatile
 26985  004142  0B1F               	andlw	31
 26986                           
 26987                           ; Switch size 1, requested type "space"
 26988                           ; Number of cases is 3, Range of values is 0 to 2
 26989                           ; switch strategies available:
 26990                           ; Name         Instructions Cycles
 26991                           ; simple_byte           10     6 (average)
 26992                           ;	Chosen strategy is simple_byte
 26993  004144  0A00               	xorlw	0	; case 0
 26994  004146  B4D8               	btfsc	status,2,c
 26995  004148  D7C3               	goto	i2l1996
 26996  00414A  0A01               	xorlw	1	; case 1
 26997  00414C  B4D8               	btfsc	status,2,c
 26998  00414E  D7C8               	goto	i2l2000
 26999  004150  0A03               	xorlw	3	; case 2
 27000  004152  B4D8               	btfsc	status,2,c
 27001  004154  D7C8               	goto	i2l2001
 27002  004156                     i2l1999:
 27003                           
 27004                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27005  004156  0100               	movlb	0	; () banked
 27006  004158  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27007  00415A  0012               	return	
 27008                           
 27009                           ; BSR set to: 0
 27010                           ;usb_device.c: 1823: {
 27011                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27012  00415C  0E38               	movlw	56
 27013  00415E  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27014  004160  0E04               	movlw	4
 27015  004162  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27016                           
 27017                           ; BSR set to: 0
 27018                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27019  004164  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27020                           
 27021                           ; BSR set to: 0
 27022                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27023  004166  0E02               	movlw	2
 27024  004168  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27025  00416A  0012               	return	
 27026  00416C                     __end_of_USBStdGetStatusHandler:
 27027                           	opt stack 0
 27028                           pclatu	equ	0xFFB
 27029                           pclath	equ	0xFFA
 27030                           tblptru	equ	0xFF8
 27031                           tblptrh	equ	0xFF7
 27032                           tblptrl	equ	0xFF6
 27033                           tablat	equ	0xFF5
 27034                           prodh	equ	0xFF4
 27035                           prodl	equ	0xFF3
 27036                           intcon	equ	0xFF2
 27037                           intcon2	equ	0xFF1
 27038                           intcon3	equ	0xFF0
 27039                           indf0	equ	0xFEF
 27040                           postinc0	equ	0xFEE
 27041                           fsr0h	equ	0xFEA
 27042                           fsr0l	equ	0xFE9
 27043                           wreg	equ	0xFE8
 27044                           indf1	equ	0xFE7
 27045                           postdec1	equ	0xFE5
 27046                           fsr1h	equ	0xFE2
 27047                           fsr1l	equ	0xFE1
 27048                           indf2	equ	0xFDF
 27049                           postinc2	equ	0xFDE
 27050                           postdec2	equ	0xFDD
 27051                           plusw2	equ	0xFDB
 27052                           fsr2h	equ	0xFDA
 27053                           fsr2l	equ	0xFD9
 27054                           status	equ	0xFD8
 27055                           
 27056 ;; *************** function _USBStdGetDscHandler *****************
 27057 ;; Defined at:
 27058 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27059 ;; Parameters:    Size  Location     Type
 27060 ;;		None
 27061 ;; Auto vars:     Size  Location     Type
 27062 ;;		None
 27063 ;; Return value:  Size  Location     Type
 27064 ;;                  1    wreg      void 
 27065 ;; Registers used:
 27066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27067 ;; Tracked objects:
 27068 ;;		On entry : 0/0
 27069 ;;		On exit  : 0/0
 27070 ;;		Unchanged: 0/0
 27071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27072 ;;      Params:         0       0       0       0       0       0       0       0       0
 27073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27074 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27075 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27076 ;;Total ram usage:        2 bytes
 27077 ;; Hardware stack levels used:    1
 27078 ;; This function calls:
 27079 ;;		Nothing
 27080 ;; This function is called by:
 27081 ;;		_USBCheckStdRequest
 27082 ;; This function uses a non-reentrant model
 27083 ;;
 27084                           
 27085                           	psect	text121
 27086  002BC8                     __ptext121:
 27087                           	opt stack 0
 27088  002BC8                     _USBStdGetDscHandler:
 27089                           	opt stack 16
 27090                           
 27091                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27092                           
 27093                           ; BSR set to: 0
 27094                           ;incstack = 0
 27095  002BC8  0E80               	movlw	128
 27096  002BCA  0104               	movlb	4	; () banked
 27097  002BCC  1930               	xorwf	48,w,b	;volatile
 27098  002BCE  A4D8               	btfss	status,2,c
 27099  002BD0  0012               	return	
 27100                           
 27101                           ; BSR set to: 4
 27102                           ;usb_device.c: 1707: {
 27103                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27104  002BD2  0EC0               	movlw	192
 27105  002BD4  0100               	movlb	0	; () banked
 27106  002BD6  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27107                           
 27108                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27109  002BD8  D082               	goto	i2l1982
 27110  002BDA                     
 27111                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27112                           
 27113                           ; BSR set to: 0
 27114  002BDA  0EA2               	movlw	low _device_dsc
 27115  002BDC  0100               	movlb	0	; () banked
 27116  002BDE  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27117  002BE0  0E79               	movlw	high _device_dsc
 27118  002BE2  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27119                           
 27120                           ; BSR set to: 0
 27121                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27122  002BE4  0E00               	movlw	0
 27123  002BE6  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27124  002BE8  0E12               	movlw	18
 27125  002BEA  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27126                           
 27127                           ;usb_device.c: 1715: break;
 27128  002BEC  0012               	return	
 27129  002BEE                     
 27130                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27131                           
 27132                           ; BSR set to: 0
 27133  002BEE  0104               	movlb	4	; () banked
 27134  002BF0  5132               	movf	50,w,b	;volatile
 27135  002BF2  A4D8               	btfss	status,2,c
 27136  002BF4  D040               	goto	i2l1986
 27137                           
 27138                           ; BSR set to: 4
 27139                           ;usb_device.c: 1721: {
 27140                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27141  002BF6  5132               	movf	50,w,b	;volatile
 27142  002BF8  0D02               	mullw	2
 27143  002BFA  0EF5               	movlw	low _USB_CD_Ptr
 27144  002BFC  24F3               	addwf	prodl,w,c
 27145  002BFE  6EF6               	movwf	tblptrl,c
 27146  002C00  0E75               	movlw	high _USB_CD_Ptr
 27147  002C02  20F4               	addwfc	prodh,w,c
 27148  002C04  6EF7               	movwf	tblptrh,c
 27149  002C06                     	if	0	;There are less than 3 active tblptr bytes
 27150  002C06                     	endif
 27151  002C06  0009               	tblrd		*+
 27152  002C08  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27153  002C0C  000A               	tblrd		*-
 27154  002C0E  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27155                           
 27156                           ; BSR set to: 4
 27157                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27158  002C12  0E02               	movlw	2
 27159  002C14  0100               	movlb	0	; () banked
 27160  002C16  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27161  002C18  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27162  002C1A  0E00               	movlw	0
 27163  002C1C  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27164  002C1E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27165  002C20  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27166  002C24  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27167  002C28  6AF8               	clrf	tblptru,c
 27168  002C2A  0E07               	movlw	(high __ramtop+-1)
 27169  002C2C  64F7               	cpfsgt	tblptrh,c
 27170  002C2E  D003               	bra	i2u604_47
 27171  002C30  0008               	tblrd		*
 27172  002C32  50F5               	movf	tablat,w,c
 27173  002C34  D005               	bra	i2u604_40
 27174  002C36                     i2u604_47:
 27175  002C36  CFF6 FFE9          	movff	tblptrl,fsr0l
 27176  002C3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27177  002C3E  50EF               	movf	indf0,w,c
 27178  002C40                     i2u604_40:
 27179  002C40  0100               	movlb	0	; () banked
 27180  002C42  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27181                           
 27182                           ; BSR set to: 0
 27183                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27184  002C44  0E03               	movlw	3
 27185  002C46  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27186  002C48  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27187  002C4A  0E00               	movlw	0
 27188  002C4C  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27189  002C4E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27190  002C50  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27191  002C54  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27192  002C58  6AF8               	clrf	tblptru,c
 27193  002C5A  0E07               	movlw	(high __ramtop+-1)
 27194  002C5C  64F7               	cpfsgt	tblptrh,c
 27195  002C5E  D003               	bra	i2u605_47
 27196  002C60  0008               	tblrd		*
 27197  002C62  50F5               	movf	tablat,w,c
 27198  002C64  D005               	bra	i2u605_40
 27199  002C66                     i2u605_47:
 27200  002C66  CFF6 FFE9          	movff	tblptrl,fsr0l
 27201  002C6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27202  002C6E  50EF               	movf	indf0,w,c
 27203  002C70                     i2u605_40:
 27204  002C70  0100               	movlb	0	; () banked
 27205  002C72  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27206                           
 27207                           ;usb_device.c: 1729: }
 27208  002C74  0012               	return	
 27209  002C76                     i2l1986:
 27210                           
 27211                           ;usb_device.c: 1730: else
 27212                           ;usb_device.c: 1731: {
 27213                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 27214                           
 27215                           ; BSR set to: 0
 27216  002C76  0E00               	movlw	0
 27217  002C78  0100               	movlb	0	; () banked
 27218  002C7A  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;usb_device.c: 1733: }
 27222                           ;usb_device.c: 1734: break;
 27223  002C7C  0012               	return	
 27224  002C7E                     
 27225                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 27226                           
 27227                           ; BSR set to: 0
 27228  002C7E  0E03               	movlw	3
 27229  002C80  0104               	movlb	4	; () banked
 27230  002C82  6132               	cpfslt	50,b	;volatile
 27231  002C84  D024               	goto	i2l1989
 27232                           
 27233                           ; BSR set to: 4
 27234                           ;usb_device.c: 1740: {
 27235                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27236  002C86  5132               	movf	50,w,b	;volatile
 27237  002C88  0D02               	mullw	2
 27238  002C8A  0EEF               	movlw	low _USB_SD_Ptr
 27239  002C8C  24F3               	addwf	prodl,w,c
 27240  002C8E  6EF6               	movwf	tblptrl,c
 27241  002C90  0E75               	movlw	high _USB_SD_Ptr
 27242  002C92  20F4               	addwfc	prodh,w,c
 27243  002C94  6EF7               	movwf	tblptrh,c
 27244  002C96                     	if	0	;There are less than 3 active tblptr bytes
 27245  002C96                     	endif
 27246  002C96  0009               	tblrd		*+
 27247  002C98  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27248  002C9C  000A               	tblrd		*-
 27249  002C9E  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27250                           
 27251                           ; BSR set to: 4
 27252                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27253  002CA2  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 27254  002CA6  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27255  002CAA  6AF8               	clrf	tblptru,c
 27256  002CAC  0E07               	movlw	(high __ramtop+-1)
 27257  002CAE  64F7               	cpfsgt	tblptrh,c
 27258  002CB0  D003               	bra	i2u607_47
 27259  002CB2  0008               	tblrd		*
 27260  002CB4  50F5               	movf	tablat,w,c
 27261  002CB6  D005               	bra	i2u607_40
 27262  002CB8                     i2u607_47:
 27263  002CB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 27264  002CBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 27265  002CC0  50EF               	movf	indf0,w,c
 27266  002CC2                     i2u607_40:
 27267  002CC2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27268  002CC4  5001               	movf	??_USBStdGetDscHandler,w,c
 27269  002CC6  0100               	movlb	0	; () banked
 27270  002CC8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27271  002CCA  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27272                           
 27273                           ;usb_device.c: 1745: }
 27274  002CCC  0012               	return	
 27275  002CCE                     i2l1989:
 27276                           
 27277                           ;usb_device.c: 1746: else
 27278                           ;usb_device.c: 1747: {
 27279                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27280                           
 27281                           ; BSR set to: 0
 27282  002CCE  0E00               	movlw	0
 27283  002CD0  0100               	movlb	0	; () banked
 27284  002CD2  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27285                           
 27286                           ; BSR set to: 0
 27287                           ;usb_device.c: 1749: }
 27288                           ;usb_device.c: 1750: break;
 27289  002CD4  0012               	return	
 27290  002CD6                     
 27291                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27292                           
 27293                           ; BSR set to: 0
 27294  002CD6  0E00               	movlw	0
 27295  002CD8  0100               	movlb	0	; () banked
 27296  002CDA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27297                           
 27298                           ; BSR set to: 0
 27299                           ;usb_device.c: 1754: }
 27300                           
 27301                           ;usb_device.c: 1753: break;
 27302  002CDC  0012               	return	
 27303  002CDE                     i2l1982:
 27304                           
 27305                           ; BSR set to: 0
 27306                           
 27307                           ; BSR set to: 0
 27308  002CDE  0104               	movlb	4	; () banked
 27309  002CE0  5133               	movf	51,w,b	;volatile
 27310                           
 27311                           ; Switch size 1, requested type "space"
 27312                           ; Number of cases is 3, Range of values is 1 to 3
 27313                           ; switch strategies available:
 27314                           ; Name         Instructions Cycles
 27315                           ; simple_byte           10     6 (average)
 27316                           ;	Chosen strategy is simple_byte
 27317  002CE2  0A01               	xorlw	1	; case 1
 27318  002CE4  B4D8               	btfsc	status,2,c
 27319  002CE6  D779               	goto	i2l1983
 27320  002CE8  0A03               	xorlw	3	; case 2
 27321  002CEA  B4D8               	btfsc	status,2,c
 27322  002CEC  D780               	goto	i2l1985
 27323  002CEE  0A01               	xorlw	1	; case 3
 27324  002CF0  B4D8               	btfsc	status,2,c
 27325  002CF2  D7C5               	goto	i2l1988
 27326  002CF4  D7F0               	goto	i2l1991
 27327  002CF6                     __end_of_USBStdGetDscHandler:
 27328                           	opt stack 0
 27329                           pclatu	equ	0xFFB
 27330                           pclath	equ	0xFFA
 27331                           tblptru	equ	0xFF8
 27332                           tblptrh	equ	0xFF7
 27333                           tblptrl	equ	0xFF6
 27334                           tablat	equ	0xFF5
 27335                           prodh	equ	0xFF4
 27336                           prodl	equ	0xFF3
 27337                           intcon	equ	0xFF2
 27338                           intcon2	equ	0xFF1
 27339                           intcon3	equ	0xFF0
 27340                           indf0	equ	0xFEF
 27341                           postinc0	equ	0xFEE
 27342                           fsr0h	equ	0xFEA
 27343                           fsr0l	equ	0xFE9
 27344                           wreg	equ	0xFE8
 27345                           indf1	equ	0xFE7
 27346                           postdec1	equ	0xFE5
 27347                           fsr1h	equ	0xFE2
 27348                           fsr1l	equ	0xFE1
 27349                           indf2	equ	0xFDF
 27350                           postinc2	equ	0xFDE
 27351                           postdec2	equ	0xFDD
 27352                           plusw2	equ	0xFDB
 27353                           fsr2h	equ	0xFDA
 27354                           fsr2l	equ	0xFD9
 27355                           status	equ	0xFD8
 27356                           
 27357 ;; *************** function _USBStdFeatureReqHandler *****************
 27358 ;; Defined at:
 27359 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27360 ;; Parameters:    Size  Location     Type
 27361 ;;		None
 27362 ;; Auto vars:     Size  Location     Type
 27363 ;;  p               2   25[COMRAM] PTR struct __BDT
 27364 ;;		 -> BDT(48), NULL(0), 
 27365 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27366 ;;		 -> UEP0(1), 
 27367 ;;  current_ep_d    1   24[COMRAM] struct .
 27368 ;; Return value:  Size  Location     Type
 27369 ;;                  1    wreg      void 
 27370 ;; Registers used:
 27371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27372 ;; Tracked objects:
 27373 ;;		On entry : 0/0
 27374 ;;		On exit  : 0/0
 27375 ;;		Unchanged: 0/0
 27376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27377 ;;      Params:         0       0       0       0       0       0       0       0       0
 27378 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27379 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27380 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27381 ;;Total ram usage:        6 bytes
 27382 ;; Hardware stack levels used:    1
 27383 ;; Hardware stack levels required when called:    5
 27384 ;; This function calls:
 27385 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27386 ;; This function is called by:
 27387 ;;		_USBCheckStdRequest
 27388 ;; This function uses a non-reentrant model
 27389 ;;
 27390                           
 27391                           	psect	text122
 27392  001E8C                     __ptext122:
 27393                           	opt stack 0
 27394  001E8C                     _USBStdFeatureReqHandler:
 27395                           	opt stack 11
 27396                           
 27397                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27398                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27399                           ;usb_device.c: 2390: unsigned char* pUEP;
 27400                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27401                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27402                           
 27403                           ;incstack = 0
 27404  001E8C  0104               	movlb	4	; () banked
 27405  001E8E  0532               	decf	50,w,b	;volatile
 27406  001E90  A4D8               	btfss	status,2,c
 27407  001E92  D010               	goto	i2l2077
 27408                           
 27409                           ; BSR set to: 4
 27410  001E94  5130               	movf	48,w,b	;volatile
 27411  001E96  0B1F               	andlw	31
 27412  001E98  0900               	iorlw	0
 27413  001E9A  A4D8               	btfss	status,2,c
 27414  001E9C  D00B               	goto	i2l2077
 27415                           
 27416                           ; BSR set to: 4
 27417                           ;usb_device.c: 2395: {
 27418                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27419  001E9E  0100               	movlb	0	; () banked
 27420  001EA0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27424  001EA2  0E03               	movlw	3
 27425  001EA4  0104               	movlb	4	; () banked
 27426  001EA6  1931               	xorwf	49,w,b	;volatile
 27427  001EA8  A4D8               	btfss	status,2,c
 27428  001EAA  D002               	goto	i2l2076
 27429                           
 27430                           ; BSR set to: 4
 27431                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27432  001EAC  0E01               	movlw	1
 27433  001EAE  D001               	goto	L26
 27434  001EB0                     i2l2076:
 27435                           
 27436                           ; BSR set to: 4
 27437                           ;usb_device.c: 2399: else
 27438                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27439                           
 27440                           ; BSR set to: 4
 27441  001EB0  0E00               	movlw	0
 27442  001EB2                     L26:
 27443  001EB2  6E4B               	movwf	_RemoteWakeup,c	;volatile
 27444  001EB4                     i2l2077:
 27445                           
 27446                           ; BSR set to: 4
 27447                           ;usb_device.c: 2401: }
 27448                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27449                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27450                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27451                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27452                           
 27453                           ; BSR set to: 4
 27454  001EB4  5132               	movf	50,w,b	;volatile
 27455  001EB6  A4D8               	btfss	status,2,c
 27456  001EB8  0012               	return	
 27457                           
 27458                           ; BSR set to: 4
 27459  001EBA  5130               	movf	48,w,b	;volatile
 27460  001EBC  0B1F               	andlw	31
 27461  001EBE  0A02               	xorlw	2
 27462  001EC0  A4D8               	btfss	status,2,c
 27463  001EC2  0012               	return	
 27464                           
 27465                           ; BSR set to: 4
 27466  001EC4  5134               	movf	52,w,b	;volatile
 27467  001EC6  0B0F               	andlw	15
 27468  001EC8  0900               	iorlw	0
 27469  001ECA  B4D8               	btfsc	status,2,c
 27470  001ECC  0012               	return	
 27471                           
 27472                           ; BSR set to: 4
 27473  001ECE  5134               	movf	52,w,b	;volatile
 27474  001ED0  0B0F               	andlw	15
 27475  001ED2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27476  001ED4  0E03               	movlw	3
 27477  001ED6  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27478  001ED8  0012               	return	
 27479                           
 27480                           ; BSR set to: 4
 27481  001EDA  0E20               	movlw	32
 27482  001EDC  0100               	movlb	0	; () banked
 27483  001EDE  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27484  001EE0  A4D8               	btfss	status,2,c
 27485  001EE2  0012               	return	
 27486                           
 27487                           ; BSR set to: 0
 27488                           ;usb_device.c: 2408: {
 27489                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27490  001EE4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27491                           
 27492                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27493  001EE6  0104               	movlb	4	; () banked
 27494  001EE8  BF34               	btfsc	52,7,b	;volatile
 27495  001EEA  D019               	goto	i2l2079
 27496                           
 27497                           ; BSR set to: 4
 27498                           ;usb_device.c: 2415: {
 27499                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27500  001EEC  5134               	movf	52,w,b	;volatile
 27501  001EEE  0B0F               	andlw	15
 27502  001EF0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27503  001EF2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27504  001EF4  0D02               	mullw	2
 27505  001EF6  0E40               	movlw	low _pBDTEntryOut
 27506  001EF8  24F3               	addwf	prodl,w,c
 27507  001EFA  6ED9               	movwf	fsr2l,c
 27508  001EFC  0E01               	movlw	high _pBDTEntryOut
 27509  001EFE  20F4               	addwfc	prodh,w,c
 27510  001F00  6EDA               	movwf	fsr2h,c
 27511  001F02  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27512  001F06  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27513                           
 27514                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27515  001F0A  5134               	movf	52,w,b	;volatile
 27516  001F0C  0B0F               	andlw	15
 27517  001F0E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27518  001F10  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27519  001F12  0D01               	mullw	1
 27520  001F14  0ED0               	movlw	low _ep_data_out
 27521  001F16  24F3               	addwf	prodl,w,c
 27522  001F18  6ED9               	movwf	fsr2l,c
 27523  001F1A  0E00               	movlw	high _ep_data_out
 27524  001F1C  D018               	goto	L27
 27525  001F1E                     i2l2079:
 27526                           
 27527                           ; BSR set to: 4
 27528                           ;usb_device.c: 2419: else
 27529                           ;usb_device.c: 2420: {
 27530                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27531                           
 27532                           ; BSR set to: 4
 27533  001F1E  5134               	movf	52,w,b	;volatile
 27534  001F20  0B0F               	andlw	15
 27535  001F22  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27536  001F24  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27537  001F26  0D02               	mullw	2
 27538  001F28  0ECA               	movlw	low _pBDTEntryIn
 27539  001F2A  24F3               	addwf	prodl,w,c
 27540  001F2C  6ED9               	movwf	fsr2l,c
 27541  001F2E  0E00               	movlw	high _pBDTEntryIn
 27542  001F30  20F4               	addwfc	prodh,w,c
 27543  001F32  6EDA               	movwf	fsr2h,c
 27544  001F34  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27545  001F38  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27546                           
 27547                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27548  001F3C  5134               	movf	52,w,b	;volatile
 27549  001F3E  0B0F               	andlw	15
 27550  001F40  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27551  001F42  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27552  001F44  0D01               	mullw	1
 27553  001F46  0ED3               	movlw	low _ep_data_in
 27554  001F48  24F3               	addwf	prodl,w,c
 27555  001F4A  6ED9               	movwf	fsr2l,c
 27556  001F4C  0E00               	movlw	high _ep_data_in
 27557  001F4E                     L27:
 27558  001F4E  20F4               	addwfc	prodh,w,c
 27559  001F50  6EDA               	movwf	fsr2h,c
 27560  001F52  50DF               	movf	indf2,w,c
 27561  001F54  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27562                           
 27563                           ; BSR set to: 4
 27564                           ;usb_device.c: 2423: }
 27565                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27566                           
 27567                           ; BSR set to: 4
 27568  001F56  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27569  001F58  D002               	goto	i2l2081
 27570                           
 27571                           ; BSR set to: 4
 27572                           ;usb_device.c: 2429: {
 27573                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27574  001F5A  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27575                           
 27576                           ;usb_device.c: 2431: }
 27577  001F5C  D001               	goto	i2l2082
 27578  001F5E                     i2l2081:
 27579                           
 27580                           ; BSR set to: 4
 27581                           ;usb_device.c: 2432: else
 27582                           ;usb_device.c: 2433: {
 27583                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27584                           
 27585                           ; BSR set to: 4
 27586  001F5E  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27587  001F60                     i2l2082:
 27588                           
 27589                           ; BSR set to: 4
 27590                           ;usb_device.c: 2435: }
 27591                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27592                           
 27593                           ; BSR set to: 4
 27594  001F60  BF34               	btfsc	52,7,b	;volatile
 27595  001F62  D00A               	goto	i2l2083
 27596                           
 27597                           ; BSR set to: 4
 27598                           ;usb_device.c: 2440: {
 27599                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27600  001F64  5134               	movf	52,w,b	;volatile
 27601  001F66  0B0F               	andlw	15
 27602  001F68  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27603  001F6A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27604  001F6C  0D02               	mullw	2
 27605  001F6E  0E40               	movlw	low _pBDTEntryOut
 27606  001F70  24F3               	addwf	prodl,w,c
 27607  001F72  6ED9               	movwf	fsr2l,c
 27608  001F74  0E01               	movlw	high _pBDTEntryOut
 27609  001F76  D009               	goto	L28
 27610  001F78                     i2l2083:
 27611                           
 27612                           ; BSR set to: 4
 27613                           ;usb_device.c: 2443: else
 27614                           ;usb_device.c: 2444: {
 27615                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27616                           
 27617                           ; BSR set to: 4
 27618  001F78  5134               	movf	52,w,b	;volatile
 27619  001F7A  0B0F               	andlw	15
 27620  001F7C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27621  001F7E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27622  001F80  0D02               	mullw	2
 27623  001F82  0ECA               	movlw	low _pBDTEntryIn
 27624  001F84  24F3               	addwf	prodl,w,c
 27625  001F86  6ED9               	movwf	fsr2l,c
 27626  001F88  0E00               	movlw	high _pBDTEntryIn
 27627  001F8A                     L28:
 27628  001F8A  20F4               	addwfc	prodh,w,c
 27629  001F8C  6EDA               	movwf	fsr2h,c
 27630  001F8E  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27631  001F92  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27632                           
 27633                           ; BSR set to: 4
 27634                           ;usb_device.c: 2446: }
 27635                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27636                           
 27637                           ; BSR set to: 4
 27638  001F96  0E03               	movlw	3
 27639  001F98  1931               	xorwf	49,w,b	;volatile
 27640  001F9A  A4D8               	btfss	status,2,c
 27641  001F9C  D02D               	goto	i2l2085
 27642                           
 27643                           ; BSR set to: 4
 27644                           ;usb_device.c: 2450: {
 27645                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27646  001F9E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27647  001FA2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27648  001FA6  AEDF               	btfss	indf2,7,c
 27649  001FA8  D01A               	goto	i2l2088
 27650                           
 27651                           ; BSR set to: 4
 27652                           ;usb_device.c: 2452: {
 27653                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27654  001FAA  BF34               	btfsc	52,7,b	;volatile
 27655  001FAC  D00A               	goto	i2l2087
 27656                           
 27657                           ; BSR set to: 4
 27658                           ;usb_device.c: 2456: {
 27659                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27660  001FAE  5134               	movf	52,w,b	;volatile
 27661  001FB0  0B0F               	andlw	15
 27662  001FB2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27663  001FB4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27664  001FB6  0D01               	mullw	1
 27665  001FB8  0ED0               	movlw	low _ep_data_out
 27666  001FBA  24F3               	addwf	prodl,w,c
 27667  001FBC  6ED9               	movwf	fsr2l,c
 27668  001FBE  0E00               	movlw	high _ep_data_out
 27669  001FC0  D00A               	goto	L29
 27670  001FC2                     i2l2087:
 27671                           
 27672                           ;usb_device.c: 2459: else
 27673                           ;usb_device.c: 2460: {
 27674                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27675                           
 27676                           ; BSR set to: 0
 27677  001FC2  0104               	movlb	4	; () banked
 27678  001FC4  5134               	movf	52,w,b	;volatile
 27679  001FC6  0B0F               	andlw	15
 27680  001FC8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27681  001FCA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27682  001FCC  0D01               	mullw	1
 27683  001FCE  0ED3               	movlw	low _ep_data_in
 27684  001FD0  24F3               	addwf	prodl,w,c
 27685  001FD2  6ED9               	movwf	fsr2l,c
 27686  001FD4  0E00               	movlw	high _ep_data_in
 27687  001FD6                     L29:
 27688  001FD6  20F4               	addwfc	prodh,w,c
 27689  001FD8  6EDA               	movwf	fsr2h,c
 27690  001FDA  0100               	movlb	0	; () banked
 27691  001FDC  82DF               	bsf	indf2,1,c
 27692  001FDE                     i2l2088:
 27693                           
 27694                           ;usb_device.c: 2462: }
 27695                           ;usb_device.c: 2463: }
 27696                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27697                           
 27698                           ; BSR set to: 0
 27699                           
 27700                           ; BSR set to: 0
 27701  001FDE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27702  001FE2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27703  001FE6  0E00               	movlw	0
 27704  001FE8  84DB               	bsf	plusw2,2,c
 27705                           
 27706                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27707  001FEA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27708  001FEE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27709  001FF2  0E00               	movlw	0
 27710  001FF4  8EDB               	bsf	plusw2,7,c
 27711                           
 27712                           ;usb_device.c: 2468: }
 27713  001FF6  0012               	return	
 27714  001FF8                     i2l2085:
 27715                           
 27716                           ;usb_device.c: 2469: else
 27717                           ;usb_device.c: 2470: {
 27718                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27719  001FF8  0E04               	movlw	4
 27720  001FFA  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27721                           
 27722                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27723  001FFC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27724  002000  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27725  002004  AEDF               	btfss	indf2,7,c
 27726  002006  D01B               	goto	i2l2090
 27727                           
 27728                           ;usb_device.c: 2476: {
 27729                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27730  002008  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27731  00200C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27732  002010  0E7F               	movlw	127
 27733  002012  16DF               	andwf	indf2,f,c
 27734                           
 27735                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27736  002014  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27737  002018  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27738  00201C  0E00               	movlw	0
 27739  00201E  8CDB               	bsf	plusw2,6,c
 27740                           
 27741                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27742  002020  0E00               	movlw	0
 27743  002022  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27744  002024  0E05               	movlw	5
 27745  002026  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27746  002028  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27747  00202C  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27748  002030  0E00               	movlw	0
 27749  002032  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27750  002034  0E02               	movlw	2
 27751  002036  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27752  002038  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27753                           
 27754                           ;usb_device.c: 2482: }
 27755  00203C  D006               	goto	i2l2091
 27756  00203E                     i2l2090:
 27757                           
 27758                           ;usb_device.c: 2483: else
 27759                           ;usb_device.c: 2484: {
 27760                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27761  00203E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27762  002042  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27763  002046  0E00               	movlw	0
 27764  002048  8CDB               	bsf	plusw2,6,c
 27765  00204A                     i2l2091:
 27766                           
 27767                           ;usb_device.c: 2487: }
 27768                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27769  00204A  0E04               	movlw	4
 27770  00204C  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27771                           
 27772                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27773  00204E  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27774  002050  D006               	goto	i2u629_40
 27775  002052  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27776  002056  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27777  00205A  AEDF               	btfss	indf2,7,c
 27778  00205C  D030               	goto	i2l2092
 27779  00205E                     i2u629_40:
 27780                           
 27781                           ;usb_device.c: 2498: {
 27782                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27783  00205E  0104               	movlb	4	; () banked
 27784  002060  BF34               	btfsc	52,7,b	;volatile
 27785  002062  D00A               	goto	i2l2095
 27786                           
 27787                           ; BSR set to: 4
 27788                           ;usb_device.c: 2500: {
 27789                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27790  002064  5134               	movf	52,w,b	;volatile
 27791  002066  0B0F               	andlw	15
 27792  002068  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27793  00206A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27794  00206C  0D01               	mullw	1
 27795  00206E  0ED0               	movlw	low _ep_data_out
 27796  002070  24F3               	addwf	prodl,w,c
 27797  002072  6ED9               	movwf	fsr2l,c
 27798  002074  0E00               	movlw	high _ep_data_out
 27799  002076  D00A               	goto	L30
 27800  002078                     i2l2095:
 27801                           
 27802                           ;usb_device.c: 2503: else
 27803                           ;usb_device.c: 2504: {
 27804                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27805                           
 27806                           ; BSR set to: 0
 27807  002078  0104               	movlb	4	; () banked
 27808  00207A  5134               	movf	52,w,b	;volatile
 27809  00207C  0B0F               	andlw	15
 27810  00207E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27811  002080  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27812  002082  0D01               	mullw	1
 27813  002084  0ED3               	movlw	low _ep_data_in
 27814  002086  24F3               	addwf	prodl,w,c
 27815  002088  6ED9               	movwf	fsr2l,c
 27816  00208A  0E00               	movlw	high _ep_data_in
 27817  00208C                     L30:
 27818  00208C  20F4               	addwfc	prodh,w,c
 27819  00208E  6EDA               	movwf	fsr2h,c
 27820  002090  0100               	movlb	0	; () banked
 27821  002092  92DF               	bcf	indf2,1,c
 27822                           
 27823                           ; BSR set to: 0
 27824                           ;usb_device.c: 2506: }
 27825                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27826                           
 27827                           ; BSR set to: 0
 27828  002094  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27829  002098  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27830  00209C  0E3B               	movlw	59
 27831  00209E  16DF               	andwf	indf2,f,c
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27835  0020A0  0E00               	movlw	0
 27836  0020A2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27837  0020A4  0E05               	movlw	5
 27838  0020A6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27839  0020A8  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27840  0020AC  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27841  0020B0  0E00               	movlw	0
 27842  0020B2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27843  0020B4  0E02               	movlw	2
 27844  0020B6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27845  0020B8  ECD5  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27846                           
 27847                           ;usb_device.c: 2512: }
 27848  0020BC  D006               	goto	i2l2097
 27849  0020BE                     i2l2092:
 27850                           
 27851                           ;usb_device.c: 2513: else
 27852                           ;usb_device.c: 2514: {
 27853                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27854  0020BE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27855  0020C2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27856  0020C6  0E3B               	movlw	59
 27857  0020C8  16DF               	andwf	indf2,f,c
 27858  0020CA                     i2l2097:
 27859                           
 27860                           ;usb_device.c: 2517: }
 27861                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27862  0020CA  0104               	movlb	4	; () banked
 27863  0020CC  5134               	movf	52,w,b	;volatile
 27864  0020CE  0B0F               	andlw	15
 27865  0020D0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27866  0020D2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27867  0020D4  0D01               	mullw	1
 27868  0020D6  0E6A               	movlw	106
 27869  0020D8  24F3               	addwf	prodl,w,c
 27870  0020DA  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27871  0020DC  0E0F               	movlw	15
 27872  0020DE  20F4               	addwfc	prodh,w,c
 27873  0020E0  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27874                           
 27875                           ; BSR set to: 4
 27876                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27877  0020E2  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27878  0020E6  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27879  0020EA  0EFE               	movlw	254
 27880  0020EC  16DF               	andwf	indf2,f,c
 27881                           
 27882                           ; BSR set to: 4
 27883  0020EE  0012               	return	
 27884  0020F0                     __end_of_USBStdFeatureReqHandler:
 27885                           	opt stack 0
 27886                           pclatu	equ	0xFFB
 27887                           pclath	equ	0xFFA
 27888                           tblptru	equ	0xFF8
 27889                           tblptrh	equ	0xFF7
 27890                           tblptrl	equ	0xFF6
 27891                           tablat	equ	0xFF5
 27892                           prodh	equ	0xFF4
 27893                           prodl	equ	0xFF3
 27894                           intcon	equ	0xFF2
 27895                           intcon2	equ	0xFF1
 27896                           intcon3	equ	0xFF0
 27897                           indf0	equ	0xFEF
 27898                           postinc0	equ	0xFEE
 27899                           fsr0h	equ	0xFEA
 27900                           fsr0l	equ	0xFE9
 27901                           wreg	equ	0xFE8
 27902                           indf1	equ	0xFE7
 27903                           postdec1	equ	0xFE5
 27904                           fsr1h	equ	0xFE2
 27905                           fsr1l	equ	0xFE1
 27906                           indf2	equ	0xFDF
 27907                           postinc2	equ	0xFDE
 27908                           postdec2	equ	0xFDD
 27909                           plusw2	equ	0xFDB
 27910                           fsr2h	equ	0xFDA
 27911                           fsr2l	equ	0xFD9
 27912                           status	equ	0xFD8
 27913                           
 27914 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27915 ;; Defined at:
 27916 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27917 ;; Parameters:    Size  Location     Type
 27918 ;;  event           2   13[COMRAM] enum E5981
 27919 ;;  pdata           2   15[COMRAM] PTR void 
 27920 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27921 ;;  size            2   17[COMRAM] unsigned int 
 27922 ;; Auto vars:     Size  Location     Type
 27923 ;;		None
 27924 ;; Return value:  Size  Location     Type
 27925 ;;                  1    wreg      unsigned char 
 27926 ;; Registers used:
 27927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27928 ;; Tracked objects:
 27929 ;;		On entry : 0/0
 27930 ;;		On exit  : 0/0
 27931 ;;		Unchanged: 0/0
 27932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27933 ;;      Params:         6       0       0       0       0       0       0       0       0
 27934 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27935 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27936 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27937 ;;Total ram usage:        8 bytes
 27938 ;; Hardware stack levels used:    1
 27939 ;; Hardware stack levels required when called:    4
 27940 ;; This function calls:
 27941 ;;		_USBCheckCDCRequest
 27942 ;;		_USBapp_CdcEmulatorInitialize
 27943 ;; This function is called by:
 27944 ;;		_USBDeviceTasks
 27945 ;;		_USBStdSetCfgHandler
 27946 ;;		_USBSuspend
 27947 ;;		_USBWakeFromSuspend
 27948 ;;		_USBCtrlTrfSetupHandler
 27949 ;;		_USBCheckStdRequest
 27950 ;;		_USBStdFeatureReqHandler
 27951 ;; This function uses a non-reentrant model
 27952 ;;
 27953                           
 27954                           	psect	text123
 27955  004DAA                     __ptext123:
 27956                           	opt stack 0
 27957  004DAA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27958                           	opt stack 15
 27959                           
 27960                           ;USBapp.c: 310: switch( (int) event )
 27961                           
 27962                           ;incstack = 0
 27963  004DAA  D006               	goto	i2l917
 27964  004DAC                     
 27965                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 27966  004DAC  EC5E  F027         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 27967                           
 27968                           ;USBapp.c: 338: break;
 27969                           
 27970                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 27971                           
 27972                           ;USBapp.c: 335: break;
 27973  004DB0  0012               	return	
 27974  004DB2                     
 27975                           ;USBapp.c: 343: USBCheckCDCRequest();
 27976  004DB2  ECB3  F01F         	call	_USBCheckCDCRequest	;wreg free
 27977                           
 27978                           ;USBapp.c: 354: }
 27979                           
 27980                           ;USBapp.c: 353: break;
 27981                           
 27982                           ;USBapp.c: 352: default:
 27983                           
 27984                           ;USBapp.c: 350: break;
 27985                           
 27986                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 27987                           
 27988                           ;USBapp.c: 347: break;
 27989                           
 27990                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 27991                           
 27992                           ;USBapp.c: 344: break;
 27993  004DB6  0012               	return	
 27994  004DB8                     i2l917:
 27995  004DB8  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27996  004DBC  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27997                           
 27998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27999                           ; Switch size 1, requested type "space"
 28000                           ; Number of cases is 2, Range of values is 0 to 127
 28001                           ; switch strategies available:
 28002                           ; Name         Instructions Cycles
 28003                           ; simple_byte            7     4 (average)
 28004                           ;	Chosen strategy is simple_byte
 28005  004DC0  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28006  004DC2  0A00               	xorlw	0	; case 0
 28007  004DC4  B4D8               	btfsc	status,2,c
 28008  004DC6  D004               	goto	i2l12083
 28009  004DC8  0A7F               	xorlw	127	; case 127
 28010  004DCA  A4D8               	btfss	status,2,c
 28011  004DCC  0012               	return	
 28012  004DCE  D018               	goto	i2l12085
 28013  004DD0                     i2l12083:
 28014                           
 28015                           ; Switch size 1, requested type "space"
 28016                           ; Number of cases is 8, Range of values is 1 to 117
 28017                           ; switch strategies available:
 28018                           ; Name         Instructions Cycles
 28019                           ; simple_byte           25    13 (average)
 28020                           ;	Chosen strategy is simple_byte
 28021  004DD0  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28022  004DD2  0A01               	xorlw	1	; case 1
 28023  004DD4  B4D8               	btfsc	status,2,c
 28024  004DD6  D7EA               	goto	i2l923
 28025  004DD8  0A03               	xorlw	3	; case 2
 28026  004DDA  B4D8               	btfsc	status,2,c
 28027  004DDC  0012               	return	
 28028  004DDE  0A01               	xorlw	1	; case 3
 28029  004DE0  B4D8               	btfsc	status,2,c
 28030  004DE2  D7E7               	goto	i2l925
 28031  004DE4  0A06               	xorlw	6	; case 5
 28032  004DE6  B4D8               	btfsc	status,2,c
 28033  004DE8  0012               	return	
 28034  004DEA  0A77               	xorlw	119	; case 114
 28035  004DEC  B4D8               	btfsc	status,2,c
 28036  004DEE  0012               	return	
 28037  004DF0  0A01               	xorlw	1	; case 115
 28038  004DF2  B4D8               	btfsc	status,2,c
 28039  004DF4  0012               	return	
 28040  004DF6  0A07               	xorlw	7	; case 116
 28041  004DF8  B4D8               	btfsc	status,2,c
 28042  004DFA  0012               	return	
 28043  004DFC  0A01               	xorlw	1	; case 117
 28044  004DFE  0012               	return	
 28045  004E00                     i2l12085:
 28046                           
 28047                           ; Switch size 1, requested type "space"
 28048                           ; Number of cases is 1, Range of values is 255 to 255
 28049                           ; switch strategies available:
 28050                           ; Name         Instructions Cycles
 28051                           ; simple_byte            4     3 (average)
 28052                           ;	Chosen strategy is simple_byte
 28053  004E00  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28054  004E02  0AFF               	xorlw	255	; case 255
 28055  004E04  0012               	return	
 28056  004E06                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28057                           	opt stack 0
 28058                           pclatu	equ	0xFFB
 28059                           pclath	equ	0xFFA
 28060                           tblptru	equ	0xFF8
 28061                           tblptrh	equ	0xFF7
 28062                           tblptrl	equ	0xFF6
 28063                           tablat	equ	0xFF5
 28064                           prodh	equ	0xFF4
 28065                           prodl	equ	0xFF3
 28066                           intcon	equ	0xFF2
 28067                           intcon2	equ	0xFF1
 28068                           intcon3	equ	0xFF0
 28069                           indf0	equ	0xFEF
 28070                           postinc0	equ	0xFEE
 28071                           fsr0h	equ	0xFEA
 28072                           fsr0l	equ	0xFE9
 28073                           wreg	equ	0xFE8
 28074                           indf1	equ	0xFE7
 28075                           postdec1	equ	0xFE5
 28076                           fsr1h	equ	0xFE2
 28077                           fsr1l	equ	0xFE1
 28078                           indf2	equ	0xFDF
 28079                           postinc2	equ	0xFDE
 28080                           postdec2	equ	0xFDD
 28081                           plusw2	equ	0xFDB
 28082                           fsr2h	equ	0xFDA
 28083                           fsr2l	equ	0xFD9
 28084                           status	equ	0xFD8
 28085                           
 28086 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28087 ;; Defined at:
 28088 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28089 ;; Parameters:    Size  Location     Type
 28090 ;;		None
 28091 ;; Auto vars:     Size  Location     Type
 28092 ;;  i               1   12[COMRAM] unsigned char 
 28093 ;; Return value:  Size  Location     Type
 28094 ;;                  1    wreg      void 
 28095 ;; Registers used:
 28096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28097 ;; Tracked objects:
 28098 ;;		On entry : 0/0
 28099 ;;		On exit  : 0/0
 28100 ;;		Unchanged: 0/0
 28101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28102 ;;      Params:         0       0       0       0       0       0       0       0       0
 28103 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28105 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28106 ;;Total ram usage:        1 bytes
 28107 ;; Hardware stack levels used:    1
 28108 ;; Hardware stack levels required when called:    3
 28109 ;; This function calls:
 28110 ;;		_CDCInitEP
 28111 ;;		i2_EUSART_Initialize
 28112 ;; This function is called by:
 28113 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28114 ;; This function uses a non-reentrant model
 28115 ;;
 28116                           
 28117                           	psect	text124
 28118  004EBC                     __ptext124:
 28119                           	opt stack 0
 28120  004EBC                     _USBapp_CdcEmulatorInitialize:
 28121                           	opt stack 15
 28122                           
 28123                           ;USBapp.c: 147: CDCInitEP();
 28124                           
 28125                           ;incstack = 0
 28126  004EBC  EC43  F026         	call	_CDCInitEP	;wreg free
 28127                           
 28128                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28129  004EC0  0E00               	movlw	0
 28130  004EC2  0101               	movlb	1	; () banked
 28131  004EC4  6FEA               	movwf	(_line_coding+4)& (0+255),b
 28132                           
 28133                           ; BSR set to: 1
 28134                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28135  004EC6  0E08               	movlw	8
 28136  004EC8  6FEC               	movwf	(_line_coding+6)& (0+255),b
 28137                           
 28138                           ; BSR set to: 1
 28139                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28140  004ECA  0E00               	movlw	0
 28141  004ECC  6FEB               	movwf	(_line_coding+5)& (0+255),b
 28142                           
 28143                           ; BSR set to: 1
 28144                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28145  004ECE  0E00               	movlw	0
 28146  004ED0  6FE6               	movwf	_line_coding& (0+255),b
 28147  004ED2  0E4B               	movlw	75
 28148  004ED4  6FE7               	movwf	(_line_coding+1)& (0+255),b
 28149  004ED6  0E00               	movlw	0
 28150  004ED8  6FE8               	movwf	(_line_coding+2)& (0+255),b
 28151  004EDA  0E00               	movlw	0
 28152  004EDC  6FE9               	movwf	(_line_coding+3)& (0+255),b
 28153                           
 28154                           ; BSR set to: 1
 28155                           ;USBapp.c: 152: EUSART_Initialize();
 28156  004EDE  EC5B  F029         	call	i2_EUSART_Initialize	;wreg free
 28157                           
 28158                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28159  004EE2  0E00               	movlw	0
 28160  004EE4  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28161  004EE6                     i2l7803:
 28162  004EE6  0E3F               	movlw	63
 28163  004EE8  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28164  004EEA  D001               	goto	i2l870
 28165  004EEC  D00C               	goto	i2u563_40
 28166  004EEE                     i2l870:
 28167                           
 28168                           ;USBapp.c: 155: {
 28169                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28170  004EEE  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28171  004EF0  0D01               	mullw	1
 28172  004EF2  0E80               	movlw	low _USB_Buffer
 28173  004EF4  24F3               	addwf	prodl,w,c
 28174  004EF6  6ED9               	movwf	fsr2l,c
 28175  004EF8  0E02               	movlw	high _USB_Buffer
 28176  004EFA  20F4               	addwfc	prodh,w,c
 28177  004EFC  6EDA               	movwf	fsr2h,c
 28178  004EFE  0E00               	movlw	0
 28179  004F00  6EDF               	movwf	indf2,c
 28180  004F02  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28181  004F04  D7F0               	goto	i2l7803
 28182  004F06                     i2u563_40:
 28183                           
 28184                           ;USBapp.c: 157: }
 28185                           ;USBapp.c: 158: NextUSBOut = 0;
 28186  004F06  0E00               	movlw	0
 28187  004F08  0100               	movlb	0	; () banked
 28188  004F0A  6FE8               	movwf	_NextUSBOut& (0+255),b
 28189                           
 28190                           ;USBapp.c: 159: LastRS232Out = 0;
 28191  004F0C  0E00               	movlw	0
 28192  004F0E  6FE6               	movwf	_LastRS232Out& (0+255),b
 28193                           
 28194                           ; BSR set to: 0
 28195  004F10  0012               	return		;funcret
 28196  004F12                     __end_of_USBapp_CdcEmulatorInitialize:
 28197                           	opt stack 0
 28198                           pclatu	equ	0xFFB
 28199                           pclath	equ	0xFFA
 28200                           tblptru	equ	0xFF8
 28201                           tblptrh	equ	0xFF7
 28202                           tblptrl	equ	0xFF6
 28203                           tablat	equ	0xFF5
 28204                           prodh	equ	0xFF4
 28205                           prodl	equ	0xFF3
 28206                           intcon	equ	0xFF2
 28207                           intcon2	equ	0xFF1
 28208                           intcon3	equ	0xFF0
 28209                           indf0	equ	0xFEF
 28210                           postinc0	equ	0xFEE
 28211                           fsr0h	equ	0xFEA
 28212                           fsr0l	equ	0xFE9
 28213                           wreg	equ	0xFE8
 28214                           indf1	equ	0xFE7
 28215                           postdec1	equ	0xFE5
 28216                           fsr1h	equ	0xFE2
 28217                           fsr1l	equ	0xFE1
 28218                           indf2	equ	0xFDF
 28219                           postinc2	equ	0xFDE
 28220                           postdec2	equ	0xFDD
 28221                           plusw2	equ	0xFDB
 28222                           fsr2h	equ	0xFDA
 28223                           fsr2l	equ	0xFD9
 28224                           status	equ	0xFD8
 28225                           
 28226 ;; *************** function _CDCInitEP *****************
 28227 ;; Defined at:
 28228 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28229 ;; Parameters:    Size  Location     Type
 28230 ;;		None
 28231 ;; Auto vars:     Size  Location     Type
 28232 ;;		None
 28233 ;; Return value:  Size  Location     Type
 28234 ;;                  1    wreg      void 
 28235 ;; Registers used:
 28236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28237 ;; Tracked objects:
 28238 ;;		On entry : 0/0
 28239 ;;		On exit  : 0/0
 28240 ;;		Unchanged: 0/0
 28241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28242 ;;      Params:         0       0       0       0       0       0       0       0       0
 28243 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28245 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28246 ;;Total ram usage:        0 bytes
 28247 ;; Hardware stack levels used:    1
 28248 ;; Hardware stack levels required when called:    2
 28249 ;; This function calls:
 28250 ;;		_USBEnableEndpoint
 28251 ;;		i2_USBTransferOnePacket
 28252 ;; This function is called by:
 28253 ;;		_USBapp_CdcEmulatorInitialize
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text125
 28258  004C86                     __ptext125:
 28259                           	opt stack 0
 28260  004C86                     _CDCInitEP:
 28261                           	opt stack 15
 28262                           
 28263                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28264                           
 28265                           ; BSR set to: 0
 28266                           ;incstack = 0
 28267  004C86  0E00               	movlw	0
 28268  004C88  0101               	movlb	1	; () banked
 28269  004C8A  6FE6               	movwf	_line_coding& (0+255),b
 28270  004C8C  0E4B               	movlw	75
 28271  004C8E  6FE7               	movwf	(_line_coding+1)& (0+255),b
 28272  004C90  0E00               	movlw	0
 28273  004C92  6FE8               	movwf	(_line_coding+2)& (0+255),b
 28274  004C94  0E00               	movlw	0
 28275  004C96  6FE9               	movwf	(_line_coding+3)& (0+255),b
 28276                           
 28277                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28278  004C98  0E00               	movlw	0
 28279  004C9A  6FEA               	movwf	(_line_coding+4)& (0+255),b
 28280                           
 28281                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28282  004C9C  0E00               	movlw	0
 28283  004C9E  6FEB               	movwf	(_line_coding+5)& (0+255),b
 28284                           
 28285                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28286  004CA0  0E08               	movlw	8
 28287  004CA2  6FEC               	movwf	(_line_coding+6)& (0+255),b
 28288                           
 28289                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28290  004CA4  0E00               	movlw	0
 28291  004CA6  0100               	movlb	0	; () banked
 28292  004CA8  6FDE               	movwf	_cdc_rx_len& (0+255),b
 28293                           
 28294                           ; BSR set to: 0
 28295                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28296  004CAA  0E1A               	movlw	26
 28297  004CAC  6E09               	movwf	USBEnableEndpoint@options,c
 28298  004CAE  0E01               	movlw	1
 28299  004CB0  EC04  F029         	call	_USBEnableEndpoint
 28300                           
 28301                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28302  004CB4  0E1E               	movlw	30
 28303  004CB6  6E09               	movwf	USBEnableEndpoint@options,c
 28304  004CB8  0E02               	movlw	2
 28305  004CBA  EC04  F029         	call	_USBEnableEndpoint
 28306                           
 28307                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28308  004CBE  0E00               	movlw	0
 28309  004CC0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28310  004CC2  0E40               	movlw	64
 28311  004CC4  6E02               	movwf	i2USBTransferOnePacket@data,c
 28312  004CC6  0E05               	movlw	5
 28313  004CC8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28314  004CCA  0E40               	movlw	64
 28315  004CCC  6E04               	movwf	i2USBTransferOnePacket@len,c
 28316  004CCE  0E02               	movlw	2
 28317  004CD0  EC45  F01E         	call	i2_USBTransferOnePacket
 28318  004CD4  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28319  004CD8  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28320                           
 28321                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28322  004CDC  0E00               	movlw	0
 28323  004CDE  6E33               	movwf	_CDCDataInHandle,c
 28324  004CE0  0E00               	movlw	0
 28325  004CE2  6E34               	movwf	_CDCDataInHandle+1,c
 28326                           
 28327                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28328  004CE4  0E00               	movlw	0
 28329  004CE6  0100               	movlb	0	; () banked
 28330  004CE8  6FEB               	movwf	_cdc_trf_state& (0+255),b
 28331                           
 28332                           ; BSR set to: 0
 28333  004CEA  0012               	return		;funcret
 28334  004CEC                     __end_of_CDCInitEP:
 28335                           	opt stack 0
 28336                           pclatu	equ	0xFFB
 28337                           pclath	equ	0xFFA
 28338                           tblptru	equ	0xFF8
 28339                           tblptrh	equ	0xFF7
 28340                           tblptrl	equ	0xFF6
 28341                           tablat	equ	0xFF5
 28342                           prodh	equ	0xFF4
 28343                           prodl	equ	0xFF3
 28344                           intcon	equ	0xFF2
 28345                           intcon2	equ	0xFF1
 28346                           intcon3	equ	0xFF0
 28347                           indf0	equ	0xFEF
 28348                           postinc0	equ	0xFEE
 28349                           fsr0h	equ	0xFEA
 28350                           fsr0l	equ	0xFE9
 28351                           wreg	equ	0xFE8
 28352                           indf1	equ	0xFE7
 28353                           postdec1	equ	0xFE5
 28354                           fsr1h	equ	0xFE2
 28355                           fsr1l	equ	0xFE1
 28356                           indf2	equ	0xFDF
 28357                           postinc2	equ	0xFDE
 28358                           postdec2	equ	0xFDD
 28359                           plusw2	equ	0xFDB
 28360                           fsr2h	equ	0xFDA
 28361                           fsr2l	equ	0xFD9
 28362                           status	equ	0xFD8
 28363                           
 28364 ;; *************** function i2_USBTransferOnePacket *****************
 28365 ;; Defined at:
 28366 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28367 ;; Parameters:    Size  Location     Type
 28368 ;;  ep              1    wreg     unsigned char 
 28369 ;;  dir             1    0[COMRAM] unsigned char 
 28370 ;;  data            2    1[COMRAM] PTR unsigned char 
 28371 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28372 ;;  len             1    3[COMRAM] unsigned char 
 28373 ;; Auto vars:     Size  Location     Type
 28374 ;;  ep              1    4[COMRAM] unsigned char 
 28375 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28376 ;;		 -> BDT(48), NULL(0), 
 28377 ;; Return value:  Size  Location     Type
 28378 ;;                  2    0[COMRAM] PTR void 
 28379 ;; Registers used:
 28380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28381 ;; Tracked objects:
 28382 ;;		On entry : 0/0
 28383 ;;		On exit  : 0/0
 28384 ;;		Unchanged: 0/0
 28385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28386 ;;      Params:         4       0       0       0       0       0       0       0       0
 28387 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28388 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28389 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28390 ;;Total ram usage:        7 bytes
 28391 ;; Hardware stack levels used:    1
 28392 ;; This function calls:
 28393 ;;		Nothing
 28394 ;; This function is called by:
 28395 ;;		_CDCInitEP
 28396 ;; This function uses a non-reentrant model
 28397 ;;
 28398                           
 28399                           	psect	text126
 28400  003C8A                     __ptext126:
 28401                           	opt stack 0
 28402  003C8A                     i2_USBTransferOnePacket:
 28403                           	opt stack 16
 28404                           
 28405                           ; BSR set to: 0
 28406                           ;incstack = 0
 28407                           ;i2USBTransferOnePacket@ep stored from wreg
 28408  003C8A  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28409                           
 28410                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28411                           ;usb_device.c: 762: if(dir != 0)
 28412  003C8C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28413  003C8E  B4D8               	btfsc	status,2,c
 28414  003C90  D007               	goto	i2l1886
 28415                           
 28416                           ;usb_device.c: 763: {
 28417                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28418  003C92  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28419  003C94  0D02               	mullw	2
 28420  003C96  0ECA               	movlw	low _pBDTEntryIn
 28421  003C98  24F3               	addwf	prodl,w,c
 28422  003C9A  6ED9               	movwf	fsr2l,c
 28423  003C9C  0E00               	movlw	high _pBDTEntryIn
 28424  003C9E  D006               	goto	L31
 28425  003CA0                     i2l1886:
 28426                           
 28427                           ;usb_device.c: 767: else
 28428                           ;usb_device.c: 768: {
 28429                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28430  003CA0  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28431  003CA2  0D02               	mullw	2
 28432  003CA4  0E40               	movlw	low _pBDTEntryOut
 28433  003CA6  24F3               	addwf	prodl,w,c
 28434  003CA8  6ED9               	movwf	fsr2l,c
 28435  003CAA  0E01               	movlw	high _pBDTEntryOut
 28436  003CAC                     L31:
 28437  003CAC  20F4               	addwfc	prodh,w,c
 28438  003CAE  6EDA               	movwf	fsr2h,c
 28439  003CB0  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28440  003CB4  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28441                           
 28442                           ;usb_device.c: 771: }
 28443                           ;usb_device.c: 775: if(handle == 0)
 28444  003CB8  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28445  003CBA  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28446  003CBC  A4D8               	btfss	status,2,c
 28447  003CBE  D005               	goto	i2l1888
 28448                           
 28449                           ;usb_device.c: 776: {
 28450                           ;usb_device.c: 777: return 0;
 28451  003CC0  0E00               	movlw	0
 28452  003CC2  6E01               	movwf	?i2_USBTransferOnePacket,c
 28453  003CC4  0E00               	movlw	0
 28454  003CC6  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28455  003CC8  0012               	return	
 28456  003CCA                     i2l1888:
 28457                           
 28458                           ;usb_device.c: 778: }
 28459                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28460  003CCA  EE20 F002          	lfsr	2,2
 28461  003CCE  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28462  003CD0  26D9               	addwf	fsr2l,f,c
 28463  003CD2  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28464  003CD4  22DA               	addwfc	fsr2h,f,c
 28465  003CD6  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28466  003CDA  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28467                           
 28468                           ;usb_device.c: 781: handle->CNT = len;
 28469  003CDE  EE20 F001          	lfsr	2,1
 28470  003CE2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28471  003CE4  26D9               	addwf	fsr2l,f,c
 28472  003CE6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28473  003CE8  22DA               	addwfc	fsr2h,f,c
 28474  003CEA  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28475                           
 28476                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28477  003CEE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28478  003CF2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28479  003CF6  0E40               	movlw	64
 28480  003CF8  16DF               	andwf	indf2,f,c
 28481                           
 28482                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28483  003CFA  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28484  003CFE  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28485  003D02  0E00               	movlw	0
 28486  003D04  86DB               	bsf	plusw2,3,c
 28487                           
 28488                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28489  003D06  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28490  003D0A  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28491  003D0E  0E00               	movlw	0
 28492  003D10  8EDB               	bsf	plusw2,7,c
 28493                           
 28494                           ;usb_device.c: 787: if(dir != 0)
 28495  003D12  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28496  003D14  B4D8               	btfsc	status,2,c
 28497  003D16  D007               	goto	i2l1890
 28498                           
 28499                           ;usb_device.c: 788: {
 28500                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28501  003D18  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28502  003D1A  0D02               	mullw	2
 28503  003D1C  0ECA               	movlw	low _pBDTEntryIn
 28504  003D1E  24F3               	addwf	prodl,w,c
 28505  003D20  6ED9               	movwf	fsr2l,c
 28506  003D22  0E00               	movlw	high _pBDTEntryIn
 28507  003D24  D006               	goto	L32
 28508  003D26                     i2l1890:
 28509                           
 28510                           ;usb_device.c: 792: else
 28511                           ;usb_device.c: 793: {
 28512                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28513  003D26  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28514  003D28  0D02               	mullw	2
 28515  003D2A  0E40               	movlw	low _pBDTEntryOut
 28516  003D2C  24F3               	addwf	prodl,w,c
 28517  003D2E  6ED9               	movwf	fsr2l,c
 28518  003D30  0E01               	movlw	high _pBDTEntryOut
 28519  003D32                     L32:
 28520  003D32  20F4               	addwfc	prodh,w,c
 28521  003D34  6EDA               	movwf	fsr2h,c
 28522  003D36  0E04               	movlw	4
 28523  003D38  1ADF               	xorwf	indf2,f,c
 28524                           
 28525                           ;usb_device.c: 796: }
 28526                           ;usb_device.c: 797: return (void*)handle;
 28527  003D3A  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28528  003D3E  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28529  003D42  0012               	return	
 28530  003D44                     __end_ofi2_USBTransferOnePacket:
 28531                           	opt stack 0
 28532                           pclatu	equ	0xFFB
 28533                           pclath	equ	0xFFA
 28534                           tblptru	equ	0xFF8
 28535                           tblptrh	equ	0xFF7
 28536                           tblptrl	equ	0xFF6
 28537                           tablat	equ	0xFF5
 28538                           prodh	equ	0xFF4
 28539                           prodl	equ	0xFF3
 28540                           intcon	equ	0xFF2
 28541                           intcon2	equ	0xFF1
 28542                           intcon3	equ	0xFF0
 28543                           indf0	equ	0xFEF
 28544                           postinc0	equ	0xFEE
 28545                           fsr0h	equ	0xFEA
 28546                           fsr0l	equ	0xFE9
 28547                           wreg	equ	0xFE8
 28548                           indf1	equ	0xFE7
 28549                           postdec1	equ	0xFE5
 28550                           fsr1h	equ	0xFE2
 28551                           fsr1l	equ	0xFE1
 28552                           indf2	equ	0xFDF
 28553                           postinc2	equ	0xFDE
 28554                           postdec2	equ	0xFDD
 28555                           plusw2	equ	0xFDB
 28556                           fsr2h	equ	0xFDA
 28557                           fsr2l	equ	0xFD9
 28558                           status	equ	0xFD8
 28559                           
 28560 ;; *************** function _USBEnableEndpoint *****************
 28561 ;; Defined at:
 28562 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28563 ;; Parameters:    Size  Location     Type
 28564 ;;  ep              1    wreg     unsigned char 
 28565 ;;  options         1    8[COMRAM] unsigned char 
 28566 ;; Auto vars:     Size  Location     Type
 28567 ;;  ep              1   11[COMRAM] unsigned char 
 28568 ;;  p               2    9[COMRAM] PTR unsigned char 
 28569 ;;		 -> UEP0(1), 
 28570 ;; Return value:  Size  Location     Type
 28571 ;;                  1    wreg      void 
 28572 ;; Registers used:
 28573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28574 ;; Tracked objects:
 28575 ;;		On entry : 0/0
 28576 ;;		On exit  : 0/0
 28577 ;;		Unchanged: 0/0
 28578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28579 ;;      Params:         1       0       0       0       0       0       0       0       0
 28580 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28582 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28583 ;;Total ram usage:        4 bytes
 28584 ;; Hardware stack levels used:    1
 28585 ;; Hardware stack levels required when called:    1
 28586 ;; This function calls:
 28587 ;;		_USBConfigureEndpoint
 28588 ;; This function is called by:
 28589 ;;		_CDCInitEP
 28590 ;; This function uses a non-reentrant model
 28591 ;;
 28592                           
 28593                           	psect	text127
 28594  005208                     __ptext127:
 28595                           	opt stack 0
 28596  005208                     _USBEnableEndpoint:
 28597                           	opt stack 15
 28598                           
 28599                           ;incstack = 0
 28600                           ;USBEnableEndpoint@ep stored from wreg
 28601  005208  6E0C               	movwf	USBEnableEndpoint@ep,c
 28602                           
 28603                           ;usb_device.c: 647: unsigned char* p;
 28604                           ;usb_device.c: 651: if(options & 0x04)
 28605  00520A  A409               	btfss	USBEnableEndpoint@options,2,c
 28606  00520C  D005               	goto	i2l1881
 28607                           
 28608                           ;usb_device.c: 652: {
 28609                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28610  00520E  0E00               	movlw	0
 28611  005210  6E01               	movwf	USBConfigureEndpoint@direction,c
 28612  005212  500C               	movf	USBEnableEndpoint@ep,w,c
 28613  005214  ECA6  F021         	call	_USBConfigureEndpoint
 28614  005218                     i2l1881:
 28615                           
 28616                           ;usb_device.c: 654: }
 28617                           ;usb_device.c: 655: if(options & 0x02)
 28618  005218  A209               	btfss	USBEnableEndpoint@options,1,c
 28619  00521A  D005               	goto	i2l1882
 28620                           
 28621                           ;usb_device.c: 656: {
 28622                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28623  00521C  0E01               	movlw	1
 28624  00521E  6E01               	movwf	USBConfigureEndpoint@direction,c
 28625  005220  500C               	movf	USBEnableEndpoint@ep,w,c
 28626  005222  ECA6  F021         	call	_USBConfigureEndpoint
 28627  005226                     i2l1882:
 28628                           
 28629                           ;usb_device.c: 658: }
 28630                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28631  005226  500C               	movf	USBEnableEndpoint@ep,w,c
 28632  005228  0D01               	mullw	1
 28633  00522A  0E6A               	movlw	106
 28634  00522C  24F3               	addwf	prodl,w,c
 28635  00522E  6E0A               	movwf	USBEnableEndpoint@p,c
 28636  005230  0E0F               	movlw	15
 28637  005232  20F4               	addwfc	prodh,w,c
 28638  005234  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28639                           
 28640                           ;usb_device.c: 664: *p = options;
 28641  005236  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28642  00523A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28643  00523E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28644  005242  0012               	return		;funcret
 28645  005244                     __end_of_USBEnableEndpoint:
 28646                           	opt stack 0
 28647                           pclatu	equ	0xFFB
 28648                           pclath	equ	0xFFA
 28649                           tblptru	equ	0xFF8
 28650                           tblptrh	equ	0xFF7
 28651                           tblptrl	equ	0xFF6
 28652                           tablat	equ	0xFF5
 28653                           prodh	equ	0xFF4
 28654                           prodl	equ	0xFF3
 28655                           intcon	equ	0xFF2
 28656                           intcon2	equ	0xFF1
 28657                           intcon3	equ	0xFF0
 28658                           indf0	equ	0xFEF
 28659                           postinc0	equ	0xFEE
 28660                           fsr0h	equ	0xFEA
 28661                           fsr0l	equ	0xFE9
 28662                           wreg	equ	0xFE8
 28663                           indf1	equ	0xFE7
 28664                           postdec1	equ	0xFE5
 28665                           fsr1h	equ	0xFE2
 28666                           fsr1l	equ	0xFE1
 28667                           indf2	equ	0xFDF
 28668                           postinc2	equ	0xFDE
 28669                           postdec2	equ	0xFDD
 28670                           plusw2	equ	0xFDB
 28671                           fsr2h	equ	0xFDA
 28672                           fsr2l	equ	0xFD9
 28673                           status	equ	0xFD8
 28674                           
 28675 ;; *************** function _USBConfigureEndpoint *****************
 28676 ;; Defined at:
 28677 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28678 ;; Parameters:    Size  Location     Type
 28679 ;;  EPNum           1    wreg     unsigned char 
 28680 ;;  direction       1    0[COMRAM] unsigned char 
 28681 ;; Auto vars:     Size  Location     Type
 28682 ;;  EPNum           1    5[COMRAM] unsigned char 
 28683 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28684 ;;		 -> BDT(48), 
 28685 ;; Return value:  Size  Location     Type
 28686 ;;                  1    wreg      void 
 28687 ;; Registers used:
 28688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28689 ;; Tracked objects:
 28690 ;;		On entry : 0/0
 28691 ;;		On exit  : 0/0
 28692 ;;		Unchanged: 0/0
 28693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28694 ;;      Params:         1       0       0       0       0       0       0       0       0
 28695 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28696 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28697 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28698 ;;Total ram usage:        8 bytes
 28699 ;; Hardware stack levels used:    1
 28700 ;; This function calls:
 28701 ;;		Nothing
 28702 ;; This function is called by:
 28703 ;;		_USBEnableEndpoint
 28704 ;; This function uses a non-reentrant model
 28705 ;;
 28706                           
 28707                           	psect	text128
 28708  00434C                     __ptext128:
 28709                           	opt stack 0
 28710  00434C                     _USBConfigureEndpoint:
 28711                           	opt stack 15
 28712                           
 28713                           ;incstack = 0
 28714                           ;USBConfigureEndpoint@EPNum stored from wreg
 28715  00434C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28716                           
 28717                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28718                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28719  00434E  0E00               	movlw	0
 28720  004350  6E07               	movwf	USBConfigureEndpoint@handle,c
 28721  004352  0E04               	movlw	4
 28722  004354  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28723                           
 28724                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28725  004356  5001               	movf	USBConfigureEndpoint@direction,w,c
 28726  004358  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28727  00435A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28728  00435C  90D8               	bcf	status,0,c
 28729  00435E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28730  004360  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28731  004362  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28732  004364  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28733  004366  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28734  004368  90D8               	bcf	status,0,c
 28735  00436A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28736  00436C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28737  00436E  90D8               	bcf	status,0,c
 28738  004370  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28739  004372  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28740  004374  5002               	movf	??_USBConfigureEndpoint,w,c
 28741  004376  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28742  004378  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28743  00437A  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28744  00437C  90D8               	bcf	status,0,c
 28745  00437E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28746  004380  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28747  004382  90D8               	bcf	status,0,c
 28748  004384  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28749  004386  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28750  004388  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28751  00438A  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28752  00438C  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28753  00438E  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28754                           
 28755                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28756  004390  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28757  004394  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28758  004398  9EDF               	bcf	indf2,7,c
 28759                           
 28760                           ;usb_device.c: 1242: if(direction == 0)
 28761  00439A  5001               	movf	USBConfigureEndpoint@direction,w,c
 28762  00439C  A4D8               	btfss	status,2,c
 28763  00439E  D007               	goto	i2l1928
 28764                           
 28765                           ;usb_device.c: 1243: {
 28766                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28767  0043A0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28768  0043A2  0D02               	mullw	2
 28769  0043A4  0E40               	movlw	low _pBDTEntryOut
 28770  0043A6  24F3               	addwf	prodl,w,c
 28771  0043A8  6ED9               	movwf	fsr2l,c
 28772  0043AA  0E01               	movlw	high _pBDTEntryOut
 28773  0043AC  D006               	goto	L33
 28774  0043AE                     i2l1928:
 28775                           
 28776                           ;usb_device.c: 1246: else
 28777                           ;usb_device.c: 1247: {
 28778                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28779  0043AE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28780  0043B0  0D02               	mullw	2
 28781  0043B2  0ECA               	movlw	low _pBDTEntryIn
 28782  0043B4  24F3               	addwf	prodl,w,c
 28783  0043B6  6ED9               	movwf	fsr2l,c
 28784  0043B8  0E00               	movlw	high _pBDTEntryIn
 28785  0043BA                     L33:
 28786  0043BA  20F4               	addwfc	prodh,w,c
 28787  0043BC  6EDA               	movwf	fsr2h,c
 28788  0043BE  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28789  0043C2  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28790                           
 28791                           ;usb_device.c: 1249: }
 28792                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28793  0043C6  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28794  0043CA  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28795  0043CE  9CDF               	bcf	indf2,6,c
 28796                           
 28797                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28798  0043D0  EE20 F004          	lfsr	2,4
 28799  0043D4  5007               	movf	USBConfigureEndpoint@handle,w,c
 28800  0043D6  26D9               	addwf	fsr2l,f,c
 28801  0043D8  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28802  0043DA  22DA               	addwfc	fsr2h,f,c
 28803  0043DC  8CDF               	bsf	indf2,6,c
 28804  0043DE  0012               	return		;funcret
 28805  0043E0                     __end_of_USBConfigureEndpoint:
 28806                           	opt stack 0
 28807                           pclatu	equ	0xFFB
 28808                           pclath	equ	0xFFA
 28809                           tblptru	equ	0xFF8
 28810                           tblptrh	equ	0xFF7
 28811                           tblptrl	equ	0xFF6
 28812                           tablat	equ	0xFF5
 28813                           prodh	equ	0xFF4
 28814                           prodl	equ	0xFF3
 28815                           intcon	equ	0xFF2
 28816                           intcon2	equ	0xFF1
 28817                           intcon3	equ	0xFF0
 28818                           indf0	equ	0xFEF
 28819                           postinc0	equ	0xFEE
 28820                           fsr0h	equ	0xFEA
 28821                           fsr0l	equ	0xFE9
 28822                           wreg	equ	0xFE8
 28823                           indf1	equ	0xFE7
 28824                           postdec1	equ	0xFE5
 28825                           fsr1h	equ	0xFE2
 28826                           fsr1l	equ	0xFE1
 28827                           indf2	equ	0xFDF
 28828                           postinc2	equ	0xFDE
 28829                           postdec2	equ	0xFDD
 28830                           plusw2	equ	0xFDB
 28831                           fsr2h	equ	0xFDA
 28832                           fsr2l	equ	0xFD9
 28833                           status	equ	0xFD8
 28834                           
 28835 ;; *************** function _USBCheckCDCRequest *****************
 28836 ;; Defined at:
 28837 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28838 ;; Parameters:    Size  Location     Type
 28839 ;;		None
 28840 ;; Auto vars:     Size  Location     Type
 28841 ;;		None
 28842 ;; Return value:  Size  Location     Type
 28843 ;;                  1    wreg      void 
 28844 ;; Registers used:
 28845 ;;		wreg, status,2, status,0
 28846 ;; Tracked objects:
 28847 ;;		On entry : 0/0
 28848 ;;		On exit  : 0/0
 28849 ;;		Unchanged: 0/0
 28850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28851 ;;      Params:         0       0       0       0       0       0       0       0       0
 28852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28855 ;;Total ram usage:        0 bytes
 28856 ;; Hardware stack levels used:    1
 28857 ;; This function calls:
 28858 ;;		Nothing
 28859 ;; This function is called by:
 28860 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28861 ;; This function uses a non-reentrant model
 28862 ;;
 28863                           
 28864                           	psect	text129
 28865  003F66                     __ptext129:
 28866                           	opt stack 0
 28867  003F66                     _USBCheckCDCRequest:
 28868                           	opt stack 18
 28869                           
 28870                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28871                           
 28872                           ;incstack = 0
 28873  003F66  0104               	movlb	4	; () banked
 28874  003F68  5130               	movf	48,w,b	;volatile
 28875  003F6A  0B1F               	andlw	31
 28876  003F6C  06E8               	decf	wreg,f,c
 28877  003F6E  A4D8               	btfss	status,2,c
 28878  003F70  0012               	return	
 28879                           
 28880                           ; BSR set to: 4
 28881                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28882                           
 28883                           ; BSR set to: 4
 28884                           
 28885                           ; BSR set to: 4
 28886  003F72  3930               	swapf	48,w,b	;volatile
 28887  003F74  32E8               	rrcf	wreg,f,c
 28888  003F76  0B03               	andlw	3
 28889  003F78  06E8               	decf	wreg,f,c
 28890  003F7A  A4D8               	btfss	status,2,c
 28891  003F7C  0012               	return	
 28892                           
 28893                           ; BSR set to: 4
 28894                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28895                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28896                           
 28897                           ; BSR set to: 4
 28898                           
 28899                           ; BSR set to: 4
 28900  003F7E  5134               	movf	52,w,b	;volatile
 28901  003F80  B4D8               	btfsc	status,2,c
 28902  003F82  D037               	goto	i2l2149
 28903                           
 28904                           ; BSR set to: 4
 28905  003F84  0534               	decf	52,w,b	;volatile
 28906  003F86  A4D8               	btfss	status,2,c
 28907  003F88  0012               	return	
 28908  003F8A  D033               	goto	i2l2149
 28909  003F8C                     
 28910                           ; BSR set to: 4
 28911                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28912                           
 28913                           ; BSR set to: 4
 28914  003F8C  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 28915  003F8E  0100               	movlb	0	; () banked
 28916  003F90  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28917  003F92  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28918  003F94  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28919                           
 28920                           ; BSR set to: 0
 28921                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 28922  003F96  0E00               	movlw	0
 28923  003F98  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28924  003F9A  0E08               	movlw	8
 28925  003F9C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28926                           
 28927                           ; BSR set to: 0
 28928                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28929  003F9E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28930                           
 28931                           ; BSR set to: 0
 28932                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 28933  003FA0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28934                           
 28935                           ;usb_device_cdc.c: 212: break;
 28936  003FA2  0012               	return	
 28937  003FA4                     
 28938                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28939                           
 28940                           ; BSR set to: 0
 28941  003FA4  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 28942  003FA6  0100               	movlb	0	; () banked
 28943  003FA8  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28944  003FAA  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28945  003FAC  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28946                           
 28947                           ; BSR set to: 0
 28948                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 28949  003FAE  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28950                           
 28951                           ;usb_device_cdc.c: 217: break;
 28952  003FB0  0012               	return	
 28953  003FB2                     i2l2153:
 28954                           
 28955                           ; BSR set to: 4
 28956                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 28957  003FB2  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 28958  003FB6  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 28959                           
 28960                           ; BSR set to: 4
 28961                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 28962  003FBA  0ED4               	movlw	low _cdc_notice
 28963  003FBC  0100               	movlb	0	; () banked
 28964  003FBE  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 28965  003FC0  0E01               	movlw	high _cdc_notice
 28966  003FC2  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28967                           
 28968                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 28969  003FC4  0E62               	movlw	low _USART_mySetLineCodingHandler
 28970  003FC6  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28971  003FC8  0E4E               	movlw	high _USART_mySetLineCodingHandler
 28972  003FCA  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28973                           
 28974                           ; BSR set to: 0
 28975                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 28976  003FCC  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28977                           
 28978                           ;usb_device_cdc.c: 224: break;
 28979  003FCE  0012               	return	
 28980  003FD0                     
 28981                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28982                           
 28983                           ; BSR set to: 0
 28984  003FD0  0EE6               	movlw	low _line_coding
 28985  003FD2  0100               	movlb	0	; () banked
 28986  003FD4  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28987  003FD6  0E01               	movlw	high _line_coding
 28988  003FD8  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28989                           
 28990                           ; BSR set to: 0
 28991  003FDA  0E00               	movlw	0
 28992  003FDC  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28993  003FDE  0E07               	movlw	7
 28994  003FE0  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28995                           
 28996                           ; BSR set to: 0
 28997  003FE2  0EC1               	movlw	193
 28998  003FE4  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28999                           
 29000                           ;usb_device_cdc.c: 231: break;
 29001  003FE6  0012               	return	
 29002  003FE8                     i2l2155:
 29003                           
 29004                           ; BSR set to: 4
 29005                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29006  003FE8  C432 F15A          	movff	1074,_control_signal_bitmap	;volatile
 29007                           
 29008                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29009  003FEC  0100               	movlb	0	; () banked
 29010  003FEE  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29011                           
 29012                           ; BSR set to: 0
 29013                           ;usb_device_cdc.c: 260: }
 29014                           
 29015                           ; BSR set to: 0
 29016                           ;usb_device_cdc.c: 259: break;
 29017                           
 29018                           ;usb_device_cdc.c: 258: default:
 29019                           
 29020                           ;usb_device_cdc.c: 256: break;
 29021  003FF0  0012               	return	
 29022  003FF2                     i2l2149:
 29023                           
 29024                           ; BSR set to: 0
 29025  003FF2  0104               	movlb	4	; () banked
 29026  003FF4  5131               	movf	49,w,b	;volatile
 29027                           
 29028                           ; Switch size 1, requested type "space"
 29029                           ; Number of cases is 5, Range of values is 0 to 34
 29030                           ; switch strategies available:
 29031                           ; Name         Instructions Cycles
 29032                           ; simple_byte           16     9 (average)
 29033                           ;	Chosen strategy is simple_byte
 29034  003FF6  0A00               	xorlw	0	; case 0
 29035  003FF8  B4D8               	btfsc	status,2,c
 29036  003FFA  D7C8               	goto	i2l2150
 29037  003FFC  0A01               	xorlw	1	; case 1
 29038  003FFE  B4D8               	btfsc	status,2,c
 29039  004000  D7D1               	goto	i2l2152
 29040  004002  0A21               	xorlw	33	; case 32
 29041  004004  B4D8               	btfsc	status,2,c
 29042  004006  D7D5               	goto	i2l2153
 29043  004008  0A01               	xorlw	1	; case 33
 29044  00400A  B4D8               	btfsc	status,2,c
 29045  00400C  D7E1               	goto	i2l2154
 29046  00400E  0A03               	xorlw	3	; case 34
 29047  004010  A4D8               	btfss	status,2,c
 29048  004012  0012               	return	
 29049  004014  D7E9               	goto	i2l2155
 29050  004016                     __end_of_USBCheckCDCRequest:
 29051                           	opt stack 0
 29052                           pclatu	equ	0xFFB
 29053                           pclath	equ	0xFFA
 29054                           tblptru	equ	0xFF8
 29055                           tblptrh	equ	0xFF7
 29056                           tblptrl	equ	0xFF6
 29057                           tablat	equ	0xFF5
 29058                           prodh	equ	0xFF4
 29059                           prodl	equ	0xFF3
 29060                           intcon	equ	0xFF2
 29061                           intcon2	equ	0xFF1
 29062                           intcon3	equ	0xFF0
 29063                           indf0	equ	0xFEF
 29064                           postinc0	equ	0xFEE
 29065                           fsr0h	equ	0xFEA
 29066                           fsr0l	equ	0xFE9
 29067                           wreg	equ	0xFE8
 29068                           indf1	equ	0xFE7
 29069                           postdec1	equ	0xFE5
 29070                           fsr1h	equ	0xFE2
 29071                           fsr1l	equ	0xFE1
 29072                           indf2	equ	0xFDF
 29073                           postinc2	equ	0xFDE
 29074                           postdec2	equ	0xFDD
 29075                           plusw2	equ	0xFDB
 29076                           fsr2h	equ	0xFDA
 29077                           fsr2l	equ	0xFD9
 29078                           status	equ	0xFD8
 29079                           
 29080 ;; *************** function _USBCtrlTrfOutHandler *****************
 29081 ;; Defined at:
 29082 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29083 ;; Parameters:    Size  Location     Type
 29084 ;;		None
 29085 ;; Auto vars:     Size  Location     Type
 29086 ;;		None
 29087 ;; Return value:  Size  Location     Type
 29088 ;;                  1    wreg      void 
 29089 ;; Registers used:
 29090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29091 ;; Tracked objects:
 29092 ;;		On entry : 0/0
 29093 ;;		On exit  : 0/0
 29094 ;;		Unchanged: 0/0
 29095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29096 ;;      Params:         0       0       0       0       0       0       0       0       0
 29097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29099 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29100 ;;Total ram usage:        0 bytes
 29101 ;; Hardware stack levels used:    1
 29102 ;; Hardware stack levels required when called:    3
 29103 ;; This function calls:
 29104 ;;		_USBCtrlTrfRxService
 29105 ;; This function is called by:
 29106 ;;		_USBCtrlEPService
 29107 ;; This function uses a non-reentrant model
 29108 ;;
 29109                           
 29110                           	psect	text130
 29111  004E06                     __ptext130:
 29112                           	opt stack 0
 29113  004E06                     _USBCtrlTrfOutHandler:
 29114                           	opt stack 15
 29115                           
 29116                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29117                           
 29118                           ;incstack = 0
 29119  004E06  0E02               	movlw	2
 29120  004E08  184C               	xorwf	_controlTransferState,w,c	;volatile
 29121  004E0A  A4D8               	btfss	status,2,c
 29122  004E0C  D003               	goto	i2l2036
 29123                           
 29124                           ;usb_device.c: 2172: {
 29125                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29126  004E0E  EC82  F013         	call	_USBCtrlTrfRxService	;wreg free
 29127                           
 29128                           ;usb_device.c: 2174: }
 29129  004E12  0012               	return	
 29130  004E14                     i2l2036:
 29131                           
 29132                           ;usb_device.c: 2175: else
 29133                           ;usb_device.c: 2176: {
 29134                           ;usb_device.c: 2179: controlTransferState = 0;
 29135  004E14  0E00               	movlw	0
 29136  004E16  6E4C               	movwf	_controlTransferState,c	;volatile
 29137                           
 29138                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29139  004E18  5049               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29140  004E1A  A4D8               	btfss	status,2,c
 29141  004E1C  D01F               	goto	i2l2038
 29142                           
 29143                           ;usb_device.c: 2187: {
 29144                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29145  004E1E  EE20 F001          	lfsr	2,1
 29146  004E22  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29147  004E24  26D9               	addwf	fsr2l,f,c
 29148  004E26  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29149  004E28  22DA               	addwfc	fsr2h,f,c
 29150  004E2A  0E08               	movlw	8
 29151  004E2C  6EDF               	movwf	indf2,c
 29152                           
 29153                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29154  004E2E  EE20 F002          	lfsr	2,2
 29155  004E32  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29156  004E34  26D9               	addwf	fsr2l,f,c
 29157  004E36  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29158  004E38  22DA               	addwfc	fsr2h,f,c
 29159  004E3A  0E30               	movlw	48
 29160  004E3C  6EDE               	movwf	postinc2,c
 29161  004E3E  0E04               	movlw	4
 29162  004E40  6EDD               	movwf	postdec2,c
 29163                           
 29164                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29165  004E42  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29166  004E46  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29167  004E4A  0E0C               	movlw	12
 29168  004E4C  6EDF               	movwf	indf2,c
 29169                           
 29170                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29171  004E4E  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29172  004E52  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29173  004E56  0E00               	movlw	0
 29174  004E58  8EDB               	bsf	plusw2,7,c
 29175                           
 29176                           ;usb_device.c: 2192: }
 29177  004E5A  0012               	return	
 29178  004E5C                     i2l2038:
 29179                           
 29180                           ;usb_device.c: 2193: else
 29181                           ;usb_device.c: 2194: {
 29182                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29183  004E5C  0E00               	movlw	0
 29184  004E5E  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29185  004E60  0012               	return	
 29186  004E62                     __end_of_USBCtrlTrfOutHandler:
 29187                           	opt stack 0
 29188                           pclatu	equ	0xFFB
 29189                           pclath	equ	0xFFA
 29190                           tblptru	equ	0xFF8
 29191                           tblptrh	equ	0xFF7
 29192                           tblptrl	equ	0xFF6
 29193                           tablat	equ	0xFF5
 29194                           prodh	equ	0xFF4
 29195                           prodl	equ	0xFF3
 29196                           intcon	equ	0xFF2
 29197                           intcon2	equ	0xFF1
 29198                           intcon3	equ	0xFF0
 29199                           indf0	equ	0xFEF
 29200                           postinc0	equ	0xFEE
 29201                           fsr0h	equ	0xFEA
 29202                           fsr0l	equ	0xFE9
 29203                           wreg	equ	0xFE8
 29204                           indf1	equ	0xFE7
 29205                           postdec1	equ	0xFE5
 29206                           fsr1h	equ	0xFE2
 29207                           fsr1l	equ	0xFE1
 29208                           indf2	equ	0xFDF
 29209                           postinc2	equ	0xFDE
 29210                           postdec2	equ	0xFDD
 29211                           plusw2	equ	0xFDB
 29212                           fsr2h	equ	0xFDA
 29213                           fsr2l	equ	0xFD9
 29214                           status	equ	0xFD8
 29215                           
 29216 ;; *************** function _USBCtrlTrfRxService *****************
 29217 ;; Defined at:
 29218 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29219 ;; Parameters:    Size  Location     Type
 29220 ;;		None
 29221 ;; Auto vars:     Size  Location     Type
 29222 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29223 ;;  i               1   17[COMRAM] unsigned char 
 29224 ;; Return value:  Size  Location     Type
 29225 ;;                  1    wreg      void 
 29226 ;; Registers used:
 29227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29228 ;; Tracked objects:
 29229 ;;		On entry : 0/0
 29230 ;;		On exit  : 0/0
 29231 ;;		Unchanged: 0/0
 29232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29233 ;;      Params:         0       0       0       0       0       0       0       0       0
 29234 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29236 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29237 ;;Total ram usage:        2 bytes
 29238 ;; Hardware stack levels used:    1
 29239 ;; Hardware stack levels required when called:    2
 29240 ;; This function calls:
 29241 ;;		_USART_mySetLineCodingHandler
 29242 ;;		_USBCtrlEPAllowStatusStage
 29243 ;; This function is called by:
 29244 ;;		_USBCtrlTrfOutHandler
 29245 ;; This function uses a non-reentrant model
 29246 ;;
 29247                           
 29248                           	psect	text131
 29249  002704                     __ptext131:
 29250                           	opt stack 0
 29251  002704                     _USBCtrlTrfRxService:
 29252                           	opt stack 15
 29253                           
 29254                           ;usb_device.c: 1520: uint8_t byteToRead;
 29255                           ;usb_device.c: 1521: uint8_t i;
 29256                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29257                           
 29258                           ;incstack = 0
 29259  002704  EE20 F001          	lfsr	2,1
 29260  002708  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29261  00270A  26D9               	addwf	fsr2l,f,c
 29262  00270C  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29263  00270E  22DA               	addwfc	fsr2h,f,c
 29264  002710  50DF               	movf	indf2,w,c
 29265  002712  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29266                           
 29267                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29268  002714  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29269  002716  0100               	movlb	0	; () banked
 29270  002718  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29271  00271A  0E00               	movlw	0
 29272  00271C  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29273  00271E  A0D8               	btfss	status,0,c
 29274                           
 29275                           ; BSR set to: 0
 29276                           ;usb_device.c: 1532: {
 29277                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29278  002720  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29279                           
 29280                           ; BSR set to: 0
 29281                           ;usb_device.c: 1534: }
 29282                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29283                           
 29284                           ; BSR set to: 0
 29285  002724  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29286  002726  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29287  002728  0E00               	movlw	0
 29288  00272A  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29289                           
 29290                           ; BSR set to: 0
 29291                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29292  00272C  0E00               	movlw	0
 29293  00272E  6E12               	movwf	USBCtrlTrfRxService@i,c
 29294  002730  D011               	goto	i2l1962
 29295  002732                     
 29296                           ; BSR set to: 0
 29297                           ;usb_device.c: 1541: {
 29298                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29299                           
 29300                           ; BSR set to: 0
 29301  002732  5012               	movf	USBCtrlTrfRxService@i,w,c
 29302  002734  0D01               	mullw	1
 29303  002736  0E38               	movlw	56
 29304  002738  24F3               	addwf	prodl,w,c
 29305  00273A  6ED9               	movwf	fsr2l,c
 29306  00273C  0E04               	movlw	4
 29307  00273E  20F4               	addwfc	prodh,w,c
 29308  002740  6EDA               	movwf	fsr2h,c
 29309  002742  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 29310  002746  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29311  00274A  CFDF FFE7          	movff	indf2,indf1
 29312                           
 29313                           ; BSR set to: 0
 29314  00274E  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 29315  002750  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29316                           
 29317                           ; BSR set to: 0
 29318  002752  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29319  002754                     i2l1962:
 29320                           
 29321                           ; BSR set to: 0
 29322                           
 29323                           ; BSR set to: 0
 29324  002754  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29325  002756  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29326  002758  A0D8               	btfss	status,0,c
 29327  00275A  D7EB               	goto	i2l1963
 29328                           
 29329                           ; BSR set to: 0
 29330                           ;usb_device.c: 1543: }
 29331                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29332                           
 29333                           ; BSR set to: 0
 29334  00275C  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29335  00275E  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29336  002760  B4D8               	btfsc	status,2,c
 29337  002762  D032               	goto	i2l1965
 29338                           
 29339                           ; BSR set to: 0
 29340                           ;usb_device.c: 1548: {
 29341                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29342  002764  EE20 F001          	lfsr	2,1
 29343  002768  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29344  00276A  26D9               	addwf	fsr2l,f,c
 29345  00276C  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29346  00276E  22DA               	addwfc	fsr2h,f,c
 29347  002770  0E08               	movlw	8
 29348  002772  6EDF               	movwf	indf2,c
 29349                           
 29350                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29351  002774  EE20 F002          	lfsr	2,2
 29352  002778  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29353  00277A  26D9               	addwf	fsr2l,f,c
 29354  00277C  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29355  00277E  22DA               	addwfc	fsr2h,f,c
 29356  002780  0E38               	movlw	56
 29357  002782  6EDE               	movwf	postinc2,c
 29358  002784  0E04               	movlw	4
 29359  002786  6EDD               	movwf	postdec2,c
 29360                           
 29361                           ; BSR set to: 0
 29362                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29363  002788  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29364  00278C  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29365  002790  BCDF               	btfsc	indf2,6,c
 29366  002792  D00D               	goto	i2l1966
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;usb_device.c: 1552: {
 29370                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29371  002794  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29372  002798  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29373  00279C  0E48               	movlw	72
 29374  00279E  6EDF               	movwf	indf2,c
 29375                           
 29376                           ; BSR set to: 0
 29377                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29378  0027A0  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29379  0027A4  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29380  0027A8  0E00               	movlw	0
 29381  0027AA  8EDB               	bsf	plusw2,7,c
 29382                           
 29383                           ;usb_device.c: 1555: }
 29384  0027AC  0012               	return	
 29385  0027AE                     i2l1966:
 29386                           
 29387                           ; BSR set to: 0
 29388                           ;usb_device.c: 1556: else
 29389                           ;usb_device.c: 1557: {
 29390                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29391                           
 29392                           ; BSR set to: 0
 29393  0027AE  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29394  0027B2  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29395  0027B6  0E08               	movlw	8
 29396  0027B8  6EDF               	movwf	indf2,c
 29397                           
 29398                           ; BSR set to: 0
 29399                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29400  0027BA  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29401  0027BE  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29402  0027C2  0E00               	movlw	0
 29403  0027C4  8EDB               	bsf	plusw2,7,c
 29404                           
 29405                           ; BSR set to: 0
 29406                           ;usb_device.c: 1560: }
 29407                           ;usb_device.c: 1561: }
 29408  0027C6  0012               	return	
 29409  0027C8                     i2l1965:
 29410                           
 29411                           ; BSR set to: 0
 29412                           ;usb_device.c: 1562: else
 29413                           ;usb_device.c: 1563: {
 29414                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29415                           
 29416                           ; BSR set to: 0
 29417  0027C8  EE20 F001          	lfsr	2,1
 29418  0027CC  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29419  0027CE  26D9               	addwf	fsr2l,f,c
 29420  0027D0  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29421  0027D2  22DA               	addwfc	fsr2h,f,c
 29422  0027D4  0E08               	movlw	8
 29423  0027D6  6EDF               	movwf	indf2,c
 29424                           
 29425                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29426  0027D8  EE20 F002          	lfsr	2,2
 29427  0027DC  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29428  0027DE  26D9               	addwf	fsr2l,f,c
 29429  0027E0  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29430  0027E2  22DA               	addwfc	fsr2h,f,c
 29431  0027E4  0E30               	movlw	48
 29432  0027E6  6EDE               	movwf	postinc2,c
 29433  0027E8  0E04               	movlw	4
 29434  0027EA  6EDD               	movwf	postdec2,c
 29435                           
 29436                           ; BSR set to: 0
 29437                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29438  0027EC  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29439  0027F0  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29440  0027F4  0E04               	movlw	4
 29441  0027F6  6EDF               	movwf	indf2,c
 29442                           
 29443                           ; BSR set to: 0
 29444                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29445  0027F8  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29446  0027FC  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29447  002800  0E00               	movlw	0
 29448  002802  8EDB               	bsf	plusw2,7,c
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29452  002804  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29453  002806  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29454  002808  B4D8               	btfsc	status,2,c
 29455  00280A  D00E               	goto	i2u664_49
 29456                           
 29457                           ; BSR set to: 0
 29458                           ;usb_device.c: 1581: {
 29459                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29460  00280C  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29461  002810  D801               	call	i2u664_48
 29462  002812  D00A               	goto	i2u664_49
 29463  002814                     i2u664_48:
 29464  002814  0005               	push	
 29465  002816  6EFA               	movwf	pclath,c
 29466  002818  50DE               	movf	postinc2,w,c
 29467  00281A  6EFD               	movwf	tosl,c
 29468  00281C  50DE               	movf	postinc2,w,c
 29469  00281E  6EFE               	movwf	tosh,c
 29470  002820  50F8               	movf	tblptru,w,c
 29471  002822  6EFF               	movwf	tosu,c
 29472  002824  50FA               	movf	pclath,w,c
 29473  002826  0012               	return		;indir
 29474  002828                     i2u664_49:
 29475                           
 29476                           ;usb_device.c: 1588: }
 29477                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29478  002828  0100               	movlb	0	; () banked
 29479  00282A  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29480                           
 29481                           ; BSR set to: 0
 29482                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29483  00282C  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29484  00282E  A4D8               	btfss	status,2,c
 29485  002830  0012               	return	
 29486                           
 29487                           ; BSR set to: 0
 29488                           ;usb_device.c: 1604: {
 29489                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29490  002832  EC25  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29491  002836  0012               	return	
 29492  002838                     __end_of_USBCtrlTrfRxService:
 29493                           	opt stack 0
 29494                           tosu	equ	0xFFF
 29495                           tosh	equ	0xFFE
 29496                           tosl	equ	0xFFD
 29497                           pclatu	equ	0xFFB
 29498                           pclath	equ	0xFFA
 29499                           tblptru	equ	0xFF8
 29500                           tblptrh	equ	0xFF7
 29501                           tblptrl	equ	0xFF6
 29502                           tablat	equ	0xFF5
 29503                           prodh	equ	0xFF4
 29504                           prodl	equ	0xFF3
 29505                           intcon	equ	0xFF2
 29506                           intcon2	equ	0xFF1
 29507                           intcon3	equ	0xFF0
 29508                           indf0	equ	0xFEF
 29509                           postinc0	equ	0xFEE
 29510                           fsr0h	equ	0xFEA
 29511                           fsr0l	equ	0xFE9
 29512                           wreg	equ	0xFE8
 29513                           indf1	equ	0xFE7
 29514                           postdec1	equ	0xFE5
 29515                           fsr1h	equ	0xFE2
 29516                           fsr1l	equ	0xFE1
 29517                           indf2	equ	0xFDF
 29518                           postinc2	equ	0xFDE
 29519                           postdec2	equ	0xFDD
 29520                           plusw2	equ	0xFDB
 29521                           fsr2h	equ	0xFDA
 29522                           fsr2l	equ	0xFD9
 29523                           status	equ	0xFD8
 29524                           
 29525 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29526 ;; Defined at:
 29527 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29528 ;; Parameters:    Size  Location     Type
 29529 ;;		None
 29530 ;; Auto vars:     Size  Location     Type
 29531 ;;		None
 29532 ;; Return value:  Size  Location     Type
 29533 ;;                  1    wreg      void 
 29534 ;; Registers used:
 29535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29536 ;; Tracked objects:
 29537 ;;		On entry : 0/0
 29538 ;;		On exit  : 0/0
 29539 ;;		Unchanged: 0/0
 29540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29541 ;;      Params:         0       0       0       0       0       0       0       0       0
 29542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29545 ;;Total ram usage:        0 bytes
 29546 ;; Hardware stack levels used:    1
 29547 ;; This function calls:
 29548 ;;		Nothing
 29549 ;; This function is called by:
 29550 ;;		_USBDeviceTasks
 29551 ;;		_USBCtrlEPServiceComplete
 29552 ;;		_USBCtrlTrfRxService
 29553 ;; This function uses a non-reentrant model
 29554 ;;
 29555                           
 29556                           	psect	text132
 29557  003A4A                     __ptext132:
 29558                           	opt stack 0
 29559  003A4A                     _USBCtrlEPAllowStatusStage:
 29560                           	opt stack 16
 29561                           
 29562                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29563                           
 29564                           ;incstack = 0
 29565  003A4A  5046               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29566  003A4C  A4D8               	btfss	status,2,c
 29567  003A4E  0012               	return	
 29568                           
 29569                           ;usb_device.c: 1112: {
 29570                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29571  003A50  0E01               	movlw	1
 29572  003A52  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29573                           
 29574                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29575  003A54  5045               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29576  003A56  A4D8               	btfss	status,2,c
 29577  003A58  0012               	return	
 29578                           
 29579                           ;usb_device.c: 1115: {
 29580                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29581  003A5A  0E01               	movlw	1
 29582  003A5C  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29583                           
 29584                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29585  003A5E  0E02               	movlw	2
 29586  003A60  184C               	xorwf	_controlTransferState,w,c	;volatile
 29587  003A62  A4D8               	btfss	status,2,c
 29588  003A64  D016               	goto	i2l1916
 29589                           
 29590                           ;usb_device.c: 1121: {
 29591                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29592  003A66  0100               	movlb	0	; () banked
 29593  003A68  EE20 F001          	lfsr	2,1
 29594  003A6C  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29595  003A6E  26D9               	addwf	fsr2l,f,c
 29596  003A70  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29597  003A72  22DA               	addwfc	fsr2h,f,c
 29598  003A74  0E00               	movlw	0
 29599  003A76  6EDF               	movwf	indf2,c
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29603  003A78  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29604  003A7C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29605  003A80  0E48               	movlw	72
 29606  003A82  6EDF               	movwf	indf2,c
 29607                           
 29608                           ; BSR set to: 0
 29609                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29610  003A84  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29611  003A88  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29612  003A8C  0E00               	movlw	0
 29613  003A8E  8EDB               	bsf	plusw2,7,c
 29614                           
 29615                           ;usb_device.c: 1125: }
 29616  003A90  0012               	return	
 29617  003A92                     i2l1916:
 29618                           
 29619                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29620                           
 29621                           ; BSR set to: 0
 29622  003A92  044C               	decf	_controlTransferState,w,c	;volatile
 29623  003A94  A4D8               	btfss	status,2,c
 29624  003A96  0012               	return	
 29625                           
 29626                           ;usb_device.c: 1127: {
 29627                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29628  003A98  0E00               	movlw	0
 29629  003A9A  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29630                           
 29631                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29632  003A9C  EE20 F001          	lfsr	2,1
 29633  003AA0  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29634  003AA2  26D9               	addwf	fsr2l,f,c
 29635  003AA4  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29636  003AA6  22DA               	addwfc	fsr2h,f,c
 29637  003AA8  0E08               	movlw	8
 29638  003AAA  6EDF               	movwf	indf2,c
 29639                           
 29640                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29641  003AAC  EE20 F002          	lfsr	2,2
 29642  003AB0  5037               	movf	_pBDTEntryEP0OutCurrent,w,c
 29643  003AB2  26D9               	addwf	fsr2l,f,c
 29644  003AB4  5038               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29645  003AB6  22DA               	addwfc	fsr2h,f,c
 29646  003AB8  0E30               	movlw	48
 29647  003ABA  6EDE               	movwf	postinc2,c
 29648  003ABC  0E04               	movlw	4
 29649  003ABE  6EDD               	movwf	postdec2,c
 29650                           
 29651                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29652  003AC0  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29653  003AC4  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29654  003AC8  0E04               	movlw	4
 29655  003ACA  6EDF               	movwf	indf2,c
 29656                           
 29657                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29658  003ACC  C037  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29659  003AD0  C038  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29660  003AD4  0E00               	movlw	0
 29661  003AD6  8EDB               	bsf	plusw2,7,c
 29662                           
 29663                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29664  003AD8  0E01               	movlw	1
 29665  003ADA  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29666                           
 29667                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29668  003ADC  EE20 F001          	lfsr	2,1
 29669  003AE0  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29670  003AE2  26D9               	addwf	fsr2l,f,c
 29671  003AE4  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29672  003AE6  22DA               	addwfc	fsr2h,f,c
 29673  003AE8  0E08               	movlw	8
 29674  003AEA  6EDF               	movwf	indf2,c
 29675                           
 29676                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29677  003AEC  EE20 F002          	lfsr	2,2
 29678  003AF0  5035               	movf	_pBDTEntryEP0OutNext,w,c
 29679  003AF2  26D9               	addwf	fsr2l,f,c
 29680  003AF4  5036               	movf	_pBDTEntryEP0OutNext+1,w,c
 29681  003AF6  22DA               	addwfc	fsr2h,f,c
 29682  003AF8  0E30               	movlw	48
 29683  003AFA  6EDE               	movwf	postinc2,c
 29684  003AFC  0E04               	movlw	4
 29685  003AFE  6EDD               	movwf	postdec2,c
 29686                           
 29687                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29688  003B00  C035  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29689  003B04  C036  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29690  003B08  0E80               	movlw	128
 29691  003B0A  6EDF               	movwf	indf2,c
 29692  003B0C  0012               	return	
 29693  003B0E                     __end_of_USBCtrlEPAllowStatusStage:
 29694                           	opt stack 0
 29695                           tosu	equ	0xFFF
 29696                           tosh	equ	0xFFE
 29697                           tosl	equ	0xFFD
 29698                           pclatu	equ	0xFFB
 29699                           pclath	equ	0xFFA
 29700                           tblptru	equ	0xFF8
 29701                           tblptrh	equ	0xFF7
 29702                           tblptrl	equ	0xFF6
 29703                           tablat	equ	0xFF5
 29704                           prodh	equ	0xFF4
 29705                           prodl	equ	0xFF3
 29706                           intcon	equ	0xFF2
 29707                           intcon2	equ	0xFF1
 29708                           intcon3	equ	0xFF0
 29709                           indf0	equ	0xFEF
 29710                           postinc0	equ	0xFEE
 29711                           fsr0h	equ	0xFEA
 29712                           fsr0l	equ	0xFE9
 29713                           wreg	equ	0xFE8
 29714                           indf1	equ	0xFE7
 29715                           postdec1	equ	0xFE5
 29716                           fsr1h	equ	0xFE2
 29717                           fsr1l	equ	0xFE1
 29718                           indf2	equ	0xFDF
 29719                           postinc2	equ	0xFDE
 29720                           postdec2	equ	0xFDD
 29721                           plusw2	equ	0xFDB
 29722                           fsr2h	equ	0xFDA
 29723                           fsr2l	equ	0xFD9
 29724                           status	equ	0xFD8
 29725                           
 29726 ;; *************** function _USBCtrlTrfInHandler *****************
 29727 ;; Defined at:
 29728 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29729 ;; Parameters:    Size  Location     Type
 29730 ;;		None
 29731 ;; Auto vars:     Size  Location     Type
 29732 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29733 ;; Return value:  Size  Location     Type
 29734 ;;                  1    wreg      void 
 29735 ;; Registers used:
 29736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 29737 ;; Tracked objects:
 29738 ;;		On entry : 0/0
 29739 ;;		On exit  : 0/0
 29740 ;;		Unchanged: 0/0
 29741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29742 ;;      Params:         0       0       0       0       0       0       0       0       0
 29743 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29745 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29746 ;;Total ram usage:        1 bytes
 29747 ;; Hardware stack levels used:    1
 29748 ;; Hardware stack levels required when called:    2
 29749 ;; This function calls:
 29750 ;;		_USART_mySetLineCodingHandler
 29751 ;;		_USBCtrlTrfTxService
 29752 ;; This function is called by:
 29753 ;;		_USBCtrlEPService
 29754 ;; This function uses a non-reentrant model
 29755 ;;
 29756                           
 29757                           	psect	text133
 29758  0033A2                     __ptext133:
 29759                           	opt stack 0
 29760  0033A2                     _USBCtrlTrfInHandler:
 29761                           	opt stack 16
 29762                           
 29763                           ;usb_device.c: 2225: uint8_t lastDTS;
 29764                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29765                           
 29766                           ;incstack = 0
 29767  0033A2  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29768  0033A6  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29769  0033AA  0100               	movlb	0	; () banked
 29770  0033AC  0E00               	movlw	0
 29771  0033AE  BCDF               	btfsc	indf2,6,c
 29772  0033B0  0E01               	movlw	1
 29773  0033B2  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29777  0033B4  0E04               	movlw	4
 29778  0033B6  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29782  0033B8  0E08               	movlw	8
 29783  0033BA  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29784  0033BC  A4D8               	btfss	status,2,c
 29785  0033BE  D00C               	goto	i2l2045
 29786                           
 29787                           ; BSR set to: 0
 29788                           ;usb_device.c: 2236: {
 29789                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29790  0033C0  0104               	movlb	4	; () banked
 29791  0033C2  5132               	movf	50,w,b	;volatile
 29792  0033C4  0B7F               	andlw	127
 29793  0033C6  6E63               	movwf	3939,c	;volatile
 29794                           
 29795                           ; BSR set to: 4
 29796                           ;usb_device.c: 2238: if(UADDR != 0u)
 29797  0033C8  5063               	movf	3939,w,c	;volatile
 29798  0033CA  B4D8               	btfsc	status,2,c
 29799  0033CC  D002               	goto	i2l2044
 29800                           
 29801                           ; BSR set to: 4
 29802                           ;usb_device.c: 2239: {
 29803                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29804  0033CE  0E10               	movlw	16
 29805  0033D0  D001               	goto	L34
 29806  0033D2                     i2l2044:
 29807                           
 29808                           ;usb_device.c: 2242: else
 29809                           ;usb_device.c: 2243: {
 29810                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29811                           
 29812                           ; BSR set to: 0
 29813  0033D2  0E04               	movlw	4
 29814  0033D4                     L34:
 29815  0033D4  0100               	movlb	0	; () banked
 29816  0033D6  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 29817  0033D8                     i2l2045:
 29818                           
 29819                           ; BSR set to: 0
 29820                           ;usb_device.c: 2245: }
 29821                           ;usb_device.c: 2246: }
 29822                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29823                           
 29824                           ; BSR set to: 0
 29825                           
 29826                           ; BSR set to: 0
 29827  0033D8  044C               	decf	_controlTransferState,w,c	;volatile
 29828  0033DA  A4D8               	btfss	status,2,c
 29829  0033DC  D03A               	goto	i2l2046
 29830                           
 29831                           ; BSR set to: 0
 29832                           ;usb_device.c: 2250: {
 29833                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29834  0033DE  EE20 F002          	lfsr	2,2
 29835  0033E2  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29836  0033E4  26D9               	addwf	fsr2l,f,c
 29837  0033E6  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29838  0033E8  22DA               	addwfc	fsr2h,f,c
 29839  0033EA  0E38               	movlw	56
 29840  0033EC  6EDE               	movwf	postinc2,c
 29841  0033EE  0E04               	movlw	4
 29842  0033F0  6EDD               	movwf	postdec2,c
 29843                           
 29844                           ; BSR set to: 0
 29845                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29846  0033F2  EC8B  F01B         	call	_USBCtrlTrfTxService	;wreg free
 29847                           
 29848                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29849  0033F6  0E02               	movlw	2
 29850  0033F8  184D               	xorwf	_shortPacketStatus,w,c	;volatile
 29851  0033FA  A4D8               	btfss	status,2,c
 29852  0033FC  D00D               	goto	i2l2047
 29853                           
 29854                           ;usb_device.c: 2259: {
 29855                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29856  0033FE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29857  003402  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29858  003406  0E04               	movlw	4
 29859  003408  6EDF               	movwf	indf2,c
 29860                           
 29861                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29862  00340A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29863  00340E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29864  003412  0E00               	movlw	0
 29865  003414  8EDB               	bsf	plusw2,7,c
 29866                           
 29867                           ;usb_device.c: 2264: }
 29868  003416  0012               	return	
 29869  003418                     i2l2047:
 29870                           
 29871                           ;usb_device.c: 2265: else
 29872                           ;usb_device.c: 2266: {
 29873                           ;usb_device.c: 2267: if(lastDTS == 0)
 29874  003418  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29875  00341A  A4D8               	btfss	status,2,c
 29876  00341C  D00D               	goto	i2l2049
 29877                           
 29878                           ;usb_device.c: 2268: {
 29879                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29880  00341E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29881  003422  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29882  003426  0E48               	movlw	72
 29883  003428  6EDF               	movwf	indf2,c
 29884                           
 29885                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29886  00342A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29887  00342E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29888  003432  0E00               	movlw	0
 29889  003434  8EDB               	bsf	plusw2,7,c
 29890                           
 29891                           ;usb_device.c: 2271: }
 29892  003436  0012               	return	
 29893  003438                     i2l2049:
 29894                           
 29895                           ;usb_device.c: 2272: else
 29896                           ;usb_device.c: 2273: {
 29897                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29898  003438  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29899  00343C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29900  003440  0E08               	movlw	8
 29901  003442  6EDF               	movwf	indf2,c
 29902                           
 29903                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29904  003444  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29905  003448  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29906  00344C  0E00               	movlw	0
 29907  00344E  8EDB               	bsf	plusw2,7,c
 29908                           
 29909                           ;usb_device.c: 2276: }
 29910                           ;usb_device.c: 2277: }
 29911                           ;usb_device.c: 2278: }
 29912  003450  0012               	return	
 29913  003452                     i2l2046:
 29914                           
 29915                           ; BSR set to: 0
 29916                           ;usb_device.c: 2279: else
 29917                           ;usb_device.c: 2280: {
 29918                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 29919  003452  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29920  003454  D014               	goto	i2l2052
 29921                           
 29922                           ; BSR set to: 0
 29923                           ;usb_device.c: 2285: {
 29924                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 29925  003456  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29926  003458  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29927  00345A  B4D8               	btfsc	status,2,c
 29928  00345C  D00E               	goto	i2u846_49
 29929                           
 29930                           ; BSR set to: 0
 29931                           ;usb_device.c: 2287: {
 29932                           ;usb_device.c: 2288: outPipes[0].pFunc();
 29933  00345E  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29934  003462  D801               	call	i2u846_48
 29935  003464  D00A               	goto	i2u846_49
 29936  003466                     i2u846_48:
 29937  003466  0005               	push	
 29938  003468  6EFA               	movwf	pclath,c
 29939  00346A  50DE               	movf	postinc2,w,c
 29940  00346C  6EFD               	movwf	tosl,c
 29941  00346E  50DE               	movf	postinc2,w,c
 29942  003470  6EFE               	movwf	tosh,c
 29943  003472  50F8               	movf	tblptru,w,c
 29944  003474  6EFF               	movwf	tosu,c
 29945  003476  50FA               	movf	pclath,w,c
 29946  003478  0012               	return		;indir
 29947  00347A                     i2u846_49:
 29948                           
 29949                           ;usb_device.c: 2289: }
 29950                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 29951  00347A  0100               	movlb	0	; () banked
 29952  00347C  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29953  00347E                     i2l2052:
 29954                           
 29955                           ; BSR set to: 0
 29956                           ;usb_device.c: 2291: }
 29957                           ;usb_device.c: 2293: controlTransferState = 0;
 29958                           
 29959                           ; BSR set to: 0
 29960  00347E  0E00               	movlw	0
 29961  003480  6E4C               	movwf	_controlTransferState,c	;volatile
 29962  003482  0012               	return	
 29963  003484                     __end_of_USBCtrlTrfInHandler:
 29964                           	opt stack 0
 29965                           tosu	equ	0xFFF
 29966                           tosh	equ	0xFFE
 29967                           tosl	equ	0xFFD
 29968                           pclatu	equ	0xFFB
 29969                           pclath	equ	0xFFA
 29970                           tblptru	equ	0xFF8
 29971                           tblptrh	equ	0xFF7
 29972                           tblptrl	equ	0xFF6
 29973                           tablat	equ	0xFF5
 29974                           prodh	equ	0xFF4
 29975                           prodl	equ	0xFF3
 29976                           intcon	equ	0xFF2
 29977                           intcon2	equ	0xFF1
 29978                           intcon3	equ	0xFF0
 29979                           indf0	equ	0xFEF
 29980                           postinc0	equ	0xFEE
 29981                           fsr0h	equ	0xFEA
 29982                           fsr0l	equ	0xFE9
 29983                           wreg	equ	0xFE8
 29984                           indf1	equ	0xFE7
 29985                           postdec1	equ	0xFE5
 29986                           fsr1h	equ	0xFE2
 29987                           fsr1l	equ	0xFE1
 29988                           indf2	equ	0xFDF
 29989                           postinc2	equ	0xFDE
 29990                           postdec2	equ	0xFDD
 29991                           plusw2	equ	0xFDB
 29992                           fsr2h	equ	0xFDA
 29993                           fsr2l	equ	0xFD9
 29994                           status	equ	0xFD8
 29995                           
 29996 ;; *************** function _USBCtrlTrfTxService *****************
 29997 ;; Defined at:
 29998 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 29999 ;; Parameters:    Size  Location     Type
 30000 ;;		None
 30001 ;; Auto vars:     Size  Location     Type
 30002 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30003 ;; Return value:  Size  Location     Type
 30004 ;;                  1    wreg      void 
 30005 ;; Registers used:
 30006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30007 ;; Tracked objects:
 30008 ;;		On entry : 0/0
 30009 ;;		On exit  : 0/0
 30010 ;;		Unchanged: 0/0
 30011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30012 ;;      Params:         0       0       0       0       0       0       0       0       0
 30013 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30015 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30016 ;;Total ram usage:        1 bytes
 30017 ;; Hardware stack levels used:    1
 30018 ;; This function calls:
 30019 ;;		Nothing
 30020 ;; This function is called by:
 30021 ;;		_USBCtrlEPAllowDataStage
 30022 ;;		_USBCtrlTrfInHandler
 30023 ;; This function uses a non-reentrant model
 30024 ;;
 30025                           
 30026                           	psect	text134
 30027  003716                     __ptext134:
 30028                           	opt stack 0
 30029  003716                     _USBCtrlTrfTxService:
 30030                           	opt stack 15
 30031                           
 30032                           ;usb_device.c: 1439: uint8_t byteToSend;
 30033                           ;usb_device.c: 1443: byteToSend = 8;
 30034                           
 30035                           ;incstack = 0
 30036  003716  0E08               	movlw	8
 30037  003718  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30038                           
 30039                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30040  00371A  0100               	movlb	0	; () banked
 30041  00371C  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30042  00371E  E110               	bnz	i2l7941
 30043  003720  0E08               	movlw	8
 30044  003722  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30045  003724  B0D8               	btfsc	status,0,c
 30046  003726  D00C               	goto	i2l1949
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;usb_device.c: 1445: {
 30050                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30051  003728  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30052                           
 30053                           ; BSR set to: 0
 30054                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30055  00372C  504D               	movf	_shortPacketStatus,w,c	;volatile
 30056  00372E  A4D8               	btfss	status,2,c
 30057  003730  D002               	goto	i2l1947
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;usb_device.c: 1454: {
 30061                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30062  003732  0E01               	movlw	1
 30063  003734  D004               	goto	L35
 30064  003736                     i2l1947:
 30065                           
 30066                           ; BSR set to: 0
 30067                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30068                           
 30069                           ; BSR set to: 0
 30070  003736  044D               	decf	_shortPacketStatus,w,c	;volatile
 30071  003738  A4D8               	btfss	status,2,c
 30072  00373A  D002               	goto	i2l1949
 30073                           
 30074                           ; BSR set to: 0
 30075                           ;usb_device.c: 1458: {
 30076                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30077  00373C  0E02               	movlw	2
 30078  00373E                     L35:
 30079  00373E  6E4D               	movwf	_shortPacketStatus,c	;volatile
 30080  003740                     i2l1949:
 30081  003740                     i2l7941:
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;usb_device.c: 1460: }
 30085                           ;usb_device.c: 1461: }
 30086                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30087  003740  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30088  003742  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30089  003744  0E00               	movlw	0
 30090  003746  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30091                           
 30092                           ; BSR set to: 0
 30093                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30094  003748  EE20 F001          	lfsr	2,1
 30095  00374C  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30096  00374E  26D9               	addwf	fsr2l,f,c
 30097  003750  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30098  003752  22DA               	addwfc	fsr2h,f,c
 30099  003754  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30100                           
 30101                           ; BSR set to: 0
 30102                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30103  003758  0E38               	movlw	56
 30104  00375A  0101               	movlb	1	; () banked
 30105  00375C  6F54               	movwf	_pDst& (0+255),b
 30106  00375E  0E04               	movlw	4
 30107  003760  6F55               	movwf	(_pDst+1)& (0+255),b
 30108                           
 30109                           ; BSR set to: 1
 30110                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30111  003762  0100               	movlb	0	; () banked
 30112  003764  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30113  003766  D01D               	goto	i2l1951
 30114  003768  D03C               	goto	i2l1955
 30115  00376A                     
 30116                           ;usb_device.c: 1478: {
 30117                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30118                           
 30119                           ; BSR set to: 0
 30120  00376A  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30121  00376E  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30122  003772  6AF8               	clrf	tblptru,c
 30123  003774  C154  FFD9         	movff	_pDst,fsr2l
 30124  003778  C155  FFDA         	movff	_pDst+1,fsr2h
 30125  00377C  0E07               	movlw	(high __ramtop+-1)
 30126  00377E  64F7               	cpfsgt	tblptrh,c
 30127  003780  D003               	bra	i2u576_47
 30128  003782  0008               	tblrd		*
 30129  003784  50F5               	movf	tablat,w,c
 30130  003786  D005               	bra	i2u576_40
 30131  003788                     i2u576_47:
 30132  003788  CFF6 FFE9          	movff	tblptrl,fsr0l
 30133  00378C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30134  003790  50EF               	movf	indf0,w,c
 30135  003792                     i2u576_40:
 30136  003792  6EDF               	movwf	indf2,c
 30137  003794  0100               	movlb	0	; () banked
 30138  003796  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30139  003798  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30140                           
 30141                           ; BSR set to: 0
 30142  00379A  0101               	movlb	1	; () banked
 30143  00379C  4B54               	infsnz	_pDst& (0+255),f,b
 30144  00379E  2B55               	incf	(_pDst+1)& (0+255),f,b
 30145                           
 30146                           ; BSR set to: 1
 30147                           ;usb_device.c: 1480: byteToSend--;
 30148  0037A0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30149  0037A2                     i2l1951:
 30150                           
 30151                           ; BSR set to: 1
 30152  0037A2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30153  0037A4  B4D8               	btfsc	status,2,c
 30154  0037A6  0012               	return	
 30155  0037A8  D7E0               	goto	i2l1952
 30156  0037AA                     
 30157                           ;usb_device.c: 1486: {
 30158                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30159  0037AA  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30160  0037AE  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30161  0037B2  6AF8               	clrf	tblptru,c
 30162  0037B4  C154  FFD9         	movff	_pDst,fsr2l
 30163  0037B8  C155  FFDA         	movff	_pDst+1,fsr2h
 30164  0037BC  0E07               	movlw	(high __ramtop+-1)
 30165  0037BE  64F7               	cpfsgt	tblptrh,c
 30166  0037C0  D003               	bra	i2u578_47
 30167  0037C2  0008               	tblrd		*
 30168  0037C4  50F5               	movf	tablat,w,c
 30169  0037C6  D005               	bra	i2u578_40
 30170  0037C8                     i2u578_47:
 30171  0037C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 30172  0037CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 30173  0037D0  50EF               	movf	indf0,w,c
 30174  0037D2                     i2u578_40:
 30175  0037D2  6EDF               	movwf	indf2,c
 30176  0037D4  0100               	movlb	0	; () banked
 30177  0037D6  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30178  0037D8  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30179                           
 30180                           ; BSR set to: 0
 30181  0037DA  0101               	movlb	1	; () banked
 30182  0037DC  4B54               	infsnz	_pDst& (0+255),f,b
 30183  0037DE  2B55               	incf	(_pDst+1)& (0+255),f,b
 30184                           
 30185                           ; BSR set to: 1
 30186                           ;usb_device.c: 1488: byteToSend--;
 30187  0037E0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30188  0037E2                     i2l1955:
 30189                           
 30190                           ; BSR set to: 1
 30191  0037E2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30192  0037E4  B4D8               	btfsc	status,2,c
 30193  0037E6  0012               	return	
 30194  0037E8  D7E0               	goto	i2l1956
 30195  0037EA                     __end_of_USBCtrlTrfTxService:
 30196                           	opt stack 0
 30197                           tosu	equ	0xFFF
 30198                           tosh	equ	0xFFE
 30199                           tosl	equ	0xFFD
 30200                           pclatu	equ	0xFFB
 30201                           pclath	equ	0xFFA
 30202                           tblptru	equ	0xFF8
 30203                           tblptrh	equ	0xFF7
 30204                           tblptrl	equ	0xFF6
 30205                           tablat	equ	0xFF5
 30206                           prodh	equ	0xFF4
 30207                           prodl	equ	0xFF3
 30208                           intcon	equ	0xFF2
 30209                           intcon2	equ	0xFF1
 30210                           intcon3	equ	0xFF0
 30211                           indf0	equ	0xFEF
 30212                           postinc0	equ	0xFEE
 30213                           fsr0h	equ	0xFEA
 30214                           fsr0l	equ	0xFE9
 30215                           wreg	equ	0xFE8
 30216                           indf1	equ	0xFE7
 30217                           postdec1	equ	0xFE5
 30218                           fsr1h	equ	0xFE2
 30219                           fsr1l	equ	0xFE1
 30220                           indf2	equ	0xFDF
 30221                           postinc2	equ	0xFDE
 30222                           postdec2	equ	0xFDD
 30223                           plusw2	equ	0xFDB
 30224                           fsr2h	equ	0xFDA
 30225                           fsr2l	equ	0xFD9
 30226                           status	equ	0xFD8
 30227                           
 30228 ;; *************** function _USART_mySetLineCodingHandler *****************
 30229 ;; Defined at:
 30230 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30231 ;; Parameters:    Size  Location     Type
 30232 ;;		None
 30233 ;; Auto vars:     Size  Location     Type
 30234 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30235 ;; Return value:  Size  Location     Type
 30236 ;;                  1    wreg      void 
 30237 ;; Registers used:
 30238 ;;		wreg, status,2, status,0, cstack
 30239 ;; Tracked objects:
 30240 ;;		On entry : 0/0
 30241 ;;		On exit  : 0/0
 30242 ;;		Unchanged: 0/0
 30243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30244 ;;      Params:         0       0       0       0       0       0       0       0       0
 30245 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30246 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30247 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30248 ;;Total ram usage:        4 bytes
 30249 ;; Hardware stack levels used:    1
 30250 ;; Hardware stack levels required when called:    1
 30251 ;; This function calls:
 30252 ;;		___lldiv
 30253 ;;		i2_EUSART_Initialize
 30254 ;; This function is called by:
 30255 ;;		_USBCheckCDCRequest
 30256 ;;		_USBCtrlTrfRxService
 30257 ;;		_USBCtrlTrfInHandler
 30258 ;; This function uses a non-reentrant model
 30259 ;;
 30260                           
 30261                           	psect	text135
 30262  004E62                     __ptext135:
 30263                           	opt stack 0
 30264  004E62                     _USART_mySetLineCodingHandler:
 30265                           	opt stack 15
 30266                           
 30267                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30268                           
 30269                           ;incstack = 0
 30270  004E62  C1D4  F1E6         	movff	_cdc_notice,_line_coding
 30271  004E66  C1D5  F1E7         	movff	_cdc_notice+1,_line_coding+1
 30272  004E6A  C1D6  F1E8         	movff	_cdc_notice+2,_line_coding+2
 30273  004E6E  C1D7  F1E9         	movff	_cdc_notice+3,_line_coding+3
 30274                           
 30275                           ;USBapp.c: 278: uint32_t dwBaud;
 30276                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30277  004E72  0E00               	movlw	0
 30278  004E74  6E01               	movwf	___lldiv@dividend,c
 30279  004E76  0E1B               	movlw	27
 30280  004E78  6E02               	movwf	___lldiv@dividend+1,c
 30281  004E7A  0EB7               	movlw	183
 30282  004E7C  6E03               	movwf	___lldiv@dividend+2,c
 30283  004E7E  0E00               	movlw	0
 30284  004E80  6E04               	movwf	___lldiv@dividend+3,c
 30285  004E82  C1E6  F005         	movff	_line_coding,___lldiv@divisor
 30286  004E86  C1E7  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30287  004E8A  C1E8  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30288  004E8E  C1E9  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30289  004E92  ECCC  F023         	call	___lldiv	;wreg free
 30290  004E96  0EFF               	movlw	255
 30291  004E98  2401               	addwf	?___lldiv,w,c
 30292  004E9A  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30293  004E9C  0EFF               	movlw	255
 30294  004E9E  2002               	addwfc	?___lldiv+1,w,c
 30295  004EA0  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30296  004EA2  0EFF               	movlw	255
 30297  004EA4  2003               	addwfc	?___lldiv+2,w,c
 30298  004EA6  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30299  004EA8  0EFF               	movlw	255
 30300  004EAA  2004               	addwfc	?___lldiv+3,w,c
 30301  004EAC  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30302                           
 30303                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30304  004EAE  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30305                           
 30306                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30307  004EB2  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30308                           
 30309                           ;USBapp.c: 283: EUSART_Initialize();
 30310  004EB6  EC5B  F029         	call	i2_EUSART_Initialize	;wreg free
 30311  004EBA  0012               	return		;funcret
 30312  004EBC                     __end_of_USART_mySetLineCodingHandler:
 30313                           	opt stack 0
 30314                           tosu	equ	0xFFF
 30315                           tosh	equ	0xFFE
 30316                           tosl	equ	0xFFD
 30317                           pclatu	equ	0xFFB
 30318                           pclath	equ	0xFFA
 30319                           tblptru	equ	0xFF8
 30320                           tblptrh	equ	0xFF7
 30321                           tblptrl	equ	0xFF6
 30322                           tablat	equ	0xFF5
 30323                           prodh	equ	0xFF4
 30324                           prodl	equ	0xFF3
 30325                           intcon	equ	0xFF2
 30326                           intcon2	equ	0xFF1
 30327                           intcon3	equ	0xFF0
 30328                           indf0	equ	0xFEF
 30329                           postinc0	equ	0xFEE
 30330                           fsr0h	equ	0xFEA
 30331                           fsr0l	equ	0xFE9
 30332                           wreg	equ	0xFE8
 30333                           indf1	equ	0xFE7
 30334                           postdec1	equ	0xFE5
 30335                           fsr1h	equ	0xFE2
 30336                           fsr1l	equ	0xFE1
 30337                           indf2	equ	0xFDF
 30338                           postinc2	equ	0xFDE
 30339                           postdec2	equ	0xFDD
 30340                           plusw2	equ	0xFDB
 30341                           fsr2h	equ	0xFDA
 30342                           fsr2l	equ	0xFD9
 30343                           status	equ	0xFD8
 30344                           
 30345 ;; *************** function i2_EUSART_Initialize *****************
 30346 ;; Defined at:
 30347 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30348 ;; Parameters:    Size  Location     Type
 30349 ;;		None
 30350 ;; Auto vars:     Size  Location     Type
 30351 ;;		None
 30352 ;; Return value:  Size  Location     Type
 30353 ;;                  1    wreg      void 
 30354 ;; Registers used:
 30355 ;;		wreg, status,2
 30356 ;; Tracked objects:
 30357 ;;		On entry : 0/0
 30358 ;;		On exit  : 0/0
 30359 ;;		Unchanged: 0/0
 30360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30361 ;;      Params:         0       0       0       0       0       0       0       0       0
 30362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30364 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30365 ;;Total ram usage:        0 bytes
 30366 ;; Hardware stack levels used:    1
 30367 ;; This function calls:
 30368 ;;		Nothing
 30369 ;; This function is called by:
 30370 ;;		_USBapp_CdcEmulatorInitialize
 30371 ;;		_USART_mySetLineCodingHandler
 30372 ;; This function uses a non-reentrant model
 30373 ;;
 30374                           
 30375                           	psect	text136
 30376  0052B6                     __ptext136:
 30377                           	opt stack 0
 30378  0052B6                     i2_EUSART_Initialize:
 30379                           	opt stack 17
 30380                           
 30381                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30382                           
 30383                           ;incstack = 0
 30384  0052B6  9A9D               	bcf	3997,5,c	;volatile
 30385                           
 30386                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30387  0052B8  989D               	bcf	3997,4,c	;volatile
 30388                           
 30389                           ;eusart.c: 85: BAUDCON = 0x48;
 30390  0052BA  0E48               	movlw	72
 30391  0052BC  6EB8               	movwf	4024,c	;volatile
 30392                           
 30393                           ;eusart.c: 88: RCSTA = 0x90;
 30394  0052BE  0E90               	movlw	144
 30395  0052C0  6EAB               	movwf	4011,c	;volatile
 30396                           
 30397                           ;eusart.c: 91: TXSTA = 0x26;
 30398  0052C2  0E26               	movlw	38
 30399  0052C4  6EAC               	movwf	4012,c	;volatile
 30400                           
 30401                           ;eusart.c: 95: SPBRG = 0xD0;
 30402  0052C6  0ED0               	movlw	208
 30403  0052C8  6EAF               	movwf	4015,c	;volatile
 30404                           
 30405                           ;eusart.c: 100: SPBRGH = 0x00;
 30406  0052CA  0E00               	movlw	0
 30407  0052CC  6EB0               	movwf	4016,c	;volatile
 30408                           
 30409                           ;eusart.c: 103: eusartTxHead = 0;
 30410  0052CE  0E00               	movlw	0
 30411  0052D0  0100               	movlb	0	; () banked
 30412  0052D2  6FE3               	movwf	_eusartTxHead& (0+255),b
 30413                           
 30414                           ;eusart.c: 104: eusartTxTail = 0;
 30415  0052D4  0E00               	movlw	0
 30416  0052D6  6FE2               	movwf	_eusartTxTail& (0+255),b
 30417                           
 30418                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30419  0052D8  0E40               	movlw	64
 30420  0052DA  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 30421                           
 30422                           ;eusart.c: 107: eusartRxHead = 0;
 30423  0052DC  0E00               	movlw	0
 30424  0052DE  6FE0               	movwf	_eusartRxHead& (0+255),b
 30425                           
 30426                           ;eusart.c: 108: eusartRxTail = 0;
 30427  0052E0  0E00               	movlw	0
 30428  0052E2  6FDF               	movwf	_eusartRxTail& (0+255),b
 30429                           
 30430                           ;eusart.c: 109: eusartRxCount = 0;
 30431  0052E4  0E00               	movlw	0
 30432  0052E6  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 30433                           
 30434                           ; BSR set to: 0
 30435                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30436  0052E8  8A9D               	bsf	3997,5,c	;volatile
 30437                           
 30438                           ; BSR set to: 0
 30439                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30440  0052EA  88AB               	bsf	4011,4,c	;volatile
 30441                           
 30442                           ; BSR set to: 0
 30443  0052EC  0012               	return		;funcret
 30444  0052EE                     __end_ofi2_EUSART_Initialize:
 30445                           	opt stack 0
 30446                           tosu	equ	0xFFF
 30447                           tosh	equ	0xFFE
 30448                           tosl	equ	0xFFD
 30449                           pclatu	equ	0xFFB
 30450                           pclath	equ	0xFFA
 30451                           tblptru	equ	0xFF8
 30452                           tblptrh	equ	0xFF7
 30453                           tblptrl	equ	0xFF6
 30454                           tablat	equ	0xFF5
 30455                           prodh	equ	0xFF4
 30456                           prodl	equ	0xFF3
 30457                           intcon	equ	0xFF2
 30458                           intcon2	equ	0xFF1
 30459                           intcon3	equ	0xFF0
 30460                           indf0	equ	0xFEF
 30461                           postinc0	equ	0xFEE
 30462                           fsr0h	equ	0xFEA
 30463                           fsr0l	equ	0xFE9
 30464                           wreg	equ	0xFE8
 30465                           indf1	equ	0xFE7
 30466                           postdec1	equ	0xFE5
 30467                           fsr1h	equ	0xFE2
 30468                           fsr1l	equ	0xFE1
 30469                           indf2	equ	0xFDF
 30470                           postinc2	equ	0xFDE
 30471                           postdec2	equ	0xFDD
 30472                           plusw2	equ	0xFDB
 30473                           fsr2h	equ	0xFDA
 30474                           fsr2l	equ	0xFD9
 30475                           status	equ	0xFD8
 30476                           
 30477 ;; *************** function ___lldiv *****************
 30478 ;; Defined at:
 30479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30480 ;; Parameters:    Size  Location     Type
 30481 ;;  dividend        4    0[COMRAM] unsigned long 
 30482 ;;  divisor         4    4[COMRAM] unsigned long 
 30483 ;; Auto vars:     Size  Location     Type
 30484 ;;  quotient        4    8[COMRAM] unsigned long 
 30485 ;;  counter         1   12[COMRAM] unsigned char 
 30486 ;; Return value:  Size  Location     Type
 30487 ;;                  4    0[COMRAM] unsigned long 
 30488 ;; Registers used:
 30489 ;;		wreg, status,2, status,0
 30490 ;; Tracked objects:
 30491 ;;		On entry : 0/0
 30492 ;;		On exit  : 0/0
 30493 ;;		Unchanged: 0/0
 30494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30495 ;;      Params:         8       0       0       0       0       0       0       0       0
 30496 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30497 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30498 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30499 ;;Total ram usage:       13 bytes
 30500 ;; Hardware stack levels used:    1
 30501 ;; This function calls:
 30502 ;;		Nothing
 30503 ;; This function is called by:
 30504 ;;		_USART_mySetLineCodingHandler
 30505 ;; This function uses a non-reentrant model
 30506 ;;
 30507                           
 30508                           	psect	text137
 30509  004798                     __ptext137:
 30510                           	opt stack 0
 30511  004798                     ___lldiv:
 30512                           	opt stack 15
 30513                           
 30514                           ; BSR set to: 0
 30515                           ;incstack = 0
 30516  004798  0E00               	movlw	0
 30517  00479A  6E09               	movwf	___lldiv@quotient,c
 30518  00479C  0E00               	movlw	0
 30519  00479E  6E0A               	movwf	___lldiv@quotient+1,c
 30520  0047A0  0E00               	movlw	0
 30521  0047A2  6E0B               	movwf	___lldiv@quotient+2,c
 30522  0047A4  0E00               	movlw	0
 30523  0047A6  6E0C               	movwf	___lldiv@quotient+3,c
 30524  0047A8  5005               	movf	___lldiv@divisor,w,c
 30525  0047AA  1006               	iorwf	___lldiv@divisor+1,w,c
 30526  0047AC  1007               	iorwf	___lldiv@divisor+2,w,c
 30527  0047AE  1008               	iorwf	___lldiv@divisor+3,w,c
 30528  0047B0  B4D8               	btfsc	status,2,c
 30529  0047B2  D02A               	goto	i2l2594
 30530  0047B4  0E01               	movlw	1
 30531  0047B6  6E0D               	movwf	___lldiv@counter,c
 30532  0047B8  D006               	goto	i2l2589
 30533  0047BA  90D8               	bcf	status,0,c
 30534  0047BC  3605               	rlcf	___lldiv@divisor,f,c
 30535  0047BE  3606               	rlcf	___lldiv@divisor+1,f,c
 30536  0047C0  3607               	rlcf	___lldiv@divisor+2,f,c
 30537  0047C2  3608               	rlcf	___lldiv@divisor+3,f,c
 30538  0047C4  2A0D               	incf	___lldiv@counter,f,c
 30539  0047C6                     i2l2589:
 30540  0047C6  AE08               	btfss	___lldiv@divisor+3,7,c
 30541  0047C8  D7F8               	goto	i2l2590
 30542  0047CA                     i2u581_40:
 30543  0047CA  90D8               	bcf	status,0,c
 30544  0047CC  3609               	rlcf	___lldiv@quotient,f,c
 30545  0047CE  360A               	rlcf	___lldiv@quotient+1,f,c
 30546  0047D0  360B               	rlcf	___lldiv@quotient+2,f,c
 30547  0047D2  360C               	rlcf	___lldiv@quotient+3,f,c
 30548  0047D4  5005               	movf	___lldiv@divisor,w,c
 30549  0047D6  5C01               	subwf	___lldiv@dividend,w,c
 30550  0047D8  5006               	movf	___lldiv@divisor+1,w,c
 30551  0047DA  5802               	subwfb	___lldiv@dividend+1,w,c
 30552  0047DC  5007               	movf	___lldiv@divisor+2,w,c
 30553  0047DE  5803               	subwfb	___lldiv@dividend+2,w,c
 30554  0047E0  5008               	movf	___lldiv@divisor+3,w,c
 30555  0047E2  5804               	subwfb	___lldiv@dividend+3,w,c
 30556  0047E4  A0D8               	btfss	status,0,c
 30557  0047E6  D009               	goto	i2l2593
 30558  0047E8  5005               	movf	___lldiv@divisor,w,c
 30559  0047EA  5E01               	subwf	___lldiv@dividend,f,c
 30560  0047EC  5006               	movf	___lldiv@divisor+1,w,c
 30561  0047EE  5A02               	subwfb	___lldiv@dividend+1,f,c
 30562  0047F0  5007               	movf	___lldiv@divisor+2,w,c
 30563  0047F2  5A03               	subwfb	___lldiv@dividend+2,f,c
 30564  0047F4  5008               	movf	___lldiv@divisor+3,w,c
 30565  0047F6  5A04               	subwfb	___lldiv@dividend+3,f,c
 30566  0047F8  8009               	bsf	___lldiv@quotient,0,c
 30567  0047FA                     i2l2593:
 30568  0047FA  90D8               	bcf	status,0,c
 30569  0047FC  3208               	rrcf	___lldiv@divisor+3,f,c
 30570  0047FE  3207               	rrcf	___lldiv@divisor+2,f,c
 30571  004800  3206               	rrcf	___lldiv@divisor+1,f,c
 30572  004802  3205               	rrcf	___lldiv@divisor,f,c
 30573  004804  2E0D               	decfsz	___lldiv@counter,f,c
 30574  004806  D7E1               	goto	i2u581_40
 30575  004808                     i2l2594:
 30576  004808  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30577  00480C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30578  004810  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30579  004814  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30580  004818  0012               	return		;funcret
 30581  00481A                     __end_of___lldiv:
 30582                           	opt stack 0
 30583                           tosu	equ	0xFFF
 30584                           tosh	equ	0xFFE
 30585                           tosl	equ	0xFFD
 30586                           pclatu	equ	0xFFB
 30587                           pclath	equ	0xFFA
 30588                           tblptru	equ	0xFF8
 30589                           tblptrh	equ	0xFF7
 30590                           tblptrl	equ	0xFF6
 30591                           tablat	equ	0xFF5
 30592                           prodh	equ	0xFF4
 30593                           prodl	equ	0xFF3
 30594                           intcon	equ	0xFF2
 30595                           intcon2	equ	0xFF1
 30596                           intcon3	equ	0xFF0
 30597                           indf0	equ	0xFEF
 30598                           postinc0	equ	0xFEE
 30599                           fsr0h	equ	0xFEA
 30600                           fsr0l	equ	0xFE9
 30601                           wreg	equ	0xFE8
 30602                           indf1	equ	0xFE7
 30603                           postdec1	equ	0xFE5
 30604                           fsr1h	equ	0xFE2
 30605                           fsr1l	equ	0xFE1
 30606                           indf2	equ	0xFDF
 30607                           postinc2	equ	0xFDE
 30608                           postdec2	equ	0xFDD
 30609                           plusw2	equ	0xFDB
 30610                           fsr2h	equ	0xFDA
 30611                           fsr2l	equ	0xFD9
 30612                           status	equ	0xFD8
 30613                           
 30614 ;; *************** function _TMRapp_Tick *****************
 30615 ;; Defined at:
 30616 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30617 ;; Parameters:    Size  Location     Type
 30618 ;;		None
 30619 ;; Auto vars:     Size  Location     Type
 30620 ;;		None
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  1    wreg      void 
 30623 ;; Registers used:
 30624 ;;		None
 30625 ;; Tracked objects:
 30626 ;;		On entry : 0/0
 30627 ;;		On exit  : 0/0
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30630 ;;      Params:         0       0       0       0       0       0       0       0       0
 30631 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30632 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30633 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30634 ;;Total ram usage:        0 bytes
 30635 ;; Hardware stack levels used:    1
 30636 ;; This function calls:
 30637 ;;		Nothing
 30638 ;; This function is called by:
 30639 ;;		_INTERRUPT_InterruptManager
 30640 ;; This function uses a non-reentrant model
 30641 ;;
 30642                           
 30643                           	psect	text138
 30644  00591A                     __ptext138:
 30645                           	opt stack 0
 30646  00591A                     _TMRapp_Tick:
 30647                           	opt stack 20
 30648                           
 30649                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30650                           
 30651                           ;incstack = 0
 30652  00591A  0100               	movlb	0	; () banked
 30653  00591C  81F8               	bsf	_appTimer& (0+255),0,b
 30654                           
 30655                           ; BSR set to: 0
 30656  00591E  0012               	return		;funcret
 30657  005920                     __end_of_TMRapp_Tick:
 30658                           	opt stack 0
 30659                           tosu	equ	0xFFF
 30660                           tosh	equ	0xFFE
 30661                           tosl	equ	0xFFD
 30662                           pclatu	equ	0xFFB
 30663                           pclath	equ	0xFFA
 30664                           tblptru	equ	0xFF8
 30665                           tblptrh	equ	0xFF7
 30666                           tblptrl	equ	0xFF6
 30667                           tablat	equ	0xFF5
 30668                           prodh	equ	0xFF4
 30669                           prodl	equ	0xFF3
 30670                           intcon	equ	0xFF2
 30671                           intcon2	equ	0xFF1
 30672                           intcon3	equ	0xFF0
 30673                           indf0	equ	0xFEF
 30674                           postinc0	equ	0xFEE
 30675                           fsr0h	equ	0xFEA
 30676                           fsr0l	equ	0xFE9
 30677                           wreg	equ	0xFE8
 30678                           indf1	equ	0xFE7
 30679                           postdec1	equ	0xFE5
 30680                           fsr1h	equ	0xFE2
 30681                           fsr1l	equ	0xFE1
 30682                           indf2	equ	0xFDF
 30683                           postinc2	equ	0xFDE
 30684                           postdec2	equ	0xFDD
 30685                           plusw2	equ	0xFDB
 30686                           fsr2h	equ	0xFDA
 30687                           fsr2l	equ	0xFD9
 30688                           status	equ	0xFD8
 30689                           
 30690 ;; *************** function _TMR3_ISR *****************
 30691 ;; Defined at:
 30692 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30693 ;; Parameters:    Size  Location     Type
 30694 ;;		None
 30695 ;; Auto vars:     Size  Location     Type
 30696 ;;		None
 30697 ;; Return value:  Size  Location     Type
 30698 ;;                  1    wreg      void 
 30699 ;; Registers used:
 30700 ;;		wreg, status,2
 30701 ;; Tracked objects:
 30702 ;;		On entry : 0/0
 30703 ;;		On exit  : 0/0
 30704 ;;		Unchanged: 0/0
 30705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30706 ;;      Params:         0       0       0       0       0       0       0       0       0
 30707 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30708 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30709 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30710 ;;Total ram usage:        0 bytes
 30711 ;; Hardware stack levels used:    1
 30712 ;; This function calls:
 30713 ;;		Nothing
 30714 ;; This function is called by:
 30715 ;;		_INTERRUPT_InterruptManager
 30716 ;; This function uses a non-reentrant model
 30717 ;;
 30718                           
 30719                           	psect	text139
 30720  005704                     __ptext139:
 30721                           	opt stack 0
 30722  005704                     _TMR3_ISR:
 30723                           	opt stack 20
 30724                           
 30725                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;incstack = 0
 30729  005704  92A1               	bcf	4001,1,c	;volatile
 30730                           
 30731                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30732  005706  A48D               	btfss	3981,2,c	;volatile
 30733  005708  D006               	goto	i2l1676
 30734                           
 30735                           ;tmr3.c: 168: {
 30736                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30737  00570A  948D               	bcf	3981,2,c	;volatile
 30738                           
 30739                           ;tmr3.c: 170: TMR3H = 0xD5;
 30740  00570C  0ED5               	movlw	213
 30741  00570E  6EB3               	movwf	4019,c	;volatile
 30742                           
 30743                           ;tmr3.c: 171: TMR3L = 0xD0;
 30744  005710  0ED0               	movlw	208
 30745  005712  6EB2               	movwf	4018,c	;volatile
 30746                           
 30747                           ;tmr3.c: 172: } else {
 30748  005714  0012               	return	
 30749  005716                     i2l1676:
 30750                           
 30751                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30752  005716  848D               	bsf	3981,2,c	;volatile
 30753                           
 30754                           ;tmr3.c: 174: TMR3H = 0xFB;
 30755  005718  0EFB               	movlw	251
 30756  00571A  6EB3               	movwf	4019,c	;volatile
 30757                           
 30758                           ;tmr3.c: 175: TMR3L = 0x50;
 30759  00571C  0E50               	movlw	80
 30760  00571E  6EB2               	movwf	4018,c	;volatile
 30761  005720  0012               	return	
 30762  005722                     __end_of_TMR3_ISR:
 30763                           	opt stack 0
 30764                           tosu	equ	0xFFF
 30765                           tosh	equ	0xFFE
 30766                           tosl	equ	0xFFD
 30767                           pclatu	equ	0xFFB
 30768                           pclath	equ	0xFFA
 30769                           tblptru	equ	0xFF8
 30770                           tblptrh	equ	0xFF7
 30771                           tblptrl	equ	0xFF6
 30772                           tablat	equ	0xFF5
 30773                           prodh	equ	0xFF4
 30774                           prodl	equ	0xFF3
 30775                           intcon	equ	0xFF2
 30776                           intcon2	equ	0xFF1
 30777                           intcon3	equ	0xFF0
 30778                           indf0	equ	0xFEF
 30779                           postinc0	equ	0xFEE
 30780                           fsr0h	equ	0xFEA
 30781                           fsr0l	equ	0xFE9
 30782                           wreg	equ	0xFE8
 30783                           indf1	equ	0xFE7
 30784                           postdec1	equ	0xFE5
 30785                           fsr1h	equ	0xFE2
 30786                           fsr1l	equ	0xFE1
 30787                           indf2	equ	0xFDF
 30788                           postinc2	equ	0xFDE
 30789                           postdec2	equ	0xFDD
 30790                           plusw2	equ	0xFDB
 30791                           fsr2h	equ	0xFDA
 30792                           fsr2l	equ	0xFD9
 30793                           status	equ	0xFD8
 30794                           
 30795 ;; *************** function _TMR1_ISR *****************
 30796 ;; Defined at:
 30797 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30798 ;; Parameters:    Size  Location     Type
 30799 ;;		None
 30800 ;; Auto vars:     Size  Location     Type
 30801 ;;		None
 30802 ;; Return value:  Size  Location     Type
 30803 ;;                  1    wreg      void 
 30804 ;; Registers used:
 30805 ;;		wreg, status,2
 30806 ;; Tracked objects:
 30807 ;;		On entry : 0/0
 30808 ;;		On exit  : 0/0
 30809 ;;		Unchanged: 0/0
 30810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30811 ;;      Params:         0       0       0       0       0       0       0       0       0
 30812 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30814 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30815 ;;Total ram usage:        0 bytes
 30816 ;; Hardware stack levels used:    1
 30817 ;; This function calls:
 30818 ;;		Nothing
 30819 ;; This function is called by:
 30820 ;;		_INTERRUPT_InterruptManager
 30821 ;; This function uses a non-reentrant model
 30822 ;;
 30823                           
 30824                           	psect	text140
 30825  0058A2                     __ptext140:
 30826                           	opt stack 0
 30827  0058A2                     _TMR1_ISR:
 30828                           	opt stack 20
 30829                           
 30830                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30831                           
 30832                           ;incstack = 0
 30833  0058A2  909E               	bcf	3998,0,c	;volatile
 30834                           
 30835                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30836  0058A4  503E               	movf	_timer1ReloadVal+1,w,c	;volatile
 30837  0058A6  6ECF               	movwf	4047,c	;volatile
 30838                           
 30839                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30840  0058A8  C03D  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30841  0058AC  0012               	return		;funcret
 30842  0058AE                     __end_of_TMR1_ISR:
 30843                           	opt stack 0
 30844                           tosu	equ	0xFFF
 30845                           tosh	equ	0xFFE
 30846                           tosl	equ	0xFFD
 30847                           pclatu	equ	0xFFB
 30848                           pclath	equ	0xFFA
 30849                           tblptru	equ	0xFF8
 30850                           tblptrh	equ	0xFF7
 30851                           tblptrl	equ	0xFF6
 30852                           tablat	equ	0xFF5
 30853                           prodh	equ	0xFF4
 30854                           prodl	equ	0xFF3
 30855                           intcon	equ	0xFF2
 30856                           intcon2	equ	0xFF1
 30857                           intcon3	equ	0xFF0
 30858                           indf0	equ	0xFEF
 30859                           postinc0	equ	0xFEE
 30860                           fsr0h	equ	0xFEA
 30861                           fsr0l	equ	0xFE9
 30862                           wreg	equ	0xFE8
 30863                           indf1	equ	0xFE7
 30864                           postdec1	equ	0xFE5
 30865                           fsr1h	equ	0xFE2
 30866                           fsr1l	equ	0xFE1
 30867                           indf2	equ	0xFDF
 30868                           postinc2	equ	0xFDE
 30869                           postdec2	equ	0xFDD
 30870                           plusw2	equ	0xFDB
 30871                           fsr2h	equ	0xFDA
 30872                           fsr2l	equ	0xFD9
 30873                           status	equ	0xFD8
 30874                           
 30875 ;; *************** function _TMR0_ISR *****************
 30876 ;; Defined at:
 30877 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 30878 ;; Parameters:    Size  Location     Type
 30879 ;;		None
 30880 ;; Auto vars:     Size  Location     Type
 30881 ;;		None
 30882 ;; Return value:  Size  Location     Type
 30883 ;;                  1    wreg      void 
 30884 ;; Registers used:
 30885 ;;		None
 30886 ;; Tracked objects:
 30887 ;;		On entry : 0/0
 30888 ;;		On exit  : 0/0
 30889 ;;		Unchanged: 0/0
 30890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30891 ;;      Params:         0       0       0       0       0       0       0       0       0
 30892 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30894 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30895 ;;Total ram usage:        0 bytes
 30896 ;; Hardware stack levels used:    1
 30897 ;; This function calls:
 30898 ;;		Nothing
 30899 ;; This function is called by:
 30900 ;;		_INTERRUPT_InterruptManager
 30901 ;; This function uses a non-reentrant model
 30902 ;;
 30903                           
 30904                           	psect	text141
 30905  0058AE                     __ptext141:
 30906                           	opt stack 0
 30907  0058AE                     _TMR0_ISR:
 30908                           	opt stack 20
 30909                           
 30910                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 30911                           
 30912                           ;incstack = 0
 30913  0058AE  94F2               	bcf	intcon,2,c	;volatile
 30914                           
 30915                           ;tmr0.c: 135: TMR0 = timer0ReloadVal;
 30916  0058B0  C039  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 30917  0058B4  C03A  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 30918  0058B8  0012               	return		;funcret
 30919  0058BA                     __end_of_TMR0_ISR:
 30920                           	opt stack 0
 30921                           tosu	equ	0xFFF
 30922                           tosh	equ	0xFFE
 30923                           tosl	equ	0xFFD
 30924                           pclatu	equ	0xFFB
 30925                           pclath	equ	0xFFA
 30926                           tblptru	equ	0xFF8
 30927                           tblptrh	equ	0xFF7
 30928                           tblptrl	equ	0xFF6
 30929                           tablat	equ	0xFF5
 30930                           prodh	equ	0xFF4
 30931                           prodl	equ	0xFF3
 30932                           intcon	equ	0xFF2
 30933                           intcon2	equ	0xFF1
 30934                           intcon3	equ	0xFF0
 30935                           indf0	equ	0xFEF
 30936                           postinc0	equ	0xFEE
 30937                           fsr0h	equ	0xFEA
 30938                           fsr0l	equ	0xFE9
 30939                           wreg	equ	0xFE8
 30940                           indf1	equ	0xFE7
 30941                           postdec1	equ	0xFE5
 30942                           fsr1h	equ	0xFE2
 30943                           fsr1l	equ	0xFE1
 30944                           indf2	equ	0xFDF
 30945                           postinc2	equ	0xFDE
 30946                           postdec2	equ	0xFDD
 30947                           plusw2	equ	0xFDB
 30948                           fsr2h	equ	0xFDA
 30949                           fsr2l	equ	0xFD9
 30950                           status	equ	0xFD8
 30951                           
 30952 ;; *************** function _InterruptPinRX *****************
 30953 ;; Defined at:
 30954 ;;		line 87 in file "../Includes/Drivers/swUart.c"
 30955 ;; Parameters:    Size  Location     Type
 30956 ;;		None
 30957 ;; Auto vars:     Size  Location     Type
 30958 ;;		None
 30959 ;; Return value:  Size  Location     Type
 30960 ;;                  1    wreg      void 
 30961 ;; Registers used:
 30962 ;;		wreg, status,2, status,0, cstack
 30963 ;; Tracked objects:
 30964 ;;		On entry : 0/0
 30965 ;;		On exit  : 0/0
 30966 ;;		Unchanged: 0/0
 30967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30968 ;;      Params:         0       0       0       0       0       0       0       0       0
 30969 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30971 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30972 ;;Total ram usage:        0 bytes
 30973 ;; Hardware stack levels used:    1
 30974 ;; Hardware stack levels required when called:    1
 30975 ;; This function calls:
 30976 ;;		_clearInterruptPinRX
 30977 ;;		_reloadTimer
 30978 ;; This function is called by:
 30979 ;;		_INTERRUPT_InterruptManager
 30980 ;; This function uses a non-reentrant model
 30981 ;;
 30982                           
 30983                           	psect	text142
 30984  005538                     __ptext142:
 30985                           	opt stack 0
 30986  005538                     _InterruptPinRX:
 30987                           	opt stack 19
 30988                           
 30989                           ;swUart.c: 89: if(status == SILENT)
 30990                           
 30991                           ;incstack = 0
 30992  005538  5051               	movf	_status,w,c
 30993  00553A  B4D8               	btfsc	status,2,c
 30994                           
 30995                           ;swUart.c: 90: {
 30996                           ;swUart.c: 91: if(PORTBbits.RB7 == 0)
 30997  00553C  BE81               	btfsc	3969,7,c	;volatile
 30998  00553E  D010               	goto	i2l1130
 30999                           
 31000                           ;swUart.c: 92: {
 31001                           ;swUart.c: 95: reloadTimer(104+(104/2));
 31002  005540  0E9C               	movlw	156
 31003  005542  ECDC  F029         	call	_reloadTimer
 31004                           
 31005                           ;swUart.c: 98: status = N_BIT;
 31006  005546  0E01               	movlw	1
 31007  005548  6E51               	movwf	_status,c
 31008                           
 31009                           ;swUart.c: 99: countBitsSilent = 0;
 31010  00554A  0E00               	movlw	0
 31011  00554C  6E4E               	movwf	_countBitsSilent,c
 31012                           
 31013                           ;swUart.c: 100: n_bit = 0;
 31014  00554E  0E00               	movlw	0
 31015  005550  6E5B               	movwf	_n_bit,c
 31016                           
 31017                           ;swUart.c: 101: cs = 0;
 31018  005552  0E00               	movlw	0
 31019  005554  0101               	movlb	1	; () banked
 31020  005556  6F5C               	movwf	_cs& (0+255),b
 31021                           
 31022                           ; BSR set to: 1
 31023                           ;swUart.c: 102: rx_data = 0;
 31024  005558  0E00               	movlw	0
 31025  00555A  6E50               	movwf	_rx_data,c
 31026                           
 31027                           ; BSR set to: 1
 31028                           ;swUart.c: 103: status = N_BIT;
 31029  00555C  0E01               	movlw	1
 31030  00555E  6E51               	movwf	_status,c
 31031  005560                     i2l1130:
 31032                           
 31033                           ;swUart.c: 104: }
 31034                           ;swUart.c: 105: }
 31035                           ;swUart.c: 107: clearInterruptPinRX();
 31036                           
 31037                           ; BSR set to: 1
 31038                           
 31039                           ; BSR set to: 1
 31040  005560  EC98  F02C         	call	_clearInterruptPinRX	;wreg free
 31041  005564  0012               	return		;funcret
 31042  005566                     __end_of_InterruptPinRX:
 31043                           	opt stack 0
 31044                           tosu	equ	0xFFF
 31045                           tosh	equ	0xFFE
 31046                           tosl	equ	0xFFD
 31047                           pclatu	equ	0xFFB
 31048                           pclath	equ	0xFFA
 31049                           tblptru	equ	0xFF8
 31050                           tblptrh	equ	0xFF7
 31051                           tblptrl	equ	0xFF6
 31052                           tablat	equ	0xFF5
 31053                           prodh	equ	0xFF4
 31054                           prodl	equ	0xFF3
 31055                           intcon	equ	0xFF2
 31056                           intcon2	equ	0xFF1
 31057                           intcon3	equ	0xFF0
 31058                           indf0	equ	0xFEF
 31059                           postinc0	equ	0xFEE
 31060                           fsr0h	equ	0xFEA
 31061                           fsr0l	equ	0xFE9
 31062                           wreg	equ	0xFE8
 31063                           indf1	equ	0xFE7
 31064                           postdec1	equ	0xFE5
 31065                           fsr1h	equ	0xFE2
 31066                           fsr1l	equ	0xFE1
 31067                           indf2	equ	0xFDF
 31068                           postinc2	equ	0xFDE
 31069                           postdec2	equ	0xFDD
 31070                           plusw2	equ	0xFDB
 31071                           fsr2h	equ	0xFDA
 31072                           fsr2l	equ	0xFD9
 31073                           status	equ	0xFD8
 31074                           
 31075 ;; *************** function _reloadTimer *****************
 31076 ;; Defined at:
 31077 ;;		line 189 in file "../Includes/Drivers/swUart.c"
 31078 ;; Parameters:    Size  Location     Type
 31079 ;;  setTimerValu    1    wreg     unsigned char 
 31080 ;; Auto vars:     Size  Location     Type
 31081 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 31082 ;; Return value:  Size  Location     Type
 31083 ;;                  1    wreg      void 
 31084 ;; Registers used:
 31085 ;;		wreg, status,2, status,0
 31086 ;; Tracked objects:
 31087 ;;		On entry : 0/0
 31088 ;;		On exit  : 0/0
 31089 ;;		Unchanged: 0/0
 31090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31091 ;;      Params:         0       0       0       0       0       0       0       0       0
 31092 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31093 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31094 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31095 ;;Total ram usage:        1 bytes
 31096 ;; Hardware stack levels used:    1
 31097 ;; This function calls:
 31098 ;;		Nothing
 31099 ;; This function is called by:
 31100 ;;		_InterruptPinRX
 31101 ;;		_InterruptTimerUART
 31102 ;; This function uses a non-reentrant model
 31103 ;;
 31104                           
 31105                           	psect	text143
 31106  0053B8                     __ptext143:
 31107                           	opt stack 0
 31108  0053B8                     _reloadTimer:
 31109                           	opt stack 19
 31110                           
 31111                           ;incstack = 0
 31112                           ;reloadTimer@setTimerValue stored from wreg
 31113  0053B8  6E01               	movwf	reloadTimer@setTimerValue,c
 31114                           
 31115                           ;swUart.c: 191: switch(setTimerValue)
 31116  0053BA  D00F               	goto	i2l1154
 31117  0053BC                     
 31118                           ;swUart.c: 196: TMR0 = 238;
 31119  0053BC  0E00               	movlw	0
 31120  0053BE  6ED7               	movwf	4055,c	;volatile
 31121  0053C0  0EEE               	movlw	238
 31122  0053C2  6ED6               	movwf	4054,c	;volatile
 31123                           
 31124                           ;swUart.c: 197: break;
 31125  0053C4  0012               	return	
 31126  0053C6                     
 31127                           ;swUart.c: 201: TMR0 = 229;
 31128  0053C6  0E00               	movlw	0
 31129  0053C8  6ED7               	movwf	4055,c	;volatile
 31130  0053CA  0EE5               	movlw	229
 31131  0053CC  6ED6               	movwf	4054,c	;volatile
 31132                           
 31133                           ;swUart.c: 202: break;
 31134  0053CE  0012               	return	
 31135  0053D0                     
 31136                           ;swUart.c: 204: TMR0 = 0;
 31137  0053D0  0E00               	movlw	0
 31138  0053D2  6ED7               	movwf	4055,c	;volatile
 31139  0053D4  0E00               	movlw	0
 31140  0053D6  6ED6               	movwf	4054,c	;volatile
 31141                           
 31142                           ;swUart.c: 206: }
 31143                           
 31144                           ;swUart.c: 205: break;
 31145  0053D8  0012               	return	
 31146  0053DA                     i2l1154:
 31147  0053DA  5001               	movf	reloadTimer@setTimerValue,w,c
 31148                           
 31149                           ; Switch size 1, requested type "space"
 31150                           ; Number of cases is 2, Range of values is 104 to 156
 31151                           ; switch strategies available:
 31152                           ; Name         Instructions Cycles
 31153                           ; simple_byte            7     4 (average)
 31154                           ;	Chosen strategy is simple_byte
 31155  0053DC  0A68               	xorlw	104	; case 104
 31156  0053DE  B4D8               	btfsc	status,2,c
 31157  0053E0  D7ED               	goto	i2l1155
 31158  0053E2  0AF4               	xorlw	244	; case 156
 31159  0053E4  B4D8               	btfsc	status,2,c
 31160  0053E6  D7EF               	goto	i2l1157
 31161  0053E8  D7F3               	goto	i2l1158
 31162  0053EA                     __end_of_reloadTimer:
 31163                           	opt stack 0
 31164                           tosu	equ	0xFFF
 31165                           tosh	equ	0xFFE
 31166                           tosl	equ	0xFFD
 31167                           pclatu	equ	0xFFB
 31168                           pclath	equ	0xFFA
 31169                           tblptru	equ	0xFF8
 31170                           tblptrh	equ	0xFF7
 31171                           tblptrl	equ	0xFF6
 31172                           tablat	equ	0xFF5
 31173                           prodh	equ	0xFF4
 31174                           prodl	equ	0xFF3
 31175                           intcon	equ	0xFF2
 31176                           intcon2	equ	0xFF1
 31177                           intcon3	equ	0xFF0
 31178                           indf0	equ	0xFEF
 31179                           postinc0	equ	0xFEE
 31180                           fsr0h	equ	0xFEA
 31181                           fsr0l	equ	0xFE9
 31182                           wreg	equ	0xFE8
 31183                           indf1	equ	0xFE7
 31184                           postdec1	equ	0xFE5
 31185                           fsr1h	equ	0xFE2
 31186                           fsr1l	equ	0xFE1
 31187                           indf2	equ	0xFDF
 31188                           postinc2	equ	0xFDE
 31189                           postdec2	equ	0xFDD
 31190                           plusw2	equ	0xFDB
 31191                           fsr2h	equ	0xFDA
 31192                           fsr2l	equ	0xFD9
 31193                           status	equ	0xFD8
 31194                           
 31195 ;; *************** function _clearInterruptPinRX *****************
 31196 ;; Defined at:
 31197 ;;		line 209 in file "../Includes/Drivers/swUart.c"
 31198 ;; Parameters:    Size  Location     Type
 31199 ;;		None
 31200 ;; Auto vars:     Size  Location     Type
 31201 ;;		None
 31202 ;; Return value:  Size  Location     Type
 31203 ;;                  1    wreg      void 
 31204 ;; Registers used:
 31205 ;;		None
 31206 ;; Tracked objects:
 31207 ;;		On entry : 0/0
 31208 ;;		On exit  : 0/0
 31209 ;;		Unchanged: 0/0
 31210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31211 ;;      Params:         0       0       0       0       0       0       0       0       0
 31212 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31214 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31215 ;;Total ram usage:        0 bytes
 31216 ;; Hardware stack levels used:    1
 31217 ;; This function calls:
 31218 ;;		Nothing
 31219 ;; This function is called by:
 31220 ;;		_InterruptPinRX
 31221 ;; This function uses a non-reentrant model
 31222 ;;
 31223                           
 31224                           	psect	text144
 31225  005930                     __ptext144:
 31226                           	opt stack 0
 31227  005930                     _clearInterruptPinRX:
 31228                           	opt stack 19
 31229                           
 31230                           ;swUart.c: 211: INTCONbits.IOCIF = 0;
 31231                           
 31232                           ;incstack = 0
 31233  005930  90F2               	bcf	intcon,0,c	;volatile
 31234  005932  0012               	return		;funcret
 31235  005934                     __end_of_clearInterruptPinRX:
 31236                           	opt stack 0
 31237                           tosu	equ	0xFFF
 31238                           tosh	equ	0xFFE
 31239                           tosl	equ	0xFFD
 31240                           pclatu	equ	0xFFB
 31241                           pclath	equ	0xFFA
 31242                           tblptru	equ	0xFF8
 31243                           tblptrh	equ	0xFF7
 31244                           tblptrl	equ	0xFF6
 31245                           tablat	equ	0xFF5
 31246                           prodh	equ	0xFF4
 31247                           prodl	equ	0xFF3
 31248                           intcon	equ	0xFF2
 31249                           intcon2	equ	0xFF1
 31250                           intcon3	equ	0xFF0
 31251                           indf0	equ	0xFEF
 31252                           postinc0	equ	0xFEE
 31253                           fsr0h	equ	0xFEA
 31254                           fsr0l	equ	0xFE9
 31255                           wreg	equ	0xFE8
 31256                           indf1	equ	0xFE7
 31257                           postdec1	equ	0xFE5
 31258                           fsr1h	equ	0xFE2
 31259                           fsr1l	equ	0xFE1
 31260                           indf2	equ	0xFDF
 31261                           postinc2	equ	0xFDE
 31262                           postdec2	equ	0xFDD
 31263                           plusw2	equ	0xFDB
 31264                           fsr2h	equ	0xFDA
 31265                           fsr2l	equ	0xFD9
 31266                           status	equ	0xFD8
 31267                           
 31268 ;; *************** function _EUSART_Transmit_ISR *****************
 31269 ;; Defined at:
 31270 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;		None
 31273 ;; Auto vars:     Size  Location     Type
 31274 ;;		None
 31275 ;; Return value:  Size  Location     Type
 31276 ;;                  1    wreg      void 
 31277 ;; Registers used:
 31278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31279 ;; Tracked objects:
 31280 ;;		On entry : 0/0
 31281 ;;		On exit  : 0/0
 31282 ;;		Unchanged: 0/0
 31283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31284 ;;      Params:         0       0       0       0       0       0       0       0       0
 31285 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31286 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31287 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31288 ;;Total ram usage:        0 bytes
 31289 ;; Hardware stack levels used:    1
 31290 ;; This function calls:
 31291 ;;		Nothing
 31292 ;; This function is called by:
 31293 ;;		_INTERRUPT_InterruptManager
 31294 ;; This function uses a non-reentrant model
 31295 ;;
 31296                           
 31297                           	psect	text145
 31298  0054AA                     __ptext145:
 31299                           	opt stack 0
 31300  0054AA                     _EUSART_Transmit_ISR:
 31301                           	opt stack 20
 31302                           
 31303                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 31304                           
 31305                           ;incstack = 0
 31306  0054AA  0E40               	movlw	64
 31307  0054AC  0100               	movlb	0	; () banked
 31308  0054AE  61E1               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 31309  0054B0  D012               	goto	i2l1220
 31310                           
 31311                           ; BSR set to: 0
 31312                           ;eusart.c: 167: {
 31313                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 31314  0054B2  51E2               	movf	_eusartTxTail& (0+255),w,b
 31315  0054B4  0D01               	mullw	1
 31316  0054B6  0E40               	movlw	low _eusartTxBuffer
 31317  0054B8  24F3               	addwf	prodl,w,c
 31318  0054BA  6ED9               	movwf	fsr2l,c
 31319  0054BC  0E02               	movlw	high _eusartTxBuffer
 31320  0054BE  20F4               	addwfc	prodh,w,c
 31321  0054C0  6EDA               	movwf	fsr2h,c
 31322  0054C2  50DF               	movf	indf2,w,c
 31323  0054C4  6EAD               	movwf	4013,c	;volatile
 31324                           
 31325                           ; BSR set to: 0
 31326  0054C6  2BE2               	incf	_eusartTxTail& (0+255),f,b
 31327                           
 31328                           ; BSR set to: 0
 31329                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 31330  0054C8  0E3F               	movlw	63
 31331  0054CA  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 31332  0054CC  D002               	goto	i2l1221
 31333                           
 31334                           ; BSR set to: 0
 31335                           ;eusart.c: 170: {
 31336                           ;eusart.c: 171: eusartTxTail = 0;
 31337  0054CE  0E00               	movlw	0
 31338  0054D0  6FE2               	movwf	_eusartTxTail& (0+255),b
 31339  0054D2                     i2l1221:
 31340                           
 31341                           ; BSR set to: 0
 31342                           ;eusart.c: 172: }
 31343                           ;eusart.c: 173: eusartTxBufferRemaining++;
 31344                           
 31345                           ; BSR set to: 0
 31346  0054D2  2BE1               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 31347                           
 31348                           ;eusart.c: 174: }
 31349  0054D4  0012               	return	
 31350  0054D6                     i2l1220:
 31351                           
 31352                           ; BSR set to: 0
 31353                           ;eusart.c: 175: else
 31354                           ;eusart.c: 176: {
 31355                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 31356  0054D6  989D               	bcf	3997,4,c	;volatile
 31357  0054D8  0012               	return	
 31358  0054DA                     __end_of_EUSART_Transmit_ISR:
 31359                           	opt stack 0
 31360                           tosu	equ	0xFFF
 31361                           tosh	equ	0xFFE
 31362                           tosl	equ	0xFFD
 31363                           pclatu	equ	0xFFB
 31364                           pclath	equ	0xFFA
 31365                           tblptru	equ	0xFF8
 31366                           tblptrh	equ	0xFF7
 31367                           tblptrl	equ	0xFF6
 31368                           tablat	equ	0xFF5
 31369                           prodh	equ	0xFF4
 31370                           prodl	equ	0xFF3
 31371                           intcon	equ	0xFF2
 31372                           intcon2	equ	0xFF1
 31373                           intcon3	equ	0xFF0
 31374                           indf0	equ	0xFEF
 31375                           postinc0	equ	0xFEE
 31376                           fsr0h	equ	0xFEA
 31377                           fsr0l	equ	0xFE9
 31378                           wreg	equ	0xFE8
 31379                           indf1	equ	0xFE7
 31380                           postdec1	equ	0xFE5
 31381                           fsr1h	equ	0xFE2
 31382                           fsr1l	equ	0xFE1
 31383                           indf2	equ	0xFDF
 31384                           postinc2	equ	0xFDE
 31385                           postdec2	equ	0xFDD
 31386                           plusw2	equ	0xFDB
 31387                           fsr2h	equ	0xFDA
 31388                           fsr2l	equ	0xFD9
 31389                           status	equ	0xFD8
 31390                           
 31391 ;; *************** function _EUSART_Receive_ISR *****************
 31392 ;; Defined at:
 31393 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 31394 ;; Parameters:    Size  Location     Type
 31395 ;;		None
 31396 ;; Auto vars:     Size  Location     Type
 31397 ;;		None
 31398 ;; Return value:  Size  Location     Type
 31399 ;;                  1    wreg      void 
 31400 ;; Registers used:
 31401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31402 ;; Tracked objects:
 31403 ;;		On entry : 0/0
 31404 ;;		On exit  : 0/0
 31405 ;;		Unchanged: 0/0
 31406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31407 ;;      Params:         0       0       0       0       0       0       0       0       0
 31408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31411 ;;Total ram usage:        0 bytes
 31412 ;; Hardware stack levels used:    1
 31413 ;; This function calls:
 31414 ;;		Nothing
 31415 ;; This function is called by:
 31416 ;;		_INTERRUPT_InterruptManager
 31417 ;; This function uses a non-reentrant model
 31418 ;;
 31419                           
 31420                           	psect	text146
 31421  0054DA                     __ptext146:
 31422                           	opt stack 0
 31423  0054DA                     _EUSART_Receive_ISR:
 31424                           	opt stack 20
 31425                           
 31426                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;incstack = 0
 31430  0054DA  A2AB               	btfss	4011,1,c	;volatile
 31431  0054DC  D003               	goto	i2l1226
 31432                           
 31433                           ;eusart.c: 184: {
 31434                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 31435  0054DE  98AB               	bcf	4011,4,c	;volatile
 31436                           
 31437                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 31438  0054E0  88AB               	bsf	4011,4,c	;volatile
 31439                           
 31440                           ;eusart.c: 189: }
 31441  0054E2  0012               	return	
 31442  0054E4                     i2l1226:
 31443                           
 31444                           ;eusart.c: 190: else
 31445                           ;eusart.c: 191: {
 31446                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 31447  0054E4  0100               	movlb	0	; () banked
 31448  0054E6  51E0               	movf	_eusartRxHead& (0+255),w,b
 31449  0054E8  0D01               	mullw	1
 31450  0054EA  0E00               	movlw	low _eusartRxBuffer
 31451  0054EC  24F3               	addwf	prodl,w,c
 31452  0054EE  6ED9               	movwf	fsr2l,c
 31453  0054F0  0E02               	movlw	high _eusartRxBuffer
 31454  0054F2  20F4               	addwfc	prodh,w,c
 31455  0054F4  6EDA               	movwf	fsr2h,c
 31456  0054F6  CFAE FFDF          	movff	4014,indf2	;volatile
 31457                           
 31458                           ; BSR set to: 0
 31459  0054FA  2BE0               	incf	_eusartRxHead& (0+255),f,b
 31460                           
 31461                           ; BSR set to: 0
 31462                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 31463  0054FC  0E3F               	movlw	63
 31464  0054FE  65E0               	cpfsgt	_eusartRxHead& (0+255),b
 31465  005500  D002               	goto	i2l1228
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;eusart.c: 195: {
 31469                           ;eusart.c: 196: eusartRxHead = 0;
 31470  005502  0E00               	movlw	0
 31471  005504  6FE0               	movwf	_eusartRxHead& (0+255),b
 31472  005506                     i2l1228:
 31473                           
 31474                           ; BSR set to: 0
 31475                           ;eusart.c: 197: }
 31476                           ;eusart.c: 198: eusartRxCount++;
 31477                           
 31478                           ; BSR set to: 0
 31479  005506  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 31480  005508  0012               	return	
 31481  00550A                     __end_of_EUSART_Receive_ISR:
 31482                           	opt stack 0
 31483                           tosu	equ	0xFFF
 31484                           tosh	equ	0xFFE
 31485                           tosl	equ	0xFFD
 31486                           pclatu	equ	0xFFB
 31487                           pclath	equ	0xFFA
 31488                           tblptru	equ	0xFF8
 31489                           tblptrh	equ	0xFF7
 31490                           tblptrl	equ	0xFF6
 31491                           tablat	equ	0xFF5
 31492                           prodh	equ	0xFF4
 31493                           prodl	equ	0xFF3
 31494                           intcon	equ	0xFF2
 31495                           intcon2	equ	0xFF1
 31496                           intcon3	equ	0xFF0
 31497                           indf0	equ	0xFEF
 31498                           postinc0	equ	0xFEE
 31499                           fsr0h	equ	0xFEA
 31500                           fsr0l	equ	0xFE9
 31501                           wreg	equ	0xFE8
 31502                           indf1	equ	0xFE7
 31503                           postdec1	equ	0xFE5
 31504                           fsr1h	equ	0xFE2
 31505                           fsr1l	equ	0xFE1
 31506                           indf2	equ	0xFDF
 31507                           postinc2	equ	0xFDE
 31508                           postdec2	equ	0xFDD
 31509                           plusw2	equ	0xFDB
 31510                           fsr2h	equ	0xFDA
 31511                           fsr2l	equ	0xFD9
 31512                           status	equ	0xFD8
 31513                           
 31514 ;; *************** function _CMP1_ISR *****************
 31515 ;; Defined at:
 31516 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 31517 ;; Parameters:    Size  Location     Type
 31518 ;;		None
 31519 ;; Auto vars:     Size  Location     Type
 31520 ;;		None
 31521 ;; Return value:  Size  Location     Type
 31522 ;;                  1    wreg      void 
 31523 ;; Registers used:
 31524 ;;		None
 31525 ;; Tracked objects:
 31526 ;;		On entry : 0/0
 31527 ;;		On exit  : 0/0
 31528 ;;		Unchanged: 0/0
 31529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31530 ;;      Params:         0       0       0       0       0       0       0       0       0
 31531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31533 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31534 ;;Total ram usage:        0 bytes
 31535 ;; Hardware stack levels used:    1
 31536 ;; This function calls:
 31537 ;;		Nothing
 31538 ;; This function is called by:
 31539 ;;		_INTERRUPT_InterruptManager
 31540 ;; This function uses a non-reentrant model
 31541 ;;
 31542                           
 31543                           	psect	text147
 31544  005934                     __ptext147:
 31545                           	opt stack 0
 31546  005934                     _CMP1_ISR:
 31547                           	opt stack 20
 31548                           
 31549                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 31550                           
 31551                           ;incstack = 0
 31552  005934  9CA1               	bcf	4001,6,c	;volatile
 31553  005936  0012               	return		;funcret
 31554  005938                     __end_of_CMP1_ISR:
 31555                           	opt stack 0
 31556                           tosu	equ	0xFFF
 31557                           tosh	equ	0xFFE
 31558                           tosl	equ	0xFFD
 31559                           pclatu	equ	0xFFB
 31560                           pclath	equ	0xFFA
 31561                           tblptru	equ	0xFF8
 31562                           tblptrh	equ	0xFF7
 31563                           tblptrl	equ	0xFF6
 31564                           tablat	equ	0xFF5
 31565                           prodh	equ	0xFF4
 31566                           prodl	equ	0xFF3
 31567                           intcon	equ	0xFF2
 31568                           intcon2	equ	0xFF1
 31569                           intcon3	equ	0xFF0
 31570                           indf0	equ	0xFEF
 31571                           postinc0	equ	0xFEE
 31572                           fsr0h	equ	0xFEA
 31573                           fsr0l	equ	0xFE9
 31574                           wreg	equ	0xFE8
 31575                           indf1	equ	0xFE7
 31576                           postdec1	equ	0xFE5
 31577                           fsr1h	equ	0xFE2
 31578                           fsr1l	equ	0xFE1
 31579                           indf2	equ	0xFDF
 31580                           postinc2	equ	0xFDE
 31581                           postdec2	equ	0xFDD
 31582                           plusw2	equ	0xFDB
 31583                           fsr2h	equ	0xFDA
 31584                           fsr2l	equ	0xFD9
 31585                           status	equ	0xFD8
 31586                           tosu	equ	0xFFF
 31587                           tosh	equ	0xFFE
 31588                           tosl	equ	0xFFD
 31589                           pclatu	equ	0xFFB
 31590                           pclath	equ	0xFFA
 31591                           tblptru	equ	0xFF8
 31592                           tblptrh	equ	0xFF7
 31593                           tblptrl	equ	0xFF6
 31594                           tablat	equ	0xFF5
 31595                           prodh	equ	0xFF4
 31596                           prodl	equ	0xFF3
 31597                           intcon	equ	0xFF2
 31598                           intcon2	equ	0xFF1
 31599                           intcon3	equ	0xFF0
 31600                           indf0	equ	0xFEF
 31601                           postinc0	equ	0xFEE
 31602                           fsr0h	equ	0xFEA
 31603                           fsr0l	equ	0xFE9
 31604                           wreg	equ	0xFE8
 31605                           indf1	equ	0xFE7
 31606                           postdec1	equ	0xFE5
 31607                           fsr1h	equ	0xFE2
 31608                           fsr1l	equ	0xFE1
 31609                           indf2	equ	0xFDF
 31610                           postinc2	equ	0xFDE
 31611                           postdec2	equ	0xFDD
 31612                           plusw2	equ	0xFDB
 31613                           fsr2h	equ	0xFDA
 31614                           fsr2l	equ	0xFD9
 31615                           status	equ	0xFD8
 31616                           
 31617                           	psect	text148
 31618  000000                     __ptext148:
 31619                           	opt stack 0
 31620                           tosu	equ	0xFFF
 31621                           tosh	equ	0xFFE
 31622                           tosl	equ	0xFFD
 31623                           pclatu	equ	0xFFB
 31624                           pclath	equ	0xFFA
 31625                           tblptru	equ	0xFF8
 31626                           tblptrh	equ	0xFF7
 31627                           tblptrl	equ	0xFF6
 31628                           tablat	equ	0xFF5
 31629                           prodh	equ	0xFF4
 31630                           prodl	equ	0xFF3
 31631                           intcon	equ	0xFF2
 31632                           intcon2	equ	0xFF1
 31633                           intcon3	equ	0xFF0
 31634                           indf0	equ	0xFEF
 31635                           postinc0	equ	0xFEE
 31636                           fsr0h	equ	0xFEA
 31637                           fsr0l	equ	0xFE9
 31638                           wreg	equ	0xFE8
 31639                           indf1	equ	0xFE7
 31640                           postdec1	equ	0xFE5
 31641                           fsr1h	equ	0xFE2
 31642                           fsr1l	equ	0xFE1
 31643                           indf2	equ	0xFDF
 31644                           postinc2	equ	0xFDE
 31645                           postdec2	equ	0xFDD
 31646                           plusw2	equ	0xFDB
 31647                           fsr2h	equ	0xFDA
 31648                           fsr2l	equ	0xFD9
 31649                           status	equ	0xFD8
 31650                           
 31651                           	psect	rparam
 31652  0000                     tosu	equ	0xFFF
 31653                           tosh	equ	0xFFE
 31654                           tosl	equ	0xFFD
 31655                           pclatu	equ	0xFFB
 31656                           pclath	equ	0xFFA
 31657                           tblptru	equ	0xFF8
 31658                           tblptrh	equ	0xFF7
 31659                           tblptrl	equ	0xFF6
 31660                           tablat	equ	0xFF5
 31661                           prodh	equ	0xFF4
 31662                           prodl	equ	0xFF3
 31663                           intcon	equ	0xFF2
 31664                           intcon2	equ	0xFF1
 31665                           intcon3	equ	0xFF0
 31666                           indf0	equ	0xFEF
 31667                           postinc0	equ	0xFEE
 31668                           fsr0h	equ	0xFEA
 31669                           fsr0l	equ	0xFE9
 31670                           wreg	equ	0xFE8
 31671                           indf1	equ	0xFE7
 31672                           postdec1	equ	0xFE5
 31673                           fsr1h	equ	0xFE2
 31674                           fsr1l	equ	0xFE1
 31675                           indf2	equ	0xFDF
 31676                           postinc2	equ	0xFDE
 31677                           postdec2	equ	0xFDD
 31678                           plusw2	equ	0xFDB
 31679                           fsr2h	equ	0xFDA
 31680                           fsr2l	equ	0xFD9
 31681                           status	equ	0xFD8
 31682                           
 31683                           	psect	temp
 31684  00005E                     btemp:
 31685                           	opt stack 0
 31686  00005E                     	ds	1
 31687  0000                     int$flags	set	btemp
 31688  0000                     wtemp6	set	btemp+1
 31689                           tosu	equ	0xFFF
 31690                           tosh	equ	0xFFE
 31691                           tosl	equ	0xFFD
 31692                           pclatu	equ	0xFFB
 31693                           pclath	equ	0xFFA
 31694                           tblptru	equ	0xFF8
 31695                           tblptrh	equ	0xFF7
 31696                           tblptrl	equ	0xFF6
 31697                           tablat	equ	0xFF5
 31698                           prodh	equ	0xFF4
 31699                           prodl	equ	0xFF3
 31700                           intcon	equ	0xFF2
 31701                           intcon2	equ	0xFF1
 31702                           intcon3	equ	0xFF0
 31703                           indf0	equ	0xFEF
 31704                           postinc0	equ	0xFEE
 31705                           fsr0h	equ	0xFEA
 31706                           fsr0l	equ	0xFE9
 31707                           wreg	equ	0xFE8
 31708                           indf1	equ	0xFE7
 31709                           postdec1	equ	0xFE5
 31710                           fsr1h	equ	0xFE2
 31711                           fsr1l	equ	0xFE1
 31712                           indf2	equ	0xFDF
 31713                           postinc2	equ	0xFDE
 31714                           postdec2	equ	0xFDD
 31715                           plusw2	equ	0xFDB
 31716                           fsr2h	equ	0xFDA
 31717                           fsr2l	equ	0xFD9
 31718                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         672
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      93
    BANK0           160     92     160
    BANK1           256      0     253
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6256_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6256_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6256_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6256_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4619$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4609$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4609$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4585$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4585$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4585$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4585$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  727888
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  284038
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   41590
                                             23 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   41498
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41165
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44168
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  112543
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  344017
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  182477
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44036
                                             23 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44144
                                             23 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51047
                                             23 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   45447
                                             23 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   40407
                                             18 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         19    19      0   30085
                                             31 COMRAM    19    19      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      0     0      0      22
                _clearInterruptPinRX
                        _reloadTimer
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _clearInterruptPinRX
     _reloadTimer
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     32      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     33A      14        0.0%
DATA                 0      0     33A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 29 00:51:28 2018

           __size_of_moteApp_lightStringSize 0006                                   _USB_SD_Ptr 75EF  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                        ??_moteApp_testSensors 00AC  
                                         l60 2DD2                                           l65 2DD4  
                                         l57 2D70                                           l66 2DE6  
                          ??_CMP1_Initialize 0060                                           l67 2DFC  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 4C20  
                                         _cs 015C               moteJoiningProcess@selectButton 0078  
                              _USBDeviceInit 296A                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 57A4  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 0066  
                            _timer0ReloadVal 0039                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
             __end_of_moteApp_setLightString 4BB8         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l111 5346  
                                        l112 532E                                          l130 3958  
                                        l123 3900                                          l127 3970  
                                        l400 10C6                                          l128 3918  
                                        l129 3938                                          l410 11F0  
                                        l402 113A                                          l420 12DE  
                                        l412 1240                                          l404 1158  
                                        l340 4662                                          l500 0724  
                                        l405 1190                                          l341 4672  
                __end_of_USBStdGetDscHandler 2CF6                                          l422 1330  
                                        l414 1250                                          l502 0762  
                                        l431 142A                                          l343 4688  
                                        l424 135C                                          l416 12A6  
                                        l408 11C8                                          l600 23CC  
                                        l512 08F8                                          l504 079E  
                                        l441 14AC                                          l601 23DC  
                                        l337 4640                                          l434 144C  
                                        l418 12B6                                          l530 0ADE  
                                        l522 0A32                                          l370 216E  
                                        l443 14B6                                          l435 145A  
                                        l427 1372                                          l355 5644  
                                        l523 0B6E                                          l531 0AF6  
                                        l363 211C                                          l348 5378  
                                        l524 0B26                                          l532 0B0E  
                                        l516 0952                                          l508 080C  
                                        l460 0272                                          l605 56D6  
                                        l349 5360                                          l437 148E  
                                        l429 13CA                                          l621 4C5E  
                                        l701 4D5A                                          l541 0C0C  
                                        l525 0A96                                          l517 09C4  
                                        l509 0860                                          l381 2304  
                                        l373 21FE                                          l365 2122  
                                        l390 14F8                                          l550 0CBE  
                                        l518 0990                                          l462 027E  
                                        l382 221E                                          l366 2138  
                                        l439 14A2                                          l391 102C  
                                        l703 4D8C                                          l711 48E0  
                                        l543 0D06                                          l551 0CD6  
                                        l535 0B94                                          l527 0B50  
                                        l519 09A6                                          l383 226E  
                                        l367 2150                                          l704 4DA2  
                                        l720 4930                                          l560 0D68  
                                        l552 0CEE                                          l544 0C60  
                                        l528 0AAE                                          l480 03FC  
                                        l472 02E6                                          l464 02DC  
                                        l376 22E8                                          l721 4942  
                                        l561 0D84                                          l537 0BB0  
                                        l529 0AC6                                          l385 22D4  
                                        l377 221C                                          l369 2160  
                                        l626 4C82                                          l642 3B26  
                                        l466 0FCA                                          l562 0DA0  
                                        l554 0D48                                          l546 0D36  
                                        l490 07B0                                          l482 0408  
                                        l395 1540                                          l731 5128  
                                        l643 3B10                                          l563 0DBC  
                                        l547 0C76                                          l491 05CE  
                                        l483 04CE                                          l467 02E4  
                                        l459 02C8                                          l636 5432  
                                        l396 102E                                          l708 48B0  
                                        l732 513A                                          l724 4964  
                                        l572 0F28                                          l580 0EF8  
                                        l556 0DF0                                          l564 0DD8  
                                        l548 0C8E                                          l492 06E4  
                                        l484 04EC                                          l476 0342  
                                        l637 541C                                          l397 103E  
                                        l725 4976                                          l661 5534  
                                        l645 3B46                                          l581 0F10  
                                        l573 0E82                                          l565 0E1A  
                                        l557 0D4E                                          l549 0CA6  
                                        l485 050C                                          l477 0396  
                                        l398 1048                                          l750 4B98  
                                        l582 0F58                                          l566 0E5C  
                                        l494 0660                                          l591 23EC  
                                        l647 3BBE                                          l495 066E  
                                        l592 235C                                          l672 36E8  
                                        l648 3B7C                                          l584 0F70  
                                        l576 0E98                                          l568 0E7C  
                                        l593 2426                                          l585 0F76  
                                        l577 0EB0                                          l569 0E78  
                                        l497 06AC                                          l489 05A4  
                                        l850 3F48                                          l594 236C  
                                        l666 3648                                          l690 445A  
                                        l738 4F7E                                          l658 5522  
                                        l578 0EC8                                          l498 06B0  
                                        l851 3EB6                                          l595 237C  
                                        l739 4F90                                          l579 0EE0  
                                        l852 3F02                                          l596 238C  
                                        l684 43EE                                          _BDT 000400  
                                        l941 4AB0                                          l845 3F30  
                                        l853 3F0A                                          l597 239C  
                                        l669 36DA                                          l942 4AAC  
                                        l846 3EB4                                          l598 23AC  
                                        l686 4412                                          l855 3F10  
                                        l599 23BC                                          l679 318A  
                                        _CKE 007E3E                                          l880 34B8  
                                        l688 4436                                          l882 34E6  
                                        l946 4AD8                                          l938 4AB6  
                                        l947 4ADA                                          l884 3536  
                                        l885 355E                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 1020  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 003D                                          _log 02E0  
                                 _USBSuspend 55BC                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4472                 __end_of_moteApp_clearCommand 5888  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 5822  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 2838  
                             _USBDeviceState 00EC                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0077                                 ___fltol@exp1 0069  
                                       l1040 473E                                         l1032 417E  
                                       l1033 41F8                                         l1204 524E  
                                       l1205 524C                                         l1045 4AF0  
                                       l1214 51A4                                         l1207 5276  
                                       l1215 51C8                                         l1055 566E  
                                       l1216 51C6                                         l1232 509A  
                                       l2201 2600                                         l1066 5628  
                                       l2211 2700                                         l2203 25EA  
                                       l2220 26A4                                         l2212 2656  
                                       l1325 57C6                                         l2213 265A  
                                       l2205 25F4                                         l2310 4066  
                                       l2223 26DE                                         l2215 269C  
                                       l2207 260C                                         l2311 405A  
                                       l2224 26E2                                         l2216 267A  
                                       l2208 2616                                         l2209 2644  
                                       l2314 408E                                         l2219 26C6  
                                       l2171 3DF6                                         l2315 409C  
                                       l2307 4034                              _timer3ReloadVal 003B  
                                       l2316 40B2                                         l2308 4048  
                                       l2420 4A24                                         l2173 3D70  
                                       l2422 4A3A                                         l2175 3D78  
                                       l2183 56A0                                         l1543 51F4  
                                       l2423 4A32                                         l2176 3DA4  
                                       l2177 3DD0                                         l2178 3DAA  
                                       l2426 4A52                                         l2427 4A5C  
                                       l2419 4A18                                         l2428 4A6A  
                 USBConfigureEndpoint@handle 0007                                         l2701 1A32  
                                       l2710 1B04                                         l2702 1A36  
                                       l2470 35F0                                         l2471 35E0  
                                       l2712 1B1A                                         l2705 1AD0  
                                       l2722 1B8A                                         l2714 1B24  
                                       l1851 2A12                                         l2707 1AE0  
                                       l1908 5316                                         l2652 5060  
                                       l2740 1C48                                         l2476 3614  
                                       l2468 3584                                         l2820 24E2  
                                       l2572 5182                                         l1909 5314  
                                       l2653 5058                                         l2741 1C44  
                                       l2477 3608                                         l2573 518A  
                                       l1846 29B0                                         l2806 45F2  
                                       l2726 1BB0                                         l2750 1D62  
                                       l2830 257C                                         l2822 252C  
                                       l2807 4588                                         l2727 1BB8  
                                       l2719 1B44                                         l2743 1C8E  
                                       l2479 3630                                         l2831 25AE  
                                       l2823 2514                                         l2815 24AE  
                                       l2672 5466                                         l1848 29EA  
                                       l2656 5078                                         l2808 45EA  
                                       l2728 1BBA                                         l2680 18C6  
                                       l2760 1DD0                                         l2736 1C08  
                                       l2816 24BE                                         l2568 516C  
                                       l2673 5454                                         l1849 29D8  
                                       l2657 5082                                         l2753 1D98  
                                       l2745 1CB6                                         l2737 1C04  
                                       l2825 255E                                         l2817 24DC  
                                       l2569 5166                                         l1890 3C6C  
                                       l2762 1E14                                         l2754 1D7A  
                                       l2746 1D64                                         l2770 1578  
                                       l2826 2552                                         l2666 5034  
                                       l2691 19EA                                         l2763 1E38  
                                       l2747 1D14                                         l2771 1574  
                                       l2819 24EE                                         l2667 5012  
                                       l2692 19C8                                         l2684 1912  
                                       l2764 1E62                                         l2748 1D3C  
                                       l2772 1588                                         l2693 19D6  
                                       l2685 190E                                         l2765 1E6E  
                                       l2781 17A6                                         l1886 3BE6  
                                       l2694 19DA                                         l2766 1E70  
                                       l2790 1822                                         l2782 1788  
                                       l2774 15B8                                         l2687 196E  
                                       l2679 18CA                                         l2791 1840  
                                       l2775 15B4                                         l1888 3C10  
                                       l2688 1932                                         l2776 15C8  
                                       l2697 1A48                                         l2793 1864  
                                       l2777 15E6                                         l2698 1A0E  
                                       l2794 1882                                         l2788 17DE  
                                       l2798 4FC0                                         l2799 4FB6  
                                       l8047 5012                                         l8401 5092  
                                       l7761 4736                                         l7771 5192  
                                       l9419 4588                                         l9523 4D52  
                                       l9461 440A                                         l9375 48A8  
                                       l8479 4B90                                         l9473 442E  
                                       l9449 43E6                                         l9485 4452  
                                       l9573 3B3E                                         l7897 5666  
                                       STR_1 7D1E                                         STR_2 7D00  
                                       l8985 1E62                                         STR_3 7D0F  
                                       STR_4 7F3D                                         STR_5 7D8A  
                                       STR_6 7D97                                         STR_7 7CC3  
                                       STR_8 7E70                                         STR_9 7F46  
                            _lightStringSize 00ED                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0020                                         _PEIE 007F96  
                                       u7020 1B96                                         u6410 50B2  
                                       u8020 494C                                         u8100 3B62  
                                       u7230 1DCC                                         u6360 4B10  
                                       u8040 4980                                         u9010 14BE  
                                       u6380 4B3E                                         u7260 1E22  
                                       u7420 17DA                                         u7270 1E46  
                                       u7510 4A3E                                         u8070 4DA6  
                                       u6367 4B06                        ??_USBCtrlTrfTxService 0001  
                                       u7360 15D4                                         u6480 4BB4  
                                       u8250 25DE                                         u6810 19F2  
                                       u7450 1830                                         u7370 174A  
                                       u8170 36B8                                         u6387 4B34  
                                       u8340 26CC                                         u8500 406A  
                                       u7460 184E                                         u7700 2568  
                                       u7620 5170                                         u9300 07BE  
                                       u8190 3D64                                         u7550 35A2  
                                       u7375 1740                                         _UCFG 000F62  
                                       u6760 199E                                         u8258 25E2  
                                       u6770 19AE                                         u7810 5144  
                                       u9250 06B4                                         u9170 051A  
                                       u9090 02F4                                         u7555 3598  
                                       u8540 5064                                         u6940 1B28  
                                       u6780 19B0                                         u9420 0BBE  
                                       u9340 0904                                         _UEP0 000F6A  
                                       _UEP1 000F6B                                         u8198 3D68  
                                       u7590 361A                                         u7920 4FF4  
                                       u8730 4A82                                         u6970 1B40  
                                       u7850 490E                                         u8570 38E8  
                                       u7755 5204                                         _UEIE 000F66  
                                       u7756 5206                                         u7940 4406  
                                       u7790 4F9A                                         u7960 442A  
                                       u7890 45B6                                         u7980 444E  
                                       u9830 29CC                                         u9920 3F54  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u9860 2A6E                                         _TMR0 000FD6  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 0033       USBStdFeatureReqHandler@current_ep_data 0019  
                                       _pDst 0154                                         _main 2CF6  
                   ??i2_USBTransferOnePacket 0005                              _TMR0_StartTimer 592C  
          __end_of_moteApp_add8bToDataBuffer 3EB2                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 52EE  
                                       btemp 005E                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 58F2  
                                       start 011A                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 5896  
                            _TMR3_Initialize 56A4                                  _storedLight 01F2  
                __end_of_USBapp_exitCDCState 58CE                             __end_of_CMP1_ISR 5938  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 32C0  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 0F02  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 591A                         ??_moteJoiningProcess 0079  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 5914  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 5704                       _moteApp_getLightString 5896  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 5878                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 57D0                                        l10303 132C  
                                      l10225 1136                                        l10325 13C6  
                                      l10271 124C                                        l11049 5454  
                                      l11225 29A8                                        l10353 148A  
                                      l10337 1426                                        l11253 2A0A  
                                      l10287 12B2                                        l10607 0666  
                              ___fltol@sign1 0068                              __end_of___almod 40C4  
                            __end_of___fladd 1BD6                                        ?_main 0001  
                            __end_of___fldiv 1E8C                              __end_of___lbdiv 518E  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 4A74                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 1898                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3642                              _TMR1_StartTimer 5928  
                                      u10010 218A                              __end_of___lldiv 481A  
                                      u11007 232C                                        u11017 233E  
                                      u11027 2350                                        u11037 242E  
                                      u11047 2440                                        u11057 2452  
                                      u11067 14C6            __size_of_MOTEapp_setResponseReady 0006  
                                      u11077 14D8                                        u11087 14EA  
                                      _T1CON 000FCD                                        u11097 5368  
                     __end_of_USBDeviceTasks 296A                                        _T2CON 000FBA  
                                      u10907 3170                                        u10917 31A0  
                                      u10927 31B2                                        u10847 3968  
                    __end_of_sendDataCommand 3BCC                                        _T3CON 000FB1  
                                      u10937 31C4                                        u10857 3102  
                                      u10947 5336                                        u10867 3114  
                                      u10957 07A6                                        u10877 3126  
                                      u10967 482A                                        u10887 314C  
                                      u10977 483E                                        u10897 315E  
                  ?_USBCtrlEPServiceComplete 0001                                        u10987 4852  
                                      u10997 5650                              __end_of___lwmod 508C  
                  ?_MOTEapp_setResponseReady 0001                          oled_putUint8@number 0079  
                                      i2l923 4DAC                                        i2l917 4DB8  
                                      i2l925 4DB2                                        i2l870 4EEE  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00C4                              __end_of_delayms 5354  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 42B0                            oled_putChar@index 006B  
                           __end_of_TMR0_ISR 58BA                             __end_of_TMR1_ISR 58AE  
                                      _sd000 79B4                                        _sd001 796E  
            service_pushbutton@Release_Timer 00E4                                        _sd002 793A  
                              __CFG_WRTB$OFF 000000                             __end_of_TMR3_ISR 5722  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 57D0                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _n_bit 005B  
                                      _light 0158                          _clearInterruptPinRX 5930  
                                      _stops 015D                               __pbitbssCOMRAM 02E0  
                    __end_of_TMR1_Initialize 53B8                                 _runningState 00F3  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 4CEC  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 005F  
                            _TMR2_StartTimer 5924                              __end_of_strncmp 460E  
                            ___lbdiv@divisor 0060                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                             __end_ofi2_memset 5592  
                            ___lbdiv@counter 0062                                 _m10SecTicker 0156  
               __end_of_moteApp_getTempValue 5150                              putUSBUSART@data 0060  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 42B0                        TMR2_ReadTimer@readVal 0060  
              __size_of_TMRapp_ClearBitFlags 0008                                   _InitSwUart 573E  
                               __end_of_main 2E0E                        _control_signal_bitmap 015A  
                       ?_clearInterruptPinRX 0001                __size_of_MOTEapp_handlerState 000A  
                     _MOTEapp_TimerBasedTask 56C6                               ??_EUSART_Write 0060  
                    __end_of_TMR2_Initialize 5836                                 ?_sendCommand 0061  
                ?_INTERRUPT_InterruptManager 0001                    __size_of_USBCtrlEPService 00CE  
                                     ??_main 00BC                                 ?_moduleSleep 0001  
                               ?_moteHandler 0001             __size_of_moteApp_addToDataBuffer 005E  
                            _TMR3_StartTimer 5920                                __activetblptr 000002  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 52B6  
                  sendDataCommand@dataLength 0065                                  ?_USBSuspend 0001  
                                 _NextUSBOut 00E8                                 ?_reloadTimer 0001  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 00DC             moteApp_convertSensorValue@string 0072  
                    __end_of_TMR0_StartTimer 5930                      __end_of_USBDeviceAttach 5322  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 00D6  
                          _getsUSBUSART$6620 006B                                       _ACTCON 000FB5  
                                     STR_100 7B87                                       STR_101 7C83  
                                     STR_110 7C83                                       STR_102 7C63  
                                     STR_103 7C53                                       STR_111 7C20  
                                     STR_104 7C83                                       STR_112 7CD3  
                                     STR_120 7B65                                       STR_121 7F87  
                                     STR_113 7CE2                                       STR_105 7C42  
                                     STR_130 7CE2                                       STR_122 7FC2  
                                     STR_106 7ECA                                       STR_114 7C73  
                                     _ADRESH 000FC4                                       STR_131 7CD3  
                                     STR_115 7C63                                       STR_107 7E51  
                                     STR_123 7DCB                                       STR_132 7C63  
                                     STR_108 7B10                                       STR_124 7FE0  
                                     STR_140 7FCF                                       STR_116 7F80  
                                     STR_133 7C53                                       STR_109 7AFF  
                                     STR_125 7FEC                                       STR_141 7FD3  
                                     STR_117 7F79                                       STR_134 7C83  
                                     STR_126 7FE4                                       STR_150 7FEF  
                                     STR_118 7FFA                                       STR_142 7FD7  
                                     _ADRESL 000FC3                                       STR_127 7FE8  
                                     STR_143 7FDB                                       STR_135 7BED  
                                     STR_151 7BCB                                       STR_119 7B76  
                                     STR_160 7B21                                       STR_144 7FF3  
                                     STR_128 7FEF                                       STR_136 7E58  
                                     STR_152 7C93                                       STR_137 7C73  
                                     STR_129 7C73                                       STR_153 7FC7  
                                     STR_145 7FDB                                       STR_161 7B87  
                                     STR_162 7C83                                       STR_154 7FCB  
                                     STR_146 7FDF                                       STR_138 7FC7  
                                     STR_170 7DCD                                       STR_155 7FCF  
                                     STR_147 7FEB                                       STR_139 7FCB  
                                     STR_171 7DDA                                       STR_163 7CA3  
                                     STR_156 7FD3                                       STR_180 7F71  
                                     STR_148 7FE3                                       STR_164 7D7F  
                                     STR_172 7CF1                                       STR_157 7FD7  
                                     STR_181 7F69                                       STR_149 7FE7  
                                     STR_173 7F2B                                       STR_165 7D8C  
                                     _EEDATA 000FA8                                       STR_174 7A05  
                                     STR_182 7AC7                                       STR_158 7FDB  
                                     STR_166 7D99                                       STR_159 7FF3  
                                     STR_167 7DA6                                       STR_175 7A22  
                                     STR_183 79D3                                       STR_168 7DB3  
                                     STR_176 7A3C                                       STR_184 79B8  
                                     STR_169 7DC0                                       STR_185 7A56  
                                     STR_177 79EE                                       STR_186 7A6C  
                                     STR_178 7A08                                       STR_179 7F58  
                                     STR_187 7F10                                       STR_188 7F61  
                                     STR_189 7E28                                       _EECON2 000FA7  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 007A                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0144                                       i2l2000 40E0  
                                     i2l2001 40E6                                       i2l1130 5560  
                                     i2l2002 4104                                       i2l2010 510A  
                                     i2l1220 54D6                      __end_of_TMR3_Initialize 56C6  
                                     i2l1221 54D2                                       i2l2023 38A8  
                                     i2l2024 38A2                                       i2l2025 3842  
                                     i2l2009 510C                                       i2l2017 54A4  
                                     i2l1226 54E4                                       i2l1154 53DA  
                                     i2l2018 54A2                                       i2l1155 53BC  
                                     i2l1228 5506                                       i2l2052 347E  
                                     i2l2044 33D2                                       i2l2036 4E14  
                                     i2l2060 31EE                                       i2l1157 53C6  
                                     i2l2045 33D8                                       i2l1158 53D0  
                                     i2l2046 3452                                       i2l2038 4E5C  
                                     i2l2150 3F8C                                       i2l2070 325E  
                                     i2l2062 31F8                                       i2l2047 3418  
                                     i2l2063 31FE                                       i2l2152 3FA4  
                                     i2l2064 3204                                       i2l1280 0088  
                                     i2l2049 3438                                       i2l2153 3FB2  
                                     i2l2081 1F5E                                       i2l2065 3218  
                                     i2l2154 3FD0                                       i2l2090 203E  
                                     i2l2082 1F60                                       i2l2066 321E  
                                     i2l1282 0092                                       i2l2155 3FE8  
                                     i2l2091 204A                                       i2l2083 1F78  
                                     i2l2059 327C                                       i2l1283 009E  
                                     i2l1275 0060                                       i2l2092 20BE  
                                     i2l2076 1EB0                                       i2l2068 3224  
                                     i2l1276 006C                                       i2l2149 3FF2  
                                     i2l2085 1FF8                                       i2l2077 1EB4  
                                     i2l2069 3242                                       i2l1285 00CA  
                                     i2l1278 007C                                       i2l2095 2078  
                                     i2l2087 1FC2                                       i2l2079 1F1E  
                                     i2l1287 00CE                                       i2l2088 1FDE  
                                     i2l2097 20CA                                       i2l1922 4260  
                                     i2l1851 2B3E                                       i2l1676 5716  
                                     i2l1916 3A92                                       i2l1924 427C  
                                     i2l1933 2F92                                       i2l1861 2876  
                                     i2l2590 47BA                                       i2l1934 2F3C  
                                     i2l1846 2ADC                                       i2l1862 2882  
                                     i2l1951 37A2                                       i2l1871 2900  
                                     i2l1952 376A                                       i2l1928 43AE  
                                     i2l2672 5580                                       i2l1848 2B18  
                                     i2l1864 28A6                                       i2l2593 47FA  
                                     i2l1881 5218                                       i2l2673 5570  
                                     i2l1849 2B04                                       i2l1857 284E  
                                     i2l2594 4808                                       i2l1962 2754  
                                     i2l1882 5226                                       i2l1890 3D26  
                                     i2l1938 2FB8                                       i2l1874 2926  
                                     i2l1866 28B6                                       i2l1858 285A  
                                     i2l1955 37E2                                       i2l1947 3736  
                                     i2l1963 2732                                       i2l1867 28C0  
                                     i2l1859 2862                                       i2l1956 37AA  
                                     i2l1876 2946                                       i2l1868 28E4  
                                     i2l2589 47C6                                       i2l1949 3740  
                                     i2l1965 27C8                                       i2l1869 28F0  
                                     i2l1966 27AE                                       i2l1886 3CA0  
                                     i2l1982 2CDE                                       i2l1974 330A  
                                     i2l1878 2962                                       i2l1991 2CD6  
                                     i2l1983 2BDA                                       i2l1888 3CCA  
                                     i2l1976 337E                                       i2l1985 2BEE  
                                     i2l1986 2C76                                       i2l1995 4140  
                                     i2l1988 2C7E                                       i2l1996 40D0  
                                     i2l1989 2CCE                                       i2l1999 4156  
                                     _TABLAT 000FF5                                       i2l8175 3302  
                                     i2l7803 4EE6                                       i2l7941 3740  
                                     i2l7995 5570                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 25C0                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 4FB4                            _shortPacketStatus 004D  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 43E0                         _moteApp_clearCommand 5878  
                    _moteApp_lightStringSize 5902                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 573E  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 5538  
                   USBTransferOnePacket@data 0061                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 0068                    __size_of_Set_Page_Address 0014  
                    __end_of_TMR1_StartTimer 592C                                 ?_putUSBUSART 0060  
                      ??_clearInterruptPinRX 0001                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 55E6  
                                  ??___fldiv 0095                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0100                         __end_of_getsUSBUSART 3DFC  
                                  ??___lwmod 0064                            _USBEnableEndpoint 5208  
            __size_of_USBStdGetStatusHandler 00A8                          _EUSART_Transmit_ISR 54AA  
                                     _memcpy 5000                             ?_TMR0_Initialize 0001  
                                     _memset 544A                                       clear_0 4306  
                                     clear_1 4312                                       clear_2 431E  
                                     clear_3 432A                                       clear_4 4338  
                                     _parity 015E                              ___awmod@divisor 0062  
                                  ??_delayms 0062                              ___awmod@counter 0064  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                                     _status 0051                      __end_of_DATAEE_ReadByte 57E6  
                                     _strcmp 4FB4                   __end_of_ADC_TempConversion 30F6  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                            _moteApp_delayms 5354                  __size_of_service_pushbutton 006E  
                               __pdataCOMRAM 005D                                 _CDCTxService 25C0  
                               __mediumconst 75EE                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 5928                                 _dataRateRead 0053  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004C  
                  USBapp_Handler@buttonPress 0077                         _USBapp_getrxByteFlag 590E  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 5592                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 0070  
                                 __accesstop 0060                      __end_of__initialization 433E  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5836                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0042  
                              ?_oled_putint8 0077                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 5244                                  ?_InitSwUart 0001  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79B8  
                              __end_of_sd001 79A2                                __end_of_sd002 796E  
                               __pidataBANK0 58FA                                 __pidataBANK1 5938  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 5924  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009E  
                           _DATAEE_WriteByte 51CC                __size_of_USBConfigureEndpoint 0094  
    __end_of_oled_setContrastControlRegister 580E     __size_of_oled_setContrastControlRegister 0014  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 57FA                  __end_of_USBCtrlTrfInHandler 3484  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 3C8A  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F7                            _CDCTxService$6668 0068  
                                 _cdc_notice 01D4                                    ?i2_memset 0001  
                                 _cdc_rx_len 00DE                                   _cdc_tx_len 00DD  
                       _moteApp_getTempValue 5110                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01F7                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01C4                             ?_TMR0_StartTimer 0001  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 55BC                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 40C4                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00BC                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                       __end_of_EUSART_Write 51CC                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0076  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                             ??_oled_setFont 0062                 ??_moteApp_convertSensorValue 0074  
                            _periodicUpValue 00FE                    ??_moteApp_lightStringSize 0060  
                __size_of_EUSART_Receive_ISR 0030                          oled_putString@index 0076  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 00CA                       __size_of_oled_clearRow 0026  
                                 _clearLight 01ED                  __end_of_moteApp_testSensors 3A4A  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 300C  
           __end_of_MOTEapp_setResponseReady 591A                               ??_oled_putint8 0079  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00B0  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0030  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 5386  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A2                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 37EA  
                    _moteApp_addToDataBuffer 4D4C                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 00D3                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 2838                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 31DE                                _eusartRxCount 00F5  
                          _configDescriptor1 78F7                                      i2l11103 383A  
                                    i2l11139 2AD4                                      i2l11167 2B36  
                                    i2l11601 28F8                                      i2l12083 4DD0  
                                    i2l12085 4E00                                    ?___xxtofl 0060  
                                    _RS232cp 00E5                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0060  
                                 ??i2_memset 0007                           __size_of_test_oled 008A  
                       __size_of_moduleSleep 0026                  __end_of_USBCtrlTrfTxService 37EA  
                       __size_of_moteHandler 021A                          _USBStdSetCfgHandler 32C0  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 008A  
             USBapp_LEDUpdateStatus@ledCount 0041                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 007E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 5848                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                         __size_of_reloadTimer 0032  
                           ?_TMR2_StartTimer 0001                 __size_of_USBStdGetDscHandler 012E  
                        __size_of_InitSwUart 001C                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 007A  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 5888  
                              _cdc_trf_state 00EB                         DATAEE_WriteByte@bAdd 0061  
                            _countBitsSilent 004E                      __size_of_USBapp_exitCDC 0006  
                 __end_of_moteRunningProcess 1020                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                   ?_moteApp_add8bToDataBuffer 0066  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 58A2  
         __end_of_MOTEapp_SetDataRateSetting 246C                   _MOTEapp_SetDataRateSetting 230A  
                                    __Hparam 0000                         ?_USBStdSetCfgHandler 0001  
                                  _CDCInitEP 4C86                      ?_MOTEapp_TimerBasedTask 0001  
                                    __Lparam 0000                   __size_of_USBEnableEndpoint 003C  
                USBapp_exitCDCState@usbState 0060                          moteHandler@s2Button 00B9  
                           _Set_Page_Address 580E                         ??_USBCheckStdRequest 001C  
               moteRunningProcess@sleepEvent 00AE                                      ___almod 4016  
                                    ___fladd 1898                            _timerMinTickCount 003F  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 0526  
                                    ___fldiv 1BD6                                      ___lbdiv 5150  
                                    ___awmod 4A02                                      ___flmul 1546  
                           ?_TMR3_StartTimer 0001                                      ___fltol 3564  
                                    ___lldiv 4798                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0028                            ??_USBStallHandler 0001  
                                    ___lwmod 5048                         oled_putint8@negative 0079  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 42B0                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793A  
                                    __ramtop 0800                                      _delayms 5322  
                          hexToStr@character 0060                                      __ptext0 2CF6  
                                    __ptext1 4990                                      __ptext2 38B8  
                                    __ptext3 4472                                      __ptext4 4CEC  
                                    __ptext5 4BB8                                      __ptext6 30F6  
                                    __ptext7 5322                                      __ptext8 3984  
                                    __ptext9 20F0                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 0043  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 5908  
                            __size_of_strcmp 004C                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countRX 004F  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 57BA  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 565C                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 002E              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 575A                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 58F2  
                               _LastRS232Out 00E6                              i2_USBDeviceInit 2A9A  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 541A  
                                    _rx_data 0050                 __end_of_MOTEapp_handlerState 58E2  
                     ??_USBapp_getrxByteFlag 0060                           __end_of_USB_CD_Ptr 75F7  
                 moteRunningProcess@readByte 00B0                   __size_of_SYSTEM_Initialize 002A  
            __size_of_USBCtrlTrfSetupHandler 0084                                   ??_hexToStr 0060  
                                    _strncmp 4586                         end_of_initialization 433E  
                               _getsUSBUSART 3D44                sendDataCommand@byteCount_1627 0068  
                         __end_of_USB_SD_Ptr 75F5                                      memcpy@d 0066  
                                    memcpy@n 0064                                      memcpy@s 0068  
                        _pBDTEntryEP0OutNext 0035                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
                              __Lmediumconst 75EE              _dummy_encapsulated_cmd_response 01DE  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1035_40 2966  
                   ?_USBStdFeatureReqHandler 0001                                    i2u1070_48 00BA  
                                  i2u1069_40 00B8               __end_of_MOTEapp_TimerBasedTask 56E6  
                          _EUSART_Initialize 527E                            _oled_powerControl 5858  
                                 _rxByteFlag 00E9                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00CC  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 4D4C                            __end_of_test_oled 44FC  
             moteJoiningProcess@changeStates 0077                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 44FC  
                         __end_of_USBSuspend 55E6               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 4212                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006D                           test_switch@timeout 0078  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                  ??_moteApp_addToDataBuffer 0075               moteApp_setLightString@stingPos 006D  
                       __end_of_oled_devInit 489A                     _USBCtrlEPServiceComplete 2F1A  
                    moteApp_toggleLeds@state 0064                                   _responseId 0130  
                                 _retryCount 0163                             ?_moteApp_delayms 0060  
                              _randomPortNum 00F1                     _MOTEapp_setResponseReady 5914  
                                    strcmp@r 0065                   _USBStatusStageEnabledFlag1 0046  
                 _USBStatusStageEnabledFlag2 0045                                _dataRateValue 00FC  
                        _USBapp_handlerState 58CE                          ??_EUSART_Initialize 0060  
                        ??_oled_powerControl 0061                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                                  _PORTCbits 000F82                      oled_putUint8@start_page 0078  
                             ?_oled_clearRow 0001                                   _test_comms 4BB8  
                     ??_moteApp_getTempValue 0065                         __end_of_oled_setFont 57FA  
                                ___fladd@grs 0073                           _Set_Column_Address 5722  
                       __end_of_oled_putChar 4798                                ___xxtofl@sign 0068  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISEbits 000F96  
                          ??_oled_displayOff 0061                        __size_of_EUSART_Write 003E  
                       __end_of_oled_putint8 4212                           _BothEP0OutUOWNsSet 0049  
           __size_of_moteApp_setSensorsInput 0078                                ?_test_powerup 0001  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 5208  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 58BA                                    _USTATcopy 0059  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 300C                     oled_putString@start_page 0075  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 4918                   _moteApp_convertSensorValue 489A  
                  __end_of_EUSART_Initialize 52B6                    __end_of_oled_powerControl 5868  
                    oled_putint8@station_dot 0077                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 3C8A                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 5934  
                             ?_oled_putUint8 0077                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                               ??_InitSwUart 0060                        _moteApp_getLightValue 4F66  
                     _USBCtrlTrfSetupHandler 4692                         ??_Set_Column_Address 0061  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 4692  
                      __end_of_USBDeviceInit 2A9A                               _TMRapp_Handler 2E0E  
                             _USBapp_Handler 3EB2                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 560E  
                              __pidataCOMRAM 593B                                 _EUSART_Write 518E  
                      sendDataCommand@string 0061                            __size_of_TMR0_ISR 000C  
                    __end_ofi2_USBDeviceInit 2BC8                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 4AE2                            __size_of_TMR3_ISR 001E  
                             _ADC_Initialize 5774                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 5048                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 547A                            _USBBusIsSuspended 015B  
                   oled_writeCommand@command 0060                               __end_of_strcmp 5000  
                                ?_oled_clear 0001                          start_initialization 42B0  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0010                     __size_of_TMR0_Initialize 001E  
            __size_of_PIN_MANAGER_Initialize 0054                            ??_oled_setDisplay 0061  
                              ??_EUSART_Read 0060                       __end_of_TMR2_ReadTimer 58C4  
            __end_of_moteApp_addToDataBuffer 4DAA                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 52EE  
                          __size_ofi2_memset 002C                                    _OledFont0 75F7  
               __end_of_USBConfigureEndpoint 43E0              __end_of_USBStdFeatureReqHandler 20F0  
                   __size_of_sendDataCommand 00BE                           __end_of_InitSwUart 575A  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 3B0E                                _periodicState 00FA  
                             _USBapp_exitCDC 5908                     __end_of_USBCtrlEPService 38B8  
       __end_of_USART_mySetLineCodingHandler 4EBC        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 4E62                   __end_of_EUSART_FlushBuffer 50CE  
                        DATAEE_ReadByte@bAdd 0060                __size_of_USBapp_setrxByteFlag 0008  
                              _moteModeState 0054                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0037  
                   __size_of_TMR1_Initialize 0032                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 3F66  
                     __end_of_TMRapp_Handler 2F1A               __end_ofi2_USBTransferOnePacket 3D44  
                       _TMRapp_ClearBitFlags 58EA                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 006A                          _USBStdGetDscHandler 2BC8  
                       _MOTEapp_handlerState 58D8                       __end_of_ADC_Initialize 578E  
                                __pdataBANK0 00F9                                  __pdataBANK1 01FA  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 0164                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0074  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                             _InterruptPinRX 5538                       _USBActiveConfiguration 005A  
             __end_of_USBStdGetStatusHandler 416C                                    ___fldiv@a 0091  
                                  ___fldiv@b 008D                  __end_of_EUSART_Transmit_ISR 54DA  
                                  ___flmul@a 0078                                    ___flmul@b 0074  
                                __pbssCOMRAM 0033                   service_pushbutton@PB_Timer 014A  
                              __pcstackBANK0 0060                 __size_of_USBCtrlTrfInHandler 00E2  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 5822  
                          __size_of___xxtofl 0154                              ?_TMR2_ReadTimer 0001  
                                _activeState 00F4                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 590E           __size_of_MOTEapp_getModuleResponse 0066  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 550A               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 58C4  
                 __end_of_USBWakeFromSuspend 54AA                   __size_of_EUSART_Initialize 0038  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 002E  
                            _USBStallHandler 50CE                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 527E                   __end_of_USBCheckCDCRequest 4016  
                            ??_oled_putUint8 0079                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0120                  ??_moteApp_add8bToDataBuffer 0067  
                          _oled_writeCommand 57A4                        __size_of_oled_devInit 0080  
                    oled_putChar@station_dot 0062                  ?_MOTEapp_SetDataRateSetting 0001  
                     _PIN_MANAGER_Initialize 4F12                       ?_moteApp_getLightValue 006E  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 0162                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 0060              __size_of_oled_initialDispayLine 0010  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 75EE                                     ?___almod 0060  
                                   ?___fladd 0060                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 008D                                    __ptext100 573E  
                                  __ptext101 527E                                     ?___lbdiv 0060  
                                  __ptext110 547A                                    __ptext102 5836  
                                  __ptext111 55BC                                    __ptext103 5774  
                                  __ptext120 40C4                                    __ptext112 50CE  
                                  __ptext104 58D8                                    __ptext121 2BC8  
                                  __ptext113 37EA                                    __ptext105 57D0  
                                  __ptext130 4E06                                    __ptext122 1E8C  
                                  __ptext114 4692                                    __ptext131 2704  
                                  __ptext123 4DAA                                    __ptext115 2F1A  
                                  __ptext107 58F2                                    __ptext140 58A2  
                                  __ptext132 3A4A                                    __ptext124 4EBC  
                                  __ptext116 4212                                    __ptext108 2838  
                                  __ptext141 58AE                                    __ptext133 33A2  
                                  __ptext125 4C86                                    __ptext117 31DE  
                                  __ptext109 2A9A                                    __ptext142 5538  
                                  __ptext134 3716                                    __ptext126 3C8A  
                                  __ptext118 32C0                                    __ptext143 53B8  
                                  __ptext135 4E62                                    __ptext127 5208  
                                  __ptext119 5566                                    __ptext144 5930  
                                  __ptext136 52B6                                    __ptext128 434C  
                                  __ptext145 54AA                                    __ptext137 4798  
                                  __ptext129 3F66                                    __ptext146 54DA  
                                  __ptext138 591A                                    __ptext147 5934  
                                  __ptext139 5704                                    __ptext148 0000  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 31DE  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00E0                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E3  
                               _eusartRxTail 00DF                 __size_of_moteApp_testSensors 00C6  
                               _eusartTxTail 00E2                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0082                       __end_of_InterruptPinRX 5566  
                         _moteRunningProcess 011E                            _moduleBufferIndex 00F2  
                                   ?_delayms 0060                                    _buffer_rx 0300  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BB  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00A6  
                    _eusartTxBufferRemaining 00E1                         _USBTransferOnePacket 3BCC  
                                  _mainState 0056                     __size_of_TMR1_StartTimer 0004  
                              ??_reloadTimer 0001                      _moteApp_setSensorsInput 4918  
                     moteHandler@buttonPress 00BA                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 4E62                                    _minTicker 0161  
                   reloadTimer@setTimerValue 0001                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 5934                       _moteApp_setLightString 4B4E  
                                _ep_data_out 00D0                 __size_of_USBCtrlTrfRxService 0134  
                                  _secTicker 00F0                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 0060                          oled_putint8@numData 007A  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 481A  
         __end_of_oled_regulorResistorSelect 5858                   _oled_regulorResistorSelect 5848  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 0072  
                          _dataRateSelection 01FC                             _timerMsTickCount 00D8  
                                  _oled_init 53EA                 __size_of_USBCtrlTrfTxService 00D4  
                          ??_TMR0_Initialize 0060            __end_of_MOTEapp_getModuleResponse 4C86  
                             _eusartTxBuffer 0240                               ___wmul@product 0064  
                                   _IOCBbits 000F86                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 57BA  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 0068  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 57E6  
                                  _moteState 00FF                            ??_sendDataCommand 0066  
                              _operationType 00F7                        __size_of_moduleResync 0084  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1546  
        __size_of_INTERRUPT_InterruptManager 0112                                 _oled_putChar 4716  
                                   i2u600_40 3336                                     _PIR1bits 000F9E  
                                   _PIR2bits 000FA1                __size_of_moteApp_clearBuffers 0092  
                                   i2u604_40 2C40                __size_of_moteApp_clearCommand 0010  
                                   i2u604_47 2C36                                     i2u605_40 2C70  
                                   _PIR3bits 000FA4                                     i2u605_47 2C66  
                                   i2u607_40 2CC2                                     i2u607_47 2CB8  
                                   i2u563_40 4F06                                     i2u581_40 47CA  
                                   i2u629_40 205E                                     i2u576_40 3792  
                  USBCtrlEPService@setup_cnt 001E                                     i2u576_47 3788  
                                   i2u664_48 2814                                     i2u664_49 2828  
                                   i2u578_40 37D2                                     i2u578_47 37C8  
                                   i2u846_48 3466                                     i2u846_49 347A  
                                   i2u981_40 2B9A                                     i2u975_40 3888  
                                   _RCONbits 000FD0                         __end_of_test_powerup 4A02  
                               _oled_putint8 416C                                     i2u978_40 2AF8  
                              ??_putUSBUSART 0063                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 0044                                     _SSP1CON1 000FC6  
                                   _TMR0_ISR 58AE                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 58A2                      __size_of_oled_putString 006C  
                                   _TMR3_ISR 5704                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 58E2  
                                  _test_leds 4CEC                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 434C  
                                  _test_oled 4472                        ??_USBapp_exitCDCState 0060  
                            ?_InterruptPinRX 0001             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                            ___wmul@multiplier 0060  
                      ?_USBTransferOnePacket 0060          moteRunningProcess@sizeOfUpdate_1497 00B2  
                     ADC_TempConversion@temp 00A7                       oled_putint8@start_page 0078  
                  _moteApp_add8bToDataBuffer 3DFC                      __size_of_oled_writeData 0016  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 00B8                                 _RemoteWakeup 004B  
                        __end_of_sendCommand 544A                                     i2_memset 5566  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 5868  
                      DATAEE_WriteByte@bData 0060                           _RS232_Out_Data_Rdy 00E7  
          moteApp_setLightString@lightString 006B                      __end_of_USBStallHandler 5110  
                        __end_of_moduleSleep 565C                          __end_of_moteHandler 230A  
                                _EUSART_Read 5244                            _moteApp_GoToSleep 3642  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
                                  copy_data0 42E2                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                                 _moduleResync 460E  
                __end_of_USBStdSetCfgHandler 33A2                            ?_DATAEE_WriteByte 0060  
              __size_of_USBapp_getrxByteFlag 0006                          __end_of_reloadTimer 53EA  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0077  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0072  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 79B4                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                  memcpy@tmp 006A                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 0064                       ??_MOTEapp_handlerState 0060  
                         __CFG_BOREN$SBORDIS 000000                                     _SetupPkt 000430  
                    ??_OSCILLATOR_Initialize 0060                        ?_USBConfigureEndpoint 0001  
                          ??_TMR0_StartTimer 0060                             __size_of___almod 00AE  
                           __size_of___fladd 033E                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 02B6  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007A                                 _selectedFont 01FA  
                           __size_of___lldiv 0082                              _oled_setDisplay 560E  
           moteApp_clearBuffers@counter_1714 0061             moteApp_clearBuffers@counter_1715 0062  
           moteApp_clearBuffers@counter_1716 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 56A4  
                                _line_coding 01E6                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 0052  
                               ??_oled_clear 006E                                     ___xxtofl 246C  
                                _menuTimeout 00FB                     __size_of_moteApp_delayms 0032  
                  __end_of_moteApp_GoToSleep 3716                __size_of_moteApp_getTempValue 0040  
                    __size_of_USBDeviceTasks 0132                                     _appTimer 00F8  
                                   _appState 0055                                     __ptext10 011E  
                                   __ptext11 3B0E                                     __ptext20 5000  
                                   __ptext12 550A                                     __ptext21 5896  
                                   __ptext13 416C                                   _T1GCONbits 000FCC  
                                   __ptext30 53EA                                     __ptext22 489A  
                                   __ptext14 44FC                                     __ptext31 57E6  
                                   __ptext23 55E6                                     __ptext15 4918  
                                   __ptext40 460E                                     __ptext32 560E  
                                   __ptext24 43E0                                     __ptext16 5902  
                                   __ptext41 4C20                                     __ptext33 481A  
                                   __ptext25 4D4C                                     __ptext17 5110  
                                   __ptext50 1898                                     __ptext42 508C  
                                   __ptext34 57FA                                     __ptext26 3DFC  
                                   __ptext18 4F66                                     __ptext51 1020  
                                   __ptext43 58BA                                     __ptext35 5848  
                                   __ptext27 5150                                     __ptext19 4B4E  
                                   __ptext60 4016                                     __ptext52 4586  
                                   __ptext44 230A                                     __ptext36 5858  
                                   __ptext28 4A02                                     __ptext61 58EA  
                                   __ptext53 4FB4                                     __ptext45 300C  
                                   __ptext37 5868                                     __ptext29 3642  
                                   __ptext70 575A                                     __ptext62 56C6  
                                   __ptext54 5354                                     __ptext46 246C  
                                   __ptext38 58E2                                     __ptext71 565C  
                                   __ptext63 5878                                     __ptext55 51CC  
                                   __ptext47 3564                                     __ptext39 5636  
                                   __ptext80 590E                                     __ptext72 4716  
                                   __ptext64 541A                                     __ptext56 58C4  
                                   __ptext48 1546                                     __ptext81 5914  
                                   __ptext73 578E                                     __ptext65 5888  
                                   __ptext57 5908                                     __ptext49 1BD6  
                                   __ptext90 56A4                                     __ptext82 518E  
                                   __ptext74 580E                                     __ptext66 58CE  
                                   __ptext58 2E0E                                     __ptext91 5920  
                                   __ptext83 5244                                     __ptext75 5722  
                                   __ptext67 3EB2                                     __ptext59 5048  
                                   __ptext92 5822                                     __ptext84 25C0  
                                   __ptext76 57A4                                     __ptext68 4A74  
                                   __ptext93 5924                                     __ptext85 3BCC  
                                   __ptext77 3484                                     __ptext69 4AE2  
                                   __ptext94 5386                                     __ptext86 296A  
                                   __ptext78 5682                                     __ptext95 5928  
                                   __ptext87 544A                                     __ptext79 3D44  
                                   __ptext96 56E6                                     __ptext88 52EE  
                                   __ptext97 592C                                     __ptext89 5592  
                                   __ptext98 4F12                                     __ptext99 57BA  
       __end_of_USBapp_CdcEmulatorInitialize 4F12        __size_of_USBapp_CdcEmulatorInitialize 0056  
               _USBapp_CdcEmulatorInitialize 4EBC                                 _SSP1CON1bits 000FC6  
                                   _dotCount 0160                                     _hexToStr 550A  
                         _service_pushbutton 4A74                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 0088               __end_of_USBCtrlTrfSetupHandler 4716  
                              __size_of_main 0118                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0016                               _Contrast_level 005D  
                                   _rnModule 00EE                           oled_putint8@number 0080  
                                 strncmp@len 0064                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 0060                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 0072                      __end_of_oled_displayOff 58EA  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 33A2                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 015F                           __end_of_oled_clear 5774  
                        __end_of_test_switch 3984                                     _outPipes 00BC  
                       _USBCtrlTrfOutHandler 4E06                                     int$flags 005E  
                                   _usbState 00EA                    _USBCtrlEPAllowStatusStage 3A4A  
               __size_of_clearInterruptPinRX 0004                  __size_of_Set_Column_Address 001C  
                          ??_TMR2_StartTimer 0060           __end_of_INTERRUPT_InterruptManager 011A  
                 _INTERRUPT_InterruptManager 0008               moteRunningProcess@sizeOfUpdate 00B1  
                               _SSP1STATbits 000FC7                                  _sendCommand 541A  
                     ??_USBTransferOnePacket 0064                           oled_clearRow@index 006D  
                         _EUSART_FlushBuffer 508C                                 ??_test_comms 0077  
               __end_of_USBapp_setrxByteFlag 58FA                                  _moduleSleep 5636  
                                _moteHandler 20F0                             ??_TMR2_ReadTimer 0060  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0047  
                   CDCTxService@byte_to_send 006B                                   _INTCONbits 000FF2  
                __end_of_USBapp_handlerState 58D8                         ?_USBCtrlTrfInHandler 0001  
                        ?_EUSART_FlushBuffer 0001                                     memcpy@d1 0060  
                __size_of_ADC_TempConversion 00EA                                  _reloadTimer 53B8  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 01A4  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 3984  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0130  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4E06  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 4DAA  
             moteJoiningProcess@messageReady 007C              __end_of_moteApp_setSensorsInput 4990  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0077                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 00B7  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 4C20                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 5636                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00EF                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 4AE2  
                                _putUSBUSART 5682                           _EUSART_Receive_ISR 54DA  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 2704                           _USBWakeFromSuspend 547A  
                                ??_test_leds 0077                                _powerOnStatus 00F6  
                                ??_test_oled 0077                      _USBStdFeatureReqHandler 1E8C  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3564  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 3484  
                         _USBCheckCDCRequest 3F66                          _USBCtrlTrfTxService 3716  
                        __end_of_TMRapp_Tick 5920                        __end_of_oled_clearRow 5682  
                                _temperature 00DA                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 578E                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006B                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                            _TMR0_Initialize 56E6                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 0057                              ___lwmod@counter 0064  
                        ?_USBCheckCDCRequest 0001                   __size_of_moteApp_GoToSleep 00D4  
                  i2USBTransferOnePacket@dir 0001                           _moteApp_toggleLeds 30F6  
                  i2USBTransferOnePacket@len 0004                          USBEnableEndpoint@ep 000C  
                            _endpoint_number 004A                                   _WDTCONbits 000FD1  
                               _test_powerup 4990                              _sendDataCommand 3B0E  
                       ?_USBCtrlTrfRxService 0001                                ___fladd@signs 0070  
                              ?_getsUSBUSART 0067                     oled_putUint8@station_dot 0077  
                         __CFG_FOSC$INTOSCIO 000000                           EUSART_Write@txData 0060  
               __size_of_EUSART_Transmit_ISR 0030               __end_of_PIN_MANAGER_Initialize 4F66  
                   ?_USBCtrlEPAllowDataStage 0001           __size_of_moteApp_add8bToDataBuffer 00B6  
                               ___almod@sign 0069                         ?_USBCtrlTrfTxService 0001  
                          ??_moteApp_delayms 0062              __size_of_moteApp_getLightString 000C  
                ?_oled_regulorResistorSelect 0001                          ?_moteApp_toggleLeds 0001  
                               ___fladd@aexp 0071                                 ___fladd@bexp 0072  
               _USBStatusStageTimeoutCounter 0048                                  _test_switch 38B8  
                       ??_EUSART_Receive_ISR 0001                         ??_USBWakeFromSuspend 0016  
                 USBTransferOnePacket@handle 0065                         __end_of_CDCTxService 2704  
                            _TMR1_Initialize 5386            moteJoiningProcess@joiningComplete 007B  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 4586  
                     __end_of_oled_putString 4B4E                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 75F5                             ??_InterruptPinRX 0002  
