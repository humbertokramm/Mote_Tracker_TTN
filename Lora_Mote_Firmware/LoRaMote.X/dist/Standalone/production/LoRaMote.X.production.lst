

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 18:15:55 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   186                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   187                           	dabs	1,0x400,48,_BDT
   188                           	dabs	1,0x500,64,_cdc_data_tx
   189                           	dabs	1,0x438,8,_CtrlTrfData
   190                           	dabs	1,0x430,8,_SetupPkt
   191                           	dabs	1,0x540,64,_cdc_data_rx
   192  0000                     
   193                           ; Version 1.45
   194                           ; Generated 16/11/2017 GMT
   195                           ; 
   196                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   197                           ; All rights reserved.
   198                           ; 
   199                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   200                           ; 
   201                           ; Redistribution and use in source and binary forms, with or without modification, are
   202                           ; permitted provided that the following conditions are met:
   203                           ; 
   204                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   205                           ;        conditions and the following disclaimer.
   206                           ; 
   207                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   208                           ;        of conditions and the following disclaimer in the documentation and/or other
   209                           ;        materials provided with the distribution.
   210                           ; 
   211                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   212                           ;        software without specific prior written permission.
   213                           ; 
   214                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   215                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   216                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   217                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   218                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   219                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   220                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   221                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   222                           ; 
   223                           ; 
   224                           ; Code-generator required, PIC18LF45K50 Definitions
   225                           ; 
   226                           ; SFR Addresses
   227  0000                     
   228                           	psect	idataCOMRAM
   229  005C9B                     __pidataCOMRAM:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _Contrast_level
   233  005C9B  13                 	db	19
   234                           
   235                           	psect	idataBANK0
   236  005C4E                     __pidataBANK0:
   237                           	opt stack 0
   238                           
   239                           ;initializer for _exitUSB
   240  005C4E  01                 	db	1
   241                           
   242                           ;initializer for _periodicState
   243  005C4F  03                 	db	3
   244                           
   245                           ;initializer for _menuTimeout
   246  005C50  01                 	db	1
   247                           
   248                           ;initializer for _dataRateValue
   249  005C51  02                 	db	2
   250                           
   251                           ;initializer for _periodicTimerValue
   252  005C52  03                 	db	3
   253                           
   254                           ;initializer for _periodicUpValue
   255  005C53  03                 	db	3
   256                           
   257                           ;initializer for _moteState
   258  005C54  01                 	db	1
   259                           
   260                           	psect	idataBANK1
   261  005C98                     __pidataBANK1:
   262                           	opt stack 0
   263                           
   264                           ;initializer for _selectedFont
   265  005C98  F7                 	db	low _OledFont0
   266  005C99  75                 	db	high _OledFont0
   267                           
   268                           ;initializer for _dataRateSelection
   269  005C9A  02                 	db	2
   270                           
   271                           	psect	mediumconst
   272  0075EE                     __pmediumconst:
   273                           	opt stack 0
   274  0075EE  00                 	db	0
   275  0075EF                     _USB_SD_Ptr:
   276                           	opt stack 0
   277  0075EF  B4                 	db	low _sd000
   278  0075F0  79                 	db	high _sd000
   279  0075F1  6E                 	db	low _sd001
   280  0075F2  79                 	db	high _sd001
   281  0075F3  3A                 	db	low _sd002
   282  0075F4  79                 	db	high _sd002
   283  0075F5                     __end_of_USB_SD_Ptr:
   284                           	opt stack 0
   285  0075F5                     _USB_CD_Ptr:
   286                           	opt stack 0
   287  0075F5  F7                 	db	low _configDescriptor1
   288  0075F6  78                 	db	high _configDescriptor1
   289  0075F7                     __end_of_USB_CD_Ptr:
   290                           	opt stack 0
   291  0075F7                     _OledFont0:
   292                           	opt stack 0
   293  0075F7  00                 	db	0
   294  0075F8  00                 	db	0
   295  0075F9  00                 	db	0
   296  0075FA  00                 	db	0
   297  0075FB  00                 	db	0
   298  0075FC  00                 	db	0
   299  0075FD  00                 	db	0
   300  0075FE  00                 	db	0
   301  0075FF  00                 	db	0
   302  007600  00                 	db	0
   303  007601  00                 	db	0
   304  007602  5F                 	db	95
   305  007603  00                 	db	0
   306  007604  00                 	db	0
   307  007605  00                 	db	0
   308  007606  00                 	db	0
   309  007607  00                 	db	0
   310  007608  00                 	db	0
   311  007609  03                 	db	3
   312  00760A  00                 	db	0
   313  00760B  03                 	db	3
   314  00760C  00                 	db	0
   315  00760D  00                 	db	0
   316  00760E  00                 	db	0
   317  00760F  64                 	db	100
   318  007610  3C                 	db	60
   319  007611  26                 	db	38
   320  007612  64                 	db	100
   321  007613  3C                 	db	60
   322  007614  26                 	db	38
   323  007615  24                 	db	36
   324  007616  00                 	db	0
   325  007617  26                 	db	38
   326  007618  49                 	db	73
   327  007619  49                 	db	73
   328  00761A  7F                 	db	127
   329  00761B  49                 	db	73
   330  00761C  49                 	db	73
   331  00761D  32                 	db	50
   332  00761E  00                 	db	0
   333  00761F  42                 	db	66
   334  007620  25                 	db	37
   335  007621  12                 	db	18
   336  007622  08                 	db	8
   337  007623  24                 	db	36
   338  007624  52                 	db	82
   339  007625  21                 	db	33
   340  007626  00                 	db	0
   341  007627  20                 	db	32
   342  007628  50                 	db	80
   343  007629  4E                 	db	78
   344  00762A  55                 	db	85
   345  00762B  22                 	db	34
   346  00762C  58                 	db	88
   347  00762D  28                 	db	40
   348  00762E  00                 	db	0
   349  00762F  00                 	db	0
   350  007630  00                 	db	0
   351  007631  00                 	db	0
   352  007632  03                 	db	3
   353  007633  00                 	db	0
   354  007634  00                 	db	0
   355  007635  00                 	db	0
   356  007636  00                 	db	0
   357  007637  00                 	db	0
   358  007638  00                 	db	0
   359  007639  1C                 	db	28
   360  00763A  22                 	db	34
   361  00763B  41                 	db	65
   362  00763C  00                 	db	0
   363  00763D  00                 	db	0
   364  00763E  00                 	db	0
   365  00763F  00                 	db	0
   366  007640  00                 	db	0
   367  007641  00                 	db	0
   368  007642  41                 	db	65
   369  007643  22                 	db	34
   370  007644  1C                 	db	28
   371  007645  00                 	db	0
   372  007646  00                 	db	0
   373  007647  00                 	db	0
   374  007648  15                 	db	21
   375  007649  15                 	db	21
   376  00764A  0E                 	db	14
   377  00764B  0E                 	db	14
   378  00764C  15                 	db	21
   379  00764D  15                 	db	21
   380  00764E  00                 	db	0
   381  00764F  00                 	db	0
   382  007650  08                 	db	8
   383  007651  08                 	db	8
   384  007652  3E                 	db	62
   385  007653  08                 	db	8
   386  007654  08                 	db	8
   387  007655  00                 	db	0
   388  007656  00                 	db	0
   389  007657  00                 	db	0
   390  007658  00                 	db	0
   391  007659  00                 	db	0
   392  00765A  50                 	db	80
   393  00765B  30                 	db	48
   394  00765C  00                 	db	0
   395  00765D  00                 	db	0
   396  00765E  00                 	db	0
   397  00765F  00                 	db	0
   398  007660  08                 	db	8
   399  007661  08                 	db	8
   400  007662  08                 	db	8
   401  007663  08                 	db	8
   402  007664  08                 	db	8
   403  007665  00                 	db	0
   404  007666  00                 	db	0
   405  007667  00                 	db	0
   406  007668  00                 	db	0
   407  007669  00                 	db	0
   408  00766A  40                 	db	64
   409  00766B  00                 	db	0
   410  00766C  00                 	db	0
   411  00766D  00                 	db	0
   412  00766E  00                 	db	0
   413  00766F  40                 	db	64
   414  007670  20                 	db	32
   415  007671  10                 	db	16
   416  007672  08                 	db	8
   417  007673  04                 	db	4
   418  007674  02                 	db	2
   419  007675  01                 	db	1
   420  007676  00                 	db	0
   421  007677  00                 	db	0
   422  007678  3E                 	db	62
   423  007679  41                 	db	65
   424  00767A  41                 	db	65
   425  00767B  41                 	db	65
   426  00767C  3E                 	db	62
   427  00767D  00                 	db	0
   428  00767E  00                 	db	0
   429  00767F  00                 	db	0
   430  007680  00                 	db	0
   431  007681  41                 	db	65
   432  007682  7F                 	db	127
   433  007683  40                 	db	64
   434  007684  00                 	db	0
   435  007685  00                 	db	0
   436  007686  00                 	db	0
   437  007687  00                 	db	0
   438  007688  42                 	db	66
   439  007689  61                 	db	97
   440  00768A  51                 	db	81
   441  00768B  49                 	db	73
   442  00768C  6E                 	db	110
   443  00768D  00                 	db	0
   444  00768E  00                 	db	0
   445  00768F  00                 	db	0
   446  007690  22                 	db	34
   447  007691  41                 	db	65
   448  007692  49                 	db	73
   449  007693  49                 	db	73
   450  007694  36                 	db	54
   451  007695  00                 	db	0
   452  007696  00                 	db	0
   453  007697  00                 	db	0
   454  007698  18                 	db	24
   455  007699  14                 	db	20
   456  00769A  12                 	db	18
   457  00769B  7F                 	db	127
   458  00769C  10                 	db	16
   459  00769D  00                 	db	0
   460  00769E  00                 	db	0
   461  00769F  00                 	db	0
   462  0076A0  27                 	db	39
   463  0076A1  49                 	db	73
   464  0076A2  49                 	db	73
   465  0076A3  49                 	db	73
   466  0076A4  71                 	db	113
   467  0076A5  00                 	db	0
   468  0076A6  00                 	db	0
   469  0076A7  00                 	db	0
   470  0076A8  3C                 	db	60
   471  0076A9  4A                 	db	74
   472  0076AA  49                 	db	73
   473  0076AB  48                 	db	72
   474  0076AC  70                 	db	112
   475  0076AD  00                 	db	0
   476  0076AE  00                 	db	0
   477  0076AF  00                 	db	0
   478  0076B0  43                 	db	67
   479  0076B1  21                 	db	33
   480  0076B2  11                 	db	17
   481  0076B3  0D                 	db	13
   482  0076B4  03                 	db	3
   483  0076B5  00                 	db	0
   484  0076B6  00                 	db	0
   485  0076B7  00                 	db	0
   486  0076B8  36                 	db	54
   487  0076B9  49                 	db	73
   488  0076BA  49                 	db	73
   489  0076BB  49                 	db	73
   490  0076BC  36                 	db	54
   491  0076BD  00                 	db	0
   492  0076BE  00                 	db	0
   493  0076BF  00                 	db	0
   494  0076C0  06                 	db	6
   495  0076C1  09                 	db	9
   496  0076C2  49                 	db	73
   497  0076C3  29                 	db	41
   498  0076C4  1E                 	db	30
   499  0076C5  00                 	db	0
   500  0076C6  00                 	db	0
   501  0076C7  00                 	db	0
   502  0076C8  00                 	db	0
   503  0076C9  00                 	db	0
   504  0076CA  12                 	db	18
   505  0076CB  00                 	db	0
   506  0076CC  00                 	db	0
   507  0076CD  00                 	db	0
   508  0076CE  00                 	db	0
   509  0076CF  00                 	db	0
   510  0076D0  00                 	db	0
   511  0076D1  00                 	db	0
   512  0076D2  52                 	db	82
   513  0076D3  30                 	db	48
   514  0076D4  00                 	db	0
   515  0076D5  00                 	db	0
   516  0076D6  00                 	db	0
   517  0076D7  00                 	db	0
   518  0076D8  00                 	db	0
   519  0076D9  08                 	db	8
   520  0076DA  14                 	db	20
   521  0076DB  14                 	db	20
   522  0076DC  22                 	db	34
   523  0076DD  00                 	db	0
   524  0076DE  00                 	db	0
   525  0076DF  00                 	db	0
   526  0076E0  14                 	db	20
   527  0076E1  14                 	db	20
   528  0076E2  14                 	db	20
   529  0076E3  14                 	db	20
   530  0076E4  14                 	db	20
   531  0076E5  14                 	db	20
   532  0076E6  00                 	db	0
   533  0076E7  00                 	db	0
   534  0076E8  00                 	db	0
   535  0076E9  22                 	db	34
   536  0076EA  14                 	db	20
   537  0076EB  14                 	db	20
   538  0076EC  08                 	db	8
   539  0076ED  00                 	db	0
   540  0076EE  00                 	db	0
   541  0076EF  00                 	db	0
   542  0076F0  02                 	db	2
   543  0076F1  01                 	db	1
   544  0076F2  59                 	db	89
   545  0076F3  05                 	db	5
   546  0076F4  02                 	db	2
   547  0076F5  00                 	db	0
   548  0076F6  00                 	db	0
   549  0076F7  3E                 	db	62
   550  0076F8  41                 	db	65
   551  0076F9  5D                 	db	93
   552  0076FA  55                 	db	85
   553  0076FB  4D                 	db	77
   554  0076FC  51                 	db	81
   555  0076FD  2E                 	db	46
   556  0076FE  00                 	db	0
   557  0076FF  40                 	db	64
   558  007700  7C                 	db	124
   559  007701  4A                 	db	74
   560  007702  09                 	db	9
   561  007703  4A                 	db	74
   562  007704  7C                 	db	124
   563  007705  40                 	db	64
   564  007706  00                 	db	0
   565  007707  41                 	db	65
   566  007708  7F                 	db	127
   567  007709  49                 	db	73
   568  00770A  49                 	db	73
   569  00770B  49                 	db	73
   570  00770C  49                 	db	73
   571  00770D  36                 	db	54
   572  00770E  00                 	db	0
   573  00770F  1C                 	db	28
   574  007710  22                 	db	34
   575  007711  41                 	db	65
   576  007712  41                 	db	65
   577  007713  41                 	db	65
   578  007714  41                 	db	65
   579  007715  22                 	db	34
   580  007716  00                 	db	0
   581  007717  41                 	db	65
   582  007718  7F                 	db	127
   583  007719  41                 	db	65
   584  00771A  41                 	db	65
   585  00771B  41                 	db	65
   586  00771C  22                 	db	34
   587  00771D  1C                 	db	28
   588  00771E  00                 	db	0
   589  00771F  41                 	db	65
   590  007720  7F                 	db	127
   591  007721  49                 	db	73
   592  007722  49                 	db	73
   593  007723  5D                 	db	93
   594  007724  41                 	db	65
   595  007725  63                 	db	99
   596  007726  00                 	db	0
   597  007727  41                 	db	65
   598  007728  7F                 	db	127
   599  007729  49                 	db	73
   600  00772A  09                 	db	9
   601  00772B  1D                 	db	29
   602  00772C  01                 	db	1
   603  00772D  03                 	db	3
   604  00772E  00                 	db	0
   605  00772F  1C                 	db	28
   606  007730  22                 	db	34
   607  007731  41                 	db	65
   608  007732  49                 	db	73
   609  007733  49                 	db	73
   610  007734  3A                 	db	58
   611  007735  08                 	db	8
   612  007736  00                 	db	0
   613  007737  41                 	db	65
   614  007738  7F                 	db	127
   615  007739  08                 	db	8
   616  00773A  08                 	db	8
   617  00773B  08                 	db	8
   618  00773C  7F                 	db	127
   619  00773D  41                 	db	65
   620  00773E  00                 	db	0
   621  00773F  00                 	db	0
   622  007740  41                 	db	65
   623  007741  41                 	db	65
   624  007742  7F                 	db	127
   625  007743  41                 	db	65
   626  007744  41                 	db	65
   627  007745  00                 	db	0
   628  007746  00                 	db	0
   629  007747  30                 	db	48
   630  007748  40                 	db	64
   631  007749  41                 	db	65
   632  00774A  41                 	db	65
   633  00774B  3F                 	db	63
   634  00774C  01                 	db	1
   635  00774D  01                 	db	1
   636  00774E  00                 	db	0
   637  00774F  41                 	db	65
   638  007750  7F                 	db	127
   639  007751  08                 	db	8
   640  007752  0C                 	db	12
   641  007753  12                 	db	18
   642  007754  61                 	db	97
   643  007755  41                 	db	65
   644  007756  00                 	db	0
   645  007757  41                 	db	65
   646  007758  7F                 	db	127
   647  007759  41                 	db	65
   648  00775A  40                 	db	64
   649  00775B  40                 	db	64
   650  00775C  40                 	db	64
   651  00775D  60                 	db	96
   652  00775E  00                 	db	0
   653  00775F  41                 	db	65
   654  007760  7F                 	db	127
   655  007761  42                 	db	66
   656  007762  0C                 	db	12
   657  007763  42                 	db	66
   658  007764  7F                 	db	127
   659  007765  41                 	db	65
   660  007766  00                 	db	0
   661  007767  41                 	db	65
   662  007768  7F                 	db	127
   663  007769  42                 	db	66
   664  00776A  0C                 	db	12
   665  00776B  11                 	db	17
   666  00776C  7F                 	db	127
   667  00776D  01                 	db	1
   668  00776E  00                 	db	0
   669  00776F  1C                 	db	28
   670  007770  22                 	db	34
   671  007771  41                 	db	65
   672  007772  41                 	db	65
   673  007773  41                 	db	65
   674  007774  22                 	db	34
   675  007775  1C                 	db	28
   676  007776  00                 	db	0
   677  007777  41                 	db	65
   678  007778  7F                 	db	127
   679  007779  49                 	db	73
   680  00777A  09                 	db	9
   681  00777B  09                 	db	9
   682  00777C  09                 	db	9
   683  00777D  06                 	db	6
   684  00777E  00                 	db	0
   685  00777F  0C                 	db	12
   686  007780  12                 	db	18
   687  007781  21                 	db	33
   688  007782  21                 	db	33
   689  007783  61                 	db	97
   690  007784  52                 	db	82
   691  007785  4C                 	db	76
   692  007786  00                 	db	0
   693  007787  41                 	db	65
   694  007788  7F                 	db	127
   695  007789  09                 	db	9
   696  00778A  09                 	db	9
   697  00778B  19                 	db	25
   698  00778C  69                 	db	105
   699  00778D  46                 	db	70
   700  00778E  00                 	db	0
   701  00778F  66                 	db	102
   702  007790  49                 	db	73
   703  007791  49                 	db	73
   704  007792  49                 	db	73
   705  007793  49                 	db	73
   706  007794  49                 	db	73
   707  007795  33                 	db	51
   708  007796  00                 	db	0
   709  007797  03                 	db	3
   710  007798  01                 	db	1
   711  007799  41                 	db	65
   712  00779A  7F                 	db	127
   713  00779B  41                 	db	65
   714  00779C  01                 	db	1
   715  00779D  03                 	db	3
   716  00779E  00                 	db	0
   717  00779F  01                 	db	1
   718  0077A0  3F                 	db	63
   719  0077A1  41                 	db	65
   720  0077A2  40                 	db	64
   721  0077A3  41                 	db	65
   722  0077A4  3F                 	db	63
   723  0077A5  01                 	db	1
   724  0077A6  00                 	db	0
   725  0077A7  01                 	db	1
   726  0077A8  0F                 	db	15
   727  0077A9  31                 	db	49
   728  0077AA  40                 	db	64
   729  0077AB  31                 	db	49
   730  0077AC  0F                 	db	15
   731  0077AD  01                 	db	1
   732  0077AE  00                 	db	0
   733  0077AF  01                 	db	1
   734  0077B0  1F                 	db	31
   735  0077B1  61                 	db	97
   736  0077B2  14                 	db	20
   737  0077B3  61                 	db	97
   738  0077B4  1F                 	db	31
   739  0077B5  01                 	db	1
   740  0077B6  00                 	db	0
   741  0077B7  41                 	db	65
   742  0077B8  41                 	db	65
   743  0077B9  36                 	db	54
   744  0077BA  08                 	db	8
   745  0077BB  36                 	db	54
   746  0077BC  41                 	db	65
   747  0077BD  41                 	db	65
   748  0077BE  00                 	db	0
   749  0077BF  01                 	db	1
   750  0077C0  03                 	db	3
   751  0077C1  44                 	db	68
   752  0077C2  78                 	db	120
   753  0077C3  44                 	db	68
   754  0077C4  03                 	db	3
   755  0077C5  01                 	db	1
   756  0077C6  00                 	db	0
   757  0077C7  43                 	db	67
   758  0077C8  61                 	db	97
   759  0077C9  51                 	db	81
   760  0077CA  49                 	db	73
   761  0077CB  45                 	db	69
   762  0077CC  43                 	db	67
   763  0077CD  61                 	db	97
   764  0077CE  00                 	db	0
   765  0077CF  00                 	db	0
   766  0077D0  00                 	db	0
   767  0077D1  7F                 	db	127
   768  0077D2  41                 	db	65
   769  0077D3  41                 	db	65
   770  0077D4  00                 	db	0
   771  0077D5  00                 	db	0
   772  0077D6  00                 	db	0
   773  0077D7  01                 	db	1
   774  0077D8  02                 	db	2
   775  0077D9  04                 	db	4
   776  0077DA  08                 	db	8
   777  0077DB  10                 	db	16
   778  0077DC  20                 	db	32
   779  0077DD  40                 	db	64
   780  0077DE  00                 	db	0
   781  0077DF  00                 	db	0
   782  0077E0  00                 	db	0
   783  0077E1  41                 	db	65
   784  0077E2  41                 	db	65
   785  0077E3  7F                 	db	127
   786  0077E4  00                 	db	0
   787  0077E5  00                 	db	0
   788  0077E6  00                 	db	0
   789  0077E7  00                 	db	0
   790  0077E8  04                 	db	4
   791  0077E9  02                 	db	2
   792  0077EA  01                 	db	1
   793  0077EB  01                 	db	1
   794  0077EC  02                 	db	2
   795  0077ED  04                 	db	4
   796  0077EE  00                 	db	0
   797  0077EF  00                 	db	0
   798  0077F0  40                 	db	64
   799  0077F1  40                 	db	64
   800  0077F2  40                 	db	64
   801  0077F3  40                 	db	64
   802  0077F4  40                 	db	64
   803  0077F5  40                 	db	64
   804  0077F6  00                 	db	0
   805  0077F7  00                 	db	0
   806  0077F8  01                 	db	1
   807  0077F9  02                 	db	2
   808  0077FA  00                 	db	0
   809  0077FB  00                 	db	0
   810  0077FC  00                 	db	0
   811  0077FD  00                 	db	0
   812  0077FE  00                 	db	0
   813  0077FF  00                 	db	0
   814  007800  34                 	db	52
   815  007801  4A                 	db	74
   816  007802  4A                 	db	74
   817  007803  4A                 	db	74
   818  007804  3C                 	db	60
   819  007805  40                 	db	64
   820  007806  00                 	db	0
   821  007807  00                 	db	0
   822  007808  41                 	db	65
   823  007809  3F                 	db	63
   824  00780A  48                 	db	72
   825  00780B  48                 	db	72
   826  00780C  48                 	db	72
   827  00780D  30                 	db	48
   828  00780E  00                 	db	0
   829  00780F  00                 	db	0
   830  007810  3C                 	db	60
   831  007811  42                 	db	66
   832  007812  42                 	db	66
   833  007813  42                 	db	66
   834  007814  24                 	db	36
   835  007815  00                 	db	0
   836  007816  00                 	db	0
   837  007817  00                 	db	0
   838  007818  30                 	db	48
   839  007819  48                 	db	72
   840  00781A  48                 	db	72
   841  00781B  49                 	db	73
   842  00781C  3F                 	db	63
   843  00781D  40                 	db	64
   844  00781E  00                 	db	0
   845  00781F  00                 	db	0
   846  007820  3C                 	db	60
   847  007821  4A                 	db	74
   848  007822  4A                 	db	74
   849  007823  4A                 	db	74
   850  007824  2C                 	db	44
   851  007825  00                 	db	0
   852  007826  00                 	db	0
   853  007827  00                 	db	0
   854  007828  00                 	db	0
   855  007829  48                 	db	72
   856  00782A  7E                 	db	126
   857  00782B  49                 	db	73
   858  00782C  09                 	db	9
   859  00782D  00                 	db	0
   860  00782E  00                 	db	0
   861  00782F  00                 	db	0
   862  007830  26                 	db	38
   863  007831  49                 	db	73
   864  007832  49                 	db	73
   865  007833  49                 	db	73
   866  007834  3F                 	db	63
   867  007835  01                 	db	1
   868  007836  00                 	db	0
   869  007837  41                 	db	65
   870  007838  7F                 	db	127
   871  007839  48                 	db	72
   872  00783A  04                 	db	4
   873  00783B  44                 	db	68
   874  00783C  78                 	db	120
   875  00783D  40                 	db	64
   876  00783E  00                 	db	0
   877  00783F  00                 	db	0
   878  007840  00                 	db	0
   879  007841  44                 	db	68
   880  007842  7D                 	db	125
   881  007843  40                 	db	64
   882  007844  00                 	db	0
   883  007845  00                 	db	0
   884  007846  00                 	db	0
   885  007847  00                 	db	0
   886  007848  00                 	db	0
   887  007849  40                 	db	64
   888  00784A  44                 	db	68
   889  00784B  3D                 	db	61
   890  00784C  00                 	db	0
   891  00784D  00                 	db	0
   892  00784E  00                 	db	0
   893  00784F  41                 	db	65
   894  007850  7F                 	db	127
   895  007851  10                 	db	16
   896  007852  18                 	db	24
   897  007853  24                 	db	36
   898  007854  42                 	db	66
   899  007855  42                 	db	66
   900  007856  00                 	db	0
   901  007857  00                 	db	0
   902  007858  40                 	db	64
   903  007859  41                 	db	65
   904  00785A  7F                 	db	127
   905  00785B  40                 	db	64
   906  00785C  40                 	db	64
   907  00785D  00                 	db	0
   908  00785E  00                 	db	0
   909  00785F  42                 	db	66
   910  007860  7E                 	db	126
   911  007861  02                 	db	2
   912  007862  7C                 	db	124
   913  007863  02                 	db	2
   914  007864  7E                 	db	126
   915  007865  40                 	db	64
   916  007866  00                 	db	0
   917  007867  42                 	db	66
   918  007868  7E                 	db	126
   919  007869  44                 	db	68
   920  00786A  02                 	db	2
   921  00786B  42                 	db	66
   922  00786C  7C                 	db	124
   923  00786D  40                 	db	64
   924  00786E  00                 	db	0
   925  00786F  00                 	db	0
   926  007870  3C                 	db	60
   927  007871  42                 	db	66
   928  007872  42                 	db	66
   929  007873  42                 	db	66
   930  007874  3C                 	db	60
   931  007875  00                 	db	0
   932  007876  00                 	db	0
   933  007877  00                 	db	0
   934  007878  41                 	db	65
   935  007879  7F                 	db	127
   936  00787A  49                 	db	73
   937  00787B  09                 	db	9
   938  00787C  09                 	db	9
   939  00787D  06                 	db	6
   940  00787E  00                 	db	0
   941  00787F  00                 	db	0
   942  007880  06                 	db	6
   943  007881  09                 	db	9
   944  007882  09                 	db	9
   945  007883  49                 	db	73
   946  007884  7F                 	db	127
   947  007885  41                 	db	65
   948  007886  00                 	db	0
   949  007887  00                 	db	0
   950  007888  42                 	db	66
   951  007889  7E                 	db	126
   952  00788A  44                 	db	68
   953  00788B  02                 	db	2
   954  00788C  02                 	db	2
   955  00788D  04                 	db	4
   956  00788E  00                 	db	0
   957  00788F  00                 	db	0
   958  007890  64                 	db	100
   959  007891  4A                 	db	74
   960  007892  4A                 	db	74
   961  007893  4A                 	db	74
   962  007894  36                 	db	54
   963  007895  00                 	db	0
   964  007896  00                 	db	0
   965  007897  00                 	db	0
   966  007898  04                 	db	4
   967  007899  3F                 	db	63
   968  00789A  44                 	db	68
   969  00789B  44                 	db	68
   970  00789C  20                 	db	32
   971  00789D  00                 	db	0
   972  00789E  00                 	db	0
   973  00789F  00                 	db	0
   974  0078A0  02                 	db	2
   975  0078A1  3E                 	db	62
   976  0078A2  40                 	db	64
   977  0078A3  40                 	db	64
   978  0078A4  22                 	db	34
   979  0078A5  7E                 	db	126
   980  0078A6  40                 	db	64
   981  0078A7  02                 	db	2
   982  0078A8  0E                 	db	14
   983  0078A9  32                 	db	50
   984  0078AA  40                 	db	64
   985  0078AB  32                 	db	50
   986  0078AC  0E                 	db	14
   987  0078AD  02                 	db	2
   988  0078AE  00                 	db	0
   989  0078AF  02                 	db	2
   990  0078B0  1E                 	db	30
   991  0078B1  62                 	db	98
   992  0078B2  18                 	db	24
   993  0078B3  62                 	db	98
   994  0078B4  1E                 	db	30
   995  0078B5  02                 	db	2
   996  0078B6  00                 	db	0
   997  0078B7  42                 	db	66
   998  0078B8  62                 	db	98
   999  0078B9  14                 	db	20
  1000  0078BA  08                 	db	8
  1001  0078BB  14                 	db	20
  1002  0078BC  62                 	db	98
  1003  0078BD  42                 	db	66
  1004  0078BE  00                 	db	0
  1005  0078BF  01                 	db	1
  1006  0078C0  43                 	db	67
  1007  0078C1  45                 	db	69
  1008  0078C2  38                 	db	56
  1009  0078C3  05                 	db	5
  1010  0078C4  03                 	db	3
  1011  0078C5  01                 	db	1
  1012  0078C6  00                 	db	0
  1013  0078C7  00                 	db	0
  1014  0078C8  46                 	db	70
  1015  0078C9  62                 	db	98
  1016  0078CA  52                 	db	82
  1017  0078CB  4A                 	db	74
  1018  0078CC  46                 	db	70
  1019  0078CD  62                 	db	98
  1020  0078CE  00                 	db	0
  1021  0078CF  00                 	db	0
  1022  0078D0  00                 	db	0
  1023  0078D1  08                 	db	8
  1024  0078D2  36                 	db	54
  1025  0078D3  41                 	db	65
  1026  0078D4  00                 	db	0
  1027  0078D5  00                 	db	0
  1028  0078D6  00                 	db	0
  1029  0078D7  00                 	db	0
  1030  0078D8  00                 	db	0
  1031  0078D9  00                 	db	0
  1032  0078DA  7F                 	db	127
  1033  0078DB  00                 	db	0
  1034  0078DC  00                 	db	0
  1035  0078DD  00                 	db	0
  1036  0078DE  00                 	db	0
  1037  0078DF  00                 	db	0
  1038  0078E0  00                 	db	0
  1039  0078E1  00                 	db	0
  1040  0078E2  41                 	db	65
  1041  0078E3  36                 	db	54
  1042  0078E4  08                 	db	8
  1043  0078E5  00                 	db	0
  1044  0078E6  00                 	db	0
  1045  0078E7  00                 	db	0
  1046  0078E8  18                 	db	24
  1047  0078E9  08                 	db	8
  1048  0078EA  08                 	db	8
  1049  0078EB  10                 	db	16
  1050  0078EC  10                 	db	16
  1051  0078ED  18                 	db	24
  1052  0078EE  00                 	db	0
  1053  0078EF  AA                 	db	170
  1054  0078F0  55                 	db	85
  1055  0078F1  AA                 	db	170
  1056  0078F2  55                 	db	85
  1057  0078F3  AA                 	db	170
  1058  0078F4  55                 	db	85
  1059  0078F5  AA                 	db	170
  1060  0078F6  55                 	db	85
  1061  0078F7                     __end_of_OledFont0:
  1062                           	opt stack 0
  1063  0078F7                     _configDescriptor1:
  1064                           	opt stack 0
  1065  0078F7  09                 	db	9
  1066  0078F8  02                 	db	2
  1067  0078F9  43                 	db	67
  1068  0078FA  00                 	db	0
  1069  0078FB  02                 	db	2
  1070  0078FC  01                 	db	1
  1071  0078FD  00                 	db	0
  1072  0078FE  C0                 	db	192
  1073  0078FF  32                 	db	50
  1074  007900  09                 	db	9
  1075  007901  04                 	db	4
  1076  007902  00                 	db	0
  1077  007903  00                 	db	0
  1078  007904  01                 	db	1
  1079  007905  02                 	db	2
  1080  007906  02                 	db	2
  1081  007907  01                 	db	1
  1082  007908  00                 	db	0
  1083  007909  05                 	db	5
  1084  00790A  24                 	db	36
  1085  00790B  00                 	db	0
  1086  00790C  10                 	db	16
  1087  00790D  01                 	db	1
  1088  00790E  04                 	db	4
  1089  00790F  24                 	db	36
  1090  007910  02                 	db	2
  1091  007911  02                 	db	2
  1092  007912  05                 	db	5
  1093  007913  24                 	db	36
  1094  007914  06                 	db	6
  1095  007915  00                 	db	0
  1096  007916  01                 	db	1
  1097  007917  05                 	db	5
  1098  007918  24                 	db	36
  1099  007919  01                 	db	1
  1100  00791A  00                 	db	0
  1101  00791B  01                 	db	1
  1102  00791C  07                 	db	7
  1103  00791D  05                 	db	5
  1104  00791E  81                 	db	129
  1105  00791F  03                 	db	3
  1106  007920  08                 	db	8
  1107  007921  00                 	db	0
  1108  007922  02                 	db	2
  1109  007923  09                 	db	9
  1110  007924  04                 	db	4
  1111  007925  01                 	db	1
  1112  007926  00                 	db	0
  1113  007927  02                 	db	2
  1114  007928  0A                 	db	10
  1115  007929  00                 	db	0
  1116  00792A  00                 	db	0
  1117  00792B  00                 	db	0
  1118  00792C  07                 	db	7
  1119  00792D  05                 	db	5
  1120  00792E  02                 	db	2
  1121  00792F  02                 	db	2
  1122  007930  40                 	db	64
  1123  007931  00                 	db	0
  1124  007932  00                 	db	0
  1125  007933  07                 	db	7
  1126  007934  05                 	db	5
  1127  007935  82                 	db	130
  1128  007936  02                 	db	2
  1129  007937  40                 	db	64
  1130  007938  00                 	db	0
  1131  007939  00                 	db	0
  1132  00793A                     __end_of_configDescriptor1:
  1133                           	opt stack 0
  1134  00793A                     _sd002:
  1135                           	opt stack 0
  1136  00793A  34                 	db	52
  1137  00793B  03                 	db	3
  1138  00793C  0043               	dw	67
  1139  00793E  0044               	dw	68
  1140  007940  0043               	dw	67
  1141  007942  0020               	dw	32
  1142  007944  0052               	dw	82
  1143  007946  0053               	dw	83
  1144  007948  002D               	dw	45
  1145  00794A  0032               	dw	50
  1146  00794C  0033               	dw	51
  1147  00794E  0032               	dw	50
  1148  007950  0020               	dw	32
  1149  007952  0045               	dw	69
  1150  007954  006D               	dw	109
  1151  007956  0075               	dw	117
  1152  007958  006C               	dw	108
  1153  00795A  0061               	dw	97
  1154  00795C  0074               	dw	116
  1155  00795E  0069               	dw	105
  1156  007960  006F               	dw	111
  1157  007962  006E               	dw	110
  1158  007964  0020               	dw	32
  1159  007966  0044               	dw	68
  1160  007968  0065               	dw	101
  1161  00796A  006D               	dw	109
  1162  00796C  006F               	dw	111
  1163  00796E                     __end_of_sd002:
  1164                           	opt stack 0
  1165  00796E                     _sd001:
  1166                           	opt stack 0
  1167  00796E  34                 	db	52
  1168  00796F  03                 	db	3
  1169  007970  004D               	dw	77
  1170  007972  0069               	dw	105
  1171  007974  0063               	dw	99
  1172  007976  0072               	dw	114
  1173  007978  006F               	dw	111
  1174  00797A  0063               	dw	99
  1175  00797C  0068               	dw	104
  1176  00797E  0069               	dw	105
  1177  007980  0070               	dw	112
  1178  007982  0020               	dw	32
  1179  007984  0054               	dw	84
  1180  007986  0065               	dw	101
  1181  007988  0063               	dw	99
  1182  00798A  0068               	dw	104
  1183  00798C  006E               	dw	110
  1184  00798E  006F               	dw	111
  1185  007990  006C               	dw	108
  1186  007992  006F               	dw	111
  1187  007994  0067               	dw	103
  1188  007996  0079               	dw	121
  1189  007998  0020               	dw	32
  1190  00799A  0049               	dw	73
  1191  00799C  006E               	dw	110
  1192  00799E  0063               	dw	99
  1193  0079A0  002E               	dw	46
  1194  0079A2                     __end_of_sd001:
  1195                           	opt stack 0
  1196  0079A2                     _device_dsc:
  1197                           	opt stack 0
  1198  0079A2  12                 	db	18
  1199  0079A3  01                 	db	1
  1200  0079A4  0200               	dw	512
  1201  0079A6  02                 	db	2
  1202  0079A7  00                 	db	0
  1203  0079A8  00                 	db	0
  1204  0079A9  08                 	db	8
  1205  0079AA  04D8               	dw	1240
  1206  0079AC  000A               	dw	10
  1207  0079AE  0100               	dw	256
  1208  0079B0  01                 	db	1
  1209  0079B1  02                 	db	2
  1210  0079B2  00                 	db	0
  1211  0079B3  01                 	db	1
  1212  0079B4                     __end_of_device_dsc:
  1213                           	opt stack 0
  1214  0079B4                     _sd000:
  1215                           	opt stack 0
  1216  0079B4  04                 	db	4
  1217  0079B5  03                 	db	3
  1218  0079B6  0409               	dw	1033
  1219  0079B8                     __end_of_sd000:
  1220                           	opt stack 0
  1221  0000                     _ANSELCbits	set	3933
  1222  0000                     _ANSELAbits	set	3931
  1223  0000                     _TMR3	set	4018
  1224  0000                     _TMR0	set	4054
  1225  0000                     _UEP0bits	set	3946
  1226  0000                     _IPR3bits	set	4005
  1227  0000                     _RCONbits	set	4048
  1228  0000                     _UCON	set	3936
  1229  0000                     _USTAT	set	3937
  1230  0000                     _PIR3bits	set	4004
  1231  0000                     _UIEbits	set	3940
  1232  0000                     _UIRbits	set	3941
  1233  0000                     _UADDR	set	3939
  1234  0000                     _UIE	set	3940
  1235  0000                     _UEIE	set	3942
  1236  0000                     _UCFG	set	3938
  1237  0000                     _UIR	set	3941
  1238  0000                     _UEIR	set	3943
  1239  0000                     _PIE3bits	set	4003
  1240  0000                     _T0CONbits	set	4053
  1241  0000                     _T3GCONbits	set	4020
  1242  0000                     _T3CONbits	set	4017
  1243  0000                     _T3GCON	set	4020
  1244  0000                     _T3CON	set	4017
  1245  0000                     _T2CONbits	set	4026
  1246  0000                     _TMR2	set	4028
  1247  0000                     _PR2	set	4027
  1248  0000                     _T2CON	set	4026
  1249  0000                     _VREFCON0bits	set	3965
  1250  0000                     _CM1CON0bits	set	3992
  1251  0000                     _CM2CON1bits	set	3994
  1252  0000                     _CM1CON0	set	3992
  1253  0000                     _EEDATA	set	4008
  1254  0000                     _EEADR	set	4009
  1255  0000                     _EECON2	set	4007
  1256  0000                     _EECON1bits	set	4006
  1257  0000                     _TABLAT	set	4085
  1258  0000                     _TBLPTRL	set	4086
  1259  0000                     _TBLPTRH	set	4087
  1260  0000                     _TBLPTRU	set	4088
  1261  0000                     _TRISD	set	3989
  1262  0000                     _IOCBbits	set	3974
  1263  0000                     _INTCON2bits	set	4081
  1264  0000                     _TRISAbits	set	3986
  1265  0000                     _T1GCONbits	set	4044
  1266  0000                     _T1CONbits	set	4045
  1267  0000                     _TMR1L	set	4046
  1268  0000                     _TMR1H	set	4047
  1269  0000                     _T1GCON	set	4044
  1270  0000                     _T1CON	set	4045
  1271  0000                     _SSP1STATbits	set	4039
  1272  0000                     _SSPBUF	set	4041
  1273  0000                     _SSP1CON1bits	set	4038
  1274  0000                     _SSP1ADD	set	4040
  1275  0000                     _SSP1CON1	set	4038
  1276  0000                     _SSP1STAT	set	4039
  1277  0000                     _ADRESH	set	4036
  1278  0000                     _ADRESL	set	4035
  1279  0000                     _ADCON2	set	4032
  1280  0000                     _ADCON1	set	4033
  1281  0000                     _ADCON0	set	4034
  1282  0000                     _VREFCON0	set	3965
  1283  0000                     _ACTCON	set	4021
  1284  0000                     _OSCCON2bits	set	4050
  1285  0000                     _OSCCON2	set	4050
  1286  0000                     _OSCCON	set	4051
  1287  0000                     _OSCTUNE	set	3995
  1288  0000                     _PIR1bits	set	3998
  1289  0000                     _RCREG	set	4014
  1290  0000                     _RCSTAbits	set	4011
  1291  0000                     _TXSTA	set	4012
  1292  0000                     _RCSTA	set	4011
  1293  0000                     _BAUDCON	set	4024
  1294  0000                     _LATD	set	3980
  1295  0000                     _TRISCbits	set	3988
  1296  0000                     _TRISBbits	set	3987
  1297  0000                     _TRISEbits	set	3990
  1298  0000                     _SPBRGH	set	4016
  1299  0000                     _SPBRG	set	4015
  1300  0000                     _UCONbits	set	3936
  1301  0000                     _TMR3L	set	4018
  1302  0000                     _TMR3H	set	4019
  1303  0000                     _PIR2bits	set	4001
  1304  0000                     _WDTCONbits	set	4049
  1305  0000                     _PORTCbits	set	3970
  1306  0000                     _IOCCbits	set	3975
  1307  0000                     _INTCON3bits	set	4080
  1308  0000                     _PIE2bits	set	4000
  1309  0000                     _LATEbits	set	3981
  1310  0000                     _INTCONbits	set	4082
  1311  0000                     _ADCON0bits	set	4034
  1312  0000                     _PORTAbits	set	3968
  1313  0000                     _PIE1bits	set	3997
  1314  0000                     _TXREG	set	4013
  1315  0000                     _LATCbits	set	3979
  1316  0000                     _TXSTAbits	set	4012
  1317  0000                     _LATAbits	set	3977
  1318  0000                     _PORTBbits	set	3969
  1319  0000                     _LATBbits	set	3978
  1320  0000                     _UEP1	set	3947
  1321  0000                     _UEP0	set	3946
  1322  0000                     _CKE	set	32318
  1323  0000                     _CKP	set	32308
  1324  0000                     _GIE	set	32663
  1325  0000                     _PEIE	set	32662
  1326  0079B8                     STR_184:
  1327  0079B8  73                 	db	115	;'s'
  1328  0079B9  79                 	db	121	;'y'
  1329  0079BA  73                 	db	115	;'s'
  1330  0079BB  20                 	db	32
  1331  0079BC  73                 	db	115	;'s'
  1332  0079BD  65                 	db	101	;'e'
  1333  0079BE  74                 	db	116	;'t'
  1334  0079BF  20                 	db	32
  1335  0079C0  70                 	db	112	;'p'
  1336  0079C1  69                 	db	105	;'i'
  1337  0079C2  6E                 	db	110	;'n'
  1338  0079C3  6D                 	db	109	;'m'
  1339  0079C4  6F                 	db	111	;'o'
  1340  0079C5  64                 	db	100	;'d'
  1341  0079C6  65                 	db	101	;'e'
  1342  0079C7  20                 	db	32
  1343  0079C8  47                 	db	71	;'G'
  1344  0079C9  50                 	db	80	;'P'
  1345  0079CA  49                 	db	73	;'I'
  1346  0079CB  4F                 	db	79	;'O'
  1347  0079CC  31                 	db	49	;'1'
  1348  0079CD  32                 	db	50	;'2'
  1349  0079CE  20                 	db	32
  1350  0079CF  61                 	db	97	;'a'
  1351  0079D0  6E                 	db	110	;'n'
  1352  0079D1  61                 	db	97	;'a'
  1353  0079D2  00                 	db	0
  1354  0079D3                     STR_183:
  1355  0079D3  73                 	db	115	;'s'
  1356  0079D4  79                 	db	121	;'y'
  1357  0079D5  73                 	db	115	;'s'
  1358  0079D6  20                 	db	32
  1359  0079D7  73                 	db	115	;'s'
  1360  0079D8  65                 	db	101	;'e'
  1361  0079D9  74                 	db	116	;'t'
  1362  0079DA  20                 	db	32
  1363  0079DB  70                 	db	112	;'p'
  1364  0079DC  69                 	db	105	;'i'
  1365  0079DD  6E                 	db	110	;'n'
  1366  0079DE  6D                 	db	109	;'m'
  1367  0079DF  6F                 	db	111	;'o'
  1368  0079E0  64                 	db	100	;'d'
  1369  0079E1  65                 	db	101	;'e'
  1370  0079E2  20                 	db	32
  1371  0079E3  47                 	db	71	;'G'
  1372  0079E4  50                 	db	80	;'P'
  1373  0079E5  49                 	db	73	;'I'
  1374  0079E6  4F                 	db	79	;'O'
  1375  0079E7  31                 	db	49	;'1'
  1376  0079E8  33                 	db	51	;'3'
  1377  0079E9  20                 	db	32
  1378  0079EA  61                 	db	97	;'a'
  1379  0079EB  6E                 	db	110	;'n'
  1380  0079EC  61                 	db	97	;'a'
  1381  0079ED  00                 	db	0
  1382  0079EE                     STR_177:
  1383  0079EE  73                 	db	115	;'s'
  1384  0079EF  79                 	db	121	;'y'
  1385  0079F0  73                 	db	115	;'s'
  1386  0079F1  20                 	db	32
  1387  0079F2  73                 	db	115	;'s'
  1388  0079F3  65                 	db	101	;'e'
  1389  0079F4  74                 	db	116	;'t'
  1390  0079F5  20                 	db	32
  1391  0079F6  70                 	db	112	;'p'
  1392  0079F7  69                 	db	105	;'i'
  1393  0079F8  6E                 	db	110	;'n'
  1394  0079F9  64                 	db	100	;'d'
  1395  0079FA  69                 	db	105	;'i'
  1396  0079FB  67                 	db	103	;'g'
  1397  0079FC  20                 	db	32
  1398  0079FD  47                 	db	71	;'G'
  1399  0079FE  50                 	db	80	;'P'
  1400  0079FF  49                 	db	73	;'I'
  1401  007A00  4F                 	db	79	;'O'
  1402  007A01  31                 	db	49	;'1'
  1403  007A02  30                 	db	48	;'0'
  1404  007A03  20                 	db	32
  1405  007A04  30                 	db	48	;'0'
  1406  007A05  0D                 	db	13
  1407  007A06  0A                 	db	10
  1408  007A07  00                 	db	0
  1409  007A08                     STR_178:
  1410  007A08  73                 	db	115	;'s'
  1411  007A09  79                 	db	121	;'y'
  1412  007A0A  73                 	db	115	;'s'
  1413  007A0B  20                 	db	32
  1414  007A0C  73                 	db	115	;'s'
  1415  007A0D  65                 	db	101	;'e'
  1416  007A0E  74                 	db	116	;'t'
  1417  007A0F  20                 	db	32
  1418  007A10  70                 	db	112	;'p'
  1419  007A11  69                 	db	105	;'i'
  1420  007A12  6E                 	db	110	;'n'
  1421  007A13  64                 	db	100	;'d'
  1422  007A14  69                 	db	105	;'i'
  1423  007A15  67                 	db	103	;'g'
  1424  007A16  20                 	db	32
  1425  007A17  47                 	db	71	;'G'
  1426  007A18  50                 	db	80	;'P'
  1427  007A19  49                 	db	73	;'I'
  1428  007A1A  4F                 	db	79	;'O'
  1429  007A1B  31                 	db	49	;'1'
  1430  007A1C  31                 	db	49	;'1'
  1431  007A1D  20                 	db	32
  1432  007A1E  30                 	db	48	;'0'
  1433  007A1F  0D                 	db	13
  1434  007A20  0A                 	db	10
  1435  007A21  00                 	db	0
  1436  007A22                     STR_175:
  1437  007A22  73                 	db	115	;'s'
  1438  007A23  79                 	db	121	;'y'
  1439  007A24  73                 	db	115	;'s'
  1440  007A25  20                 	db	32
  1441  007A26  73                 	db	115	;'s'
  1442  007A27  65                 	db	101	;'e'
  1443  007A28  74                 	db	116	;'t'
  1444  007A29  20                 	db	32
  1445  007A2A  70                 	db	112	;'p'
  1446  007A2B  69                 	db	105	;'i'
  1447  007A2C  6E                 	db	110	;'n'
  1448  007A2D  64                 	db	100	;'d'
  1449  007A2E  69                 	db	105	;'i'
  1450  007A2F  67                 	db	103	;'g'
  1451  007A30  20                 	db	32
  1452  007A31  47                 	db	71	;'G'
  1453  007A32  50                 	db	80	;'P'
  1454  007A33  49                 	db	73	;'I'
  1455  007A34  4F                 	db	79	;'O'
  1456  007A35  31                 	db	49	;'1'
  1457  007A36  30                 	db	48	;'0'
  1458  007A37  20                 	db	32
  1459  007A38  31                 	db	49	;'1'
  1460  007A39  0D                 	db	13
  1461  007A3A  0A                 	db	10
  1462  007A3B  00                 	db	0
  1463  007A3C                     STR_176:
  1464  007A3C  73                 	db	115	;'s'
  1465  007A3D  79                 	db	121	;'y'
  1466  007A3E  73                 	db	115	;'s'
  1467  007A3F  20                 	db	32
  1468  007A40  73                 	db	115	;'s'
  1469  007A41  65                 	db	101	;'e'
  1470  007A42  74                 	db	116	;'t'
  1471  007A43  20                 	db	32
  1472  007A44  70                 	db	112	;'p'
  1473  007A45  69                 	db	105	;'i'
  1474  007A46  6E                 	db	110	;'n'
  1475  007A47  64                 	db	100	;'d'
  1476  007A48  69                 	db	105	;'i'
  1477  007A49  67                 	db	103	;'g'
  1478  007A4A  20                 	db	32
  1479  007A4B  47                 	db	71	;'G'
  1480  007A4C  50                 	db	80	;'P'
  1481  007A4D  49                 	db	73	;'I'
  1482  007A4E  4F                 	db	79	;'O'
  1483  007A4F  31                 	db	49	;'1'
  1484  007A50  31                 	db	49	;'1'
  1485  007A51  20                 	db	32
  1486  007A52  31                 	db	49	;'1'
  1487  007A53  0D                 	db	13
  1488  007A54  0A                 	db	10
  1489  007A55  00                 	db	0
  1490  007A56                     STR_185:
  1491  007A56  73                 	db	115	;'s'
  1492  007A57  79                 	db	121	;'y'
  1493  007A58  73                 	db	115	;'s'
  1494  007A59  20                 	db	32
  1495  007A5A  67                 	db	103	;'g'
  1496  007A5B  65                 	db	101	;'e'
  1497  007A5C  74                 	db	116	;'t'
  1498  007A5D  20                 	db	32
  1499  007A5E  70                 	db	112	;'p'
  1500  007A5F  69                 	db	105	;'i'
  1501  007A60  6E                 	db	110	;'n'
  1502  007A61  61                 	db	97	;'a'
  1503  007A62  6E                 	db	110	;'n'
  1504  007A63  61                 	db	97	;'a'
  1505  007A64  20                 	db	32
  1506  007A65  47                 	db	71	;'G'
  1507  007A66  50                 	db	80	;'P'
  1508  007A67  49                 	db	73	;'I'
  1509  007A68  4F                 	db	79	;'O'
  1510  007A69  31                 	db	49	;'1'
  1511  007A6A  32                 	db	50	;'2'
  1512  007A6B  00                 	db	0
  1513  007A6C                     STR_186:
  1514  007A6C  73                 	db	115	;'s'
  1515  007A6D  79                 	db	121	;'y'
  1516  007A6E  73                 	db	115	;'s'
  1517  007A6F  20                 	db	32
  1518  007A70  67                 	db	103	;'g'
  1519  007A71  65                 	db	101	;'e'
  1520  007A72  74                 	db	116	;'t'
  1521  007A73  20                 	db	32
  1522  007A74  70                 	db	112	;'p'
  1523  007A75  69                 	db	105	;'i'
  1524  007A76  6E                 	db	110	;'n'
  1525  007A77  61                 	db	97	;'a'
  1526  007A78  6E                 	db	110	;'n'
  1527  007A79  61                 	db	97	;'a'
  1528  007A7A  20                 	db	32
  1529  007A7B  47                 	db	71	;'G'
  1530  007A7C  50                 	db	80	;'P'
  1531  007A7D  49                 	db	73	;'I'
  1532  007A7E  4F                 	db	79	;'O'
  1533  007A7F  31                 	db	49	;'1'
  1534  007A80  33                 	db	51	;'3'
  1535  007A81  00                 	db	0
  1536  007A82                     STR_22:
  1537  007A82  73                 	db	115	;'s'
  1538  007A83  79                 	db	121	;'y'
  1539  007A84  73                 	db	115	;'s'
  1540  007A85  20                 	db	32
  1541  007A86  73                 	db	115	;'s'
  1542  007A87  6C                 	db	108	;'l'
  1543  007A88  65                 	db	101	;'e'
  1544  007A89  65                 	db	101	;'e'
  1545  007A8A  70                 	db	112	;'p'
  1546  007A8B  20                 	db	32
  1547  007A8C  39                 	db	57	;'9'
  1548  007A8D  39                 	db	57	;'9'
  1549  007A8E  39                 	db	57	;'9'
  1550  007A8F  39                 	db	57	;'9'
  1551  007A90  39                 	db	57	;'9'
  1552  007A91  39                 	db	57	;'9'
  1553  007A92  39                 	db	57	;'9'
  1554  007A93  39                 	db	57	;'9'
  1555  007A94  39                 	db	57	;'9'
  1556  007A95  00                 	db	0
  1557  007A96                     STR_96:
  1558  007A96  4D                 	db	77	;'M'
  1559  007A97  61                 	db	97	;'a'
  1560  007A98  63                 	db	99	;'c'
  1561  007A99  20                 	db	32
  1562  007A9A  45                 	db	69	;'E'
  1563  007A9B  72                 	db	114	;'r'
  1564  007A9C  72                 	db	114	;'r'
  1565  007A9D  6F                 	db	111	;'o'
  1566  007A9E  72                 	db	114	;'r'
  1567  007A9F  20                 	db	32
  1568  007AA0  4F                 	db	79	;'O'
  1569  007AA1  63                 	db	99	;'c'
  1570  007AA2  63                 	db	99	;'c'
  1571  007AA3  75                 	db	117	;'u'
  1572  007AA4  72                 	db	114	;'r'
  1573  007AA5  72                 	db	114	;'r'
  1574  007AA6  65                 	db	101	;'e'
  1575  007AA7  64                 	db	100	;'d'
  1576  007AA8  00                 	db	0
  1577  007AA9                     STR_83:
  1578  007AA9  28                 	db	40
  1579  007AAA  55                 	db	85	;'U'
  1580  007AAB  4E                 	db	78	;'N'
  1581  007AAC  43                 	db	67	;'C'
  1582  007AAD  4E                 	db	78	;'N'
  1583  007AAE  46                 	db	70	;'F'
  1584  007AAF  29                 	db	41
  1585  007AB0  20                 	db	32
  1586  007AB1  20                 	db	32
  1587  007AB2  20                 	db	32
  1588  007AB3  20                 	db	32
  1589  007AB4  28                 	db	40
  1590  007AB5  43                 	db	67	;'C'
  1591  007AB6  4E                 	db	78	;'N'
  1592  007AB7  46                 	db	70	;'F'
  1593  007AB8  29                 	db	41
  1594  007AB9  20                 	db	32
  1595  007ABA  00                 	db	0
  1596  007ABB                     STR_40:
  1597  007ABB  20                 	db	32
  1598  007ABC  20                 	db	32
  1599  007ABD  28                 	db	40
  1600  007ABE  53                 	db	83	;'S'
  1601  007ABF  32                 	db	50	;'2'
  1602  007AC0  29                 	db	41
  1603  007AC1  20                 	db	32
  1604  007AC2  20                 	db	32
  1605  007AC3  20                 	db	32
  1606  007AC4  20                 	db	32
  1607  007AC5  20                 	db	32
  1608  007AC6  20                 	db	32
  1609  007AC7  20                 	db	32
  1610  007AC8  20                 	db	32
  1611  007AC9  20                 	db	32
  1612  007ACA  20                 	db	32
  1613  007ACB  00                 	db	0
  1614  007ACC                     STR_92:
  1615  007ACC  20                 	db	32
  1616  007ACD  20                 	db	32
  1617  007ACE  20                 	db	32
  1618  007ACF  20                 	db	32
  1619  007AD0  52                 	db	82	;'R'
  1620  007AD1  65                 	db	101	;'e'
  1621  007AD2  63                 	db	99	;'c'
  1622  007AD3  65                 	db	101	;'e'
  1623  007AD4  69                 	db	105	;'i'
  1624  007AD5  76                 	db	118	;'v'
  1625  007AD6  65                 	db	101	;'e'
  1626  007AD7  64                 	db	100	;'d'
  1627  007AD8  20                 	db	32
  1628  007AD9  20                 	db	32
  1629  007ADA  20                 	db	32
  1630  007ADB  20                 	db	32
  1631  007ADC  00                 	db	0
  1632  007ADD                     STR_42:
  1633  007ADD  20                 	db	32
  1634  007ADE  20                 	db	32
  1635  007ADF  20                 	db	32
  1636  007AE0  20                 	db	32
  1637  007AE1  20                 	db	32
  1638  007AE2  20                 	db	32
  1639  007AE3  20                 	db	32
  1640  007AE4  20                 	db	32
  1641  007AE5  20                 	db	32
  1642  007AE6  28                 	db	40
  1643  007AE7  53                 	db	83	;'S'
  1644  007AE8  33                 	db	51	;'3'
  1645  007AE9  29                 	db	41
  1646  007AEA  20                 	db	32
  1647  007AEB  20                 	db	32
  1648  007AEC  20                 	db	32
  1649  007AED  00                 	db	0
  1650  007AEE                     STR_34:
  1651  007AEE  20                 	db	32
  1652  007AEF  20                 	db	32
  1653  007AF0  28                 	db	40
  1654  007AF1  53                 	db	83	;'S'
  1655  007AF2  32                 	db	50	;'2'
  1656  007AF3  29                 	db	41
  1657  007AF4  20                 	db	32
  1658  007AF5  20                 	db	32
  1659  007AF6  20                 	db	32
  1660  007AF7  28                 	db	40
  1661  007AF8  53                 	db	83	;'S'
  1662  007AF9  33                 	db	51	;'3'
  1663  007AFA  29                 	db	41
  1664  007AFB  20                 	db	32
  1665  007AFC  20                 	db	32
  1666  007AFD  20                 	db	32
  1667  007AFE  00                 	db	0
  1668  007AFF                     STR_79:
  1669  007AFF  20                 	db	32
  1670  007B00  20                 	db	32
  1671  007B01  4C                 	db	76	;'L'
  1672  007B02  61                 	db	97	;'a'
  1673  007B03  73                 	db	115	;'s'
  1674  007B04  74                 	db	116	;'t'
  1675  007B05  20                 	db	32
  1676  007B06  4D                 	db	77	;'M'
  1677  007B07  65                 	db	101	;'e'
  1678  007B08  73                 	db	115	;'s'
  1679  007B09  73                 	db	115	;'s'
  1680  007B0A  61                 	db	97	;'a'
  1681  007B0B  67                 	db	103	;'g'
  1682  007B0C  65                 	db	101	;'e'
  1683  007B0D  20                 	db	32
  1684  007B0E  20                 	db	32
  1685  007B0F  00                 	db	0
  1686  007B10                     STR_78:
  1687  007B10  20                 	db	32
  1688  007B11  56                 	db	86	;'V'
  1689  007B12  69                 	db	105	;'i'
  1690  007B13  65                 	db	101	;'e'
  1691  007B14  77                 	db	119	;'w'
  1692  007B15  20                 	db	32
  1693  007B16  44                 	db	68	;'D'
  1694  007B17  6F                 	db	111	;'o'
  1695  007B18  77                 	db	119	;'w'
  1696  007B19  6E                 	db	110	;'n'
  1697  007B1A  6C                 	db	108	;'l'
  1698  007B1B  69                 	db	105	;'i'
  1699  007B1C  6E                 	db	110	;'n'
  1700  007B1D  6B                 	db	107	;'k'
  1701  007B1E  20                 	db	32
  1702  007B1F  20                 	db	32
  1703  007B20  00                 	db	0
  1704  007B21                     STR_75:
  1705  007B21  20                 	db	32
  1706  007B22  20                 	db	32
  1707  007B23  49                 	db	73	;'I'
  1708  007B24  73                 	db	115	;'s'
  1709  007B25  73                 	db	115	;'s'
  1710  007B26  75                 	db	117	;'u'
  1711  007B27  65                 	db	101	;'e'
  1712  007B28  20                 	db	32
  1713  007B29  55                 	db	85	;'U'
  1714  007B2A  70                 	db	112	;'p'
  1715  007B2B  6C                 	db	108	;'l'
  1716  007B2C  69                 	db	105	;'i'
  1717  007B2D  6E                 	db	110	;'n'
  1718  007B2E  6B                 	db	107	;'k'
  1719  007B2F  20                 	db	32
  1720  007B30  20                 	db	32
  1721  007B31  00                 	db	0
  1722  007B32                     STR_29:
  1723  007B32  20                 	db	32
  1724  007B33  28                 	db	40
  1725  007B34  53                 	db	83	;'S'
  1726  007B35  32                 	db	50	;'2'
  1727  007B36  29                 	db	41
  1728  007B37  20                 	db	32
  1729  007B38  20                 	db	32
  1730  007B39  20                 	db	32
  1731  007B3A  20                 	db	32
  1732  007B3B  20                 	db	32
  1733  007B3C  20                 	db	32
  1734  007B3D  28                 	db	40
  1735  007B3E  53                 	db	83	;'S'
  1736  007B3F  33                 	db	51	;'3'
  1737  007B40  29                 	db	41
  1738  007B41  20                 	db	32
  1739  007B42  00                 	db	0
  1740  007B43                     STR_32:
  1741  007B43  20                 	db	32
  1742  007B44  4A                 	db	74	;'J'
  1743  007B45  6F                 	db	111	;'o'
  1744  007B46  69                 	db	105	;'i'
  1745  007B47  6E                 	db	110	;'n'
  1746  007B48  69                 	db	105	;'i'
  1747  007B49  6E                 	db	110	;'n'
  1748  007B4A  67                 	db	103	;'g'
  1749  007B4B  20                 	db	32
  1750  007B4C  4D                 	db	77	;'M'
  1751  007B4D  65                 	db	101	;'e'
  1752  007B4E  74                 	db	116	;'t'
  1753  007B4F  68                 	db	104	;'h'
  1754  007B50  6F                 	db	111	;'o'
  1755  007B51  64                 	db	100	;'d'
  1756  007B52  20                 	db	32
  1757  007B53  00                 	db	0
  1758  007B54                     STR_91:
  1759  007B54  53                 	db	83	;'S'
  1760  007B55  65                 	db	101	;'e'
  1761  007B56  72                 	db	114	;'r'
  1762  007B57  76                 	db	118	;'v'
  1763  007B58  65                 	db	101	;'e'
  1764  007B59  72                 	db	114	;'r'
  1765  007B5A  20                 	db	32
  1766  007B5B  52                 	db	82	;'R'
  1767  007B5C  65                 	db	101	;'e'
  1768  007B5D  73                 	db	115	;'s'
  1769  007B5E  70                 	db	112	;'p'
  1770  007B5F  6F                 	db	111	;'o'
  1771  007B60  6E                 	db	110	;'n'
  1772  007B61  73                 	db	115	;'s'
  1773  007B62  65                 	db	101	;'e'
  1774  007B63  20                 	db	32
  1775  007B64  00                 	db	0
  1776  007B65                     STR_120:
  1777  007B65  54                 	db	84	;'T'
  1778  007B66  78                 	db	120	;'x'
  1779  007B67  20                 	db	32
  1780  007B68  45                 	db	69	;'E'
  1781  007B69  76                 	db	118	;'v'
  1782  007B6A  65                 	db	101	;'e'
  1783  007B6B  6E                 	db	110	;'n'
  1784  007B6C  74                 	db	116	;'t'
  1785  007B6D  20                 	db	32
  1786  007B6E  54                 	db	84	;'T'
  1787  007B6F  69                 	db	105	;'i'
  1788  007B70  6D                 	db	109	;'m'
  1789  007B71  69                 	db	105	;'i'
  1790  007B72  6E                 	db	110	;'n'
  1791  007B73  67                 	db	103	;'g'
  1792  007B74  20                 	db	32
  1793  007B75  00                 	db	0
  1794  007B76                     STR_119:
  1795  007B76  50                 	db	80	;'P'
  1796  007B77  65                 	db	101	;'e'
  1797  007B78  72                 	db	114	;'r'
  1798  007B79  69                 	db	105	;'i'
  1799  007B7A  6F                 	db	111	;'o'
  1800  007B7B  64                 	db	100	;'d'
  1801  007B7C  69                 	db	105	;'i'
  1802  007B7D  63                 	db	99	;'c'
  1803  007B7E  20                 	db	32
  1804  007B7F  55                 	db	85	;'U'
  1805  007B80  70                 	db	112	;'p'
  1806  007B81  6C                 	db	108	;'l'
  1807  007B82  69                 	db	105	;'i'
  1808  007B83  6E                 	db	110	;'n'
  1809  007B84  6B                 	db	107	;'k'
  1810  007B85  20                 	db	32
  1811  007B86  00                 	db	0
  1812  007B87                     STR_76:
  1813  007B87  20                 	db	32
  1814  007B88  4C                 	db	76	;'L'
  1815  007B89  6F                 	db	111	;'o'
  1816  007B8A  52                 	db	82	;'R'
  1817  007B8B  61                 	db	97	;'a'
  1818  007B8C  57                 	db	87	;'W'
  1819  007B8D  41                 	db	65	;'A'
  1820  007B8E  4E                 	db	78	;'N'
  1821  007B8F  20                 	db	32
  1822  007B90  50                 	db	80	;'P'
  1823  007B91  61                 	db	97	;'a'
  1824  007B92  63                 	db	99	;'c'
  1825  007B93  6B                 	db	107	;'k'
  1826  007B94  65                 	db	101	;'e'
  1827  007B95  74                 	db	116	;'t'
  1828  007B96  20                 	db	32
  1829  007B97  00                 	db	0
  1830  007B98                     STR_33:
  1831  007B98  3C                 	db	60	;'<'
  1832  007B99  2D                 	db	45
  1833  007B9A  20                 	db	32
  1834  007B9B  41                 	db	65	;'A'
  1835  007B9C  42                 	db	66	;'B'
  1836  007B9D  50                 	db	80	;'P'
  1837  007B9E  20                 	db	32
  1838  007B9F  20                 	db	32
  1839  007BA0  20                 	db	32
  1840  007BA1  4F                 	db	79	;'O'
  1841  007BA2  54                 	db	84	;'T'
  1842  007BA3  41                 	db	65	;'A'
  1843  007BA4  41                 	db	65	;'A'
  1844  007BA5  20                 	db	32
  1845  007BA6  2D                 	db	45
  1846  007BA7  3E                 	db	62	;'>'
  1847  007BA8  00                 	db	0
  1848  007BA9                     STR_26:
  1849  007BA9  52                 	db	82	;'R'
  1850  007BAA  65                 	db	101	;'e'
  1851  007BAB  52                 	db	82	;'R'
  1852  007BAC  75                 	db	117	;'u'
  1853  007BAD  6E                 	db	110	;'n'
  1854  007BAE  20                 	db	32
  1855  007BAF  50                 	db	80	;'P'
  1856  007BB0  77                 	db	119	;'w'
  1857  007BB1  72                 	db	114	;'r'
  1858  007BB2  54                 	db	84	;'T'
  1859  007BB3  73                 	db	115	;'s'
  1860  007BB4  74                 	db	116	;'t'
  1861  007BB5  3C                 	db	60	;'<'
  1862  007BB6  53                 	db	83	;'S'
  1863  007BB7  32                 	db	50	;'2'
  1864  007BB8  3E                 	db	62	;'>'
  1865  007BB9  00                 	db	0
  1866  007BBA                     STR_94:
  1867  007BBA  44                 	db	68	;'D'
  1868  007BBB  61                 	db	97	;'a'
  1869  007BBC  74                 	db	116	;'t'
  1870  007BBD  61                 	db	97	;'a'
  1871  007BBE  20                 	db	32
  1872  007BBF  54                 	db	84	;'T'
  1873  007BC0  72                 	db	114	;'r'
  1874  007BC1  61                 	db	97	;'a'
  1875  007BC2  6E                 	db	110	;'n'
  1876  007BC3  73                 	db	115	;'s'
  1877  007BC4  6D                 	db	109	;'m'
  1878  007BC5  69                 	db	105	;'i'
  1879  007BC6  74                 	db	116	;'t'
  1880  007BC7  74                 	db	116	;'t'
  1881  007BC8  65                 	db	101	;'e'
  1882  007BC9  64                 	db	100	;'d'
  1883  007BCA  00                 	db	0
  1884  007BCB                     STR_151:
  1885  007BCB  45                 	db	69	;'E'
  1886  007BCC  6E                 	db	110	;'n'
  1887  007BCD  74                 	db	116	;'t'
  1888  007BCE  65                 	db	101	;'e'
  1889  007BCF  72                 	db	114	;'r'
  1890  007BD0  20                 	db	32
  1891  007BD1  53                 	db	83	;'S'
  1892  007BD2  6C                 	db	108	;'l'
  1893  007BD3  65                 	db	101	;'e'
  1894  007BD4  65                 	db	101	;'e'
  1895  007BD5  70                 	db	112	;'p'
  1896  007BD6  20                 	db	32
  1897  007BD7  4D                 	db	77	;'M'
  1898  007BD8  6F                 	db	111	;'o'
  1899  007BD9  64                 	db	100	;'d'
  1900  007BDA  65                 	db	101	;'e'
  1901  007BDB  00                 	db	0
  1902  007BDC                     STR_81:
  1903  007BDC  55                 	db	85	;'U'
  1904  007BDD  70                 	db	112	;'p'
  1905  007BDE  6C                 	db	108	;'l'
  1906  007BDF  69                 	db	105	;'i'
  1907  007BE0  6E                 	db	110	;'n'
  1908  007BE1  6B                 	db	107	;'k'
  1909  007BE2  20                 	db	32
  1910  007BE3  50                 	db	80	;'P'
  1911  007BE4  63                 	db	99	;'c'
  1912  007BE5  6B                 	db	107	;'k'
  1913  007BE6  74                 	db	116	;'t'
  1914  007BE7  20                 	db	32
  1915  007BE8  54                 	db	84	;'T'
  1916  007BE9  79                 	db	121	;'y'
  1917  007BEA  70                 	db	112	;'p'
  1918  007BEB  65                 	db	101	;'e'
  1919  007BEC  00                 	db	0
  1920  007BED                     STR_135:
  1921  007BED  53                 	db	83	;'S'
  1922  007BEE  65                 	db	101	;'e'
  1923  007BEF  6C                 	db	108	;'l'
  1924  007BF0  65                 	db	101	;'e'
  1925  007BF1  63                 	db	99	;'c'
  1926  007BF2  74                 	db	116	;'t'
  1927  007BF3  20                 	db	32
  1928  007BF4  44                 	db	68	;'D'
  1929  007BF5  61                 	db	97	;'a'
  1930  007BF6  74                 	db	116	;'t'
  1931  007BF7  61                 	db	97	;'a'
  1932  007BF8  20                 	db	32
  1933  007BF9  52                 	db	82	;'R'
  1934  007BFA  61                 	db	97	;'a'
  1935  007BFB  74                 	db	116	;'t'
  1936  007BFC  65                 	db	101	;'e'
  1937  007BFD  00                 	db	0
  1938  007BFE                     STR_27:
  1939  007BFE  4D                 	db	77	;'M'
  1940  007BFF  6F                 	db	111	;'o'
  1941  007C00  62                 	db	98	;'b'
  1942  007C01  69                 	db	105	;'i'
  1943  007C02  6C                 	db	108	;'l'
  1944  007C03  65                 	db	101	;'e'
  1945  007C04  20                 	db	32
  1946  007C05  4D                 	db	77	;'M'
  1947  007C06  6F                 	db	111	;'o'
  1948  007C07  74                 	db	116	;'t'
  1949  007C08  65                 	db	101	;'e'
  1950  007C09  20                 	db	32
  1951  007C0A  2D                 	db	45
  1952  007C0B  41                 	db	65	;'A'
  1953  007C0C  70                 	db	112	;'p'
  1954  007C0D  70                 	db	112	;'p'
  1955  007C0E  00                 	db	0
  1956  007C0F                     STR_28:
  1957  007C0F  4E                 	db	78	;'N'
  1958  007C10  61                 	db	97	;'a'
  1959  007C11  76                 	db	118	;'v'
  1960  007C12  69                 	db	105	;'i'
  1961  007C13  67                 	db	103	;'g'
  1962  007C14  61                 	db	97	;'a'
  1963  007C15  74                 	db	116	;'t'
  1964  007C16  65                 	db	101	;'e'
  1965  007C17  20                 	db	32
  1966  007C18  20                 	db	32
  1967  007C19  53                 	db	83	;'S'
  1968  007C1A  65                 	db	101	;'e'
  1969  007C1B  6C                 	db	108	;'l'
  1970  007C1C  65                 	db	101	;'e'
  1971  007C1D  63                 	db	99	;'c'
  1972  007C1E  74                 	db	116	;'t'
  1973  007C1F  00                 	db	0
  1974  007C20                     STR_111:
  1975  007C20  4D                 	db	77	;'M'
  1976  007C21  65                 	db	101	;'e'
  1977  007C22  6E                 	db	110	;'n'
  1978  007C23  75                 	db	117	;'u'
  1979  007C24  20                 	db	32
  1980  007C25  48                 	db	72	;'H'
  1981  007C26  61                 	db	97	;'a'
  1982  007C27  73                 	db	115	;'s'
  1983  007C28  20                 	db	32
  1984  007C29  54                 	db	84	;'T'
  1985  007C2A  69                 	db	105	;'i'
  1986  007C2B  6D                 	db	109	;'m'
  1987  007C2C  65                 	db	101	;'e'
  1988  007C2D  6F                 	db	111	;'o'
  1989  007C2E  75                 	db	117	;'u'
  1990  007C2F  74                 	db	116	;'t'
  1991  007C30  00                 	db	0
  1992  007C31                     STR_71:
  1993  007C31  53                 	db	83	;'S'
  1994  007C32  65                 	db	101	;'e'
  1995  007C33  6E                 	db	110	;'n'
  1996  007C34  64                 	db	100	;'d'
  1997  007C35  20                 	db	32
  1998  007C36  50                 	db	80	;'P'
  1999  007C37  65                 	db	101	;'e'
  2000  007C38  72                 	db	114	;'r'
  2001  007C39  69                 	db	105	;'i'
  2002  007C3A  6F                 	db	111	;'o'
  2003  007C3B  64                 	db	100	;'d'
  2004  007C3C  69                 	db	105	;'i'
  2005  007C3D  63                 	db	99	;'c'
  2006  007C3E  20                 	db	32
  2007  007C3F  54                 	db	84	;'T'
  2008  007C40  78                 	db	120	;'x'
  2009  007C41  00                 	db	0
  2010  007C42                     STR_105:
  2011  007C42  44                 	db	68	;'D'
  2012  007C43  6F                 	db	111	;'o'
  2013  007C44  77                 	db	119	;'w'
  2014  007C45  6E                 	db	110	;'n'
  2015  007C46  6C                 	db	108	;'l'
  2016  007C47  69                 	db	105	;'i'
  2017  007C48  6E                 	db	110	;'n'
  2018  007C49  6B                 	db	107	;'k'
  2019  007C4A  20                 	db	32
  2020  007C4B  44                 	db	68	;'D'
  2021  007C4C  69                 	db	105	;'i'
  2022  007C4D  73                 	db	115	;'s'
  2023  007C4E  70                 	db	112	;'p'
  2024  007C4F  6C                 	db	108	;'l'
  2025  007C50  61                 	db	97	;'a'
  2026  007C51  79                 	db	121	;'y'
  2027  007C52  00                 	db	0
  2028  007C53                     STR_103:
  2029  007C53  20                 	db	32
  2030  007C54  20                 	db	32
  2031  007C55  20                 	db	32
  2032  007C56  20                 	db	32
  2033  007C57  44                 	db	68	;'D'
  2034  007C58  69                 	db	105	;'i'
  2035  007C59  73                 	db	115	;'s'
  2036  007C5A  70                 	db	112	;'p'
  2037  007C5B  6C                 	db	108	;'l'
  2038  007C5C  61                 	db	97	;'a'
  2039  007C5D  79                 	db	121	;'y'
  2040  007C5E  20                 	db	32
  2041  007C5F  20                 	db	32
  2042  007C60  20                 	db	32
  2043  007C61  20                 	db	32
  2044  007C62  00                 	db	0
  2045  007C63                     STR_102:
  2046  007C63  20                 	db	32
  2047  007C64  20                 	db	32
  2048  007C65  53                 	db	83	;'S'
  2049  007C66  65                 	db	101	;'e'
  2050  007C67  6E                 	db	110	;'n'
  2051  007C68  73                 	db	115	;'s'
  2052  007C69  6F                 	db	111	;'o'
  2053  007C6A  72                 	db	114	;'r'
  2054  007C6B  20                 	db	32
  2055  007C6C  44                 	db	68	;'D'
  2056  007C6D  61                 	db	97	;'a'
  2057  007C6E  74                 	db	116	;'t'
  2058  007C6F  61                 	db	97	;'a'
  2059  007C70  20                 	db	32
  2060  007C71  20                 	db	32
  2061  007C72  00                 	db	0
  2062  007C73                     STR_114:
  2063  007C73  28                 	db	40
  2064  007C74  4E                 	db	78	;'N'
  2065  007C75  41                 	db	65	;'A'
  2066  007C76  56                 	db	86	;'V'
  2067  007C77  29                 	db	41
  2068  007C78  20                 	db	32
  2069  007C79  20                 	db	32
  2070  007C7A  20                 	db	32
  2071  007C7B  20                 	db	32
  2072  007C7C  28                 	db	40
  2073  007C7D  43                 	db	67	;'C'
  2074  007C7E  4E                 	db	78	;'N'
  2075  007C7F  47                 	db	71	;'G'
  2076  007C80  29                 	db	41
  2077  007C81  20                 	db	32
  2078  007C82  00                 	db	0
  2079  007C83                     STR_77:
  2080  007C83  28                 	db	40
  2081  007C84  4E                 	db	78	;'N'
  2082  007C85  41                 	db	65	;'A'
  2083  007C86  56                 	db	86	;'V'
  2084  007C87  29                 	db	41
  2085  007C88  20                 	db	32
  2086  007C89  20                 	db	32
  2087  007C8A  20                 	db	32
  2088  007C8B  20                 	db	32
  2089  007C8C  28                 	db	40
  2090  007C8D  53                 	db	83	;'S'
  2091  007C8E  45                 	db	69	;'E'
  2092  007C8F  4C                 	db	76	;'L'
  2093  007C90  29                 	db	41
  2094  007C91  20                 	db	32
  2095  007C92  00                 	db	0
  2096  007C93                     STR_152:
  2097  007C93  28                 	db	40
  2098  007C94  4E                 	db	78	;'N'
  2099  007C95  41                 	db	65	;'A'
  2100  007C96  56                 	db	86	;'V'
  2101  007C97  29                 	db	41
  2102  007C98  20                 	db	32
  2103  007C99  20                 	db	32
  2104  007C9A  20                 	db	32
  2105  007C9B  20                 	db	32
  2106  007C9C  28                 	db	40
  2107  007C9D  53                 	db	83	;'S'
  2108  007C9E  4C                 	db	76	;'L'
  2109  007C9F  50                 	db	80	;'P'
  2110  007CA0  29                 	db	41
  2111  007CA1  20                 	db	32
  2112  007CA2  00                 	db	0
  2113  007CA3                     STR_163:
  2114  007CA3  6D                 	db	109	;'m'
  2115  007CA4  61                 	db	97	;'a'
  2116  007CA5  63                 	db	99	;'c'
  2117  007CA6  20                 	db	32
  2118  007CA7  73                 	db	115	;'s'
  2119  007CA8  65                 	db	101	;'e'
  2120  007CA9  74                 	db	116	;'t'
  2121  007CAA  20                 	db	32
  2122  007CAB  61                 	db	97	;'a'
  2123  007CAC  64                 	db	100	;'d'
  2124  007CAD  72                 	db	114	;'r'
  2125  007CAE  20                 	db	32
  2126  007CAF  6F                 	db	111	;'o'
  2127  007CB0  66                 	db	102	;'f'
  2128  007CB1  66                 	db	102	;'f'
  2129  007CB2  00                 	db	0
  2130  007CB3                     STR_98:
  2131  007CB3  4E                 	db	78	;'N'
  2132  007CB4  6F                 	db	111	;'o'
  2133  007CB5  20                 	db	32
  2134  007CB6  46                 	db	70	;'F'
  2135  007CB7  72                 	db	114	;'r'
  2136  007CB8  65                 	db	101	;'e'
  2137  007CB9  65                 	db	101	;'e'
  2138  007CBA  20                 	db	32
  2139  007CBB  43                 	db	67	;'C'
  2140  007CBC  68                 	db	104	;'h'
  2141  007CBD  61                 	db	97	;'a'
  2142  007CBE  6E                 	db	110	;'n'
  2143  007CBF  6E                 	db	110	;'n'
  2144  007CC0  65                 	db	101	;'e'
  2145  007CC1  6C                 	db	108	;'l'
  2146  007CC2  00                 	db	0
  2147  007CC3                     STR_7:
  2148  007CC3  42                 	db	66	;'B'
  2149  007CC4  75                 	db	117	;'u'
  2150  007CC5  69                 	db	105	;'i'
  2151  007CC6  6C                 	db	108	;'l'
  2152  007CC7  64                 	db	100	;'d'
  2153  007CC8  20                 	db	32
  2154  007CC9  44                 	db	68	;'D'
  2155  007CCA  61                 	db	97	;'a'
  2156  007CCB  74                 	db	116	;'t'
  2157  007CCC  65                 	db	101	;'e'
  2158  007CCD  2F                 	db	47
  2159  007CCE  54                 	db	84	;'T'
  2160  007CCF  69                 	db	105	;'i'
  2161  007CD0  6D                 	db	109	;'m'
  2162  007CD1  65                 	db	101	;'e'
  2163  007CD2  00                 	db	0
  2164  007CD3                     STR_112:
  2165  007CD3  20                 	db	32
  2166  007CD4  20                 	db	32
  2167  007CD5  20                 	db	32
  2168  007CD6  20                 	db	32
  2169  007CD7  45                 	db	69	;'E'
  2170  007CD8  6E                 	db	110	;'n'
  2171  007CD9  61                 	db	97	;'a'
  2172  007CDA  62                 	db	98	;'b'
  2173  007CDB  6C                 	db	108	;'l'
  2174  007CDC  65                 	db	101	;'e'
  2175  007CDD  64                 	db	100	;'d'
  2176  007CDE  20                 	db	32
  2177  007CDF  20                 	db	32
  2178  007CE0  20                 	db	32
  2179  007CE1  00                 	db	0
  2180  007CE2                     STR_113:
  2181  007CE2  20                 	db	32
  2182  007CE3  20                 	db	32
  2183  007CE4  20                 	db	32
  2184  007CE5  20                 	db	32
  2185  007CE6  44                 	db	68	;'D'
  2186  007CE7  69                 	db	105	;'i'
  2187  007CE8  73                 	db	115	;'s'
  2188  007CE9  61                 	db	97	;'a'
  2189  007CEA  62                 	db	98	;'b'
  2190  007CEB  6C                 	db	108	;'l'
  2191  007CEC  65                 	db	101	;'e'
  2192  007CED  64                 	db	100	;'d'
  2193  007CEE  20                 	db	32
  2194  007CEF  20                 	db	32
  2195  007CF0  00                 	db	0
  2196  007CF1                     STR_172:
  2197  007CF1  6D                 	db	109	;'m'
  2198  007CF2  61                 	db	97	;'a'
  2199  007CF3  63                 	db	99	;'c'
  2200  007CF4  20                 	db	32
  2201  007CF5  73                 	db	115	;'s'
  2202  007CF6  65                 	db	101	;'e'
  2203  007CF7  74                 	db	116	;'t'
  2204  007CF8  20                 	db	32
  2205  007CF9  61                 	db	97	;'a'
  2206  007CFA  64                 	db	100	;'d'
  2207  007CFB  72                 	db	114	;'r'
  2208  007CFC  20                 	db	32
  2209  007CFD  6F                 	db	111	;'o'
  2210  007CFE  6E                 	db	110	;'n'
  2211  007CFF  00                 	db	0
  2212  007D00                     STR_2:
  2213  007D00  20                 	db	32
  2214  007D01  20                 	db	32
  2215  007D02  20                 	db	32
  2216  007D03  4C                 	db	76	;'L'
  2217  007D04  6F                 	db	111	;'o'
  2218  007D05  52                 	db	82	;'R'
  2219  007D06  61                 	db	97	;'a'
  2220  007D07  20                 	db	32
  2221  007D08  44                 	db	68	;'D'
  2222  007D09  65                 	db	101	;'e'
  2223  007D0A  6D                 	db	109	;'m'
  2224  007D0B  6F                 	db	111	;'o'
  2225  007D0C  20                 	db	32
  2226  007D0D  20                 	db	32
  2227  007D0E  00                 	db	0
  2228  007D0F                     STR_3:
  2229  007D0F  20                 	db	32
  2230  007D10  56                 	db	86	;'V'
  2231  007D11  20                 	db	32
  2232  007D12  31                 	db	49	;'1'
  2233  007D13  2E                 	db	46
  2234  007D14  30                 	db	48	;'0'
  2235  007D15  2E                 	db	46
  2236  007D16  31                 	db	49	;'1'
  2237  007D17  20                 	db	32
  2238  007D18  43                 	db	67	;'C'
  2239  007D19  6F                 	db	111	;'o'
  2240  007D1A  64                 	db	100	;'d'
  2241  007D1B  65                 	db	101	;'e'
  2242  007D1C  20                 	db	32
  2243  007D1D  00                 	db	0
  2244  007D1E                     STR_1:
  2245  007D1E  4D                 	db	77	;'M'
  2246  007D1F  69                 	db	105	;'i'
  2247  007D20  63                 	db	99	;'c'
  2248  007D21  72                 	db	114	;'r'
  2249  007D22  6F                 	db	111	;'o'
  2250  007D23  63                 	db	99	;'c'
  2251  007D24  68                 	db	104	;'h'
  2252  007D25  69                 	db	105	;'i'
  2253  007D26  70                 	db	112	;'p'
  2254  007D27  20                 	db	32
  2255  007D28  4D                 	db	77	;'M'
  2256  007D29  6F                 	db	111	;'o'
  2257  007D2A  74                 	db	116	;'t'
  2258  007D2B  65                 	db	101	;'e'
  2259  007D2C  00                 	db	0
  2260  007D2D                     STR_74:
  2261  007D2D  6D                 	db	109	;'m'
  2262  007D2E  61                 	db	97	;'a'
  2263  007D2F  63                 	db	99	;'c'
  2264  007D30  20                 	db	32
  2265  007D31  74                 	db	116	;'t'
  2266  007D32  78                 	db	120	;'x'
  2267  007D33  20                 	db	32
  2268  007D34  75                 	db	117	;'u'
  2269  007D35  6E                 	db	110	;'n'
  2270  007D36  63                 	db	99	;'c'
  2271  007D37  6E                 	db	110	;'n'
  2272  007D38  66                 	db	102	;'f'
  2273  007D39  20                 	db	32
  2274  007D3A  00                 	db	0
  2275  007D3B                     STR_43:
  2276  007D3B  6D                 	db	109	;'m'
  2277  007D3C  61                 	db	97	;'a'
  2278  007D3D  63                 	db	99	;'c'
  2279  007D3E  20                 	db	32
  2280  007D3F  6A                 	db	106	;'j'
  2281  007D40  6F                 	db	111	;'o'
  2282  007D41  69                 	db	105	;'i'
  2283  007D42  6E                 	db	110	;'n'
  2284  007D43  20                 	db	32
  2285  007D44  6F                 	db	111	;'o'
  2286  007D45  74                 	db	116	;'t'
  2287  007D46  61                 	db	97	;'a'
  2288  007D47  61                 	db	97	;'a'
  2289  007D48  00                 	db	0
  2290  007D49                     STR_57:
  2291  007D49  69                 	db	105	;'i'
  2292  007D4A  6E                 	db	110	;'n'
  2293  007D4B  76                 	db	118	;'v'
  2294  007D4C  61                 	db	97	;'a'
  2295  007D4D  6C                 	db	108	;'l'
  2296  007D4E  69                 	db	105	;'i'
  2297  007D4F  64                 	db	100	;'d'
  2298  007D50  5F                 	db	95	;'_'
  2299  007D51  70                 	db	112	;'p'
  2300  007D52  61                 	db	97	;'a'
  2301  007D53  72                 	db	114	;'r'
  2302  007D54  61                 	db	97	;'a'
  2303  007D55  6D                 	db	109	;'m'
  2304  007D56  00                 	db	0
  2305  007D57                     STR_45:
  2306  007D57  6B                 	db	107	;'k'
  2307  007D58  65                 	db	101	;'e'
  2308  007D59  79                 	db	121	;'y'
  2309  007D5A  73                 	db	115	;'s'
  2310  007D5B  5F                 	db	95	;'_'
  2311  007D5C  6E                 	db	110	;'n'
  2312  007D5D  6F                 	db	111	;'o'
  2313  007D5E  74                 	db	116	;'t'
  2314  007D5F  5F                 	db	95	;'_'
  2315  007D60  69                 	db	105	;'i'
  2316  007D61  6E                 	db	110	;'n'
  2317  007D62  69                 	db	105	;'i'
  2318  007D63  74                 	db	116	;'t'
  2319  007D64  00                 	db	0
  2320  007D65                     STR_82:
  2321  007D65  54                 	db	84	;'T'
  2322  007D66  68                 	db	104	;'h'
  2323  007D67  72                 	db	114	;'r'
  2324  007D68  6F                 	db	111	;'o'
  2325  007D69  75                 	db	117	;'u'
  2326  007D6A  20                 	db	32
  2327  007D6B  50                 	db	80	;'P'
  2328  007D6C  6F                 	db	111	;'o'
  2329  007D6D  72                 	db	114	;'r'
  2330  007D6E  74                 	db	116	;'t'
  2331  007D6F  23                 	db	35
  2332  007D70  20                 	db	32
  2333  007D71  00                 	db	0
  2334  007D72                     STR_73:
  2335  007D72  4C                 	db	76	;'L'
  2336  007D73  3A                 	db	58	;':'
  2337  007D74  20                 	db	32
  2338  007D75  20                 	db	32
  2339  007D76  20                 	db	32
  2340  007D77  20                 	db	32
  2341  007D78  20                 	db	32
  2342  007D79  20                 	db	32
  2343  007D7A  20                 	db	32
  2344  007D7B  54                 	db	84	;'T'
  2345  007D7C  3A                 	db	58	;':'
  2346  007D7D  20                 	db	32
  2347  007D7E  00                 	db	0
  2348  007D7F                     STR_164:
  2349  007D7F  6D                 	db	109	;'m'
  2350  007D80  61                 	db	97	;'a'
  2351  007D81  63                 	db	99	;'c'
  2352  007D82  20                 	db	32
  2353  007D83  73                 	db	115	;'s'
  2354  007D84  65                 	db	101	;'e'
  2355  007D85  74                 	db	116	;'t'
  2356  007D86  20                 	db	32
  2357  007D87  64                 	db	100	;'d'
  2358  007D88  72                 	db	114	;'r'
  2359  007D89  20                 	db	32
  2360  007D8A  30                 	db	48	;'0'
  2361  007D8B  00                 	db	0
  2362  007D8C                     STR_165:
  2363  007D8C  6D                 	db	109	;'m'
  2364  007D8D  61                 	db	97	;'a'
  2365  007D8E  63                 	db	99	;'c'
  2366  007D8F  20                 	db	32
  2367  007D90  73                 	db	115	;'s'
  2368  007D91  65                 	db	101	;'e'
  2369  007D92  74                 	db	116	;'t'
  2370  007D93  20                 	db	32
  2371  007D94  64                 	db	100	;'d'
  2372  007D95  72                 	db	114	;'r'
  2373  007D96  20                 	db	32
  2374  007D97  31                 	db	49	;'1'
  2375  007D98  00                 	db	0
  2376  007D99                     STR_166:
  2377  007D99  6D                 	db	109	;'m'
  2378  007D9A  61                 	db	97	;'a'
  2379  007D9B  63                 	db	99	;'c'
  2380  007D9C  20                 	db	32
  2381  007D9D  73                 	db	115	;'s'
  2382  007D9E  65                 	db	101	;'e'
  2383  007D9F  74                 	db	116	;'t'
  2384  007DA0  20                 	db	32
  2385  007DA1  64                 	db	100	;'d'
  2386  007DA2  72                 	db	114	;'r'
  2387  007DA3  20                 	db	32
  2388  007DA4  32                 	db	50	;'2'
  2389  007DA5  00                 	db	0
  2390  007DA6                     STR_167:
  2391  007DA6  6D                 	db	109	;'m'
  2392  007DA7  61                 	db	97	;'a'
  2393  007DA8  63                 	db	99	;'c'
  2394  007DA9  20                 	db	32
  2395  007DAA  73                 	db	115	;'s'
  2396  007DAB  65                 	db	101	;'e'
  2397  007DAC  74                 	db	116	;'t'
  2398  007DAD  20                 	db	32
  2399  007DAE  64                 	db	100	;'d'
  2400  007DAF  72                 	db	114	;'r'
  2401  007DB0  20                 	db	32
  2402  007DB1  33                 	db	51	;'3'
  2403  007DB2  00                 	db	0
  2404  007DB3                     STR_168:
  2405  007DB3  6D                 	db	109	;'m'
  2406  007DB4  61                 	db	97	;'a'
  2407  007DB5  63                 	db	99	;'c'
  2408  007DB6  20                 	db	32
  2409  007DB7  73                 	db	115	;'s'
  2410  007DB8  65                 	db	101	;'e'
  2411  007DB9  74                 	db	116	;'t'
  2412  007DBA  20                 	db	32
  2413  007DBB  64                 	db	100	;'d'
  2414  007DBC  72                 	db	114	;'r'
  2415  007DBD  20                 	db	32
  2416  007DBE  34                 	db	52	;'4'
  2417  007DBF  00                 	db	0
  2418  007DC0                     STR_169:
  2419  007DC0  6D                 	db	109	;'m'
  2420  007DC1  61                 	db	97	;'a'
  2421  007DC2  63                 	db	99	;'c'
  2422  007DC3  20                 	db	32
  2423  007DC4  73                 	db	115	;'s'
  2424  007DC5  65                 	db	101	;'e'
  2425  007DC6  74                 	db	116	;'t'
  2426  007DC7  20                 	db	32
  2427  007DC8  64                 	db	100	;'d'
  2428  007DC9  72                 	db	114	;'r'
  2429  007DCA  20                 	db	32
  2430  007DCB  35                 	db	53	;'5'
  2431  007DCC  00                 	db	0
  2432  007DCD                     STR_170:
  2433  007DCD  6D                 	db	109	;'m'
  2434  007DCE  61                 	db	97	;'a'
  2435  007DCF  63                 	db	99	;'c'
  2436  007DD0  20                 	db	32
  2437  007DD1  73                 	db	115	;'s'
  2438  007DD2  65                 	db	101	;'e'
  2439  007DD3  74                 	db	116	;'t'
  2440  007DD4  20                 	db	32
  2441  007DD5  64                 	db	100	;'d'
  2442  007DD6  72                 	db	114	;'r'
  2443  007DD7  20                 	db	32
  2444  007DD8  36                 	db	54	;'6'
  2445  007DD9  00                 	db	0
  2446  007DDA                     STR_171:
  2447  007DDA  6D                 	db	109	;'m'
  2448  007DDB  61                 	db	97	;'a'
  2449  007DDC  63                 	db	99	;'c'
  2450  007DDD  20                 	db	32
  2451  007DDE  73                 	db	115	;'s'
  2452  007DDF  65                 	db	101	;'e'
  2453  007DE0  74                 	db	116	;'t'
  2454  007DE1  20                 	db	32
  2455  007DE2  64                 	db	100	;'d'
  2456  007DE3  72                 	db	114	;'r'
  2457  007DE4  20                 	db	32
  2458  007DE5  37                 	db	55	;'7'
  2459  007DE6  00                 	db	0
  2460  007DE7                     STR_41:
  2461  007DE7  6D                 	db	109	;'m'
  2462  007DE8  61                 	db	97	;'a'
  2463  007DE9  63                 	db	99	;'c'
  2464  007DEA  20                 	db	32
  2465  007DEB  6A                 	db	106	;'j'
  2466  007DEC  6F                 	db	111	;'o'
  2467  007DED  69                 	db	105	;'i'
  2468  007DEE  6E                 	db	110	;'n'
  2469  007DEF  20                 	db	32
  2470  007DF0  61                 	db	97	;'a'
  2471  007DF1  62                 	db	98	;'b'
  2472  007DF2  70                 	db	112	;'p'
  2473  007DF3  00                 	db	0
  2474  007DF4                     STR_10:
  2475  007DF4  42                 	db	66	;'B'
  2476  007DF5  75                 	db	117	;'u'
  2477  007DF6  74                 	db	116	;'t'
  2478  007DF7  74                 	db	116	;'t'
  2479  007DF8  6F                 	db	111	;'o'
  2480  007DF9  6E                 	db	110	;'n'
  2481  007DFA  20                 	db	32
  2482  007DFB  54                 	db	84	;'T'
  2483  007DFC  65                 	db	101	;'e'
  2484  007DFD  73                 	db	115	;'s'
  2485  007DFE  74                 	db	116	;'t'
  2486  007DFF  3A                 	db	58	;':'
  2487  007E00  00                 	db	0
  2488  007E01                     STR_13:
  2489  007E01  42                 	db	66	;'B'
  2490  007E02  75                 	db	117	;'u'
  2491  007E03  74                 	db	116	;'t'
  2492  007E04  74                 	db	116	;'t'
  2493  007E05  6F                 	db	111	;'o'
  2494  007E06  6E                 	db	110	;'n'
  2495  007E07  31                 	db	49	;'1'
  2496  007E08  20                 	db	32
  2497  007E09  50                 	db	80	;'P'
  2498  007E0A  41                 	db	65	;'A'
  2499  007E0B  53                 	db	83	;'S'
  2500  007E0C  53                 	db	83	;'S'
  2501  007E0D  00                 	db	0
  2502  007E0E                     STR_14:
  2503  007E0E  42                 	db	66	;'B'
  2504  007E0F  75                 	db	117	;'u'
  2505  007E10  74                 	db	116	;'t'
  2506  007E11  74                 	db	116	;'t'
  2507  007E12  6F                 	db	111	;'o'
  2508  007E13  6E                 	db	110	;'n'
  2509  007E14  32                 	db	50	;'2'
  2510  007E15  20                 	db	32
  2511  007E16  50                 	db	80	;'P'
  2512  007E17  41                 	db	65	;'A'
  2513  007E18  53                 	db	83	;'S'
  2514  007E19  53                 	db	83	;'S'
  2515  007E1A  00                 	db	0
  2516  007E1B                     STR_12:
  2517  007E1B  50                 	db	80	;'P'
  2518  007E1C  72                 	db	114	;'r'
  2519  007E1D  65                 	db	101	;'e'
  2520  007E1E  73                 	db	115	;'s'
  2521  007E1F  73                 	db	115	;'s'
  2522  007E20  20                 	db	32
  2523  007E21  42                 	db	66	;'B'
  2524  007E22  75                 	db	117	;'u'
  2525  007E23  74                 	db	116	;'t'
  2526  007E24  74                 	db	116	;'t'
  2527  007E25  6F                 	db	111	;'o'
  2528  007E26  6E                 	db	110	;'n'
  2529  007E27  00                 	db	0
  2530  007E28                     STR_189:
  2531  007E28  55                 	db	85	;'U'
  2532  007E29  53                 	db	83	;'S'
  2533  007E2A  42                 	db	66	;'B'
  2534  007E2B  20                 	db	32
  2535  007E2C  48                 	db	72	;'H'
  2536  007E2D  61                 	db	97	;'a'
  2537  007E2E  6E                 	db	110	;'n'
  2538  007E2F  64                 	db	100	;'d'
  2539  007E30  6C                 	db	108	;'l'
  2540  007E31  65                 	db	101	;'e'
  2541  007E32  72                 	db	114	;'r'
  2542  007E33  00                 	db	0
  2543  007E34                     STR_72:
  2544  007E34  4F                 	db	79	;'O'
  2545  007E35  6E                 	db	110	;'n'
  2546  007E36  20                 	db	32
  2547  007E37  50                 	db	80	;'P'
  2548  007E38  6F                 	db	111	;'o'
  2549  007E39  72                 	db	114	;'r'
  2550  007E3A  74                 	db	116	;'t'
  2551  007E3B  20                 	db	32
  2552  007E3C  23                 	db	35
  2553  007E3D  3A                 	db	58	;':'
  2554  007E3E  20                 	db	32
  2555  007E3F  00                 	db	0
  2556  007E40                     STR_87:
  2557  007E40  54                 	db	84	;'T'
  2558  007E41  78                 	db	120	;'x'
  2559  007E42  20                 	db	32
  2560  007E43  50                 	db	80	;'P'
  2561  007E44  6F                 	db	111	;'o'
  2562  007E45  72                 	db	114	;'r'
  2563  007E46  74                 	db	116	;'t'
  2564  007E47  20                 	db	32
  2565  007E48  23                 	db	35
  2566  007E49  3A                 	db	58	;':'
  2567  007E4A  20                 	db	32
  2568  007E4B  00                 	db	0
  2569  007E4C                     STR_86:
  2570  007E4C  53                 	db	83	;'S'
  2571  007E4D  65                 	db	101	;'e'
  2572  007E4E  6E                 	db	110	;'n'
  2573  007E4F  74                 	db	116	;'t'
  2574  007E50  20                 	db	32
  2575  007E51  44                 	db	68	;'D'
  2576  007E52  61                 	db	97	;'a'
  2577  007E53  74                 	db	116	;'t'
  2578  007E54  61                 	db	97	;'a'
  2579  007E55  3A                 	db	58	;':'
  2580  007E56  20                 	db	32
  2581  007E57  00                 	db	0
  2582  007E58                     STR_136:
  2583  007E58  44                 	db	68	;'D'
  2584  007E59  61                 	db	97	;'a'
  2585  007E5A  74                 	db	116	;'t'
  2586  007E5B  61                 	db	97	;'a'
  2587  007E5C  20                 	db	32
  2588  007E5D  52                 	db	82	;'R'
  2589  007E5E  61                 	db	97	;'a'
  2590  007E5F  74                 	db	116	;'t'
  2591  007E60  65                 	db	101	;'e'
  2592  007E61  3A                 	db	58	;':'
  2593  007E62  20                 	db	32
  2594  007E63  00                 	db	0
  2595  007E64                     STR_85:
  2596  007E64  6D                 	db	109	;'m'
  2597  007E65  61                 	db	97	;'a'
  2598  007E66  63                 	db	99	;'c'
  2599  007E67  20                 	db	32
  2600  007E68  74                 	db	116	;'t'
  2601  007E69  78                 	db	120	;'x'
  2602  007E6A  20                 	db	32
  2603  007E6B  63                 	db	99	;'c'
  2604  007E6C  6E                 	db	110	;'n'
  2605  007E6D  66                 	db	102	;'f'
  2606  007E6E  20                 	db	32
  2607  007E6F  00                 	db	0
  2608  007E70                     STR_8:
  2609  007E70  4D                 	db	77	;'M'
  2610  007E71  61                 	db	97	;'a'
  2611  007E72  72                 	db	114	;'r'
  2612  007E73  20                 	db	32
  2613  007E74  33                 	db	51	;'3'
  2614  007E75  30                 	db	48	;'0'
  2615  007E76  20                 	db	32
  2616  007E77  32                 	db	50	;'2'
  2617  007E78  30                 	db	48	;'0'
  2618  007E79  31                 	db	49	;'1'
  2619  007E7A  38                 	db	56	;'8'
  2620  007E7B  00                 	db	0
  2621  007E7C                     STR_11:
  2622  007E7C  42                 	db	66	;'B'
  2623  007E7D  75                 	db	117	;'u'
  2624  007E7E  74                 	db	116	;'t'
  2625  007E7F  74                 	db	116	;'t'
  2626  007E80  6F                 	db	111	;'o'
  2627  007E81  6E                 	db	110	;'n'
  2628  007E82  20                 	db	32
  2629  007E83  46                 	db	70	;'F'
  2630  007E84  41                 	db	65	;'A'
  2631  007E85  49                 	db	73	;'I'
  2632  007E86  4C                 	db	76	;'L'
  2633  007E87  00                 	db	0
  2634  007E88                     STR_61:
  2635  007E88  4F                 	db	79	;'O'
  2636  007E89  54                 	db	84	;'T'
  2637  007E8A  41                 	db	65	;'A'
  2638  007E8B  41                 	db	65	;'A'
  2639  007E8C  20                 	db	32
  2640  007E8D  4A                 	db	74	;'J'
  2641  007E8E  6F                 	db	111	;'o'
  2642  007E8F  69                 	db	105	;'i'
  2643  007E90  6E                 	db	110	;'n'
  2644  007E91  20                 	db	32
  2645  007E92  00                 	db	0
  2646  007E93                     STR_59:
  2647  007E93  6E                 	db	110	;'n'
  2648  007E94  6F                 	db	111	;'o'
  2649  007E95  5F                 	db	95	;'_'
  2650  007E96  66                 	db	102	;'f'
  2651  007E97  72                 	db	114	;'r'
  2652  007E98  65                 	db	101	;'e'
  2653  007E99  65                 	db	101	;'e'
  2654  007E9A  5F                 	db	95	;'_'
  2655  007E9B  63                 	db	99	;'c'
  2656  007E9C  68                 	db	104	;'h'
  2657  007E9D  00                 	db	0
  2658  007E9E                     STR_51:
  2659  007E9E  53                 	db	83	;'S'
  2660  007E9F  75                 	db	117	;'u'
  2661  007EA0  63                 	db	99	;'c'
  2662  007EA1  63                 	db	99	;'c'
  2663  007EA2  65                 	db	101	;'e'
  2664  007EA3  73                 	db	115	;'s'
  2665  007EA4  73                 	db	115	;'s'
  2666  007EA5  66                 	db	102	;'f'
  2667  007EA6  75                 	db	117	;'u'
  2668  007EA7  6C                 	db	108	;'l'
  2669  007EA8  00                 	db	0
  2670  007EA9                     STR_68:
  2671  007EA9  6D                 	db	109	;'m'
  2672  007EAA  61                 	db	97	;'a'
  2673  007EAB  63                 	db	99	;'c'
  2674  007EAC  20                 	db	32
  2675  007EAD  67                 	db	103	;'g'
  2676  007EAE  65                 	db	101	;'e'
  2677  007EAF  74                 	db	116	;'t'
  2678  007EB0  20                 	db	32
  2679  007EB1  64                 	db	100	;'d'
  2680  007EB2  72                 	db	114	;'r'
  2681  007EB3  00                 	db	0
  2682  007EB4                     STR_46:
  2683  007EB4  56                 	db	86	;'V'
  2684  007EB5  61                 	db	97	;'a'
  2685  007EB6  6C                 	db	108	;'l'
  2686  007EB7  69                 	db	105	;'i'
  2687  007EB8  64                 	db	100	;'d'
  2688  007EB9  20                 	db	32
  2689  007EBA  4B                 	db	75	;'K'
  2690  007EBB  65                 	db	101	;'e'
  2691  007EBC  79                 	db	121	;'y'
  2692  007EBD  73                 	db	115	;'s'
  2693  007EBE  00                 	db	0
  2694  007EBF                     STR_15:
  2695  007EBF  43                 	db	67	;'C'
  2696  007EC0  6F                 	db	111	;'o'
  2697  007EC1  6D                 	db	109	;'m'
  2698  007EC2  6D                 	db	109	;'m'
  2699  007EC3  20                 	db	32
  2700  007EC4  54                 	db	84	;'T'
  2701  007EC5  65                 	db	101	;'e'
  2702  007EC6  73                 	db	115	;'s'
  2703  007EC7  74                 	db	116	;'t'
  2704  007EC8  3A                 	db	58	;':'
  2705  007EC9  00                 	db	0
  2706  007ECA                     STR_106:
  2707  007ECA  52                 	db	82	;'R'
  2708  007ECB  78                 	db	120	;'x'
  2709  007ECC  20                 	db	32
  2710  007ECD  50                 	db	80	;'P'
  2711  007ECE  6F                 	db	111	;'o'
  2712  007ECF  72                 	db	114	;'r'
  2713  007ED0  74                 	db	116	;'t'
  2714  007ED1  23                 	db	35
  2715  007ED2  20                 	db	32
  2716  007ED3  00                 	db	0
  2717  007ED4                     STR_50:
  2718  007ED4  41                 	db	65	;'A'
  2719  007ED5  42                 	db	66	;'B'
  2720  007ED6  50                 	db	80	;'P'
  2721  007ED7  20                 	db	32
  2722  007ED8  4A                 	db	74	;'J'
  2723  007ED9  6F                 	db	111	;'o'
  2724  007EDA  69                 	db	105	;'i'
  2725  007EDB  6E                 	db	110	;'n'
  2726  007EDC  20                 	db	32
  2727  007EDD  00                 	db	0
  2728  007EDE                     STR_24:
  2729  007EDE  4D                 	db	77	;'M'
  2730  007EDF  4F                 	db	79	;'O'
  2731  007EE0  54                 	db	84	;'T'
  2732  007EE1  45                 	db	69	;'E'
  2733  007EE2  20                 	db	32
  2734  007EE3  4D                 	db	77	;'M'
  2735  007EE4  6F                 	db	111	;'o'
  2736  007EE5  64                 	db	100	;'d'
  2737  007EE6  65                 	db	101	;'e'
  2738  007EE7  00                 	db	0
  2739  007EE8                     STR_64:
  2740  007EE8  4F                 	db	79	;'O'
  2741  007EE9  54                 	db	84	;'T'
  2742  007EEA  41                 	db	65	;'A'
  2743  007EEB  41                 	db	65	;'A'
  2744  007EEC  20                 	db	32
  2745  007EED  4A                 	db	74	;'J'
  2746  007EEE  6F                 	db	111	;'o'
  2747  007EEF  69                 	db	105	;'i'
  2748  007EF0  6E                 	db	110	;'n'
  2749  007EF1  00                 	db	0
  2750  007EF2                     STR_52:
  2751  007EF2  6D                 	db	109	;'m'
  2752  007EF3  61                 	db	97	;'a'
  2753  007EF4  63                 	db	99	;'c'
  2754  007EF5  20                 	db	32
  2755  007EF6  72                 	db	114	;'r'
  2756  007EF7  65                 	db	101	;'e'
  2757  007EF8  73                 	db	115	;'s'
  2758  007EF9  65                 	db	101	;'e'
  2759  007EFA  74                 	db	116	;'t'
  2760  007EFB  00                 	db	0
  2761  007EFC                     STR_30:
  2762  007EFC  73                 	db	115	;'s'
  2763  007EFD  79                 	db	121	;'y'
  2764  007EFE  73                 	db	115	;'s'
  2765  007EFF  20                 	db	32
  2766  007F00  72                 	db	114	;'r'
  2767  007F01  65                 	db	101	;'e'
  2768  007F02  73                 	db	115	;'s'
  2769  007F03  65                 	db	101	;'e'
  2770  007F04  74                 	db	116	;'t'
  2771  007F05  00                 	db	0
  2772  007F06                     STR_16:
  2773  007F06  4C                 	db	76	;'L'
  2774  007F07  45                 	db	69	;'E'
  2775  007F08  44                 	db	68	;'D'
  2776  007F09  20                 	db	32
  2777  007F0A  54                 	db	84	;'T'
  2778  007F0B  65                 	db	101	;'e'
  2779  007F0C  73                 	db	115	;'s'
  2780  007F0D  74                 	db	116	;'t'
  2781  007F0E  3A                 	db	58	;':'
  2782  007F0F  00                 	db	0
  2783  007F10                     STR_187:
  2784  007F10  43                 	db	67	;'C'
  2785  007F11  44                 	db	68	;'D'
  2786  007F12  43                 	db	67	;'C'
  2787  007F13  20                 	db	32
  2788  007F14  4D                 	db	77	;'M'
  2789  007F15  6F                 	db	111	;'o'
  2790  007F16  64                 	db	100	;'d'
  2791  007F17  65                 	db	101	;'e'
  2792  007F18  00                 	db	0
  2793  007F19                     STR_47:
  2794  007F19  52                 	db	82	;'R'
  2795  007F1A  65                 	db	101	;'e'
  2796  007F1B  71                 	db	113	;'q'
  2797  007F1C  75                 	db	117	;'u'
  2798  007F1D  69                 	db	105	;'i'
  2799  007F1E  72                 	db	114	;'r'
  2800  007F1F  65                 	db	101	;'e'
  2801  007F20  64                 	db	100	;'d'
  2802  007F21  00                 	db	0
  2803  007F22                     STR_49:
  2804  007F22  61                 	db	97	;'a'
  2805  007F23  63                 	db	99	;'c'
  2806  007F24  63                 	db	99	;'c'
  2807  007F25  65                 	db	101	;'e'
  2808  007F26  70                 	db	112	;'p'
  2809  007F27  74                 	db	116	;'t'
  2810  007F28  65                 	db	101	;'e'
  2811  007F29  64                 	db	100	;'d'
  2812  007F2A  00                 	db	0
  2813  007F2B                     STR_173:
  2814  007F2B  6D                 	db	109	;'m'
  2815  007F2C  61                 	db	97	;'a'
  2816  007F2D  63                 	db	99	;'c'
  2817  007F2E  20                 	db	32
  2818  007F2F  73                 	db	115	;'s'
  2819  007F30  61                 	db	97	;'a'
  2820  007F31  76                 	db	118	;'v'
  2821  007F32  65                 	db	101	;'e'
  2822  007F33  00                 	db	0
  2823  007F34                     STR_25:
  2824  007F34  53                 	db	83	;'S'
  2825  007F35  74                 	db	116	;'t'
  2826  007F36  61                 	db	97	;'a'
  2827  007F37  72                 	db	114	;'r'
  2828  007F38  74                 	db	116	;'t'
  2829  007F39  69                 	db	105	;'i'
  2830  007F3A  6E                 	db	110	;'n'
  2831  007F3B  67                 	db	103	;'g'
  2832  007F3C  00                 	db	0
  2833  007F3D                     STR_4:
  2834  007F3D  4D                 	db	77	;'M'
  2835  007F3E  6F                 	db	111	;'o'
  2836  007F3F  54                 	db	84	;'T'
  2837  007F40  65                 	db	101	;'e'
  2838  007F41  20                 	db	32
  2839  007F42  76                 	db	118	;'v'
  2840  007F43  20                 	db	32
  2841  007F44  2E                 	db	46
  2842  007F45  00                 	db	0
  2843  007F46                     STR_9:
  2844  007F46  31                 	db	49	;'1'
  2845  007F47  37                 	db	55	;'7'
  2846  007F48  3A                 	db	58	;':'
  2847  007F49  31                 	db	49	;'1'
  2848  007F4A  37                 	db	55	;'7'
  2849  007F4B  3A                 	db	58	;':'
  2850  007F4C  33                 	db	51	;'3'
  2851  007F4D  38                 	db	56	;'8'
  2852  007F4E  00                 	db	0
  2853  007F4F  52                 	db	82	;'R'
  2854  007F50  46                 	db	70	;'F'
  2855  007F51  20                 	db	32
  2856  007F52  54                 	db	84	;'T'
  2857  007F53  65                 	db	101	;'e'
  2858  007F54  73                 	db	115	;'s'
  2859  007F55  74                 	db	116	;'t'
  2860  007F56  3A                 	db	58	;':'
  2861  007F57  00                 	db	0
  2862  007F58                     STR_17:
  2863  007F58  41                 	db	65	;'A'
  2864  007F59  44                 	db	68	;'D'
  2865  007F5A  43                 	db	67	;'C'
  2866  007F5B  20                 	db	32
  2867  007F5C  54                 	db	84	;'T'
  2868  007F5D  65                 	db	101	;'e'
  2869  007F5E  73                 	db	115	;'s'
  2870  007F5F  74                 	db	116	;'t'
  2871  007F60  00                 	db	0
  2872  007F61                     STR_188:
  2873  007F61  43                 	db	67	;'C'
  2874  007F62  6F                 	db	111	;'o'
  2875  007F63  6D                 	db	109	;'m'
  2876  007F64  6D                 	db	109	;'m'
  2877  007F65  61                 	db	97	;'a'
  2878  007F66  6E                 	db	110	;'n'
  2879  007F67  64                 	db	100	;'d'
  2880  007F68  00                 	db	0
  2881  007F69                     STR_18:
  2882  007F69  54                 	db	84	;'T'
  2883  007F6A  65                 	db	101	;'e'
  2884  007F6B  6D                 	db	109	;'m'
  2885  007F6C  70                 	db	112	;'p'
  2886  007F6D  20                 	db	32
  2887  007F6E  20                 	db	32
  2888  007F6F  3D                 	db	61	;'='
  2889  007F70  00                 	db	0
  2890  007F71                     STR_19:
  2891  007F71  4C                 	db	76	;'L'
  2892  007F72  69                 	db	105	;'i'
  2893  007F73  67                 	db	103	;'g'
  2894  007F74  68                 	db	104	;'h'
  2895  007F75  74                 	db	116	;'t'
  2896  007F76  20                 	db	32
  2897  007F77  3D                 	db	61	;'='
  2898  007F78  00                 	db	0
  2899  007F79                     STR_117:
  2900  007F79  54                 	db	84	;'T'
  2901  007F7A  65                 	db	101	;'e'
  2902  007F7B  6D                 	db	109	;'m'
  2903  007F7C  70                 	db	112	;'p'
  2904  007F7D  20                 	db	32
  2905  007F7E  3A                 	db	58	;':'
  2906  007F7F  00                 	db	0
  2907  007F80                     STR_116:
  2908  007F80  4C                 	db	76	;'L'
  2909  007F81  69                 	db	105	;'i'
  2910  007F82  67                 	db	103	;'g'
  2911  007F83  68                 	db	104	;'h'
  2912  007F84  74                 	db	116	;'t'
  2913  007F85  3A                 	db	58	;':'
  2914  007F86  00                 	db	0
  2915  007F87                     STR_121:
  2916  007F87  45                 	db	69	;'E'
  2917  007F88  76                 	db	118	;'v'
  2918  007F89  65                 	db	101	;'e'
  2919  007F8A  72                 	db	114	;'r'
  2920  007F8B  79                 	db	121	;'y'
  2921  007F8C  3A                 	db	58	;':'
  2922  007F8D  00                 	db	0
  2923  007F8E                     STR_65:
  2924  007F8E  44                 	db	68	;'D'
  2925  007F8F  65                 	db	101	;'e'
  2926  007F90  6E                 	db	110	;'n'
  2927  007F91  69                 	db	105	;'i'
  2928  007F92  65                 	db	101	;'e'
  2929  007F93  64                 	db	100	;'d'
  2930  007F94  00                 	db	0
  2931  007F95                     STR_63:
  2932  007F95  64                 	db	100	;'d'
  2933  007F96  65                 	db	101	;'e'
  2934  007F97  6E                 	db	110	;'n'
  2935  007F98  69                 	db	105	;'i'
  2936  007F99  65                 	db	101	;'e'
  2937  007F9A  64                 	db	100	;'d'
  2938  007F9B  00                 	db	0
  2939  007F9C                     STR_97:
  2940  007F9C  6E                 	db	110	;'n'
  2941  007F9D  6F                 	db	111	;'o'
  2942  007F9E  5F                 	db	95	;'_'
  2943  007F9F  66                 	db	102	;'f'
  2944  007FA0  72                 	db	114	;'r'
  2945  007FA1  65                 	db	101	;'e'
  2946  007FA2  00                 	db	0
  2947  007FA3                     STR_95:
  2948  007FA3  6D                 	db	109	;'m'
  2949  007FA4  61                 	db	97	;'a'
  2950  007FA5  63                 	db	99	;'c'
  2951  007FA6  5F                 	db	95	;'_'
  2952  007FA7  65                 	db	101	;'e'
  2953  007FA8  72                 	db	114	;'r'
  2954  007FA9  00                 	db	0
  2955  007FAA                     STR_90:
  2956  007FAA  6D                 	db	109	;'m'
  2957  007FAB  61                 	db	97	;'a'
  2958  007FAC  63                 	db	99	;'c'
  2959  007FAD  5F                 	db	95	;'_'
  2960  007FAE  72                 	db	114	;'r'
  2961  007FAF  78                 	db	120	;'x'
  2962  007FB0  00                 	db	0
  2963  007FB1                     STR_93:
  2964  007FB1  6D                 	db	109	;'m'
  2965  007FB2  61                 	db	97	;'a'
  2966  007FB3  63                 	db	99	;'c'
  2967  007FB4  5F                 	db	95	;'_'
  2968  007FB5  74                 	db	116	;'t'
  2969  007FB6  78                 	db	120	;'x'
  2970  007FB7  00                 	db	0
  2971  007FB8                     STR_31:
  2972  007FB8  52                 	db	82	;'R'
  2973  007FB9  4E                 	db	78	;'N'
  2974  007FBA  32                 	db	50	;'2'
  2975  007FBB  34                 	db	52	;'4'
  2976  007FBC  00                 	db	0
  2977  007FBD                     STR_35:
  2978  007FBD  52                 	db	82	;'R'
  2979  007FBE  4E                 	db	78	;'N'
  2980  007FBF  32                 	db	50	;'2'
  2981  007FC0  39                 	db	57	;'9'
  2982  007FC1  00                 	db	0
  2983  007FC2                     STR_122:
  2984  007FC2  4D                 	db	77	;'M'
  2985  007FC3  69                 	db	105	;'i'
  2986  007FC4  6E                 	db	110	;'n'
  2987  007FC5  73                 	db	115	;'s'
  2988  007FC6  00                 	db	0
  2989  007FC7                     STR_138:
  2990  007FC7  20                 	db	32
  2991  007FC8  30                 	db	48	;'0'
  2992  007FC9  20                 	db	32
  2993  007FCA  00                 	db	0
  2994  007FCB                     STR_139:
  2995  007FCB  20                 	db	32
  2996  007FCC  31                 	db	49	;'1'
  2997  007FCD  20                 	db	32
  2998  007FCE  00                 	db	0
  2999  007FCF                     STR_140:
  3000  007FCF  20                 	db	32
  3001  007FD0  32                 	db	50	;'2'
  3002  007FD1  20                 	db	32
  3003  007FD2  00                 	db	0
  3004  007FD3                     STR_141:
  3005  007FD3  20                 	db	32
  3006  007FD4  33                 	db	51	;'3'
  3007  007FD5  20                 	db	32
  3008  007FD6  00                 	db	0
  3009  007FD7                     STR_142:
  3010  007FD7  20                 	db	32
  3011  007FD8  34                 	db	52	;'4'
  3012  007FD9  20                 	db	32
  3013  007FDA  00                 	db	0
  3014  007FDB                     STR_143:
  3015  007FDB  20                 	db	32
  3016  007FDC  35                 	db	53	;'5'
  3017  007FDD  20                 	db	32
  3018  007FDE  00                 	db	0
  3019  007FDF                     STR_146:
  3020  007FDF  20                 	db	32
  3021  007FE0  31                 	db	49	;'1'
  3022  007FE1  30                 	db	48	;'0'
  3023  007FE2  00                 	db	0
  3024  007FE3                     STR_148:
  3025  007FE3  20                 	db	32
  3026  007FE4  33                 	db	51	;'3'
  3027  007FE5  30                 	db	48	;'0'
  3028  007FE6  00                 	db	0
  3029  007FE7                     STR_149:
  3030  007FE7  20                 	db	32
  3031  007FE8  36                 	db	54	;'6'
  3032  007FE9  30                 	db	48	;'0'
  3033  007FEA  00                 	db	0
  3034  007FEB                     STR_147:
  3035  007FEB  20                 	db	32
  3036  007FEC  31                 	db	49	;'1'
  3037  007FED  35                 	db	53	;'5'
  3038  007FEE  00                 	db	0
  3039  007FEF                     STR_128:
  3040  007FEF  4F                 	db	79	;'O'
  3041  007FF0  46                 	db	70	;'F'
  3042  007FF1  46                 	db	70	;'F'
  3043  007FF2  00                 	db	0
  3044  007FF3                     STR_144:
  3045  007FF3  41                 	db	65	;'A'
  3046  007FF4  44                 	db	68	;'D'
  3047  007FF5  52                 	db	82	;'R'
  3048  007FF6  00                 	db	0
  3049  007FF7                     STR_44:
  3050  007FF7  6F                 	db	111	;'o'
  3051  007FF8  6B                 	db	107	;'k'
  3052  007FF9  00                 	db	0
  3053  007FFA                     STR_118:
  3054  007FFA  43                 	db	67	;'C'
  3055  007FFB  00                 	db	0
  3056  007FFC                     STR_21:
  3057  007FFC  7A                 	db	122	;'z'
  3058  007FFD  00                 	db	0
  3059  0000                     
  3060                           ; #config settings
  3061  007FFE  00                 	db	0	; dummy byte at the end
  3062  0000                     
  3063                           	psect	cinit
  3064  004498                     __pcinit:
  3065                           	opt stack 0
  3066  004498                     start_initialization:
  3067                           	opt stack 0
  3068  004498                     __initialization:
  3069                           	opt stack 0
  3070                           
  3071                           ; Initialize objects allocated to BANK1 (3 bytes)
  3072                           ; load TBLPTR registers with __pidataBANK1
  3073  004498  0E98               	movlw	low __pidataBANK1
  3074  00449A  6EF6               	movwf	tblptrl,c
  3075  00449C  0E5C               	movlw	high __pidataBANK1
  3076  00449E  6EF7               	movwf	tblptrh,c
  3077  0044A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3078  0044A2  6EF8               	movwf	tblptru,c
  3079  0044A4  0009               	tblrd		*+	;fetch initializer
  3080  0044A6  CFF5 F1E8          	movff	tablat,__pdataBANK1
  3081  0044AA  0009               	tblrd		*+	;fetch initializer
  3082  0044AC  CFF5 F1E9          	movff	tablat,__pdataBANK1+1
  3083  0044B0  0009               	tblrd		*+	;fetch initializer
  3084  0044B2  CFF5 F1EA          	movff	tablat,__pdataBANK1+2
  3085                           
  3086                           ; Initialize objects allocated to BANK0 (7 bytes)
  3087                           ; load TBLPTR registers with __pidataBANK0
  3088  0044B6  0E4E               	movlw	low __pidataBANK0
  3089  0044B8  6EF6               	movwf	tblptrl,c
  3090  0044BA  0E5C               	movlw	high __pidataBANK0
  3091  0044BC  6EF7               	movwf	tblptrh,c
  3092  0044BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3093  0044C0  6EF8               	movwf	tblptru,c
  3094  0044C2  EE00  F0F9         	lfsr	0,__pdataBANK0
  3095  0044C6  EE10 F007          	lfsr	1,7
  3096  0044CA                     copy_data0:
  3097  0044CA  0009               	tblrd		*+
  3098  0044CC  CFF5 FFEE          	movff	tablat,postinc0
  3099  0044D0  50E5               	movf	postdec1,w,c
  3100  0044D2  50E1               	movf	fsr1l,w,c
  3101  0044D4  E1FA               	bnz	copy_data0
  3102                           
  3103                           ; Initialize objects allocated to COMRAM (1 bytes)
  3104                           ; load TBLPTR registers with __pidataCOMRAM
  3105  0044D6  0E9B               	movlw	low __pidataCOMRAM
  3106  0044D8  6EF6               	movwf	tblptrl,c
  3107  0044DA  0E5C               	movlw	high __pidataCOMRAM
  3108  0044DC  6EF7               	movwf	tblptrh,c
  3109  0044DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3110  0044E0  6EF8               	movwf	tblptru,c
  3111  0044E2  0009               	tblrd		*+	;fetch initializer
  3112  0044E4  CFF5 F05E          	movff	tablat,__pdataCOMRAM
  3113                           
  3114                           ; Clear objects allocated to BANK3 (128 bytes)
  3115  0044E8  EE03  F000         	lfsr	0,__pbssBANK3
  3116  0044EC  0E80               	movlw	128
  3117  0044EE                     clear_0:
  3118  0044EE  6AEE               	clrf	postinc0,c
  3119  0044F0  06E8               	decf	wreg,f,c
  3120  0044F2  E1FD               	bnz	clear_0
  3121                           
  3122                           ; Clear objects allocated to BANK2 (224 bytes)
  3123  0044F4  EE02  F000         	lfsr	0,__pbssBANK2
  3124  0044F8  0EE0               	movlw	224
  3125  0044FA                     clear_1:
  3126  0044FA  6AEE               	clrf	postinc0,c
  3127  0044FC  06E8               	decf	wreg,f,c
  3128  0044FE  E1FD               	bnz	clear_1
  3129                           
  3130                           ; Clear objects allocated to BANK1 (232 bytes)
  3131  004500  EE01  F000         	lfsr	0,__pbssBANK1
  3132  004504  0EE8               	movlw	232
  3133  004506                     clear_2:
  3134  004506  6AEE               	clrf	postinc0,c
  3135  004508  06E8               	decf	wreg,f,c
  3136  00450A  E1FD               	bnz	clear_2
  3137                           
  3138                           ; Clear objects allocated to BANK0 (61 bytes)
  3139  00450C  EE00  F0BC         	lfsr	0,__pbssBANK0
  3140  004510  0E3D               	movlw	61
  3141  004512                     clear_3:
  3142  004512  6AEE               	clrf	postinc0,c
  3143  004514  06E8               	decf	wreg,f,c
  3144  004516  E1FD               	bnz	clear_3
  3145                           
  3146                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3147  004518  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3148                           
  3149                           ; Clear objects allocated to COMRAM (27 bytes)
  3150  00451A  EE00  F042         	lfsr	0,__pbssCOMRAM
  3151  00451E  0E1B               	movlw	27
  3152  004520                     clear_4:
  3153  004520  6AEE               	clrf	postinc0,c
  3154  004522  06E8               	decf	wreg,f,c
  3155  004524  E1FD               	bnz	clear_4
  3156  004526                     end_of_initialization:
  3157                           	opt stack 0
  3158  004526                     __end_of__initialization:
  3159                           	opt stack 0
  3160  004526  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3161  004528  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3162  00452A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3163  00452C  6EF8               	movwf	tblptru,c
  3164  00452E  0100               	movlb	0
  3165  004530  EF13  F017         	goto	_main	;jump to C main() function
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           postdec1	equ	0xFE5
  3173                           fsr1l	equ	0xFE1
  3174                           
  3175                           	psect	bitbssCOMRAM
  3176  0002E8                     __pbitbssCOMRAM:
  3177                           	opt stack 0
  3178  0002E8                     _log:
  3179                           	opt stack 0
  3180  0002E8                     	ds	1
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1l	equ	0xFE1
  3189                           
  3190                           	psect	bssCOMRAM
  3191  000042                     __pbssCOMRAM:
  3192                           	opt stack 0
  3193  000042                     _pBDTEntryEP0OutNext:
  3194                           	opt stack 0
  3195  000042                     	ds	2
  3196  000044                     _pBDTEntryEP0OutCurrent:
  3197                           	opt stack 0
  3198  000044                     	ds	2
  3199  000046                     _timer3ReloadVal:
  3200                           	opt stack 0
  3201  000046                     	ds	2
  3202  000048                     _timer1ReloadVal:
  3203                           	opt stack 0
  3204  000048                     	ds	2
  3205  00004A                     USBapp_LEDUpdateStatus@ledCount:
  3206                           	opt stack 0
  3207  00004A                     	ds	2
  3208  00004C                     _USBDeferOUTDataStagePackets:
  3209                           	opt stack 0
  3210  00004C                     	ds	1
  3211  00004D                     _USBDeferINDataStagePackets:
  3212                           	opt stack 0
  3213  00004D                     	ds	1
  3214  00004E                     _USBStatusStageEnabledFlag2:
  3215                           	opt stack 0
  3216  00004E                     	ds	1
  3217  00004F                     _USBStatusStageEnabledFlag1:
  3218                           	opt stack 0
  3219  00004F                     	ds	1
  3220  000050                     _USBDeferStatusStagePacket:
  3221                           	opt stack 0
  3222  000050                     	ds	1
  3223  000051                     _USBStatusStageTimeoutCounter:
  3224                           	opt stack 0
  3225  000051                     	ds	1
  3226  000052                     _BothEP0OutUOWNsSet:
  3227                           	opt stack 0
  3228  000052                     	ds	1
  3229  000053                     _endpoint_number:
  3230                           	opt stack 0
  3231  000053                     	ds	1
  3232  000054                     _RemoteWakeup:
  3233                           	opt stack 0
  3234  000054                     	ds	1
  3235  000055                     _controlTransferState:
  3236                           	opt stack 0
  3237  000055                     	ds	1
  3238  000056                     _shortPacketStatus:
  3239                           	opt stack 0
  3240  000056                     	ds	1
  3241  000057                     _countBitsSilent:
  3242                           	opt stack 0
  3243  000057                     	ds	1
  3244  000058                     _countRX:
  3245                           	opt stack 0
  3246  000058                     	ds	1
  3247  000059                     _status:
  3248                           	opt stack 0
  3249  000059                     	ds	1
  3250  00005A                     _USTATcopy:
  3251                           	opt stack 0
  3252  00005A                     	ds	1
  3253  00005B                     _USBActiveConfiguration:
  3254                           	opt stack 0
  3255  00005B                     	ds	1
  3256  00005C                     _n_bit:
  3257                           	opt stack 0
  3258  00005C                     	ds	1
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           postdec1	equ	0xFE5
  3266                           fsr1l	equ	0xFE1
  3267                           
  3268                           	psect	dataCOMRAM
  3269  00005E                     __pdataCOMRAM:
  3270                           	opt stack 0
  3271  00005E                     _Contrast_level:
  3272                           	opt stack 0
  3273  00005E                     	ds	1
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1l	equ	0xFE1
  3282                           
  3283                           	psect	bssBANK0
  3284  0000BC                     __pbssBANK0:
  3285                           	opt stack 0
  3286  0000BC                     _outPipes:
  3287                           	opt stack 0
  3288  0000BC                     	ds	8
  3289  0000C4                     _inPipes:
  3290                           	opt stack 0
  3291  0000C4                     	ds	6
  3292  0000CA                     _pBDTEntryIn:
  3293                           	opt stack 0
  3294  0000CA                     	ds	6
  3295  0000D0                     _ep_data_out:
  3296                           	opt stack 0
  3297  0000D0                     	ds	3
  3298  0000D3                     _ep_data_in:
  3299                           	opt stack 0
  3300  0000D3                     	ds	3
  3301  0000D6                     _CDCDataOutHandle:
  3302                           	opt stack 0
  3303  0000D6                     	ds	2
  3304  0000D8                     _timerMsTickCount:
  3305                           	opt stack 0
  3306  0000D8                     	ds	2
  3307  0000DA                     _temperature:
  3308                           	opt stack 0
  3309  0000DA                     	ds	2
  3310  0000DC                     _cdc_tx_len:
  3311                           	opt stack 0
  3312  0000DC                     	ds	1
  3313  0000DD                     _cdc_rx_len:
  3314                           	opt stack 0
  3315  0000DD                     	ds	1
  3316  0000DE                     _eusartRxTail:
  3317                           	opt stack 0
  3318  0000DE                     	ds	1
  3319  0000DF                     _eusartRxHead:
  3320                           	opt stack 0
  3321  0000DF                     	ds	1
  3322  0000E0                     _eusartTxBufferRemaining:
  3323                           	opt stack 0
  3324  0000E0                     	ds	1
  3325  0000E1                     _eusartTxTail:
  3326                           	opt stack 0
  3327  0000E1                     	ds	1
  3328  0000E2                     _eusartTxHead:
  3329                           	opt stack 0
  3330  0000E2                     	ds	1
  3331  0000E3                     _rx_data:
  3332                           	opt stack 0
  3333  0000E3                     	ds	1
  3334  0000E4                     service_pushbutton@Release_Timer:
  3335                           	opt stack 0
  3336  0000E4                     	ds	1
  3337  0000E5                     _RS232cp:
  3338                           	opt stack 0
  3339  0000E5                     	ds	1
  3340  0000E6                     _LastRS232Out:
  3341                           	opt stack 0
  3342  0000E6                     	ds	1
  3343  0000E7                     _RS232_Out_Data_Rdy:
  3344                           	opt stack 0
  3345  0000E7                     	ds	1
  3346  0000E8                     _NextUSBOut:
  3347                           	opt stack 0
  3348  0000E8                     	ds	1
  3349  0000E9                     _rxByteFlag:
  3350                           	opt stack 0
  3351  0000E9                     	ds	1
  3352  0000EA                     _usbState:
  3353                           	opt stack 0
  3354  0000EA                     	ds	1
  3355  0000EB                     _cdc_trf_state:
  3356                           	opt stack 0
  3357  0000EB                     	ds	1
  3358  0000EC                     _USBDeviceState:
  3359                           	opt stack 0
  3360  0000EC                     	ds	1
  3361  0000ED                     _lightStringSize:
  3362                           	opt stack 0
  3363  0000ED                     	ds	1
  3364  0000EE                     _rnModule:
  3365                           	opt stack 0
  3366  0000EE                     	ds	1
  3367  0000EF                     _sleepTicker:
  3368                           	opt stack 0
  3369  0000EF                     	ds	1
  3370  0000F0                     _secTicker:
  3371                           	opt stack 0
  3372  0000F0                     	ds	1
  3373  0000F1                     _randomPortNum:
  3374                           	opt stack 0
  3375  0000F1                     	ds	1
  3376  0000F2                     _moduleBufferIndex:
  3377                           	opt stack 0
  3378  0000F2                     	ds	1
  3379  0000F3                     _runningState:
  3380                           	opt stack 0
  3381  0000F3                     	ds	1
  3382  0000F4                     _activeState:
  3383                           	opt stack 0
  3384  0000F4                     	ds	1
  3385  0000F5                     _eusartRxCount:
  3386                           	opt stack 0
  3387  0000F5                     	ds	1
  3388  0000F6                     _powerOnStatus:
  3389                           	opt stack 0
  3390  0000F6                     	ds	1
  3391  0000F7                     _operationType:
  3392                           	opt stack 0
  3393  0000F7                     	ds	1
  3394  0000F8                     _appTimer:
  3395                           	opt stack 0
  3396  0000F8                     	ds	1
  3397                           tblptru	equ	0xFF8
  3398                           tblptrh	equ	0xFF7
  3399                           tblptrl	equ	0xFF6
  3400                           tablat	equ	0xFF5
  3401                           postinc0	equ	0xFEE
  3402                           wreg	equ	0xFE8
  3403                           postdec1	equ	0xFE5
  3404                           fsr1l	equ	0xFE1
  3405                           
  3406                           	psect	dataBANK0
  3407  0000F9                     __pdataBANK0:
  3408                           	opt stack 0
  3409  0000F9                     _exitUSB:
  3410                           	opt stack 0
  3411  0000F9                     	ds	1
  3412  0000FA                     _periodicState:
  3413                           	opt stack 0
  3414  0000FA                     	ds	1
  3415  0000FB                     _menuTimeout:
  3416                           	opt stack 0
  3417  0000FB                     	ds	1
  3418  0000FC                     _dataRateValue:
  3419                           	opt stack 0
  3420  0000FC                     	ds	1
  3421  0000FD                     _periodicTimerValue:
  3422                           	opt stack 0
  3423  0000FD                     	ds	1
  3424  0000FE                     _periodicUpValue:
  3425                           	opt stack 0
  3426  0000FE                     	ds	1
  3427  0000FF                     _moteState:
  3428                           	opt stack 0
  3429  0000FF                     	ds	1
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           postdec1	equ	0xFE5
  3437                           fsr1l	equ	0xFE1
  3438                           
  3439                           	psect	bssBANK1
  3440  000100                     __pbssBANK1:
  3441                           	opt stack 0
  3442  000100                     	ds	16
  3443  000110                     _responseId:
  3444                           	opt stack 0
  3445  000110                     	ds	16
  3446  000120                     _pBDTEntryOut:
  3447                           	opt stack 0
  3448  000120                     	ds	6
  3449  000126                     _BaudRateGen:
  3450                           	opt stack 0
  3451  000126                     	ds	4
  3452  00012A                     service_pushbutton@PB_Timer:
  3453                           	opt stack 0
  3454  00012A                     	ds	4
  3455  00012E                     _pCDCDst:
  3456                           	opt stack 0
  3457  00012E                     	ds	3
  3458  000131                     _pCDCSrc:
  3459                           	opt stack 0
  3460  000131                     	ds	3
  3461  000134                     _CDCDataInHandle:
  3462                           	opt stack 0
  3463  000134                     	ds	2
  3464  000136                     _pDst:
  3465                           	opt stack 0
  3466  000136                     	ds	2
  3467  000138                     _timer0ReloadVal:
  3468                           	opt stack 0
  3469  000138                     	ds	2
  3470  00013A                     _timerMinTickCount:
  3471                           	opt stack 0
  3472  00013A                     	ds	2
  3473  00013C                     _m10SecTicker:
  3474                           	opt stack 0
  3475  00013C                     	ds	2
  3476  00013E                     _light:
  3477                           	opt stack 0
  3478  00013E                     	ds	2
  3479  000140                     _control_signal_bitmap:
  3480                           	opt stack 0
  3481  000140                     	ds	1
  3482  000141                     _cdc_mem_type:
  3483                           	opt stack 0
  3484  000141                     	ds	1
  3485  000142                     _USBBusIsSuspended:
  3486                           	opt stack 0
  3487  000142                     	ds	1
  3488  000143                     _cs:
  3489                           	opt stack 0
  3490  000143                     	ds	1
  3491  000144                     _stops:
  3492                           	opt stack 0
  3493  000144                     	ds	1
  3494  000145                     _parity:
  3495                           	opt stack 0
  3496  000145                     	ds	1
  3497  000146                     	ds	1
  3498  000147                     	ds	1
  3499  000148                     _minTicker:
  3500                           	opt stack 0
  3501  000148                     	ds	1
  3502  000149                     	ds	1
  3503  00014A                     	ds	1
  3504  00014B                     _responseReady:
  3505                           	opt stack 0
  3506  00014B                     	ds	1
  3507  00014C                     	ds	1
  3508  00014D                     _moteModeState:
  3509                           	opt stack 0
  3510  00014D                     	ds	1
  3511  00014E                     _appState:
  3512                           	opt stack 0
  3513  00014E                     	ds	1
  3514  00014F                     _mainState:
  3515                           	opt stack 0
  3516  00014F                     	ds	1
  3517  000150                     _moduleResonseBuffer:
  3518                           	opt stack 0
  3519  000150                     	ds	64
  3520  000190                     _responseData:
  3521                           	opt stack 0
  3522  000190                     	ds	32
  3523  0001B0                     _dataBuffer:
  3524                           	opt stack 0
  3525  0001B0                     	ds	16
  3526  0001C0                     _cdc_notice:
  3527                           	opt stack 0
  3528  0001C0                     	ds	10
  3529  0001CA                     _dummy_encapsulated_cmd_response:
  3530                           	opt stack 0
  3531  0001CA                     	ds	8
  3532  0001D2                     _line_coding:
  3533                           	opt stack 0
  3534  0001D2                     	ds	7
  3535  0001D9                     _clearLight:
  3536                           	opt stack 0
  3537  0001D9                     	ds	5
  3538  0001DE                     _storedLight:
  3539                           	opt stack 0
  3540  0001DE                     	ds	5
  3541  0001E3                     _responsePortNum:
  3542                           	opt stack 0
  3543  0001E3                     	ds	3
  3544  0001E6                     _USBAlternateInterface:
  3545                           	opt stack 0
  3546  0001E6                     	ds	2
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           postinc0	equ	0xFEE
  3552                           wreg	equ	0xFE8
  3553                           postdec1	equ	0xFE5
  3554                           fsr1l	equ	0xFE1
  3555                           
  3556                           	psect	dataBANK1
  3557  0001E8                     __pdataBANK1:
  3558                           	opt stack 0
  3559  0001E8                     _selectedFont:
  3560                           	opt stack 0
  3561  0001E8                     	ds	2
  3562  0001EA                     	ds	1
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postdec1	equ	0xFE5
  3570                           fsr1l	equ	0xFE1
  3571                           
  3572                           	psect	bssBANK2
  3573  000200                     __pbssBANK2:
  3574                           	opt stack 0
  3575  000200                     _eusartRxBuffer:
  3576                           	opt stack 0
  3577  000200                     	ds	64
  3578  000240                     _eusartTxBuffer:
  3579                           	opt stack 0
  3580  000240                     	ds	64
  3581  000280                     	ds	32
  3582  0002A0                     _USB_Buffer:
  3583                           	opt stack 0
  3584  0002A0                     	ds	64
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           postdec1	equ	0xFE5
  3592                           fsr1l	equ	0xFE1
  3593                           
  3594                           	psect	bssBANK3
  3595  000300                     __pbssBANK3:
  3596                           	opt stack 0
  3597  000300                     _buffer_rx:
  3598                           	opt stack 0
  3599  000300                     	ds	128
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           
  3609                           	psect	cstackBANK0
  3610  000060                     __pcstackBANK0:
  3611                           	opt stack 0
  3612  000060                     ??_TMR1_Initialize:
  3613  000060                     ?_strncmp:
  3614                           	opt stack 0
  3615  000060                     ?_strcmp:
  3616                           	opt stack 0
  3617  000060                     ?_moteApp_getLightString:
  3618                           	opt stack 0
  3619  000060                     ?_USBTransferOnePacket:
  3620                           	opt stack 0
  3621  000060                     ?___wmul:
  3622                           	opt stack 0
  3623  000060                     ?___awmod:
  3624                           	opt stack 0
  3625  000060                     ?___lwmod:
  3626                           	opt stack 0
  3627  000060                     ?___fladd:
  3628                           	opt stack 0
  3629  000060                     ?___almod:
  3630                           	opt stack 0
  3631  000060                     ?___fltol:
  3632                           	opt stack 0
  3633  000060                     ?___xxtofl:
  3634                           	opt stack 0
  3635  000060                     MOTEapp_handlerState@state:
  3636                           	opt stack 0
  3637  000060                     MOTEapp_TimerBasedTask@timerTask:
  3638                           	opt stack 0
  3639  000060                     hexToStr@character:
  3640                           	opt stack 0
  3641  000060                     moteApp_clearBuffers@counter:
  3642                           	opt stack 0
  3643  000060                     USBapp_handlerState@state:
  3644                           	opt stack 0
  3645  000060                     USBapp_exitCDCState@usbState:
  3646                           	opt stack 0
  3647  000060                     service_pushbutton@bs:
  3648                           	opt stack 0
  3649  000060                     oled_writeCommand@command:
  3650                           	opt stack 0
  3651  000060                     oled_writeData@data:
  3652                           	opt stack 0
  3653  000060                     EUSART_Read@readValue:
  3654                           	opt stack 0
  3655  000060                     EUSART_Write@txData:
  3656                           	opt stack 0
  3657  000060                     EUSART_FlushBuffer@index:
  3658                           	opt stack 0
  3659  000060                     DATAEE_WriteByte@bData:
  3660                           	opt stack 0
  3661  000060                     DATAEE_ReadByte@bAdd:
  3662                           	opt stack 0
  3663  000060                     TMR2_ReadTimer@readVal:
  3664                           	opt stack 0
  3665  000060                     USBTransferOnePacket@dir:
  3666                           	opt stack 0
  3667  000060                     ___lbdiv@divisor:
  3668                           	opt stack 0
  3669  000060                     delayms@t:
  3670                           	opt stack 0
  3671  000060                     moteApp_delayms@length:
  3672                           	opt stack 0
  3673  000060                     oled_setFont@font:
  3674                           	opt stack 0
  3675  000060                     putUSBUSART@data:
  3676                           	opt stack 0
  3677  000060                     ___wmul@multiplier:
  3678                           	opt stack 0
  3679  000060                     ___awmod@dividend:
  3680                           	opt stack 0
  3681  000060                     ___lwmod@dividend:
  3682                           	opt stack 0
  3683  000060                     memcpy@d1:
  3684                           	opt stack 0
  3685  000060                     memset@p1:
  3686                           	opt stack 0
  3687  000060                     strcmp@s1:
  3688                           	opt stack 0
  3689  000060                     strncmp@s1:
  3690                           	opt stack 0
  3691  000060                     ___almod@dividend:
  3692                           	opt stack 0
  3693  000060                     ___fltol@f1:
  3694                           	opt stack 0
  3695  000060                     ___fladd@b:
  3696                           	opt stack 0
  3697  000060                     ___xxtofl@val:
  3698                           	opt stack 0
  3699                           
  3700                           ; 4 bytes @ 0x0
  3701  000060                     	ds	1
  3702  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3703                           	opt stack 0
  3704  000061                     moteApp_clearBuffers@counter_1714:
  3705                           	opt stack 0
  3706  000061                     Set_Page_Address@address:
  3707                           	opt stack 0
  3708  000061                     Set_Column_Address@address:
  3709                           	opt stack 0
  3710  000061                     oled_setDisplay@displayType:
  3711                           	opt stack 0
  3712  000061                     oled_setContrastControlRegister@mod:
  3713                           	opt stack 0
  3714  000061                     oled_initialDispayLine@line:
  3715                           	opt stack 0
  3716  000061                     oled_powerControl@vol:
  3717                           	opt stack 0
  3718  000061                     oled_regulorResistorSelect@r:
  3719                           	opt stack 0
  3720  000061                     DATAEE_WriteByte@bAdd:
  3721                           	opt stack 0
  3722  000061                     ___lbdiv@dividend:
  3723                           	opt stack 0
  3724  000061                     sendCommand@string:
  3725                           	opt stack 0
  3726  000061                     sendDataCommand@string:
  3727                           	opt stack 0
  3728  000061                     USBTransferOnePacket@data:
  3729                           	opt stack 0
  3730                           
  3731                           ; 2 bytes @ 0x1
  3732  000061                     	ds	1
  3733  000062                     ??_moteApp_delayms:
  3734  000062                     ??_oled_devInit:
  3735  000062                     ??_delayms:
  3736  000062                     MOTEapp_getModuleResponse@bufferByte:
  3737                           	opt stack 0
  3738  000062                     moteApp_clearBuffers@counter_1715:
  3739                           	opt stack 0
  3740  000062                     oled_putChar@station_dot:
  3741                           	opt stack 0
  3742  000062                     DATAEE_WriteByte@GIEBitValue:
  3743                           	opt stack 0
  3744  000062                     putUSBUSART@length:
  3745                           	opt stack 0
  3746  000062                     ___lbdiv@counter:
  3747                           	opt stack 0
  3748  000062                     ___wmul@multiplicand:
  3749                           	opt stack 0
  3750  000062                     ___awmod@divisor:
  3751                           	opt stack 0
  3752  000062                     ___lwmod@divisor:
  3753                           	opt stack 0
  3754  000062                     memcpy@s1:
  3755                           	opt stack 0
  3756  000062                     memset@c:
  3757                           	opt stack 0
  3758  000062                     strcmp@s2:
  3759                           	opt stack 0
  3760  000062                     strncmp@s2:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x2
  3764  000062                     	ds	1
  3765  000063                     ??_moteApp_toggleLeds:
  3766  000063                     ??_MOTEapp_SetDataRateSetting:
  3767  000063                     ??_moduleSleep:
  3768  000063                     ?_moteApp_getTempValue:
  3769                           	opt stack 0
  3770  000063                     moteApp_clearBuffers@counter_1716:
  3771                           	opt stack 0
  3772  000063                     oled_putChar@start_page:
  3773                           	opt stack 0
  3774  000063                     USBTransferOnePacket@len:
  3775                           	opt stack 0
  3776  000063                     ___lbdiv@quotient:
  3777                           	opt stack 0
  3778  000063                     delayms@i:
  3779                           	opt stack 0
  3780  000063                     moteApp_delayms@counter:
  3781                           	opt stack 0
  3782  000063                     sendDataCommand@appData:
  3783                           	opt stack 0
  3784                           
  3785                           ; 2 bytes @ 0x3
  3786  000063                     	ds	1
  3787  000064                     ??_oled_putChar:
  3788  000064                     ??_strcmp:
  3789  000064                     ??___fltol:
  3790  000064                     ??___xxtofl:
  3791  000064                     MOTEapp_SetDataRateSetting@dr:
  3792                           	opt stack 0
  3793  000064                     moteApp_toggleLeds@state:
  3794                           	opt stack 0
  3795  000064                     USBTransferOnePacket@ep:
  3796                           	opt stack 0
  3797  000064                     ___awmod@counter:
  3798                           	opt stack 0
  3799  000064                     ___lwmod@counter:
  3800                           	opt stack 0
  3801  000064                     ___wmul@product:
  3802                           	opt stack 0
  3803  000064                     memcpy@n:
  3804                           	opt stack 0
  3805  000064                     memset@n:
  3806                           	opt stack 0
  3807  000064                     strncmp@len:
  3808                           	opt stack 0
  3809  000064                     ___almod@divisor:
  3810                           	opt stack 0
  3811  000064                     ___fladd@a:
  3812                           	opt stack 0
  3813                           
  3814                           ; 4 bytes @ 0x4
  3815  000064                     	ds	1
  3816  000065                     sendDataCommand@dataLength:
  3817                           	opt stack 0
  3818  000065                     ___awmod@sign:
  3819                           	opt stack 0
  3820  000065                     strcmp@r:
  3821                           	opt stack 0
  3822  000065                     moduleResync@escapeCounter:
  3823                           	opt stack 0
  3824  000065                     moteApp_setSensorsInput@escapeCounter:
  3825                           	opt stack 0
  3826  000065                     moteApp_getTempValue@escapeCounter:
  3827                           	opt stack 0
  3828  000065                     USBTransferOnePacket@handle:
  3829                           	opt stack 0
  3830                           
  3831                           ; 2 bytes @ 0x5
  3832  000065                     	ds	1
  3833  000066                     ??_strncmp:
  3834  000066                     ??_sendDataCommand:
  3835  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3836                           	opt stack 0
  3837  000066                     memcpy@d:
  3838                           	opt stack 0
  3839  000066                     memset@p:
  3840                           	opt stack 0
  3841                           
  3842                           ; 2 bytes @ 0x6
  3843  000066                     	ds	1
  3844  000067                     ??_moteApp_add8bToDataBuffer:
  3845  000067                     ??_CDCTxService:
  3846  000067                     moduleResync@escapeEvent:
  3847                           	opt stack 0
  3848  000067                     sendDataCommand@byteCount:
  3849                           	opt stack 0
  3850  000067                     getsUSBUSART@buffer:
  3851                           	opt stack 0
  3852                           
  3853                           ; 2 bytes @ 0x7
  3854  000067                     	ds	1
  3855  000068                     ??___fladd:
  3856  000068                     sendDataCommand@byteCount_1627:
  3857                           	opt stack 0
  3858  000068                     USBDeviceInit@i:
  3859                           	opt stack 0
  3860  000068                     ___almod@counter:
  3861                           	opt stack 0
  3862  000068                     ___fltol@sign1:
  3863                           	opt stack 0
  3864  000068                     ___xxtofl@sign:
  3865                           	opt stack 0
  3866  000068                     _CDCTxService$6705:
  3867                           	opt stack 0
  3868  000068                     memcpy@s:
  3869                           	opt stack 0
  3870                           
  3871                           ; 2 bytes @ 0x8
  3872  000068                     	ds	1
  3873  000069                     moteApp_add8bToDataBuffer@number:
  3874                           	opt stack 0
  3875  000069                     getsUSBUSART@len:
  3876                           	opt stack 0
  3877  000069                     ___almod@sign:
  3878                           	opt stack 0
  3879  000069                     ___fltol@exp1:
  3880                           	opt stack 0
  3881  000069                     ___xxtofl@exp:
  3882                           	opt stack 0
  3883                           
  3884                           ; 1 bytes @ 0x9
  3885  000069                     	ds	1
  3886  00006A                     ??_getsUSBUSART:
  3887  00006A                     oled_putChar@k:
  3888                           	opt stack 0
  3889  00006A                     CDCTxService@i:
  3890                           	opt stack 0
  3891  00006A                     memcpy@tmp:
  3892                           	opt stack 0
  3893  00006A                     ___xxtofl@arg:
  3894                           	opt stack 0
  3895                           
  3896                           ; 4 bytes @ 0xA
  3897  00006A                     	ds	1
  3898  00006B                     oled_putChar@index:
  3899                           	opt stack 0
  3900  00006B                     CDCTxService@byte_to_send:
  3901                           	opt stack 0
  3902  00006B                     moteApp_setLightString@lightString:
  3903                           	opt stack 0
  3904  00006B                     _getsUSBUSART$6657:
  3905                           	opt stack 0
  3906                           
  3907                           ; 2 bytes @ 0xB
  3908  00006B                     	ds	1
  3909  00006C                     oled_clearRow@page:
  3910                           	opt stack 0
  3911                           
  3912                           ; 1 bytes @ 0xC
  3913  00006C                     	ds	1
  3914  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3915  00006D                     moteApp_setLightString@stingPos:
  3916                           	opt stack 0
  3917  00006D                     oled_clearRow@index:
  3918                           	opt stack 0
  3919                           
  3920                           ; 1 bytes @ 0xD
  3921  00006D                     	ds	1
  3922  00006E                     ?_moteApp_getLightValue:
  3923                           	opt stack 0
  3924  00006E                     moteApp_GoToSleep@status:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0xE
  3928  00006E                     	ds	2
  3929  000070                     ___fladd@signs:
  3930                           	opt stack 0
  3931  000070                     moteApp_getLightValue@escapeCounter:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x10
  3935  000070                     	ds	1
  3936  000071                     ___fladd@aexp:
  3937                           	opt stack 0
  3938                           
  3939                           ; 1 bytes @ 0x11
  3940  000071                     	ds	1
  3941  000072                     ?_moteApp_convertSensorValue:
  3942                           	opt stack 0
  3943  000072                     ___fladd@bexp:
  3944                           	opt stack 0
  3945  000072                     moteApp_addToDataBuffer@string:
  3946                           	opt stack 0
  3947  000072                     moteApp_convertSensorValue@string:
  3948                           	opt stack 0
  3949  000072                     oled_putString@string:
  3950                           	opt stack 0
  3951                           
  3952                           ; 2 bytes @ 0x12
  3953  000072                     	ds	1
  3954  000073                     ___fladd@grs:
  3955                           	opt stack 0
  3956                           
  3957                           ; 1 bytes @ 0x13
  3958  000073                     	ds	1
  3959  000074                     ??_moteApp_convertSensorValue:
  3960  000074                     ?___flmul:
  3961                           	opt stack 0
  3962  000074                     moteApp_addToDataBuffer@bufferLocation:
  3963                           	opt stack 0
  3964  000074                     oled_putString@station_dot:
  3965                           	opt stack 0
  3966  000074                     ___flmul@b:
  3967                           	opt stack 0
  3968                           
  3969                           ; 4 bytes @ 0x14
  3970  000074                     	ds	1
  3971  000075                     moteApp_addToDataBuffer@index:
  3972                           	opt stack 0
  3973  000075                     oled_putString@start_page:
  3974                           	opt stack 0
  3975                           
  3976                           ; 1 bytes @ 0x15
  3977  000075                     	ds	1
  3978  000076                     oled_putString@index:
  3979                           	opt stack 0
  3980                           
  3981                           ; 1 bytes @ 0x16
  3982  000076                     	ds	1
  3983  000077                     ??_test_switch:
  3984  000077                     moteJoiningProcess@changeStates:
  3985                           	opt stack 0
  3986  000077                     USBapp_Handler@buttonPress:
  3987                           	opt stack 0
  3988  000077                     oled_putUint8@station_dot:
  3989                           	opt stack 0
  3990  000077                     oled_putint8@station_dot:
  3991                           	opt stack 0
  3992  000077                     moteApp_convertSensorValue@convertedValue:
  3993                           	opt stack 0
  3994                           
  3995                           ; 2 bytes @ 0x17
  3996  000077                     	ds	1
  3997  000078                     moteJoiningProcess@selectButton:
  3998                           	opt stack 0
  3999  000078                     oled_putUint8@start_page:
  4000                           	opt stack 0
  4001  000078                     oled_putint8@start_page:
  4002                           	opt stack 0
  4003  000078                     test_switch@timeout:
  4004                           	opt stack 0
  4005  000078                     ___flmul@a:
  4006                           	opt stack 0
  4007                           
  4008                           ; 4 bytes @ 0x18
  4009  000078                     	ds	1
  4010  000079                     ??_moteJoiningProcess:
  4011  000079                     moteApp_convertSensorValue@index:
  4012                           	opt stack 0
  4013  000079                     oled_putUint8@number:
  4014                           	opt stack 0
  4015  000079                     oled_putint8@negative:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x19
  4019  000079                     	ds	1
  4020  00007A                     test_switch@buttonCheck:
  4021                           	opt stack 0
  4022  00007A                     moteJoiningProcess@readDataRate:
  4023                           	opt stack 0
  4024  00007A                     oled_putUint8@numData:
  4025                           	opt stack 0
  4026  00007A                     oled_putint8@numData:
  4027                           	opt stack 0
  4028                           
  4029                           ; 6 bytes @ 0x1A
  4030  00007A                     	ds	1
  4031  00007B                     moteJoiningProcess@joiningComplete:
  4032                           	opt stack 0
  4033                           
  4034                           ; 1 bytes @ 0x1B
  4035  00007B                     	ds	1
  4036  00007C                     ??___flmul:
  4037  00007C                     moteJoiningProcess@messageReady:
  4038                           	opt stack 0
  4039                           
  4040                           ; 1 bytes @ 0x1C
  4041  00007C                     	ds	4
  4042  000080                     oled_putint8@number:
  4043                           	opt stack 0
  4044  000080                     ___flmul@sign:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x20
  4048  000080                     	ds	1
  4049  000081                     ___flmul@grs:
  4050                           	opt stack 0
  4051                           
  4052                           ; 4 bytes @ 0x21
  4053  000081                     	ds	4
  4054  000085                     ___flmul@aexp:
  4055                           	opt stack 0
  4056                           
  4057                           ; 1 bytes @ 0x25
  4058  000085                     	ds	1
  4059  000086                     ___flmul@bexp:
  4060                           	opt stack 0
  4061                           
  4062                           ; 1 bytes @ 0x26
  4063  000086                     	ds	1
  4064  000087                     ___flmul@prod:
  4065                           	opt stack 0
  4066                           
  4067                           ; 4 bytes @ 0x27
  4068  000087                     	ds	4
  4069  00008B                     ___flmul@temp:
  4070                           	opt stack 0
  4071                           
  4072                           ; 2 bytes @ 0x2B
  4073  00008B                     	ds	2
  4074  00008D                     ?___fldiv:
  4075                           	opt stack 0
  4076  00008D                     ___fldiv@b:
  4077                           	opt stack 0
  4078                           
  4079                           ; 4 bytes @ 0x2D
  4080  00008D                     	ds	4
  4081  000091                     ___fldiv@a:
  4082                           	opt stack 0
  4083                           
  4084                           ; 4 bytes @ 0x31
  4085  000091                     	ds	4
  4086  000095                     ??___fldiv:
  4087                           
  4088                           ; 1 bytes @ 0x35
  4089  000095                     	ds	4
  4090  000099                     ___fldiv@sign:
  4091                           	opt stack 0
  4092                           
  4093                           ; 1 bytes @ 0x39
  4094  000099                     	ds	1
  4095  00009A                     ___fldiv@rem:
  4096                           	opt stack 0
  4097                           
  4098                           ; 4 bytes @ 0x3A
  4099  00009A                     	ds	4
  4100  00009E                     ___fldiv@new_exp:
  4101                           	opt stack 0
  4102                           
  4103                           ; 2 bytes @ 0x3E
  4104  00009E                     	ds	2
  4105  0000A0                     ___fldiv@grs:
  4106                           	opt stack 0
  4107                           
  4108                           ; 4 bytes @ 0x40
  4109  0000A0                     	ds	4
  4110  0000A4                     ___fldiv@bexp:
  4111                           	opt stack 0
  4112                           
  4113                           ; 1 bytes @ 0x44
  4114  0000A4                     	ds	1
  4115  0000A5                     ___fldiv@aexp:
  4116                           	opt stack 0
  4117                           
  4118                           ; 1 bytes @ 0x45
  4119  0000A5                     	ds	1
  4120  0000A6                     ADC_TempConversion@tempRaw:
  4121                           	opt stack 0
  4122                           
  4123                           ; 1 bytes @ 0x46
  4124  0000A6                     	ds	1
  4125  0000A7                     ADC_TempConversion@temp:
  4126                           	opt stack 0
  4127                           
  4128                           ; 1 bytes @ 0x47
  4129  0000A7                     	ds	1
  4130  0000A8                     ADC_TempConversion@val:
  4131                           	opt stack 0
  4132                           
  4133                           ; 4 bytes @ 0x48
  4134  0000A8                     	ds	4
  4135  0000AC                     ??_moteApp_testSensors:
  4136  0000AC                     moteRunningProcess@selectButton:
  4137                           	opt stack 0
  4138                           
  4139                           ; 1 bytes @ 0x4C
  4140  0000AC                     	ds	1
  4141  0000AD                     moteRunningProcess@messageReady:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0x4D
  4145  0000AD                     	ds	1
  4146  0000AE                     moteRunningProcess@sleepEvent:
  4147                           	opt stack 0
  4148                           
  4149                           ; 1 bytes @ 0x4E
  4150  0000AE                     	ds	1
  4151  0000AF                     ??_moteRunningProcess:
  4152                           
  4153                           ; 1 bytes @ 0x4F
  4154  0000AF                     	ds	1
  4155  0000B0                     moteRunningProcess@readByte:
  4156                           	opt stack 0
  4157                           
  4158                           ; 1 bytes @ 0x50
  4159  0000B0                     	ds	1
  4160  0000B1                     moteRunningProcess@sizeOfUpdate:
  4161                           	opt stack 0
  4162                           
  4163                           ; 1 bytes @ 0x51
  4164  0000B1                     	ds	1
  4165  0000B2                     moteRunningProcess@sizeOfUpdate_1497:
  4166                           	opt stack 0
  4167                           
  4168                           ; 1 bytes @ 0x52
  4169  0000B2                     	ds	1
  4170  0000B3                     moteRunningProcess@counter:
  4171                           	opt stack 0
  4172                           
  4173                           ; 1 bytes @ 0x53
  4174  0000B3                     	ds	1
  4175  0000B4                     moteRunningProcess@bufferReadPos:
  4176                           	opt stack 0
  4177                           
  4178                           ; 1 bytes @ 0x54
  4179  0000B4                     	ds	1
  4180  0000B5                     moteRunningProcess@changeStates:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x55
  4184  0000B5                     	ds	1
  4185  0000B6                     ??_moteHandler:
  4186                           
  4187                           ; 1 bytes @ 0x56
  4188  0000B6                     	ds	1
  4189  0000B7                     moteHandler@gotoSleep:
  4190                           	opt stack 0
  4191                           
  4192                           ; 1 bytes @ 0x57
  4193  0000B7                     	ds	1
  4194  0000B8                     moteHandler@gotoNextState:
  4195                           	opt stack 0
  4196                           
  4197                           ; 1 bytes @ 0x58
  4198  0000B8                     	ds	1
  4199  0000B9                     moteHandler@s2Button:
  4200                           	opt stack 0
  4201                           
  4202                           ; 1 bytes @ 0x59
  4203  0000B9                     	ds	1
  4204  0000BA                     moteHandler@buttonPress:
  4205                           	opt stack 0
  4206                           
  4207                           ; 1 bytes @ 0x5A
  4208  0000BA                     	ds	1
  4209  0000BB                     moteHandler@readMessage:
  4210                           	opt stack 0
  4211                           
  4212                           ; 1 bytes @ 0x5B
  4213  0000BB                     	ds	1
  4214  0000BC                     tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           postinc0	equ	0xFEE
  4219                           wreg	equ	0xFE8
  4220                           postdec1	equ	0xFE5
  4221                           fsr1l	equ	0xFE1
  4222                           
  4223                           ; 1 bytes @ 0x5C
  4224                           
  4225                           	psect	cstackCOMRAM
  4226  000001                     __pcstackCOMRAM:
  4227                           	opt stack 0
  4228  000001                     ??_USBStdGetDscHandler:
  4229  000001                     ??_USBStdGetStatusHandler:
  4230  000001                     ?i2_USBTransferOnePacket:
  4231                           	opt stack 0
  4232  000001                     ?___lldiv:
  4233                           	opt stack 0
  4234  000001                     reloadTimer@setTimerValue:
  4235                           	opt stack 0
  4236  000001                     clearInterruptPinRX@tClearPin:
  4237                           	opt stack 0
  4238  000001                     USBConfigureEndpoint@direction:
  4239                           	opt stack 0
  4240  000001                     USBCtrlTrfTxService@byteToSend:
  4241                           	opt stack 0
  4242  000001                     i2oled_writeCommand@command:
  4243                           	opt stack 0
  4244  000001                     i2oled_writeData@data:
  4245                           	opt stack 0
  4246  000001                     i2USBTransferOnePacket@dir:
  4247                           	opt stack 0
  4248  000001                     i2memset@p1:
  4249                           	opt stack 0
  4250  000001                     ___lldiv@dividend:
  4251                           	opt stack 0
  4252                           
  4253                           ; 4 bytes @ 0x0
  4254  000001                     	ds	1
  4255  000002                     ??_USBConfigureEndpoint:
  4256  000002                     ??_InterruptPinRX:
  4257  000002                     i2Set_Page_Address@address:
  4258                           	opt stack 0
  4259  000002                     i2Set_Column_Address@address:
  4260                           	opt stack 0
  4261  000002                     USBStdGetStatusHandler@p:
  4262                           	opt stack 0
  4263  000002                     i2USBTransferOnePacket@data:
  4264                           	opt stack 0
  4265                           
  4266                           ; 2 bytes @ 0x1
  4267  000002                     	ds	1
  4268  000003                     i2oled_putChar@station_dot:
  4269                           	opt stack 0
  4270  000003                     i2memset@c:
  4271                           	opt stack 0
  4272                           
  4273                           ; 2 bytes @ 0x2
  4274  000003                     	ds	1
  4275  000004                     i2oled_putChar@start_page:
  4276                           	opt stack 0
  4277  000004                     i2USBTransferOnePacket@len:
  4278                           	opt stack 0
  4279                           
  4280                           ; 1 bytes @ 0x3
  4281  000004                     	ds	1
  4282  000005                     ??i2_oled_putChar:
  4283  000005                     i2USBTransferOnePacket@ep:
  4284                           	opt stack 0
  4285  000005                     i2memset@n:
  4286                           	opt stack 0
  4287  000005                     ___lldiv@divisor:
  4288                           	opt stack 0
  4289                           
  4290                           ; 4 bytes @ 0x4
  4291  000005                     	ds	1
  4292  000006                     USBConfigureEndpoint@EPNum:
  4293                           	opt stack 0
  4294  000006                     i2USBTransferOnePacket@handle:
  4295                           	opt stack 0
  4296                           
  4297                           ; 2 bytes @ 0x5
  4298  000006                     	ds	1
  4299  000007                     USBConfigureEndpoint@handle:
  4300                           	opt stack 0
  4301  000007                     i2memset@p:
  4302                           	opt stack 0
  4303                           
  4304                           ; 2 bytes @ 0x6
  4305  000007                     	ds	2
  4306  000009                     USBEnableEndpoint@options:
  4307                           	opt stack 0
  4308  000009                     i2USBDeviceInit@i:
  4309                           	opt stack 0
  4310  000009                     ___lldiv@quotient:
  4311                           	opt stack 0
  4312                           
  4313                           ; 4 bytes @ 0x8
  4314  000009                     	ds	1
  4315  00000A                     USBEnableEndpoint@p:
  4316                           	opt stack 0
  4317                           
  4318                           ; 2 bytes @ 0x9
  4319  00000A                     	ds	1
  4320  00000B                     i2oled_putChar@k:
  4321                           	opt stack 0
  4322                           
  4323                           ; 1 bytes @ 0xA
  4324  00000B                     	ds	1
  4325  00000C                     USBEnableEndpoint@ep:
  4326                           	opt stack 0
  4327  00000C                     i2oled_putChar@index:
  4328                           	opt stack 0
  4329                           
  4330                           ; 1 bytes @ 0xB
  4331  00000C                     	ds	1
  4332  00000D                     USBapp_CdcEmulatorInitialize@i:
  4333                           	opt stack 0
  4334  00000D                     ___lldiv@counter:
  4335                           	opt stack 0
  4336  00000D                     i2oled_clearRow@page:
  4337                           	opt stack 0
  4338  00000D                     i2oled_putString@string:
  4339                           	opt stack 0
  4340                           
  4341                           ; 2 bytes @ 0xC
  4342  00000D                     	ds	1
  4343  00000E                     i2oled_clearRow@index:
  4344                           	opt stack 0
  4345  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4346                           	opt stack 0
  4347  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4348                           	opt stack 0
  4349                           
  4350                           ; 4 bytes @ 0xD
  4351  00000E                     	ds	1
  4352  00000F                     i2oled_putString@station_dot:
  4353                           	opt stack 0
  4354                           
  4355                           ; 1 bytes @ 0xE
  4356  00000F                     	ds	1
  4357  000010                     i2oled_putString@start_page:
  4358                           	opt stack 0
  4359  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4360                           	opt stack 0
  4361                           
  4362                           ; 2 bytes @ 0xF
  4363  000010                     	ds	1
  4364  000011                     i2oled_putString@index:
  4365                           	opt stack 0
  4366                           
  4367                           ; 1 bytes @ 0x10
  4368  000011                     	ds	1
  4369  000012                     USBCtrlTrfRxService@i:
  4370                           	opt stack 0
  4371  000012                     USBCtrlTrfInHandler@lastDTS:
  4372                           	opt stack 0
  4373  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4374                           	opt stack 0
  4375  000012                     printfOled@buffer_rx:
  4376                           	opt stack 0
  4377                           
  4378                           ; 2 bytes @ 0x11
  4379  000012                     	ds	1
  4380  000013                     USBCtrlTrfRxService@byteToRead:
  4381                           	opt stack 0
  4382                           
  4383                           ; 1 bytes @ 0x12
  4384  000013                     	ds	1
  4385  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4386  000014                     printfOled@numBytes:
  4387                           	opt stack 0
  4388                           
  4389                           ; 1 bytes @ 0x13
  4390  000014                     	ds	1
  4391  000015                     ??_printfOled:
  4392                           
  4393                           ; 1 bytes @ 0x14
  4394  000015                     	ds	1
  4395  000016                     ??_USBStdFeatureReqHandler:
  4396  000016                     USBStdSetCfgHandler@i:
  4397                           	opt stack 0
  4398                           
  4399                           ; 1 bytes @ 0x15
  4400  000016                     	ds	1
  4401  000017                     USBStdFeatureReqHandler@pUEP:
  4402                           	opt stack 0
  4403                           
  4404                           ; 2 bytes @ 0x16
  4405  000017                     	ds	2
  4406  000019                     USBStdFeatureReqHandler@current_ep_data:
  4407                           	opt stack 0
  4408                           
  4409                           ; 1 bytes @ 0x18
  4410  000019                     	ds	1
  4411  00001A                     USBStdFeatureReqHandler@p:
  4412                           	opt stack 0
  4413  00001A                     printfOled@tempBuffer:
  4414                           	opt stack 0
  4415                           
  4416                           ; 16 bytes @ 0x19
  4417  00001A                     	ds	2
  4418  00001C                     ??_USBCtrlEPService:
  4419  00001C                     
  4420                           ; 1 bytes @ 0x1B
  4421  00001C                     	ds	2
  4422  00001E                     USBCtrlEPService@setup_cnt:
  4423                           	opt stack 0
  4424                           
  4425                           ; 1 bytes @ 0x1D
  4426  00001E                     	ds	1
  4427  00001F                     USBDeviceTasks@i:
  4428                           	opt stack 0
  4429                           
  4430                           ; 1 bytes @ 0x1E
  4431  00001F                     	ds	11
  4432  00002A                     printfOled@j:
  4433                           	opt stack 0
  4434                           
  4435                           ; 1 bytes @ 0x29
  4436  00002A                     	ds	1
  4437  00002B                     printfOled@i:
  4438                           	opt stack 0
  4439                           
  4440                           ; 1 bytes @ 0x2A
  4441  00002B                     	ds	1
  4442  00002C                     ??_InterruptTimerUART:
  4443                           
  4444                           ; 1 bytes @ 0x2B
  4445  00002C                     	ds	2
  4446  00002E                     InterruptTimerUART@mask:
  4447                           	opt stack 0
  4448                           
  4449                           ; 1 bytes @ 0x2D
  4450  00002E                     	ds	1
  4451  00002F                     ??_INTERRUPT_InterruptManager:
  4452                           
  4453                           ; 1 bytes @ 0x2E
  4454  00002F                     	ds	18
  4455  000041                     INTERRUPT_InterruptManager@tClearPin:
  4456                           	opt stack 0
  4457                           
  4458                           ; 1 bytes @ 0x40
  4459  000041                     	ds	1
  4460                           tblptru	equ	0xFF8
  4461                           tblptrh	equ	0xFF7
  4462                           tblptrl	equ	0xFF6
  4463                           tablat	equ	0xFF5
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postdec1	equ	0xFE5
  4467                           fsr1l	equ	0xFE1
  4468                           
  4469 ;;
  4470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4471 ;;
  4472 ;; *************** function _main *****************
  4473 ;; Defined at:
  4474 ;;		line 70 in file "main.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels required when called:   20
  4494 ;; This function calls:
  4495 ;;		_DATAEE_ReadByte
  4496 ;;		_DATAEE_WriteByte
  4497 ;;		_MOTEapp_handlerState
  4498 ;;		_SYSTEM_Initialize
  4499 ;;		_USBDeviceAttach
  4500 ;;		_USBDeviceInit
  4501 ;;		_USBapp_Handler
  4502 ;;		_USBapp_handlerState
  4503 ;;		_moduleResync
  4504 ;;		_moteApp_clearCommand
  4505 ;;		_moteApp_delayms
  4506 ;;		_moteHandler
  4507 ;;		_oled_clear
  4508 ;;		_oled_init
  4509 ;;		_oled_putString
  4510 ;;		_test_powerup
  4511 ;; This function is called by:
  4512 ;;		Startup code after reset
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text0
  4517  002E26                     __ptext0:
  4518                           	opt stack 0
  4519  002E26                     _main:
  4520                           	opt stack 11
  4521                           
  4522                           ;main.c: 73: SYSTEM_Initialize();
  4523                           
  4524                           ;incstack = 0
  4525  002E26  EC22  F02C         	call	_SYSTEM_Initialize	;wreg free
  4526                           
  4527                           ;main.c: 75: oled_init();
  4528  002E2A  EC65  F02B         	call	_oled_init	;wreg free
  4529                           
  4530                           ;main.c: 76: USBDeviceInit();
  4531  002E2E  EC4D  F015         	call	_USBDeviceInit	;wreg free
  4532                           
  4533                           ;main.c: 78: USBDeviceAttach();
  4534  002E32  EC00  F02B         	call	_USBDeviceAttach	;wreg free
  4535                           
  4536                           ;main.c: 80: LATBbits.LATB5 = 1;
  4537  002E36  8A8A               	bsf	3978,5,c	;volatile
  4538                           
  4539                           ;main.c: 81: moteApp_delayms(50);
  4540  002E38  0E00               	movlw	0
  4541  002E3A  0100               	movlb	0	; () banked
  4542  002E3C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4543  002E3E  0E32               	movlw	50
  4544  002E40  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4545  002E42  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4546                           
  4547                           ;main.c: 82: LATBbits.LATB5 = 0;
  4548  002E46  9A8A               	bcf	3978,5,c	;volatile
  4549                           
  4550                           ;main.c: 83: moteApp_delayms(500);
  4551  002E48  0E01               	movlw	1
  4552  002E4A  0100               	movlb	0	; () banked
  4553  002E4C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4554  002E4E  0EF4               	movlw	244
  4555  002E50  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4556  002E52  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4557                           
  4558                           ;main.c: 85: PEIE = 1;
  4559  002E56  8CF2               	bsf	intcon,6,c	;volatile
  4560                           
  4561                           ;main.c: 86: GIE = 1;
  4562  002E58  8EF2               	bsf	intcon,7,c	;volatile
  4563                           
  4564                           ;main.c: 88: moduleResync();
  4565  002E5A  ECFB  F023         	call	_moduleResync	;wreg free
  4566                           
  4567                           ;main.c: 89: moteApp_delayms(20);
  4568  002E5E  0E00               	movlw	0
  4569  002E60  0100               	movlb	0	; () banked
  4570  002E62  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4571  002E64  0E14               	movlw	20
  4572  002E66  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4573  002E68  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4574                           
  4575                           ;main.c: 90: moteApp_clearCommand();
  4576  002E6C  ECD5  F02D         	call	_moteApp_clearCommand	;wreg free
  4577                           
  4578                           ;main.c: 91: moteApp_delayms(20);
  4579  002E70  0E00               	movlw	0
  4580  002E72  0100               	movlb	0	; () banked
  4581  002E74  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4582  002E76  0E14               	movlw	20
  4583  002E78  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4584  002E7A  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4585                           
  4586                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4587  002E7E  0E00               	movlw	0
  4588  002E80  EC62  F02D         	call	_DATAEE_ReadByte
  4589  002E84  0100               	movlb	0	; () banked
  4590  002E86  6FF6               	movwf	_powerOnStatus& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4594  002E88  0E55               	movlw	85
  4595  002E8A  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4596  002E8C  B4D8               	btfsc	status,2,c
  4597  002E8E  D008               	goto	l57
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;main.c: 95: {
  4601                           ;main.c: 96: test_powerup();
  4602  002E90  ECF8  F025         	call	_test_powerup	;wreg free
  4603                           
  4604                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4605  002E94  0E55               	movlw	85
  4606  002E96  0100               	movlb	0	; () banked
  4607  002E98  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4608  002E9A  0E00               	movlw	0
  4609  002E9C  EC6F  F02A         	call	_DATAEE_WriteByte
  4610  002EA0                     l57:
  4611                           
  4612                           ;main.c: 98: }
  4613                           ;main.c: 101: operationType = USB;
  4614  002EA0  0E00               	movlw	0
  4615  002EA2  0100               	movlb	0	; () banked
  4616  002EA4  6FF7               	movwf	_operationType& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4620  002EA6  0E00               	movlw	0
  4621  002EA8  EC08  F02E         	call	_USBapp_handlerState
  4622                           
  4623                           ;main.c: 104: oled_clear();
  4624  002EAC  EC1A  F02D         	call	_oled_clear	;wreg free
  4625                           
  4626                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4627  002EB0  0E1E               	movlw	low STR_1
  4628  002EB2  0100               	movlb	0	; () banked
  4629  002EB4  6F72               	movwf	oled_putString@string& (0+255),b
  4630  002EB6  0E7D               	movlw	high STR_1
  4631  002EB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4632  002EBA  0E00               	movlw	0
  4633  002EBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4634  002EBE  0E00               	movlw	0
  4635  002EC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  4636  002EC2  ECA1  F026         	call	_oled_putString	;wreg free
  4637                           
  4638                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4639  002EC6  0E00               	movlw	low STR_2
  4640  002EC8  0100               	movlb	0	; () banked
  4641  002ECA  6F72               	movwf	oled_putString@string& (0+255),b
  4642  002ECC  0E7D               	movlw	high STR_2
  4643  002ECE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4644  002ED0  0E00               	movlw	0
  4645  002ED2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4646  002ED4  0E01               	movlw	1
  4647  002ED6  6F75               	movwf	oled_putString@start_page& (0+255),b
  4648  002ED8  ECA1  F026         	call	_oled_putString	;wreg free
  4649                           
  4650                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4651  002EDC  0E0F               	movlw	low STR_3
  4652  002EDE  0100               	movlb	0	; () banked
  4653  002EE0  6F72               	movwf	oled_putString@string& (0+255),b
  4654  002EE2  0E7D               	movlw	high STR_3
  4655  002EE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4656  002EE6  0E00               	movlw	0
  4657  002EE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4658  002EEA  0E03               	movlw	3
  4659  002EEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  4660  002EEE  ECA1  F026         	call	_oled_putString	;wreg free
  4661                           
  4662                           ;main.c: 108: moteApp_delayms(1000);
  4663  002EF2  0E03               	movlw	3
  4664  002EF4  0100               	movlb	0	; () banked
  4665  002EF6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4666  002EF8  0EE8               	movlw	232
  4667  002EFA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4668  002EFC  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4669                           
  4670                           ;main.c: 112: {
  4671                           ;main.c: 114: switch (operationType)
  4672                           
  4673                           ;main.c: 111: while(1)
  4674  002F00  D015               	goto	l67
  4675  002F02                     
  4676                           ;main.c: 117: while(1);
  4677  002F02  D7FF               	goto	l60
  4678  002F04                     
  4679                           ;main.c: 120: USBapp_Handler();
  4680  002F04  ECF4  F01F         	call	_USBapp_Handler	;wreg free
  4681                           
  4682                           ;main.c: 122: operationType = MOTE;
  4683  002F08  0E01               	movlw	1
  4684  002F0A  0100               	movlb	0	; () banked
  4685  002F0C  6FF7               	movwf	_operationType& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4689  002F0E  0E01               	movlw	1
  4690  002F10  EC0D  F02E         	call	_MOTEapp_handlerState
  4691                           
  4692                           ;main.c: 124: break;
  4693  002F14  D00B               	goto	l67
  4694  002F16                     
  4695                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4696  002F16  EC6F  F010         	call	_moteHandler	;wreg free
  4697  002F1A  0A04               	xorlw	4
  4698  002F1C  A4D8               	btfss	status,2,c
  4699  002F1E  D006               	goto	l67
  4700                           
  4701                           ;main.c: 127: {
  4702                           ;main.c: 129: operationType = USB;
  4703  002F20  0E00               	movlw	0
  4704  002F22  0100               	movlb	0	; () banked
  4705  002F24  6FF7               	movwf	_operationType& (0+255),b
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4709  002F26  0E00               	movlw	0
  4710  002F28  EC08  F02E         	call	_USBapp_handlerState
  4711  002F2C                     l67:
  4712                           
  4713                           ;main.c: 133: }
  4714                           
  4715                           ;main.c: 131: }
  4716                           ;main.c: 132: break;
  4717  002F2C  0100               	movlb	0	; () banked
  4718  002F2E  51F7               	movf	_operationType& (0+255),w,b
  4719                           
  4720                           ; Switch size 1, requested type "space"
  4721                           ; Number of cases is 2, Range of values is 0 to 1
  4722                           ; switch strategies available:
  4723                           ; Name         Instructions Cycles
  4724                           ; simple_byte            7     4 (average)
  4725                           ;	Chosen strategy is simple_byte
  4726  002F30  0A00               	xorlw	0	; case 0
  4727  002F32  B4D8               	btfsc	status,2,c
  4728  002F34  D7E7               	goto	l65
  4729  002F36  0A01               	xorlw	1	; case 1
  4730  002F38  B4D8               	btfsc	status,2,c
  4731  002F3A  D7ED               	goto	l66
  4732  002F3C  D7E2               	goto	l60
  4733  002F3E                     __end_of_main:
  4734                           	opt stack 0
  4735                           tblptru	equ	0xFF8
  4736                           tblptrh	equ	0xFF7
  4737                           tblptrl	equ	0xFF6
  4738                           tablat	equ	0xFF5
  4739                           intcon	equ	0xFF2
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           postdec1	equ	0xFE5
  4743                           fsr1l	equ	0xFE1
  4744                           status	equ	0xFD8
  4745                           
  4746 ;; *************** function _test_powerup *****************
  4747 ;; Defined at:
  4748 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4765 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:   17
  4769 ;; This function calls:
  4770 ;;		_EUSART_FlushBuffer
  4771 ;;		_moteApp_delayms
  4772 ;;		_moteApp_testSensors
  4773 ;;		_oled_clear
  4774 ;;		_test_comms
  4775 ;;		_test_leds
  4776 ;;		_test_oled
  4777 ;;		_test_switch
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text1
  4784  004BF0                     __ptext1:
  4785                           	opt stack 0
  4786  004BF0                     _test_powerup:
  4787                           	opt stack 13
  4788                           
  4789                           ;poweruptest.c: 65: test_oled();
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;incstack = 0
  4793  004BF0  EC2D  F023         	call	_test_oled	;wreg free
  4794                           
  4795                           ;poweruptest.c: 66: moteApp_delayms(20);
  4796  004BF4  0E00               	movlw	0
  4797  004BF6  0100               	movlb	0	; () banked
  4798  004BF8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4799  004BFA  0E14               	movlw	20
  4800  004BFC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4801  004BFE  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4802                           
  4803                           ;poweruptest.c: 68: test_switch();
  4804  004C02  ECF7  F01C         	call	_test_switch	;wreg free
  4805                           
  4806                           ;poweruptest.c: 70: oled_clear();
  4807  004C06  EC1A  F02D         	call	_oled_clear	;wreg free
  4808                           
  4809                           ;poweruptest.c: 71: moteApp_delayms(20);
  4810  004C0A  0E00               	movlw	0
  4811  004C0C  0100               	movlb	0	; () banked
  4812  004C0E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4813  004C10  0E14               	movlw	20
  4814  004C12  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4815  004C14  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4816                           
  4817                           ;poweruptest.c: 72: test_comms();
  4818  004C18  EC0C  F027         	call	_test_comms	;wreg free
  4819                           
  4820                           ;poweruptest.c: 73: moteApp_delayms(20);
  4821  004C1C  0E00               	movlw	0
  4822  004C1E  0100               	movlb	0	; () banked
  4823  004C20  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4824  004C22  0E14               	movlw	20
  4825  004C24  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4826  004C26  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4827                           
  4828                           ;poweruptest.c: 75: test_leds();
  4829  004C2A  ECDA  F027         	call	_test_leds	;wreg free
  4830                           
  4831                           ;poweruptest.c: 78: moteApp_delayms(20);
  4832  004C2E  0E00               	movlw	0
  4833  004C30  0100               	movlb	0	; () banked
  4834  004C32  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4835  004C34  0E14               	movlw	20
  4836  004C36  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4837  004C38  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4838                           
  4839                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4840  004C3C  ECCF  F029         	call	_EUSART_FlushBuffer	;wreg free
  4841                           
  4842                           ;poweruptest.c: 80: moteApp_delayms(20);
  4843  004C40  0E00               	movlw	0
  4844  004C42  0100               	movlb	0	; () banked
  4845  004C44  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4846  004C46  0E14               	movlw	20
  4847  004C48  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4848  004C4A  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4849                           
  4850                           ;poweruptest.c: 81: moteApp_testSensors();
  4851  004C4E  EC5D  F01D         	call	_moteApp_testSensors	;wreg free
  4852                           
  4853                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4854  004C52  0E0B               	movlw	11
  4855  004C54  0100               	movlb	0	; () banked
  4856  004C56  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4857  004C58  0EB8               	movlw	184
  4858  004C5A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4859  004C5C  EC33  F02B         	call	_moteApp_delayms	;wreg free
  4860  004C60  0012               	return		;funcret
  4861  004C62                     __end_of_test_powerup:
  4862                           	opt stack 0
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           intcon	equ	0xFF2
  4868                           postinc0	equ	0xFEE
  4869                           wreg	equ	0xFE8
  4870                           postdec1	equ	0xFE5
  4871                           fsr1l	equ	0xFE1
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _test_switch *****************
  4875 ;; Defined at:
  4876 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  timeout         2   24[BANK0 ] unsigned int 
  4881 ;;  buttonCheck     1   26[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0
  4892 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4894 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        4 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:   16
  4898 ;; This function calls:
  4899 ;;		_oled_clear
  4900 ;;		_oled_putString
  4901 ;; This function is called by:
  4902 ;;		_test_powerup
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text2
  4907  0039EE                     __ptext2:
  4908                           	opt stack 0
  4909  0039EE                     _test_switch:
  4910                           	opt stack 13
  4911                           
  4912                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4913                           
  4914                           ;incstack = 0
  4915  0039EE  0E01               	movlw	1
  4916  0039F0  0100               	movlb	0	; () banked
  4917  0039F2  6F79               	movwf	(test_switch@timeout+1)& (0+255),b
  4918  0039F4  0EF4               	movlw	244
  4919  0039F6  6F78               	movwf	test_switch@timeout& (0+255),b
  4920                           
  4921                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4922  0039F8  0E00               	movlw	0
  4923  0039FA  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;poweruptest.c: 103: oled_clear();
  4927  0039FC  EC1A  F02D         	call	_oled_clear	;wreg free
  4928                           
  4929                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4930  003A00  0EF4               	movlw	low STR_10
  4931  003A02  0100               	movlb	0	; () banked
  4932  003A04  6F72               	movwf	oled_putString@string& (0+255),b
  4933  003A06  0E7D               	movlw	high STR_10
  4934  003A08  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4935  003A0A  0E00               	movlw	0
  4936  003A0C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4937  003A0E  0E00               	movlw	0
  4938  003A10  6F75               	movwf	oled_putString@start_page& (0+255),b
  4939  003A12  ECA1  F026         	call	_oled_putString	;wreg free
  4940                           
  4941                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4942  003A16  A281               	btfss	3969,1,c	;volatile
  4943  003A18  D002               	goto	u8850
  4944  003A1A  B081               	btfsc	3969,0,c	;volatile
  4945  003A1C  D00C               	goto	l123
  4946  003A1E                     u8850:
  4947                           
  4948                           ;poweruptest.c: 107: {
  4949                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4950  003A1E  0E7C               	movlw	low STR_11
  4951  003A20  0100               	movlb	0	; () banked
  4952  003A22  6F72               	movwf	oled_putString@string& (0+255),b
  4953  003A24  0E7E               	movlw	high STR_11
  4954  003A26  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4955  003A28  0E00               	movlw	0
  4956  003A2A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4957  003A2C  0E03               	movlw	3
  4958  003A2E  6F75               	movwf	oled_putString@start_page& (0+255),b
  4959  003A30  ECA1  F026         	call	_oled_putString	;wreg free
  4960                           
  4961                           ;poweruptest.c: 109: }
  4962  003A34  D038               	goto	l127
  4963  003A36                     l123:
  4964                           
  4965                           ;poweruptest.c: 110: else
  4966                           ;poweruptest.c: 111: {
  4967                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4968  003A36  0E1B               	movlw	low STR_12
  4969  003A38  0100               	movlb	0	; () banked
  4970  003A3A  6F72               	movwf	oled_putString@string& (0+255),b
  4971  003A3C  0E7E               	movlw	high STR_12
  4972  003A3E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4973  003A40  0E00               	movlw	0
  4974  003A42  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4975  003A44  0E01               	movlw	1
  4976  003A46  6F75               	movwf	oled_putString@start_page& (0+255),b
  4977  003A48  ECA1  F026         	call	_oled_putString	;wreg free
  4978                           
  4979                           ;poweruptest.c: 113: }
  4980                           ;poweruptest.c: 114: while(timeout--)
  4981  003A4C  D02C               	goto	l127
  4982  003A4E                     l128:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;poweruptest.c: 115: {
  4986                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4987  003A4E  B281               	btfsc	3969,1,c	;volatile
  4988  003A50  D00E               	goto	l129
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;poweruptest.c: 117: {
  4992                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4993  003A52  0E01               	movlw	low STR_13
  4994  003A54  6F72               	movwf	oled_putString@string& (0+255),b
  4995  003A56  0E7E               	movlw	high STR_13
  4996  003A58  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4997  003A5A  0E00               	movlw	0
  4998  003A5C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4999  003A5E  0E02               	movlw	2
  5000  003A60  6F75               	movwf	oled_putString@start_page& (0+255),b
  5001  003A62  ECA1  F026         	call	_oled_putString	;wreg free
  5002                           
  5003                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  5004  003A66  0100               	movlb	0	; () banked
  5005  003A68  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  5006  003A6A  0F08               	addlw	8
  5007  003A6C  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  5008  003A6E                     l129:
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;poweruptest.c: 120: }
  5012                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  5013                           
  5014                           ; BSR set to: 0
  5015  003A6E  B081               	btfsc	3969,0,c	;volatile
  5016  003A70  D00E               	goto	l130
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;poweruptest.c: 122: {
  5020                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  5021  003A72  0E0E               	movlw	low STR_14
  5022  003A74  6F72               	movwf	oled_putString@string& (0+255),b
  5023  003A76  0E7E               	movlw	high STR_14
  5024  003A78  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5025  003A7A  0E00               	movlw	0
  5026  003A7C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5027  003A7E  0E03               	movlw	3
  5028  003A80  6F75               	movwf	oled_putString@start_page& (0+255),b
  5029  003A82  ECA1  F026         	call	_oled_putString	;wreg free
  5030                           
  5031                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  5032  003A86  0100               	movlb	0	; () banked
  5033  003A88  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  5034  003A8A  0F80               	addlw	128
  5035  003A8C  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  5036  003A8E                     l130:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;poweruptest.c: 125: }
  5040                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  5041                           
  5042                           ; BSR set to: 0
  5043  003A8E  0E88               	movlw	136
  5044  003A90  197A               	xorwf	test_switch@buttonCheck& (0+255),w,b
  5045  003A92  B4D8               	btfsc	status,2,c
  5046  003A94  0012               	return	
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;poweruptest.c: 129: }
  5050                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  5051                           
  5052                           ; BSR set to: 0
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;poweruptest.c: 127: {
  5056                           ;poweruptest.c: 128: break;
  5057  003A96  0E9C               	movlw	156
  5058  003A98  0100               	movlb	0	; () banked
  5059  003A9A  6F77               	movwf	??_test_switch& (0+255),b
  5060  003A9C  0ED7               	movlw	215
  5061  003A9E                     u11227:
  5062  003A9E  2EE8               	decfsz	wreg,f,c
  5063  003AA0  D7FE               	bra	u11227
  5064  003AA2  2F77               	decfsz	??_test_switch& (0+255),f,b
  5065  003AA4  D7FC               	bra	u11227
  5066  003AA6                     l127:
  5067  003AA6  0100               	movlb	0	; () banked
  5068  003AA8  0778               	decf	test_switch@timeout& (0+255),f,b
  5069  003AAA  A0D8               	btfss	status,0,c
  5070  003AAC  0779               	decf	(test_switch@timeout+1)& (0+255),f,b
  5071  003AAE  2978               	incf	test_switch@timeout& (0+255),w,b
  5072  003AB0  E1CE               	bnz	l128
  5073  003AB2  2979               	incf	(test_switch@timeout+1)& (0+255),w,b
  5074  003AB4  B4D8               	btfsc	status,2,c
  5075  003AB6  0012               	return	
  5076  003AB8  D7CA               	goto	l128
  5077  003ABA                     __end_of_test_switch:
  5078                           	opt stack 0
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           intcon	equ	0xFF2
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postdec1	equ	0xFE5
  5087                           fsr1l	equ	0xFE1
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _test_oled *****************
  5091 ;; Defined at:
  5092 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:   16
  5113 ;; This function calls:
  5114 ;;		_oled_clear
  5115 ;;		_oled_putString
  5116 ;; This function is called by:
  5117 ;;		_test_powerup
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text3
  5122  00465A                     __ptext3:
  5123                           	opt stack 0
  5124  00465A                     _test_oled:
  5125                           	opt stack 13
  5126                           
  5127                           ;poweruptest.c: 88: oled_clear();
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;incstack = 0
  5131  00465A  EC1A  F02D         	call	_oled_clear	;wreg free
  5132                           
  5133                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5134  00465E  0E3D               	movlw	low STR_4
  5135  004660  0100               	movlb	0	; () banked
  5136  004662  6F72               	movwf	oled_putString@string& (0+255),b
  5137  004664  0E7F               	movlw	high STR_4
  5138  004666  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5139  004668  0E00               	movlw	0
  5140  00466A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5141  00466C  0E00               	movlw	0
  5142  00466E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5143  004670  ECA1  F026         	call	_oled_putString	;wreg free
  5144                           
  5145                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5146  004674  0E8A               	movlw	low (STR_164+11)
  5147  004676  0100               	movlb	0	; () banked
  5148  004678  6F72               	movwf	oled_putString@string& (0+255),b
  5149  00467A  0E7D               	movlw	high (STR_164+11)
  5150  00467C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5151  00467E  0E00               	movlw	0
  5152  004680  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5153  004682  0E06               	movlw	6
  5154  004684  6F75               	movwf	oled_putString@start_page& (0+255),b
  5155  004686  ECA1  F026         	call	_oled_putString	;wreg free
  5156                           
  5157                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5158  00468A  0E97               	movlw	low (STR_165+11)
  5159  00468C  0100               	movlb	0	; () banked
  5160  00468E  6F72               	movwf	oled_putString@string& (0+255),b
  5161  004690  0E7D               	movlw	high (STR_165+11)
  5162  004692  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5163  004694  0E00               	movlw	0
  5164  004696  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5165  004698  0E08               	movlw	8
  5166  00469A  6F75               	movwf	oled_putString@start_page& (0+255),b
  5167  00469C  ECA1  F026         	call	_oled_putString	;wreg free
  5168                           
  5169                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5170  0046A0  0EC3               	movlw	low STR_7
  5171  0046A2  0100               	movlb	0	; () banked
  5172  0046A4  6F72               	movwf	oled_putString@string& (0+255),b
  5173  0046A6  0E7C               	movlw	high STR_7
  5174  0046A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5175  0046AA  0E00               	movlw	0
  5176  0046AC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5177  0046AE  0E01               	movlw	1
  5178  0046B0  6F75               	movwf	oled_putString@start_page& (0+255),b
  5179  0046B2  ECA1  F026         	call	_oled_putString	;wreg free
  5180                           
  5181                           ;poweruptest.c: 94: oled_putString("Mar 30 2018",0,2);
  5182  0046B6  0E70               	movlw	low STR_8
  5183  0046B8  0100               	movlb	0	; () banked
  5184  0046BA  6F72               	movwf	oled_putString@string& (0+255),b
  5185  0046BC  0E7E               	movlw	high STR_8
  5186  0046BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5187  0046C0  0E00               	movlw	0
  5188  0046C2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5189  0046C4  0E02               	movlw	2
  5190  0046C6  6F75               	movwf	oled_putString@start_page& (0+255),b
  5191  0046C8  ECA1  F026         	call	_oled_putString	;wreg free
  5192                           
  5193                           ;poweruptest.c: 95: oled_putString("17:17:38",0,3);
  5194  0046CC  0E46               	movlw	low STR_9
  5195  0046CE  0100               	movlb	0	; () banked
  5196  0046D0  6F72               	movwf	oled_putString@string& (0+255),b
  5197  0046D2  0E7F               	movlw	high STR_9
  5198  0046D4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5199  0046D6  0E00               	movlw	0
  5200  0046D8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5201  0046DA  0E03               	movlw	3
  5202  0046DC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5203  0046DE  ECA1  F026         	call	_oled_putString	;wreg free
  5204  0046E2  0012               	return		;funcret
  5205  0046E4                     __end_of_test_oled:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           postdec1	equ	0xFE5
  5215                           fsr1l	equ	0xFE1
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _test_leds *****************
  5219 ;; Defined at:
  5220 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:   15
  5241 ;; This function calls:
  5242 ;;		_delayms
  5243 ;;		_oled_putString
  5244 ;; This function is called by:
  5245 ;;		_test_powerup
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text4
  5250  004FB4                     __ptext4:
  5251                           	opt stack 0
  5252  004FB4                     _test_leds:
  5253                           	opt stack 14
  5254                           
  5255                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5256                           
  5257                           ;incstack = 0
  5258  004FB4  0E06               	movlw	low STR_16
  5259  004FB6  0100               	movlb	0	; () banked
  5260  004FB8  6F72               	movwf	oled_putString@string& (0+255),b
  5261  004FBA  0E7F               	movlw	high STR_16
  5262  004FBC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5263  004FBE  0E00               	movlw	0
  5264  004FC0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5265  004FC2  0E01               	movlw	1
  5266  004FC4  6F75               	movwf	oled_putString@start_page& (0+255),b
  5267  004FC6  ECA1  F026         	call	_oled_putString	;wreg free
  5268                           
  5269                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5270  004FCA  8C89               	bsf	3977,6,c	;volatile
  5271                           
  5272                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5273  004FCC  8E89               	bsf	3977,7,c	;volatile
  5274                           
  5275                           ;poweruptest.c: 153: delayms(500);
  5276  004FCE  0E01               	movlw	1
  5277  004FD0  0100               	movlb	0	; () banked
  5278  004FD2  6F61               	movwf	(delayms@t+1)& (0+255),b
  5279  004FD4  0EF4               	movlw	244
  5280  004FD6  6F60               	movwf	delayms@t& (0+255),b
  5281  004FD8  EC1A  F02B         	call	_delayms	;wreg free
  5282                           
  5283                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5284  004FDC  9C89               	bcf	3977,6,c	;volatile
  5285                           
  5286                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5287  004FDE  9E89               	bcf	3977,7,c	;volatile
  5288                           
  5289                           ;poweruptest.c: 156: delayms(500);
  5290  004FE0  0E01               	movlw	1
  5291  004FE2  0100               	movlb	0	; () banked
  5292  004FE4  6F61               	movwf	(delayms@t+1)& (0+255),b
  5293  004FE6  0EF4               	movlw	244
  5294  004FE8  6F60               	movwf	delayms@t& (0+255),b
  5295  004FEA  EC1A  F02B         	call	_delayms	;wreg free
  5296                           
  5297                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5298  004FEE  8C89               	bsf	3977,6,c	;volatile
  5299                           
  5300                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5301  004FF0  8E89               	bsf	3977,7,c	;volatile
  5302                           
  5303                           ;poweruptest.c: 159: delayms(500);
  5304  004FF2  0E01               	movlw	1
  5305  004FF4  0100               	movlb	0	; () banked
  5306  004FF6  6F61               	movwf	(delayms@t+1)& (0+255),b
  5307  004FF8  0EF4               	movlw	244
  5308  004FFA  6F60               	movwf	delayms@t& (0+255),b
  5309  004FFC  EC1A  F02B         	call	_delayms	;wreg free
  5310                           
  5311                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5312  005000  9C89               	bcf	3977,6,c	;volatile
  5313                           
  5314                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5315  005002  9E89               	bcf	3977,7,c	;volatile
  5316                           
  5317                           ;poweruptest.c: 162: delayms(500);
  5318  005004  0E01               	movlw	1
  5319  005006  0100               	movlb	0	; () banked
  5320  005008  6F61               	movwf	(delayms@t+1)& (0+255),b
  5321  00500A  0EF4               	movlw	244
  5322  00500C  6F60               	movwf	delayms@t& (0+255),b
  5323  00500E  EC1A  F02B         	call	_delayms	;wreg free
  5324  005012  0012               	return		;funcret
  5325  005014                     __end_of_test_leds:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           postdec1	equ	0xFE5
  5335                           fsr1l	equ	0xFE1
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function _test_comms *****************
  5339 ;; Defined at:
  5340 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:   15
  5361 ;; This function calls:
  5362 ;;		_delayms
  5363 ;;		_moteApp_toggleLeds
  5364 ;;		_oled_putString
  5365 ;; This function is called by:
  5366 ;;		_test_powerup
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text5
  5371  004E18                     __ptext5:
  5372                           	opt stack 0
  5373  004E18                     _test_comms:
  5374                           	opt stack 14
  5375                           
  5376                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5377                           
  5378                           ;incstack = 0
  5379  004E18  0EBF               	movlw	low STR_15
  5380  004E1A  0100               	movlb	0	; () banked
  5381  004E1C  6F72               	movwf	oled_putString@string& (0+255),b
  5382  004E1E  0E7E               	movlw	high STR_15
  5383  004E20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5384  004E22  0E00               	movlw	0
  5385  004E24  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5386  004E26  0E00               	movlw	0
  5387  004E28  6F75               	movwf	oled_putString@start_page& (0+255),b
  5388  004E2A  ECA1  F026         	call	_oled_putString	;wreg free
  5389                           
  5390                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5391  004E2E  0E01               	movlw	1
  5392  004E30  EC16  F019         	call	_moteApp_toggleLeds
  5393                           
  5394                           ;poweruptest.c: 138: delayms(500);
  5395  004E34  0E01               	movlw	1
  5396  004E36  0100               	movlb	0	; () banked
  5397  004E38  6F61               	movwf	(delayms@t+1)& (0+255),b
  5398  004E3A  0EF4               	movlw	244
  5399  004E3C  6F60               	movwf	delayms@t& (0+255),b
  5400  004E3E  EC1A  F02B         	call	_delayms	;wreg free
  5401                           
  5402                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5403  004E42  0E00               	movlw	0
  5404  004E44  EC16  F019         	call	_moteApp_toggleLeds
  5405                           
  5406                           ;poweruptest.c: 140: delayms(500);
  5407  004E48  0E01               	movlw	1
  5408  004E4A  0100               	movlb	0	; () banked
  5409  004E4C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5410  004E4E  0EF4               	movlw	244
  5411  004E50  6F60               	movwf	delayms@t& (0+255),b
  5412  004E52  EC1A  F02B         	call	_delayms	;wreg free
  5413                           
  5414                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5415  004E56  0E01               	movlw	1
  5416  004E58  EC16  F019         	call	_moteApp_toggleLeds
  5417                           
  5418                           ;poweruptest.c: 142: delayms(500);
  5419  004E5C  0E01               	movlw	1
  5420  004E5E  0100               	movlb	0	; () banked
  5421  004E60  6F61               	movwf	(delayms@t+1)& (0+255),b
  5422  004E62  0EF4               	movlw	244
  5423  004E64  6F60               	movwf	delayms@t& (0+255),b
  5424  004E66  EC1A  F02B         	call	_delayms	;wreg free
  5425                           
  5426                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5427  004E6A  0E00               	movlw	0
  5428  004E6C  EC16  F019         	call	_moteApp_toggleLeds
  5429                           
  5430                           ;poweruptest.c: 144: delayms(500);
  5431  004E70  0E01               	movlw	1
  5432  004E72  0100               	movlb	0	; () banked
  5433  004E74  6F61               	movwf	(delayms@t+1)& (0+255),b
  5434  004E76  0EF4               	movlw	244
  5435  004E78  6F60               	movwf	delayms@t& (0+255),b
  5436  004E7A  EC1A  F02B         	call	_delayms	;wreg free
  5437  004E7E  0012               	return		;funcret
  5438  004E80                     __end_of_test_comms:
  5439                           	opt stack 0
  5440                           tblptru	equ	0xFF8
  5441                           tblptrh	equ	0xFF7
  5442                           tblptrl	equ	0xFF6
  5443                           tablat	equ	0xFF5
  5444                           intcon	equ	0xFF2
  5445                           postinc0	equ	0xFEE
  5446                           wreg	equ	0xFE8
  5447                           postdec1	equ	0xFE5
  5448                           fsr1l	equ	0xFE1
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _moteApp_toggleLeds *****************
  5452 ;; Defined at:
  5453 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  state           1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  state           1    4[BANK0 ] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0
  5468 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5469 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5470 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5471 ;;Total ram usage:        2 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:   14
  5474 ;; This function calls:
  5475 ;;		_sendCommand
  5476 ;; This function is called by:
  5477 ;;		_test_comms
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text6
  5482  00322C                     __ptext6:
  5483                           	opt stack 0
  5484  00322C                     _moteApp_toggleLeds:
  5485                           	opt stack 14
  5486                           
  5487                           ;incstack = 0
  5488                           ;moteApp_toggleLeds@state stored from wreg
  5489  00322C  0100               	movlb	0	; () banked
  5490  00322E  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5491                           
  5492                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5493  003230  0EFA               	movlw	250
  5494  003232  0100               	movlb	0	; () banked
  5495  003234  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5496  003236  0E58               	movlw	88
  5497  003238                     u11237:
  5498  003238  2EE8               	decfsz	wreg,f,c
  5499  00323A  D7FE               	bra	u11237
  5500  00323C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5501  00323E  D7FC               	bra	u11237
  5502  003240  F000               	nop	
  5503                           
  5504                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5505  003242  0EFA               	movlw	250
  5506  003244  0100               	movlb	0	; () banked
  5507  003246  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5508  003248  0E58               	movlw	88
  5509  00324A                     u11247:
  5510  00324A  2EE8               	decfsz	wreg,f,c
  5511  00324C  D7FE               	bra	u11247
  5512  00324E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5513  003250  D7FC               	bra	u11247
  5514  003252  F000               	nop	
  5515                           
  5516                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5517  003254  0EFA               	movlw	250
  5518  003256  0100               	movlb	0	; () banked
  5519  003258  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5520  00325A  0E58               	movlw	88
  5521  00325C                     u11257:
  5522  00325C  2EE8               	decfsz	wreg,f,c
  5523  00325E  D7FE               	bra	u11257
  5524  003260  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5525  003262  D7FC               	bra	u11257
  5526  003264  F000               	nop	
  5527                           
  5528                           ;MOTEapp.c: 1269: if (state)
  5529  003266  0100               	movlb	0	; () banked
  5530  003268  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5531  00326A  B4D8               	btfsc	status,2,c
  5532  00326C  D029               	goto	l679
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;MOTEapp.c: 1270: {
  5536                           ;MOTEapp.c: 1271: sendCommand("sys set pindig GPIO10 1\r\n");
  5537  00326E  0E22               	movlw	low STR_175
  5538  003270  6F61               	movwf	sendCommand@string& (0+255),b
  5539  003272  0E7A               	movlw	high STR_175
  5540  003274  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5541  003276  EC7D  F02B         	call	_sendCommand	;wreg free
  5542                           
  5543                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5544  00327A  0EFA               	movlw	250
  5545  00327C  0100               	movlb	0	; () banked
  5546  00327E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5547  003280  0E58               	movlw	88
  5548  003282                     u11267:
  5549  003282  2EE8               	decfsz	wreg,f,c
  5550  003284  D7FE               	bra	u11267
  5551  003286  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5552  003288  D7FC               	bra	u11267
  5553  00328A  F000               	nop	
  5554                           
  5555                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5556  00328C  0EFA               	movlw	250
  5557  00328E  0100               	movlb	0	; () banked
  5558  003290  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5559  003292  0E58               	movlw	88
  5560  003294                     u11277:
  5561  003294  2EE8               	decfsz	wreg,f,c
  5562  003296  D7FE               	bra	u11277
  5563  003298  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5564  00329A  D7FC               	bra	u11277
  5565  00329C  F000               	nop	
  5566                           
  5567                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5568  00329E  0EFA               	movlw	250
  5569  0032A0  0100               	movlb	0	; () banked
  5570  0032A2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5571  0032A4  0E58               	movlw	88
  5572  0032A6                     u11287:
  5573  0032A6  2EE8               	decfsz	wreg,f,c
  5574  0032A8  D7FE               	bra	u11287
  5575  0032AA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5576  0032AC  D7FC               	bra	u11287
  5577  0032AE  F000               	nop	
  5578                           
  5579                           ;MOTEapp.c: 1275: sendCommand("sys set pindig GPIO11 1\r\n");
  5580  0032B0  0E3C               	movlw	low STR_176
  5581  0032B2  0100               	movlb	0	; () banked
  5582  0032B4  6F61               	movwf	sendCommand@string& (0+255),b
  5583  0032B6  0E7A               	movlw	high STR_176
  5584  0032B8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5585  0032BA  EC7D  F02B         	call	_sendCommand	;wreg free
  5586                           
  5587                           ;MOTEapp.c: 1276: }
  5588  0032BE  0012               	return	
  5589  0032C0                     l679:
  5590                           
  5591                           ;MOTEapp.c: 1277: else
  5592                           ;MOTEapp.c: 1278: {
  5593                           ;MOTEapp.c: 1279: sendCommand("sys set pindig GPIO10 0\r\n");
  5594  0032C0  0EEE               	movlw	low STR_177
  5595  0032C2  0100               	movlb	0	; () banked
  5596  0032C4  6F61               	movwf	sendCommand@string& (0+255),b
  5597  0032C6  0E79               	movlw	high STR_177
  5598  0032C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5599  0032CA  EC7D  F02B         	call	_sendCommand	;wreg free
  5600                           
  5601                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5602  0032CE  0EFA               	movlw	250
  5603  0032D0  0100               	movlb	0	; () banked
  5604  0032D2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5605  0032D4  0E58               	movlw	88
  5606  0032D6                     u11297:
  5607  0032D6  2EE8               	decfsz	wreg,f,c
  5608  0032D8  D7FE               	bra	u11297
  5609  0032DA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5610  0032DC  D7FC               	bra	u11297
  5611  0032DE  F000               	nop	
  5612                           
  5613                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5614  0032E0  0EFA               	movlw	250
  5615  0032E2  0100               	movlb	0	; () banked
  5616  0032E4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5617  0032E6  0E58               	movlw	88
  5618  0032E8                     u11307:
  5619  0032E8  2EE8               	decfsz	wreg,f,c
  5620  0032EA  D7FE               	bra	u11307
  5621  0032EC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5622  0032EE  D7FC               	bra	u11307
  5623  0032F0  F000               	nop	
  5624                           
  5625                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5626  0032F2  0EFA               	movlw	250
  5627  0032F4  0100               	movlb	0	; () banked
  5628  0032F6  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5629  0032F8  0E58               	movlw	88
  5630  0032FA                     u11317:
  5631  0032FA  2EE8               	decfsz	wreg,f,c
  5632  0032FC  D7FE               	bra	u11317
  5633  0032FE  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5634  003300  D7FC               	bra	u11317
  5635  003302  F000               	nop	
  5636                           
  5637                           ;MOTEapp.c: 1283: sendCommand("sys set pindig GPIO11 0\r\n");
  5638  003304  0E08               	movlw	low STR_178
  5639  003306  0100               	movlb	0	; () banked
  5640  003308  6F61               	movwf	sendCommand@string& (0+255),b
  5641  00330A  0E7A               	movlw	high STR_178
  5642  00330C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5643  00330E  EC7D  F02B         	call	_sendCommand	;wreg free
  5644  003312  0012               	return	
  5645  003314                     __end_of_moteApp_toggleLeds:
  5646                           	opt stack 0
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           intcon	equ	0xFF2
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _delayms *****************
  5659 ;; Defined at:
  5660 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  t               2    0[BANK0 ] unsigned int 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  i               2    3[BANK0 ] unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       2       0       0       0       0       0       0       0
  5675 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5677 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        5 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:   11
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_test_comms
  5685 ;;		_test_leds
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text7
  5690  005634                     __ptext7:
  5691                           	opt stack 0
  5692  005634                     _delayms:
  5693                           	opt stack 17
  5694                           
  5695                           ;poweruptest.c: 56: uint16_t i;
  5696                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5697                           
  5698                           ;incstack = 0
  5699  005634  0E00               	movlw	0
  5700  005636  0100               	movlb	0	; () banked
  5701  005638  6F64               	movwf	(delayms@i+1)& (0+255),b
  5702  00563A  0E00               	movlw	0
  5703  00563C  6F63               	movwf	delayms@i& (0+255),b
  5704  00563E  D00C               	goto	l111
  5705  005640                     
  5706                           ; BSR set to: 0
  5707                           ;poweruptest.c: 58: {
  5708                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5709                           
  5710                           ; BSR set to: 0
  5711  005640  0E10               	movlw	16
  5712  005642  0100               	movlb	0	; () banked
  5713  005644  6F62               	movwf	??_delayms& (0+255),b
  5714  005646  0E94               	movlw	148
  5715  005648                     u11327:
  5716  005648  2EE8               	decfsz	wreg,f,c
  5717  00564A  D7FE               	bra	u11327
  5718  00564C  2F62               	decfsz	??_delayms& (0+255),f,b
  5719  00564E  D7FC               	bra	u11327
  5720  005650  F000               	nop	
  5721  005652  0100               	movlb	0	; () banked
  5722  005654  4B63               	infsnz	delayms@i& (0+255),f,b
  5723  005656  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5724  005658                     l111:
  5725                           
  5726                           ; BSR set to: 0
  5727  005658  5160               	movf	delayms@t& (0+255),w,b
  5728  00565A  5D63               	subwf	delayms@i& (0+255),w,b
  5729  00565C  5161               	movf	(delayms@t+1)& (0+255),w,b
  5730  00565E  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5731  005660  B0D8               	btfsc	status,0,c
  5732  005662  0012               	return	
  5733  005664  D7ED               	goto	l112
  5734  005666                     __end_of_delayms:
  5735                           	opt stack 0
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           intcon	equ	0xFF2
  5741                           postinc0	equ	0xFEE
  5742                           wreg	equ	0xFE8
  5743                           postdec1	equ	0xFE5
  5744                           fsr1l	equ	0xFE1
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _moteApp_testSensors *****************
  5748 ;; Defined at:
  5749 ;;		line 1368 in file "../Includes/Board/MOTEapp.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  dummyValue      2    0        unsigned int 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5765 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5766 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:   16
  5770 ;; This function calls:
  5771 ;;		_ADC_TempConversion
  5772 ;;		_moteApp_convertSensorValue
  5773 ;;		_moteApp_getLightValue
  5774 ;;		_moteApp_getTempValue
  5775 ;;		_moteApp_setSensorsInput
  5776 ;;		_oled_clear
  5777 ;;		_oled_putChar
  5778 ;;		_oled_putString
  5779 ;;		_oled_putint8
  5780 ;; This function is called by:
  5781 ;;		_test_powerup
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text8
  5786  003ABA                     __ptext8:
  5787                           	opt stack 0
  5788  003ABA                     _moteApp_testSensors:
  5789                           	opt stack 13
  5790                           
  5791                           ;MOTEapp.c: 1371: moteApp_setSensorsInput();
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;incstack = 0
  5795  003ABA  EC80  F025         	call	_moteApp_setSensorsInput	;wreg free
  5796                           
  5797                           ;MOTEapp.c: 1373: uint16_t dummyValue;
  5798                           ;MOTEapp.c: 1374: oled_clear();
  5799  003ABE  EC1A  F02D         	call	_oled_clear	;wreg free
  5800                           
  5801                           ;MOTEapp.c: 1375: oled_putString("ADC Test",0,0);
  5802  003AC2  0E58               	movlw	low STR_17
  5803  003AC4  0100               	movlb	0	; () banked
  5804  003AC6  6F72               	movwf	oled_putString@string& (0+255),b
  5805  003AC8  0E7F               	movlw	high STR_17
  5806  003ACA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5807  003ACC  0E00               	movlw	0
  5808  003ACE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5809  003AD0  0E00               	movlw	0
  5810  003AD2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5811  003AD4  ECA1  F026         	call	_oled_putString	;wreg free
  5812                           
  5813                           ;MOTEapp.c: 1376: oled_putString("Light =",0,1);
  5814  003AD8  0E71               	movlw	low STR_19
  5815  003ADA  0100               	movlb	0	; () banked
  5816  003ADC  6F72               	movwf	oled_putString@string& (0+255),b
  5817  003ADE  0E7F               	movlw	high STR_19
  5818  003AE0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5819  003AE2  0E00               	movlw	0
  5820  003AE4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5821  003AE6  0E01               	movlw	1
  5822  003AE8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5823  003AEA  ECA1  F026         	call	_oled_putString	;wreg free
  5824                           
  5825                           ;MOTEapp.c: 1377: oled_putString("Temp  =",0,2);
  5826  003AEE  0E69               	movlw	low STR_18
  5827  003AF0  0100               	movlb	0	; () banked
  5828  003AF2  6F72               	movwf	oled_putString@string& (0+255),b
  5829  003AF4  0E7F               	movlw	high STR_18
  5830  003AF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5831  003AF8  0E00               	movlw	0
  5832  003AFA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5833  003AFC  0E02               	movlw	2
  5834  003AFE  6F75               	movwf	oled_putString@start_page& (0+255),b
  5835  003B00  ECA1  F026         	call	_oled_putString	;wreg free
  5836                           
  5837                           ;MOTEapp.c: 1378: oled_putChar('C',14,2);
  5838  003B04  0E0E               	movlw	14
  5839  003B06  0100               	movlb	0	; () banked
  5840  003B08  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5841  003B0A  0E02               	movlw	2
  5842  003B0C  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5843  003B0E  0E43               	movlw	67
  5844  003B10  EC7F  F024         	call	_oled_putChar
  5845                           
  5846                           ;MOTEapp.c: 1379: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5847  003B14  EC11  F02A         	call	_moteApp_getTempValue	;wreg free
  5848  003B18  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5849  003B1C  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5850  003B20  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  5851  003B24  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5852  003B28  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5853                           
  5854                           ;MOTEapp.c: 1380: temperature = ADC_TempConversion(temperature);
  5855  003B2C  0100               	movlb	0	; () banked
  5856  003B2E  51DA               	movf	_temperature& (0+255),w,b
  5857  003B30  ECA1  F018         	call	_ADC_TempConversion
  5858  003B34  0100               	movlb	0	; () banked
  5859  003B36  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5860  003B38  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5861  003B3A  6FDA               	movwf	_temperature& (0+255),b
  5862  003B3C  6BDB               	clrf	(_temperature+1)& (0+255),b
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;MOTEapp.c: 1381: oled_putint8(temperature, 10, 2);
  5866  003B3E  0E0A               	movlw	10
  5867  003B40  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5868  003B42  0E02               	movlw	2
  5869  003B44  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5870  003B46  51DA               	movf	_temperature& (0+255),w,b
  5871  003B48  ECAA  F021         	call	_oled_putint8
  5872                           
  5873                           ;MOTEapp.c: 1382: __nop();
  5874  003B4C  F000               	nop	
  5875                           
  5876                           ;MOTEapp.c: 1383: oled_putString("    ", 10, 1);
  5877  003B4E  0EC7               	movlw	low (STR_40+12)
  5878  003B50  0100               	movlb	0	; () banked
  5879  003B52  6F72               	movwf	oled_putString@string& (0+255),b
  5880  003B54  0E7A               	movlw	high (STR_40+12)
  5881  003B56  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5882  003B58  0E0A               	movlw	10
  5883  003B5A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5884  003B5C  0E01               	movlw	1
  5885  003B5E  6F75               	movwf	oled_putString@start_page& (0+255),b
  5886  003B60  ECA1  F026         	call	_oled_putString	;wreg free
  5887                           
  5888                           ;MOTEapp.c: 1384: oled_putString(moteApp_getLightValue(), 10, 1);
  5889  003B64  EC17  F029         	call	_moteApp_getLightValue	;wreg free
  5890  003B68  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  5891  003B6C  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5892  003B70  0E0A               	movlw	10
  5893  003B72  0100               	movlb	0	; () banked
  5894  003B74  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5895  003B76  0E01               	movlw	1
  5896  003B78  6F75               	movwf	oled_putString@start_page& (0+255),b
  5897  003B7A  ECA1  F026         	call	_oled_putString	;wreg free
  5898  003B7E  0012               	return		;funcret
  5899  003B80                     __end_of_moteApp_testSensors:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           intcon	equ	0xFF2
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           postdec1	equ	0xFE5
  5909                           fsr1l	equ	0xFE1
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function _moteHandler *****************
  5913 ;; Defined at:
  5914 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  readMessage     1   91[BANK0 ] unsigned char 
  5919 ;;  buttonPress     1   90[BANK0 ] enum E5836
  5920 ;;  s2Button        1   89[BANK0 ] unsigned char 
  5921 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  5922 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      enum E6869
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5934 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5935 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5936 ;;Total ram usage:        6 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:   19
  5939 ;; This function calls:
  5940 ;;		_ADC_TempConversion
  5941 ;;		_MOTEapp_TimerBasedTask
  5942 ;;		_MOTEapp_getModuleResponse
  5943 ;;		_TMRapp_ClearBitFlags
  5944 ;;		_TMRapp_Handler
  5945 ;;		_USBapp_exitCDC
  5946 ;;		_USBapp_exitCDCState
  5947 ;;		_moteApp_convertSensorValue
  5948 ;;		_moteApp_getLightValue
  5949 ;;		_moteApp_getTempValue
  5950 ;;		_moteJoiningProcess
  5951 ;;		_moteRunningProcess
  5952 ;;		_oled_clear
  5953 ;;		_oled_putString
  5954 ;;		_oled_putint8
  5955 ;;		_service_pushbutton
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text9
  5962  0020DE                     __ptext9:
  5963                           	opt stack 0
  5964  0020DE                     _moteHandler:
  5965                           	opt stack 11
  5966                           
  5967                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  5968                           
  5969                           ;incstack = 0
  5970  0020DE  0E00               	movlw	0
  5971  0020E0  0100               	movlb	0	; () banked
  5972  0020E2  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  5973                           
  5974                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  5975  0020E4  0E00               	movlw	0
  5976  0020E6  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5977                           
  5978                           ;MOTEapp.c: 192: bool s2Button = 0;
  5979  0020E8  0E00               	movlw	0
  5980  0020EA  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  5981                           
  5982                           ;MOTEapp.c: 193: bool readMessage = 0;
  5983  0020EC  0E00               	movlw	0
  5984  0020EE  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  5985                           
  5986                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  5987  0020F0  0E03               	movlw	3
  5988  0020F2  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  5992  0020F4  A080               	btfss	3968,0,c	;volatile
  5993  0020F6  D009               	goto	l363
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;MOTEapp.c: 198: {
  5997                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  5998  0020F8  EC2E  F02E         	call	_USBapp_exitCDC	;wreg free
  5999  0020FC  0900               	iorlw	0
  6000  0020FE  A4D8               	btfss	status,2,c
  6001  002100  D007               	goto	l365
  6002                           
  6003                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  6004  002102  0E04               	movlw	4
  6005  002104  0100               	movlb	0	; () banked
  6006  002106  6FFF               	movwf	_moteState& (0+255),b
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;MOTEapp.c: 201: } else {
  6010  002108  D003               	goto	l365
  6011  00210A                     l363:
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  6015                           
  6016                           ; BSR set to: 0
  6017  00210A  0E00               	movlw	0
  6018  00210C  EC03  F02E         	call	_USBapp_exitCDCState
  6019  002110                     l365:
  6020                           
  6021                           ;MOTEapp.c: 203: }
  6022                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  6023  002110  0100               	movlb	0	; () banked
  6024  002112  A1F8               	btfss	_appTimer& (0+255),0,b
  6025  002114  D008               	goto	l366
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;MOTEapp.c: 207: {
  6029                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  6030  002116  EC1B  F02E         	call	_TMRapp_ClearBitFlags	;wreg free
  6031                           
  6032                           ;MOTEapp.c: 211: TMRapp_Handler();
  6033  00211A  EC9F  F017         	call	_TMRapp_Handler	;wreg free
  6034                           
  6035                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  6036  00211E  0100               	movlb	0	; () banked
  6037  002120  51F8               	movf	_appTimer& (0+255),w,b
  6038  002122  ECBE  F02C         	call	_MOTEapp_TimerBasedTask
  6039  002126                     l366:
  6040                           
  6041                           ;MOTEapp.c: 213: }
  6042                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  6043  002126  EC6A  F026         	call	_service_pushbutton	;wreg free
  6044  00212A  0100               	movlb	0	; () banked
  6045  00212C  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  6049  00212E  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  6050  002130  A4D8               	btfss	status,2,c
  6051  002132  D005               	goto	l367
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;MOTEapp.c: 218: {
  6055                           ;MOTEapp.c: 219: secTicker = 0;
  6056  002134  0E00               	movlw	0
  6057  002136  6FF0               	movwf	_secTicker& (0+255),b
  6058                           
  6059                           ;MOTEapp.c: 220: gotoNextState = 1;
  6060  002138  0E01               	movlw	1
  6061  00213A  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6062                           
  6063                           ;MOTEapp.c: 221: }
  6064  00213C  D008               	goto	l369
  6065  00213E                     l367:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  6069                           
  6070                           ; BSR set to: 0
  6071  00213E  0E02               	movlw	2
  6072  002140  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6073  002142  A4D8               	btfss	status,2,c
  6074  002144  D004               	goto	l369
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;MOTEapp.c: 223: {
  6078                           ;MOTEapp.c: 224: secTicker = 0;
  6079  002146  0E00               	movlw	0
  6080  002148  6FF0               	movwf	_secTicker& (0+255),b
  6081                           
  6082                           ;MOTEapp.c: 225: s2Button = 1;
  6083  00214A  0E01               	movlw	1
  6084  00214C  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6085  00214E                     l369:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;MOTEapp.c: 226: }
  6089                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  6090                           
  6091                           ; BSR set to: 0
  6092                           
  6093                           ; BSR set to: 0
  6094  00214E  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
  6095  002152  0900               	iorlw	0
  6096  002154  B4D8               	btfsc	status,2,c
  6097  002156  D002               	goto	l370
  6098                           
  6099                           ;MOTEapp.c: 230: readMessage = 1;
  6100  002158  0E01               	movlw	1
  6101  00215A  D001               	goto	L1
  6102  00215C                     l370:
  6103                           
  6104                           ;MOTEapp.c: 231: else
  6105                           ;MOTEapp.c: 232: readMessage = 0;
  6106                           
  6107                           ; BSR set to: 0
  6108  00215C  0E00               	movlw	0
  6109  00215E                     L1:
  6110  00215E  0100               	movlb	0	; () banked
  6111  002160  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  6115                           
  6116                           ; BSR set to: 0
  6117  002162  0E02               	movlw	2
  6118  002164  19F3               	xorwf	_runningState& (0+255),w,b
  6119  002166  A4D8               	btfss	status,2,c
  6120  002168  D041               	goto	l373
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;MOTEapp.c: 236: {
  6124                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  6125  00216A  0101               	movlb	1	; () banked
  6126  00216C  513D               	movf	(_m10SecTicker+1)& (0+255),w,b
  6127  00216E  E104               	bnz	u10340
  6128  002170  0E64               	movlw	100
  6129  002172  5D3C               	subwf	_m10SecTicker& (0+255),w,b
  6130  002174  A0D8               	btfss	status,0,c
  6131  002176  D03A               	goto	l373
  6132  002178                     u10340:
  6133                           
  6134                           ; BSR set to: 1
  6135                           ;MOTEapp.c: 239: {
  6136                           ;MOTEapp.c: 240: __nop();
  6137  002178  F000               	nop	
  6138                           
  6139                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  6140  00217A  0EC7               	movlw	low (STR_40+12)
  6141  00217C  0100               	movlb	0	; () banked
  6142  00217E  6F72               	movwf	oled_putString@string& (0+255),b
  6143  002180  0E7A               	movlw	high (STR_40+12)
  6144  002182  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6145  002184  0E06               	movlw	6
  6146  002186  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6147  002188  0E01               	movlw	1
  6148  00218A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6149  00218C  ECA1  F026         	call	_oled_putString	;wreg free
  6150                           
  6151                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  6152  002190  EC17  F029         	call	_moteApp_getLightValue	;wreg free
  6153  002194  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6154  002198  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6155  00219C  0E06               	movlw	6
  6156  00219E  0100               	movlb	0	; () banked
  6157  0021A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6158  0021A2  0E01               	movlw	1
  6159  0021A4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6160  0021A6  ECA1  F026         	call	_oled_putString	;wreg free
  6161                           
  6162                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6163  0021AA  EC11  F02A         	call	_moteApp_getTempValue	;wreg free
  6164  0021AE  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6165  0021B2  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6166  0021B6  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  6167  0021BA  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6168  0021BE  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6169                           
  6170                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  6171  0021C2  0100               	movlb	0	; () banked
  6172  0021C4  51DA               	movf	_temperature& (0+255),w,b
  6173  0021C6  ECA1  F018         	call	_ADC_TempConversion
  6174  0021CA  0100               	movlb	0	; () banked
  6175  0021CC  6FB6               	movwf	??_moteHandler& (0+255),b
  6176  0021CE  51B6               	movf	??_moteHandler& (0+255),w,b
  6177  0021D0  6FDA               	movwf	_temperature& (0+255),b
  6178  0021D2  6BDB               	clrf	(_temperature+1)& (0+255),b
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  6182  0021D4  0E06               	movlw	6
  6183  0021D6  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6184  0021D8  0E02               	movlw	2
  6185  0021DA  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6186  0021DC  51DA               	movf	_temperature& (0+255),w,b
  6187  0021DE  ECAA  F021         	call	_oled_putint8
  6188                           
  6189                           ;MOTEapp.c: 246: m10SecTicker = 0;
  6190  0021E2  0E00               	movlw	0
  6191  0021E4  0101               	movlb	1	; () banked
  6192  0021E6  6F3D               	movwf	(_m10SecTicker+1)& (0+255),b
  6193  0021E8  0E00               	movlw	0
  6194  0021EA  6F3C               	movwf	_m10SecTicker& (0+255),b
  6195  0021EC                     l373:
  6196                           
  6197                           ;MOTEapp.c: 247: }
  6198                           ;MOTEapp.c: 248: }
  6199                           ;MOTEapp.c: 250: if(secTicker)
  6200                           
  6201                           ; BSR set to: 1
  6202                           
  6203                           ; BSR set to: 1
  6204  0021EC  0100               	movlb	0	; () banked
  6205  0021EE  51F0               	movf	_secTicker& (0+255),w,b
  6206  0021F0  B4D8               	btfsc	status,2,c
  6207  0021F2  D071               	goto	l376
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;MOTEapp.c: 251: {
  6211                           ;MOTEapp.c: 252: if ((secTicker >= 10) && (menuTimeout))
  6212  0021F4  0E09               	movlw	9
  6213  0021F6  65F0               	cpfsgt	_secTicker& (0+255),b
  6214  0021F8  D06E               	goto	l376
  6215                           
  6216                           ; BSR set to: 0
  6217  0021FA  51FB               	movf	_menuTimeout& (0+255),w,b
  6218  0021FC  B4D8               	btfsc	status,2,c
  6219  0021FE  D06B               	goto	l376
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;MOTEapp.c: 253: {
  6223                           ;MOTEapp.c: 254: gotoSleep = 1;
  6224  002200  0E01               	movlw	1
  6225  002202  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6226                           
  6227                           ;MOTEapp.c: 255: secTicker = 0;
  6228  002204  0E00               	movlw	0
  6229  002206  6FF0               	movwf	_secTicker& (0+255),b
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;MOTEapp.c: 256: }
  6233                           ;MOTEapp.c: 257: }
  6234                           ;MOTEapp.c: 259: switch(moteState)
  6235                           
  6236                           ; BSR set to: 0
  6237  002208  D066               	goto	l376
  6238  00220A                     
  6239                           ; BSR set to: 0
  6240                           ;MOTEapp.c: 262: while(1);
  6241  00220A  D7FF               	goto	l377
  6242  00220C                     
  6243                           ;MOTEapp.c: 265: oled_clear();
  6244  00220C  EC1A  F02D         	call	_oled_clear	;wreg free
  6245                           
  6246                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6247  002210  0EDE               	movlw	low STR_24
  6248  002212  0100               	movlb	0	; () banked
  6249  002214  6F72               	movwf	oled_putString@string& (0+255),b
  6250  002216  0E7E               	movlw	high STR_24
  6251  002218  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6252  00221A  0E01               	movlw	1
  6253  00221C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6254  00221E  0E00               	movlw	0
  6255  002220  6F75               	movwf	oled_putString@start_page& (0+255),b
  6256  002222  ECA1  F026         	call	_oled_putString	;wreg free
  6257                           
  6258                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6259  002226  0E34               	movlw	low STR_25
  6260  002228  0100               	movlb	0	; () banked
  6261  00222A  6F72               	movwf	oled_putString@string& (0+255),b
  6262  00222C  0E7F               	movlw	high STR_25
  6263  00222E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6264  002230  0E02               	movlw	2
  6265  002232  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6266  002234  0E01               	movlw	1
  6267  002236  6F75               	movwf	oled_putString@start_page& (0+255),b
  6268  002238  ECA1  F026         	call	_oled_putString	;wreg free
  6269                           
  6270                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6271  00223C  0EA9               	movlw	low STR_26
  6272  00223E  0100               	movlb	0	; () banked
  6273  002240  6F72               	movwf	oled_putString@string& (0+255),b
  6274  002242  0E7B               	movlw	high STR_26
  6275  002244  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6276  002246  0E00               	movlw	0
  6277  002248  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6278  00224A  0E03               	movlw	3
  6279  00224C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6280  00224E  ECA1  F026         	call	_oled_putString	;wreg free
  6281                           
  6282                           ;MOTEapp.c: 269: activeState = moteStartup;
  6283  002252  0E00               	movlw	0
  6284  002254  0100               	movlb	0	; () banked
  6285  002256  6FF4               	movwf	_activeState& (0+255),b
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6289  002258  0E02               	movlw	2
  6290  00225A  D031               	goto	L2
  6291  00225C                     
  6292                           ; BSR set to: 0
  6293                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6294                           
  6295                           ; BSR set to: 0
  6296  00225C  C0B8  F077         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6297  002260  C0B9  F078         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6298  002264  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6299  002266  EC07  F008         	call	_moteJoiningProcess
  6300  00226A  0900               	iorlw	0
  6301  00226C  B4D8               	btfsc	status,2,c
  6302  00226E  D041               	goto	l381
  6303                           
  6304                           ;MOTEapp.c: 274: {
  6305                           ;MOTEapp.c: 275: oled_clear();
  6306  002270  EC1A  F02D         	call	_oled_clear	;wreg free
  6307                           
  6308                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6309  002274  0EFE               	movlw	low STR_27
  6310  002276  0100               	movlb	0	; () banked
  6311  002278  6F72               	movwf	oled_putString@string& (0+255),b
  6312  00227A  0E7B               	movlw	high STR_27
  6313  00227C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6314  00227E  0E00               	movlw	0
  6315  002280  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6316  002282  0E00               	movlw	0
  6317  002284  6F75               	movwf	oled_putString@start_page& (0+255),b
  6318  002286  ECA1  F026         	call	_oled_putString	;wreg free
  6319                           
  6320                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6321  00228A  0E0F               	movlw	low STR_28
  6322  00228C  0100               	movlb	0	; () banked
  6323  00228E  6F72               	movwf	oled_putString@string& (0+255),b
  6324  002290  0E7C               	movlw	high STR_28
  6325  002292  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6326  002294  0E00               	movlw	0
  6327  002296  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6328  002298  0E02               	movlw	2
  6329  00229A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6330  00229C  ECA1  F026         	call	_oled_putString	;wreg free
  6331                           
  6332                           ;MOTEapp.c: 278: oled_putString(" (S2)      (S3) ", 0,3);
  6333  0022A0  0E32               	movlw	low STR_29
  6334  0022A2  0100               	movlb	0	; () banked
  6335  0022A4  6F72               	movwf	oled_putString@string& (0+255),b
  6336  0022A6  0E7B               	movlw	high STR_29
  6337  0022A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6338  0022AA  0E00               	movlw	0
  6339  0022AC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6340  0022AE  0E03               	movlw	3
  6341  0022B0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6342  0022B2  ECA1  F026         	call	_oled_putString	;wreg free
  6343                           
  6344                           ;MOTEapp.c: 279: runningState = runningEnter;
  6345  0022B6  0E00               	movlw	0
  6346  0022B8  0100               	movlb	0	; () banked
  6347  0022BA  6FF3               	movwf	_runningState& (0+255),b
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6351  0022BC  0E03               	movlw	3
  6352  0022BE                     L2:
  6353  0022BE  6FFF               	movwf	_moteState& (0+255),b
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;MOTEapp.c: 281: }
  6357                           ;MOTEapp.c: 282: break;
  6358  0022C0  D018               	goto	l381
  6359  0022C2                     
  6360                           ; BSR set to: 0
  6361                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6362                           
  6363                           ; BSR set to: 0
  6364  0022C2  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6365  0022C6  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6366  0022CA  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6367  0022CE  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6368  0022D0  EC86  F000         	call	_moteRunningProcess
  6369                           
  6370                           ;MOTEapp.c: 289: }
  6371                           
  6372                           ;MOTEapp.c: 288: break;
  6373                           
  6374                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6375                           
  6376                           ;MOTEapp.c: 285: break;
  6377  0022D4  D00E               	goto	l381
  6378  0022D6                     l376:
  6379  0022D6  0100               	movlb	0	; () banked
  6380  0022D8  51FF               	movf	_moteState& (0+255),w,b
  6381                           
  6382                           ; Switch size 1, requested type "space"
  6383                           ; Number of cases is 4, Range of values is 1 to 4
  6384                           ; switch strategies available:
  6385                           ; Name         Instructions Cycles
  6386                           ; simple_byte           13     7 (average)
  6387                           ;	Chosen strategy is simple_byte
  6388  0022DA  0A01               	xorlw	1	; case 1
  6389  0022DC  B4D8               	btfsc	status,2,c
  6390  0022DE  D796               	goto	l382
  6391  0022E0  0A03               	xorlw	3	; case 2
  6392  0022E2  B4D8               	btfsc	status,2,c
  6393  0022E4  D7BB               	goto	l383
  6394  0022E6  0A01               	xorlw	1	; case 3
  6395  0022E8  B4D8               	btfsc	status,2,c
  6396  0022EA  D7EB               	goto	l385
  6397  0022EC  0A07               	xorlw	7	; case 4
  6398  0022EE  A4D8               	btfss	status,2,c
  6399  0022F0  D78C               	goto	l377
  6400  0022F2                     l381:
  6401                           
  6402                           ;MOTEapp.c: 290: return moteState;
  6403                           
  6404                           ; BSR set to: 0
  6405  0022F2  0100               	movlb	0	; () banked
  6406  0022F4  51FF               	movf	_moteState& (0+255),w,b
  6407  0022F6  0012               	return	
  6408  0022F8                     __end_of_moteHandler:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           intcon	equ	0xFF2
  6415                           postinc0	equ	0xFEE
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1l	equ	0xFE1
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _moteRunningProcess *****************
  6422 ;; Defined at:
  6423 ;;		line 489 in file "../Includes/Board/MOTEapp.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  changeStates    1    wreg     unsigned char 
  6426 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6427 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6428 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6431 ;;  counter         1   83[BANK0 ] unsigned char 
  6432 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6433 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6434 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6435 ;;  readByte        1   80[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      enum E6175
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6445 ;;      Params:         0       3       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6448 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6449 ;;Total ram usage:       10 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:   18
  6452 ;; This function calls:
  6453 ;;		_ADC_TempConversion
  6454 ;;		_MOTEapp_SetDataRateSetting
  6455 ;;		_TMR2_ReadTimer
  6456 ;;		_moteApp_GoToSleep
  6457 ;;		_moteApp_add8bToDataBuffer
  6458 ;;		_moteApp_addToDataBuffer
  6459 ;;		_moteApp_clearBuffers
  6460 ;;		_moteApp_convertSensorValue
  6461 ;;		_moteApp_delayms
  6462 ;;		_moteApp_getLightString
  6463 ;;		_moteApp_getLightValue
  6464 ;;		_moteApp_getTempValue
  6465 ;;		_moteApp_lightStringSize
  6466 ;;		_moteApp_setSensorsInput
  6467 ;;		_oled_clear
  6468 ;;		_oled_putString
  6469 ;;		_oled_putUint8
  6470 ;;		_oled_putint8
  6471 ;;		_sendDataCommand
  6472 ;;		_strcmp
  6473 ;;		_strncmp
  6474 ;; This function is called by:
  6475 ;;		_moteHandler
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text10
  6480  00010C                     __ptext10:
  6481                           	opt stack 0
  6482  00010C                     _moteRunningProcess:
  6483                           	opt stack 11
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;incstack = 0
  6487                           ;moteRunningProcess@changeStates stored from wreg
  6488  00010C  0100               	movlb	0	; () banked
  6489  00010E  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6490                           
  6491                           ;MOTEapp.c: 491: uint8_t readByte = 0;
  6492  000110  0E00               	movlw	0
  6493  000112  0100               	movlb	0	; () banked
  6494  000114  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;MOTEapp.c: 493: if ((sleepEvent) && (periodicState))
  6498  000116  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6499  000118  B4D8               	btfsc	status,2,c
  6500  00011A  EFDC  F007         	goto	l466
  6501                           
  6502                           ; BSR set to: 0
  6503  00011E  51FA               	movf	_periodicState& (0+255),w,b
  6504  000120  B4D8               	btfsc	status,2,c
  6505  000122  EFDC  F007         	goto	l466
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;MOTEapp.c: 494: {
  6509                           ;MOTEapp.c: 495: if (sleepTicker >= periodicTimerValue)
  6510  000126  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6511  000128  5DEF               	subwf	_sleepTicker& (0+255),w,b
  6512  00012A  A0D8               	btfss	status,0,c
  6513  00012C  D0C4               	goto	l459
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;MOTEapp.c: 496: {
  6517                           ;MOTEapp.c: 498: moteApp_clearBuffers();
  6518  00012E  ECE4  F022         	call	_moteApp_clearBuffers	;wreg free
  6519                           
  6520                           ;MOTEapp.c: 501: light = 0;
  6521  000132  0E00               	movlw	0
  6522  000134  0101               	movlb	1	; () banked
  6523  000136  6F3F               	movwf	(_light+1)& (0+255),b
  6524  000138  0E00               	movlw	0
  6525  00013A  6F3E               	movwf	_light& (0+255),b
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;MOTEapp.c: 502: temperature = 0;
  6529  00013C  0E00               	movlw	0
  6530  00013E  0100               	movlb	0	; () banked
  6531  000140  6FDB               	movwf	(_temperature+1)& (0+255),b
  6532  000142  0E00               	movlw	0
  6533  000144  6FDA               	movwf	_temperature& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;MOTEapp.c: 503: __nop();
  6537  000146  F000               	nop	
  6538                           
  6539                           ;MOTEapp.c: 505: moteApp_setSensorsInput();
  6540  000148  EC80  F025         	call	_moteApp_setSensorsInput	;wreg free
  6541                           
  6542                           ;MOTEapp.c: 506: uint8_t sizeOfUpdate = 0;
  6543  00014C  0E00               	movlw	0
  6544  00014E  0100               	movlb	0	; () banked
  6545  000150  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;MOTEapp.c: 507: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6549  000152  EC17  F029         	call	_moteApp_getLightValue	;wreg free
  6550  000156  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6551  00015A  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6552  00015E  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  6553  000162  C072  F13E         	movff	?_moteApp_convertSensorValue,_light
  6554  000166  C073  F13F         	movff	?_moteApp_convertSensorValue+1,_light+1
  6555                           
  6556                           ;MOTEapp.c: 508: oled_putString(moteApp_getLightString(), 6, 1);
  6557  00016A  ECEC  F02D         	call	_moteApp_getLightString	;wreg free
  6558  00016E  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6559  000172  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6560  000176  0E06               	movlw	6
  6561  000178  0100               	movlb	0	; () banked
  6562  00017A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6563  00017C  0E01               	movlw	1
  6564  00017E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6565  000180  ECA1  F026         	call	_oled_putString	;wreg free
  6566                           
  6567                           ;MOTEapp.c: 509: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6568  000184  ECEC  F02D         	call	_moteApp_getLightString	;wreg free
  6569  000188  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6570  00018C  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6571  000190  0E04               	movlw	4
  6572  000192  0100               	movlb	0	; () banked
  6573  000194  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6574  000196  EC0A  F028         	call	_moteApp_addToDataBuffer	;wreg free
  6575  00019A  0100               	movlb	0	; () banked
  6576  00019C  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;MOTEapp.c: 511: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6580  00019E  EC11  F02A         	call	_moteApp_getTempValue	;wreg free
  6581  0001A2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6582  0001A6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6583  0001AA  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  6584  0001AE  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6585  0001B2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6586                           
  6587                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(temperature);
  6588  0001B6  0100               	movlb	0	; () banked
  6589  0001B8  51DA               	movf	_temperature& (0+255),w,b
  6590  0001BA  ECA1  F018         	call	_ADC_TempConversion
  6591  0001BE  0100               	movlb	0	; () banked
  6592  0001C0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6593  0001C2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6594  0001C4  6FDA               	movwf	_temperature& (0+255),b
  6595  0001C6  6BDB               	clrf	(_temperature+1)& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;MOTEapp.c: 513: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6599  0001C8  EC2B  F02E         	call	_moteApp_lightStringSize	;wreg free
  6600  0001CC  0F05               	addlw	5
  6601  0001CE  0100               	movlb	0	; () banked
  6602  0001D0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6603  0001D2  51DA               	movf	_temperature& (0+255),w,b
  6604  0001D4  EC99  F01F         	call	_moteApp_add8bToDataBuffer
  6605                           
  6606                           ;MOTEapp.c: 516: sleepTicker = 0;
  6607  0001D8  0E00               	movlw	0
  6608  0001DA  0100               	movlb	0	; () banked
  6609  0001DC  6FEF               	movwf	_sleepTicker& (0+255),b
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;MOTEapp.c: 517: oled_clear();
  6613  0001DE  EC1A  F02D         	call	_oled_clear	;wreg free
  6614                           
  6615                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6616  0001E2  0E31               	movlw	low STR_71
  6617  0001E4  0100               	movlb	0	; () banked
  6618  0001E6  6F72               	movwf	oled_putString@string& (0+255),b
  6619  0001E8  0E7C               	movlw	high STR_71
  6620  0001EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6621  0001EC  0E00               	movlw	0
  6622  0001EE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6623  0001F0  0E00               	movlw	0
  6624  0001F2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6625  0001F4  ECA1  F026         	call	_oled_putString	;wreg free
  6626                           
  6627                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6628  0001F8  0E34               	movlw	low STR_72
  6629  0001FA  0100               	movlb	0	; () banked
  6630  0001FC  6F72               	movwf	oled_putString@string& (0+255),b
  6631  0001FE  0E7E               	movlw	high STR_72
  6632  000200  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6633  000202  0E00               	movlw	0
  6634  000204  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6635  000206  0E01               	movlw	1
  6636  000208  6F75               	movwf	oled_putString@start_page& (0+255),b
  6637  00020A  ECA1  F026         	call	_oled_putString	;wreg free
  6638                           
  6639                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6640  00020E  0E72               	movlw	low STR_73
  6641  000210  0100               	movlb	0	; () banked
  6642  000212  6F72               	movwf	oled_putString@string& (0+255),b
  6643  000214  0E7D               	movlw	high STR_73
  6644  000216  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6645  000218  0E00               	movlw	0
  6646  00021A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6647  00021C  0E02               	movlw	2
  6648  00021E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6649  000220  ECA1  F026         	call	_oled_putString	;wreg free
  6650                           
  6651                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6652  000224  ECEC  F02D         	call	_moteApp_getLightString	;wreg free
  6653  000228  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6654  00022C  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6655  000230  0E03               	movlw	3
  6656  000232  0100               	movlb	0	; () banked
  6657  000234  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6658  000236  0E02               	movlw	2
  6659  000238  6F75               	movwf	oled_putString@start_page& (0+255),b
  6660  00023A  ECA1  F026         	call	_oled_putString	;wreg free
  6661                           
  6662                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6663  00023E  0E0B               	movlw	11
  6664  000240  0100               	movlb	0	; () banked
  6665  000242  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6666  000244  0E02               	movlw	2
  6667  000246  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6668  000248  51DA               	movf	_temperature& (0+255),w,b
  6669  00024A  ECAA  F021         	call	_oled_putint8
  6670                           
  6671                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6672  00024E  ECFE  F02D         	call	_TMR2_ReadTimer	;wreg free
  6673  000252  0100               	movlb	0	; () banked
  6674  000254  6FF1               	movwf	_randomPortNum& (0+255),b
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 526: if (!randomPortNum)
  6678  000256  51F1               	movf	_randomPortNum& (0+255),w,b
  6679  000258  A4D8               	btfss	status,2,c
  6680  00025A  D002               	goto	l460
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 527: randomPortNum = 5;
  6684  00025C  0E05               	movlw	5
  6685  00025E  D005               	goto	L3
  6686  000260                     l460:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6690                           
  6691                           ; BSR set to: 0
  6692  000260  0EDF               	movlw	223
  6693  000262  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6694  000264  D003               	goto	l462
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6698  000266  51F1               	movf	_randomPortNum& (0+255),w,b
  6699  000268  0FCE               	addlw	206
  6700  00026A                     L3:
  6701  00026A  6FF1               	movwf	_randomPortNum& (0+255),b
  6702  00026C                     l462:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6706                           
  6707                           ; BSR set to: 0
  6708                           
  6709                           ; BSR set to: 0
  6710  00026C  0E0A               	movlw	10
  6711  00026E  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6712  000270  0E01               	movlw	1
  6713  000272  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6714  000274  51F1               	movf	_randomPortNum& (0+255),w,b
  6715  000276  EC72  F023         	call	_oled_putUint8
  6716                           
  6717                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6718  00027A  0E00               	movlw	0
  6719  00027C  0100               	movlb	0	; () banked
  6720  00027E  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6721  000280  51F1               	movf	_randomPortNum& (0+255),w,b
  6722  000282  EC99  F01F         	call	_moteApp_add8bToDataBuffer
  6723                           
  6724                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6725  000286  0E20               	movlw	32
  6726  000288  0101               	movlb	1	; () banked
  6727  00028A  6FB3               	movwf	(_dataBuffer+3)& (0+255),b
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;MOTEapp.c: 535: __nop();
  6731  00028C  F000               	nop	
  6732                           
  6733                           ;MOTEapp.c: 536: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6734  00028E  0E2D               	movlw	low STR_74
  6735  000290  0100               	movlb	0	; () banked
  6736  000292  6F61               	movwf	sendDataCommand@string& (0+255),b
  6737  000294  0E7D               	movlw	high STR_74
  6738  000296  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6739  000298  0EB0               	movlw	low _dataBuffer
  6740  00029A  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6741  00029C  0E01               	movlw	high _dataBuffer
  6742  00029E  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6743  0002A0  0E0C               	movlw	12
  6744  0002A2  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6745  0002A4  EC22  F01E         	call	_sendDataCommand	;wreg free
  6746                           
  6747                           ;MOTEapp.c: 537: secTicker = 10 - (10 / 3);
  6748  0002A8  0E07               	movlw	7
  6749  0002AA  0100               	movlb	0	; () banked
  6750  0002AC  6FF0               	movwf	_secTicker& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;MOTEapp.c: 538: runningState = runningUplinkTransmit;
  6754  0002AE  0E08               	movlw	8
  6755  0002B0  6FF3               	movwf	_runningState& (0+255),b
  6756                           
  6757                           ;MOTEapp.c: 539: }
  6758  0002B2  EFDC  F007         	goto	l466
  6759  0002B6                     l459:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;MOTEapp.c: 540: else
  6763                           ;MOTEapp.c: 541: {
  6764                           ;MOTEapp.c: 542: if (menuTimeout)
  6765                           
  6766                           ; BSR set to: 0
  6767  0002B6  51FB               	movf	_menuTimeout& (0+255),w,b
  6768  0002B8  B4D8               	btfsc	status,2,c
  6769  0002BA  D007               	goto	l464
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;MOTEapp.c: 543: {
  6773                           ;MOTEapp.c: 544: sleepTicker++;
  6774  0002BC  2BEF               	incf	_sleepTicker& (0+255),f,b
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;MOTEapp.c: 545: runningState = runningSleep;
  6778  0002BE  0E0F               	movlw	15
  6779  0002C0  6FF3               	movwf	_runningState& (0+255),b
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;MOTEapp.c: 546: selectButton = 1;
  6783  0002C2  0E01               	movlw	1
  6784  0002C4  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6785                           
  6786                           ;MOTEapp.c: 547: } else {
  6787  0002C6  EFDC  F007         	goto	l466
  6788  0002CA                     l464:
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;MOTEapp.c: 548: sleepTicker = 0;
  6792                           
  6793                           ; BSR set to: 0
  6794  0002CA  0E00               	movlw	0
  6795  0002CC  6FEF               	movwf	_sleepTicker& (0+255),b
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;MOTEapp.c: 549: }
  6799                           ;MOTEapp.c: 550: }
  6800                           ;MOTEapp.c: 551: }
  6801                           ;MOTEapp.c: 554: switch(runningState)
  6802                           
  6803                           ; BSR set to: 0
  6804                           
  6805                           ; BSR set to: 0
  6806  0002CE  EFDC  F007         	goto	l466
  6807  0002D2                     
  6808                           ; BSR set to: 0
  6809                           ;MOTEapp.c: 557: while(1);
  6810  0002D2  D7FF               	goto	l467
  6811  0002D4                     
  6812                           ;MOTEapp.c: 560: if ( (changeStates) || (selectButton) )
  6813  0002D4  0100               	movlb	0	; () banked
  6814  0002D6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6815  0002D8  A4D8               	btfss	status,2,c
  6816  0002DA  D003               	goto	u9370
  6817                           
  6818                           ; BSR set to: 0
  6819  0002DC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6820  0002DE  B4D8               	btfsc	status,2,c
  6821  0002E0  0012               	return	
  6822  0002E2                     u9370:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;MOTEapp.c: 561: {
  6826                           ;MOTEapp.c: 562: oled_clear();
  6827                           
  6828                           ; BSR set to: 0
  6829  0002E2  EC1A  F02D         	call	_oled_clear	;wreg free
  6830                           
  6831                           ;MOTEapp.c: 563: oled_putString("  Issue Uplink  ",0,0);
  6832  0002E6  0E21               	movlw	low STR_75
  6833  0002E8  0100               	movlb	0	; () banked
  6834  0002EA  6F72               	movwf	oled_putString@string& (0+255),b
  6835  0002EC  0E7B               	movlw	high STR_75
  6836  0002EE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6837  0002F0  0E00               	movlw	0
  6838  0002F2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6839  0002F4  0E00               	movlw	0
  6840  0002F6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6841  0002F8  ECA1  F026         	call	_oled_putString	;wreg free
  6842                           
  6843                           ;MOTEapp.c: 564: oled_putString(" LoRaWAN Packet ",0,1);
  6844  0002FC  0E87               	movlw	low STR_76
  6845  0002FE  0100               	movlb	0	; () banked
  6846  000300  6F72               	movwf	oled_putString@string& (0+255),b
  6847  000302  0E7B               	movlw	high STR_76
  6848  000304  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6849  000306  0E00               	movlw	0
  6850  000308  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6851  00030A  0E01               	movlw	1
  6852  00030C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6853  00030E  ECA1  F026         	call	_oled_putString	;wreg free
  6854                           
  6855                           ;MOTEapp.c: 565: oled_putString("(NAV)    (SEL) ",0,3);
  6856  000312  0E83               	movlw	low STR_77
  6857  000314  0100               	movlb	0	; () banked
  6858  000316  6F72               	movwf	oled_putString@string& (0+255),b
  6859  000318  0E7C               	movlw	high STR_77
  6860  00031A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6861  00031C  0E00               	movlw	0
  6862  00031E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6863  000320  0E03               	movlw	3
  6864  000322  6F75               	movwf	oled_putString@start_page& (0+255),b
  6865  000324  ECA1  F026         	call	_oled_putString	;wreg free
  6866                           
  6867                           ;MOTEapp.c: 566: runningState = runningUplink;
  6868  000328  0E06               	movlw	6
  6869  00032A  0100               	movlb	0	; () banked
  6870  00032C  6FF3               	movwf	_runningState& (0+255),b
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;MOTEapp.c: 567: }
  6874                           ;MOTEapp.c: 568: break;
  6875  00032E  0012               	return	
  6876  000330                     
  6877                           ; BSR set to: 0
  6878                           ;MOTEapp.c: 570: if (changeStates)
  6879                           
  6880                           ; BSR set to: 0
  6881  000330  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6882  000332  B4D8               	btfsc	status,2,c
  6883  000334  D027               	goto	l477
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;MOTEapp.c: 571: {
  6887                           ;MOTEapp.c: 572: oled_clear();
  6888  000336  EC1A  F02D         	call	_oled_clear	;wreg free
  6889                           
  6890                           ;MOTEapp.c: 573: oled_putString(" View Downlink  ",0,0);
  6891  00033A  0E10               	movlw	low STR_78
  6892  00033C  0100               	movlb	0	; () banked
  6893  00033E  6F72               	movwf	oled_putString@string& (0+255),b
  6894  000340  0E7B               	movlw	high STR_78
  6895  000342  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6896  000344  0E00               	movlw	0
  6897  000346  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6898  000348  0E00               	movlw	0
  6899  00034A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6900  00034C  ECA1  F026         	call	_oled_putString	;wreg free
  6901                           
  6902                           ;MOTEapp.c: 574: oled_putString("  Last Message  ",0,1);
  6903  000350  0EFF               	movlw	low STR_79
  6904  000352  0100               	movlb	0	; () banked
  6905  000354  6F72               	movwf	oled_putString@string& (0+255),b
  6906  000356  0E7A               	movlw	high STR_79
  6907  000358  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6908  00035A  0E00               	movlw	0
  6909  00035C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6910  00035E  0E01               	movlw	1
  6911  000360  6F75               	movwf	oled_putString@start_page& (0+255),b
  6912  000362  ECA1  F026         	call	_oled_putString	;wreg free
  6913                           
  6914                           ;MOTEapp.c: 575: oled_putString("(NAV)    (SEL) ",0,3);
  6915  000366  0E83               	movlw	low STR_77
  6916  000368  0100               	movlb	0	; () banked
  6917  00036A  6F72               	movwf	oled_putString@string& (0+255),b
  6918  00036C  0E7C               	movlw	high STR_77
  6919  00036E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6920  000370  0E00               	movlw	0
  6921  000372  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6922  000374  0E03               	movlw	3
  6923  000376  6F75               	movwf	oled_putString@start_page& (0+255),b
  6924  000378  ECA1  F026         	call	_oled_putString	;wreg free
  6925                           
  6926                           ;MOTEapp.c: 576: runningState = runningDownlink;
  6927  00037C  0E0A               	movlw	10
  6928  00037E  0100               	movlb	0	; () banked
  6929  000380  6FF3               	movwf	_runningState& (0+255),b
  6930                           
  6931                           ;MOTEapp.c: 577: }
  6932  000382  0012               	return	
  6933  000384                     l477:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;MOTEapp.c: 578: else if (selectButton)
  6937                           
  6938                           ; BSR set to: 0
  6939  000384  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6940  000386  B4D8               	btfsc	status,2,c
  6941  000388  0012               	return	
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;MOTEapp.c: 579: {
  6945                           ;MOTEapp.c: 580: sleepTicker = 0;
  6946  00038A  0E00               	movlw	0
  6947  00038C  6FEF               	movwf	_sleepTicker& (0+255),b
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;MOTEapp.c: 582: oled_clear();
  6951  00038E  EC1A  F02D         	call	_oled_clear	;wreg free
  6952                           
  6953                           ;MOTEapp.c: 583: oled_putString("Uplink Pckt Type",0,0);
  6954  000392  0EDC               	movlw	low STR_81
  6955  000394  0100               	movlb	0	; () banked
  6956  000396  6F72               	movwf	oled_putString@string& (0+255),b
  6957  000398  0E7B               	movlw	high STR_81
  6958  00039A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6959  00039C  0E00               	movlw	0
  6960  00039E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6961  0003A0  0E00               	movlw	0
  6962  0003A2  6F75               	movwf	oled_putString@start_page& (0+255),b
  6963  0003A4  ECA1  F026         	call	_oled_putString	;wreg free
  6964                           
  6965                           ;MOTEapp.c: 584: oled_putString("Throu Port# ",0,1);
  6966  0003A8  0E65               	movlw	low STR_82
  6967  0003AA  0100               	movlb	0	; () banked
  6968  0003AC  6F72               	movwf	oled_putString@string& (0+255),b
  6969  0003AE  0E7D               	movlw	high STR_82
  6970  0003B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6971  0003B2  0E00               	movlw	0
  6972  0003B4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6973  0003B6  0E01               	movlw	1
  6974  0003B8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6975  0003BA  ECA1  F026         	call	_oled_putString	;wreg free
  6976                           
  6977                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  6978  0003BE  0EA9               	movlw	low STR_83
  6979  0003C0  0100               	movlb	0	; () banked
  6980  0003C2  6F72               	movwf	oled_putString@string& (0+255),b
  6981  0003C4  0E7A               	movlw	high STR_83
  6982  0003C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6983  0003C8  0E00               	movlw	0
  6984  0003CA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6985  0003CC  0E03               	movlw	3
  6986  0003CE  6F75               	movwf	oled_putString@start_page& (0+255),b
  6987  0003D0  ECA1  F026         	call	_oled_putString	;wreg free
  6988                           
  6989                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  6990  0003D4  ECE4  F022         	call	_moteApp_clearBuffers	;wreg free
  6991                           
  6992                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  6993  0003D8  ECFE  F02D         	call	_TMR2_ReadTimer	;wreg free
  6994  0003DC  0100               	movlb	0	; () banked
  6995  0003DE  6FF1               	movwf	_randomPortNum& (0+255),b
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;MOTEapp.c: 591: if (!randomPortNum)
  6999  0003E0  51F1               	movf	_randomPortNum& (0+255),w,b
  7000  0003E2  A4D8               	btfss	status,2,c
  7001  0003E4  D002               	goto	l480
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;MOTEapp.c: 592: randomPortNum = 5;
  7005  0003E6  0E05               	movlw	5
  7006  0003E8  D005               	goto	L4
  7007  0003EA                     l480:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  7011                           
  7012                           ; BSR set to: 0
  7013  0003EA  0EDF               	movlw	223
  7014  0003EC  65F1               	cpfsgt	_randomPortNum& (0+255),b
  7015  0003EE  D003               	goto	l482
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  7019  0003F0  51F1               	movf	_randomPortNum& (0+255),w,b
  7020  0003F2  0FCE               	addlw	206
  7021  0003F4                     L4:
  7022  0003F4  6FF1               	movwf	_randomPortNum& (0+255),b
  7023  0003F6                     l482:
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  7027                           
  7028                           ; BSR set to: 0
  7029                           
  7030                           ; BSR set to: 0
  7031  0003F6  0E0C               	movlw	12
  7032  0003F8  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7033  0003FA  0E01               	movlw	1
  7034  0003FC  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7035  0003FE  51F1               	movf	_randomPortNum& (0+255),w,b
  7036  000400  EC72  F023         	call	_oled_putUint8
  7037                           
  7038                           ;MOTEapp.c: 596: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7039  000404  0E00               	movlw	0
  7040  000406  0100               	movlb	0	; () banked
  7041  000408  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7042  00040A  51F1               	movf	_randomPortNum& (0+255),w,b
  7043  00040C  EC99  F01F         	call	_moteApp_add8bToDataBuffer
  7044                           
  7045                           ;MOTEapp.c: 597: dataBuffer[3] = 0x20;
  7046  000410  0E20               	movlw	32
  7047  000412  0101               	movlb	1	; () banked
  7048  000414  6FB3               	movwf	(_dataBuffer+3)& (0+255),b
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;MOTEapp.c: 599: light = 0;
  7052  000416  0E00               	movlw	0
  7053  000418  6F3F               	movwf	(_light+1)& (0+255),b
  7054  00041A  0E00               	movlw	0
  7055  00041C  6F3E               	movwf	_light& (0+255),b
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;MOTEapp.c: 600: temperature = 0;
  7059  00041E  0E00               	movlw	0
  7060  000420  0100               	movlb	0	; () banked
  7061  000422  6FDB               	movwf	(_temperature+1)& (0+255),b
  7062  000424  0E00               	movlw	0
  7063  000426  6FDA               	movwf	_temperature& (0+255),b
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;MOTEapp.c: 601: __nop();
  7067  000428  F000               	nop	
  7068                           
  7069                           ;MOTEapp.c: 602: moteApp_setSensorsInput();
  7070  00042A  EC80  F025         	call	_moteApp_setSensorsInput	;wreg free
  7071                           
  7072                           ;MOTEapp.c: 603: moteApp_delayms(500);
  7073  00042E  0E01               	movlw	1
  7074  000430  0100               	movlb	0	; () banked
  7075  000432  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7076  000434  0EF4               	movlw	244
  7077  000436  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7078  000438  EC33  F02B         	call	_moteApp_delayms	;wreg free
  7079                           
  7080                           ;MOTEapp.c: 604: uint8_t sizeOfUpdate = 0;
  7081  00043C  0E00               	movlw	0
  7082  00043E  0100               	movlb	0	; () banked
  7083  000440  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;MOTEapp.c: 605: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7087  000442  EC17  F029         	call	_moteApp_getLightValue	;wreg free
  7088  000446  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7089  00044A  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7090  00044E  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  7091  000452  C072  F13E         	movff	?_moteApp_convertSensorValue,_light
  7092  000456  C073  F13F         	movff	?_moteApp_convertSensorValue+1,_light+1
  7093                           
  7094                           ;MOTEapp.c: 606: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7095  00045A  EC17  F029         	call	_moteApp_getLightValue	;wreg free
  7096  00045E  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7097  000462  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7098  000466  0E04               	movlw	4
  7099  000468  0100               	movlb	0	; () banked
  7100  00046A  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7101  00046C  EC0A  F028         	call	_moteApp_addToDataBuffer	;wreg free
  7102  000470  0100               	movlb	0	; () banked
  7103  000472  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;MOTEapp.c: 607: __nop();
  7107  000474  F000               	nop	
  7108                           
  7109                           ;MOTEapp.c: 608: __nop();
  7110  000476  F000               	nop	
  7111                           
  7112                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7113  000478  EC11  F02A         	call	_moteApp_getTempValue	;wreg free
  7114  00047C  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7115  000480  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7116  000484  EC41  F025         	call	_moteApp_convertSensorValue	;wreg free
  7117  000488  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7118  00048C  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7119                           
  7120                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7121  000490  0100               	movlb	0	; () banked
  7122  000492  51DA               	movf	_temperature& (0+255),w,b
  7123  000494  ECA1  F018         	call	_ADC_TempConversion
  7124  000498  0100               	movlb	0	; () banked
  7125  00049A  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7126  00049C  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7127  00049E  6FDA               	movwf	_temperature& (0+255),b
  7128  0004A0  6BDB               	clrf	(_temperature+1)& (0+255),b
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7132  0004A2  EC2B  F02E         	call	_moteApp_lightStringSize	;wreg free
  7133  0004A6  0F05               	addlw	5
  7134  0004A8  0100               	movlb	0	; () banked
  7135  0004AA  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7136  0004AC  51DA               	movf	_temperature& (0+255),w,b
  7137  0004AE  EC99  F01F         	call	_moteApp_add8bToDataBuffer
  7138                           
  7139                           ;MOTEapp.c: 612: __nop();
  7140  0004B2  F000               	nop	
  7141                           
  7142                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7143  0004B4  0E07               	movlw	7
  7144  0004B6  0100               	movlb	0	; () banked
  7145  0004B8  6FF3               	movwf	_runningState& (0+255),b
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;MOTEapp.c: 615: }
  7149                           ;MOTEapp.c: 616: break;
  7150                           
  7151                           ; BSR set to: 0
  7152  0004BA  0012               	return	
  7153  0004BC                     
  7154                           ; BSR set to: 0
  7155                           ;MOTEapp.c: 618: if (changeStates)
  7156                           
  7157                           ; BSR set to: 0
  7158  0004BC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7159  0004BE  B4D8               	btfsc	status,2,c
  7160  0004C0  D00C               	goto	l484
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;MOTEapp.c: 619: {
  7164                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7165  0004C2  0E2D               	movlw	low STR_74
  7166  0004C4  6F61               	movwf	sendDataCommand@string& (0+255),b
  7167  0004C6  0E7D               	movlw	high STR_74
  7168  0004C8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7169  0004CA  0EB0               	movlw	low _dataBuffer
  7170  0004CC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7171  0004CE  0E01               	movlw	high _dataBuffer
  7172  0004D0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7173  0004D2  0E0C               	movlw	12
  7174  0004D4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7175  0004D6  EC22  F01E         	call	_sendDataCommand	;wreg free
  7176  0004DA                     l484:
  7177                           
  7178                           ;MOTEapp.c: 622: }
  7179                           ;MOTEapp.c: 623: if (selectButton)
  7180  0004DA  0100               	movlb	0	; () banked
  7181  0004DC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7182  0004DE  B4D8               	btfsc	status,2,c
  7183  0004E0  D00C               	goto	l485
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;MOTEapp.c: 624: {
  7187                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7188  0004E2  0E64               	movlw	low STR_85
  7189  0004E4  6F61               	movwf	sendDataCommand@string& (0+255),b
  7190  0004E6  0E7E               	movlw	high STR_85
  7191  0004E8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7192  0004EA  0EB0               	movlw	low _dataBuffer
  7193  0004EC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7194  0004EE  0E01               	movlw	high _dataBuffer
  7195  0004F0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7196  0004F2  0E0C               	movlw	12
  7197  0004F4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7198  0004F6  EC22  F01E         	call	_sendDataCommand	;wreg free
  7199  0004FA                     l485:
  7200                           
  7201                           ;MOTEapp.c: 626: }
  7202                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7203  0004FA  0100               	movlb	0	; () banked
  7204  0004FC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7205  0004FE  A4D8               	btfss	status,2,c
  7206  000500  D003               	goto	u9450
  7207                           
  7208                           ; BSR set to: 0
  7209  000502  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7210  000504  B4D8               	btfsc	status,2,c
  7211  000506  0012               	return	
  7212  000508                     u9450:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;MOTEapp.c: 629: {
  7216                           ;MOTEapp.c: 630: oled_clear();
  7217                           
  7218                           ; BSR set to: 0
  7219  000508  EC1A  F02D         	call	_oled_clear	;wreg free
  7220                           
  7221                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7222  00050C  0E4C               	movlw	low STR_86
  7223  00050E  0100               	movlb	0	; () banked
  7224  000510  6F72               	movwf	oled_putString@string& (0+255),b
  7225  000512  0E7E               	movlw	high STR_86
  7226  000514  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7227  000516  0E00               	movlw	0
  7228  000518  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7229  00051A  0E00               	movlw	0
  7230  00051C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7231  00051E  ECA1  F026         	call	_oled_putString	;wreg free
  7232                           
  7233                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7234  000522  0E40               	movlw	low STR_87
  7235  000524  0100               	movlb	0	; () banked
  7236  000526  6F72               	movwf	oled_putString@string& (0+255),b
  7237  000528  0E7E               	movlw	high STR_87
  7238  00052A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7239  00052C  0E00               	movlw	0
  7240  00052E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7241  000530  0E01               	movlw	1
  7242  000532  6F75               	movwf	oled_putString@start_page& (0+255),b
  7243  000534  ECA1  F026         	call	_oled_putString	;wreg free
  7244                           
  7245                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7246  000538  0E0C               	movlw	12
  7247  00053A  0100               	movlb	0	; () banked
  7248  00053C  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7249  00053E  0E01               	movlw	1
  7250  000540  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7251  000542  51F1               	movf	_randomPortNum& (0+255),w,b
  7252  000544  EC72  F023         	call	_oled_putUint8
  7253                           
  7254                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7255  000548  0E72               	movlw	low STR_73
  7256  00054A  0100               	movlb	0	; () banked
  7257  00054C  6F72               	movwf	oled_putString@string& (0+255),b
  7258  00054E  0E7D               	movlw	high STR_73
  7259  000550  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7260  000552  0E00               	movlw	0
  7261  000554  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7262  000556  0E02               	movlw	2
  7263  000558  6F75               	movwf	oled_putString@start_page& (0+255),b
  7264  00055A  ECA1  F026         	call	_oled_putString	;wreg free
  7265                           
  7266                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7267  00055E  ECEC  F02D         	call	_moteApp_getLightString	;wreg free
  7268  000562  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7269  000566  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7270  00056A  0E03               	movlw	3
  7271  00056C  0100               	movlb	0	; () banked
  7272  00056E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7273  000570  0E02               	movlw	2
  7274  000572  6F75               	movwf	oled_putString@start_page& (0+255),b
  7275  000574  ECA1  F026         	call	_oled_putString	;wreg free
  7276                           
  7277                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7278  000578  0E0B               	movlw	11
  7279  00057A  0100               	movlb	0	; () banked
  7280  00057C  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  7281  00057E  0E02               	movlw	2
  7282  000580  6F78               	movwf	oled_putint8@start_page& (0+255),b
  7283  000582  51DA               	movf	_temperature& (0+255),w,b
  7284  000584  ECAA  F021         	call	_oled_putint8
  7285                           
  7286                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7287  000588  9C89               	bcf	3977,6,c	;volatile
  7288                           
  7289                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7290  00058A  0E08               	movlw	8
  7291  00058C  0100               	movlb	0	; () banked
  7292  00058E  6FF3               	movwf	_runningState& (0+255),b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;MOTEapp.c: 639: }
  7296                           ;MOTEapp.c: 640: break;
  7297  000590  0012               	return	
  7298  000592                     
  7299                           ; BSR set to: 0
  7300                           ;MOTEapp.c: 642: if ( messageReady )
  7301                           
  7302                           ; BSR set to: 0
  7303  000592  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7304  000594  B4D8               	btfsc	status,2,c
  7305  000596  D103               	goto	l490
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;MOTEapp.c: 643: {
  7309                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7310  000598  0E50               	movlw	low _moduleResonseBuffer
  7311  00059A  6F60               	movwf	strcmp@s1& (0+255),b
  7312  00059C  0E01               	movlw	high _moduleResonseBuffer
  7313  00059E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7314  0005A0  0EF7               	movlw	low STR_44
  7315  0005A2  6F62               	movwf	strcmp@s2& (0+255),b
  7316  0005A4  0E7F               	movlw	high STR_44
  7317  0005A6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7318  0005A8  EC3E  F029         	call	_strcmp	;wreg free
  7319  0005AC  0100               	movlb	0	; () banked
  7320  0005AE  5160               	movf	?_strcmp& (0+255),w,b
  7321  0005B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7322  0005B2  A4D8               	btfss	status,2,c
  7323  0005B4  D003               	goto	l491
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;MOTEapp.c: 645: {
  7327                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7328  0005B6  8C89               	bsf	3977,6,c	;volatile
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7332  0005B8  0E08               	movlw	8
  7333  0005BA  6FF3               	movwf	_runningState& (0+255),b
  7334  0005BC                     l491:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;MOTEapp.c: 648: }
  7338                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7339                           
  7340                           ; BSR set to: 0
  7341  0005BC  0E50               	movlw	low _moduleResonseBuffer
  7342  0005BE  6F60               	movwf	strncmp@s1& (0+255),b
  7343  0005C0  0E01               	movlw	high _moduleResonseBuffer
  7344  0005C2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7345  0005C4  0EAA               	movlw	low STR_90
  7346  0005C6  6F62               	movwf	strncmp@s2& (0+255),b
  7347  0005C8  0E7F               	movlw	high STR_90
  7348  0005CA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7349  0005CC  0E00               	movlw	0
  7350  0005CE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7351  0005D0  0E06               	movlw	6
  7352  0005D2  6F64               	movwf	strncmp@len& (0+255),b
  7353  0005D4  ECB7  F023         	call	_strncmp	;wreg free
  7354  0005D8  0100               	movlb	0	; () banked
  7355  0005DA  5160               	movf	?_strncmp& (0+255),w,b
  7356  0005DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7357  0005DE  A4D8               	btfss	status,2,c
  7358  0005E0  D078               	goto	l492
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;MOTEapp.c: 650: {
  7362                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7363  0005E2  0E07               	movlw	7
  7364  0005E4  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7368  0005E6  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7369  0005E8  0D01               	mullw	1
  7370  0005EA  0E50               	movlw	low _moduleResonseBuffer
  7371  0005EC  24F3               	addwf	prodl,w,c
  7372  0005EE  6ED9               	movwf	fsr2l,c
  7373  0005F0  0E01               	movlw	high _moduleResonseBuffer
  7374  0005F2  20F4               	addwfc	prodh,w,c
  7375  0005F4  6EDA               	movwf	fsr2h,c
  7376  0005F6  50DF               	movf	indf2,w,c
  7377  0005F8  0101               	movlb	1	; () banked
  7378  0005FA  6FE3               	movwf	_responsePortNum& (0+255),b
  7379                           
  7380                           ; BSR set to: 1
  7381  0005FC  0100               	movlb	0	; () banked
  7382  0005FE  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7386  000600  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7387  000602  0D01               	mullw	1
  7388  000604  0E50               	movlw	low _moduleResonseBuffer
  7389  000606  24F3               	addwf	prodl,w,c
  7390  000608  6ED9               	movwf	fsr2l,c
  7391  00060A  0E01               	movlw	high _moduleResonseBuffer
  7392  00060C  20F4               	addwfc	prodh,w,c
  7393  00060E  6EDA               	movwf	fsr2h,c
  7394  000610  50DF               	movf	indf2,w,c
  7395  000612  0101               	movlb	1	; () banked
  7396  000614  6FE4               	movwf	(_responsePortNum+1)& (0+255),b
  7397                           
  7398                           ; BSR set to: 1
  7399  000616  0100               	movlb	0	; () banked
  7400  000618  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7404  00061A  0E20               	movlw	32
  7405  00061C  0101               	movlb	1	; () banked
  7406  00061E  19E4               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7407  000620  B4D8               	btfsc	status,2,c
  7408  000622  D015               	goto	l494
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;MOTEapp.c: 658: {
  7412                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7413  000624  0100               	movlb	0	; () banked
  7414  000626  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7415  000628  0D01               	mullw	1
  7416  00062A  0E50               	movlw	low _moduleResonseBuffer
  7417  00062C  24F3               	addwf	prodl,w,c
  7418  00062E  6ED9               	movwf	fsr2l,c
  7419  000630  0E01               	movlw	high _moduleResonseBuffer
  7420  000632  20F4               	addwfc	prodh,w,c
  7421  000634  6EDA               	movwf	fsr2h,c
  7422  000636  50DF               	movf	indf2,w,c
  7423  000638  0101               	movlb	1	; () banked
  7424  00063A  6FE5               	movwf	(_responsePortNum+2)& (0+255),b
  7425                           
  7426                           ; BSR set to: 1
  7427  00063C  0100               	movlb	0	; () banked
  7428  00063E  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7432  000640  0E20               	movlw	32
  7433  000642  0101               	movlb	1	; () banked
  7434  000644  19E5               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7435  000646  B4D8               	btfsc	status,2,c
  7436  000648  D002               	goto	l494
  7437                           
  7438                           ; BSR set to: 1
  7439                           ;MOTEapp.c: 661: {
  7440                           ;MOTEapp.c: 662: bufferReadPos++;
  7441  00064A  0100               	movlb	0	; () banked
  7442  00064C  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7443  00064E                     l494:
  7444                           
  7445                           ;MOTEapp.c: 663: }
  7446                           ;MOTEapp.c: 664: }
  7447                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7448                           
  7449                           ; BSR set to: 0
  7450                           
  7451                           ; BSR set to: 0
  7452  00064E  0E00               	movlw	0
  7453  000650  0100               	movlb	0	; () banked
  7454  000652  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7455  000654                     l10830:
  7456                           
  7457                           ; BSR set to: 0
  7458  000654  0E3F               	movlw	63
  7459  000656  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7460  000658  D001               	goto	l495
  7461  00065A  D023               	goto	u9530
  7462  00065C                     l495:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;MOTEapp.c: 667: {
  7466                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7467                           
  7468                           ; BSR set to: 0
  7469  00065C  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7470  00065E  0D01               	mullw	1
  7471  000660  0E50               	movlw	low _moduleResonseBuffer
  7472  000662  24F3               	addwf	prodl,w,c
  7473  000664  6ED9               	movwf	fsr2l,c
  7474  000666  0E01               	movlw	high _moduleResonseBuffer
  7475  000668  20F4               	addwfc	prodh,w,c
  7476  00066A  6EDA               	movwf	fsr2h,c
  7477  00066C  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7478  00066E  0D01               	mullw	1
  7479  000670  0E90               	movlw	low _responseData
  7480  000672  24F3               	addwf	prodl,w,c
  7481  000674  6EE1               	movwf	fsr1l,c
  7482  000676  0E01               	movlw	high _responseData
  7483  000678  20F4               	addwfc	prodh,w,c
  7484  00067A  6EE2               	movwf	fsr1h,c
  7485  00067C  CFDF FFE7          	movff	indf2,indf1
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7489  000680  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7490  000682  0D01               	mullw	1
  7491  000684  0E90               	movlw	low _responseData
  7492  000686  24F3               	addwf	prodl,w,c
  7493  000688  6ED9               	movwf	fsr2l,c
  7494  00068A  0E01               	movlw	high _responseData
  7495  00068C  20F4               	addwfc	prodh,w,c
  7496  00068E  6EDA               	movwf	fsr2h,c
  7497  000690  50DF               	movf	indf2,w,c
  7498  000692  B4D8               	btfsc	status,2,c
  7499  000694  D002               	goto	l497
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;MOTEapp.c: 671: {
  7503                           ;MOTEapp.c: 672: bufferReadPos++;
  7504  000696  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7505                           
  7506                           ;MOTEapp.c: 673: } else {
  7507  000698  D002               	goto	l498
  7508  00069A                     l497:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7512                           
  7513                           ; BSR set to: 0
  7514  00069A  0E40               	movlw	64
  7515  00069C  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7516  00069E                     l498:
  7517                           
  7518                           ; BSR set to: 0
  7519                           
  7520                           ; BSR set to: 0
  7521  00069E  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7522  0006A0  D7D9               	goto	l10830
  7523  0006A2                     u9530:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 675: }
  7527                           ;MOTEapp.c: 676: }
  7528                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7529  0006A2  8E89               	bsf	3977,7,c	;volatile
  7530                           
  7531                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7532  0006A4  9C89               	bcf	3977,6,c	;volatile
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7536  0006A6  0E54               	movlw	low STR_91
  7537  0006A8  6F72               	movwf	oled_putString@string& (0+255),b
  7538  0006AA  0E7B               	movlw	high STR_91
  7539  0006AC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7540  0006AE  0E00               	movlw	0
  7541  0006B0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7542  0006B2  0E02               	movlw	2
  7543  0006B4  6F75               	movwf	oled_putString@start_page& (0+255),b
  7544  0006B6  ECA1  F026         	call	_oled_putString	;wreg free
  7545                           
  7546                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7547  0006BA  0ECC               	movlw	low STR_92
  7548  0006BC  0100               	movlb	0	; () banked
  7549  0006BE  6F72               	movwf	oled_putString@string& (0+255),b
  7550  0006C0  0E7A               	movlw	high STR_92
  7551  0006C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7552  0006C4  0E00               	movlw	0
  7553  0006C6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7554  0006C8  0E03               	movlw	3
  7555  0006CA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7556  0006CC  ECA1  F026         	call	_oled_putString	;wreg free
  7557                           
  7558                           ;MOTEapp.c: 683: }
  7559  0006D0  D05D               	goto	l504
  7560  0006D2                     l492:
  7561                           
  7562                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7563  0006D2  0E50               	movlw	low _moduleResonseBuffer
  7564  0006D4  0100               	movlb	0	; () banked
  7565  0006D6  6F60               	movwf	strncmp@s1& (0+255),b
  7566  0006D8  0E01               	movlw	high _moduleResonseBuffer
  7567  0006DA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7568  0006DC  0EB1               	movlw	low STR_93
  7569  0006DE  6F62               	movwf	strncmp@s2& (0+255),b
  7570  0006E0  0E7F               	movlw	high STR_93
  7571  0006E2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7572  0006E4  0E00               	movlw	0
  7573  0006E6  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7574  0006E8  0E06               	movlw	6
  7575  0006EA  6F64               	movwf	strncmp@len& (0+255),b
  7576  0006EC  ECB7  F023         	call	_strncmp	;wreg free
  7577  0006F0  0100               	movlb	0	; () banked
  7578  0006F2  5160               	movf	?_strncmp& (0+255),w,b
  7579  0006F4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7580  0006F6  A4D8               	btfss	status,2,c
  7581  0006F8  D00C               	goto	l500
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;MOTEapp.c: 685: {
  7585                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7586  0006FA  9C89               	bcf	3977,6,c	;volatile
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7590  0006FC  0EBA               	movlw	low STR_94
  7591  0006FE  6F72               	movwf	oled_putString@string& (0+255),b
  7592  000700  0E7B               	movlw	high STR_94
  7593  000702  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7594  000704  0E00               	movlw	0
  7595  000706  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7596  000708  0E03               	movlw	3
  7597  00070A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7598  00070C  ECA1  F026         	call	_oled_putString	;wreg free
  7599                           
  7600                           ;MOTEapp.c: 688: }
  7601  000710  D03D               	goto	l504
  7602  000712                     l500:
  7603                           
  7604                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7605  000712  0E50               	movlw	low _moduleResonseBuffer
  7606  000714  0100               	movlb	0	; () banked
  7607  000716  6F60               	movwf	strncmp@s1& (0+255),b
  7608  000718  0E01               	movlw	high _moduleResonseBuffer
  7609  00071A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7610  00071C  0EA3               	movlw	low STR_95
  7611  00071E  6F62               	movwf	strncmp@s2& (0+255),b
  7612  000720  0E7F               	movlw	high STR_95
  7613  000722  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7614  000724  0E00               	movlw	0
  7615  000726  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7616  000728  0E06               	movlw	6
  7617  00072A  6F64               	movwf	strncmp@len& (0+255),b
  7618  00072C  ECB7  F023         	call	_strncmp	;wreg free
  7619  000730  0100               	movlb	0	; () banked
  7620  000732  5160               	movf	?_strncmp& (0+255),w,b
  7621  000734  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7622  000736  A4D8               	btfss	status,2,c
  7623  000738  D00B               	goto	l502
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;MOTEapp.c: 690: {
  7627                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7628  00073A  0E96               	movlw	low STR_96
  7629  00073C  6F72               	movwf	oled_putString@string& (0+255),b
  7630  00073E  0E7A               	movlw	high STR_96
  7631  000740  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7632  000742  0E00               	movlw	0
  7633  000744  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7634  000746  0E03               	movlw	3
  7635  000748  6F75               	movwf	oled_putString@start_page& (0+255),b
  7636  00074A  ECA1  F026         	call	_oled_putString	;wreg free
  7637                           
  7638                           ;MOTEapp.c: 692: }
  7639  00074E  D01E               	goto	l504
  7640  000750                     l502:
  7641                           
  7642                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7643  000750  0E50               	movlw	low _moduleResonseBuffer
  7644  000752  0100               	movlb	0	; () banked
  7645  000754  6F60               	movwf	strncmp@s1& (0+255),b
  7646  000756  0E01               	movlw	high _moduleResonseBuffer
  7647  000758  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7648  00075A  0E9C               	movlw	low STR_97
  7649  00075C  6F62               	movwf	strncmp@s2& (0+255),b
  7650  00075E  0E7F               	movlw	high STR_97
  7651  000760  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7652  000762  0E00               	movlw	0
  7653  000764  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7654  000766  0E06               	movlw	6
  7655  000768  6F64               	movwf	strncmp@len& (0+255),b
  7656  00076A  ECB7  F023         	call	_strncmp	;wreg free
  7657  00076E  0100               	movlb	0	; () banked
  7658  000770  5160               	movf	?_strncmp& (0+255),w,b
  7659  000772  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7660  000774  A4D8               	btfss	status,2,c
  7661  000776  D00A               	goto	l504
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;MOTEapp.c: 694: {
  7665                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7666  000778  0EB3               	movlw	low STR_98
  7667  00077A  6F72               	movwf	oled_putString@string& (0+255),b
  7668  00077C  0E7C               	movlw	high STR_98
  7669  00077E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7670  000780  0E00               	movlw	0
  7671  000782  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7672  000784  0E03               	movlw	3
  7673  000786  6F75               	movwf	oled_putString@start_page& (0+255),b
  7674  000788  ECA1  F026         	call	_oled_putString	;wreg free
  7675  00078C                     l504:
  7676                           
  7677                           ;MOTEapp.c: 696: }
  7678                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7679  00078C  0EFA               	movlw	250
  7680  00078E  0100               	movlb	0	; () banked
  7681  000790  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7682  000792  0E58               	movlw	88
  7683  000794                     u11337:
  7684  000794  2EE8               	decfsz	wreg,f,c
  7685  000796  D7FE               	bra	u11337
  7686  000798  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7687  00079A  D7FC               	bra	u11337
  7688  00079C  F000               	nop	
  7689  00079E                     l490:
  7690                           
  7691                           ;MOTEapp.c: 698: }
  7692                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7693  00079E  0100               	movlb	0	; () banked
  7694  0007A0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7695  0007A2  A4D8               	btfss	status,2,c
  7696  0007A4  D003               	goto	u9580
  7697                           
  7698                           ; BSR set to: 0
  7699  0007A6  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7700  0007A8  B4D8               	btfsc	status,2,c
  7701  0007AA  0012               	return	
  7702  0007AC                     u9580:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;MOTEapp.c: 700: {
  7706                           ;MOTEapp.c: 701: oled_clear();
  7707                           
  7708                           ; BSR set to: 0
  7709  0007AC  EC1A  F02D         	call	_oled_clear	;wreg free
  7710                           
  7711                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7712  0007B0  0E21               	movlw	low STR_75
  7713  0007B2  0100               	movlb	0	; () banked
  7714  0007B4  6F72               	movwf	oled_putString@string& (0+255),b
  7715  0007B6  0E7B               	movlw	high STR_75
  7716  0007B8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7717  0007BA  0E00               	movlw	0
  7718  0007BC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7719  0007BE  0E00               	movlw	0
  7720  0007C0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7721  0007C2  ECA1  F026         	call	_oled_putString	;wreg free
  7722                           
  7723                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  7724  0007C6  0E87               	movlw	low STR_76
  7725  0007C8  0100               	movlb	0	; () banked
  7726  0007CA  6F72               	movwf	oled_putString@string& (0+255),b
  7727  0007CC  0E7B               	movlw	high STR_76
  7728  0007CE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7729  0007D0  0E00               	movlw	0
  7730  0007D2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7731  0007D4  0E01               	movlw	1
  7732  0007D6  6F75               	movwf	oled_putString@start_page& (0+255),b
  7733  0007D8  ECA1  F026         	call	_oled_putString	;wreg free
  7734                           
  7735                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  7736  0007DC  0E83               	movlw	low STR_77
  7737  0007DE  0100               	movlb	0	; () banked
  7738  0007E0  6F72               	movwf	oled_putString@string& (0+255),b
  7739  0007E2  0E7C               	movlw	high STR_77
  7740  0007E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7741  0007E6  0E00               	movlw	0
  7742  0007E8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7743  0007EA  0E03               	movlw	3
  7744  0007EC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7745  0007EE  ECA1  F026         	call	_oled_putString	;wreg free
  7746                           
  7747                           ;MOTEapp.c: 705: runningState = runningUplink;
  7748  0007F2  0E06               	movlw	6
  7749  0007F4  0100               	movlb	0	; () banked
  7750  0007F6  6FF3               	movwf	_runningState& (0+255),b
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;MOTEapp.c: 706: }
  7754                           ;MOTEapp.c: 707: break;
  7755  0007F8  0012               	return	
  7756  0007FA                     
  7757                           ; BSR set to: 0
  7758                           ;MOTEapp.c: 709: if (changeStates)
  7759                           
  7760                           ; BSR set to: 0
  7761  0007FA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7762  0007FC  B4D8               	btfsc	status,2,c
  7763  0007FE  D027               	goto	l509
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;MOTEapp.c: 710: {
  7767                           ;MOTEapp.c: 711: oled_clear();
  7768  000800  EC1A  F02D         	call	_oled_clear	;wreg free
  7769                           
  7770                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  7771  000804  0E63               	movlw	low STR_102
  7772  000806  0100               	movlb	0	; () banked
  7773  000808  6F72               	movwf	oled_putString@string& (0+255),b
  7774  00080A  0E7C               	movlw	high STR_102
  7775  00080C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7776  00080E  0E00               	movlw	0
  7777  000810  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7778  000812  0E00               	movlw	0
  7779  000814  6F75               	movwf	oled_putString@start_page& (0+255),b
  7780  000816  ECA1  F026         	call	_oled_putString	;wreg free
  7781                           
  7782                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  7783  00081A  0E53               	movlw	low STR_103
  7784  00081C  0100               	movlb	0	; () banked
  7785  00081E  6F72               	movwf	oled_putString@string& (0+255),b
  7786  000820  0E7C               	movlw	high STR_103
  7787  000822  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7788  000824  0E00               	movlw	0
  7789  000826  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7790  000828  0E01               	movlw	1
  7791  00082A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7792  00082C  ECA1  F026         	call	_oled_putString	;wreg free
  7793                           
  7794                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  7795  000830  0E83               	movlw	low STR_77
  7796  000832  0100               	movlb	0	; () banked
  7797  000834  6F72               	movwf	oled_putString@string& (0+255),b
  7798  000836  0E7C               	movlw	high STR_77
  7799  000838  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7800  00083A  0E00               	movlw	0
  7801  00083C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7802  00083E  0E03               	movlw	3
  7803  000840  6F75               	movwf	oled_putString@start_page& (0+255),b
  7804  000842  ECA1  F026         	call	_oled_putString	;wreg free
  7805                           
  7806                           ;MOTEapp.c: 715: runningState = runningSensor;
  7807  000846  0E01               	movlw	1
  7808  000848  0100               	movlb	0	; () banked
  7809  00084A  6FF3               	movwf	_runningState& (0+255),b
  7810                           
  7811                           ;MOTEapp.c: 716: }
  7812  00084C  0012               	return	
  7813  00084E                     l509:
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;MOTEapp.c: 717: else if (selectButton)
  7817                           
  7818                           ; BSR set to: 0
  7819  00084E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7820  000850  B4D8               	btfsc	status,2,c
  7821  000852  0012               	return	
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;MOTEapp.c: 718: {
  7825                           ;MOTEapp.c: 720: oled_clear();
  7826  000854  EC1A  F02D         	call	_oled_clear	;wreg free
  7827                           
  7828                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  7829  000858  9E89               	bcf	3977,7,c	;volatile
  7830                           
  7831                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  7832  00085A  0E42               	movlw	low STR_105
  7833  00085C  0100               	movlb	0	; () banked
  7834  00085E  6F72               	movwf	oled_putString@string& (0+255),b
  7835  000860  0E7C               	movlw	high STR_105
  7836  000862  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7837  000864  0E00               	movlw	0
  7838  000866  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7839  000868  0E00               	movlw	0
  7840  00086A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7841  00086C  ECA1  F026         	call	_oled_putString	;wreg free
  7842                           
  7843                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  7844  000870  0ECA               	movlw	low STR_106
  7845  000872  0100               	movlb	0	; () banked
  7846  000874  6F72               	movwf	oled_putString@string& (0+255),b
  7847  000876  0E7E               	movlw	high STR_106
  7848  000878  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7849  00087A  0E00               	movlw	0
  7850  00087C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7851  00087E  0E01               	movlw	1
  7852  000880  6F75               	movwf	oled_putString@start_page& (0+255),b
  7853  000882  ECA1  F026         	call	_oled_putString	;wreg free
  7854                           
  7855                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  7856  000886  0EE3               	movlw	low _responsePortNum
  7857  000888  0100               	movlb	0	; () banked
  7858  00088A  6F72               	movwf	oled_putString@string& (0+255),b
  7859  00088C  0E01               	movlw	high _responsePortNum
  7860  00088E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7861  000890  0E09               	movlw	9
  7862  000892  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7863  000894  0E01               	movlw	1
  7864  000896  6F75               	movwf	oled_putString@start_page& (0+255),b
  7865  000898  ECA1  F026         	call	_oled_putString	;wreg free
  7866                           
  7867                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  7868  00089C  0E51               	movlw	low (STR_86+5)
  7869  00089E  0100               	movlb	0	; () banked
  7870  0008A0  6F72               	movwf	oled_putString@string& (0+255),b
  7871  0008A2  0E7E               	movlw	high (STR_86+5)
  7872  0008A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7873  0008A6  0E00               	movlw	0
  7874  0008A8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7875  0008AA  0E02               	movlw	2
  7876  0008AC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7877  0008AE  ECA1  F026         	call	_oled_putString	;wreg free
  7878                           
  7879                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  7880  0008B2  0E90               	movlw	low _responseData
  7881  0008B4  0100               	movlb	0	; () banked
  7882  0008B6  6F72               	movwf	oled_putString@string& (0+255),b
  7883  0008B8  0E01               	movlw	high _responseData
  7884  0008BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7885  0008BC  0E06               	movlw	6
  7886  0008BE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7887  0008C0  0E02               	movlw	2
  7888  0008C2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7889  0008C4  ECA1  F026         	call	_oled_putString	;wreg free
  7890                           
  7891                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  7892  0008C8  0E9A               	movlw	low (_responseData+10)
  7893  0008CA  0100               	movlb	0	; () banked
  7894  0008CC  6F72               	movwf	oled_putString@string& (0+255),b
  7895  0008CE  0E01               	movlw	high (_responseData+10)
  7896  0008D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7897  0008D2  0E00               	movlw	0
  7898  0008D4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7899  0008D6  0E03               	movlw	3
  7900  0008D8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7901  0008DA  ECA1  F026         	call	_oled_putString	;wreg free
  7902                           
  7903                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  7904  0008DE  0E0B               	movlw	11
  7905  0008E0  0100               	movlb	0	; () banked
  7906  0008E2  6FF3               	movwf	_runningState& (0+255),b
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;MOTEapp.c: 735: }
  7910                           ;MOTEapp.c: 736: break;
  7911                           
  7912                           ; BSR set to: 0
  7913  0008E4  0012               	return	
  7914  0008E6                     
  7915                           ; BSR set to: 0
  7916                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  7917                           
  7918                           ; BSR set to: 0
  7919  0008E6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7920  0008E8  A4D8               	btfss	status,2,c
  7921  0008EA  D003               	goto	u9620
  7922                           
  7923                           ; BSR set to: 0
  7924  0008EC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7925  0008EE  B4D8               	btfsc	status,2,c
  7926  0008F0  0012               	return	
  7927  0008F2                     u9620:
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;MOTEapp.c: 739: {
  7931                           ;MOTEapp.c: 740: oled_clear();
  7932                           
  7933                           ; BSR set to: 0
  7934  0008F2  EC1A  F02D         	call	_oled_clear	;wreg free
  7935                           
  7936                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  7937  0008F6  0E10               	movlw	low STR_78
  7938  0008F8  0100               	movlb	0	; () banked
  7939  0008FA  6F72               	movwf	oled_putString@string& (0+255),b
  7940  0008FC  0E7B               	movlw	high STR_78
  7941  0008FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7942  000900  0E00               	movlw	0
  7943  000902  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7944  000904  0E00               	movlw	0
  7945  000906  6F75               	movwf	oled_putString@start_page& (0+255),b
  7946  000908  ECA1  F026         	call	_oled_putString	;wreg free
  7947                           
  7948                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  7949  00090C  0EFF               	movlw	low STR_79
  7950  00090E  0100               	movlb	0	; () banked
  7951  000910  6F72               	movwf	oled_putString@string& (0+255),b
  7952  000912  0E7A               	movlw	high STR_79
  7953  000914  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7954  000916  0E00               	movlw	0
  7955  000918  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7956  00091A  0E01               	movlw	1
  7957  00091C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7958  00091E  ECA1  F026         	call	_oled_putString	;wreg free
  7959                           
  7960                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  7961  000922  0E83               	movlw	low STR_77
  7962  000924  0100               	movlb	0	; () banked
  7963  000926  6F72               	movwf	oled_putString@string& (0+255),b
  7964  000928  0E7C               	movlw	high STR_77
  7965  00092A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7966  00092C  0E00               	movlw	0
  7967  00092E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7968  000930  0E03               	movlw	3
  7969  000932  6F75               	movwf	oled_putString@start_page& (0+255),b
  7970  000934  ECA1  F026         	call	_oled_putString	;wreg free
  7971                           
  7972                           ;MOTEapp.c: 744: runningState = runningDownlink;
  7973  000938  0E0A               	movlw	10
  7974  00093A  0100               	movlb	0	; () banked
  7975  00093C  6FF3               	movwf	_runningState& (0+255),b
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;MOTEapp.c: 745: }
  7979                           ;MOTEapp.c: 746: break;
  7980  00093E  0012               	return	
  7981  000940                     
  7982                           ; BSR set to: 0
  7983                           ;MOTEapp.c: 748: if (changeStates)
  7984                           
  7985                           ; BSR set to: 0
  7986  000940  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7987  000942  B4D8               	btfsc	status,2,c
  7988  000944  D036               	goto	l517
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;MOTEapp.c: 749: {
  7992                           ;MOTEapp.c: 750: oled_clear();
  7993  000946  EC1A  F02D         	call	_oled_clear	;wreg free
  7994                           
  7995                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  7996  00094A  0E20               	movlw	low STR_111
  7997  00094C  0100               	movlb	0	; () banked
  7998  00094E  6F72               	movwf	oled_putString@string& (0+255),b
  7999  000950  0E7C               	movlw	high STR_111
  8000  000952  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8001  000954  0E00               	movlw	0
  8002  000956  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8003  000958  0E00               	movlw	0
  8004  00095A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8005  00095C  ECA1  F026         	call	_oled_putString	;wreg free
  8006                           
  8007                           ;MOTEapp.c: 752: if (menuTimeout)
  8008  000960  0100               	movlb	0	; () banked
  8009  000962  51FB               	movf	_menuTimeout& (0+255),w,b
  8010  000964  B4D8               	btfsc	status,2,c
  8011  000966  D00B               	goto	l518
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  8015  000968  0ED3               	movlw	low STR_112
  8016  00096A  6F72               	movwf	oled_putString@string& (0+255),b
  8017  00096C  0E7C               	movlw	high STR_112
  8018  00096E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8019  000970  0E00               	movlw	0
  8020  000972  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8021  000974  0E02               	movlw	2
  8022  000976  6F75               	movwf	oled_putString@start_page& (0+255),b
  8023  000978  ECA1  F026         	call	_oled_putString	;wreg free
  8024  00097C  D00B               	goto	l519
  8025  00097E                     l518:
  8026                           
  8027                           ;MOTEapp.c: 754: else
  8028                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  8029  00097E  0EE2               	movlw	low STR_113
  8030  000980  0100               	movlb	0	; () banked
  8031  000982  6F72               	movwf	oled_putString@string& (0+255),b
  8032  000984  0E7C               	movlw	high STR_113
  8033  000986  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8034  000988  0E00               	movlw	0
  8035  00098A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8036  00098C  0E02               	movlw	2
  8037  00098E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8038  000990  ECA1  F026         	call	_oled_putString	;wreg free
  8039  000994                     l519:
  8040                           
  8041                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  8042  000994  0E73               	movlw	low STR_114
  8043  000996  0100               	movlb	0	; () banked
  8044  000998  6F72               	movwf	oled_putString@string& (0+255),b
  8045  00099A  0E7C               	movlw	high STR_114
  8046  00099C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8047  00099E  0E00               	movlw	0
  8048  0009A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8049  0009A2  0E03               	movlw	3
  8050  0009A4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8051  0009A6  ECA1  F026         	call	_oled_putString	;wreg free
  8052                           
  8053                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  8054  0009AA  0E0C               	movlw	12
  8055  0009AC  0100               	movlb	0	; () banked
  8056  0009AE  6FF3               	movwf	_runningState& (0+255),b
  8057                           
  8058                           ;MOTEapp.c: 758: }
  8059  0009B0  0012               	return	
  8060  0009B2                     l517:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;MOTEapp.c: 759: else if (selectButton)
  8064                           
  8065                           ; BSR set to: 0
  8066  0009B2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8067  0009B4  B4D8               	btfsc	status,2,c
  8068  0009B6  0012               	return	
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;MOTEapp.c: 760: {
  8072                           ;MOTEapp.c: 761: oled_clear();
  8073  0009B8  EC1A  F02D         	call	_oled_clear	;wreg free
  8074                           
  8075                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  8076  0009BC  0E63               	movlw	low STR_102
  8077  0009BE  0100               	movlb	0	; () banked
  8078  0009C0  6F72               	movwf	oled_putString@string& (0+255),b
  8079  0009C2  0E7C               	movlw	high STR_102
  8080  0009C4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8081  0009C6  0E00               	movlw	0
  8082  0009C8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8083  0009CA  0E00               	movlw	0
  8084  0009CC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8085  0009CE  ECA1  F026         	call	_oled_putString	;wreg free
  8086                           
  8087                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  8088  0009D2  0E80               	movlw	low STR_116
  8089  0009D4  0100               	movlb	0	; () banked
  8090  0009D6  6F72               	movwf	oled_putString@string& (0+255),b
  8091  0009D8  0E7F               	movlw	high STR_116
  8092  0009DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8093  0009DC  0E00               	movlw	0
  8094  0009DE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8095  0009E0  0E01               	movlw	1
  8096  0009E2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8097  0009E4  ECA1  F026         	call	_oled_putString	;wreg free
  8098                           
  8099                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8100  0009E8  0E79               	movlw	low STR_117
  8101  0009EA  0100               	movlb	0	; () banked
  8102  0009EC  6F72               	movwf	oled_putString@string& (0+255),b
  8103  0009EE  0E7F               	movlw	high STR_117
  8104  0009F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8105  0009F2  0E00               	movlw	0
  8106  0009F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8107  0009F6  0E02               	movlw	2
  8108  0009F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8109  0009FA  ECA1  F026         	call	_oled_putString	;wreg free
  8110                           
  8111                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8112  0009FE  0EFA               	movlw	low STR_118
  8113  000A00  0100               	movlb	0	; () banked
  8114  000A02  6F72               	movwf	oled_putString@string& (0+255),b
  8115  000A04  0E7F               	movlw	high STR_118
  8116  000A06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8117  000A08  0E0A               	movlw	10
  8118  000A0A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8119  000A0C  0E02               	movlw	2
  8120  000A0E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8121  000A10  ECA1  F026         	call	_oled_putString	;wreg free
  8122                           
  8123                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8124  000A14  EC80  F025         	call	_moteApp_setSensorsInput	;wreg free
  8125                           
  8126                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8127  000A18  0E02               	movlw	2
  8128  000A1A  0100               	movlb	0	; () banked
  8129  000A1C  6FF3               	movwf	_runningState& (0+255),b
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;MOTEapp.c: 769: }
  8133                           ;MOTEapp.c: 770: break;
  8134                           
  8135                           ; BSR set to: 0
  8136  000A1E  0012               	return	
  8137  000A20                     
  8138                           ; BSR set to: 0
  8139                           ;MOTEapp.c: 772: if (changeStates)
  8140                           
  8141                           ; BSR set to: 0
  8142  000A20  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8143  000A22  B4D8               	btfsc	status,2,c
  8144  000A24  D09B               	goto	l523
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;MOTEapp.c: 773: {
  8148                           ;MOTEapp.c: 774: oled_clear();
  8149  000A26  EC1A  F02D         	call	_oled_clear	;wreg free
  8150                           
  8151                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8152  000A2A  0E76               	movlw	low STR_119
  8153  000A2C  0100               	movlb	0	; () banked
  8154  000A2E  6F72               	movwf	oled_putString@string& (0+255),b
  8155  000A30  0E7B               	movlw	high STR_119
  8156  000A32  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8157  000A34  0E00               	movlw	0
  8158  000A36  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8159  000A38  0E00               	movlw	0
  8160  000A3A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8161  000A3C  ECA1  F026         	call	_oled_putString	;wreg free
  8162                           
  8163                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8164  000A40  0E65               	movlw	low STR_120
  8165  000A42  0100               	movlb	0	; () banked
  8166  000A44  6F72               	movwf	oled_putString@string& (0+255),b
  8167  000A46  0E7B               	movlw	high STR_120
  8168  000A48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8169  000A4A  0E00               	movlw	0
  8170  000A4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8171  000A4E  0E01               	movlw	1
  8172  000A50  6F75               	movwf	oled_putString@start_page& (0+255),b
  8173  000A52  ECA1  F026         	call	_oled_putString	;wreg free
  8174                           
  8175                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8176  000A56  0E87               	movlw	low STR_121
  8177  000A58  0100               	movlb	0	; () banked
  8178  000A5A  6F72               	movwf	oled_putString@string& (0+255),b
  8179  000A5C  0E7F               	movlw	high STR_121
  8180  000A5E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8181  000A60  0E00               	movlw	0
  8182  000A62  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8183  000A64  0E02               	movlw	2
  8184  000A66  6F75               	movwf	oled_putString@start_page& (0+255),b
  8185  000A68  ECA1  F026         	call	_oled_putString	;wreg free
  8186                           
  8187                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8188  000A6C  0EC2               	movlw	low STR_122
  8189  000A6E  0100               	movlb	0	; () banked
  8190  000A70  6F72               	movwf	oled_putString@string& (0+255),b
  8191  000A72  0E7F               	movlw	high STR_122
  8192  000A74  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8193  000A76  0E0C               	movlw	12
  8194  000A78  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8195  000A7A  0E02               	movlw	2
  8196  000A7C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8197  000A7E  ECA1  F026         	call	_oled_putString	;wreg free
  8198                           
  8199                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8200  000A82  D048               	goto	l524
  8201  000A84                     
  8202                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8203                           
  8204                           ;MOTEapp.c: 783: case 0:
  8205  000A84  0ECB               	movlw	low (STR_169+11)
  8206  000A86  0100               	movlb	0	; () banked
  8207  000A88  6F72               	movwf	oled_putString@string& (0+255),b
  8208  000A8A  0E7D               	movlw	high (STR_169+11)
  8209  000A8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8210  000A8E  0E07               	movlw	7
  8211  000A90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8212  000A92  0E02               	movlw	2
  8213  000A94  6F75               	movwf	oled_putString@start_page& (0+255),b
  8214  000A96  ECA1  F026         	call	_oled_putString	;wreg free
  8215                           
  8216                           ;MOTEapp.c: 785: break;
  8217  000A9A  D051               	goto	l527
  8218  000A9C                     
  8219                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8220  000A9C  0EE0               	movlw	low (STR_146+1)
  8221  000A9E  0100               	movlb	0	; () banked
  8222  000AA0  6F72               	movwf	oled_putString@string& (0+255),b
  8223  000AA2  0E7F               	movlw	high (STR_146+1)
  8224  000AA4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8225  000AA6  0E07               	movlw	7
  8226  000AA8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8227  000AAA  0E02               	movlw	2
  8228  000AAC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8229  000AAE  ECA1  F026         	call	_oled_putString	;wreg free
  8230                           
  8231                           ;MOTEapp.c: 788: break;
  8232  000AB2  D045               	goto	l527
  8233  000AB4                     
  8234                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8235  000AB4  0EEC               	movlw	low (STR_147+1)
  8236  000AB6  0100               	movlb	0	; () banked
  8237  000AB8  6F72               	movwf	oled_putString@string& (0+255),b
  8238  000ABA  0E7F               	movlw	high (STR_147+1)
  8239  000ABC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8240  000ABE  0E07               	movlw	7
  8241  000AC0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8242  000AC2  0E02               	movlw	2
  8243  000AC4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8244  000AC6  ECA1  F026         	call	_oled_putString	;wreg free
  8245                           
  8246                           ;MOTEapp.c: 791: break;
  8247  000ACA  D039               	goto	l527
  8248  000ACC                     
  8249                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8250  000ACC  0EE4               	movlw	low (STR_148+1)
  8251  000ACE  0100               	movlb	0	; () banked
  8252  000AD0  6F72               	movwf	oled_putString@string& (0+255),b
  8253  000AD2  0E7F               	movlw	high (STR_148+1)
  8254  000AD4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8255  000AD6  0E07               	movlw	7
  8256  000AD8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8257  000ADA  0E02               	movlw	2
  8258  000ADC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8259  000ADE  ECA1  F026         	call	_oled_putString	;wreg free
  8260                           
  8261                           ;MOTEapp.c: 794: break;
  8262  000AE2  D02D               	goto	l527
  8263  000AE4                     
  8264                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8265  000AE4  0EE8               	movlw	low (STR_149+1)
  8266  000AE6  0100               	movlb	0	; () banked
  8267  000AE8  6F72               	movwf	oled_putString@string& (0+255),b
  8268  000AEA  0E7F               	movlw	high (STR_149+1)
  8269  000AEC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8270  000AEE  0E07               	movlw	7
  8271  000AF0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8272  000AF2  0E02               	movlw	2
  8273  000AF4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8274  000AF6  ECA1  F026         	call	_oled_putString	;wreg free
  8275                           
  8276                           ;MOTEapp.c: 797: break;
  8277  000AFA  D021               	goto	l527
  8278  000AFC                     
  8279                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8280  000AFC  0EEF               	movlw	low STR_128
  8281  000AFE  0100               	movlb	0	; () banked
  8282  000B00  6F72               	movwf	oled_putString@string& (0+255),b
  8283  000B02  0E7F               	movlw	high STR_128
  8284  000B04  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8285  000B06  0E07               	movlw	7
  8286  000B08  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8287  000B0A  0E02               	movlw	2
  8288  000B0C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8289  000B0E  ECA1  F026         	call	_oled_putString	;wreg free
  8290                           
  8291                           ;MOTEapp.c: 801: }
  8292                           
  8293                           ;MOTEapp.c: 800: break;
  8294  000B12  D015               	goto	l527
  8295  000B14                     l524:
  8296  000B14  0100               	movlb	0	; () banked
  8297  000B16  51FE               	movf	_periodicUpValue& (0+255),w,b
  8298                           
  8299                           ; Switch size 1, requested type "space"
  8300                           ; Number of cases is 6, Range of values is 0 to 5
  8301                           ; switch strategies available:
  8302                           ; Name         Instructions Cycles
  8303                           ; simple_byte           19    10 (average)
  8304                           ;	Chosen strategy is simple_byte
  8305  000B18  0A00               	xorlw	0	; case 0
  8306  000B1A  B4D8               	btfsc	status,2,c
  8307  000B1C  D7B3               	goto	l525
  8308  000B1E  0A01               	xorlw	1	; case 1
  8309  000B20  B4D8               	btfsc	status,2,c
  8310  000B22  D7BC               	goto	l528
  8311  000B24  0A03               	xorlw	3	; case 2
  8312  000B26  B4D8               	btfsc	status,2,c
  8313  000B28  D7C5               	goto	l529
  8314  000B2A  0A01               	xorlw	1	; case 3
  8315  000B2C  B4D8               	btfsc	status,2,c
  8316  000B2E  D7CE               	goto	l530
  8317  000B30  0A07               	xorlw	7	; case 4
  8318  000B32  B4D8               	btfsc	status,2,c
  8319  000B34  D7D7               	goto	l531
  8320  000B36  0A01               	xorlw	1	; case 5
  8321  000B38  B4D8               	btfsc	status,2,c
  8322  000B3A  D7E0               	goto	l532
  8323  000B3C  D7A3               	goto	l525
  8324  000B3E                     l527:
  8325                           
  8326                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8327                           
  8328                           ; BSR set to: 0
  8329  000B3E  0E73               	movlw	low STR_114
  8330  000B40  0100               	movlb	0	; () banked
  8331  000B42  6F72               	movwf	oled_putString@string& (0+255),b
  8332  000B44  0E7C               	movlw	high STR_114
  8333  000B46  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8334  000B48  0E00               	movlw	0
  8335  000B4A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8336  000B4C  0E03               	movlw	3
  8337  000B4E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8338  000B50  ECA1  F026         	call	_oled_putString	;wreg free
  8339                           
  8340                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8341  000B54  0E0D               	movlw	13
  8342  000B56  0100               	movlb	0	; () banked
  8343  000B58  6FF3               	movwf	_runningState& (0+255),b
  8344                           
  8345                           ;MOTEapp.c: 804: }
  8346  000B5A  0012               	return	
  8347  000B5C                     l523:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;MOTEapp.c: 805: else if (selectButton)
  8351                           
  8352                           ; BSR set to: 0
  8353  000B5C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8354  000B5E  B4D8               	btfsc	status,2,c
  8355  000B60  0012               	return	
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;MOTEapp.c: 806: {
  8359                           ;MOTEapp.c: 807: if (menuTimeout)
  8360  000B62  51FB               	movf	_menuTimeout& (0+255),w,b
  8361  000B64  B4D8               	btfsc	status,2,c
  8362  000B66  D00D               	goto	l535
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;MOTEapp.c: 808: {
  8366                           ;MOTEapp.c: 809: menuTimeout = 0;
  8367  000B68  0E00               	movlw	0
  8368  000B6A  6FFB               	movwf	_menuTimeout& (0+255),b
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8372  000B6C  0EE2               	movlw	low STR_113
  8373  000B6E  6F72               	movwf	oled_putString@string& (0+255),b
  8374  000B70  0E7C               	movlw	high STR_113
  8375  000B72  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8376  000B74  0E00               	movlw	0
  8377  000B76  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8378  000B78  0E02               	movlw	2
  8379  000B7A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8380  000B7C  ECA1  F026         	call	_oled_putString	;wreg free
  8381                           
  8382                           ;MOTEapp.c: 811: }
  8383  000B80  0012               	return	
  8384  000B82                     l535:
  8385                           
  8386                           ;MOTEapp.c: 812: else
  8387                           ;MOTEapp.c: 813: {
  8388                           ;MOTEapp.c: 814: menuTimeout = 1;
  8389  000B82  0E01               	movlw	1
  8390  000B84  0100               	movlb	0	; () banked
  8391  000B86  6FFB               	movwf	_menuTimeout& (0+255),b
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8395  000B88  0ED3               	movlw	low STR_112
  8396  000B8A  6F72               	movwf	oled_putString@string& (0+255),b
  8397  000B8C  0E7C               	movlw	high STR_112
  8398  000B8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8399  000B90  0E00               	movlw	0
  8400  000B92  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8401  000B94  0E02               	movlw	2
  8402  000B96  6F75               	movwf	oled_putString@start_page& (0+255),b
  8403  000B98  ECA1  F026         	call	_oled_putString	;wreg free
  8404                           
  8405                           ;MOTEapp.c: 816: }
  8406                           ;MOTEapp.c: 817: }
  8407                           ;MOTEapp.c: 818: break;
  8408  000B9C  0012               	return	
  8409  000B9E                     
  8410                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8411  000B9E  0100               	movlb	0	; () banked
  8412  000BA0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8413  000BA2  A4D8               	btfss	status,2,c
  8414  000BA4  D003               	goto	u9700
  8415                           
  8416                           ; BSR set to: 0
  8417  000BA6  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8418  000BA8  B4D8               	btfsc	status,2,c
  8419  000BAA  0012               	return	
  8420  000BAC                     u9700:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;MOTEapp.c: 822: {
  8424                           ;MOTEapp.c: 823: oled_clear();
  8425                           
  8426                           ; BSR set to: 0
  8427  000BAC  EC1A  F02D         	call	_oled_clear	;wreg free
  8428                           
  8429                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8430  000BB0  0E63               	movlw	low STR_102
  8431  000BB2  0100               	movlb	0	; () banked
  8432  000BB4  6F72               	movwf	oled_putString@string& (0+255),b
  8433  000BB6  0E7C               	movlw	high STR_102
  8434  000BB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8435  000BBA  0E00               	movlw	0
  8436  000BBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8437  000BBE  0E00               	movlw	0
  8438  000BC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  8439  000BC2  ECA1  F026         	call	_oled_putString	;wreg free
  8440                           
  8441                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8442  000BC6  0E53               	movlw	low STR_103
  8443  000BC8  0100               	movlb	0	; () banked
  8444  000BCA  6F72               	movwf	oled_putString@string& (0+255),b
  8445  000BCC  0E7C               	movlw	high STR_103
  8446  000BCE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8447  000BD0  0E00               	movlw	0
  8448  000BD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8449  000BD4  0E01               	movlw	1
  8450  000BD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8451  000BD8  ECA1  F026         	call	_oled_putString	;wreg free
  8452                           
  8453                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8454  000BDC  0E83               	movlw	low STR_77
  8455  000BDE  0100               	movlb	0	; () banked
  8456  000BE0  6F72               	movwf	oled_putString@string& (0+255),b
  8457  000BE2  0E7C               	movlw	high STR_77
  8458  000BE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8459  000BE6  0E00               	movlw	0
  8460  000BE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8461  000BEA  0E03               	movlw	3
  8462  000BEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8463  000BEE  ECA1  F026         	call	_oled_putString	;wreg free
  8464                           
  8465                           ;MOTEapp.c: 827: runningState = runningSensor;
  8466  000BF2  0E01               	movlw	1
  8467  000BF4  0100               	movlb	0	; () banked
  8468  000BF6  6FF3               	movwf	_runningState& (0+255),b
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;MOTEapp.c: 828: }
  8472                           ;MOTEapp.c: 829: break;
  8473  000BF8  0012               	return	
  8474  000BFA                     
  8475                           ; BSR set to: 0
  8476                           ;MOTEapp.c: 831: if (changeStates)
  8477                           
  8478                           ; BSR set to: 0
  8479  000BFA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8480  000BFC  B4D8               	btfsc	status,2,c
  8481  000BFE  D092               	goto	l546
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;MOTEapp.c: 832: {
  8485                           ;MOTEapp.c: 833: oled_clear();
  8486  000C00  EC1A  F02D         	call	_oled_clear	;wreg free
  8487                           
  8488                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8489  000C04  0EED               	movlw	low STR_135
  8490  000C06  0100               	movlb	0	; () banked
  8491  000C08  6F72               	movwf	oled_putString@string& (0+255),b
  8492  000C0A  0E7B               	movlw	high STR_135
  8493  000C0C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8494  000C0E  0E00               	movlw	0
  8495  000C10  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8496  000C12  0E00               	movlw	0
  8497  000C14  6F75               	movwf	oled_putString@start_page& (0+255),b
  8498  000C16  ECA1  F026         	call	_oled_putString	;wreg free
  8499                           
  8500                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8501  000C1A  0E58               	movlw	low STR_136
  8502  000C1C  0100               	movlb	0	; () banked
  8503  000C1E  6F72               	movwf	oled_putString@string& (0+255),b
  8504  000C20  0E7E               	movlw	high STR_136
  8505  000C22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8506  000C24  0E00               	movlw	0
  8507  000C26  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8508  000C28  0E02               	movlw	2
  8509  000C2A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8510  000C2C  ECA1  F026         	call	_oled_putString	;wreg free
  8511                           
  8512                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8513  000C30  0E73               	movlw	low STR_114
  8514  000C32  0100               	movlb	0	; () banked
  8515  000C34  6F72               	movwf	oled_putString@string& (0+255),b
  8516  000C36  0E7C               	movlw	high STR_114
  8517  000C38  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8518  000C3A  0E00               	movlw	0
  8519  000C3C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8520  000C3E  0E03               	movlw	3
  8521  000C40  6F75               	movwf	oled_putString@start_page& (0+255),b
  8522  000C42  ECA1  F026         	call	_oled_putString	;wreg free
  8523                           
  8524                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  8525  000C46  0E03               	movlw	3
  8526  000C48  0100               	movlb	0	; () banked
  8527  000C4A  6FF3               	movwf	_runningState& (0+255),b
  8528                           
  8529                           ;MOTEapp.c: 840: switch (dataRateValue)
  8530  000C4C  D053               	goto	l543
  8531  000C4E                     
  8532                           ; BSR set to: 0
  8533                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  8534                           
  8535                           ; BSR set to: 0
  8536                           
  8537                           ;MOTEapp.c: 843: case 0:
  8538                           
  8539                           ; BSR set to: 0
  8540  000C4E  0EC7               	movlw	low STR_138
  8541  000C50  6F72               	movwf	oled_putString@string& (0+255),b
  8542  000C52  0E7F               	movlw	high STR_138
  8543  000C54  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8544  000C56  0E0A               	movlw	10
  8545  000C58  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8546  000C5A  0E02               	movlw	2
  8547  000C5C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8548  000C5E  ECA1  F026         	call	_oled_putString	;wreg free
  8549                           
  8550                           ;MOTEapp.c: 845: break;
  8551  000C62  D060               	goto	l546
  8552  000C64                     
  8553                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  8554  000C64  0ECB               	movlw	low STR_139
  8555  000C66  0100               	movlb	0	; () banked
  8556  000C68  6F72               	movwf	oled_putString@string& (0+255),b
  8557  000C6A  0E7F               	movlw	high STR_139
  8558  000C6C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8559  000C6E  0E0A               	movlw	10
  8560  000C70  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8561  000C72  0E02               	movlw	2
  8562  000C74  6F75               	movwf	oled_putString@start_page& (0+255),b
  8563  000C76  ECA1  F026         	call	_oled_putString	;wreg free
  8564                           
  8565                           ;MOTEapp.c: 848: break;
  8566  000C7A  D054               	goto	l546
  8567  000C7C                     
  8568                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  8569  000C7C  0ECF               	movlw	low STR_140
  8570  000C7E  0100               	movlb	0	; () banked
  8571  000C80  6F72               	movwf	oled_putString@string& (0+255),b
  8572  000C82  0E7F               	movlw	high STR_140
  8573  000C84  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8574  000C86  0E0A               	movlw	10
  8575  000C88  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8576  000C8A  0E02               	movlw	2
  8577  000C8C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8578  000C8E  ECA1  F026         	call	_oled_putString	;wreg free
  8579                           
  8580                           ;MOTEapp.c: 851: break;
  8581  000C92  D048               	goto	l546
  8582  000C94                     
  8583                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  8584  000C94  0ED3               	movlw	low STR_141
  8585  000C96  0100               	movlb	0	; () banked
  8586  000C98  6F72               	movwf	oled_putString@string& (0+255),b
  8587  000C9A  0E7F               	movlw	high STR_141
  8588  000C9C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8589  000C9E  0E0A               	movlw	10
  8590  000CA0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8591  000CA2  0E02               	movlw	2
  8592  000CA4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8593  000CA6  ECA1  F026         	call	_oled_putString	;wreg free
  8594                           
  8595                           ;MOTEapp.c: 854: break;
  8596  000CAA  D03C               	goto	l546
  8597  000CAC                     
  8598                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  8599  000CAC  0ED7               	movlw	low STR_142
  8600  000CAE  0100               	movlb	0	; () banked
  8601  000CB0  6F72               	movwf	oled_putString@string& (0+255),b
  8602  000CB2  0E7F               	movlw	high STR_142
  8603  000CB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8604  000CB6  0E0A               	movlw	10
  8605  000CB8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8606  000CBA  0E02               	movlw	2
  8607  000CBC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8608  000CBE  ECA1  F026         	call	_oled_putString	;wreg free
  8609                           
  8610                           ;MOTEapp.c: 857: break;
  8611  000CC2  D030               	goto	l546
  8612  000CC4                     
  8613                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  8614  000CC4  0EDB               	movlw	low STR_143
  8615  000CC6  0100               	movlb	0	; () banked
  8616  000CC8  6F72               	movwf	oled_putString@string& (0+255),b
  8617  000CCA  0E7F               	movlw	high STR_143
  8618  000CCC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8619  000CCE  0E0A               	movlw	10
  8620  000CD0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8621  000CD2  0E02               	movlw	2
  8622  000CD4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8623  000CD6  ECA1  F026         	call	_oled_putString	;wreg free
  8624                           
  8625                           ;MOTEapp.c: 860: break;
  8626  000CDA  D024               	goto	l546
  8627  000CDC                     
  8628                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  8629  000CDC  0EF3               	movlw	low STR_144
  8630  000CDE  0100               	movlb	0	; () banked
  8631  000CE0  6F72               	movwf	oled_putString@string& (0+255),b
  8632  000CE2  0E7F               	movlw	high STR_144
  8633  000CE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8634  000CE6  0E0A               	movlw	10
  8635  000CE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8636  000CEA  0E02               	movlw	2
  8637  000CEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8638  000CEE  ECA1  F026         	call	_oled_putString	;wreg free
  8639                           
  8640                           ;MOTEapp.c: 864: }
  8641                           
  8642                           ;MOTEapp.c: 863: break;
  8643  000CF2  D018               	goto	l546
  8644  000CF4                     l543:
  8645  000CF4  0100               	movlb	0	; () banked
  8646  000CF6  51FC               	movf	_dataRateValue& (0+255),w,b
  8647                           
  8648                           ; Switch size 1, requested type "space"
  8649                           ; Number of cases is 7, Range of values is 0 to 6
  8650                           ; switch strategies available:
  8651                           ; Name         Instructions Cycles
  8652                           ; simple_byte           22    12 (average)
  8653                           ;	Chosen strategy is simple_byte
  8654  000CF8  0A00               	xorlw	0	; case 0
  8655  000CFA  B4D8               	btfsc	status,2,c
  8656  000CFC  D7A8               	goto	l544
  8657  000CFE  0A01               	xorlw	1	; case 1
  8658  000D00  B4D8               	btfsc	status,2,c
  8659  000D02  D7B0               	goto	l547
  8660  000D04  0A03               	xorlw	3	; case 2
  8661  000D06  B4D8               	btfsc	status,2,c
  8662  000D08  D7B9               	goto	l548
  8663  000D0A  0A01               	xorlw	1	; case 3
  8664  000D0C  B4D8               	btfsc	status,2,c
  8665  000D0E  D7C2               	goto	l549
  8666  000D10  0A07               	xorlw	7	; case 4
  8667  000D12  B4D8               	btfsc	status,2,c
  8668  000D14  D7CB               	goto	l550
  8669  000D16  0A01               	xorlw	1	; case 5
  8670  000D18  B4D8               	btfsc	status,2,c
  8671  000D1A  D7D4               	goto	l551
  8672  000D1C  0A03               	xorlw	3	; case 6
  8673  000D1E  B4D8               	btfsc	status,2,c
  8674  000D20  D7DD               	goto	l552
  8675  000D22  D795               	goto	l544
  8676  000D24                     l546:
  8677                           
  8678                           ;MOTEapp.c: 865: }
  8679                           ;MOTEapp.c: 866: if (selectButton)
  8680                           
  8681                           ; BSR set to: 0
  8682                           
  8683                           ; BSR set to: 0
  8684  000D24  0100               	movlb	0	; () banked
  8685  000D26  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8686  000D28  B4D8               	btfsc	status,2,c
  8687  000D2A  0012               	return	
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;MOTEapp.c: 867: {
  8691                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  8692  000D2C  0E05               	movlw	5
  8693  000D2E  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8694  000D30  D002               	goto	l554
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;MOTEapp.c: 869: {
  8698                           ;MOTEapp.c: 870: periodicUpValue++;
  8699  000D32  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8700                           
  8701                           ;MOTEapp.c: 871: } else {
  8702  000D34  D054               	goto	l556
  8703  000D36                     l554:
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;MOTEapp.c: 872: periodicUpValue = 0;
  8707                           
  8708                           ; BSR set to: 0
  8709  000D36  0E00               	movlw	0
  8710  000D38  6FFE               	movwf	_periodicUpValue& (0+255),b
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;MOTEapp.c: 873: }
  8714                           ;MOTEapp.c: 875: switch (periodicUpValue)
  8715  000D3A  D051               	goto	l556
  8716  000D3C                     
  8717                           ; BSR set to: 0
  8718                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  8719                           
  8720                           ; BSR set to: 0
  8721                           
  8722                           ;MOTEapp.c: 878: case 0:
  8723                           
  8724                           ; BSR set to: 0
  8725  000D3C  0E09               	movlw	9
  8726  000D3E  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  8730  000D40  0EDB               	movlw	low STR_143
  8731  000D42  6F72               	movwf	oled_putString@string& (0+255),b
  8732  000D44  0E7F               	movlw	high STR_143
  8733  000D46  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8734  000D48  0E07               	movlw	7
  8735  000D4A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8736  000D4C  0E02               	movlw	2
  8737  000D4E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8738  000D50  ECA1  F026         	call	_oled_putString	;wreg free
  8739                           
  8740                           ;MOTEapp.c: 881: break;
  8741  000D54  0012               	return	
  8742  000D56                     
  8743                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  8744  000D56  0E12               	movlw	18
  8745  000D58  0100               	movlb	0	; () banked
  8746  000D5A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  8750  000D5C  0EDF               	movlw	low STR_146
  8751  000D5E  6F72               	movwf	oled_putString@string& (0+255),b
  8752  000D60  0E7F               	movlw	high STR_146
  8753  000D62  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8754  000D64  0E07               	movlw	7
  8755  000D66  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8756  000D68  0E02               	movlw	2
  8757  000D6A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8758  000D6C  ECA1  F026         	call	_oled_putString	;wreg free
  8759                           
  8760                           ;MOTEapp.c: 885: break;
  8761  000D70  0012               	return	
  8762  000D72                     
  8763                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  8764  000D72  0E1B               	movlw	27
  8765  000D74  0100               	movlb	0	; () banked
  8766  000D76  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  8770  000D78  0EEB               	movlw	low STR_147
  8771  000D7A  6F72               	movwf	oled_putString@string& (0+255),b
  8772  000D7C  0E7F               	movlw	high STR_147
  8773  000D7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8774  000D80  0E07               	movlw	7
  8775  000D82  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8776  000D84  0E02               	movlw	2
  8777  000D86  6F75               	movwf	oled_putString@start_page& (0+255),b
  8778  000D88  ECA1  F026         	call	_oled_putString	;wreg free
  8779                           
  8780                           ;MOTEapp.c: 889: break;
  8781  000D8C  0012               	return	
  8782  000D8E                     
  8783                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  8784  000D8E  0E36               	movlw	54
  8785  000D90  0100               	movlb	0	; () banked
  8786  000D92  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  8790  000D94  0EE3               	movlw	low STR_148
  8791  000D96  6F72               	movwf	oled_putString@string& (0+255),b
  8792  000D98  0E7F               	movlw	high STR_148
  8793  000D9A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8794  000D9C  0E07               	movlw	7
  8795  000D9E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8796  000DA0  0E02               	movlw	2
  8797  000DA2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8798  000DA4  ECA1  F026         	call	_oled_putString	;wreg free
  8799                           
  8800                           ;MOTEapp.c: 893: break;
  8801  000DA8  0012               	return	
  8802  000DAA                     
  8803                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  8804  000DAA  0E6C               	movlw	108
  8805  000DAC  0100               	movlb	0	; () banked
  8806  000DAE  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  8810  000DB0  0EE7               	movlw	low STR_149
  8811  000DB2  6F72               	movwf	oled_putString@string& (0+255),b
  8812  000DB4  0E7F               	movlw	high STR_149
  8813  000DB6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8814  000DB8  0E07               	movlw	7
  8815  000DBA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8816  000DBC  0E02               	movlw	2
  8817  000DBE  6F75               	movwf	oled_putString@start_page& (0+255),b
  8818  000DC0  ECA1  F026         	call	_oled_putString	;wreg free
  8819                           
  8820                           ;MOTEapp.c: 897: break;
  8821  000DC4  0012               	return	
  8822  000DC6                     l564:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  8826  000DC6  69FD               	setf	_periodicTimerValue& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  8830  000DC8  0EEF               	movlw	low STR_128
  8831  000DCA  6F72               	movwf	oled_putString@string& (0+255),b
  8832  000DCC  0E7F               	movlw	high STR_128
  8833  000DCE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8834  000DD0  0E07               	movlw	7
  8835  000DD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8836  000DD4  0E02               	movlw	2
  8837  000DD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8838  000DD8  ECA1  F026         	call	_oled_putString	;wreg free
  8839                           
  8840                           ;MOTEapp.c: 902: }
  8841                           
  8842                           ;MOTEapp.c: 901: break;
  8843  000DDC  0012               	return	
  8844  000DDE                     l556:
  8845  000DDE  0100               	movlb	0	; () banked
  8846  000DE0  51FE               	movf	_periodicUpValue& (0+255),w,b
  8847                           
  8848                           ; Switch size 1, requested type "space"
  8849                           ; Number of cases is 6, Range of values is 0 to 5
  8850                           ; switch strategies available:
  8851                           ; Name         Instructions Cycles
  8852                           ; simple_byte           19    10 (average)
  8853                           ;	Chosen strategy is simple_byte
  8854  000DE2  0A00               	xorlw	0	; case 0
  8855  000DE4  B4D8               	btfsc	status,2,c
  8856  000DE6  D7AA               	goto	l557
  8857  000DE8  0A01               	xorlw	1	; case 1
  8858  000DEA  B4D8               	btfsc	status,2,c
  8859  000DEC  D7B4               	goto	l560
  8860  000DEE  0A03               	xorlw	3	; case 2
  8861  000DF0  B4D8               	btfsc	status,2,c
  8862  000DF2  D7BF               	goto	l561
  8863  000DF4  0A01               	xorlw	1	; case 3
  8864  000DF6  B4D8               	btfsc	status,2,c
  8865  000DF8  D7CA               	goto	l562
  8866  000DFA  0A07               	xorlw	7	; case 4
  8867  000DFC  B4D8               	btfsc	status,2,c
  8868  000DFE  D7D5               	goto	l563
  8869  000E00  0A01               	xorlw	1	; case 5
  8870  000E02  B4D8               	btfsc	status,2,c
  8871  000E04  D7E0               	goto	l564
  8872  000E06  D79A               	goto	l557
  8873  000E08                     
  8874                           ; BSR set to: 0
  8875                           ;MOTEapp.c: 906: if (changeStates)
  8876                           
  8877                           ; BSR set to: 0
  8878  000E08  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8879  000E0A  B4D8               	btfsc	status,2,c
  8880  000E0C  D01E               	goto	l566
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;MOTEapp.c: 907: {
  8884                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  8885  000E0E  51FC               	movf	_dataRateValue& (0+255),w,b
  8886  000E10  EC7C  F011         	call	_MOTEapp_SetDataRateSetting
  8887                           
  8888                           ;MOTEapp.c: 911: oled_clear();
  8889  000E14  EC1A  F02D         	call	_oled_clear	;wreg free
  8890                           
  8891                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  8892  000E18  0ECB               	movlw	low STR_151
  8893  000E1A  0100               	movlb	0	; () banked
  8894  000E1C  6F72               	movwf	oled_putString@string& (0+255),b
  8895  000E1E  0E7B               	movlw	high STR_151
  8896  000E20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8897  000E22  0E00               	movlw	0
  8898  000E24  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8899  000E26  0E00               	movlw	0
  8900  000E28  6F75               	movwf	oled_putString@start_page& (0+255),b
  8901  000E2A  ECA1  F026         	call	_oled_putString	;wreg free
  8902                           
  8903                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  8904  000E2E  0E93               	movlw	low STR_152
  8905  000E30  0100               	movlb	0	; () banked
  8906  000E32  6F72               	movwf	oled_putString@string& (0+255),b
  8907  000E34  0E7C               	movlw	high STR_152
  8908  000E36  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8909  000E38  0E00               	movlw	0
  8910  000E3A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8911  000E3C  0E03               	movlw	3
  8912  000E3E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8913  000E40  ECA1  F026         	call	_oled_putString	;wreg free
  8914                           
  8915                           ;MOTEapp.c: 914: runningState = runningSleep;
  8916  000E44  0E0F               	movlw	15
  8917  000E46  0100               	movlb	0	; () banked
  8918  000E48  6FF3               	movwf	_runningState& (0+255),b
  8919  000E4A                     l566:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;MOTEapp.c: 915: }
  8923                           ;MOTEapp.c: 916: if (selectButton)
  8924                           
  8925                           ; BSR set to: 0
  8926  000E4A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8927  000E4C  B4D8               	btfsc	status,2,c
  8928  000E4E  0012               	return	
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;MOTEapp.c: 917: {
  8932                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  8933  000E50  0E06               	movlw	6
  8934  000E52  61FC               	cpfslt	_dataRateValue& (0+255),b
  8935  000E54  D00A               	goto	l568
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;MOTEapp.c: 919: {
  8939                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  8940  000E56  05EE               	decf	_rnModule& (0+255),w,b
  8941  000E58  A4D8               	btfss	status,2,c
  8942  000E5A  D005               	goto	l569
  8943                           
  8944                           ; BSR set to: 0
  8945  000E5C  0E03               	movlw	3
  8946  000E5E  65FC               	cpfsgt	_dataRateValue& (0+255),b
  8947  000E60  D002               	goto	l569
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;MOTEapp.c: 921: dataRateValue = 6;
  8951  000E62  0E06               	movlw	6
  8952  000E64  D003               	goto	L5
  8953  000E66                     l569:
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;MOTEapp.c: 922: else
  8957                           ;MOTEapp.c: 923: dataRateValue++;
  8958                           
  8959                           ; BSR set to: 0
  8960  000E66  2BFC               	incf	_dataRateValue& (0+255),f,b
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;MOTEapp.c: 924: }
  8964  000E68  D056               	goto	l572
  8965  000E6A                     l568:
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;MOTEapp.c: 925: else {
  8969                           ;MOTEapp.c: 926: dataRateValue = 0;
  8970                           
  8971                           ; BSR set to: 0
  8972  000E6A  0E00               	movlw	0
  8973  000E6C                     L5:
  8974  000E6C  6FFC               	movwf	_dataRateValue& (0+255),b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;MOTEapp.c: 927: }
  8978                           ;MOTEapp.c: 929: switch (dataRateValue)
  8979  000E6E  D053               	goto	l572
  8980  000E70                     
  8981                           ; BSR set to: 0
  8982                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  8983                           
  8984                           ; BSR set to: 0
  8985                           
  8986                           ;MOTEapp.c: 932: case 0:
  8987                           
  8988                           ; BSR set to: 0
  8989  000E70  0EC7               	movlw	low STR_138
  8990  000E72  6F72               	movwf	oled_putString@string& (0+255),b
  8991  000E74  0E7F               	movlw	high STR_138
  8992  000E76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8993  000E78  0E0A               	movlw	10
  8994  000E7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8995  000E7C  0E02               	movlw	2
  8996  000E7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8997  000E80  ECA1  F026         	call	_oled_putString	;wreg free
  8998                           
  8999                           ;MOTEapp.c: 934: break;
  9000  000E84  0012               	return	
  9001  000E86                     
  9002                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  9003  000E86  0ECB               	movlw	low STR_139
  9004  000E88  0100               	movlb	0	; () banked
  9005  000E8A  6F72               	movwf	oled_putString@string& (0+255),b
  9006  000E8C  0E7F               	movlw	high STR_139
  9007  000E8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9008  000E90  0E0A               	movlw	10
  9009  000E92  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9010  000E94  0E02               	movlw	2
  9011  000E96  6F75               	movwf	oled_putString@start_page& (0+255),b
  9012  000E98  ECA1  F026         	call	_oled_putString	;wreg free
  9013                           
  9014                           ;MOTEapp.c: 937: break;
  9015  000E9C  0012               	return	
  9016  000E9E                     
  9017                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  9018  000E9E  0ECF               	movlw	low STR_140
  9019  000EA0  0100               	movlb	0	; () banked
  9020  000EA2  6F72               	movwf	oled_putString@string& (0+255),b
  9021  000EA4  0E7F               	movlw	high STR_140
  9022  000EA6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9023  000EA8  0E0A               	movlw	10
  9024  000EAA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9025  000EAC  0E02               	movlw	2
  9026  000EAE  6F75               	movwf	oled_putString@start_page& (0+255),b
  9027  000EB0  ECA1  F026         	call	_oled_putString	;wreg free
  9028                           
  9029                           ;MOTEapp.c: 940: break;
  9030  000EB4  0012               	return	
  9031  000EB6                     
  9032                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  9033  000EB6  0ED3               	movlw	low STR_141
  9034  000EB8  0100               	movlb	0	; () banked
  9035  000EBA  6F72               	movwf	oled_putString@string& (0+255),b
  9036  000EBC  0E7F               	movlw	high STR_141
  9037  000EBE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9038  000EC0  0E0A               	movlw	10
  9039  000EC2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9040  000EC4  0E02               	movlw	2
  9041  000EC6  6F75               	movwf	oled_putString@start_page& (0+255),b
  9042  000EC8  ECA1  F026         	call	_oled_putString	;wreg free
  9043                           
  9044                           ;MOTEapp.c: 943: break;
  9045  000ECC  0012               	return	
  9046  000ECE                     
  9047                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  9048  000ECE  0ED7               	movlw	low STR_142
  9049  000ED0  0100               	movlb	0	; () banked
  9050  000ED2  6F72               	movwf	oled_putString@string& (0+255),b
  9051  000ED4  0E7F               	movlw	high STR_142
  9052  000ED6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9053  000ED8  0E0A               	movlw	10
  9054  000EDA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9055  000EDC  0E02               	movlw	2
  9056  000EDE  6F75               	movwf	oled_putString@start_page& (0+255),b
  9057  000EE0  ECA1  F026         	call	_oled_putString	;wreg free
  9058                           
  9059                           ;MOTEapp.c: 946: break;
  9060  000EE4  0012               	return	
  9061  000EE6                     
  9062                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  9063  000EE6  0EDB               	movlw	low STR_143
  9064  000EE8  0100               	movlb	0	; () banked
  9065  000EEA  6F72               	movwf	oled_putString@string& (0+255),b
  9066  000EEC  0E7F               	movlw	high STR_143
  9067  000EEE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9068  000EF0  0E0A               	movlw	10
  9069  000EF2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9070  000EF4  0E02               	movlw	2
  9071  000EF6  6F75               	movwf	oled_putString@start_page& (0+255),b
  9072  000EF8  ECA1  F026         	call	_oled_putString	;wreg free
  9073                           
  9074                           ;MOTEapp.c: 949: break;
  9075  000EFC  0012               	return	
  9076  000EFE                     
  9077                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  9078  000EFE  0EF3               	movlw	low STR_144
  9079  000F00  0100               	movlb	0	; () banked
  9080  000F02  6F72               	movwf	oled_putString@string& (0+255),b
  9081  000F04  0E7F               	movlw	high STR_144
  9082  000F06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9083  000F08  0E0A               	movlw	10
  9084  000F0A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9085  000F0C  0E02               	movlw	2
  9086  000F0E  6F75               	movwf	oled_putString@start_page& (0+255),b
  9087  000F10  ECA1  F026         	call	_oled_putString	;wreg free
  9088                           
  9089                           ;MOTEapp.c: 953: }
  9090                           
  9091                           ;MOTEapp.c: 952: break;
  9092  000F14  0012               	return	
  9093  000F16                     l572:
  9094  000F16  0100               	movlb	0	; () banked
  9095  000F18  51FC               	movf	_dataRateValue& (0+255),w,b
  9096                           
  9097                           ; Switch size 1, requested type "space"
  9098                           ; Number of cases is 7, Range of values is 0 to 6
  9099                           ; switch strategies available:
  9100                           ; Name         Instructions Cycles
  9101                           ; simple_byte           22    12 (average)
  9102                           ;	Chosen strategy is simple_byte
  9103  000F1A  0A00               	xorlw	0	; case 0
  9104  000F1C  B4D8               	btfsc	status,2,c
  9105  000F1E  D7A8               	goto	l573
  9106  000F20  0A01               	xorlw	1	; case 1
  9107  000F22  B4D8               	btfsc	status,2,c
  9108  000F24  D7B0               	goto	l576
  9109  000F26  0A03               	xorlw	3	; case 2
  9110  000F28  B4D8               	btfsc	status,2,c
  9111  000F2A  D7B9               	goto	l577
  9112  000F2C  0A01               	xorlw	1	; case 3
  9113  000F2E  B4D8               	btfsc	status,2,c
  9114  000F30  D7C2               	goto	l578
  9115  000F32  0A07               	xorlw	7	; case 4
  9116  000F34  B4D8               	btfsc	status,2,c
  9117  000F36  D7CB               	goto	l579
  9118  000F38  0A01               	xorlw	1	; case 5
  9119  000F3A  B4D8               	btfsc	status,2,c
  9120  000F3C  D7D4               	goto	l580
  9121  000F3E  0A03               	xorlw	3	; case 6
  9122  000F40  B4D8               	btfsc	status,2,c
  9123  000F42  D7DD               	goto	l581
  9124  000F44  D795               	goto	l573
  9125  000F46                     
  9126                           ; BSR set to: 0
  9127                           ;MOTEapp.c: 957: if (selectButton)
  9128                           
  9129                           ; BSR set to: 0
  9130  000F46  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9131  000F48  B4D8               	btfsc	status,2,c
  9132  000F4A  D00C               	goto	l585
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;MOTEapp.c: 958: {
  9136                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9137  000F4C  ECBC  F01B         	call	_moteApp_GoToSleep	;wreg free
  9138  000F50  0900               	iorlw	0
  9139  000F52  B4D8               	btfsc	status,2,c
  9140  000F54  D004               	goto	l584
  9141                           
  9142                           ;MOTEapp.c: 960: {
  9143                           ;MOTEapp.c: 961: changeStates = 1;
  9144  000F56  0E01               	movlw	1
  9145  000F58  0100               	movlb	0	; () banked
  9146  000F5A  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9147                           
  9148                           ;MOTEapp.c: 962: }
  9149  000F5C  D003               	goto	l585
  9150  000F5E                     l584:
  9151                           
  9152                           ;MOTEapp.c: 963: else
  9153                           ;MOTEapp.c: 964: {
  9154                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9155                           
  9156                           ; BSR set to: 0
  9157  000F5E  0E09               	movlw	9
  9158  000F60  0100               	movlb	0	; () banked
  9159  000F62  6FF0               	movwf	_secTicker& (0+255),b
  9160  000F64                     l585:
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;MOTEapp.c: 966: }
  9164                           ;MOTEapp.c: 967: }
  9165                           ;MOTEapp.c: 968: if (changeStates)
  9166                           
  9167                           ; BSR set to: 0
  9168  000F64  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9169  000F66  B4D8               	btfsc	status,2,c
  9170  000F68  0012               	return	
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;MOTEapp.c: 969: {
  9174                           ;MOTEapp.c: 970: oled_clear();
  9175  000F6A  EC1A  F02D         	call	_oled_clear	;wreg free
  9176                           
  9177                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9178  000F6E  0E21               	movlw	low STR_75
  9179  000F70  0100               	movlb	0	; () banked
  9180  000F72  6F72               	movwf	oled_putString@string& (0+255),b
  9181  000F74  0E7B               	movlw	high STR_75
  9182  000F76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9183  000F78  0E00               	movlw	0
  9184  000F7A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9185  000F7C  0E00               	movlw	0
  9186  000F7E  6F75               	movwf	oled_putString@start_page& (0+255),b
  9187  000F80  ECA1  F026         	call	_oled_putString	;wreg free
  9188                           
  9189                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9190  000F84  0E87               	movlw	low STR_76
  9191  000F86  0100               	movlb	0	; () banked
  9192  000F88  6F72               	movwf	oled_putString@string& (0+255),b
  9193  000F8A  0E7B               	movlw	high STR_76
  9194  000F8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9195  000F8E  0E00               	movlw	0
  9196  000F90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9197  000F92  0E01               	movlw	1
  9198  000F94  6F75               	movwf	oled_putString@start_page& (0+255),b
  9199  000F96  ECA1  F026         	call	_oled_putString	;wreg free
  9200                           
  9201                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9202  000F9A  0E83               	movlw	low STR_77
  9203  000F9C  0100               	movlb	0	; () banked
  9204  000F9E  6F72               	movwf	oled_putString@string& (0+255),b
  9205  000FA0  0E7C               	movlw	high STR_77
  9206  000FA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9207  000FA4  0E00               	movlw	0
  9208  000FA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9209  000FA8  0E03               	movlw	3
  9210  000FAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  9211  000FAC  ECA1  F026         	call	_oled_putString	;wreg free
  9212                           
  9213                           ;MOTEapp.c: 974: runningState = runningUplink;
  9214  000FB0  0E06               	movlw	6
  9215  000FB2  0100               	movlb	0	; () banked
  9216  000FB4  6FF3               	movwf	_runningState& (0+255),b
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;MOTEapp.c: 977: }
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;MOTEapp.c: 975: }
  9223                           ;MOTEapp.c: 976: break;
  9224  000FB6  0012               	return	
  9225  000FB8                     l466:
  9226                           
  9227                           ; BSR set to: 0
  9228                           
  9229                           ; BSR set to: 0
  9230  000FB8  51F3               	movf	_runningState& (0+255),w,b
  9231                           
  9232                           ; Switch size 1, requested type "space"
  9233                           ; Number of cases is 12, Range of values is 0 to 15
  9234                           ; switch strategies available:
  9235                           ; Name         Instructions Cycles
  9236                           ; simple_byte           37    19 (average)
  9237                           ;	Chosen strategy is simple_byte
  9238  000FBA  0A00               	xorlw	0	; case 0
  9239  000FBC  B4D8               	btfsc	status,2,c
  9240  000FBE  EF6A  F001         	goto	l472
  9241  000FC2  0A01               	xorlw	1	; case 1
  9242  000FC4  B4D8               	btfsc	status,2,c
  9243  000FC6  D4BC               	goto	l516
  9244  000FC8  0A03               	xorlw	3	; case 2
  9245  000FCA  B4D8               	btfsc	status,2,c
  9246  000FCC  D5E8               	goto	l537
  9247  000FCE  0A01               	xorlw	1	; case 3
  9248  000FD0  B4D8               	btfsc	status,2,c
  9249  000FD2  D71A               	goto	l565
  9250  000FD4  0A05               	xorlw	5	; case 6
  9251  000FD6  B4D8               	btfsc	status,2,c
  9252  000FD8  EF98  F001         	goto	l476
  9253  000FDC  0A01               	xorlw	1	; case 7
  9254  000FDE  B4D8               	btfsc	status,2,c
  9255  000FE0  EF5E  F002         	goto	l483
  9256  000FE4  0A0F               	xorlw	15	; case 8
  9257  000FE6  B4D8               	btfsc	status,2,c
  9258  000FE8  EFC9  F002         	goto	l489
  9259  000FEC  0A02               	xorlw	2	; case 10
  9260  000FEE  B4D8               	btfsc	status,2,c
  9261  000FF0  D404               	goto	l508
  9262  000FF2  0A01               	xorlw	1	; case 11
  9263  000FF4  B4D8               	btfsc	status,2,c
  9264  000FF6  D477               	goto	l512
  9265  000FF8  0A07               	xorlw	7	; case 12
  9266  000FFA  B4D8               	btfsc	status,2,c
  9267  000FFC  D511               	goto	l522
  9268  000FFE  0A01               	xorlw	1	; case 13
  9269  001000  B4D8               	btfsc	status,2,c
  9270  001002  D5FB               	goto	l541
  9271  001004  0A02               	xorlw	2	; case 15
  9272  001006  B4D8               	btfsc	status,2,c
  9273  001008  D79E               	goto	l582
  9274  00100A  EF69  F001         	goto	l467
  9275  00100E                     __end_of_moteRunningProcess:
  9276                           	opt stack 0
  9277                           tblptru	equ	0xFF8
  9278                           tblptrh	equ	0xFF7
  9279                           tblptrl	equ	0xFF6
  9280                           tablat	equ	0xFF5
  9281                           prodh	equ	0xFF4
  9282                           prodl	equ	0xFF3
  9283                           intcon	equ	0xFF2
  9284                           postinc0	equ	0xFEE
  9285                           wreg	equ	0xFE8
  9286                           indf1	equ	0xFE7
  9287                           postdec1	equ	0xFE5
  9288                           fsr1h	equ	0xFE2
  9289                           fsr1l	equ	0xFE1
  9290                           indf2	equ	0xFDF
  9291                           fsr2h	equ	0xFDA
  9292                           fsr2l	equ	0xFD9
  9293                           status	equ	0xFD8
  9294                           
  9295 ;; *************** function _sendDataCommand *****************
  9296 ;; Defined at:
  9297 ;;		line 1124 in file "../Includes/Board/MOTEapp.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9300 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9301 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9302 ;;		 -> dataBuffer(16), 
  9303 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9306 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9316 ;;      Params:         0       5       0       0       0       0       0       0       0
  9317 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9318 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9319 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9320 ;;Total ram usage:        8 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:   13
  9323 ;; This function calls:
  9324 ;;		_EUSART_Write
  9325 ;;		_EndLine
  9326 ;;		_hexToStr
  9327 ;; This function is called by:
  9328 ;;		_moteRunningProcess
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text11
  9333  003C44                     __ptext11:
  9334                           	opt stack 0
  9335  003C44                     _sendDataCommand:
  9336                           	opt stack 15
  9337                           
  9338                           ;MOTEapp.c: 1127: while (*string)
  9339                           
  9340                           ;incstack = 0
  9341  003C44  D00B               	goto	l642
  9342  003C46                     
  9343                           ;MOTEapp.c: 1128: {
  9344                           ;MOTEapp.c: 1129: EUSART_Write(*string++);
  9345  003C46  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9346  003C4A  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9347  003C4E                     	if	0	;tblptru may be non-zero
  9348  003C4E                     	endif
  9349  003C4E                     	if	0	;tblptru may be non-zero
  9350  003C4E                     	endif
  9351  003C4E  0008               	tblrd		*
  9352  003C50  50F5               	movf	tablat,w,c
  9353  003C52  EC50  F02A         	call	_EUSART_Write
  9354  003C56  0100               	movlb	0	; () banked
  9355  003C58  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9356  003C5A  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9357  003C5C                     l642:
  9358                           
  9359                           ; BSR set to: 0
  9360  003C5C  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9361  003C60  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9362  003C64                     	if	0	;tblptru may be non-zero
  9363  003C64                     	endif
  9364  003C64                     	if	0	;tblptru may be non-zero
  9365  003C64                     	endif
  9366  003C64  0008               	tblrd		*
  9367  003C66  50F5               	movf	tablat,w,c
  9368  003C68  0900               	iorlw	0
  9369  003C6A  A4D8               	btfss	status,2,c
  9370  003C6C  D7EC               	goto	l643
  9371                           
  9372                           ;MOTEapp.c: 1130: }
  9373                           ;MOTEapp.c: 1132: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9374  003C6E  0E00               	movlw	0
  9375  003C70  0100               	movlb	0	; () banked
  9376  003C72  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9377  003C74                     l9776:
  9378                           
  9379                           ; BSR set to: 0
  9380  003C74  0E02               	movlw	2
  9381  003C76  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9382  003C78  D001               	goto	l645
  9383  003C7A  D00E               	goto	u8330
  9384  003C7C                     l645:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;MOTEapp.c: 1133: {
  9388                           ;MOTEapp.c: 1134: EUSART_Write(appData[byteCount]);
  9389                           
  9390                           ; BSR set to: 0
  9391  003C7C  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9392  003C7E  0D01               	mullw	1
  9393  003C80  50F3               	movf	prodl,w,c
  9394  003C82  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9395  003C84  6ED9               	movwf	fsr2l,c
  9396  003C86  50F4               	movf	prodh,w,c
  9397  003C88  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9398  003C8A  6EDA               	movwf	fsr2h,c
  9399  003C8C  50DF               	movf	indf2,w,c
  9400  003C8E  EC50  F02A         	call	_EUSART_Write
  9401  003C92  0100               	movlb	0	; () banked
  9402  003C94  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9403  003C96  D7EE               	goto	l9776
  9404  003C98                     u8330:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;MOTEapp.c: 1135: }
  9408                           ;MOTEapp.c: 1137: EUSART_Write(appData[3]);
  9409                           
  9410                           ; BSR set to: 0
  9411  003C98  EE20 F003          	lfsr	2,3
  9412  003C9C  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9413  003C9E  26D9               	addwf	fsr2l,f,c
  9414  003CA0  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9415  003CA2  22DA               	addwfc	fsr2h,f,c
  9416  003CA4  50DF               	movf	indf2,w,c
  9417  003CA6  EC50  F02A         	call	_EUSART_Write
  9418                           
  9419                           ;MOTEapp.c: 1139: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9420  003CAA  0E04               	movlw	4
  9421  003CAC  0100               	movlb	0	; () banked
  9422  003CAE  6F68               	movwf	sendDataCommand@byteCount_1627& (0+255),b
  9423  003CB0  D021               	goto	l647
  9424  003CB2                     
  9425                           ; BSR set to: 0
  9426                           ;MOTEapp.c: 1140: {
  9427                           ;MOTEapp.c: 1141: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9428                           
  9429                           ; BSR set to: 0
  9430  003CB2  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9431  003CB4  0D01               	mullw	1
  9432  003CB6  50F3               	movf	prodl,w,c
  9433  003CB8  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9434  003CBA  6ED9               	movwf	fsr2l,c
  9435  003CBC  50F4               	movf	prodh,w,c
  9436  003CBE  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9437  003CC0  6EDA               	movwf	fsr2h,c
  9438  003CC2  50DF               	movf	indf2,w,c
  9439  003CC4  6F66               	movwf	??_sendDataCommand& (0+255),b
  9440  003CC6  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9441  003CC8  0B0F               	andlw	15
  9442  003CCA  ECF5  F02B         	call	_hexToStr
  9443  003CCE  EC50  F02A         	call	_EUSART_Write
  9444                           
  9445                           ;MOTEapp.c: 1142: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9446  003CD2  0100               	movlb	0	; () banked
  9447  003CD4  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9448  003CD6  0D01               	mullw	1
  9449  003CD8  50F3               	movf	prodl,w,c
  9450  003CDA  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9451  003CDC  6ED9               	movwf	fsr2l,c
  9452  003CDE  50F4               	movf	prodh,w,c
  9453  003CE0  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9454  003CE2  6EDA               	movwf	fsr2h,c
  9455  003CE4  50DF               	movf	indf2,w,c
  9456  003CE6  0B0F               	andlw	15
  9457  003CE8  ECF5  F02B         	call	_hexToStr
  9458  003CEC  EC50  F02A         	call	_EUSART_Write
  9459  003CF0  0100               	movlb	0	; () banked
  9460  003CF2  2B68               	incf	sendDataCommand@byteCount_1627& (0+255),f,b
  9461  003CF4                     l647:
  9462                           
  9463                           ; BSR set to: 0
  9464                           
  9465                           ; BSR set to: 0
  9466  003CF4  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9467  003CF6  5D68               	subwf	sendDataCommand@byteCount_1627& (0+255),w,b
  9468  003CF8  A0D8               	btfss	status,0,c
  9469  003CFA  D7DB               	goto	l648
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;MOTEapp.c: 1143: }
  9473                           ;MOTEapp.c: 1144: EndLine();
  9474                           
  9475                           ; BSR set to: 0
  9476  003CFC  ECE5  F02D         	call	_EndLine	;wreg free
  9477  003D00  0012               	return		;funcret
  9478  003D02                     __end_of_sendDataCommand:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           intcon	equ	0xFF2
  9487                           postinc0	equ	0xFEE
  9488                           wreg	equ	0xFE8
  9489                           indf1	equ	0xFE7
  9490                           postdec1	equ	0xFE5
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           fsr2h	equ	0xFDA
  9495                           fsr2l	equ	0xFD9
  9496                           status	equ	0xFD8
  9497                           
  9498 ;; *************** function _hexToStr *****************
  9499 ;; Defined at:
  9500 ;;		line 1156 in file "../Includes/Board/MOTEapp.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  character       1    wreg     unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  character       1    0[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      unsigned char 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0
  9515 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9517 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9518 ;;Total ram usage:        1 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:   11
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_sendDataCommand
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text12
  9529  0057EA                     __ptext12:
  9530                           	opt stack 0
  9531  0057EA                     _hexToStr:
  9532                           	opt stack 16
  9533                           
  9534                           ;incstack = 0
  9535                           ;hexToStr@character stored from wreg
  9536  0057EA  0100               	movlb	0	; () banked
  9537  0057EC  6F60               	movwf	hexToStr@character& (0+255),b
  9538                           
  9539                           ;MOTEapp.c: 1159: character = character & 0x0F;
  9540  0057EE  0100               	movlb	0	; () banked
  9541  0057F0  5160               	movf	hexToStr@character& (0+255),w,b
  9542  0057F2  0B0F               	andlw	15
  9543  0057F4  6F60               	movwf	hexToStr@character& (0+255),b
  9544                           
  9545                           ;MOTEapp.c: 1161: if (character < 0x0A)
  9546  0057F6  0E0A               	movlw	10
  9547  0057F8  6160               	cpfslt	hexToStr@character& (0+255),b
  9548  0057FA  D003               	goto	l658
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;MOTEapp.c: 1162: {
  9552                           ;MOTEapp.c: 1163: return character + '0';
  9553  0057FC  5160               	movf	hexToStr@character& (0+255),w,b
  9554  0057FE  0F30               	addlw	48
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;MOTEapp.c: 1164: }
  9558                           
  9559                           ; BSR set to: 0
  9560  005800  0012               	return	
  9561  005802                     l658:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;MOTEapp.c: 1165: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9565                           
  9566                           ; BSR set to: 0
  9567  005802  0E09               	movlw	9
  9568  005804  6560               	cpfsgt	hexToStr@character& (0+255),b
  9569  005806  D006               	goto	l661
  9570                           
  9571                           ; BSR set to: 0
  9572  005808  0E10               	movlw	16
  9573  00580A  6160               	cpfslt	hexToStr@character& (0+255),b
  9574  00580C  D003               	goto	l661
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;MOTEapp.c: 1166: {
  9578                           ;MOTEapp.c: 1167: return character + '0' + 7;
  9579  00580E  5160               	movf	hexToStr@character& (0+255),w,b
  9580  005810  0F37               	addlw	55
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;MOTEapp.c: 1168: }
  9584                           
  9585                           ; BSR set to: 0
  9586  005812  0012               	return	
  9587  005814                     l661:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;MOTEapp.c: 1169: else
  9591                           ;MOTEapp.c: 1170: {
  9592                           ;MOTEapp.c: 1171: return 0;
  9593                           
  9594                           ; BSR set to: 0
  9595  005814  0E00               	movlw	0
  9596                           
  9597                           ; BSR set to: 0
  9598                           
  9599                           ; BSR set to: 0
  9600  005816  0012               	return	
  9601  005818                     __end_of_hexToStr:
  9602                           	opt stack 0
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon	equ	0xFF2
  9610                           postinc0	equ	0xFEE
  9611                           wreg	equ	0xFE8
  9612                           indf1	equ	0xFE7
  9613                           postdec1	equ	0xFE5
  9614                           fsr1h	equ	0xFE2
  9615                           fsr1l	equ	0xFE1
  9616                           indf2	equ	0xFDF
  9617                           fsr2h	equ	0xFDA
  9618                           fsr2l	equ	0xFD9
  9619                           status	equ	0xFD8
  9620                           
  9621 ;; *************** function _oled_putint8 *****************
  9622 ;; Defined at:
  9623 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  number          1    wreg     unsigned char 
  9626 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9627 ;;  start_page      1   24[BANK0 ] unsigned char 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  number          1   32[BANK0 ] unsigned char 
  9630 ;;  numData         6   26[BANK0 ] struct .
  9631 ;;  negative        1   25[BANK0 ] unsigned char 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9641 ;;      Params:         0       2       0       0       0       0       0       0       0
  9642 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9644 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9645 ;;Total ram usage:       10 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; Hardware stack levels required when called:   15
  9648 ;; This function calls:
  9649 ;;		___awmod
  9650 ;;		___lbdiv
  9651 ;;		_oled_putString
  9652 ;; This function is called by:
  9653 ;;		_moteHandler
  9654 ;;		_moteRunningProcess
  9655 ;;		_moteApp_testSensors
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text13
  9660  004354                     __ptext13:
  9661                           	opt stack 0
  9662  004354                     _oled_putint8:
  9663                           	opt stack 13
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;incstack = 0
  9667                           ;oled_putint8@number stored from wreg
  9668  004354  0100               	movlb	0	; () banked
  9669  004356  6F80               	movwf	oled_putint8@number& (0+255),b
  9670                           
  9671                           ;SSD1306oLED.c: 280: display_data_t numData;
  9672                           ;SSD1306oLED.c: 281: bool negative = 0;
  9673  004358  0E00               	movlw	0
  9674  00435A  0100               	movlb	0	; () banked
  9675  00435C  6F79               	movwf	oled_putint8@negative& (0+255),b
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;SSD1306oLED.c: 283: if(number & 0x80)
  9679  00435E  AF80               	btfss	oled_putint8@number& (0+255),7,b
  9680  004360  D002               	goto	l1032
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;SSD1306oLED.c: 284: negative = 1;
  9684  004362  0E01               	movlw	1
  9685  004364  6F79               	movwf	oled_putint8@negative& (0+255),b
  9686  004366                     l1032:
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
  9690                           
  9691                           ; BSR set to: 0
  9692  004366  5180               	movf	oled_putint8@number& (0+255),w,b
  9693  004368  0B7F               	andlw	127
  9694  00436A  6F80               	movwf	oled_putint8@number& (0+255),b
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
  9698  00436C  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9699  004370  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9700  004372  0E00               	movlw	0
  9701  004374  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9702  004376  0E0A               	movlw	10
  9703  004378  6F62               	movwf	___awmod@divisor& (0+255),b
  9704  00437A  EC31  F026         	call	___awmod	;wreg free
  9705  00437E  0100               	movlb	0	; () banked
  9706  004380  5160               	movf	?___awmod& (0+255),w,b
  9707  004382  0F30               	addlw	48
  9708  004384  6F7C               	movwf	(oled_putint8@numData+2)& (0+255),b
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;SSD1306oLED.c: 288: number /= 10;
  9712  004386  0E0A               	movlw	10
  9713  004388  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9714  00438A  5180               	movf	oled_putint8@number& (0+255),w,b
  9715  00438C  EC31  F02A         	call	___lbdiv
  9716  004390  0100               	movlb	0	; () banked
  9717  004392  6F80               	movwf	oled_putint8@number& (0+255),b
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
  9721  004394  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9722  004398  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9723  00439A  0E00               	movlw	0
  9724  00439C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9725  00439E  0E0A               	movlw	10
  9726  0043A0  6F62               	movwf	___awmod@divisor& (0+255),b
  9727  0043A2  EC31  F026         	call	___awmod	;wreg free
  9728  0043A6  0100               	movlb	0	; () banked
  9729  0043A8  5160               	movf	?___awmod& (0+255),w,b
  9730  0043AA  0F30               	addlw	48
  9731  0043AC  6F7B               	movwf	(oled_putint8@numData+1)& (0+255),b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;SSD1306oLED.c: 290: number /= 10;
  9735  0043AE  0E0A               	movlw	10
  9736  0043B0  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9737  0043B2  5180               	movf	oled_putint8@number& (0+255),w,b
  9738  0043B4  EC31  F02A         	call	___lbdiv
  9739  0043B8  0100               	movlb	0	; () banked
  9740  0043BA  6F80               	movwf	oled_putint8@number& (0+255),b
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
  9744  0043BC  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9745  0043C0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9746  0043C2  0E00               	movlw	0
  9747  0043C4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9748  0043C6  0E0A               	movlw	10
  9749  0043C8  6F62               	movwf	___awmod@divisor& (0+255),b
  9750  0043CA  EC31  F026         	call	___awmod	;wreg free
  9751  0043CE  0100               	movlb	0	; () banked
  9752  0043D0  5160               	movf	?___awmod& (0+255),w,b
  9753  0043D2  0F30               	addlw	48
  9754  0043D4  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;SSD1306oLED.c: 292: if(negative)
  9758  0043D6  5179               	movf	oled_putint8@negative& (0+255),w,b
  9759  0043D8  B4D8               	btfsc	status,2,c
  9760  0043DA  D002               	goto	l1033
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;SSD1306oLED.c: 293: numData.d0 = '-';
  9764  0043DC  0E2D               	movlw	45
  9765  0043DE  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9766  0043E0                     l1033:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;SSD1306oLED.c: 295: numData.b[3]=0;
  9770  0043E0  0E00               	movlw	0
  9771  0043E2  6F7D               	movwf	(oled_putint8@numData+3)& (0+255),b
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
  9775  0043E4  0E7A               	movlw	low oled_putint8@numData
  9776  0043E6  6F72               	movwf	oled_putString@string& (0+255),b
  9777  0043E8  0E00               	movlw	high oled_putint8@numData
  9778  0043EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9779  0043EC  C077  F074         	movff	oled_putint8@station_dot,oled_putString@station_dot
  9780  0043F0  C078  F075         	movff	oled_putint8@start_page,oled_putString@start_page
  9781  0043F4  ECA1  F026         	call	_oled_putString	;wreg free
  9782  0043F8  0012               	return		;funcret
  9783  0043FA                     __end_of_oled_putint8:
  9784                           	opt stack 0
  9785                           tblptru	equ	0xFF8
  9786                           tblptrh	equ	0xFF7
  9787                           tblptrl	equ	0xFF6
  9788                           tablat	equ	0xFF5
  9789                           prodh	equ	0xFF4
  9790                           prodl	equ	0xFF3
  9791                           intcon	equ	0xFF2
  9792                           postinc0	equ	0xFEE
  9793                           wreg	equ	0xFE8
  9794                           indf1	equ	0xFE7
  9795                           postdec1	equ	0xFE5
  9796                           fsr1h	equ	0xFE2
  9797                           fsr1l	equ	0xFE1
  9798                           indf2	equ	0xFDF
  9799                           fsr2h	equ	0xFDA
  9800                           fsr2l	equ	0xFD9
  9801                           status	equ	0xFD8
  9802                           
  9803 ;; *************** function _oled_putUint8 *****************
  9804 ;; Defined at:
  9805 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  number          1    wreg     unsigned char 
  9808 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9809 ;;  start_page      1   24[BANK0 ] unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  number          1   25[BANK0 ] unsigned char 
  9812 ;;  numData         6   26[BANK0 ] struct .
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9822 ;;      Params:         0       2       0       0       0       0       0       0       0
  9823 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9825 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9826 ;;Total ram usage:        9 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:   15
  9829 ;; This function calls:
  9830 ;;		___awmod
  9831 ;;		___lbdiv
  9832 ;;		_oled_putString
  9833 ;; This function is called by:
  9834 ;;		_moteRunningProcess
  9835 ;;		_test_adc
  9836 ;;		_ReadyByteFrame
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text14
  9841  0046E4                     __ptext14:
  9842                           	opt stack 0
  9843  0046E4                     _oled_putUint8:
  9844                           	opt stack 13
  9845                           
  9846                           ;incstack = 0
  9847                           ;oled_putUint8@number stored from wreg
  9848  0046E4  0100               	movlb	0	; () banked
  9849  0046E6  6F79               	movwf	oled_putUint8@number& (0+255),b
  9850                           
  9851                           ;SSD1306oLED.c: 266: display_data_t numData;
  9852                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  9853  0046E8  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9854  0046EC  0100               	movlb	0	; () banked
  9855  0046EE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9856  0046F0  0E00               	movlw	0
  9857  0046F2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9858  0046F4  0E0A               	movlw	10
  9859  0046F6  6F62               	movwf	___awmod@divisor& (0+255),b
  9860  0046F8  EC31  F026         	call	___awmod	;wreg free
  9861  0046FC  0100               	movlb	0	; () banked
  9862  0046FE  5160               	movf	?___awmod& (0+255),w,b
  9863  004700  0F30               	addlw	48
  9864  004702  6F7C               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9865                           
  9866                           ;SSD1306oLED.c: 268: number /= 10;
  9867  004704  0E0A               	movlw	10
  9868  004706  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9869  004708  5179               	movf	oled_putUint8@number& (0+255),w,b
  9870  00470A  EC31  F02A         	call	___lbdiv
  9871  00470E  0100               	movlb	0	; () banked
  9872  004710  6F79               	movwf	oled_putUint8@number& (0+255),b
  9873                           
  9874                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  9875  004712  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9876  004716  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9877  004718  0E00               	movlw	0
  9878  00471A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9879  00471C  0E0A               	movlw	10
  9880  00471E  6F62               	movwf	___awmod@divisor& (0+255),b
  9881  004720  EC31  F026         	call	___awmod	;wreg free
  9882  004724  0100               	movlb	0	; () banked
  9883  004726  5160               	movf	?___awmod& (0+255),w,b
  9884  004728  0F30               	addlw	48
  9885  00472A  6F7B               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9886                           
  9887                           ;SSD1306oLED.c: 270: number /= 10;
  9888  00472C  0E0A               	movlw	10
  9889  00472E  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9890  004730  5179               	movf	oled_putUint8@number& (0+255),w,b
  9891  004732  EC31  F02A         	call	___lbdiv
  9892  004736  0100               	movlb	0	; () banked
  9893  004738  6F79               	movwf	oled_putUint8@number& (0+255),b
  9894                           
  9895                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  9896  00473A  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9897  00473E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9898  004740  0E00               	movlw	0
  9899  004742  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9900  004744  0E0A               	movlw	10
  9901  004746  6F62               	movwf	___awmod@divisor& (0+255),b
  9902  004748  EC31  F026         	call	___awmod	;wreg free
  9903  00474C  0100               	movlb	0	; () banked
  9904  00474E  5160               	movf	?___awmod& (0+255),w,b
  9905  004750  0F30               	addlw	48
  9906  004752  6F7A               	movwf	oled_putUint8@numData& (0+255),b
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  9910  004754  0E00               	movlw	0
  9911  004756  6F7D               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  9915  004758  0E7A               	movlw	low oled_putUint8@numData
  9916  00475A  6F72               	movwf	oled_putString@string& (0+255),b
  9917  00475C  0E00               	movlw	high oled_putUint8@numData
  9918  00475E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9919  004760  C077  F074         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9920  004764  C078  F075         	movff	oled_putUint8@start_page,oled_putString@start_page
  9921  004768  ECA1  F026         	call	_oled_putString	;wreg free
  9922  00476C  0012               	return		;funcret
  9923  00476E                     __end_of_oled_putUint8:
  9924                           	opt stack 0
  9925                           tblptru	equ	0xFF8
  9926                           tblptrh	equ	0xFF7
  9927                           tblptrl	equ	0xFF6
  9928                           tablat	equ	0xFF5
  9929                           prodh	equ	0xFF4
  9930                           prodl	equ	0xFF3
  9931                           intcon	equ	0xFF2
  9932                           postinc0	equ	0xFEE
  9933                           wreg	equ	0xFE8
  9934                           indf1	equ	0xFE7
  9935                           postdec1	equ	0xFE5
  9936                           fsr1h	equ	0xFE2
  9937                           fsr1l	equ	0xFE1
  9938                           indf2	equ	0xFDF
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8
  9942                           
  9943 ;; *************** function _moteApp_setSensorsInput *****************
  9944 ;; Defined at:
  9945 ;;		line 1387 in file "../Includes/Board/MOTEapp.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;		None
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9959 ;;      Params:         0       0       0       0       0       0       0       0       0
  9960 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9962 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9963 ;;Total ram usage:        2 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:   14
  9966 ;; This function calls:
  9967 ;;		_MOTEapp_getModuleResponse
  9968 ;;		_moteApp_delayms
  9969 ;;		_sendCommand
  9970 ;; This function is called by:
  9971 ;;		_moteRunningProcess
  9972 ;;		_moteApp_testSensors
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text15
  9977  004B00                     __ptext15:
  9978                           	opt stack 0
  9979  004B00                     _moteApp_setSensorsInput:
  9980                           	opt stack 14
  9981                           
  9982                           ;MOTEapp.c: 1389: uint16_t escapeCounter = 0;
  9983                           
  9984                           ;incstack = 0
  9985  004B00  0E00               	movlw	0
  9986  004B02  0100               	movlb	0	; () banked
  9987  004B04  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9988  004B06  0E00               	movlw	0
  9989  004B08  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;MOTEapp.c: 1390: sendCommand("sys set pinmode GPIO13 ana");
  9993  004B0A  0ED3               	movlw	low STR_183
  9994  004B0C  6F61               	movwf	sendCommand@string& (0+255),b
  9995  004B0E  0E79               	movlw	high STR_183
  9996  004B10  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9997  004B12  EC7D  F02B         	call	_sendCommand	;wreg free
  9998                           
  9999                           ;MOTEapp.c: 1391: while ( !MOTEapp_getModuleResponse() )
 10000  004B16  D009               	goto	l721
 10001  004B18                     
 10002                           ;MOTEapp.c: 1392: {
 10003                           ;MOTEapp.c: 1393: if (++escapeCounter > 50000)
 10004  004B18  0100               	movlb	0	; () banked
 10005  004B1A  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10006  004B1C  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10007  004B1E  0E51               	movlw	81
 10008  004B20  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10009  004B22  0EC3               	movlw	195
 10010  004B24  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10011  004B26  B0D8               	btfsc	status,0,c
 10012  004B28  D005               	goto	u8250
 10013  004B2A                     l721:
 10014                           
 10015                           ; BSR set to: 0
 10016                           
 10017                           ; BSR set to: 0
 10018  004B2A  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10019  004B2E  0900               	iorlw	0
 10020  004B30  B4D8               	btfsc	status,2,c
 10021  004B32  D7F2               	goto	l720
 10022  004B34                     u8250:
 10023                           
 10024                           ;MOTEapp.c: 1395: }
 10025                           ;MOTEapp.c: 1396: escapeCounter = 0;
 10026  004B34  0E00               	movlw	0
 10027  004B36  0100               	movlb	0	; () banked
 10028  004B38  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10029  004B3A  0E00               	movlw	0
 10030  004B3C  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;MOTEapp.c: 1397: sendCommand("sys set pinmode GPIO12 ana");
 10034  004B3E  0EB8               	movlw	low STR_184
 10035  004B40  6F61               	movwf	sendCommand@string& (0+255),b
 10036  004B42  0E79               	movlw	high STR_184
 10037  004B44  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10038  004B46  EC7D  F02B         	call	_sendCommand	;wreg free
 10039                           
 10040                           ;MOTEapp.c: 1398: while ( !MOTEapp_getModuleResponse() )
 10041  004B4A  D009               	goto	l725
 10042  004B4C                     
 10043                           ;MOTEapp.c: 1399: {
 10044                           ;MOTEapp.c: 1400: if (++escapeCounter > 50000)
 10045  004B4C  0100               	movlb	0	; () banked
 10046  004B4E  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10047  004B50  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10048  004B52  0E51               	movlw	81
 10049  004B54  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10050  004B56  0EC3               	movlw	195
 10051  004B58  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10052  004B5A  B0D8               	btfsc	status,0,c
 10053  004B5C  D005               	goto	u8270
 10054  004B5E                     l725:
 10055                           
 10056                           ; BSR set to: 0
 10057                           
 10058                           ; BSR set to: 0
 10059  004B5E  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10060  004B62  0900               	iorlw	0
 10061  004B64  B4D8               	btfsc	status,2,c
 10062  004B66  D7F2               	goto	l724
 10063  004B68                     u8270:
 10064                           
 10065                           ;MOTEapp.c: 1402: }
 10066                           ;MOTEapp.c: 1403: moteApp_delayms(100);
 10067  004B68  0E00               	movlw	0
 10068  004B6A  0100               	movlb	0	; () banked
 10069  004B6C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10070  004B6E  0E64               	movlw	100
 10071  004B70  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10072  004B72  EC33  F02B         	call	_moteApp_delayms	;wreg free
 10073  004B76  0012               	return		;funcret
 10074  004B78                     __end_of_moteApp_setSensorsInput:
 10075                           	opt stack 0
 10076                           tblptru	equ	0xFF8
 10077                           tblptrh	equ	0xFF7
 10078                           tblptrl	equ	0xFF6
 10079                           tablat	equ	0xFF5
 10080                           prodh	equ	0xFF4
 10081                           prodl	equ	0xFF3
 10082                           intcon	equ	0xFF2
 10083                           postinc0	equ	0xFEE
 10084                           wreg	equ	0xFE8
 10085                           indf1	equ	0xFE7
 10086                           postdec1	equ	0xFE5
 10087                           fsr1h	equ	0xFE2
 10088                           fsr1l	equ	0xFE1
 10089                           indf2	equ	0xFDF
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _moteApp_lightStringSize *****************
 10095 ;; Defined at:
 10096 ;;		line 1452 in file "../Includes/Board/MOTEapp.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      unsigned char 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   11
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_moteRunningProcess
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text16
 10125  005C56                     __ptext16:
 10126                           	opt stack 0
 10127  005C56                     _moteApp_lightStringSize:
 10128                           	opt stack 17
 10129                           
 10130                           ;MOTEapp.c: 1454: return lightStringSize;
 10131                           
 10132                           ;incstack = 0
 10133  005C56  0100               	movlb	0	; () banked
 10134  005C58  51ED               	movf	_lightStringSize& (0+255),w,b
 10135  005C5A  0012               	return	
 10136  005C5C                     __end_of_moteApp_lightStringSize:
 10137                           	opt stack 0
 10138                           tblptru	equ	0xFF8
 10139                           tblptrh	equ	0xFF7
 10140                           tblptrl	equ	0xFF6
 10141                           tablat	equ	0xFF5
 10142                           prodh	equ	0xFF4
 10143                           prodl	equ	0xFF3
 10144                           intcon	equ	0xFF2
 10145                           postinc0	equ	0xFEE
 10146                           wreg	equ	0xFE8
 10147                           indf1	equ	0xFE7
 10148                           postdec1	equ	0xFE5
 10149                           fsr1h	equ	0xFE2
 10150                           fsr1l	equ	0xFE1
 10151                           indf2	equ	0xFDF
 10152                           fsr2h	equ	0xFDA
 10153                           fsr2l	equ	0xFD9
 10154                           status	equ	0xFD8
 10155                           
 10156 ;; *************** function _moteApp_getTempValue *****************
 10157 ;; Defined at:
 10158 ;;		line 1405 in file "../Includes/Board/MOTEapp.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;		None
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  2    3[BANK0 ] PTR unsigned char 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10172 ;;      Params:         0       2       0       0       0       0       0       0       0
 10173 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10175 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10176 ;;Total ram usage:        4 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:   14
 10179 ;; This function calls:
 10180 ;;		_MOTEapp_getModuleResponse
 10181 ;;		_sendCommand
 10182 ;; This function is called by:
 10183 ;;		_moteHandler
 10184 ;;		_moteRunningProcess
 10185 ;;		_moteApp_testSensors
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text17
 10190  005422                     __ptext17:
 10191                           	opt stack 0
 10192  005422                     _moteApp_getTempValue:
 10193                           	opt stack 14
 10194                           
 10195                           ;MOTEapp.c: 1407: uint16_t escapeCounter = 0;
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;incstack = 0
 10199  005422  0E00               	movlw	0
 10200  005424  0100               	movlb	0	; () banked
 10201  005426  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10202  005428  0E00               	movlw	0
 10203  00542A  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;MOTEapp.c: 1409: sendCommand("sys get pinana GPIO12");
 10207  00542C  0E56               	movlw	low STR_185
 10208  00542E  6F61               	movwf	sendCommand@string& (0+255),b
 10209  005430  0E7A               	movlw	high STR_185
 10210  005432  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10211  005434  EC7D  F02B         	call	_sendCommand	;wreg free
 10212                           
 10213                           ;MOTEapp.c: 1410: while ( !MOTEapp_getModuleResponse() )
 10214  005438  D009               	goto	l732
 10215  00543A                     
 10216                           ;MOTEapp.c: 1411: {
 10217                           ;MOTEapp.c: 1412: if (++escapeCounter > 50000)
 10218  00543A  0100               	movlb	0	; () banked
 10219  00543C  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10220  00543E  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10221  005440  0E51               	movlw	81
 10222  005442  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10223  005444  0EC3               	movlw	195
 10224  005446  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10225  005448  B0D8               	btfsc	status,0,c
 10226  00544A  D005               	goto	u8040
 10227  00544C                     l732:
 10228                           
 10229                           ; BSR set to: 0
 10230                           
 10231                           ; BSR set to: 0
 10232  00544C  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10233  005450  0900               	iorlw	0
 10234  005452  B4D8               	btfsc	status,2,c
 10235  005454  D7F2               	goto	l731
 10236  005456                     u8040:
 10237                           
 10238                           ;MOTEapp.c: 1414: }
 10239                           ;MOTEapp.c: 1416: return &moduleResonseBuffer;
 10240  005456  0E50               	movlw	low _moduleResonseBuffer
 10241  005458  0100               	movlb	0	; () banked
 10242  00545A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10243  00545C  0E01               	movlw	high _moduleResonseBuffer
 10244  00545E  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10245  005460  0012               	return	
 10246  005462                     __end_of_moteApp_getTempValue:
 10247                           	opt stack 0
 10248                           tblptru	equ	0xFF8
 10249                           tblptrh	equ	0xFF7
 10250                           tblptrl	equ	0xFF6
 10251                           tablat	equ	0xFF5
 10252                           prodh	equ	0xFF4
 10253                           prodl	equ	0xFF3
 10254                           intcon	equ	0xFF2
 10255                           postinc0	equ	0xFEE
 10256                           wreg	equ	0xFE8
 10257                           indf1	equ	0xFE7
 10258                           postdec1	equ	0xFE5
 10259                           fsr1h	equ	0xFE2
 10260                           fsr1l	equ	0xFE1
 10261                           indf2	equ	0xFDF
 10262                           fsr2h	equ	0xFDA
 10263                           fsr2l	equ	0xFD9
 10264                           status	equ	0xFD8
 10265                           
 10266 ;; *************** function _moteApp_getLightValue *****************
 10267 ;; Defined at:
 10268 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;		None
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  2   14[BANK0 ] PTR unsigned char 
 10275 ;; Registers used:
 10276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10282 ;;      Params:         0       2       0       0       0       0       0       0       0
 10283 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10285 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10286 ;;Total ram usage:        4 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:   14
 10289 ;; This function calls:
 10290 ;;		_MOTEapp_getModuleResponse
 10291 ;;		_moteApp_setLightString
 10292 ;;		_sendCommand
 10293 ;; This function is called by:
 10294 ;;		_moteHandler
 10295 ;;		_moteRunningProcess
 10296 ;;		_moteApp_testSensors
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text18
 10301  00522E                     __ptext18:
 10302                           	opt stack 0
 10303  00522E                     _moteApp_getLightValue:
 10304                           	opt stack 14
 10305                           
 10306                           ;MOTEapp.c: 1421: uint16_t escapeCounter = 0;
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;incstack = 0
 10310  00522E  0E00               	movlw	0
 10311  005230  0100               	movlb	0	; () banked
 10312  005232  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10313  005234  0E00               	movlw	0
 10314  005236  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;MOTEapp.c: 1423: sendCommand("sys get pinana GPIO13");
 10318  005238  0E6C               	movlw	low STR_186
 10319  00523A  6F61               	movwf	sendCommand@string& (0+255),b
 10320  00523C  0E7A               	movlw	high STR_186
 10321  00523E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10322  005240  EC7D  F02B         	call	_sendCommand	;wreg free
 10323                           
 10324                           ;MOTEapp.c: 1424: while ( !MOTEapp_getModuleResponse() )
 10325  005244  D009               	goto	l739
 10326  005246                     
 10327                           ;MOTEapp.c: 1425: {
 10328                           ;MOTEapp.c: 1426: if (++escapeCounter > 50000)
 10329  005246  0100               	movlb	0	; () banked
 10330  005248  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10331  00524A  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10332  00524C  0E51               	movlw	81
 10333  00524E  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10334  005250  0EC3               	movlw	195
 10335  005252  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10336  005254  B0D8               	btfsc	status,0,c
 10337  005256  D005               	goto	u8020
 10338  005258                     l739:
 10339                           
 10340                           ; BSR set to: 0
 10341                           
 10342                           ; BSR set to: 0
 10343  005258  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 10344  00525C  0900               	iorlw	0
 10345  00525E  B4D8               	btfsc	status,2,c
 10346  005260  D7F2               	goto	l738
 10347  005262                     u8020:
 10348                           
 10349                           ;MOTEapp.c: 1428: }
 10350                           ;MOTEapp.c: 1429: moteApp_setLightString(moduleResonseBuffer);
 10351  005262  0E50               	movlw	low _moduleResonseBuffer
 10352  005264  0100               	movlb	0	; () banked
 10353  005266  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10354  005268  0E01               	movlw	high _moduleResonseBuffer
 10355  00526A  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10356  00526C  ECD7  F026         	call	_moteApp_setLightString	;wreg free
 10357                           
 10358                           ;MOTEapp.c: 1430: return &moduleResonseBuffer;
 10359  005270  0E50               	movlw	low _moduleResonseBuffer
 10360  005272  0100               	movlb	0	; () banked
 10361  005274  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10362  005276  0E01               	movlw	high _moduleResonseBuffer
 10363  005278  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10364  00527A  0012               	return	
 10365  00527C                     __end_of_moteApp_getLightValue:
 10366                           	opt stack 0
 10367                           tblptru	equ	0xFF8
 10368                           tblptrh	equ	0xFF7
 10369                           tblptrl	equ	0xFF6
 10370                           tablat	equ	0xFF5
 10371                           prodh	equ	0xFF4
 10372                           prodl	equ	0xFF3
 10373                           intcon	equ	0xFF2
 10374                           postinc0	equ	0xFEE
 10375                           wreg	equ	0xFE8
 10376                           indf1	equ	0xFE7
 10377                           postdec1	equ	0xFE5
 10378                           fsr1h	equ	0xFE2
 10379                           fsr1l	equ	0xFE1
 10380                           indf2	equ	0xFDF
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function _moteApp_setLightString *****************
 10386 ;; Defined at:
 10387 ;;		line 1437 in file "../Includes/Board/MOTEapp.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 10390 ;;		 -> moduleResonseBuffer(64), 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  stingPos        1   13[BANK0 ] unsigned char 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10402 ;;      Params:         0       2       0       0       0       0       0       0       0
 10403 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10405 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10406 ;;Total ram usage:        3 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:   12
 10409 ;; This function calls:
 10410 ;;		_memcpy
 10411 ;; This function is called by:
 10412 ;;		_moteApp_getLightValue
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text19
 10417  004DAE                     __ptext19:
 10418                           	opt stack 0
 10419  004DAE                     _moteApp_setLightString:
 10420                           	opt stack 15
 10421                           
 10422                           ;MOTEapp.c: 1439: memcpy(storedLight, clearLight, sizeof(storedLight));
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;incstack = 0
 10426  004DAE  0EDE               	movlw	low _storedLight
 10427  004DB0  0100               	movlb	0	; () banked
 10428  004DB2  6F60               	movwf	memcpy@d1& (0+255),b
 10429  004DB4  0E01               	movlw	high _storedLight
 10430  004DB6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10431  004DB8  0ED9               	movlw	low _clearLight
 10432  004DBA  6F62               	movwf	memcpy@s1& (0+255),b
 10433  004DBC  0E01               	movlw	high _clearLight
 10434  004DBE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10435  004DC0  0E00               	movlw	0
 10436  004DC2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10437  004DC4  0E05               	movlw	5
 10438  004DC6  6F64               	movwf	memcpy@n& (0+255),b
 10439  004DC8  EC89  F029         	call	_memcpy	;wreg free
 10440                           
 10441                           ;MOTEapp.c: 1440: memcpy(storedLight, lightString, sizeof(storedLight));
 10442  004DCC  0EDE               	movlw	low _storedLight
 10443  004DCE  0100               	movlb	0	; () banked
 10444  004DD0  6F60               	movwf	memcpy@d1& (0+255),b
 10445  004DD2  0E01               	movlw	high _storedLight
 10446  004DD4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10447  004DD6  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10448  004DDA  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10449  004DDE  0E00               	movlw	0
 10450  004DE0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10451  004DE2  0E05               	movlw	5
 10452  004DE4  6F64               	movwf	memcpy@n& (0+255),b
 10453  004DE6  EC89  F029         	call	_memcpy	;wreg free
 10454                           
 10455                           ;MOTEapp.c: 1442: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10456  004DEA  0E00               	movlw	0
 10457  004DEC  0100               	movlb	0	; () banked
 10458  004DEE  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10459  004DF0                     l8670:
 10460                           
 10461                           ; BSR set to: 0
 10462  004DF0  0E04               	movlw	4
 10463  004DF2  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10464  004DF4  D001               	goto	l750
 10465  004DF6  D00E               	goto	u6690
 10466  004DF8                     l750:
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;MOTEapp.c: 1443: {
 10470                           ;MOTEapp.c: 1444: if (storedLight[stingPos] == 0x00)
 10471                           
 10472                           ; BSR set to: 0
 10473  004DF8  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10474  004DFA  0D01               	mullw	1
 10475  004DFC  0EDE               	movlw	low _storedLight
 10476  004DFE  24F3               	addwf	prodl,w,c
 10477  004E00  6ED9               	movwf	fsr2l,c
 10478  004E02  0E01               	movlw	high _storedLight
 10479  004E04  20F4               	addwfc	prodh,w,c
 10480  004E06  6EDA               	movwf	fsr2h,c
 10481  004E08  50DF               	movf	indf2,w,c
 10482  004E0A  B4D8               	btfsc	status,2,c
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;MOTEapp.c: 1445: {
 10486                           ;MOTEapp.c: 1446: lightStringSize = stingPos;
 10487  004E0C  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10488                           
 10489                           ; BSR set to: 0
 10490                           
 10491                           ; BSR set to: 0
 10492  004E10  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10493  004E12  D7EE               	goto	l8670
 10494  004E14                     u6690:
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;MOTEapp.c: 1447: }
 10498                           ;MOTEapp.c: 1448: }
 10499                           ;MOTEapp.c: 1449: __nop();
 10500  004E14  F000               	nop	
 10501  004E16  0012               	return		;funcret
 10502  004E18                     __end_of_moteApp_setLightString:
 10503                           	opt stack 0
 10504                           tblptru	equ	0xFF8
 10505                           tblptrh	equ	0xFF7
 10506                           tblptrl	equ	0xFF6
 10507                           tablat	equ	0xFF5
 10508                           prodh	equ	0xFF4
 10509                           prodl	equ	0xFF3
 10510                           intcon	equ	0xFF2
 10511                           postinc0	equ	0xFEE
 10512                           wreg	equ	0xFE8
 10513                           indf1	equ	0xFE7
 10514                           postdec1	equ	0xFE5
 10515                           fsr1h	equ	0xFE2
 10516                           fsr1l	equ	0xFE1
 10517                           indf2	equ	0xFDF
 10518                           fsr2h	equ	0xFDA
 10519                           fsr2l	equ	0xFD9
 10520                           status	equ	0xFD8
 10521                           
 10522 ;; *************** function _memcpy *****************
 10523 ;; Defined at:
 10524 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  d1              2    0[BANK0 ] PTR void 
 10527 ;;		 -> storedLight(5), 
 10528 ;;  s1              2    2[BANK0 ] PTR const void 
 10529 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10530 ;;  n               2    4[BANK0 ] unsigned int 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10533 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10534 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10535 ;;		 -> storedLight(5), 
 10536 ;;  tmp             1   10[BANK0 ] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  2    0[BANK0 ] PTR void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10546 ;;      Params:         0       6       0       0       0       0       0       0       0
 10547 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10549 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10550 ;;Total ram usage:       11 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:   11
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_moteApp_setLightString
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text20
 10561  005312                     __ptext20:
 10562                           	opt stack 0
 10563  005312                     _memcpy:
 10564                           	opt stack 15
 10565                           
 10566                           ;incstack = 0
 10567  005312  C062  F068         	movff	memcpy@s1,memcpy@s
 10568  005316  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10569  00531A  C060  F066         	movff	memcpy@d1,memcpy@d
 10570  00531E  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10571  005322  D011               	goto	l2679
 10572  005324                     l8222:
 10573  005324  C068  FFD9         	movff	memcpy@s,fsr2l
 10574  005328  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10575  00532C  50DF               	movf	indf2,w,c
 10576  00532E  0100               	movlb	0	; () banked
 10577  005330  6F6A               	movwf	memcpy@tmp& (0+255),b
 10578                           
 10579                           ; BSR set to: 0
 10580  005332  4B68               	infsnz	memcpy@s& (0+255),f,b
 10581  005334  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10582                           
 10583                           ; BSR set to: 0
 10584  005336  C066  FFD9         	movff	memcpy@d,fsr2l
 10585  00533A  C067  FFDA         	movff	memcpy@d+1,fsr2h
 10586  00533E  C06A  FFDF         	movff	memcpy@tmp,indf2
 10587                           
 10588                           ; BSR set to: 0
 10589  005342  4B66               	infsnz	memcpy@d& (0+255),f,b
 10590  005344  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10591  005346                     l2679:
 10592                           
 10593                           ; BSR set to: 0
 10594  005346  0100               	movlb	0	; () banked
 10595  005348  0764               	decf	memcpy@n& (0+255),f,b
 10596  00534A  A0D8               	btfss	status,0,c
 10597  00534C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10598  00534E  2964               	incf	memcpy@n& (0+255),w,b
 10599  005350  E1E9               	bnz	l8222
 10600  005352  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10601  005354  B4D8               	btfsc	status,2,c
 10602  005356  0012               	return	
 10603  005358  D7E5               	goto	l2680
 10604  00535A                     __end_of_memcpy:
 10605                           	opt stack 0
 10606                           tblptru	equ	0xFF8
 10607                           tblptrh	equ	0xFF7
 10608                           tblptrl	equ	0xFF6
 10609                           tablat	equ	0xFF5
 10610                           prodh	equ	0xFF4
 10611                           prodl	equ	0xFF3
 10612                           intcon	equ	0xFF2
 10613                           postinc0	equ	0xFEE
 10614                           wreg	equ	0xFE8
 10615                           indf1	equ	0xFE7
 10616                           postdec1	equ	0xFE5
 10617                           fsr1h	equ	0xFE2
 10618                           fsr1l	equ	0xFE1
 10619                           indf2	equ	0xFDF
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _moteApp_getLightString *****************
 10625 ;; Defined at:
 10626 ;;		line 1456 in file "../Includes/Board/MOTEapp.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  2    0[BANK0 ] PTR unsigned char 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         0       2       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        2 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:   11
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_moteRunningProcess
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text21
 10655  005BD8                     __ptext21:
 10656                           	opt stack 0
 10657  005BD8                     _moteApp_getLightString:
 10658                           	opt stack 17
 10659                           
 10660                           ;MOTEapp.c: 1458: return &storedLight;
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;incstack = 0
 10664  005BD8  0EDE               	movlw	low _storedLight
 10665  005BDA  0100               	movlb	0	; () banked
 10666  005BDC  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 10667  005BDE  0E01               	movlw	high _storedLight
 10668  005BE0  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 10669  005BE2  0012               	return	
 10670  005BE4                     __end_of_moteApp_getLightString:
 10671                           	opt stack 0
 10672                           tblptru	equ	0xFF8
 10673                           tblptrh	equ	0xFF7
 10674                           tblptrl	equ	0xFF6
 10675                           tablat	equ	0xFF5
 10676                           prodh	equ	0xFF4
 10677                           prodl	equ	0xFF3
 10678                           intcon	equ	0xFF2
 10679                           postinc0	equ	0xFEE
 10680                           wreg	equ	0xFE8
 10681                           indf1	equ	0xFE7
 10682                           postdec1	equ	0xFE5
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           fsr2h	equ	0xFDA
 10687                           fsr2l	equ	0xFD9
 10688                           status	equ	0xFD8
 10689                           
 10690 ;; *************** function _moteApp_convertSensorValue *****************
 10691 ;; Defined at:
 10692 ;;		line 1347 in file "../Includes/Board/MOTEapp.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 10695 ;;		 -> moduleResonseBuffer(64), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 10698 ;;  index           1   25[BANK0 ] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  2   18[BANK0 ] unsigned int 
 10701 ;; Registers used:
 10702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10708 ;;      Params:         0       2       0       0       0       0       0       0       0
 10709 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10710 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10711 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10712 ;;Total ram usage:        8 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:   12
 10715 ;; This function calls:
 10716 ;;		___wmul
 10717 ;; This function is called by:
 10718 ;;		_moteHandler
 10719 ;;		_moteRunningProcess
 10720 ;;		_moteApp_testSensors
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text22
 10725  004A82                     __ptext22:
 10726                           	opt stack 0
 10727  004A82                     _moteApp_convertSensorValue:
 10728                           	opt stack 16
 10729                           
 10730                           ;MOTEapp.c: 1349: uint8_t index;
 10731                           ;MOTEapp.c: 1350: uint16_t convertedValue = 0;
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;incstack = 0
 10735  004A82  0E00               	movlw	0
 10736  004A84  0100               	movlb	0	; () banked
 10737  004A86  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10738  004A88  0E00               	movlw	0
 10739  004A8A  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10740                           
 10741                           ;MOTEapp.c: 1351: for(index = 0; index < 4; index++)
 10742  004A8C  0E00               	movlw	0
 10743  004A8E  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 10744  004A90                     l9578:
 10745                           
 10746                           ; BSR set to: 0
 10747  004A90  0E03               	movlw	3
 10748  004A92  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 10749  004A94  D001               	goto	l708
 10750  004A96  D02F               	goto	u8080
 10751  004A98                     l708:
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;MOTEapp.c: 1352: {
 10755                           ;MOTEapp.c: 1353: if (*string != 0)
 10756                           
 10757                           ; BSR set to: 0
 10758  004A98  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10759  004A9C  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10760  004AA0  50DF               	movf	indf2,w,c
 10761  004AA2  B4D8               	btfsc	status,2,c
 10762  004AA4  D028               	goto	u8080
 10763                           
 10764                           ; BSR set to: 0
 10765                           ;MOTEapp.c: 1354: {
 10766                           ;MOTEapp.c: 1355: if (index != 0)
 10767  004AA6  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 10768  004AA8  B4D8               	btfsc	status,2,c
 10769  004AAA  D00E               	goto	l711
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;MOTEapp.c: 1356: convertedValue = convertedValue * 10;
 10773  004AAC  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 10774  004AB0  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 10775  004AB4  0E00               	movlw	0
 10776  004AB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10777  004AB8  0E0A               	movlw	10
 10778  004ABA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10779  004ABC  EC4C  F02C         	call	___wmul	;wreg free
 10780  004AC0  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 10781  004AC4  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 10782  004AC8                     l711:
 10783                           
 10784                           ;MOTEapp.c: 1358: convertedValue = (*string++ - '0') + convertedValue;
 10785  004AC8  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10786  004ACC  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10787  004AD0  50DF               	movf	indf2,w,c
 10788  004AD2  0100               	movlb	0	; () banked
 10789  004AD4  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 10790  004AD6  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 10791  004AD8  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 10792  004ADA  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 10793  004ADC  0E00               	movlw	0
 10794  004ADE  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 10795  004AE0  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 10796  004AE2  0ED0               	movlw	208
 10797  004AE4  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 10798  004AE6  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10799  004AE8  0EFF               	movlw	255
 10800  004AEA  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 10801  004AEC  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10802                           
 10803                           ; BSR set to: 0
 10804  004AEE  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 10805  004AF0  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 10806                           
 10807                           ; BSR set to: 0
 10808                           
 10809                           ; BSR set to: 0
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;MOTEapp.c: 1360: else
 10813                           ;MOTEapp.c: 1361: {
 10814                           ;MOTEapp.c: 1362: break;
 10815                           
 10816                           ;MOTEapp.c: 1359: }
 10817  004AF2  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 10818  004AF4  D7CD               	goto	l9578
 10819  004AF6                     u8080:
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;MOTEapp.c: 1363: }
 10823                           ;MOTEapp.c: 1364: }
 10824                           ;MOTEapp.c: 1365: return convertedValue;
 10825  004AF6  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 10826  004AFA  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 10827                           
 10828                           ; BSR set to: 0
 10829  004AFE  0012               	return		;funcret
 10830  004B00                     __end_of_moteApp_convertSensorValue:
 10831                           	opt stack 0
 10832                           tblptru	equ	0xFF8
 10833                           tblptrh	equ	0xFF7
 10834                           tblptrl	equ	0xFF6
 10835                           tablat	equ	0xFF5
 10836                           prodh	equ	0xFF4
 10837                           prodl	equ	0xFF3
 10838                           intcon	equ	0xFF2
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           indf1	equ	0xFE7
 10842                           postdec1	equ	0xFE5
 10843                           fsr1h	equ	0xFE2
 10844                           fsr1l	equ	0xFE1
 10845                           indf2	equ	0xFDF
 10846                           fsr2h	equ	0xFDA
 10847                           fsr2l	equ	0xFD9
 10848                           status	equ	0xFD8
 10849                           
 10850 ;; *************** function ___wmul *****************
 10851 ;; Defined at:
 10852 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10855 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  product         2    4[BANK0 ] unsigned int 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  2    0[BANK0 ] unsigned int 
 10860 ;; Registers used:
 10861 ;;		wreg, status,2, status,0, prodl, prodh
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10867 ;;      Params:         0       4       0       0       0       0       0       0       0
 10868 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10870 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10871 ;;Total ram usage:        6 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:   11
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_moteApp_convertSensorValue
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text23
 10882  005898                     __ptext23:
 10883                           	opt stack 0
 10884  005898                     ___wmul:
 10885                           	opt stack 16
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;incstack = 0
 10889  005898  0100               	movlb	0	; () banked
 10890  00589A  5160               	movf	___wmul@multiplier& (0+255),w,b
 10891  00589C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10892  00589E  CFF3 F064          	movff	prodl,___wmul@product
 10893  0058A2  CFF4 F065          	movff	prodh,___wmul@product+1
 10894  0058A6  5160               	movf	___wmul@multiplier& (0+255),w,b
 10895  0058A8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10896  0058AA  50F3               	movf	prodl,w,c
 10897  0058AC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10898  0058AE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10899  0058B0  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10900  0058B2  50F3               	movf	prodl,w,c
 10901  0058B4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10902                           
 10903                           ; BSR set to: 0
 10904  0058B6  C064  F060         	movff	___wmul@product,?___wmul
 10905  0058BA  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10906  0058BE  0012               	return	
 10907  0058C0                     __end_of___wmul:
 10908                           	opt stack 0
 10909                           tblptru	equ	0xFF8
 10910                           tblptrh	equ	0xFF7
 10911                           tblptrl	equ	0xFF6
 10912                           tablat	equ	0xFF5
 10913                           prodh	equ	0xFF4
 10914                           prodl	equ	0xFF3
 10915                           intcon	equ	0xFF2
 10916                           postinc0	equ	0xFEE
 10917                           wreg	equ	0xFE8
 10918                           indf1	equ	0xFE7
 10919                           postdec1	equ	0xFE5
 10920                           fsr1h	equ	0xFE2
 10921                           fsr1l	equ	0xFE1
 10922                           indf2	equ	0xFDF
 10923                           fsr2h	equ	0xFDA
 10924                           fsr2l	equ	0xFD9
 10925                           status	equ	0xFD8
 10926                           
 10927 ;; *************** function _moteApp_clearBuffers *****************
 10928 ;; Defined at:
 10929 ;;		line 1287 in file "../Includes/Board/MOTEapp.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;		None
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  counter         1    3[BANK0 ] unsigned char 
 10934 ;;  counter         1    2[BANK0 ] unsigned char 
 10935 ;;  counter         1    1[BANK0 ] unsigned char 
 10936 ;;  counter         1    0[BANK0 ] unsigned char 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  1    wreg      void 
 10939 ;; Registers used:
 10940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10946 ;;      Params:         0       0       0       0       0       0       0       0       0
 10947 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10948 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10949 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10950 ;;Total ram usage:        4 bytes
 10951 ;; Hardware stack levels used:    1
 10952 ;; Hardware stack levels required when called:   11
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		_moteRunningProcess
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           	psect	text24
 10961  0045C8                     __ptext24:
 10962                           	opt stack 0
 10963  0045C8                     _moteApp_clearBuffers:
 10964                           	opt stack 17
 10965                           
 10966                           ;MOTEapp.c: 1289: for (uint8_t counter = 0; counter < 3; counter++)
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;incstack = 0
 10970  0045C8  0E00               	movlw	0
 10971  0045CA  0100               	movlb	0	; () banked
 10972  0045CC  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 10973  0045CE                     l9652:
 10974                           
 10975                           ; BSR set to: 0
 10976  0045CE  0E02               	movlw	2
 10977  0045D0  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 10978  0045D2  D001               	goto	l684
 10979  0045D4  D00C               	goto	u8170
 10980  0045D6                     l684:
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;MOTEapp.c: 1290: {
 10984                           ;MOTEapp.c: 1291: responsePortNum[counter] = 0;
 10985                           
 10986                           ; BSR set to: 0
 10987  0045D6  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 10988  0045D8  0D01               	mullw	1
 10989  0045DA  0EE3               	movlw	low _responsePortNum
 10990  0045DC  24F3               	addwf	prodl,w,c
 10991  0045DE  6ED9               	movwf	fsr2l,c
 10992  0045E0  0E01               	movlw	high _responsePortNum
 10993  0045E2  20F4               	addwfc	prodh,w,c
 10994  0045E4  6EDA               	movwf	fsr2h,c
 10995  0045E6  0E00               	movlw	0
 10996  0045E8  6EDF               	movwf	indf2,c
 10997                           
 10998                           ; BSR set to: 0
 10999  0045EA  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11000  0045EC  D7F0               	goto	l9652
 11001  0045EE                     u8170:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;MOTEapp.c: 1292: }
 11005                           ;MOTEapp.c: 1293: for (uint8_t counter = 0; counter < 34; counter++)
 11006                           
 11007                           ; BSR set to: 0
 11008  0045EE  0E00               	movlw	0
 11009  0045F0  6F61               	movwf	moteApp_clearBuffers@counter_1714& (0+255),b
 11010  0045F2                     l9664:
 11011                           
 11012                           ; BSR set to: 0
 11013  0045F2  0E21               	movlw	33
 11014  0045F4  6561               	cpfsgt	moteApp_clearBuffers@counter_1714& (0+255),b
 11015  0045F6  D001               	goto	l686
 11016  0045F8  D00C               	goto	u8190
 11017  0045FA                     l686:
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;MOTEapp.c: 1294: {
 11021                           ;MOTEapp.c: 1295: responseId[counter] = 0;
 11022                           
 11023                           ; BSR set to: 0
 11024  0045FA  5161               	movf	moteApp_clearBuffers@counter_1714& (0+255),w,b
 11025  0045FC  0D01               	mullw	1
 11026  0045FE  0E10               	movlw	low _responseId
 11027  004600  24F3               	addwf	prodl,w,c
 11028  004602  6ED9               	movwf	fsr2l,c
 11029  004604  0E01               	movlw	high _responseId
 11030  004606  20F4               	addwfc	prodh,w,c
 11031  004608  6EDA               	movwf	fsr2h,c
 11032  00460A  0E00               	movlw	0
 11033  00460C  6EDF               	movwf	indf2,c
 11034                           
 11035                           ; BSR set to: 0
 11036  00460E  2B61               	incf	moteApp_clearBuffers@counter_1714& (0+255),f,b
 11037  004610  D7F0               	goto	l9664
 11038  004612                     u8190:
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;MOTEapp.c: 1296: }
 11042                           ;MOTEapp.c: 1297: for (uint8_t counter = 0; counter < 32; counter++)
 11043                           
 11044                           ; BSR set to: 0
 11045  004612  0E00               	movlw	0
 11046  004614  6F62               	movwf	moteApp_clearBuffers@counter_1715& (0+255),b
 11047  004616                     l9676:
 11048                           
 11049                           ; BSR set to: 0
 11050  004616  0E1F               	movlw	31
 11051  004618  6562               	cpfsgt	moteApp_clearBuffers@counter_1715& (0+255),b
 11052  00461A  D001               	goto	l688
 11053  00461C  D00C               	goto	u8210
 11054  00461E                     l688:
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;MOTEapp.c: 1298: {
 11058                           ;MOTEapp.c: 1299: responseData[counter] = 0;
 11059                           
 11060                           ; BSR set to: 0
 11061  00461E  5162               	movf	moteApp_clearBuffers@counter_1715& (0+255),w,b
 11062  004620  0D01               	mullw	1
 11063  004622  0E90               	movlw	low _responseData
 11064  004624  24F3               	addwf	prodl,w,c
 11065  004626  6ED9               	movwf	fsr2l,c
 11066  004628  0E01               	movlw	high _responseData
 11067  00462A  20F4               	addwfc	prodh,w,c
 11068  00462C  6EDA               	movwf	fsr2h,c
 11069  00462E  0E00               	movlw	0
 11070  004630  6EDF               	movwf	indf2,c
 11071                           
 11072                           ; BSR set to: 0
 11073  004632  2B62               	incf	moteApp_clearBuffers@counter_1715& (0+255),f,b
 11074  004634  D7F0               	goto	l9676
 11075  004636                     u8210:
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;MOTEapp.c: 1300: }
 11079                           ;MOTEapp.c: 1301: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11080                           
 11081                           ; BSR set to: 0
 11082  004636  0E00               	movlw	0
 11083  004638  6F63               	movwf	moteApp_clearBuffers@counter_1716& (0+255),b
 11084  00463A                     l9688:
 11085                           
 11086                           ; BSR set to: 0
 11087  00463A  0E0F               	movlw	15
 11088  00463C  6563               	cpfsgt	moteApp_clearBuffers@counter_1716& (0+255),b
 11089  00463E  D001               	goto	l690
 11090  004640  0012               	return	
 11091  004642                     l690:
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;MOTEapp.c: 1302: {
 11095                           ;MOTEapp.c: 1303: dataBuffer[counter] = 0;
 11096                           
 11097                           ; BSR set to: 0
 11098  004642  5163               	movf	moteApp_clearBuffers@counter_1716& (0+255),w,b
 11099  004644  0D01               	mullw	1
 11100  004646  0EB0               	movlw	low _dataBuffer
 11101  004648  24F3               	addwf	prodl,w,c
 11102  00464A  6ED9               	movwf	fsr2l,c
 11103  00464C  0E01               	movlw	high _dataBuffer
 11104  00464E  20F4               	addwfc	prodh,w,c
 11105  004650  6EDA               	movwf	fsr2h,c
 11106  004652  0E00               	movlw	0
 11107  004654  6EDF               	movwf	indf2,c
 11108                           
 11109                           ; BSR set to: 0
 11110  004656  2B63               	incf	moteApp_clearBuffers@counter_1716& (0+255),f,b
 11111  004658  D7F0               	goto	l9688
 11112  00465A                     __end_of_moteApp_clearBuffers:
 11113                           	opt stack 0
 11114                           tblptru	equ	0xFF8
 11115                           tblptrh	equ	0xFF7
 11116                           tblptrl	equ	0xFF6
 11117                           tablat	equ	0xFF5
 11118                           prodh	equ	0xFF4
 11119                           prodl	equ	0xFF3
 11120                           intcon	equ	0xFF2
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           indf1	equ	0xFE7
 11124                           postdec1	equ	0xFE5
 11125                           fsr1h	equ	0xFE2
 11126                           fsr1l	equ	0xFE1
 11127                           indf2	equ	0xFDF
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _moteApp_addToDataBuffer *****************
 11133 ;; Defined at:
 11134 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11137 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11138 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  index           1   21[BANK0 ] unsigned char 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      unsigned char 
 11143 ;; Registers used:
 11144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11150 ;;      Params:         0       3       0       0       0       0       0       0       0
 11151 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11153 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11154 ;;Total ram usage:        4 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:   11
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_moteRunningProcess
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text25
 11165  005014                     __ptext25:
 11166                           	opt stack 0
 11167  005014                     _moteApp_addToDataBuffer:
 11168                           	opt stack 17
 11169                           
 11170                           ;MOTEapp.c: 1331: uint8_t index;
 11171                           ;MOTEapp.c: 1332: for(index = 0; index < 6; index++)
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;incstack = 0
 11175  005014  0E00               	movlw	0
 11176  005016  0100               	movlb	0	; () banked
 11177  005018  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11178  00501A                     l9726:
 11179                           
 11180                           ; BSR set to: 0
 11181  00501A  0E05               	movlw	5
 11182  00501C  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11183  00501E  D001               	goto	l701
 11184  005020  D026               	goto	u8300
 11185  005022                     l701:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;MOTEapp.c: 1333: {
 11189                           ;MOTEapp.c: 1334: if (*string != 0)
 11190                           
 11191                           ; BSR set to: 0
 11192  005022  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11193  005026  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11194  00502A  50DF               	movf	indf2,w,c
 11195  00502C  B4D8               	btfsc	status,2,c
 11196  00502E  D012               	goto	l703
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;MOTEapp.c: 1335: {
 11200                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation++] = *string++;
 11201  005030  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11202  005034  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11203  005038  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11204  00503A  0D01               	mullw	1
 11205  00503C  0EB0               	movlw	low _dataBuffer
 11206  00503E  24F3               	addwf	prodl,w,c
 11207  005040  6EE1               	movwf	fsr1l,c
 11208  005042  0E01               	movlw	high _dataBuffer
 11209  005044  20F4               	addwfc	prodh,w,c
 11210  005046  6EE2               	movwf	fsr1h,c
 11211  005048  CFDF FFE7          	movff	indf2,indf1
 11212                           
 11213                           ; BSR set to: 0
 11214  00504C  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11215  00504E  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11216                           
 11217                           ; BSR set to: 0
 11218  005050  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11219                           
 11220                           ;MOTEapp.c: 1337: }
 11221  005052  D00B               	goto	l704
 11222  005054                     l703:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;MOTEapp.c: 1338: else
 11226                           ;MOTEapp.c: 1339: {
 11227                           ;MOTEapp.c: 1340: dataBuffer[bufferLocation] = 0x20;
 11228                           
 11229                           ; BSR set to: 0
 11230  005054  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11231  005056  0D01               	mullw	1
 11232  005058  0EB0               	movlw	low _dataBuffer
 11233  00505A  24F3               	addwf	prodl,w,c
 11234  00505C  6ED9               	movwf	fsr2l,c
 11235  00505E  0E01               	movlw	high _dataBuffer
 11236  005060  20F4               	addwfc	prodh,w,c
 11237  005062  6EDA               	movwf	fsr2h,c
 11238  005064  0E20               	movlw	32
 11239  005066  6EDF               	movwf	indf2,c
 11240                           
 11241                           ;MOTEapp.c: 1341: break;
 11242  005068  D002               	goto	u8300
 11243  00506A                     l704:
 11244                           
 11245                           ; BSR set to: 0
 11246                           
 11247                           ; BSR set to: 0
 11248  00506A  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11249  00506C  D7D6               	goto	l9726
 11250  00506E                     u8300:
 11251                           
 11252                           ; BSR set to: 0
 11253                           ;MOTEapp.c: 1342: }
 11254                           ;MOTEapp.c: 1343: }
 11255                           ;MOTEapp.c: 1344: return index;
 11256                           
 11257                           ; BSR set to: 0
 11258  00506E  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11259  005070  0012               	return	
 11260  005072                     __end_of_moteApp_addToDataBuffer:
 11261                           	opt stack 0
 11262                           tblptru	equ	0xFF8
 11263                           tblptrh	equ	0xFF7
 11264                           tblptrl	equ	0xFF6
 11265                           tablat	equ	0xFF5
 11266                           prodh	equ	0xFF4
 11267                           prodl	equ	0xFF3
 11268                           intcon	equ	0xFF2
 11269                           postinc0	equ	0xFEE
 11270                           wreg	equ	0xFE8
 11271                           indf1	equ	0xFE7
 11272                           postdec1	equ	0xFE5
 11273                           fsr1h	equ	0xFE2
 11274                           fsr1l	equ	0xFE1
 11275                           indf2	equ	0xFDF
 11276                           fsr2h	equ	0xFDA
 11277                           fsr2l	equ	0xFD9
 11278                           status	equ	0xFD8
 11279                           
 11280 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11281 ;; Defined at:
 11282 ;;		line 1307 in file "../Includes/Board/MOTEapp.c"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;  number          1    wreg     unsigned char 
 11285 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  number          1    9[BANK0 ] unsigned char 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11297 ;;      Params:         0       1       0       0       0       0       0       0       0
 11298 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11299 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11300 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11301 ;;Total ram usage:        4 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; Hardware stack levels required when called:   12
 11304 ;; This function calls:
 11305 ;;		___awmod
 11306 ;;		___lbdiv
 11307 ;; This function is called by:
 11308 ;;		_moteRunningProcess
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text26
 11313  003F32                     __ptext26:
 11314                           	opt stack 0
 11315  003F32                     _moteApp_add8bToDataBuffer:
 11316                           	opt stack 16
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;incstack = 0
 11320                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11321  003F32  0100               	movlb	0	; () banked
 11322  003F34  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11323                           
 11324                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11325  003F36  0100               	movlb	0	; () banked
 11326  003F38  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11327  003F3A  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11328  003F3C  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11329  003F3E  0E02               	movlw	2
 11330  003F40  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11331  003F42  0E00               	movlw	0
 11332  003F44  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11333  003F46  0EB0               	movlw	low _dataBuffer
 11334  003F48  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11335  003F4A  6ED9               	movwf	fsr2l,c
 11336  003F4C  0E01               	movlw	high _dataBuffer
 11337  003F4E  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11338  003F50  6EDA               	movwf	fsr2h,c
 11339  003F52  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11340  003F56  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11341  003F58  0E00               	movlw	0
 11342  003F5A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11343  003F5C  0E0A               	movlw	10
 11344  003F5E  6F62               	movwf	___awmod@divisor& (0+255),b
 11345  003F60  EC31  F026         	call	___awmod	;wreg free
 11346  003F64  0100               	movlb	0	; () banked
 11347  003F66  5160               	movf	?___awmod& (0+255),w,b
 11348  003F68  0F30               	addlw	48
 11349  003F6A  6EDF               	movwf	indf2,c
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;MOTEapp.c: 1310: number /= 10;
 11353  003F6C  0E0A               	movlw	10
 11354  003F6E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11355  003F70  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11356  003F72  EC31  F02A         	call	___lbdiv
 11357  003F76  0100               	movlb	0	; () banked
 11358  003F78  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11362  003F7A  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11363  003F7C  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11364  003F7E  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11365  003F80  0E01               	movlw	1
 11366  003F82  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11367  003F84  0E00               	movlw	0
 11368  003F86  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11369  003F88  0EB0               	movlw	low _dataBuffer
 11370  003F8A  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11371  003F8C  6ED9               	movwf	fsr2l,c
 11372  003F8E  0E01               	movlw	high _dataBuffer
 11373  003F90  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11374  003F92  6EDA               	movwf	fsr2h,c
 11375  003F94  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11376  003F98  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11377  003F9A  0E00               	movlw	0
 11378  003F9C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11379  003F9E  0E0A               	movlw	10
 11380  003FA0  6F62               	movwf	___awmod@divisor& (0+255),b
 11381  003FA2  EC31  F026         	call	___awmod	;wreg free
 11382  003FA6  0100               	movlb	0	; () banked
 11383  003FA8  5160               	movf	?___awmod& (0+255),w,b
 11384  003FAA  0F30               	addlw	48
 11385  003FAC  6EDF               	movwf	indf2,c
 11386                           
 11387                           ;MOTEapp.c: 1312: number /= 10;
 11388  003FAE  0E0A               	movlw	10
 11389  003FB0  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11390  003FB2  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11391  003FB4  EC31  F02A         	call	___lbdiv
 11392  003FB8  0100               	movlb	0	; () banked
 11393  003FBA  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;MOTEapp.c: 1313: dataBuffer[bufferLocation] = '0' + (number % 10);
 11397  003FBC  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11398  003FBE  0D01               	mullw	1
 11399  003FC0  0EB0               	movlw	low _dataBuffer
 11400  003FC2  24F3               	addwf	prodl,w,c
 11401  003FC4  6ED9               	movwf	fsr2l,c
 11402  003FC6  0E01               	movlw	high _dataBuffer
 11403  003FC8  20F4               	addwfc	prodh,w,c
 11404  003FCA  6EDA               	movwf	fsr2h,c
 11405  003FCC  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11406  003FD0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11407  003FD2  0E00               	movlw	0
 11408  003FD4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11409  003FD6  0E0A               	movlw	10
 11410  003FD8  6F62               	movwf	___awmod@divisor& (0+255),b
 11411  003FDA  EC31  F026         	call	___awmod	;wreg free
 11412  003FDE  0100               	movlb	0	; () banked
 11413  003FE0  5160               	movf	?___awmod& (0+255),w,b
 11414  003FE2  0F30               	addlw	48
 11415  003FE4  6EDF               	movwf	indf2,c
 11416                           
 11417                           ; BSR set to: 0
 11418  003FE6  0012               	return		;funcret
 11419  003FE8                     __end_of_moteApp_add8bToDataBuffer:
 11420                           	opt stack 0
 11421                           tblptru	equ	0xFF8
 11422                           tblptrh	equ	0xFF7
 11423                           tblptrl	equ	0xFF6
 11424                           tablat	equ	0xFF5
 11425                           prodh	equ	0xFF4
 11426                           prodl	equ	0xFF3
 11427                           intcon	equ	0xFF2
 11428                           postinc0	equ	0xFEE
 11429                           wreg	equ	0xFE8
 11430                           indf1	equ	0xFE7
 11431                           postdec1	equ	0xFE5
 11432                           fsr1h	equ	0xFE2
 11433                           fsr1l	equ	0xFE1
 11434                           indf2	equ	0xFDF
 11435                           fsr2h	equ	0xFDA
 11436                           fsr2l	equ	0xFD9
 11437                           status	equ	0xFD8
 11438                           
 11439 ;; *************** function ___lbdiv *****************
 11440 ;; Defined at:
 11441 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  dividend        1    wreg     unsigned char 
 11444 ;;  divisor         1    0[BANK0 ] unsigned char 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  dividend        1    1[BANK0 ] unsigned char 
 11447 ;;  quotient        1    3[BANK0 ] unsigned char 
 11448 ;;  counter         1    2[BANK0 ] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      unsigned char 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11458 ;;      Params:         0       1       0       0       0       0       0       0       0
 11459 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11461 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11462 ;;Total ram usage:        4 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:   11
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_moteApp_add8bToDataBuffer
 11469 ;;		_oled_putUint8
 11470 ;;		_oled_putint8
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text27
 11475  005462                     __ptext27:
 11476                           	opt stack 0
 11477  005462                     ___lbdiv:
 11478                           	opt stack 16
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;incstack = 0
 11482                           ;___lbdiv@dividend stored from wreg
 11483  005462  0100               	movlb	0	; () banked
 11484  005464  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11485  005466  0E00               	movlw	0
 11486  005468  0100               	movlb	0	; () banked
 11487  00546A  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11488                           
 11489                           ; BSR set to: 0
 11490  00546C  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11491  00546E  B4D8               	btfsc	status,2,c
 11492  005470  D015               	goto	l2586
 11493                           
 11494                           ; BSR set to: 0
 11495  005472  0E01               	movlw	1
 11496  005474  6F62               	movwf	___lbdiv@counter& (0+255),b
 11497  005476  D003               	goto	l2581
 11498  005478                     
 11499                           ; BSR set to: 0
 11500                           
 11501                           ; BSR set to: 0
 11502  005478  90D8               	bcf	status,0,c
 11503  00547A  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11504                           
 11505                           ; BSR set to: 0
 11506  00547C  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11507  00547E                     l2581:
 11508                           
 11509                           ; BSR set to: 0
 11510                           
 11511                           ; BSR set to: 0
 11512  00547E  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11513  005480  D7FB               	goto	l2582
 11514  005482                     u7830:
 11515                           
 11516                           ; BSR set to: 0
 11517                           
 11518                           ; BSR set to: 0
 11519                           
 11520                           ; BSR set to: 0
 11521  005482  90D8               	bcf	status,0,c
 11522  005484  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11523  005486  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11524  005488  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11525  00548A  A0D8               	btfss	status,0,c
 11526  00548C  D003               	goto	l2585
 11527                           
 11528                           ; BSR set to: 0
 11529  00548E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11530  005490  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11531                           
 11532                           ; BSR set to: 0
 11533  005492  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11534  005494                     l2585:
 11535                           
 11536                           ; BSR set to: 0
 11537                           
 11538                           ; BSR set to: 0
 11539  005494  90D8               	bcf	status,0,c
 11540  005496  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11541                           
 11542                           ; BSR set to: 0
 11543  005498  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11544  00549A  D7F3               	goto	u7830
 11545  00549C                     l2586:
 11546                           
 11547                           ; BSR set to: 0
 11548                           
 11549                           ; BSR set to: 0
 11550                           
 11551                           ; BSR set to: 0
 11552  00549C  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11553  00549E  0012               	return	
 11554  0054A0                     __end_of___lbdiv:
 11555                           	opt stack 0
 11556                           tblptru	equ	0xFF8
 11557                           tblptrh	equ	0xFF7
 11558                           tblptrl	equ	0xFF6
 11559                           tablat	equ	0xFF5
 11560                           prodh	equ	0xFF4
 11561                           prodl	equ	0xFF3
 11562                           intcon	equ	0xFF2
 11563                           postinc0	equ	0xFEE
 11564                           wreg	equ	0xFE8
 11565                           indf1	equ	0xFE7
 11566                           postdec1	equ	0xFE5
 11567                           fsr1h	equ	0xFE2
 11568                           fsr1l	equ	0xFE1
 11569                           indf2	equ	0xFDF
 11570                           fsr2h	equ	0xFDA
 11571                           fsr2l	equ	0xFD9
 11572                           status	equ	0xFD8
 11573                           
 11574 ;; *************** function ___awmod *****************
 11575 ;; Defined at:
 11576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  dividend        2    0[BANK0 ] int 
 11579 ;;  divisor         2    2[BANK0 ] int 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  sign            1    5[BANK0 ] unsigned char 
 11582 ;;  counter         1    4[BANK0 ] unsigned char 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  2    0[BANK0 ] int 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11592 ;;      Params:         0       4       0       0       0       0       0       0       0
 11593 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11595 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11596 ;;Total ram usage:        6 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:   11
 11599 ;; This function calls:
 11600 ;;		Nothing
 11601 ;; This function is called by:
 11602 ;;		_moteApp_add8bToDataBuffer
 11603 ;;		_oled_putUint8
 11604 ;;		_oled_putint8
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           	psect	text28
 11609  004C62                     __ptext28:
 11610                           	opt stack 0
 11611  004C62                     ___awmod:
 11612                           	opt stack 16
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;incstack = 0
 11616  004C62  0E00               	movlw	0
 11617  004C64  0100               	movlb	0	; () banked
 11618  004C66  6F65               	movwf	___awmod@sign& (0+255),b
 11619                           
 11620                           ; BSR set to: 0
 11621  004C68  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11622  004C6A  D006               	goto	l2432
 11623                           
 11624                           ; BSR set to: 0
 11625  004C6C  6D60               	negf	___awmod@dividend& (0+255),b
 11626  004C6E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11627  004C70  B0D8               	btfsc	status,0,c
 11628  004C72  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11629                           
 11630                           ; BSR set to: 0
 11631  004C74  0E01               	movlw	1
 11632  004C76  6F65               	movwf	___awmod@sign& (0+255),b
 11633  004C78                     l2432:
 11634                           
 11635                           ; BSR set to: 0
 11636                           
 11637                           ; BSR set to: 0
 11638  004C78  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11639  004C7A  D004               	goto	l2433
 11640                           
 11641                           ; BSR set to: 0
 11642  004C7C  6D62               	negf	___awmod@divisor& (0+255),b
 11643  004C7E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11644  004C80  B0D8               	btfsc	status,0,c
 11645  004C82  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11646  004C84                     l2433:
 11647                           
 11648                           ; BSR set to: 0
 11649                           
 11650                           ; BSR set to: 0
 11651  004C84  5162               	movf	___awmod@divisor& (0+255),w,b
 11652  004C86  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11653  004C88  B4D8               	btfsc	status,2,c
 11654  004C8A  D018               	goto	l2440
 11655                           
 11656                           ; BSR set to: 0
 11657  004C8C  0E01               	movlw	1
 11658  004C8E  6F64               	movwf	___awmod@counter& (0+255),b
 11659  004C90  D004               	goto	l2435
 11660  004C92                     
 11661                           ; BSR set to: 0
 11662                           
 11663                           ; BSR set to: 0
 11664  004C92  90D8               	bcf	status,0,c
 11665  004C94  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11666  004C96  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11667  004C98  2B64               	incf	___awmod@counter& (0+255),f,b
 11668  004C9A                     l2435:
 11669                           
 11670                           ; BSR set to: 0
 11671                           
 11672                           ; BSR set to: 0
 11673  004C9A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11674  004C9C  D7FA               	goto	l2436
 11675  004C9E                     u7720:
 11676                           
 11677                           ; BSR set to: 0
 11678                           
 11679                           ; BSR set to: 0
 11680                           
 11681                           ; BSR set to: 0
 11682  004C9E  5162               	movf	___awmod@divisor& (0+255),w,b
 11683  004CA0  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11684  004CA2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11685  004CA4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11686  004CA6  A0D8               	btfss	status,0,c
 11687  004CA8  D004               	goto	l2439
 11688                           
 11689                           ; BSR set to: 0
 11690  004CAA  5162               	movf	___awmod@divisor& (0+255),w,b
 11691  004CAC  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11692  004CAE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11693  004CB0  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11694  004CB2                     l2439:
 11695                           
 11696                           ; BSR set to: 0
 11697                           
 11698                           ; BSR set to: 0
 11699  004CB2  90D8               	bcf	status,0,c
 11700  004CB4  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11701  004CB6  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11702                           
 11703                           ; BSR set to: 0
 11704  004CB8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11705  004CBA  D7F1               	goto	u7720
 11706  004CBC                     l2440:
 11707                           
 11708                           ; BSR set to: 0
 11709                           
 11710                           ; BSR set to: 0
 11711                           
 11712                           ; BSR set to: 0
 11713  004CBC  5165               	movf	___awmod@sign& (0+255),w,b
 11714  004CBE  B4D8               	btfsc	status,2,c
 11715  004CC0  D004               	goto	l2441
 11716                           
 11717                           ; BSR set to: 0
 11718  004CC2  6D60               	negf	___awmod@dividend& (0+255),b
 11719  004CC4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11720  004CC6  B0D8               	btfsc	status,0,c
 11721  004CC8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11722  004CCA                     l2441:
 11723                           
 11724                           ; BSR set to: 0
 11725                           
 11726                           ; BSR set to: 0
 11727  004CCA  C060  F060         	movff	___awmod@dividend,?___awmod
 11728  004CCE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11729  004CD2  0012               	return	
 11730  004CD4                     __end_of___awmod:
 11731                           	opt stack 0
 11732                           tblptru	equ	0xFF8
 11733                           tblptrh	equ	0xFF7
 11734                           tblptrl	equ	0xFF6
 11735                           tablat	equ	0xFF5
 11736                           prodh	equ	0xFF4
 11737                           prodl	equ	0xFF3
 11738                           intcon	equ	0xFF2
 11739                           postinc0	equ	0xFEE
 11740                           wreg	equ	0xFE8
 11741                           indf1	equ	0xFE7
 11742                           postdec1	equ	0xFE5
 11743                           fsr1h	equ	0xFE2
 11744                           fsr1l	equ	0xFE1
 11745                           indf2	equ	0xFDF
 11746                           fsr2h	equ	0xFDA
 11747                           fsr2l	equ	0xFD9
 11748                           status	equ	0xFD8
 11749                           
 11750 ;; *************** function _moteApp_GoToSleep *****************
 11751 ;; Defined at:
 11752 ;;		line 1175 in file "../Includes/Board/MOTEapp.c"
 11753 ;; Parameters:    Size  Location     Type
 11754 ;;		None
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;  status          1   14[BANK0 ] unsigned char 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      unsigned char 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0
 11767 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11769 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11770 ;;Total ram usage:        1 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:   17
 11773 ;; This function calls:
 11774 ;;		_EUSART_FlushBuffer
 11775 ;;		_PIN_MANAGER_Initialize
 11776 ;;		_moduleResync
 11777 ;;		_moduleSleep
 11778 ;;		_moteApp_delayms
 11779 ;;		_oled_displayOff
 11780 ;;		_oled_init
 11781 ;; This function is called by:
 11782 ;;		_moteRunningProcess
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text29
 11787  003778                     __ptext29:
 11788                           	opt stack 0
 11789  003778                     _moteApp_GoToSleep:
 11790                           	opt stack 11
 11791                           
 11792                           ;MOTEapp.c: 1177: uint8_t status = 0;
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;incstack = 0
 11796  003778  0E00               	movlw	0
 11797  00377A  0100               	movlb	0	; () banked
 11798  00377C  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11799  00377E                     
 11800                           ; BSR set to: 0
 11801  00377E  A081               	btfss	3969,0,c	;volatile
 11802  003780  D7FE               	goto	l666
 11803                           
 11804                           ;MOTEapp.c: 1179: moduleSleep();
 11805  003782  EC74  F02C         	call	_moduleSleep	;wreg free
 11806                           
 11807                           ;MOTEapp.c: 1180: oled_displayOff(1);
 11808  003786  0E01               	movlw	1
 11809  003788  EC17  F02E         	call	_oled_displayOff
 11810                           
 11811                           ;MOTEapp.c: 1181: ADCON0bits.ADON = 0;
 11812  00378C  90C2               	bcf	4034,0,c	;volatile
 11813                           
 11814                           ;MOTEapp.c: 1182: INTCONbits.GIE = 0;
 11815  00378E  9EF2               	bcf	intcon,7,c	;volatile
 11816                           
 11817                           ;MOTEapp.c: 1183: GIE = 0;
 11818  003790  9EF2               	bcf	intcon,7,c	;volatile
 11819                           
 11820                           ;MOTEapp.c: 1184: PEIE = 0;
 11821  003792  9CF2               	bcf	intcon,6,c	;volatile
 11822                           
 11823                           ;MOTEapp.c: 1186: LATEbits.LATE2 = 0;
 11824  003794  948D               	bcf	3981,2,c	;volatile
 11825                           
 11826                           ;MOTEapp.c: 1187: PIE2bits.TMR3IE = 0;
 11827  003796  92A0               	bcf	4000,1,c	;volatile
 11828                           
 11829                           ;MOTEapp.c: 1189: ANSELAbits.ANSA0 = 1;
 11830  003798  010F               	movlb	15	; () banked
 11831  00379A  815B               	bsf	91,0,b	;volatile
 11832                           
 11833                           ; BSR set to: 15
 11834                           ;MOTEapp.c: 1191: PIE2bits.C1IE = 1;
 11835  00379C  8CA0               	bsf	4000,6,c	;volatile
 11836                           
 11837                           ; BSR set to: 15
 11838                           ;MOTEapp.c: 1192: INTCON3bits.INT1IE = 1;
 11839  00379E  86F0               	bsf	intcon3,3,c	;volatile
 11840                           
 11841                           ; BSR set to: 15
 11842                           ;MOTEapp.c: 1193: INTCONbits.INT0IE = 1;
 11843  0037A0  88F2               	bsf	intcon,4,c	;volatile
 11844                           
 11845                           ; BSR set to: 15
 11846                           ;MOTEapp.c: 1194: IOCCbits.IOCC2 = 1;
 11847  0037A2  8487               	bsf	3975,2,c	;volatile
 11848                           
 11849                           ; BSR set to: 15
 11850                           ;MOTEapp.c: 1197: status = PORTBbits.RB1;
 11851  0037A4  0E00               	movlw	0
 11852  0037A6  B281               	btfsc	3969,1,c	;volatile
 11853  0037A8  0E01               	movlw	1
 11854  0037AA  0100               	movlb	0	; () banked
 11855  0037AC  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;MOTEapp.c: 1198: status = PORTBbits.RB0;
 11859  0037AE  0E00               	movlw	0
 11860  0037B0  B081               	btfsc	3969,0,c	;volatile
 11861  0037B2  0E01               	movlw	1
 11862  0037B4  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;MOTEapp.c: 1199: status = PORTCbits.RC2;
 11866  0037B6  0E00               	movlw	0
 11867  0037B8  B482               	btfsc	3970,2,c	;volatile
 11868  0037BA  0E01               	movlw	1
 11869  0037BC  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;MOTEapp.c: 1201: if (periodicState)
 11873  0037BE  51FA               	movf	_periodicState& (0+255),w,b
 11874  0037C0  A4D8               	btfss	status,2,c
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;MOTEapp.c: 1202: {
 11878                           ;MOTEapp.c: 1203: WDTCONbits.SWDTEN = 1;
 11879  0037C2  80D1               	bsf	4049,0,c	;volatile
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;MOTEapp.c: 1204: }
 11883                           ;MOTEapp.c: 1207: INTCONbits.INT0IF = 0;
 11884  0037C4  92F2               	bcf	intcon,1,c	;volatile
 11885                           
 11886                           ;MOTEapp.c: 1208: INTCON3bits.INT1IF = 0;
 11887  0037C6  90F0               	bcf	intcon3,0,c	;volatile
 11888                           
 11889                           ;MOTEapp.c: 1209: PIR2bits.C1IF = 0;
 11890  0037C8  9CA1               	bcf	4001,6,c	;volatile
 11891                           
 11892                           ;MOTEapp.c: 1210: __nop();
 11893  0037CA  F000               	nop	
 11894  0037CC  0003               	sleep		;# 
 11895                           
 11896                           ;MOTEapp.c: 1212: __nop();
 11897  0037CE  F000               	nop	
 11898                           
 11899                           ;MOTEapp.c: 1214: WDTCONbits.SWDTEN = 0;
 11900  0037D0  90D1               	bcf	4049,0,c	;volatile
 11901                           
 11902                           ;MOTEapp.c: 1215: EUSART_FlushBuffer();
 11903  0037D2  ECCF  F029         	call	_EUSART_FlushBuffer	;wreg free
 11904                           
 11905                           ;MOTEapp.c: 1218: INTCON3bits.INT1IE = 0;
 11906  0037D6  96F0               	bcf	intcon3,3,c	;volatile
 11907                           
 11908                           ;MOTEapp.c: 1219: INTCONbits.INT0IE = 0;
 11909  0037D8  98F2               	bcf	intcon,4,c	;volatile
 11910                           
 11911                           ;MOTEapp.c: 1220: IOCCbits.IOCC2 = 0;
 11912  0037DA  9487               	bcf	3975,2,c	;volatile
 11913                           
 11914                           ;MOTEapp.c: 1221: PIE2bits.C1IE = 0;
 11915  0037DC  9CA0               	bcf	4000,6,c	;volatile
 11916                           
 11917                           ;MOTEapp.c: 1222: GIE = 1;
 11918  0037DE  8EF2               	bsf	intcon,7,c	;volatile
 11919                           
 11920                           ;MOTEapp.c: 1224: PIN_MANAGER_Initialize();
 11921  0037E0  ECED  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 11922                           
 11923                           ;MOTEapp.c: 1226: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 11924  0037E4  A2F2               	btfss	intcon,1,c	;volatile
 11925  0037E6  B0F0               	btfsc	intcon3,0,c	;volatile
 11926  0037E8  D002               	goto	u8400
 11927  0037EA  ACA1               	btfss	4001,6,c	;volatile
 11928  0037EC  D011               	goto	l669
 11929  0037EE                     u8400:
 11930                           
 11931                           ;MOTEapp.c: 1227: {
 11932                           ;MOTEapp.c: 1229: INTCONbits.INT0IF = 0;
 11933  0037EE  92F2               	bcf	intcon,1,c	;volatile
 11934                           
 11935                           ;MOTEapp.c: 1230: INTCON3bits.INT1IF = 0;
 11936  0037F0  90F0               	bcf	intcon3,0,c	;volatile
 11937                           
 11938                           ;MOTEapp.c: 1231: status = 1;
 11939  0037F2  0E01               	movlw	1
 11940  0037F4  0100               	movlb	0	; () banked
 11941  0037F6  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;MOTEapp.c: 1234: oled_displayOff(0);
 11945  0037F8  0E00               	movlw	0
 11946  0037FA  EC17  F02E         	call	_oled_displayOff
 11947                           
 11948                           ;MOTEapp.c: 1235: oled_init();
 11949  0037FE  EC65  F02B         	call	_oled_init	;wreg free
 11950                           
 11951                           ;MOTEapp.c: 1237: LATEbits.LATE2 = 1;
 11952  003802  848D               	bsf	3981,2,c	;volatile
 11953                           
 11954                           ;MOTEapp.c: 1238: TMR3H = 0xFB;
 11955  003804  0EFB               	movlw	251
 11956  003806  6EB3               	movwf	4019,c	;volatile
 11957                           
 11958                           ;MOTEapp.c: 1239: TMR3L = 0x50;
 11959  003808  0E50               	movlw	80
 11960  00380A  6EB2               	movwf	4018,c	;volatile
 11961                           
 11962                           ;MOTEapp.c: 1240: PIE2bits.TMR3IE = 1;
 11963  00380C  82A0               	bsf	4000,1,c	;volatile
 11964                           
 11965                           ;MOTEapp.c: 1241: }
 11966  00380E  D007               	goto	l672
 11967  003810                     l669:
 11968                           
 11969                           ;MOTEapp.c: 1242: else
 11970                           ;MOTEapp.c: 1243: {
 11971                           ;MOTEapp.c: 1244: secTicker = 10;
 11972  003810  0E0A               	movlw	10
 11973  003812  0100               	movlb	0	; () banked
 11974  003814  6FF0               	movwf	_secTicker& (0+255),b
 11975                           
 11976                           ;MOTEapp.c: 1245: status = 0;
 11977  003816  0E00               	movlw	0
 11978  003818  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;MOTEapp.c: 1247: LATEbits.LATE2 = 0;
 11982  00381A  948D               	bcf	3981,2,c	;volatile
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;MOTEapp.c: 1248: PIE2bits.TMR3IE = 0;
 11986  00381C  92A0               	bcf	4000,1,c	;volatile
 11987  00381E                     l672:
 11988                           
 11989                           ;MOTEapp.c: 1249: }
 11990                           ;MOTEapp.c: 1250: ANSELAbits.ANSA0 = 0;
 11991                           
 11992                           ; BSR set to: 0
 11993  00381E  010F               	movlb	15	; () banked
 11994  003820  915B               	bcf	91,0,b	;volatile
 11995                           
 11996                           ; BSR set to: 15
 11997                           ;MOTEapp.c: 1252: moduleResync();
 11998  003822  ECFB  F023         	call	_moduleResync	;wreg free
 11999                           
 12000                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 12001  003826  0E00               	movlw	0
 12002  003828  0100               	movlb	0	; () banked
 12003  00382A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12004  00382C  0E28               	movlw	40
 12005  00382E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12006  003830  EC33  F02B         	call	_moteApp_delayms	;wreg free
 12007                           
 12008                           ;MOTEapp.c: 1254: moduleResync();
 12009  003834  ECFB  F023         	call	_moduleResync	;wreg free
 12010                           
 12011                           ;MOTEapp.c: 1255: moteApp_delayms(40);
 12012  003838  0E00               	movlw	0
 12013  00383A  0100               	movlb	0	; () banked
 12014  00383C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12015  00383E  0E28               	movlw	40
 12016  003840  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12017  003842  EC33  F02B         	call	_moteApp_delayms	;wreg free
 12018                           
 12019                           ;MOTEapp.c: 1256: return status;
 12020  003846  0100               	movlb	0	; () banked
 12021  003848  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12022  00384A  0012               	return	
 12023  00384C                     __end_of_moteApp_GoToSleep:
 12024                           	opt stack 0
 12025                           tblptru	equ	0xFF8
 12026                           tblptrh	equ	0xFF7
 12027                           tblptrl	equ	0xFF6
 12028                           tablat	equ	0xFF5
 12029                           prodh	equ	0xFF4
 12030                           prodl	equ	0xFF3
 12031                           intcon	equ	0xFF2
 12032                           intcon3	equ	0xFF0
 12033                           postinc0	equ	0xFEE
 12034                           wreg	equ	0xFE8
 12035                           indf1	equ	0xFE7
 12036                           postdec1	equ	0xFE5
 12037                           fsr1h	equ	0xFE2
 12038                           fsr1l	equ	0xFE1
 12039                           indf2	equ	0xFDF
 12040                           fsr2h	equ	0xFDA
 12041                           fsr2l	equ	0xFD9
 12042                           status	equ	0xFD8
 12043                           
 12044 ;; *************** function _oled_init *****************
 12045 ;; Defined at:
 12046 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      void 
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:   16
 12067 ;; This function calls:
 12068 ;;		_oled_clear
 12069 ;;		_oled_devInit
 12070 ;;		_oled_setDisplay
 12071 ;;		_oled_setFont
 12072 ;; This function is called by:
 12073 ;;		_main
 12074 ;;		_moteApp_GoToSleep
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           	psect	text30
 12079  0056CA                     __ptext30:
 12080                           	opt stack 0
 12081  0056CA                     _oled_init:
 12082                           	opt stack 14
 12083                           
 12084                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;incstack = 0
 12088  0056CA  9496               	bcf	3990,2,c	;volatile
 12089                           
 12090                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12091  0056CC  848D               	bsf	3981,2,c	;volatile
 12092                           
 12093                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12094  0056CE  9493               	bcf	3987,2,c	;volatile
 12095                           
 12096                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12097  0056D0  9693               	bcf	3987,3,c	;volatile
 12098                           
 12099                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12100  0056D2  9893               	bcf	3987,4,c	;volatile
 12101                           
 12102                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12103  0056D4  9094               	bcf	3988,0,c	;volatile
 12104                           
 12105                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12106  0056D6  9294               	bcf	3988,1,c	;volatile
 12107                           
 12108                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12109  0056D8  868A               	bsf	3978,3,c	;volatile
 12110                           
 12111                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12112  0056DA  988A               	bcf	3978,4,c	;volatile
 12113                           
 12114                           ;SSD1306oLED.c: 381: oled_devInit();
 12115  0056DC  EC01  F025         	call	_oled_devInit	;wreg free
 12116                           
 12117                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12118  0056E0  0E01               	movlw	1
 12119  0056E2  EC60  F02C         	call	_oled_setDisplay
 12120                           
 12121                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12122  0056E6  0EF7               	movlw	low _OledFont0
 12123  0056E8  0100               	movlb	0	; () banked
 12124  0056EA  6F60               	movwf	oled_setFont@font& (0+255),b
 12125  0056EC  0E75               	movlw	high _OledFont0
 12126  0056EE  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12127  0056F0  EC78  F02D         	call	_oled_setFont	;wreg free
 12128                           
 12129                           ;SSD1306oLED.c: 385: oled_clear();
 12130  0056F4  EC1A  F02D         	call	_oled_clear	;wreg free
 12131  0056F8  0012               	return		;funcret
 12132  0056FA                     __end_of_oled_init:
 12133                           	opt stack 0
 12134                           tblptru	equ	0xFF8
 12135                           tblptrh	equ	0xFF7
 12136                           tblptrl	equ	0xFF6
 12137                           tablat	equ	0xFF5
 12138                           prodh	equ	0xFF4
 12139                           prodl	equ	0xFF3
 12140                           intcon	equ	0xFF2
 12141                           intcon3	equ	0xFF0
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           indf1	equ	0xFE7
 12145                           postdec1	equ	0xFE5
 12146                           fsr1h	equ	0xFE2
 12147                           fsr1l	equ	0xFE1
 12148                           indf2	equ	0xFDF
 12149                           fsr2h	equ	0xFDA
 12150                           fsr2l	equ	0xFD9
 12151                           status	equ	0xFD8
 12152                           
 12153 ;; *************** function _oled_setFont *****************
 12154 ;; Defined at:
 12155 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12158 ;;		 -> OledFont0(768), 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      void 
 12163 ;; Registers used:
 12164 ;;		wreg, status,2, status,0
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12170 ;;      Params:         0       2       0       0       0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12173 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12174 ;;Total ram usage:        2 bytes
 12175 ;; Hardware stack levels used:    1
 12176 ;; Hardware stack levels required when called:   11
 12177 ;; This function calls:
 12178 ;;		Nothing
 12179 ;; This function is called by:
 12180 ;;		_oled_init
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text31
 12185  005AF0                     __ptext31:
 12186                           	opt stack 0
 12187  005AF0                     _oled_setFont:
 12188                           	opt stack 18
 12189                           
 12190                           ;SSD1306oLED.c: 258: if(font!=0)
 12191                           
 12192                           ;incstack = 0
 12193  005AF0  0100               	movlb	0	; () banked
 12194  005AF2  5160               	movf	oled_setFont@font& (0+255),w,b
 12195  005AF4  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12196  005AF6  B4D8               	btfsc	status,2,c
 12197  005AF8  0012               	return	
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;SSD1306oLED.c: 259: {
 12201                           ;SSD1306oLED.c: 260: selectedFont=font;
 12202  005AFA  C060  F1E8         	movff	oled_setFont@font,_selectedFont
 12203  005AFE  C061  F1E9         	movff	oled_setFont@font+1,_selectedFont+1
 12204  005B02  0012               	return	
 12205  005B04                     __end_of_oled_setFont:
 12206                           	opt stack 0
 12207                           tblptru	equ	0xFF8
 12208                           tblptrh	equ	0xFF7
 12209                           tblptrl	equ	0xFF6
 12210                           tablat	equ	0xFF5
 12211                           prodh	equ	0xFF4
 12212                           prodl	equ	0xFF3
 12213                           intcon	equ	0xFF2
 12214                           intcon3	equ	0xFF0
 12215                           postinc0	equ	0xFEE
 12216                           wreg	equ	0xFE8
 12217                           indf1	equ	0xFE7
 12218                           postdec1	equ	0xFE5
 12219                           fsr1h	equ	0xFE2
 12220                           fsr1l	equ	0xFE1
 12221                           indf2	equ	0xFDF
 12222                           fsr2h	equ	0xFDA
 12223                           fsr2l	equ	0xFD9
 12224                           status	equ	0xFD8
 12225                           
 12226 ;; *************** function _oled_setDisplay *****************
 12227 ;; Defined at:
 12228 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  displayType     1    wreg     enum E5868
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;  displayType     1    1[BANK0 ] enum E5868
 12233 ;; Return value:  Size  Location     Type
 12234 ;;                  1    wreg      void 
 12235 ;; Registers used:
 12236 ;;		wreg, status,2, cstack
 12237 ;; Tracked objects:
 12238 ;;		On entry : 0/0
 12239 ;;		On exit  : 0/0
 12240 ;;		Unchanged: 0/0
 12241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12242 ;;      Params:         0       0       0       0       0       0       0       0       0
 12243 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12245 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12246 ;;Total ram usage:        1 bytes
 12247 ;; Hardware stack levels used:    1
 12248 ;; Hardware stack levels required when called:   12
 12249 ;; This function calls:
 12250 ;;		_oled_writeCommand
 12251 ;; This function is called by:
 12252 ;;		_oled_init
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text32
 12257  0058C0                     __ptext32:
 12258                           	opt stack 0
 12259  0058C0                     _oled_setDisplay:
 12260                           	opt stack 17
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;incstack = 0
 12264                           ;oled_setDisplay@displayType stored from wreg
 12265  0058C0  0100               	movlb	0	; () banked
 12266  0058C2  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12267                           
 12268                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12269  0058C4  0100               	movlb	0	; () banked
 12270  0058C6  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12271  0058C8  A4D8               	btfss	status,2,c
 12272  0058CA  D007               	goto	l1066
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;SSD1306oLED.c: 414: {
 12276                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12277  0058CC  0EA0               	movlw	160
 12278  0058CE  EC4C  F02D         	call	_oled_writeCommand
 12279                           
 12280                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12281  0058D2  0EC8               	movlw	200
 12282  0058D4  EC4C  F02D         	call	_oled_writeCommand
 12283                           
 12284                           ;SSD1306oLED.c: 417: }
 12285  0058D8  0012               	return	
 12286  0058DA                     l1066:
 12287                           
 12288                           ;SSD1306oLED.c: 418: else
 12289                           ;SSD1306oLED.c: 419: {
 12290                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12291  0058DA  0EA1               	movlw	161
 12292  0058DC  EC4C  F02D         	call	_oled_writeCommand
 12293                           
 12294                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12295  0058E0  0EC0               	movlw	192
 12296  0058E2  EC4C  F02D         	call	_oled_writeCommand
 12297  0058E6  0012               	return	
 12298  0058E8                     __end_of_oled_setDisplay:
 12299                           	opt stack 0
 12300                           tblptru	equ	0xFF8
 12301                           tblptrh	equ	0xFF7
 12302                           tblptrl	equ	0xFF6
 12303                           tablat	equ	0xFF5
 12304                           prodh	equ	0xFF4
 12305                           prodl	equ	0xFF3
 12306                           intcon	equ	0xFF2
 12307                           intcon3	equ	0xFF0
 12308                           postinc0	equ	0xFEE
 12309                           wreg	equ	0xFE8
 12310                           indf1	equ	0xFE7
 12311                           postdec1	equ	0xFE5
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           fsr2h	equ	0xFDA
 12316                           fsr2l	equ	0xFD9
 12317                           status	equ	0xFD8
 12318                           
 12319 ;; *************** function _oled_devInit *****************
 12320 ;; Defined at:
 12321 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;		None
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  1    wreg      void 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12337 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12338 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12339 ;;Total ram usage:        1 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:   13
 12342 ;; This function calls:
 12343 ;;		_oled_initialDispayLine
 12344 ;;		_oled_powerControl
 12345 ;;		_oled_regulorResistorSelect
 12346 ;;		_oled_setContrastControlRegister
 12347 ;;		_oled_writeCommand
 12348 ;; This function is called by:
 12349 ;;		_oled_init
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	text33
 12354  004A02                     __ptext33:
 12355                           	opt stack 0
 12356  004A02                     _oled_devInit:
 12357                           	opt stack 16
 12358                           
 12359                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12360                           
 12361                           ;incstack = 0
 12362  004A02  0EE2               	movlw	226
 12363  004A04  EC4C  F02D         	call	_oled_writeCommand
 12364                           
 12365                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12366  004A08  848A               	bsf	3978,2,c	;volatile
 12367                           
 12368                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12369  004A0A  0E04               	movlw	4
 12370  004A0C  0100               	movlb	0	; () banked
 12371  004A0E  6F62               	movwf	??_oled_devInit& (0+255),b
 12372  004A10  0E1C               	movlw	28
 12373  004A12                     u11347:
 12374  004A12  2EE8               	decfsz	wreg,f,c
 12375  004A14  D7FE               	bra	u11347
 12376  004A16  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12377  004A18  D7FC               	bra	u11347
 12378  004A1A  F000               	nop	
 12379                           
 12380                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12381  004A1C  948A               	bcf	3978,2,c	;volatile
 12382                           
 12383                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12384  004A1E  0E20               	movlw	32
 12385  004A20  0100               	movlb	0	; () banked
 12386  004A22  6F62               	movwf	??_oled_devInit& (0+255),b
 12387  004A24  0E29               	movlw	41
 12388  004A26                     u11357:
 12389  004A26  2EE8               	decfsz	wreg,f,c
 12390  004A28  D7FE               	bra	u11357
 12391  004A2A  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12392  004A2C  D7FC               	bra	u11357
 12393  004A2E  D000               	nop2	
 12394                           
 12395                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12396  004A30  848A               	bsf	3978,2,c	;volatile
 12397                           
 12398                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12399  004A32  0E10               	movlw	16
 12400  004A34  0100               	movlb	0	; () banked
 12401  004A36  6F62               	movwf	??_oled_devInit& (0+255),b
 12402  004A38  0E94               	movlw	148
 12403  004A3A                     u11367:
 12404  004A3A  2EE8               	decfsz	wreg,f,c
 12405  004A3C  D7FE               	bra	u11367
 12406  004A3E  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12407  004A40  D7FC               	bra	u11367
 12408  004A42  F000               	nop	
 12409                           
 12410                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 12411  004A44  0EA1               	movlw	161
 12412  004A46  EC4C  F02D         	call	_oled_writeCommand
 12413                           
 12414                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 12415  004A4A  0EC0               	movlw	192
 12416  004A4C  EC4C  F02D         	call	_oled_writeCommand
 12417                           
 12418                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 12419  004A50  0EA3               	movlw	163
 12420  004A52  EC4C  F02D         	call	_oled_writeCommand
 12421                           
 12422                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 12423  004A56  0E07               	movlw	7
 12424  004A58  ECC5  F02D         	call	_oled_powerControl
 12425                           
 12426                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 12427  004A5C  0E05               	movlw	5
 12428  004A5E  ECBD  F02D         	call	_oled_regulorResistorSelect
 12429                           
 12430                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 12431  004A62  505E               	movf	_Contrast_level,w,c
 12432  004A64  EC82  F02D         	call	_oled_setContrastControlRegister
 12433                           
 12434                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 12435  004A68  0E00               	movlw	0
 12436  004A6A  ECCD  F02D         	call	_oled_initialDispayLine
 12437                           
 12438                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 12439  004A6E  0EF8               	movlw	248
 12440  004A70  EC4C  F02D         	call	_oled_writeCommand
 12441                           
 12442                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 12443  004A74  0E00               	movlw	0
 12444  004A76  EC4C  F02D         	call	_oled_writeCommand
 12445                           
 12446                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 12447  004A7A  0EAF               	movlw	175
 12448  004A7C  EC4C  F02D         	call	_oled_writeCommand
 12449  004A80  0012               	return		;funcret
 12450  004A82                     __end_of_oled_devInit:
 12451                           	opt stack 0
 12452                           tblptru	equ	0xFF8
 12453                           tblptrh	equ	0xFF7
 12454                           tblptrl	equ	0xFF6
 12455                           tablat	equ	0xFF5
 12456                           prodh	equ	0xFF4
 12457                           prodl	equ	0xFF3
 12458                           intcon	equ	0xFF2
 12459                           intcon3	equ	0xFF0
 12460                           postinc0	equ	0xFEE
 12461                           wreg	equ	0xFE8
 12462                           indf1	equ	0xFE7
 12463                           postdec1	equ	0xFE5
 12464                           fsr1h	equ	0xFE2
 12465                           fsr1l	equ	0xFE1
 12466                           indf2	equ	0xFDF
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
 12470                           
 12471 ;; *************** function _oled_setContrastControlRegister *****************
 12472 ;; Defined at:
 12473 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  mod             1    wreg     unsigned char 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  mod             1    1[BANK0 ] unsigned char 
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0
 12488 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12490 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12491 ;;Total ram usage:        1 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   12
 12494 ;; This function calls:
 12495 ;;		_oled_writeCommand
 12496 ;; This function is called by:
 12497 ;;		_oled_devInit
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text34
 12502  005B04                     __ptext34:
 12503                           	opt stack 0
 12504  005B04                     _oled_setContrastControlRegister:
 12505                           	opt stack 16
 12506                           
 12507                           ;incstack = 0
 12508                           ;oled_setContrastControlRegister@mod stored from wreg
 12509  005B04  0100               	movlb	0	; () banked
 12510  005B06  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12511                           
 12512                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 12513  005B08  0E81               	movlw	129
 12514  005B0A  EC4C  F02D         	call	_oled_writeCommand
 12515                           
 12516                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 12517  005B0E  0100               	movlb	0	; () banked
 12518  005B10  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12519  005B12  EC4C  F02D         	call	_oled_writeCommand
 12520  005B16  0012               	return	
 12521  005B18                     __end_of_oled_setContrastControlRegister:
 12522                           	opt stack 0
 12523                           tblptru	equ	0xFF8
 12524                           tblptrh	equ	0xFF7
 12525                           tblptrl	equ	0xFF6
 12526                           tablat	equ	0xFF5
 12527                           prodh	equ	0xFF4
 12528                           prodl	equ	0xFF3
 12529                           intcon	equ	0xFF2
 12530                           intcon3	equ	0xFF0
 12531                           postinc0	equ	0xFEE
 12532                           wreg	equ	0xFE8
 12533                           indf1	equ	0xFE7
 12534                           postdec1	equ	0xFE5
 12535                           fsr1h	equ	0xFE2
 12536                           fsr1l	equ	0xFE1
 12537                           indf2	equ	0xFDF
 12538                           fsr2h	equ	0xFDA
 12539                           fsr2l	equ	0xFD9
 12540                           status	equ	0xFD8
 12541                           
 12542 ;; *************** function _oled_regulorResistorSelect *****************
 12543 ;; Defined at:
 12544 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  r               1    wreg     unsigned char 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;  r               1    1[BANK0 ] unsigned char 
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  1    wreg      void 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2, status,0, cstack
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/0
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12558 ;;      Params:         0       0       0       0       0       0       0       0       0
 12559 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12561 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12562 ;;Total ram usage:        1 bytes
 12563 ;; Hardware stack levels used:    1
 12564 ;; Hardware stack levels required when called:   12
 12565 ;; This function calls:
 12566 ;;		_oled_writeCommand
 12567 ;; This function is called by:
 12568 ;;		_oled_devInit
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text35
 12573  005B7A                     __ptext35:
 12574                           	opt stack 0
 12575  005B7A                     _oled_regulorResistorSelect:
 12576                           	opt stack 16
 12577                           
 12578                           ;incstack = 0
 12579                           ;oled_regulorResistorSelect@r stored from wreg
 12580  005B7A  0100               	movlb	0	; () banked
 12581  005B7C  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12582                           
 12583                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 12584  005B7E  0100               	movlb	0	; () banked
 12585  005B80  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12586  005B82  0920               	iorlw	32
 12587  005B84  EC4C  F02D         	call	_oled_writeCommand
 12588  005B88  0012               	return	
 12589  005B8A                     __end_of_oled_regulorResistorSelect:
 12590                           	opt stack 0
 12591                           tblptru	equ	0xFF8
 12592                           tblptrh	equ	0xFF7
 12593                           tblptrl	equ	0xFF6
 12594                           tablat	equ	0xFF5
 12595                           prodh	equ	0xFF4
 12596                           prodl	equ	0xFF3
 12597                           intcon	equ	0xFF2
 12598                           intcon3	equ	0xFF0
 12599                           postinc0	equ	0xFEE
 12600                           wreg	equ	0xFE8
 12601                           indf1	equ	0xFE7
 12602                           postdec1	equ	0xFE5
 12603                           fsr1h	equ	0xFE2
 12604                           fsr1l	equ	0xFE1
 12605                           indf2	equ	0xFDF
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8
 12609                           
 12610 ;; *************** function _oled_powerControl *****************
 12611 ;; Defined at:
 12612 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  vol             1    wreg     unsigned char 
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;  vol             1    1[BANK0 ] unsigned char 
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, status,2, status,0, cstack
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12626 ;;      Params:         0       0       0       0       0       0       0       0       0
 12627 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12629 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12630 ;;Total ram usage:        1 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; Hardware stack levels required when called:   12
 12633 ;; This function calls:
 12634 ;;		_oled_writeCommand
 12635 ;; This function is called by:
 12636 ;;		_oled_devInit
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640                           	psect	text36
 12641  005B8A                     __ptext36:
 12642                           	opt stack 0
 12643  005B8A                     _oled_powerControl:
 12644                           	opt stack 16
 12645                           
 12646                           ;incstack = 0
 12647                           ;oled_powerControl@vol stored from wreg
 12648  005B8A  0100               	movlb	0	; () banked
 12649  005B8C  6F61               	movwf	oled_powerControl@vol& (0+255),b
 12650                           
 12651                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 12652  005B8E  0100               	movlb	0	; () banked
 12653  005B90  5161               	movf	oled_powerControl@vol& (0+255),w,b
 12654  005B92  0928               	iorlw	40
 12655  005B94  EC4C  F02D         	call	_oled_writeCommand
 12656  005B98  0012               	return	
 12657  005B9A                     __end_of_oled_powerControl:
 12658                           	opt stack 0
 12659                           tblptru	equ	0xFF8
 12660                           tblptrh	equ	0xFF7
 12661                           tblptrl	equ	0xFF6
 12662                           tablat	equ	0xFF5
 12663                           prodh	equ	0xFF4
 12664                           prodl	equ	0xFF3
 12665                           intcon	equ	0xFF2
 12666                           intcon3	equ	0xFF0
 12667                           postinc0	equ	0xFEE
 12668                           wreg	equ	0xFE8
 12669                           indf1	equ	0xFE7
 12670                           postdec1	equ	0xFE5
 12671                           fsr1h	equ	0xFE2
 12672                           fsr1l	equ	0xFE1
 12673                           indf2	equ	0xFDF
 12674                           fsr2h	equ	0xFDA
 12675                           fsr2l	equ	0xFD9
 12676                           status	equ	0xFD8
 12677                           
 12678 ;; *************** function _oled_initialDispayLine *****************
 12679 ;; Defined at:
 12680 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  line            1    wreg     unsigned char 
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  line            1    1[BANK0 ] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      void 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0
 12695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12697 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12698 ;;Total ram usage:        1 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:   12
 12701 ;; This function calls:
 12702 ;;		_oled_writeCommand
 12703 ;; This function is called by:
 12704 ;;		_oled_devInit
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text37
 12709  005B9A                     __ptext37:
 12710                           	opt stack 0
 12711  005B9A                     _oled_initialDispayLine:
 12712                           	opt stack 16
 12713                           
 12714                           ;incstack = 0
 12715                           ;oled_initialDispayLine@line stored from wreg
 12716  005B9A  0100               	movlb	0	; () banked
 12717  005B9C  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 12718                           
 12719                           ;SSD1306oLED.c: 464: line|=0x40;
 12720  005B9E  0100               	movlb	0	; () banked
 12721  005BA0  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 12725  005BA2  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 12726  005BA4  EC4C  F02D         	call	_oled_writeCommand
 12727  005BA8  0012               	return	
 12728  005BAA                     __end_of_oled_initialDispayLine:
 12729                           	opt stack 0
 12730                           tblptru	equ	0xFF8
 12731                           tblptrh	equ	0xFF7
 12732                           tblptrl	equ	0xFF6
 12733                           tablat	equ	0xFF5
 12734                           prodh	equ	0xFF4
 12735                           prodl	equ	0xFF3
 12736                           intcon	equ	0xFF2
 12737                           intcon3	equ	0xFF0
 12738                           postinc0	equ	0xFEE
 12739                           wreg	equ	0xFE8
 12740                           indf1	equ	0xFE7
 12741                           postdec1	equ	0xFE5
 12742                           fsr1h	equ	0xFE2
 12743                           fsr1l	equ	0xFE1
 12744                           indf2	equ	0xFDF
 12745                           fsr2h	equ	0xFDA
 12746                           fsr2l	equ	0xFD9
 12747                           status	equ	0xFD8
 12748                           
 12749 ;; *************** function _oled_displayOff *****************
 12750 ;; Defined at:
 12751 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;  state           1    wreg     unsigned char 
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;  state           1    0[COMRAM] unsigned char 
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, cstack
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:   12
 12772 ;; This function calls:
 12773 ;;		_oled_writeCommand
 12774 ;; This function is called by:
 12775 ;;		_moteApp_GoToSleep
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text38
 12780  005C2E                     __ptext38:
 12781                           	opt stack 0
 12782  005C2E                     _oled_displayOff:
 12783                           	opt stack 15
 12784                           
 12785                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 12786                           
 12787                           ;incstack = 0
 12788  005C2E  0EAE               	movlw	174
 12789  005C30  EC4C  F02D         	call	_oled_writeCommand
 12790  005C34  0012               	return		;funcret
 12791  005C36                     __end_of_oled_displayOff:
 12792                           	opt stack 0
 12793                           tblptru	equ	0xFF8
 12794                           tblptrh	equ	0xFF7
 12795                           tblptrl	equ	0xFF6
 12796                           tablat	equ	0xFF5
 12797                           prodh	equ	0xFF4
 12798                           prodl	equ	0xFF3
 12799                           intcon	equ	0xFF2
 12800                           intcon3	equ	0xFF0
 12801                           postinc0	equ	0xFEE
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postdec1	equ	0xFE5
 12805                           fsr1h	equ	0xFE2
 12806                           fsr1l	equ	0xFE1
 12807                           indf2	equ	0xFDF
 12808                           fsr2h	equ	0xFDA
 12809                           fsr2l	equ	0xFD9
 12810                           status	equ	0xFD8
 12811                           
 12812 ;; *************** function _moduleSleep *****************
 12813 ;; Defined at:
 12814 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;		None
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0
 12829 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12830 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12831 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12832 ;;Total ram usage:        1 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:   14
 12835 ;; This function calls:
 12836 ;;		_sendCommand
 12837 ;; This function is called by:
 12838 ;;		_moteApp_GoToSleep
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842                           	psect	text39
 12843  0058E8                     __ptext39:
 12844                           	opt stack 0
 12845  0058E8                     _moduleSleep:
 12846                           	opt stack 13
 12847                           
 12848                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 12849                           
 12850                           ;incstack = 0
 12851  0058E8  0E82               	movlw	low STR_22
 12852  0058EA  0100               	movlb	0	; () banked
 12853  0058EC  6F61               	movwf	sendCommand@string& (0+255),b
 12854  0058EE  0E7A               	movlw	high STR_22
 12855  0058F0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12856  0058F2  EC7D  F02B         	call	_sendCommand	;wreg free
 12857  0058F6                     
 12858                           ;MOTEapp.c: 179: ;
 12859  0058F6  B89D               	btfsc	3997,4,c	;volatile
 12860  0058F8  D7FE               	goto	l355
 12861                           
 12862                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 12863  0058FA  0EFA               	movlw	250
 12864  0058FC  0100               	movlb	0	; () banked
 12865  0058FE  6F63               	movwf	??_moduleSleep& (0+255),b
 12866  005900  0E58               	movlw	88
 12867  005902                     u11377:
 12868  005902  2EE8               	decfsz	wreg,f,c
 12869  005904  D7FE               	bra	u11377
 12870  005906  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 12871  005908  D7FC               	bra	u11377
 12872  00590A  F000               	nop	
 12873  00590C  0012               	return		;funcret
 12874  00590E                     __end_of_moduleSleep:
 12875                           	opt stack 0
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           prodh	equ	0xFF4
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           intcon3	equ	0xFF0
 12884                           postinc0	equ	0xFEE
 12885                           wreg	equ	0xFE8
 12886                           indf1	equ	0xFE7
 12887                           postdec1	equ	0xFE5
 12888                           fsr1h	equ	0xFE2
 12889                           fsr1l	equ	0xFE1
 12890                           indf2	equ	0xFDF
 12891                           fsr2h	equ	0xFDA
 12892                           fsr2l	equ	0xFD9
 12893                           status	equ	0xFD8
 12894                           
 12895 ;; *************** function _moduleResync *****************
 12896 ;; Defined at:
 12897 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;		None
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 12902 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  1    wreg      void 
 12905 ;; Registers used:
 12906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12907 ;; Tracked objects:
 12908 ;;		On entry : 0/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12912 ;;      Params:         0       0       0       0       0       0       0       0       0
 12913 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12915 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12916 ;;Total ram usage:        3 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:   14
 12919 ;; This function calls:
 12920 ;;		_MOTEapp_getModuleResponse
 12921 ;;		_moteApp_delayms
 12922 ;;		_sendCommand
 12923 ;; This function is called by:
 12924 ;;		_main
 12925 ;;		_moteApp_GoToSleep
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text40
 12930  0047F6                     __ptext40:
 12931                           	opt stack 0
 12932  0047F6                     _moduleResync:
 12933                           	opt stack 13
 12934                           
 12935                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 12936                           
 12937                           ;incstack = 0
 12938  0047F6  0E00               	movlw	0
 12939  0047F8  0100               	movlb	0	; () banked
 12940  0047FA  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12941                           
 12942                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 12943  0047FC  0E00               	movlw	0
 12944  0047FE  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 12945  004800  0E00               	movlw	0
 12946  004802  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 12950  004804  9AAC               	bcf	4012,5,c	;volatile
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 12954  004806  9C8B               	bcf	3979,6,c	;volatile
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;MOTEapp.c: 147: moteApp_delayms(10);
 12958  004808  0E00               	movlw	0
 12959  00480A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12960  00480C  0E0A               	movlw	10
 12961  00480E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12962  004810  EC33  F02B         	call	_moteApp_delayms	;wreg free
 12963                           
 12964                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 12965  004814  8AAC               	bsf	4012,5,c	;volatile
 12966                           
 12967                           ;MOTEapp.c: 149: moteApp_delayms(5);
 12968  004816  0E00               	movlw	0
 12969  004818  0100               	movlb	0	; () banked
 12970  00481A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12971  00481C  0E05               	movlw	5
 12972  00481E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12973  004820  EC33  F02B         	call	_moteApp_delayms	;wreg free
 12974                           
 12975                           ;MOTEapp.c: 151: TXREG = 0x55;
 12976  004824  0E55               	movlw	85
 12977  004826  6EAD               	movwf	4013,c	;volatile
 12978  004828                     
 12979                           ;MOTEapp.c: 153: {};
 12980  004828  A2AC               	btfss	4012,1,c	;volatile
 12981  00482A  D7FE               	goto	l337
 12982                           
 12983                           ;MOTEapp.c: 155: sendCommand("z");
 12984  00482C  0EFC               	movlw	low STR_21
 12985  00482E  0100               	movlb	0	; () banked
 12986  004830  6F61               	movwf	sendCommand@string& (0+255),b
 12987  004832  0E7F               	movlw	high STR_21
 12988  004834  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12989  004836  EC7D  F02B         	call	_sendCommand	;wreg free
 12990                           
 12991                           ;MOTEapp.c: 157: moteApp_delayms(40);
 12992  00483A  0E00               	movlw	0
 12993  00483C  0100               	movlb	0	; () banked
 12994  00483E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12995  004840  0E28               	movlw	40
 12996  004842  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12997  004844  EC33  F02B         	call	_moteApp_delayms	;wreg free
 12998                           
 12999                           ;MOTEapp.c: 158: while (escapeEvent)
 13000  004848  D013               	goto	l343
 13001  00484A                     
 13002                           ;MOTEapp.c: 159: {
 13003                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 13004  00484A  EC74  F027         	call	_MOTEapp_getModuleResponse	;wreg free
 13005  00484E  0900               	iorlw	0
 13006  004850  B4D8               	btfsc	status,2,c
 13007  004852  D003               	goto	l341
 13008                           
 13009                           ;MOTEapp.c: 161: escapeEvent = 1;
 13010  004854  0E01               	movlw	1
 13011  004856  0100               	movlb	0	; () banked
 13012  004858  D00A               	goto	L6
 13013  00485A                     l341:
 13014                           
 13015                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 13016                           
 13017                           ; BSR set to: 0
 13018  00485A  0100               	movlb	0	; () banked
 13019  00485C  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13020  00485E  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13021  004860  0E89               	movlw	137
 13022  004862  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13023  004864  0E13               	movlw	19
 13024  004866  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13025  004868  A0D8               	btfss	status,0,c
 13026  00486A  D002               	goto	l343
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;MOTEapp.c: 163: escapeEvent = 1;
 13030  00486C  0E01               	movlw	1
 13031  00486E                     L6:
 13032  00486E  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13033  004870                     l343:
 13034                           
 13035                           ; BSR set to: 0
 13036                           
 13037                           ; BSR set to: 0
 13038  004870  0100               	movlb	0	; () banked
 13039  004872  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13040  004874  B4D8               	btfsc	status,2,c
 13041  004876  0012               	return	
 13042  004878  D7E8               	goto	l340
 13043  00487A                     __end_of_moduleResync:
 13044                           	opt stack 0
 13045                           tblptru	equ	0xFF8
 13046                           tblptrh	equ	0xFF7
 13047                           tblptrl	equ	0xFF6
 13048                           tablat	equ	0xFF5
 13049                           prodh	equ	0xFF4
 13050                           prodl	equ	0xFF3
 13051                           intcon	equ	0xFF2
 13052                           intcon3	equ	0xFF0
 13053                           postinc0	equ	0xFEE
 13054                           wreg	equ	0xFE8
 13055                           indf1	equ	0xFE7
 13056                           postdec1	equ	0xFE5
 13057                           fsr1h	equ	0xFE2
 13058                           fsr1l	equ	0xFE1
 13059                           indf2	equ	0xFDF
 13060                           fsr2h	equ	0xFDA
 13061                           fsr2l	equ	0xFD9
 13062                           status	equ	0xFD8
 13063                           
 13064 ;; *************** function _MOTEapp_getModuleResponse *****************
 13065 ;; Defined at:
 13066 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 13067 ;; Parameters:    Size  Location     Type
 13068 ;;		None
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13071 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  1    wreg      unsigned char 
 13074 ;; Registers used:
 13075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0
 13082 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13084 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13085 ;;Total ram usage:        2 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:   12
 13088 ;; This function calls:
 13089 ;;		_EUSART_Read
 13090 ;; This function is called by:
 13091 ;;		_moduleResync
 13092 ;;		_moteHandler
 13093 ;;		_moteApp_setSensorsInput
 13094 ;;		_moteApp_getTempValue
 13095 ;;		_moteApp_getLightValue
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099                           	psect	text41
 13100  004EE8                     __ptext41:
 13101                           	opt stack 0
 13102  004EE8                     _MOTEapp_getModuleResponse:
 13103                           	opt stack 15
 13104                           
 13105                           ;MOTEapp.c: 1076: bool terminatorReceived = 0;
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;incstack = 0
 13109  004EE8  0E00               	movlw	0
 13110  004EEA  0100               	movlb	0	; () banked
 13111  004EEC  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13112                           
 13113                           ;MOTEapp.c: 1078: if ((eusartRxCount))
 13114  004EEE  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13115  004EF0  B4D8               	btfsc	status,2,c
 13116  004EF2  D02B               	goto	l626
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;MOTEapp.c: 1079: {
 13120                           ;MOTEapp.c: 1080: uint8_t bufferByte = 0;
 13121  004EF4  0E00               	movlw	0
 13122  004EF6  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;MOTEapp.c: 1081: bufferByte = EUSART_Read();
 13126  004EF8  ECAB  F02A         	call	_EUSART_Read	;wreg free
 13127  004EFC  0100               	movlb	0	; () banked
 13128  004EFE  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;MOTEapp.c: 1083: if (bufferByte == 0x0D)
 13132  004F00  0E0D               	movlw	13
 13133  004F02  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13134  004F04  A4D8               	btfss	status,2,c
 13135  004F06  D00F               	goto	l621
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;MOTEapp.c: 1084: {
 13139                           ;MOTEapp.c: 1085: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13140  004F08  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13141  004F0A  0D01               	mullw	1
 13142  004F0C  0E50               	movlw	low _moduleResonseBuffer
 13143  004F0E  24F3               	addwf	prodl,w,c
 13144  004F10  6ED9               	movwf	fsr2l,c
 13145  004F12  0E01               	movlw	high _moduleResonseBuffer
 13146  004F14  20F4               	addwfc	prodh,w,c
 13147  004F16  6EDA               	movwf	fsr2h,c
 13148  004F18  0E00               	movlw	0
 13149  004F1A  6EDF               	movwf	indf2,c
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;MOTEapp.c: 1086: terminatorReceived = 1;
 13153  004F1C  0E01               	movlw	1
 13154  004F1E  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;MOTEapp.c: 1087: moduleBufferIndex = 0;
 13158  004F20  0E00               	movlw	0
 13159  004F22  6FF2               	movwf	_moduleBufferIndex& (0+255),b
 13160                           
 13161                           ;MOTEapp.c: 1088: }
 13162  004F24  D012               	goto	l626
 13163  004F26                     l621:
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;MOTEapp.c: 1089: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13167                           
 13168                           ; BSR set to: 0
 13169  004F26  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13170  004F28  B4D8               	btfsc	status,2,c
 13171  004F2A  D00F               	goto	l626
 13172                           
 13173                           ; BSR set to: 0
 13174  004F2C  0E0A               	movlw	10
 13175  004F2E  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13176  004F30  B4D8               	btfsc	status,2,c
 13177  004F32  D00B               	goto	l626
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;MOTEapp.c: 1093: else
 13181                           ;MOTEapp.c: 1094: {
 13182                           ;MOTEapp.c: 1095: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13183                           
 13184                           ; BSR set to: 0
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;MOTEapp.c: 1090: {
 13188                           ;MOTEapp.c: 1092: }
 13189  004F34  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13190  004F36  0D01               	mullw	1
 13191  004F38  0E50               	movlw	low _moduleResonseBuffer
 13192  004F3A  24F3               	addwf	prodl,w,c
 13193  004F3C  6ED9               	movwf	fsr2l,c
 13194  004F3E  0E01               	movlw	high _moduleResonseBuffer
 13195  004F40  20F4               	addwfc	prodh,w,c
 13196  004F42  6EDA               	movwf	fsr2h,c
 13197  004F44  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;MOTEapp.c: 1097: moduleBufferIndex++;
 13201  004F48  2BF2               	incf	_moduleBufferIndex& (0+255),f,b
 13202  004F4A                     l626:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;MOTEapp.c: 1098: }
 13206                           ;MOTEapp.c: 1099: }
 13207                           ;MOTEapp.c: 1100: return terminatorReceived;
 13208                           
 13209                           ; BSR set to: 0
 13210                           
 13211                           ; BSR set to: 0
 13212                           
 13213                           ; BSR set to: 0
 13214  004F4A  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13215  004F4C  0012               	return	
 13216  004F4E                     __end_of_MOTEapp_getModuleResponse:
 13217                           	opt stack 0
 13218                           tblptru	equ	0xFF8
 13219                           tblptrh	equ	0xFF7
 13220                           tblptrl	equ	0xFF6
 13221                           tablat	equ	0xFF5
 13222                           prodh	equ	0xFF4
 13223                           prodl	equ	0xFF3
 13224                           intcon	equ	0xFF2
 13225                           intcon3	equ	0xFF0
 13226                           postinc0	equ	0xFEE
 13227                           wreg	equ	0xFE8
 13228                           indf1	equ	0xFE7
 13229                           postdec1	equ	0xFE5
 13230                           fsr1h	equ	0xFE2
 13231                           fsr1l	equ	0xFE1
 13232                           indf2	equ	0xFDF
 13233                           fsr2h	equ	0xFDA
 13234                           fsr2l	equ	0xFD9
 13235                           status	equ	0xFD8
 13236                           
 13237 ;; *************** function _EUSART_FlushBuffer *****************
 13238 ;; Defined at:
 13239 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;		None
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;  index           1    0[BANK0 ] unsigned char 
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  1    wreg      void 
 13246 ;; Registers used:
 13247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13253 ;;      Params:         0       0       0       0       0       0       0       0       0
 13254 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13256 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13257 ;;Total ram usage:        1 bytes
 13258 ;; Hardware stack levels used:    1
 13259 ;; Hardware stack levels required when called:   11
 13260 ;; This function calls:
 13261 ;;		Nothing
 13262 ;; This function is called by:
 13263 ;;		_test_powerup
 13264 ;;		_moteApp_GoToSleep
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268                           	psect	text42
 13269  00539E                     __ptext42:
 13270                           	opt stack 0
 13271  00539E                     _EUSART_FlushBuffer:
 13272                           	opt stack 18
 13273                           
 13274                           ;eusart.c: 204: uint8_t index;
 13275                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;incstack = 0
 13279  00539E  0E00               	movlw	0
 13280  0053A0  0100               	movlb	0	; () banked
 13281  0053A2  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13282  0053A4                     l8592:
 13283                           
 13284                           ; BSR set to: 0
 13285  0053A4  0E3F               	movlw	63
 13286  0053A6  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13287  0053A8  D001               	goto	l1246
 13288  0053AA  D00C               	goto	u6620
 13289  0053AC                     l1246:
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;eusart.c: 206: {
 13293                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13294                           
 13295                           ; BSR set to: 0
 13296  0053AC  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13297  0053AE  0D01               	mullw	1
 13298  0053B0  0E00               	movlw	low _eusartRxBuffer
 13299  0053B2  24F3               	addwf	prodl,w,c
 13300  0053B4  6ED9               	movwf	fsr2l,c
 13301  0053B6  0E02               	movlw	high _eusartRxBuffer
 13302  0053B8  20F4               	addwfc	prodh,w,c
 13303  0053BA  6EDA               	movwf	fsr2h,c
 13304  0053BC  0E00               	movlw	0
 13305  0053BE  6EDF               	movwf	indf2,c
 13306                           
 13307                           ; BSR set to: 0
 13308  0053C0  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13309  0053C2  D7F0               	goto	l8592
 13310  0053C4                     u6620:
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;eusart.c: 208: }
 13314                           ;eusart.c: 209: eusartRxHead = 0;
 13315                           
 13316                           ; BSR set to: 0
 13317  0053C4  0E00               	movlw	0
 13318  0053C6  6FDF               	movwf	_eusartRxHead& (0+255),b
 13319                           
 13320                           ;eusart.c: 210: eusartRxTail = 0;
 13321  0053C8  0E00               	movlw	0
 13322  0053CA  6FDE               	movwf	_eusartRxTail& (0+255),b
 13323                           
 13324                           ;eusart.c: 211: eusartRxCount = 0;
 13325  0053CC  0E00               	movlw	0
 13326  0053CE  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13330  0053D0  989D               	bcf	3997,4,c	;volatile
 13331                           
 13332                           ;eusart.c: 214: eusartTxHead = 0;
 13333  0053D2  0E00               	movlw	0
 13334  0053D4  6FE2               	movwf	_eusartTxHead& (0+255),b
 13335                           
 13336                           ;eusart.c: 215: eusartTxTail = 0;
 13337  0053D6  0E00               	movlw	0
 13338  0053D8  6FE1               	movwf	_eusartTxTail& (0+255),b
 13339                           
 13340                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13341  0053DA  0E40               	movlw	64
 13342  0053DC  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13343                           
 13344                           ; BSR set to: 0
 13345  0053DE  0012               	return		;funcret
 13346  0053E0                     __end_of_EUSART_FlushBuffer:
 13347                           	opt stack 0
 13348                           tblptru	equ	0xFF8
 13349                           tblptrh	equ	0xFF7
 13350                           tblptrl	equ	0xFF6
 13351                           tablat	equ	0xFF5
 13352                           prodh	equ	0xFF4
 13353                           prodl	equ	0xFF3
 13354                           intcon	equ	0xFF2
 13355                           intcon3	equ	0xFF0
 13356                           postinc0	equ	0xFEE
 13357                           wreg	equ	0xFE8
 13358                           indf1	equ	0xFE7
 13359                           postdec1	equ	0xFE5
 13360                           fsr1h	equ	0xFE2
 13361                           fsr1l	equ	0xFE1
 13362                           indf2	equ	0xFDF
 13363                           fsr2h	equ	0xFDA
 13364                           fsr2l	equ	0xFD9
 13365                           status	equ	0xFD8
 13366                           
 13367 ;; *************** function _TMR2_ReadTimer *****************
 13368 ;; Defined at:
 13369 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  readVal         1    0[BANK0 ] unsigned char 
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      unsigned char 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0
 13384 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13386 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13387 ;;Total ram usage:        1 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:   11
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_moteRunningProcess
 13394 ;; This function uses a non-reentrant model
 13395 ;;
 13396                           
 13397                           	psect	text43
 13398  005BFC                     __ptext43:
 13399                           	opt stack 0
 13400  005BFC                     _TMR2_ReadTimer:
 13401                           	opt stack 17
 13402                           
 13403                           ;tmr2.c: 88: uint8_t readVal;
 13404                           ;tmr2.c: 90: readVal = TMR2;
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;incstack = 0
 13408  005BFC  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13409                           
 13410                           ;tmr2.c: 92: return readVal;
 13411  005C00  0100               	movlb	0	; () banked
 13412  005C02  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13413  005C04  0012               	return	
 13414  005C06                     __end_of_TMR2_ReadTimer:
 13415                           	opt stack 0
 13416                           tblptru	equ	0xFF8
 13417                           tblptrh	equ	0xFF7
 13418                           tblptrl	equ	0xFF6
 13419                           tablat	equ	0xFF5
 13420                           prodh	equ	0xFF4
 13421                           prodl	equ	0xFF3
 13422                           intcon	equ	0xFF2
 13423                           intcon3	equ	0xFF0
 13424                           postinc0	equ	0xFEE
 13425                           wreg	equ	0xFE8
 13426                           indf1	equ	0xFE7
 13427                           postdec1	equ	0xFE5
 13428                           fsr1h	equ	0xFE2
 13429                           fsr1l	equ	0xFE1
 13430                           indf2	equ	0xFDF
 13431                           fsr2h	equ	0xFDA
 13432                           fsr2l	equ	0xFD9
 13433                           status	equ	0xFD8
 13434                           
 13435 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13436 ;; Defined at:
 13437 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;  dr              1    wreg     unsigned char 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  dr              1    4[BANK0 ] unsigned char 
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0
 13452 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13453 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13454 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13455 ;;Total ram usage:        2 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:   14
 13458 ;; This function calls:
 13459 ;;		_sendCommand
 13460 ;; This function is called by:
 13461 ;;		_moteRunningProcess
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text44
 13466  0022F8                     __ptext44:
 13467                           	opt stack 0
 13468  0022F8                     _MOTEapp_SetDataRateSetting:
 13469                           	opt stack 14
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;incstack = 0
 13473                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13474  0022F8  0100               	movlb	0	; () banked
 13475  0022FA  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13476                           
 13477                           ;MOTEapp.c: 983: if (dr != 8)
 13478  0022FC  0E08               	movlw	8
 13479  0022FE  0100               	movlb	0	; () banked
 13480  002300  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13481  002302  B4D8               	btfsc	status,2,c
 13482  002304  D06A               	goto	l591
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;MOTEapp.c: 984: {
 13486                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 13487  002306  0EA3               	movlw	low STR_163
 13488  002308  6F61               	movwf	sendCommand@string& (0+255),b
 13489  00230A  0E7C               	movlw	high STR_163
 13490  00230C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13491  00230E  EC7D  F02B         	call	_sendCommand	;wreg free
 13492                           
 13493                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 13494  002312  0EFA               	movlw	250
 13495  002314  0100               	movlb	0	; () banked
 13496  002316  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13497  002318  0E58               	movlw	88
 13498  00231A                     u11387:
 13499  00231A  2EE8               	decfsz	wreg,f,c
 13500  00231C  D7FE               	bra	u11387
 13501  00231E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13502  002320  D7FC               	bra	u11387
 13503  002322  F000               	nop	
 13504                           
 13505                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 13506  002324  0EFA               	movlw	250
 13507  002326  0100               	movlb	0	; () banked
 13508  002328  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13509  00232A  0E58               	movlw	88
 13510  00232C                     u11397:
 13511  00232C  2EE8               	decfsz	wreg,f,c
 13512  00232E  D7FE               	bra	u11397
 13513  002330  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13514  002332  D7FC               	bra	u11397
 13515  002334  F000               	nop	
 13516                           
 13517                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 13518  002336  0EFA               	movlw	250
 13519  002338  0100               	movlb	0	; () banked
 13520  00233A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13521  00233C  0E58               	movlw	88
 13522  00233E                     u11407:
 13523  00233E  2EE8               	decfsz	wreg,f,c
 13524  002340  D7FE               	bra	u11407
 13525  002342  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13526  002344  D7FC               	bra	u11407
 13527  002346  F000               	nop	
 13528                           
 13529                           ;MOTEapp.c: 989: }
 13530                           ;MOTEapp.c: 991: switch (dr)
 13531  002348  D048               	goto	l591
 13532  00234A                     
 13533                           ;MOTEapp.c: 994: sendCommand("mac set dr 0");
 13534  00234A  0E7F               	movlw	low STR_164
 13535  00234C  0100               	movlb	0	; () banked
 13536  00234E  6F61               	movwf	sendCommand@string& (0+255),b
 13537  002350  0E7D               	movlw	high STR_164
 13538  002352  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13539  002354  EC7D  F02B         	call	_sendCommand	;wreg free
 13540                           
 13541                           ;MOTEapp.c: 995: break;
 13542  002358  D05D               	goto	l593
 13543  00235A                     
 13544                           ;MOTEapp.c: 997: sendCommand("mac set dr 1");
 13545  00235A  0E8C               	movlw	low STR_165
 13546  00235C  0100               	movlb	0	; () banked
 13547  00235E  6F61               	movwf	sendCommand@string& (0+255),b
 13548  002360  0E7D               	movlw	high STR_165
 13549  002362  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13550  002364  EC7D  F02B         	call	_sendCommand	;wreg free
 13551                           
 13552                           ;MOTEapp.c: 998: break;
 13553  002368  D055               	goto	l593
 13554  00236A                     
 13555                           ;MOTEapp.c: 1000: sendCommand("mac set dr 2");
 13556  00236A  0E99               	movlw	low STR_166
 13557  00236C  0100               	movlb	0	; () banked
 13558  00236E  6F61               	movwf	sendCommand@string& (0+255),b
 13559  002370  0E7D               	movlw	high STR_166
 13560  002372  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13561  002374  EC7D  F02B         	call	_sendCommand	;wreg free
 13562                           
 13563                           ;MOTEapp.c: 1001: break;
 13564  002378  D04D               	goto	l593
 13565  00237A                     
 13566                           ;MOTEapp.c: 1003: sendCommand("mac set dr 3");
 13567  00237A  0EA6               	movlw	low STR_167
 13568  00237C  0100               	movlb	0	; () banked
 13569  00237E  6F61               	movwf	sendCommand@string& (0+255),b
 13570  002380  0E7D               	movlw	high STR_167
 13571  002382  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13572  002384  EC7D  F02B         	call	_sendCommand	;wreg free
 13573                           
 13574                           ;MOTEapp.c: 1004: break;
 13575  002388  D045               	goto	l593
 13576  00238A                     
 13577                           ;MOTEapp.c: 1006: sendCommand("mac set dr 4");
 13578  00238A  0EB3               	movlw	low STR_168
 13579  00238C  0100               	movlb	0	; () banked
 13580  00238E  6F61               	movwf	sendCommand@string& (0+255),b
 13581  002390  0E7D               	movlw	high STR_168
 13582  002392  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13583  002394  EC7D  F02B         	call	_sendCommand	;wreg free
 13584                           
 13585                           ;MOTEapp.c: 1007: break;
 13586  002398  D03D               	goto	l593
 13587  00239A                     
 13588                           ;MOTEapp.c: 1009: sendCommand("mac set dr 5");
 13589  00239A  0EC0               	movlw	low STR_169
 13590  00239C  0100               	movlb	0	; () banked
 13591  00239E  6F61               	movwf	sendCommand@string& (0+255),b
 13592  0023A0  0E7D               	movlw	high STR_169
 13593  0023A2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13594  0023A4  EC7D  F02B         	call	_sendCommand	;wreg free
 13595                           
 13596                           ;MOTEapp.c: 1010: break;
 13597  0023A8  D035               	goto	l593
 13598  0023AA                     
 13599                           ;MOTEapp.c: 1012: sendCommand("mac set dr 6");
 13600  0023AA  0ECD               	movlw	low STR_170
 13601  0023AC  0100               	movlb	0	; () banked
 13602  0023AE  6F61               	movwf	sendCommand@string& (0+255),b
 13603  0023B0  0E7D               	movlw	high STR_170
 13604  0023B2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13605  0023B4  EC7D  F02B         	call	_sendCommand	;wreg free
 13606                           
 13607                           ;MOTEapp.c: 1013: break;
 13608  0023B8  D02D               	goto	l593
 13609  0023BA                     
 13610                           ;MOTEapp.c: 1015: sendCommand("mac set dr 7");
 13611  0023BA  0EDA               	movlw	low STR_171
 13612  0023BC  0100               	movlb	0	; () banked
 13613  0023BE  6F61               	movwf	sendCommand@string& (0+255),b
 13614  0023C0  0E7D               	movlw	high STR_171
 13615  0023C2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13616  0023C4  EC7D  F02B         	call	_sendCommand	;wreg free
 13617                           
 13618                           ;MOTEapp.c: 1016: break;
 13619  0023C8  D025               	goto	l593
 13620  0023CA                     
 13621                           ;MOTEapp.c: 1018: sendCommand("mac set adr on");
 13622  0023CA  0EF1               	movlw	low STR_172
 13623  0023CC  0100               	movlb	0	; () banked
 13624  0023CE  6F61               	movwf	sendCommand@string& (0+255),b
 13625  0023D0  0E7C               	movlw	high STR_172
 13626  0023D2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13627  0023D4  EC7D  F02B         	call	_sendCommand	;wreg free
 13628                           
 13629                           ;MOTEapp.c: 1020: }
 13630                           
 13631                           ;MOTEapp.c: 1019: break;
 13632  0023D8  D01D               	goto	l593
 13633  0023DA                     l591:
 13634  0023DA  0100               	movlb	0	; () banked
 13635  0023DC  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13636                           
 13637                           ; Switch size 1, requested type "space"
 13638                           ; Number of cases is 9, Range of values is 0 to 8
 13639                           ; switch strategies available:
 13640                           ; Name         Instructions Cycles
 13641                           ; simple_byte           28    15 (average)
 13642                           ;	Chosen strategy is simple_byte
 13643  0023DE  0A00               	xorlw	0	; case 0
 13644  0023E0  B4D8               	btfsc	status,2,c
 13645  0023E2  D7B3               	goto	l592
 13646  0023E4  0A01               	xorlw	1	; case 1
 13647  0023E6  B4D8               	btfsc	status,2,c
 13648  0023E8  D7B8               	goto	l594
 13649  0023EA  0A03               	xorlw	3	; case 2
 13650  0023EC  B4D8               	btfsc	status,2,c
 13651  0023EE  D7BD               	goto	l595
 13652  0023F0  0A01               	xorlw	1	; case 3
 13653  0023F2  B4D8               	btfsc	status,2,c
 13654  0023F4  D7C2               	goto	l596
 13655  0023F6  0A07               	xorlw	7	; case 4
 13656  0023F8  B4D8               	btfsc	status,2,c
 13657  0023FA  D7C7               	goto	l597
 13658  0023FC  0A01               	xorlw	1	; case 5
 13659  0023FE  B4D8               	btfsc	status,2,c
 13660  002400  D7CC               	goto	l598
 13661  002402  0A03               	xorlw	3	; case 6
 13662  002404  B4D8               	btfsc	status,2,c
 13663  002406  D7D1               	goto	l599
 13664  002408  0A01               	xorlw	1	; case 7
 13665  00240A  B4D8               	btfsc	status,2,c
 13666  00240C  D7D6               	goto	l600
 13667  00240E  0A0F               	xorlw	15	; case 8
 13668  002410  B4D8               	btfsc	status,2,c
 13669  002412  D7DB               	goto	l601
 13670  002414                     l593:
 13671                           
 13672                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 13673                           
 13674                           ; BSR set to: 0
 13675  002414  0EFA               	movlw	250
 13676  002416  0100               	movlb	0	; () banked
 13677  002418  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13678  00241A  0E58               	movlw	88
 13679  00241C                     u11417:
 13680  00241C  2EE8               	decfsz	wreg,f,c
 13681  00241E  D7FE               	bra	u11417
 13682  002420  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13683  002422  D7FC               	bra	u11417
 13684  002424  F000               	nop	
 13685                           
 13686                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 13687  002426  0EFA               	movlw	250
 13688  002428  0100               	movlb	0	; () banked
 13689  00242A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13690  00242C  0E58               	movlw	88
 13691  00242E                     u11427:
 13692  00242E  2EE8               	decfsz	wreg,f,c
 13693  002430  D7FE               	bra	u11427
 13694  002432  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13695  002434  D7FC               	bra	u11427
 13696  002436  F000               	nop	
 13697                           
 13698                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 13699  002438  0EFA               	movlw	250
 13700  00243A  0100               	movlb	0	; () banked
 13701  00243C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13702  00243E  0E58               	movlw	88
 13703  002440                     u11437:
 13704  002440  2EE8               	decfsz	wreg,f,c
 13705  002442  D7FE               	bra	u11437
 13706  002444  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13707  002446  D7FC               	bra	u11437
 13708  002448  F000               	nop	
 13709                           
 13710                           ;MOTEapp.c: 1024: sendCommand("mac save");
 13711  00244A  0E2B               	movlw	low STR_173
 13712  00244C  0100               	movlb	0	; () banked
 13713  00244E  6F61               	movwf	sendCommand@string& (0+255),b
 13714  002450  0E7F               	movlw	high STR_173
 13715  002452  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13716  002454  EC7D  F02B         	call	_sendCommand	;wreg free
 13717  002458  0012               	return		;funcret
 13718  00245A                     __end_of_MOTEapp_SetDataRateSetting:
 13719                           	opt stack 0
 13720                           tblptru	equ	0xFF8
 13721                           tblptrh	equ	0xFF7
 13722                           tblptrl	equ	0xFF6
 13723                           tablat	equ	0xFF5
 13724                           prodh	equ	0xFF4
 13725                           prodl	equ	0xFF3
 13726                           intcon	equ	0xFF2
 13727                           intcon3	equ	0xFF0
 13728                           postinc0	equ	0xFEE
 13729                           wreg	equ	0xFE8
 13730                           indf1	equ	0xFE7
 13731                           postdec1	equ	0xFE5
 13732                           fsr1h	equ	0xFE2
 13733                           fsr1l	equ	0xFE1
 13734                           indf2	equ	0xFDF
 13735                           fsr2h	equ	0xFDA
 13736                           fsr2l	equ	0xFD9
 13737                           status	equ	0xFD8
 13738                           
 13739 ;; *************** function _ADC_TempConversion *****************
 13740 ;; Defined at:
 13741 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;  tempRaw         1    wreg     enum E5749
 13744 ;; Auto vars:     Size  Location     Type
 13745 ;;  tempRaw         1   70[BANK0 ] enum E5749
 13746 ;;  val             4   72[BANK0 ] enum E5749
 13747 ;;  temp            1   71[BANK0 ] unsigned char 
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  1    wreg      unsigned char 
 13750 ;; Registers used:
 13751 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 0/0
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13757 ;;      Params:         0       0       0       0       0       0       0       0       0
 13758 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13760 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13761 ;;Total ram usage:        6 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:   12
 13764 ;; This function calls:
 13765 ;;		___fladd
 13766 ;;		___fldiv
 13767 ;;		___flmul
 13768 ;;		___fltol
 13769 ;;		___xxtofl
 13770 ;; This function is called by:
 13771 ;;		_moteHandler
 13772 ;;		_moteRunningProcess
 13773 ;;		_moteApp_testSensors
 13774 ;;		_test_adc
 13775 ;; This function uses a non-reentrant model
 13776 ;;
 13777                           
 13778                           	psect	text45
 13779  003142                     __ptext45:
 13780                           	opt stack 0
 13781  003142                     _ADC_TempConversion:
 13782                           	opt stack 16
 13783                           
 13784                           ;incstack = 0
 13785                           ;ADC_TempConversion@tempRaw stored from wreg
 13786  003142  0100               	movlb	0	; () banked
 13787  003144  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13788                           
 13789                           ;adc.c: 138: uint8_t temp;
 13790                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 13791  003146  0ECD               	movlw	205
 13792  003148  0100               	movlb	0	; () banked
 13793  00314A  6F78               	movwf	___flmul@a& (0+255),b
 13794  00314C  0ECC               	movlw	204
 13795  00314E  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13796  003150  0E4C               	movlw	76
 13797  003152  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13798  003154  0E40               	movlw	64
 13799  003156  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13800  003158  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 13801  00315A  6F60               	movwf	___xxtofl@val& (0+255),b
 13802  00315C  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13803  00315E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13804  003160  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13805  003162  0E00               	movlw	0
 13806  003164  EC2D  F012         	call	___xxtofl
 13807  003168  C060  F074         	movff	?___xxtofl,___flmul@b
 13808  00316C  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 13809  003170  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 13810  003174  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 13811  003178  EC9A  F00A         	call	___flmul	;wreg free
 13812  00317C  C074  F08D         	movff	?___flmul,___fldiv@b
 13813  003180  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 13814  003184  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 13815  003188  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 13816  00318C  0E00               	movlw	0
 13817  00318E  0100               	movlb	0	; () banked
 13818  003190  6F91               	movwf	___fldiv@a& (0+255),b
 13819  003192  0E00               	movlw	0
 13820  003194  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 13821  003196  0E80               	movlw	128
 13822  003198  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 13823  00319A  0E44               	movlw	68
 13824  00319C  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 13825  00319E  ECE2  F00D         	call	___fldiv	;wreg free
 13826  0031A2  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 13827  0031A6  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 13828  0031AA  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 13829  0031AE  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 13830                           
 13831                           ;adc.c: 141: val = ((val - 0.5)*100);
 13832  0031B2  0E00               	movlw	0
 13833  0031B4  0100               	movlb	0	; () banked
 13834  0031B6  6F64               	movwf	___fladd@a& (0+255),b
 13835  0031B8  0E00               	movlw	0
 13836  0031BA  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13837  0031BC  0E00               	movlw	0
 13838  0031BE  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13839  0031C0  0EBF               	movlw	191
 13840  0031C2  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13841  0031C4  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 13842  0031C8  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 13843  0031CC  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 13844  0031D0  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 13845  0031D4  EC43  F00C         	call	___fladd	;wreg free
 13846  0031D8  C060  F074         	movff	?___fladd,___flmul@b
 13847  0031DC  C061  F075         	movff	?___fladd+1,___flmul@b+1
 13848  0031E0  C062  F076         	movff	?___fladd+2,___flmul@b+2
 13849  0031E4  C063  F077         	movff	?___fladd+3,___flmul@b+3
 13850  0031E8  0E00               	movlw	0
 13851  0031EA  0100               	movlb	0	; () banked
 13852  0031EC  6F78               	movwf	___flmul@a& (0+255),b
 13853  0031EE  0E00               	movlw	0
 13854  0031F0  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13855  0031F2  0EC8               	movlw	200
 13856  0031F4  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13857  0031F6  0E42               	movlw	66
 13858  0031F8  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13859  0031FA  EC9A  F00A         	call	___flmul	;wreg free
 13860  0031FE  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 13861  003202  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 13862  003206  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 13863  00320A  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 13864                           
 13865                           ;adc.c: 142: temp = (uint8_t) val;
 13866  00320E  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 13867  003212  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 13868  003216  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 13869  00321A  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 13870  00321E  EC4D  F01B         	call	___fltol	;wreg free
 13871  003222  0100               	movlb	0	; () banked
 13872  003224  5160               	movf	?___fltol& (0+255),w,b
 13873  003226  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;adc.c: 144: return temp;
 13877  003228  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 13878  00322A  0012               	return	
 13879  00322C                     __end_of_ADC_TempConversion:
 13880                           	opt stack 0
 13881                           tblptru	equ	0xFF8
 13882                           tblptrh	equ	0xFF7
 13883                           tblptrl	equ	0xFF6
 13884                           tablat	equ	0xFF5
 13885                           prodh	equ	0xFF4
 13886                           prodl	equ	0xFF3
 13887                           intcon	equ	0xFF2
 13888                           intcon3	equ	0xFF0
 13889                           postinc0	equ	0xFEE
 13890                           wreg	equ	0xFE8
 13891                           indf1	equ	0xFE7
 13892                           postdec1	equ	0xFE5
 13893                           fsr1h	equ	0xFE2
 13894                           fsr1l	equ	0xFE1
 13895                           indf2	equ	0xFDF
 13896                           fsr2h	equ	0xFDA
 13897                           fsr2l	equ	0xFD9
 13898                           status	equ	0xFD8
 13899                           
 13900 ;; *************** function ___xxtofl *****************
 13901 ;; Defined at:
 13902 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;  sign            1    wreg     unsigned char 
 13905 ;;  val             4    0[BANK0 ] long 
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;  sign            1    8[BANK0 ] unsigned char 
 13908 ;;  arg             4   10[BANK0 ] unsigned long 
 13909 ;;  exp             1    9[BANK0 ] unsigned char 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  4    0[BANK0 ] unsigned char 
 13912 ;; Registers used:
 13913 ;;		wreg, status,2, status,0
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13919 ;;      Params:         0       4       0       0       0       0       0       0       0
 13920 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13921 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13922 ;;      Totals:         0      14       0       0       0       0       0       0       0
 13923 ;;Total ram usage:       14 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; Hardware stack levels required when called:   11
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		_ADC_TempConversion
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text46
 13934  00245A                     __ptext46:
 13935                           	opt stack 0
 13936  00245A                     ___xxtofl:
 13937                           	opt stack 16
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;incstack = 0
 13941                           ;___xxtofl@sign stored from wreg
 13942  00245A  0100               	movlb	0	; () banked
 13943  00245C  6F68               	movwf	___xxtofl@sign& (0+255),b
 13944  00245E  0100               	movlb	0	; () banked
 13945  002460  5168               	movf	___xxtofl@sign& (0+255),w,b
 13946  002462  A4D8               	btfss	status,2,c
 13947                           
 13948                           ; BSR set to: 0
 13949  002464  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 13950  002466  D01A               	goto	l2828
 13951                           
 13952                           ; BSR set to: 0
 13953  002468  C060  F064         	movff	___xxtofl@val,??___xxtofl
 13954  00246C  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 13955  002470  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 13956  002474  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 13957  002478  1F64               	comf	??___xxtofl& (0+255),f,b
 13958  00247A  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 13959  00247C  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 13960  00247E  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 13961  002480  2B64               	incf	??___xxtofl& (0+255),f,b
 13962  002482  0E00               	movlw	0
 13963  002484  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 13964  002486  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 13965  002488  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 13966  00248A  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 13967  00248E  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 13968  002492  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 13969  002496  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 13970  00249A  D008               	goto	l2829
 13971  00249C                     l2828:
 13972                           
 13973                           ; BSR set to: 0
 13974  00249C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 13975  0024A0  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13976  0024A4  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13977  0024A8  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13978  0024AC                     l2829:
 13979                           
 13980                           ; BSR set to: 0
 13981                           
 13982                           ; BSR set to: 0
 13983  0024AC  5160               	movf	___xxtofl@val& (0+255),w,b
 13984  0024AE  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 13985  0024B0  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 13986  0024B2  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 13987  0024B4  A4D8               	btfss	status,2,c
 13988  0024B6  D009               	goto	l2830
 13989                           
 13990                           ; BSR set to: 0
 13991  0024B8  0E00               	movlw	0
 13992  0024BA  6F60               	movwf	?___xxtofl& (0+255),b
 13993  0024BC  0E00               	movlw	0
 13994  0024BE  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 13995  0024C0  0E00               	movlw	0
 13996  0024C2  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 13997  0024C4  0E00               	movlw	0
 13998  0024C6  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 13999                           
 14000                           ; BSR set to: 0
 14001  0024C8  0012               	return	
 14002  0024CA                     l2830:
 14003                           
 14004                           ; BSR set to: 0
 14005                           
 14006                           ; BSR set to: 0
 14007  0024CA  0E96               	movlw	150
 14008  0024CC  6F69               	movwf	___xxtofl@exp& (0+255),b
 14009  0024CE  D006               	goto	l2832
 14010  0024D0                     
 14011                           ; BSR set to: 0
 14012                           
 14013                           ; BSR set to: 0
 14014  0024D0  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14015  0024D2  90D8               	bcf	status,0,c
 14016  0024D4  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14017  0024D6  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14018  0024D8  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14019  0024DA  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14020  0024DC                     l2832:
 14021                           
 14022                           ; BSR set to: 0
 14023                           
 14024                           ; BSR set to: 0
 14025  0024DC  0E00               	movlw	0
 14026  0024DE  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14027  0024E0  6F64               	movwf	??___xxtofl& (0+255),b
 14028  0024E2  0E00               	movlw	0
 14029  0024E4  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14030  0024E6  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14031  0024E8  0E00               	movlw	0
 14032  0024EA  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14033  0024EC  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14034  0024EE  0EFE               	movlw	254
 14035  0024F0  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14036  0024F2  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14037  0024F4  5164               	movf	??___xxtofl& (0+255),w,b
 14038  0024F6  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14039  0024F8  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14040  0024FA  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14041  0024FC  B4D8               	btfsc	status,2,c
 14042  0024FE  D00D               	goto	l2835
 14043  002500  D7E7               	goto	l2833
 14044  002502                     
 14045                           ; BSR set to: 0
 14046                           
 14047                           ; BSR set to: 0
 14048  002502  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14049                           
 14050                           ; BSR set to: 0
 14051  002504  0E01               	movlw	1
 14052  002506  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14053  002508  0E00               	movlw	0
 14054  00250A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14055  00250C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14056  00250E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14057                           
 14058                           ; BSR set to: 0
 14059  002510  90D8               	bcf	status,0,c
 14060  002512  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14061  002514  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14062  002516  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14063  002518  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14064  00251A                     l2835:
 14065                           
 14066                           ; BSR set to: 0
 14067  00251A  0E00               	movlw	0
 14068  00251C  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14069  00251E  6F64               	movwf	??___xxtofl& (0+255),b
 14070  002520  0E00               	movlw	0
 14071  002522  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14072  002524  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14073  002526  0E00               	movlw	0
 14074  002528  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14075  00252A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14076  00252C  0EFF               	movlw	255
 14077  00252E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14078  002530  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14079  002532  5164               	movf	??___xxtofl& (0+255),w,b
 14080  002534  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14081  002536  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14082  002538  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14083  00253A  B4D8               	btfsc	status,2,c
 14084  00253C  D007               	goto	l2838
 14085  00253E  D7E1               	goto	l2836
 14086  002540                     
 14087                           ; BSR set to: 0
 14088                           
 14089                           ; BSR set to: 0
 14090  002540  0769               	decf	___xxtofl@exp& (0+255),f,b
 14091  002542  90D8               	bcf	status,0,c
 14092  002544  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14093  002546  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14094  002548  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14095  00254A  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14096  00254C                     l2838:
 14097                           
 14098                           ; BSR set to: 0
 14099                           
 14100                           ; BSR set to: 0
 14101  00254C  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14102  00254E  D003               	goto	u7910
 14103                           
 14104                           ; BSR set to: 0
 14105  002550  0E02               	movlw	2
 14106  002552  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14107  002554  D7F5               	goto	l2839
 14108  002556                     u7910:
 14109                           
 14110                           ; BSR set to: 0
 14111                           
 14112                           ; BSR set to: 0
 14113  002556  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14114  002558  D008               	goto	l2843
 14115                           
 14116                           ; BSR set to: 0
 14117  00255A  0EFF               	movlw	255
 14118  00255C  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14119  00255E  0EFF               	movlw	255
 14120  002560  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14121  002562  0E7F               	movlw	127
 14122  002564  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14123  002566  0EFF               	movlw	255
 14124  002568  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14125  00256A                     l2843:
 14126                           
 14127                           ; BSR set to: 0
 14128  00256A  90D8               	bcf	status,0,c
 14129  00256C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14130  00256E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14131  002572  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14132  002574  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14133  002576  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14134  002578  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14135  00257C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14136  00257E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14137  002580  6B64               	clrf	??___xxtofl& (0+255),b
 14138  002582  5164               	movf	??___xxtofl& (0+255),w,b
 14139  002584  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14140  002586  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14141  002588  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14142  00258A  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14143  00258C  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14144  00258E  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14145  002590  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14146                           
 14147                           ; BSR set to: 0
 14148  002592  5168               	movf	___xxtofl@sign& (0+255),w,b
 14149  002594  A4D8               	btfss	status,2,c
 14150                           
 14151                           ; BSR set to: 0
 14152  002596  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14153  002598  D001               	goto	l2844
 14154                           
 14155                           ; BSR set to: 0
 14156  00259A  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14157  00259C                     l2844:
 14158                           
 14159                           ; BSR set to: 0
 14160                           
 14161                           ; BSR set to: 0
 14162  00259C  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14163  0025A0  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14164  0025A4  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14165  0025A8  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14166  0025AC  0012               	return	
 14167  0025AE                     __end_of___xxtofl:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon3	equ	0xFF0
 14177                           postinc0	equ	0xFEE
 14178                           wreg	equ	0xFE8
 14179                           indf1	equ	0xFE7
 14180                           postdec1	equ	0xFE5
 14181                           fsr1h	equ	0xFE2
 14182                           fsr1l	equ	0xFE1
 14183                           indf2	equ	0xFDF
 14184                           fsr2h	equ	0xFDA
 14185                           fsr2l	equ	0xFD9
 14186                           status	equ	0xFD8
 14187                           
 14188 ;; *************** function ___fltol *****************
 14189 ;; Defined at:
 14190 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;  f1              4    0[BANK0 ] unsigned char 
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;  exp1            1    9[BANK0 ] unsigned char 
 14195 ;;  sign1           1    8[BANK0 ] unsigned char 
 14196 ;; Return value:  Size  Location     Type
 14197 ;;                  4    0[BANK0 ] long 
 14198 ;; Registers used:
 14199 ;;		wreg, status,2, status,0
 14200 ;; Tracked objects:
 14201 ;;		On entry : 0/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14205 ;;      Params:         0       4       0       0       0       0       0       0       0
 14206 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14207 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14208 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14209 ;;Total ram usage:       10 bytes
 14210 ;; Hardware stack levels used:    1
 14211 ;; Hardware stack levels required when called:   11
 14212 ;; This function calls:
 14213 ;;		Nothing
 14214 ;; This function is called by:
 14215 ;;		_ADC_TempConversion
 14216 ;; This function uses a non-reentrant model
 14217 ;;
 14218                           
 14219                           	psect	text47
 14220  00369A                     __ptext47:
 14221                           	opt stack 0
 14222  00369A                     ___fltol:
 14223                           	opt stack 16
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;incstack = 0
 14227  00369A  0100               	movlb	0	; () banked
 14228  00369C  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14229  00369E  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14230  0036A0  6F69               	movwf	___fltol@exp1& (0+255),b
 14231  0036A2  5169               	movf	___fltol@exp1& (0+255),w,b
 14232  0036A4  A4D8               	btfss	status,2,c
 14233  0036A6  D009               	goto	l2481
 14234                           
 14235                           ; BSR set to: 0
 14236  0036A8  0E00               	movlw	0
 14237  0036AA  6F60               	movwf	?___fltol& (0+255),b
 14238  0036AC  0E00               	movlw	0
 14239  0036AE  6F61               	movwf	(?___fltol+1)& (0+255),b
 14240  0036B0  0E00               	movlw	0
 14241  0036B2  6F62               	movwf	(?___fltol+2)& (0+255),b
 14242  0036B4  0E00               	movlw	0
 14243  0036B6  6F63               	movwf	(?___fltol+3)& (0+255),b
 14244                           
 14245                           ; BSR set to: 0
 14246  0036B8  0012               	return	
 14247  0036BA                     l2481:
 14248                           
 14249                           ; BSR set to: 0
 14250                           
 14251                           ; BSR set to: 0
 14252  0036BA  C060  F064         	movff	___fltol@f1,??___fltol
 14253  0036BE  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14254  0036C2  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14255  0036C6  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14256  0036CA  0E20               	movlw	32
 14257  0036CC  D005               	goto	u7760
 14258  0036CE                     u7765:
 14259  0036CE  90D8               	bcf	status,0,c
 14260  0036D0  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14261  0036D2  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14262  0036D4  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14263  0036D6  3364               	rrcf	??___fltol& (0+255),f,b
 14264  0036D8                     u7760:
 14265  0036D8  2EE8               	decfsz	wreg,f,c
 14266  0036DA  D7F9               	goto	u7765
 14267  0036DC  5164               	movf	??___fltol& (0+255),w,b
 14268  0036DE  6F68               	movwf	___fltol@sign1& (0+255),b
 14269                           
 14270                           ; BSR set to: 0
 14271  0036E0  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14272                           
 14273                           ; BSR set to: 0
 14274  0036E2  0EFF               	movlw	255
 14275  0036E4  1760               	andwf	___fltol@f1& (0+255),f,b
 14276  0036E6  0EFF               	movlw	255
 14277  0036E8  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14278  0036EA  0EFF               	movlw	255
 14279  0036EC  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14280  0036EE  0E00               	movlw	0
 14281  0036F0  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14282                           
 14283                           ; BSR set to: 0
 14284  0036F2  0E96               	movlw	150
 14285  0036F4  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14286                           
 14287                           ; BSR set to: 0
 14288  0036F6  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14289  0036F8  D016               	goto	l2483
 14290                           
 14291                           ; BSR set to: 0
 14292  0036FA  5169               	movf	___fltol@exp1& (0+255),w,b
 14293  0036FC  0A80               	xorlw	128
 14294  0036FE  0F97               	addlw	151
 14295  003700  B0D8               	btfsc	status,0,c
 14296  003702  D009               	goto	l2484
 14297                           
 14298                           ; BSR set to: 0
 14299  003704  0E00               	movlw	0
 14300  003706  6F60               	movwf	?___fltol& (0+255),b
 14301  003708  0E00               	movlw	0
 14302  00370A  6F61               	movwf	(?___fltol+1)& (0+255),b
 14303  00370C  0E00               	movlw	0
 14304  00370E  6F62               	movwf	(?___fltol+2)& (0+255),b
 14305  003710  0E00               	movlw	0
 14306  003712  6F63               	movwf	(?___fltol+3)& (0+255),b
 14307                           
 14308                           ; BSR set to: 0
 14309  003714  0012               	return	
 14310  003716                     l2484:
 14311                           
 14312                           ; BSR set to: 0
 14313                           
 14314                           ; BSR set to: 0
 14315                           
 14316                           ; BSR set to: 0
 14317  003716  90D8               	bcf	status,0,c
 14318  003718  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14319  00371A  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14320  00371C  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14321  00371E  3360               	rrcf	___fltol@f1& (0+255),f,b
 14322                           
 14323                           ; BSR set to: 0
 14324  003720  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14325  003722  D7F9               	goto	l2484
 14326                           
 14327                           ; BSR set to: 0
 14328  003724  D015               	goto	u7800
 14329  003726                     l2483:
 14330                           
 14331                           ; BSR set to: 0
 14332                           
 14333                           ; BSR set to: 0
 14334  003726  0E1F               	movlw	31
 14335  003728  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14336  00372A  D00F               	goto	l2489
 14337                           
 14338                           ; BSR set to: 0
 14339  00372C  0E00               	movlw	0
 14340  00372E  6F60               	movwf	?___fltol& (0+255),b
 14341  003730  0E00               	movlw	0
 14342  003732  6F61               	movwf	(?___fltol+1)& (0+255),b
 14343  003734  0E00               	movlw	0
 14344  003736  6F62               	movwf	(?___fltol+2)& (0+255),b
 14345  003738  0E00               	movlw	0
 14346  00373A  6F63               	movwf	(?___fltol+3)& (0+255),b
 14347                           
 14348                           ; BSR set to: 0
 14349  00373C  0012               	return	
 14350  00373E                     
 14351                           ; BSR set to: 0
 14352                           
 14353                           ; BSR set to: 0
 14354  00373E  90D8               	bcf	status,0,c
 14355  003740  3760               	rlcf	___fltol@f1& (0+255),f,b
 14356  003742  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14357  003744  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14358  003746  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14359  003748  0769               	decf	___fltol@exp1& (0+255),f,b
 14360  00374A                     l2489:
 14361                           
 14362                           ; BSR set to: 0
 14363                           
 14364                           ; BSR set to: 0
 14365  00374A  5169               	movf	___fltol@exp1& (0+255),w,b
 14366  00374C  A4D8               	btfss	status,2,c
 14367  00374E  D7F7               	goto	l2490
 14368  003750                     u7800:
 14369                           
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373                           
 14374                           ; BSR set to: 0
 14375  003750  5168               	movf	___fltol@sign1& (0+255),w,b
 14376  003752  B4D8               	btfsc	status,2,c
 14377  003754  D008               	goto	l2492
 14378                           
 14379                           ; BSR set to: 0
 14380  003756  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14381  003758  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14382  00375A  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14383  00375C  6D60               	negf	___fltol@f1& (0+255),b
 14384  00375E  0E00               	movlw	0
 14385  003760  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14386  003762  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14387  003764  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14388  003766                     l2492:
 14389                           
 14390                           ; BSR set to: 0
 14391                           
 14392                           ; BSR set to: 0
 14393  003766  C060  F060         	movff	___fltol@f1,?___fltol
 14394  00376A  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14395  00376E  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14396  003772  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14397  003776  0012               	return	
 14398  003778                     __end_of___fltol:
 14399                           	opt stack 0
 14400                           tblptru	equ	0xFF8
 14401                           tblptrh	equ	0xFF7
 14402                           tblptrl	equ	0xFF6
 14403                           tablat	equ	0xFF5
 14404                           prodh	equ	0xFF4
 14405                           prodl	equ	0xFF3
 14406                           intcon	equ	0xFF2
 14407                           intcon3	equ	0xFF0
 14408                           postinc0	equ	0xFEE
 14409                           wreg	equ	0xFE8
 14410                           indf1	equ	0xFE7
 14411                           postdec1	equ	0xFE5
 14412                           fsr1h	equ	0xFE2
 14413                           fsr1l	equ	0xFE1
 14414                           indf2	equ	0xFDF
 14415                           fsr2h	equ	0xFDA
 14416                           fsr2l	equ	0xFD9
 14417                           status	equ	0xFD8
 14418                           
 14419 ;; *************** function ___flmul *****************
 14420 ;; Defined at:
 14421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14422 ;; Parameters:    Size  Location     Type
 14423 ;;  b               4   20[BANK0 ] long 
 14424 ;;  a               4   24[BANK0 ] long 
 14425 ;; Auto vars:     Size  Location     Type
 14426 ;;  prod            4   39[BANK0 ] struct .
 14427 ;;  grs             4   33[BANK0 ] unsigned long 
 14428 ;;  temp            2   43[BANK0 ] struct .
 14429 ;;  bexp            1   38[BANK0 ] unsigned char 
 14430 ;;  aexp            1   37[BANK0 ] unsigned char 
 14431 ;;  sign            1   32[BANK0 ] unsigned char 
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  4   20[BANK0 ] unsigned char 
 14434 ;; Registers used:
 14435 ;;		wreg, status,2, status,0, prodl, prodh
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 0/0
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14441 ;;      Params:         0       8       0       0       0       0       0       0       0
 14442 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14443 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14444 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14445 ;;Total ram usage:       25 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; Hardware stack levels required when called:   11
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		_ADC_TempConversion
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text48
 14456  001534                     __ptext48:
 14457                           	opt stack 0
 14458  001534                     ___flmul:
 14459                           	opt stack 16
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;incstack = 0
 14463  001534  0100               	movlb	0	; () banked
 14464  001536  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14465  001538  0B80               	andlw	128
 14466  00153A  6F80               	movwf	___flmul@sign& (0+255),b
 14467  00153C  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14468  00153E  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14469  001540  6F86               	movwf	___flmul@bexp& (0+255),b
 14470                           
 14471                           ; BSR set to: 0
 14472  001542  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14473                           
 14474                           ; BSR set to: 0
 14475  001544  8186               	bsf	___flmul@bexp& (0+255),0,b
 14476                           
 14477                           ; BSR set to: 0
 14478                           
 14479                           ; BSR set to: 0
 14480  001546  5186               	movf	___flmul@bexp& (0+255),w,b
 14481  001548  B4D8               	btfsc	status,2,c
 14482  00154A  D00D               	goto	l2783
 14483                           
 14484                           ; BSR set to: 0
 14485  00154C  2986               	incf	___flmul@bexp& (0+255),w,b
 14486  00154E  A4D8               	btfss	status,2,c
 14487  001550  D008               	goto	l2784
 14488                           
 14489                           ; BSR set to: 0
 14490  001552  0E00               	movlw	0
 14491  001554  6F74               	movwf	___flmul@b& (0+255),b
 14492  001556  0E00               	movlw	0
 14493  001558  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14494  00155A  0E00               	movlw	0
 14495  00155C  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14496  00155E  0E00               	movlw	0
 14497  001560  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14498  001562                     l2784:
 14499                           
 14500                           ; BSR set to: 0
 14501                           
 14502                           ; BSR set to: 0
 14503  001562  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 14504  001564  D008               	goto	l2785
 14505  001566                     l2783:
 14506                           
 14507                           ; BSR set to: 0
 14508                           
 14509                           ; BSR set to: 0
 14510  001566  0E00               	movlw	0
 14511  001568  6F74               	movwf	___flmul@b& (0+255),b
 14512  00156A  0E00               	movlw	0
 14513  00156C  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14514  00156E  0E00               	movlw	0
 14515  001570  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14516  001572  0E00               	movlw	0
 14517  001574  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14518  001576                     l2785:
 14519                           
 14520                           ; BSR set to: 0
 14521                           
 14522                           ; BSR set to: 0
 14523  001576  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14524  001578  0B80               	andlw	128
 14525  00157A  1B80               	xorwf	___flmul@sign& (0+255),f,b
 14526                           
 14527                           ; BSR set to: 0
 14528  00157C  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14529  00157E  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 14530  001580  6F85               	movwf	___flmul@aexp& (0+255),b
 14531                           
 14532                           ; BSR set to: 0
 14533  001582  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 14534                           
 14535                           ; BSR set to: 0
 14536  001584  8185               	bsf	___flmul@aexp& (0+255),0,b
 14537                           
 14538                           ; BSR set to: 0
 14539                           
 14540                           ; BSR set to: 0
 14541  001586  5185               	movf	___flmul@aexp& (0+255),w,b
 14542  001588  B4D8               	btfsc	status,2,c
 14543  00158A  D00D               	goto	l2787
 14544                           
 14545                           ; BSR set to: 0
 14546  00158C  2985               	incf	___flmul@aexp& (0+255),w,b
 14547  00158E  A4D8               	btfss	status,2,c
 14548  001590  D008               	goto	l2788
 14549                           
 14550                           ; BSR set to: 0
 14551  001592  0E00               	movlw	0
 14552  001594  6F78               	movwf	___flmul@a& (0+255),b
 14553  001596  0E00               	movlw	0
 14554  001598  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14555  00159A  0E00               	movlw	0
 14556  00159C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14557  00159E  0E00               	movlw	0
 14558  0015A0  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14559  0015A2                     l2788:
 14560                           
 14561                           ; BSR set to: 0
 14562                           
 14563                           ; BSR set to: 0
 14564  0015A2  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 14565  0015A4  D008               	goto	l2789
 14566  0015A6                     l2787:
 14567                           
 14568                           ; BSR set to: 0
 14569                           
 14570                           ; BSR set to: 0
 14571  0015A6  0E00               	movlw	0
 14572  0015A8  6F78               	movwf	___flmul@a& (0+255),b
 14573  0015AA  0E00               	movlw	0
 14574  0015AC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14575  0015AE  0E00               	movlw	0
 14576  0015B0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14577  0015B2  0E00               	movlw	0
 14578  0015B4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14579  0015B6                     l2789:
 14580                           
 14581                           ; BSR set to: 0
 14582  0015B6  5185               	movf	___flmul@aexp& (0+255),w,b
 14583  0015B8  B4D8               	btfsc	status,2,c
 14584  0015BA  D003               	goto	u7570
 14585                           
 14586                           ; BSR set to: 0
 14587  0015BC  5186               	movf	___flmul@bexp& (0+255),w,b
 14588  0015BE  A4D8               	btfss	status,2,c
 14589  0015C0  D009               	goto	l2790
 14590  0015C2                     u7570:
 14591                           
 14592                           ; BSR set to: 0
 14593                           
 14594                           ; BSR set to: 0
 14595  0015C2  0E00               	movlw	0
 14596  0015C4  6F74               	movwf	?___flmul& (0+255),b
 14597  0015C6  0E00               	movlw	0
 14598  0015C8  6F75               	movwf	(?___flmul+1)& (0+255),b
 14599  0015CA  0E00               	movlw	0
 14600  0015CC  6F76               	movwf	(?___flmul+2)& (0+255),b
 14601  0015CE  0E00               	movlw	0
 14602  0015D0  6F77               	movwf	(?___flmul+3)& (0+255),b
 14603                           
 14604                           ; BSR set to: 0
 14605  0015D2  0012               	return	
 14606  0015D4                     l2790:
 14607                           
 14608                           ; BSR set to: 0
 14609                           
 14610                           ; BSR set to: 0
 14611  0015D4  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14612  0015D6  0374               	mulwf	___flmul@b& (0+255),b
 14613  0015D8  CFF3 F08B          	movff	prodl,___flmul@temp
 14614  0015DC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14615                           
 14616                           ; BSR set to: 0
 14617  0015E0  518B               	movf	___flmul@temp& (0+255),w,b
 14618  0015E2  6F81               	movwf	___flmul@grs& (0+255),b
 14619  0015E4  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 14620  0015E6  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 14621  0015E8  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 14622                           
 14623                           ; BSR set to: 0
 14624  0015EA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14625  0015EC  6F87               	movwf	___flmul@prod& (0+255),b
 14626  0015EE  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 14627  0015F0  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 14628  0015F2  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 14629  0015F4  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14630  0015F6  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14631  0015F8  CFF3 F08B          	movff	prodl,___flmul@temp
 14632  0015FC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14633                           
 14634                           ; BSR set to: 0
 14635  001600  518B               	movf	___flmul@temp& (0+255),w,b
 14636  001602  2781               	addwf	___flmul@grs& (0+255),f,b
 14637  001604  0E00               	movlw	0
 14638  001606  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14639  001608  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14640  00160A  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14641                           
 14642                           ; BSR set to: 0
 14643  00160C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14644  00160E  2787               	addwf	___flmul@prod& (0+255),f,b
 14645  001610  0E00               	movlw	0
 14646  001612  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14647  001614  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14648  001616  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14649  001618  5178               	movf	___flmul@a& (0+255),w,b
 14650  00161A  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14651  00161C  CFF3 F08B          	movff	prodl,___flmul@temp
 14652  001620  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14653                           
 14654                           ; BSR set to: 0
 14655  001624  518B               	movf	___flmul@temp& (0+255),w,b
 14656  001626  2781               	addwf	___flmul@grs& (0+255),f,b
 14657  001628  0E00               	movlw	0
 14658  00162A  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14659  00162C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14660  00162E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14661                           
 14662                           ; BSR set to: 0
 14663  001630  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14664  001632  2787               	addwf	___flmul@prod& (0+255),f,b
 14665  001634  0E00               	movlw	0
 14666  001636  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14667  001638  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14668  00163A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14669                           
 14670                           ; BSR set to: 0
 14671  00163C  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14672  001640  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14673  001644  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14674  001648  6B81               	clrf	___flmul@grs& (0+255),b
 14675                           
 14676                           ; BSR set to: 0
 14677  00164A  5178               	movf	___flmul@a& (0+255),w,b
 14678  00164C  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14679  00164E  CFF3 F08B          	movff	prodl,___flmul@temp
 14680  001652  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14681                           
 14682                           ; BSR set to: 0
 14683  001656  518B               	movf	___flmul@temp& (0+255),w,b
 14684  001658  2781               	addwf	___flmul@grs& (0+255),f,b
 14685  00165A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14686  00165C  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14687  00165E  0E00               	movlw	0
 14688  001660  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14689  001662  0E00               	movlw	0
 14690  001664  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14691                           
 14692                           ; BSR set to: 0
 14693  001666  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14694  001668  0374               	mulwf	___flmul@b& (0+255),b
 14695  00166A  CFF3 F08B          	movff	prodl,___flmul@temp
 14696  00166E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14697                           
 14698                           ; BSR set to: 0
 14699  001672  518B               	movf	___flmul@temp& (0+255),w,b
 14700  001674  2781               	addwf	___flmul@grs& (0+255),f,b
 14701  001676  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14702  001678  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14703  00167A  0E00               	movlw	0
 14704  00167C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14705  00167E  0E00               	movlw	0
 14706  001680  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14707                           
 14708                           ; BSR set to: 0
 14709  001682  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14710  001686  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14711  00168A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14712  00168E  6B81               	clrf	___flmul@grs& (0+255),b
 14713  001690  5178               	movf	___flmul@a& (0+255),w,b
 14714  001692  0374               	mulwf	___flmul@b& (0+255),b
 14715  001694  CFF3 F08B          	movff	prodl,___flmul@temp
 14716  001698  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14717                           
 14718                           ; BSR set to: 0
 14719  00169C  518B               	movf	___flmul@temp& (0+255),w,b
 14720  00169E  2781               	addwf	___flmul@grs& (0+255),f,b
 14721  0016A0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14722  0016A2  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14723  0016A4  0E00               	movlw	0
 14724  0016A6  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14725  0016A8  0E00               	movlw	0
 14726  0016AA  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14727                           
 14728                           ; BSR set to: 0
 14729  0016AC  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14730  0016AE  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14731  0016B0  CFF3 F08B          	movff	prodl,___flmul@temp
 14732  0016B4  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14733  0016B8  518B               	movf	___flmul@temp& (0+255),w,b
 14734  0016BA  2787               	addwf	___flmul@prod& (0+255),f,b
 14735  0016BC  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14736  0016BE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14737  0016C0  0E00               	movlw	0
 14738  0016C2  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14739  0016C4  0E00               	movlw	0
 14740  0016C6  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14741                           
 14742                           ; BSR set to: 0
 14743  0016C8  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14744  0016CA  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14745  0016CC  CFF3 F08B          	movff	prodl,___flmul@temp
 14746  0016D0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14747                           
 14748                           ; BSR set to: 0
 14749  0016D4  518B               	movf	___flmul@temp& (0+255),w,b
 14750  0016D6  2787               	addwf	___flmul@prod& (0+255),f,b
 14751  0016D8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14752  0016DA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14753  0016DC  0E00               	movlw	0
 14754  0016DE  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14755  0016E0  0E00               	movlw	0
 14756  0016E2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14757  0016E4  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14758  0016E6  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14759  0016E8  CFF3 F08B          	movff	prodl,___flmul@temp
 14760  0016EC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14761                           
 14762                           ; BSR set to: 0
 14763  0016F0  518B               	movf	___flmul@temp& (0+255),w,b
 14764  0016F2  6F7C               	movwf	??___flmul& (0+255),b
 14765  0016F4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14766  0016F6  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14767  0016F8  6B7E               	clrf	(??___flmul+2)& (0+255),b
 14768  0016FA  6B7F               	clrf	(??___flmul+3)& (0+255),b
 14769  0016FC  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 14770  001700  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 14771  001704  C07C  F07D         	movff	??___flmul,??___flmul+1
 14772  001708  6B7C               	clrf	??___flmul& (0+255),b
 14773  00170A  517C               	movf	??___flmul& (0+255),w,b
 14774  00170C  2787               	addwf	___flmul@prod& (0+255),f,b
 14775  00170E  517D               	movf	(??___flmul+1)& (0+255),w,b
 14776  001710  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14777  001712  517E               	movf	(??___flmul+2)& (0+255),w,b
 14778  001714  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14779  001716  517F               	movf	(??___flmul+3)& (0+255),w,b
 14780  001718  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14781                           
 14782                           ; BSR set to: 0
 14783  00171A  C081  F07C         	movff	___flmul@grs,??___flmul
 14784  00171E  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 14785  001722  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 14786  001726  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 14787  00172A  0E19               	movlw	25
 14788  00172C  D005               	goto	u7580
 14789  00172E                     u7585:
 14790  00172E  90D8               	bcf	status,0,c
 14791  001730  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14792  001732  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14793  001734  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14794  001736  337C               	rrcf	??___flmul& (0+255),f,b
 14795  001738                     u7580:
 14796  001738  2EE8               	decfsz	wreg,f,c
 14797  00173A  D7F9               	goto	u7585
 14798  00173C  517C               	movf	??___flmul& (0+255),w,b
 14799  00173E  2787               	addwf	___flmul@prod& (0+255),f,b
 14800  001740  517D               	movf	(??___flmul+1)& (0+255),w,b
 14801  001742  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14802  001744  517E               	movf	(??___flmul+2)& (0+255),w,b
 14803  001746  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14804  001748  517F               	movf	(??___flmul+3)& (0+255),w,b
 14805  00174A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14806                           
 14807                           ; BSR set to: 0
 14808  00174C  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14809  001750  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14810  001754  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14811  001758  6B81               	clrf	___flmul@grs& (0+255),b
 14812                           
 14813                           ; BSR set to: 0
 14814  00175A  5185               	movf	___flmul@aexp& (0+255),w,b
 14815  00175C  C086  F07C         	movff	___flmul@bexp,??___flmul
 14816  001760  6B7D               	clrf	(??___flmul+1)& (0+255),b
 14817  001762  277C               	addwf	??___flmul& (0+255),f,b
 14818  001764  0E00               	movlw	0
 14819  001766  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 14820  001768  0E82               	movlw	130
 14821  00176A  257C               	addwf	??___flmul& (0+255),w,b
 14822  00176C  6F8B               	movwf	___flmul@temp& (0+255),b
 14823  00176E  0EFF               	movlw	255
 14824  001770  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 14825  001772  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 14826  001774  D00F               	goto	l2794
 14827  001776                     
 14828                           ; BSR set to: 0
 14829                           
 14830                           ; BSR set to: 0
 14831  001776  90D8               	bcf	status,0,c
 14832  001778  3787               	rlcf	___flmul@prod& (0+255),f,b
 14833  00177A  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14834  00177C  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14835  00177E  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14836                           
 14837                           ; BSR set to: 0
 14838  001780  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14839                           
 14840                           ; BSR set to: 0
 14841  001782  8187               	bsf	___flmul@prod& (0+255),0,b
 14842                           
 14843                           ; BSR set to: 0
 14844  001784  90D8               	bcf	status,0,c
 14845  001786  3781               	rlcf	___flmul@grs& (0+255),f,b
 14846  001788  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14847  00178A  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14848  00178C  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14849  00178E  078B               	decf	___flmul@temp& (0+255),f,b
 14850  001790  A0D8               	btfss	status,0,c
 14851  001792  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 14852  001794                     l2794:
 14853                           
 14854                           ; BSR set to: 0
 14855                           
 14856                           ; BSR set to: 0
 14857  001794  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 14858  001796  D7EF               	goto	l2795
 14859                           
 14860                           ; BSR set to: 0
 14861                           
 14862                           ; BSR set to: 0
 14863  001798  0E00               	movlw	0
 14864  00179A  6F85               	movwf	___flmul@aexp& (0+255),b
 14865                           
 14866                           ; BSR set to: 0
 14867  00179C  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 14868  00179E  D016               	goto	l2801
 14869                           
 14870                           ; BSR set to: 0
 14871  0017A0  0EFF               	movlw	255
 14872  0017A2  1581               	andwf	___flmul@grs& (0+255),w,b
 14873  0017A4  6F7C               	movwf	??___flmul& (0+255),b
 14874  0017A6  0EFF               	movlw	255
 14875  0017A8  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 14876  0017AA  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14877  0017AC  0EFF               	movlw	255
 14878  0017AE  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 14879  0017B0  6F7E               	movwf	(??___flmul+2)& (0+255),b
 14880  0017B2  0E7F               	movlw	127
 14881  0017B4  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 14882  0017B6  6F7F               	movwf	(??___flmul+3)& (0+255),b
 14883  0017B8  517C               	movf	??___flmul& (0+255),w,b
 14884  0017BA  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 14885  0017BC  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 14886  0017BE  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 14887  0017C0  A4D8               	btfss	status,2,c
 14888  0017C2  D002               	goto	u7630
 14889                           
 14890                           ; BSR set to: 0
 14891                           
 14892                           ; BSR set to: 0
 14893  0017C4  A187               	btfss	___flmul@prod& (0+255),0,b
 14894  0017C6  D002               	goto	l2801
 14895  0017C8                     u7630:
 14896                           
 14897                           ; BSR set to: 0
 14898  0017C8  0E01               	movlw	1
 14899  0017CA  6F85               	movwf	___flmul@aexp& (0+255),b
 14900  0017CC                     l2801:
 14901                           
 14902                           ; BSR set to: 0
 14903                           
 14904                           ; BSR set to: 0
 14905                           
 14906                           ; BSR set to: 0
 14907  0017CC  5185               	movf	___flmul@aexp& (0+255),w,b
 14908  0017CE  B4D8               	btfsc	status,2,c
 14909  0017D0  D01F               	goto	l2803
 14910                           
 14911                           ; BSR set to: 0
 14912  0017D2  0E01               	movlw	1
 14913  0017D4  2787               	addwf	___flmul@prod& (0+255),f,b
 14914  0017D6  0E00               	movlw	0
 14915  0017D8  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14916  0017DA  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14917  0017DC  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14918                           
 14919                           ; BSR set to: 0
 14920  0017DE  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 14921  0017E0  D017               	goto	l2803
 14922                           
 14923                           ; BSR set to: 0
 14924  0017E2  C087  F07C         	movff	___flmul@prod,??___flmul
 14925  0017E6  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 14926  0017EA  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 14927  0017EE  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 14928  0017F2  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 14929  0017F4  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14930  0017F6  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14931  0017F8  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14932  0017FA  337C               	rrcf	??___flmul& (0+255),f,b
 14933  0017FC  C07C  F087         	movff	??___flmul,___flmul@prod
 14934  001800  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 14935  001804  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 14936  001808  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 14937                           
 14938                           ; BSR set to: 0
 14939  00180C  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 14940  00180E  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 14941  001810                     l2803:
 14942                           
 14943                           ; BSR set to: 0
 14944                           
 14945                           ; BSR set to: 0
 14946                           
 14947                           ; BSR set to: 0
 14948  001810  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14949  001812  D00D               	goto	l2804
 14950  001814  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14951  001816  E103               	bnz	u7660
 14952  001818  298B               	incf	___flmul@temp& (0+255),w,b
 14953  00181A  A0D8               	btfss	status,0,c
 14954  00181C  D008               	goto	l2804
 14955  00181E                     u7660:
 14956                           
 14957                           ; BSR set to: 0
 14958  00181E  0E00               	movlw	0
 14959  001820  6F87               	movwf	___flmul@prod& (0+255),b
 14960  001822  0E00               	movlw	0
 14961  001824  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14962  001826  0E80               	movlw	128
 14963  001828  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14964  00182A  0E7F               	movlw	127
 14965  00182C  D020               	goto	L7
 14966  00182E                     l2804:
 14967                           
 14968                           ; BSR set to: 0
 14969                           
 14970                           ; BSR set to: 0
 14971  00182E  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14972  001830  D005               	goto	u7670
 14973  001832  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14974  001834  E10E               	bnz	l2806
 14975  001836  058B               	decf	___flmul@temp& (0+255),w,b
 14976  001838  B0D8               	btfsc	status,0,c
 14977  00183A  D00B               	goto	l2806
 14978  00183C                     u7670:
 14979                           
 14980                           ; BSR set to: 0
 14981  00183C  0E00               	movlw	0
 14982  00183E  6F87               	movwf	___flmul@prod& (0+255),b
 14983  001840  0E00               	movlw	0
 14984  001842  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14985  001844  0E00               	movlw	0
 14986  001846  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14987  001848  0E00               	movlw	0
 14988  00184A  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14989  00184C  0E00               	movlw	0
 14990  00184E  6F80               	movwf	___flmul@sign& (0+255),b
 14991  001850  D00F               	goto	l2807
 14992  001852                     l2806:
 14993                           
 14994                           ; BSR set to: 0
 14995  001852  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 14996                           
 14997                           ; BSR set to: 0
 14998  001856  0EFF               	movlw	255
 14999  001858  1787               	andwf	___flmul@prod& (0+255),f,b
 15000  00185A  0EFF               	movlw	255
 15001  00185C  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 15002  00185E  0E7F               	movlw	127
 15003  001860  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 15004  001862  0E00               	movlw	0
 15005  001864  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15006                           
 15007                           ; BSR set to: 0
 15008  001866  B186               	btfsc	___flmul@bexp& (0+255),0,b
 15009                           
 15010                           ; BSR set to: 0
 15011  001868  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 15012                           
 15013                           ; BSR set to: 0
 15014                           
 15015                           ; BSR set to: 0
 15016  00186A  90D8               	bcf	status,0,c
 15017  00186C  3186               	rrcf	___flmul@bexp& (0+255),w,b
 15018  00186E                     L7:
 15019  00186E  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15020  001870                     l2807:
 15021                           
 15022                           ; BSR set to: 0
 15023                           
 15024                           ; BSR set to: 0
 15025                           
 15026                           ; BSR set to: 0
 15027  001870  5180               	movf	___flmul@sign& (0+255),w,b
 15028  001872  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15029                           
 15030                           ; BSR set to: 0
 15031  001874  C087  F074         	movff	___flmul@prod,?___flmul
 15032  001878  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 15033  00187C  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 15034  001880  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 15035  001884  0012               	return	
 15036  001886                     __end_of___flmul:
 15037                           	opt stack 0
 15038                           tblptru	equ	0xFF8
 15039                           tblptrh	equ	0xFF7
 15040                           tblptrl	equ	0xFF6
 15041                           tablat	equ	0xFF5
 15042                           prodh	equ	0xFF4
 15043                           prodl	equ	0xFF3
 15044                           intcon	equ	0xFF2
 15045                           intcon3	equ	0xFF0
 15046                           postinc0	equ	0xFEE
 15047                           wreg	equ	0xFE8
 15048                           indf1	equ	0xFE7
 15049                           postdec1	equ	0xFE5
 15050                           fsr1h	equ	0xFE2
 15051                           fsr1l	equ	0xFE1
 15052                           indf2	equ	0xFDF
 15053                           fsr2h	equ	0xFDA
 15054                           fsr2l	equ	0xFD9
 15055                           status	equ	0xFD8
 15056                           
 15057 ;; *************** function ___fldiv *****************
 15058 ;; Defined at:
 15059 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15060 ;; Parameters:    Size  Location     Type
 15061 ;;  b               4   45[BANK0 ] unsigned char 
 15062 ;;  a               4   49[BANK0 ] unsigned char 
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;  grs             4   64[BANK0 ] unsigned long 
 15065 ;;  rem             4   58[BANK0 ] unsigned long 
 15066 ;;  new_exp         2   62[BANK0 ] int 
 15067 ;;  aexp            1   69[BANK0 ] unsigned char 
 15068 ;;  bexp            1   68[BANK0 ] unsigned char 
 15069 ;;  sign            1   57[BANK0 ] unsigned char 
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  4   45[BANK0 ] unsigned char 
 15072 ;; Registers used:
 15073 ;;		wreg, status,2, status,0
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15079 ;;      Params:         0       8       0       0       0       0       0       0       0
 15080 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15081 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15082 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15083 ;;Total ram usage:       25 bytes
 15084 ;; Hardware stack levels used:    1
 15085 ;; Hardware stack levels required when called:   11
 15086 ;; This function calls:
 15087 ;;		Nothing
 15088 ;; This function is called by:
 15089 ;;		_ADC_TempConversion
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           	psect	text49
 15094  001BC4                     __ptext49:
 15095                           	opt stack 0
 15096  001BC4                     ___fldiv:
 15097                           	opt stack 16
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;incstack = 0
 15101  001BC4  0100               	movlb	0	; () banked
 15102  001BC6  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15103  001BC8  0B80               	andlw	128
 15104  001BCA  6F99               	movwf	___fldiv@sign& (0+255),b
 15105  001BCC  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15106  001BCE  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15107  001BD0  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15108                           
 15109                           ; BSR set to: 0
 15110  001BD2  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15111                           
 15112                           ; BSR set to: 0
 15113  001BD4  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15114                           
 15115                           ; BSR set to: 0
 15116                           
 15117                           ; BSR set to: 0
 15118  001BD6  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15119  001BD8  B4D8               	btfsc	status,2,c
 15120  001BDA  D00D               	goto	l2749
 15121                           
 15122                           ; BSR set to: 0
 15123  001BDC  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15124  001BDE  A4D8               	btfss	status,2,c
 15125  001BE0  D008               	goto	l2750
 15126                           
 15127                           ; BSR set to: 0
 15128  001BE2  0E00               	movlw	0
 15129  001BE4  6F8D               	movwf	___fldiv@b& (0+255),b
 15130  001BE6  0E00               	movlw	0
 15131  001BE8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15132  001BEA  0E00               	movlw	0
 15133  001BEC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15134  001BEE  0E00               	movlw	0
 15135  001BF0  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15136  001BF2                     l2750:
 15137                           
 15138                           ; BSR set to: 0
 15139                           
 15140                           ; BSR set to: 0
 15141  001BF2  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15142  001BF4  D006               	goto	L8
 15143  001BF6                     l2749:
 15144                           
 15145                           ; BSR set to: 0
 15146                           
 15147                           ; BSR set to: 0
 15148  001BF6  0E00               	movlw	0
 15149  001BF8  6F8D               	movwf	___fldiv@b& (0+255),b
 15150  001BFA  0E00               	movlw	0
 15151  001BFC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15152  001BFE  0E00               	movlw	0
 15153  001C00  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15154  001C02                     L8:
 15155  001C02  0E00               	movlw	0
 15156  001C04  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15157                           
 15158                           ; BSR set to: 0
 15159                           
 15160                           ; BSR set to: 0
 15161  001C06  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15162  001C08  0B80               	andlw	128
 15163  001C0A  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15164                           
 15165                           ; BSR set to: 0
 15166  001C0C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15167  001C0E  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15168  001C10  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15169                           
 15170                           ; BSR set to: 0
 15171  001C12  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15172                           
 15173                           ; BSR set to: 0
 15174  001C14  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15175                           
 15176                           ; BSR set to: 0
 15177                           
 15178                           ; BSR set to: 0
 15179  001C16  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15180  001C18  B4D8               	btfsc	status,2,c
 15181  001C1A  D00D               	goto	l2753
 15182                           
 15183                           ; BSR set to: 0
 15184  001C1C  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15185  001C1E  A4D8               	btfss	status,2,c
 15186  001C20  D008               	goto	l2754
 15187                           
 15188                           ; BSR set to: 0
 15189  001C22  0E00               	movlw	0
 15190  001C24  6F91               	movwf	___fldiv@a& (0+255),b
 15191  001C26  0E00               	movlw	0
 15192  001C28  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15193  001C2A  0E00               	movlw	0
 15194  001C2C  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15195  001C2E  0E00               	movlw	0
 15196  001C30  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15197  001C32                     l2754:
 15198                           
 15199                           ; BSR set to: 0
 15200                           
 15201                           ; BSR set to: 0
 15202  001C32  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15203  001C34  D006               	goto	L9
 15204  001C36                     l2753:
 15205                           
 15206                           ; BSR set to: 0
 15207                           
 15208                           ; BSR set to: 0
 15209  001C36  0E00               	movlw	0
 15210  001C38  6F91               	movwf	___fldiv@a& (0+255),b
 15211  001C3A  0E00               	movlw	0
 15212  001C3C  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15213  001C3E  0E00               	movlw	0
 15214  001C40  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15215  001C42                     L9:
 15216  001C42  0E00               	movlw	0
 15217  001C44  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15218                           
 15219                           ; BSR set to: 0
 15220                           
 15221                           ; BSR set to: 0
 15222  001C46  5191               	movf	___fldiv@a& (0+255),w,b
 15223  001C48  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15224  001C4A  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15225  001C4C  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15226  001C4E  A4D8               	btfss	status,2,c
 15227  001C50  D015               	goto	l2756
 15228                           
 15229                           ; BSR set to: 0
 15230  001C52  0E00               	movlw	0
 15231  001C54  6F8D               	movwf	___fldiv@b& (0+255),b
 15232  001C56  0E00               	movlw	0
 15233  001C58  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15234  001C5A  0E00               	movlw	0
 15235  001C5C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15236  001C5E  0E00               	movlw	0
 15237  001C60  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15238                           
 15239                           ; BSR set to: 0
 15240  001C62  0E80               	movlw	128
 15241  001C64  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15242  001C66  0E7F               	movlw	127
 15243  001C68  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15244                           
 15245                           ; BSR set to: 0
 15246  001C6A  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15247  001C6E  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15248  001C72  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15249  001C76  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15250                           
 15251                           ; BSR set to: 0
 15252  001C7A  0012               	return	
 15253  001C7C                     l2756:
 15254                           
 15255                           ; BSR set to: 0
 15256                           
 15257                           ; BSR set to: 0
 15258  001C7C  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15259  001C7E  A4D8               	btfss	status,2,c
 15260  001C80  D011               	goto	l2758
 15261                           
 15262                           ; BSR set to: 0
 15263  001C82  0E00               	movlw	0
 15264  001C84  6F8D               	movwf	___fldiv@b& (0+255),b
 15265  001C86  0E00               	movlw	0
 15266  001C88  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15267  001C8A  0E00               	movlw	0
 15268  001C8C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15269  001C8E  0E00               	movlw	0
 15270  001C90  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15271                           
 15272                           ; BSR set to: 0
 15273  001C92  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15274  001C96  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15275  001C9A  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15276  001C9E  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15277                           
 15278                           ; BSR set to: 0
 15279  001CA2  0012               	return	
 15280  001CA4                     l2758:
 15281                           
 15282                           ; BSR set to: 0
 15283                           
 15284                           ; BSR set to: 0
 15285  001CA4  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15286  001CA6  6F95               	movwf	??___fldiv& (0+255),b
 15287  001CA8  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15288  001CAA  1F95               	comf	??___fldiv& (0+255),f,b
 15289  001CAC  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15290  001CAE  4B95               	infsnz	??___fldiv& (0+255),f,b
 15291  001CB0  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15292  001CB2  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15293  001CB4  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15294  001CB6  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15295  001CB8  5195               	movf	??___fldiv& (0+255),w,b
 15296  001CBA  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15297  001CBC  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15298  001CBE  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15299  001CC0  0E7F               	movlw	127
 15300  001CC2  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15301  001CC4  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15302  001CC6  0E00               	movlw	0
 15303  001CC8  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15304  001CCA  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15305                           
 15306                           ; BSR set to: 0
 15307  001CCC  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15308  001CD0  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15309  001CD4  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15310  001CD8  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15311                           
 15312                           ; BSR set to: 0
 15313  001CDC  0E00               	movlw	0
 15314  001CDE  6F8D               	movwf	___fldiv@b& (0+255),b
 15315  001CE0  0E00               	movlw	0
 15316  001CE2  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15317  001CE4  0E00               	movlw	0
 15318  001CE6  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15319  001CE8  0E00               	movlw	0
 15320  001CEA  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15321                           
 15322                           ; BSR set to: 0
 15323  001CEC  0E00               	movlw	0
 15324  001CEE  6FA0               	movwf	___fldiv@grs& (0+255),b
 15325  001CF0  0E00               	movlw	0
 15326  001CF2  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15327  001CF4  0E00               	movlw	0
 15328  001CF6  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15329  001CF8  0E00               	movlw	0
 15330  001CFA  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15331                           
 15332                           ; BSR set to: 0
 15333  001CFC  0E00               	movlw	0
 15334  001CFE  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15335  001D00  D028               	goto	l2759
 15336  001D02                     
 15337                           ; BSR set to: 0
 15338                           
 15339                           ; BSR set to: 0
 15340  001D02  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15341  001D04  B4D8               	btfsc	status,2,c
 15342  001D06  D011               	goto	l2761
 15343                           
 15344                           ; BSR set to: 0
 15345  001D08  90D8               	bcf	status,0,c
 15346  001D0A  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15347  001D0C  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15348  001D0E  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15349  001D10  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15350  001D12  90D8               	bcf	status,0,c
 15351  001D14  378D               	rlcf	___fldiv@b& (0+255),f,b
 15352  001D16  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15353  001D18  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15354  001D1A  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15355                           
 15356                           ; BSR set to: 0
 15357  001D1C  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15358                           
 15359                           ; BSR set to: 0
 15360  001D1E  818D               	bsf	___fldiv@b& (0+255),0,b
 15361                           
 15362                           ; BSR set to: 0
 15363  001D20  90D8               	bcf	status,0,c
 15364  001D22  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15365  001D24  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15366  001D26  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15367  001D28  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15368  001D2A                     l2761:
 15369                           
 15370                           ; BSR set to: 0
 15371                           
 15372                           ; BSR set to: 0
 15373  001D2A  5191               	movf	___fldiv@a& (0+255),w,b
 15374  001D2C  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15375  001D2E  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15376  001D30  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15377  001D32  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15378  001D34  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15379  001D36  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15380  001D38  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15381  001D3A  A0D8               	btfss	status,0,c
 15382  001D3C  D009               	goto	l2763
 15383                           
 15384                           ; BSR set to: 0
 15385  001D3E  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15386                           
 15387                           ; BSR set to: 0
 15388  001D40  5191               	movf	___fldiv@a& (0+255),w,b
 15389  001D42  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15390  001D44  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15391  001D46  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15392  001D48  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15393  001D4A  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15394  001D4C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15395  001D4E  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15396  001D50                     l2763:
 15397                           
 15398                           ; BSR set to: 0
 15399                           
 15400                           ; BSR set to: 0
 15401  001D50  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15402  001D52                     l2759:
 15403                           
 15404                           ; BSR set to: 0
 15405  001D52  0E19               	movlw	25
 15406  001D54  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15407  001D56  D7D5               	goto	l2760
 15408                           
 15409                           ; BSR set to: 0
 15410                           
 15411                           ; BSR set to: 0
 15412  001D58  519A               	movf	___fldiv@rem& (0+255),w,b
 15413  001D5A  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15414  001D5C  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15415  001D5E  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15416  001D60  B4D8               	btfsc	status,2,c
 15417  001D62  D011               	goto	l2766
 15418                           
 15419                           ; BSR set to: 0
 15420  001D64  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15421                           
 15422                           ; BSR set to: 0
 15423  001D66  D00F               	goto	l2766
 15424  001D68                     
 15425                           ; BSR set to: 0
 15426                           
 15427                           ; BSR set to: 0
 15428  001D68  90D8               	bcf	status,0,c
 15429  001D6A  378D               	rlcf	___fldiv@b& (0+255),f,b
 15430  001D6C  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15431  001D6E  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15432  001D70  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15433                           
 15434                           ; BSR set to: 0
 15435  001D72  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15436                           
 15437                           ; BSR set to: 0
 15438  001D74  818D               	bsf	___fldiv@b& (0+255),0,b
 15439                           
 15440                           ; BSR set to: 0
 15441  001D76  90D8               	bcf	status,0,c
 15442  001D78  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15443  001D7A  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15444  001D7C  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15445  001D7E  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15446  001D80  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15447  001D82  A0D8               	btfss	status,0,c
 15448  001D84  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15449  001D86                     l2766:
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ; BSR set to: 0
 15454  001D86  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15455  001D88  D7EF               	goto	l2767
 15456                           
 15457                           ; BSR set to: 0
 15458                           
 15459                           ; BSR set to: 0
 15460  001D8A  0E00               	movlw	0
 15461  001D8C  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15462                           
 15463                           ; BSR set to: 0
 15464  001D8E  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15465  001D90  D016               	goto	l2773
 15466                           
 15467                           ; BSR set to: 0
 15468  001D92  0EFF               	movlw	255
 15469  001D94  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15470  001D96  6F95               	movwf	??___fldiv& (0+255),b
 15471  001D98  0EFF               	movlw	255
 15472  001D9A  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15473  001D9C  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15474  001D9E  0EFF               	movlw	255
 15475  001DA0  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15476  001DA2  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15477  001DA4  0E7F               	movlw	127
 15478  001DA6  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15479  001DA8  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15480  001DAA  5195               	movf	??___fldiv& (0+255),w,b
 15481  001DAC  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15482  001DAE  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15483  001DB0  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15484  001DB2  A4D8               	btfss	status,2,c
 15485  001DB4  D002               	goto	u7440
 15486                           
 15487                           ; BSR set to: 0
 15488                           
 15489                           ; BSR set to: 0
 15490  001DB6  A18D               	btfss	___fldiv@b& (0+255),0,b
 15491  001DB8  D002               	goto	l2773
 15492  001DBA                     u7440:
 15493                           
 15494                           ; BSR set to: 0
 15495  001DBA  0E01               	movlw	1
 15496  001DBC  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15497  001DBE                     l2773:
 15498                           
 15499                           ; BSR set to: 0
 15500                           
 15501                           ; BSR set to: 0
 15502                           
 15503                           ; BSR set to: 0
 15504  001DBE  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15505  001DC0  B4D8               	btfsc	status,2,c
 15506  001DC2  D01F               	goto	l2775
 15507                           
 15508                           ; BSR set to: 0
 15509  001DC4  0E01               	movlw	1
 15510  001DC6  278D               	addwf	___fldiv@b& (0+255),f,b
 15511  001DC8  0E00               	movlw	0
 15512  001DCA  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15513  001DCC  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15514  001DCE  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15515                           
 15516                           ; BSR set to: 0
 15517  001DD0  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 15518  001DD2  D017               	goto	l2775
 15519                           
 15520                           ; BSR set to: 0
 15521  001DD4  C08D  F095         	movff	___fldiv@b,??___fldiv
 15522  001DD8  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 15523  001DDC  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 15524  001DE0  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 15525  001DE4  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 15526  001DE6  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 15527  001DE8  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 15528  001DEA  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 15529  001DEC  3395               	rrcf	??___fldiv& (0+255),f,b
 15530  001DEE  C095  F08D         	movff	??___fldiv,___fldiv@b
 15531  001DF2  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 15532  001DF6  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 15533  001DFA  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 15534                           
 15535                           ; BSR set to: 0
 15536  001DFE  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15537  001E00  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15538  001E02                     l2775:
 15539                           
 15540                           ; BSR set to: 0
 15541                           
 15542                           ; BSR set to: 0
 15543                           
 15544                           ; BSR set to: 0
 15545  001E02  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15546  001E04  D010               	goto	l2776
 15547  001E06  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15548  001E08  E103               	bnz	u7470
 15549  001E0A  299E               	incf	___fldiv@new_exp& (0+255),w,b
 15550  001E0C  A0D8               	btfss	status,0,c
 15551  001E0E  D00B               	goto	l2776
 15552  001E10                     u7470:
 15553                           
 15554                           ; BSR set to: 0
 15555  001E10  0E00               	movlw	0
 15556  001E12  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15557  001E14  699E               	setf	___fldiv@new_exp& (0+255),b
 15558  001E16  0E00               	movlw	0
 15559  001E18  6F8D               	movwf	___fldiv@b& (0+255),b
 15560  001E1A  0E00               	movlw	0
 15561  001E1C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15562  001E1E  0E00               	movlw	0
 15563  001E20  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15564  001E22  0E00               	movlw	0
 15565  001E24  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15566  001E26                     l2776:
 15567                           
 15568                           ; BSR set to: 0
 15569                           
 15570                           ; BSR set to: 0
 15571  001E26  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15572  001E28  D005               	goto	u7480
 15573  001E2A  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15574  001E2C  E111               	bnz	l9176
 15575  001E2E  059E               	decf	___fldiv@new_exp& (0+255),w,b
 15576  001E30  B0D8               	btfsc	status,0,c
 15577  001E32  D00E               	goto	l2777
 15578  001E34                     u7480:
 15579                           
 15580                           ; BSR set to: 0
 15581  001E34  0E00               	movlw	0
 15582  001E36  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15583  001E38  0E00               	movlw	0
 15584  001E3A  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15585  001E3C  0E00               	movlw	0
 15586  001E3E  6F8D               	movwf	___fldiv@b& (0+255),b
 15587  001E40  0E00               	movlw	0
 15588  001E42  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15589  001E44  0E00               	movlw	0
 15590  001E46  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15591  001E48  0E00               	movlw	0
 15592  001E4A  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15593  001E4C  0E00               	movlw	0
 15594  001E4E  6F99               	movwf	___fldiv@sign& (0+255),b
 15595  001E50                     l2777:
 15596  001E50                     l9176:
 15597                           
 15598                           ; BSR set to: 0
 15599  001E50  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 15600                           
 15601                           ; BSR set to: 0
 15602  001E54  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 15603  001E56  D002               	goto	l2778
 15604                           
 15605                           ; BSR set to: 0
 15606  001E58  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15607  001E5A  D001               	goto	l2779
 15608  001E5C                     l2778:
 15609                           
 15610                           ; BSR set to: 0
 15611                           
 15612                           ; BSR set to: 0
 15613  001E5C  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 15614  001E5E                     l2779:
 15615                           
 15616                           ; BSR set to: 0
 15617                           
 15618                           ; BSR set to: 0
 15619  001E5E  90D8               	bcf	status,0,c
 15620  001E60  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 15621  001E62  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15622                           
 15623                           ; BSR set to: 0
 15624  001E64  5199               	movf	___fldiv@sign& (0+255),w,b
 15625  001E66  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15626                           
 15627                           ; BSR set to: 0
 15628  001E68  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15629  001E6C  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15630  001E70  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15631  001E74  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15632  001E78  0012               	return	
 15633  001E7A                     __end_of___fldiv:
 15634                           	opt stack 0
 15635                           tblptru	equ	0xFF8
 15636                           tblptrh	equ	0xFF7
 15637                           tblptrl	equ	0xFF6
 15638                           tablat	equ	0xFF5
 15639                           prodh	equ	0xFF4
 15640                           prodl	equ	0xFF3
 15641                           intcon	equ	0xFF2
 15642                           intcon3	equ	0xFF0
 15643                           postinc0	equ	0xFEE
 15644                           wreg	equ	0xFE8
 15645                           indf1	equ	0xFE7
 15646                           postdec1	equ	0xFE5
 15647                           fsr1h	equ	0xFE2
 15648                           fsr1l	equ	0xFE1
 15649                           indf2	equ	0xFDF
 15650                           fsr2h	equ	0xFDA
 15651                           fsr2l	equ	0xFD9
 15652                           status	equ	0xFD8
 15653                           
 15654 ;; *************** function ___fladd *****************
 15655 ;; Defined at:
 15656 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;  b               4    0[BANK0 ] unsigned char 
 15659 ;;  a               4    4[BANK0 ] unsigned char 
 15660 ;; Auto vars:     Size  Location     Type
 15661 ;;  grs             1   19[BANK0 ] unsigned char 
 15662 ;;  bexp            1   18[BANK0 ] unsigned char 
 15663 ;;  aexp            1   17[BANK0 ] unsigned char 
 15664 ;;  signs           1   16[BANK0 ] unsigned char 
 15665 ;; Return value:  Size  Location     Type
 15666 ;;                  4    0[BANK0 ] unsigned char 
 15667 ;; Registers used:
 15668 ;;		wreg, status,2, status,0
 15669 ;; Tracked objects:
 15670 ;;		On entry : 0/0
 15671 ;;		On exit  : 0/0
 15672 ;;		Unchanged: 0/0
 15673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15674 ;;      Params:         0       8       0       0       0       0       0       0       0
 15675 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15676 ;;      Temps:          0       8       0       0       0       0       0       0       0
 15677 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15678 ;;Total ram usage:       20 bytes
 15679 ;; Hardware stack levels used:    1
 15680 ;; Hardware stack levels required when called:   11
 15681 ;; This function calls:
 15682 ;;		Nothing
 15683 ;; This function is called by:
 15684 ;;		_ADC_TempConversion
 15685 ;; This function uses a non-reentrant model
 15686 ;;
 15687                           
 15688                           	psect	text50
 15689  001886                     __ptext50:
 15690                           	opt stack 0
 15691  001886                     ___fladd:
 15692                           	opt stack 16
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;incstack = 0
 15696  001886  0100               	movlb	0	; () banked
 15697  001888  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15698  00188A  0B80               	andlw	128
 15699  00188C  6F70               	movwf	___fladd@signs& (0+255),b
 15700  00188E  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15701  001890  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 15702  001892  6F72               	movwf	___fladd@bexp& (0+255),b
 15703                           
 15704                           ; BSR set to: 0
 15705  001894  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 15706                           
 15707                           ; BSR set to: 0
 15708  001896  8172               	bsf	___fladd@bexp& (0+255),0,b
 15709                           
 15710                           ; BSR set to: 0
 15711                           
 15712                           ; BSR set to: 0
 15713  001898  5172               	movf	___fladd@bexp& (0+255),w,b
 15714  00189A  B4D8               	btfsc	status,2,c
 15715  00189C  D00D               	goto	l2692
 15716                           
 15717                           ; BSR set to: 0
 15718  00189E  2972               	incf	___fladd@bexp& (0+255),w,b
 15719  0018A0  A4D8               	btfss	status,2,c
 15720  0018A2  D008               	goto	l2693
 15721                           
 15722                           ; BSR set to: 0
 15723  0018A4  0E00               	movlw	0
 15724  0018A6  6F60               	movwf	___fladd@b& (0+255),b
 15725  0018A8  0E00               	movlw	0
 15726  0018AA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15727  0018AC  0E00               	movlw	0
 15728  0018AE  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15729  0018B0  0E00               	movlw	0
 15730  0018B2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15731  0018B4                     l2693:
 15732                           
 15733                           ; BSR set to: 0
 15734                           
 15735                           ; BSR set to: 0
 15736  0018B4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15737  0018B6  D006               	goto	L10
 15738  0018B8                     l2692:
 15739                           
 15740                           ; BSR set to: 0
 15741                           
 15742                           ; BSR set to: 0
 15743  0018B8  0E00               	movlw	0
 15744  0018BA  6F60               	movwf	___fladd@b& (0+255),b
 15745  0018BC  0E00               	movlw	0
 15746  0018BE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15747  0018C0  0E00               	movlw	0
 15748  0018C2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15749  0018C4                     L10:
 15750  0018C4  0E00               	movlw	0
 15751  0018C6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15752                           
 15753                           ; BSR set to: 0
 15754                           
 15755                           ; BSR set to: 0
 15756  0018C8  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15757  0018CA  0B80               	andlw	128
 15758  0018CC  6F71               	movwf	___fladd@aexp& (0+255),b
 15759                           
 15760                           ; BSR set to: 0
 15761  0018CE  5170               	movf	___fladd@signs& (0+255),w,b
 15762  0018D0  1971               	xorwf	___fladd@aexp& (0+255),w,b
 15763  0018D2  A4D8               	btfss	status,2,c
 15764                           
 15765                           ; BSR set to: 0
 15766  0018D4  8D70               	bsf	___fladd@signs& (0+255),6,b
 15767                           
 15768                           ; BSR set to: 0
 15769                           
 15770                           ; BSR set to: 0
 15771  0018D6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15772  0018D8  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 15773  0018DA  6F71               	movwf	___fladd@aexp& (0+255),b
 15774                           
 15775                           ; BSR set to: 0
 15776  0018DC  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 15777                           
 15778                           ; BSR set to: 0
 15779  0018DE  8171               	bsf	___fladd@aexp& (0+255),0,b
 15780                           
 15781                           ; BSR set to: 0
 15782                           
 15783                           ; BSR set to: 0
 15784  0018E0  5171               	movf	___fladd@aexp& (0+255),w,b
 15785  0018E2  B4D8               	btfsc	status,2,c
 15786  0018E4  D00D               	goto	l2697
 15787                           
 15788                           ; BSR set to: 0
 15789  0018E6  2971               	incf	___fladd@aexp& (0+255),w,b
 15790  0018E8  A4D8               	btfss	status,2,c
 15791  0018EA  D008               	goto	l2698
 15792                           
 15793                           ; BSR set to: 0
 15794  0018EC  0E00               	movlw	0
 15795  0018EE  6F64               	movwf	___fladd@a& (0+255),b
 15796  0018F0  0E00               	movlw	0
 15797  0018F2  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15798  0018F4  0E00               	movlw	0
 15799  0018F6  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15800  0018F8  0E00               	movlw	0
 15801  0018FA  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15802  0018FC                     l2698:
 15803                           
 15804                           ; BSR set to: 0
 15805                           
 15806                           ; BSR set to: 0
 15807  0018FC  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 15808  0018FE  D006               	goto	L11
 15809  001900                     l2697:
 15810                           
 15811                           ; BSR set to: 0
 15812                           
 15813                           ; BSR set to: 0
 15814  001900  0E00               	movlw	0
 15815  001902  6F64               	movwf	___fladd@a& (0+255),b
 15816  001904  0E00               	movlw	0
 15817  001906  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15818  001908  0E00               	movlw	0
 15819  00190A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15820  00190C                     L11:
 15821  00190C  0E00               	movlw	0
 15822  00190E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15823                           
 15824                           ; BSR set to: 0
 15825                           
 15826                           ; BSR set to: 0
 15827  001910  5172               	movf	___fladd@bexp& (0+255),w,b
 15828  001912  5D71               	subwf	___fladd@aexp& (0+255),w,b
 15829  001914  B0D8               	btfsc	status,0,c
 15830  001916  D022               	goto	l2700
 15831                           
 15832                           ; BSR set to: 0
 15833  001918  AD70               	btfss	___fladd@signs& (0+255),6,b
 15834  00191A  D002               	goto	l2701
 15835                           
 15836                           ; BSR set to: 0
 15837  00191C  0E80               	movlw	128
 15838  00191E  1B70               	xorwf	___fladd@signs& (0+255),f,b
 15839  001920                     l2701:
 15840                           
 15841                           ; BSR set to: 0
 15842                           
 15843                           ; BSR set to: 0
 15844  001920  C072  F073         	movff	___fladd@bexp,___fladd@grs
 15845                           
 15846                           ; BSR set to: 0
 15847  001924  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15848                           
 15849                           ; BSR set to: 0
 15850  001928  C073  F071         	movff	___fladd@grs,___fladd@aexp
 15851                           
 15852                           ; BSR set to: 0
 15853  00192C  C060  F073         	movff	___fladd@b,___fladd@grs
 15854                           
 15855                           ; BSR set to: 0
 15856  001930  C064  F060         	movff	___fladd@a,___fladd@b
 15857                           
 15858                           ; BSR set to: 0
 15859  001934  C073  F064         	movff	___fladd@grs,___fladd@a
 15860                           
 15861                           ; BSR set to: 0
 15862  001938  C061  F073         	movff	___fladd@b+1,___fladd@grs
 15863                           
 15864                           ; BSR set to: 0
 15865  00193C  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 15866                           
 15867                           ; BSR set to: 0
 15868  001940  C073  F065         	movff	___fladd@grs,___fladd@a+1
 15869                           
 15870                           ; BSR set to: 0
 15871  001944  C062  F073         	movff	___fladd@b+2,___fladd@grs
 15872                           
 15873                           ; BSR set to: 0
 15874  001948  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 15875                           
 15876                           ; BSR set to: 0
 15877  00194C  C073  F066         	movff	___fladd@grs,___fladd@a+2
 15878                           
 15879                           ; BSR set to: 0
 15880  001950  C063  F073         	movff	___fladd@b+3,___fladd@grs
 15881                           
 15882                           ; BSR set to: 0
 15883  001954  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 15884                           
 15885                           ; BSR set to: 0
 15886  001958  C073  F067         	movff	___fladd@grs,___fladd@a+3
 15887  00195C                     l2700:
 15888                           
 15889                           ; BSR set to: 0
 15890                           
 15891                           ; BSR set to: 0
 15892  00195C  0E00               	movlw	0
 15893  00195E  6F73               	movwf	___fladd@grs& (0+255),b
 15894                           
 15895                           ; BSR set to: 0
 15896  001960  5172               	movf	___fladd@bexp& (0+255),w,b
 15897  001962  6F68               	movwf	??___fladd& (0+255),b
 15898  001964  6B69               	clrf	(??___fladd+1)& (0+255),b
 15899  001966  1F68               	comf	??___fladd& (0+255),f,b
 15900  001968  1F69               	comf	(??___fladd+1)& (0+255),f,b
 15901  00196A  4B68               	infsnz	??___fladd& (0+255),f,b
 15902  00196C  2B69               	incf	(??___fladd+1)& (0+255),f,b
 15903  00196E  5171               	movf	___fladd@aexp& (0+255),w,b
 15904  001970  6F6A               	movwf	(??___fladd+2)& (0+255),b
 15905  001972  6B6B               	clrf	(??___fladd+3)& (0+255),b
 15906  001974  5168               	movf	??___fladd& (0+255),w,b
 15907  001976  276A               	addwf	(??___fladd+2)& (0+255),f,b
 15908  001978  5169               	movf	(??___fladd+1)& (0+255),w,b
 15909  00197A  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 15910  00197C  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 15911  00197E  D02C               	goto	l2704
 15912  001980  516B               	movf	(??___fladd+3)& (0+255),w,b
 15913  001982  E104               	bnz	u6970
 15914  001984  0E1A               	movlw	26
 15915  001986  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 15916  001988  A0D8               	btfss	status,0,c
 15917  00198A  D026               	goto	l2704
 15918  00198C                     u6970:
 15919                           
 15920                           ; BSR set to: 0
 15921  00198C  5160               	movf	___fladd@b& (0+255),w,b
 15922  00198E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 15923  001990  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 15924  001992  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 15925  001994  B4D8               	btfsc	status,2,c
 15926  001996  D002               	goto	u6980
 15927  001998  0E01               	movlw	1
 15928  00199A  D001               	goto	u6990
 15929  00199C                     u6980:
 15930  00199C  0E00               	movlw	0
 15931  00199E                     u6990:
 15932  00199E  6F73               	movwf	___fladd@grs& (0+255),b
 15933                           
 15934                           ; BSR set to: 0
 15935  0019A0  0E00               	movlw	0
 15936  0019A2  6F60               	movwf	___fladd@b& (0+255),b
 15937  0019A4  0E00               	movlw	0
 15938  0019A6  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15939  0019A8  0E00               	movlw	0
 15940  0019AA  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15941  0019AC  0E00               	movlw	0
 15942  0019AE  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15943                           
 15944                           ; BSR set to: 0
 15945  0019B0  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15946  0019B4  D015               	goto	u7020
 15947  0019B6                     l2705:
 15948                           
 15949                           ; BSR set to: 0
 15950  0019B6  A173               	btfss	___fladd@grs& (0+255),0,b
 15951  0019B8  D005               	goto	l2706
 15952                           
 15953                           ; BSR set to: 0
 15954  0019BA  90D8               	bcf	status,0,c
 15955  0019BC  3173               	rrcf	___fladd@grs& (0+255),w,b
 15956  0019BE  0901               	iorlw	1
 15957  0019C0  6F73               	movwf	___fladd@grs& (0+255),b
 15958  0019C2  D002               	goto	l2707
 15959  0019C4                     l2706:
 15960                           
 15961                           ; BSR set to: 0
 15962                           
 15963                           ; BSR set to: 0
 15964  0019C4  90D8               	bcf	status,0,c
 15965  0019C6  3373               	rrcf	___fladd@grs& (0+255),f,b
 15966  0019C8                     l2707:
 15967                           
 15968                           ; BSR set to: 0
 15969                           
 15970                           ; BSR set to: 0
 15971  0019C8  B160               	btfsc	___fladd@b& (0+255),0,b
 15972                           
 15973                           ; BSR set to: 0
 15974  0019CA  8F73               	bsf	___fladd@grs& (0+255),7,b
 15975                           
 15976                           ; BSR set to: 0
 15977                           
 15978                           ; BSR set to: 0
 15979  0019CC  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15980  0019CE  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15981  0019D0  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15982  0019D2  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15983  0019D4  3360               	rrcf	___fladd@b& (0+255),f,b
 15984                           
 15985                           ; BSR set to: 0
 15986  0019D6  2B72               	incf	___fladd@bexp& (0+255),f,b
 15987  0019D8                     l2704:
 15988                           
 15989                           ; BSR set to: 0
 15990  0019D8  5171               	movf	___fladd@aexp& (0+255),w,b
 15991  0019DA  5D72               	subwf	___fladd@bexp& (0+255),w,b
 15992  0019DC  A0D8               	btfss	status,0,c
 15993  0019DE  D7EB               	goto	l2705
 15994  0019E0                     u7020:
 15995                           
 15996                           ; BSR set to: 0
 15997                           
 15998                           ; BSR set to: 0
 15999  0019E0  BD70               	btfsc	___fladd@signs& (0+255),6,b
 16000  0019E2  D029               	goto	l2710
 16001                           
 16002                           ; BSR set to: 0
 16003  0019E4  5172               	movf	___fladd@bexp& (0+255),w,b
 16004  0019E6  A4D8               	btfss	status,2,c
 16005  0019E8  D009               	goto	l2711
 16006                           
 16007                           ; BSR set to: 0
 16008  0019EA  0E00               	movlw	0
 16009  0019EC  6F60               	movwf	?___fladd& (0+255),b
 16010  0019EE  0E00               	movlw	0
 16011  0019F0  6F61               	movwf	(?___fladd+1)& (0+255),b
 16012  0019F2  0E00               	movlw	0
 16013  0019F4  6F62               	movwf	(?___fladd+2)& (0+255),b
 16014  0019F6  0E00               	movlw	0
 16015  0019F8  6F63               	movwf	(?___fladd+3)& (0+255),b
 16016                           
 16017                           ; BSR set to: 0
 16018  0019FA  0012               	return	
 16019  0019FC                     l2711:
 16020                           
 16021                           ; BSR set to: 0
 16022                           
 16023                           ; BSR set to: 0
 16024  0019FC  5164               	movf	___fladd@a& (0+255),w,b
 16025  0019FE  2760               	addwf	___fladd@b& (0+255),f,b
 16026  001A00  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16027  001A02  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16028  001A04  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16029  001A06  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16030  001A08  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16031  001A0A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16032                           
 16033                           ; BSR set to: 0
 16034  001A0C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16035  001A0E  D083               	goto	u7150
 16036                           
 16037                           ; BSR set to: 0
 16038  001A10  A173               	btfss	___fladd@grs& (0+255),0,b
 16039  001A12  D006               	goto	l2714
 16040                           
 16041                           ; BSR set to: 0
 16042  001A14  90D8               	bcf	status,0,c
 16043  001A16  3373               	rrcf	___fladd@grs& (0+255),f,b
 16044  001A18  5173               	movf	___fladd@grs& (0+255),w,b
 16045  001A1A  0901               	iorlw	1
 16046  001A1C  6F73               	movwf	___fladd@grs& (0+255),b
 16047  001A1E  D002               	goto	l2715
 16048  001A20                     l2714:
 16049                           
 16050                           ; BSR set to: 0
 16051                           
 16052                           ; BSR set to: 0
 16053  001A20  90D8               	bcf	status,0,c
 16054  001A22  3373               	rrcf	___fladd@grs& (0+255),f,b
 16055  001A24                     l2715:
 16056                           
 16057                           ; BSR set to: 0
 16058                           
 16059                           ; BSR set to: 0
 16060  001A24  B160               	btfsc	___fladd@b& (0+255),0,b
 16061                           
 16062                           ; BSR set to: 0
 16063  001A26  8F73               	bsf	___fladd@grs& (0+255),7,b
 16064                           
 16065                           ; BSR set to: 0
 16066                           
 16067                           ; BSR set to: 0
 16068  001A28  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16069  001A2A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16070  001A2C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16071  001A2E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16072  001A30  3360               	rrcf	___fladd@b& (0+255),f,b
 16073                           
 16074                           ; BSR set to: 0
 16075  001A32  2B72               	incf	___fladd@bexp& (0+255),f,b
 16076                           
 16077                           ; BSR set to: 0
 16078  001A34  D070               	goto	u7150
 16079  001A36                     l2710:
 16080                           
 16081                           ; BSR set to: 0
 16082                           
 16083                           ; BSR set to: 0
 16084  001A36  5164               	movf	___fladd@a& (0+255),w,b
 16085  001A38  5D60               	subwf	___fladd@b& (0+255),w,b
 16086  001A3A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16087  001A3C  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16088  001A3E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16089  001A40  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16090  001A42  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16091  001A44  0A80               	xorlw	128
 16092  001A46  6F68               	movwf	??___fladd& (0+255),b
 16093  001A48  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16094  001A4A  0A80               	xorlw	128
 16095  001A4C  5968               	subwfb	??___fladd& (0+255),w,b
 16096  001A4E  B0D8               	btfsc	status,0,c
 16097  001A50  D036               	goto	l2718
 16098                           
 16099                           ; BSR set to: 0
 16100  001A52  C060  F068         	movff	___fladd@b,??___fladd
 16101  001A56  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16102  001A5A  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16103  001A5E  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16104  001A62  1F68               	comf	??___fladd& (0+255),f,b
 16105  001A64  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16106  001A66  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16107  001A68  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16108  001A6A  2B68               	incf	??___fladd& (0+255),f,b
 16109  001A6C  0E00               	movlw	0
 16110  001A6E  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16111  001A70  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16112  001A72  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16113  001A74  5164               	movf	___fladd@a& (0+255),w,b
 16114  001A76  2568               	addwf	??___fladd& (0+255),w,b
 16115  001A78  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16116  001A7A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16117  001A7C  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16118  001A7E  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16119  001A80  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16120  001A82  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16121  001A84  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16122  001A86  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16123  001A88  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16124  001A8A  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16125  001A8C  0EFF               	movlw	255
 16126  001A8E  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16127  001A90  6F60               	movwf	___fladd@b& (0+255),b
 16128  001A92  0EFF               	movlw	255
 16129  001A94  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16130  001A96  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16131  001A98  0EFF               	movlw	255
 16132  001A9A  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16133  001A9C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16134  001A9E  0EFF               	movlw	255
 16135  001AA0  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16136  001AA2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16137  001AA4  0E80               	movlw	128
 16138  001AA6  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16139                           
 16140                           ; BSR set to: 0
 16141  001AA8  6D73               	negf	___fladd@grs& (0+255),b
 16142                           
 16143                           ; BSR set to: 0
 16144  001AAA  5173               	movf	___fladd@grs& (0+255),w,b
 16145  001AAC  A4D8               	btfss	status,2,c
 16146  001AAE  D00F               	goto	l2720
 16147                           
 16148                           ; BSR set to: 0
 16149  001AB0  0E01               	movlw	1
 16150  001AB2  2760               	addwf	___fladd@b& (0+255),f,b
 16151  001AB4  0E00               	movlw	0
 16152  001AB6  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16153  001AB8  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16154  001ABA  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16155                           
 16156                           ; BSR set to: 0
 16157  001ABC  D008               	goto	l2720
 16158  001ABE                     l2718:
 16159                           
 16160                           ; BSR set to: 0
 16161                           
 16162                           ; BSR set to: 0
 16163  001ABE  5164               	movf	___fladd@a& (0+255),w,b
 16164  001AC0  5F60               	subwf	___fladd@b& (0+255),f,b
 16165  001AC2  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16166  001AC4  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16167  001AC6  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16168  001AC8  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16169  001ACA  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16170  001ACC  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16171  001ACE                     l2720:
 16172                           
 16173                           ; BSR set to: 0
 16174  001ACE  5160               	movf	___fladd@b& (0+255),w,b
 16175  001AD0  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16176  001AD2  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16177  001AD4  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16178  001AD6  A4D8               	btfss	status,2,c
 16179  001AD8  D01C               	goto	l2727
 16180                           
 16181                           ; BSR set to: 0
 16182  001ADA  5173               	movf	___fladd@grs& (0+255),w,b
 16183  001ADC  A4D8               	btfss	status,2,c
 16184  001ADE  D019               	goto	l2727
 16185                           
 16186                           ; BSR set to: 0
 16187  001AE0  0E00               	movlw	0
 16188  001AE2  6F60               	movwf	?___fladd& (0+255),b
 16189  001AE4  0E00               	movlw	0
 16190  001AE6  6F61               	movwf	(?___fladd+1)& (0+255),b
 16191  001AE8  0E00               	movlw	0
 16192  001AEA  6F62               	movwf	(?___fladd+2)& (0+255),b
 16193  001AEC  0E00               	movlw	0
 16194  001AEE  6F63               	movwf	(?___fladd+3)& (0+255),b
 16195                           
 16196                           ; BSR set to: 0
 16197  001AF0  0012               	return	
 16198  001AF2                     
 16199                           ; BSR set to: 0
 16200                           
 16201                           ; BSR set to: 0
 16202  001AF2  90D8               	bcf	status,0,c
 16203  001AF4  3760               	rlcf	___fladd@b& (0+255),f,b
 16204  001AF6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16205  001AF8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16206  001AFA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16207                           
 16208                           ; BSR set to: 0
 16209  001AFC  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16210                           
 16211                           ; BSR set to: 0
 16212  001AFE  8160               	bsf	___fladd@b& (0+255),0,b
 16213                           
 16214                           ; BSR set to: 0
 16215                           
 16216                           ; BSR set to: 0
 16217  001B00  A173               	btfss	___fladd@grs& (0+255),0,b
 16218  001B02  D002               	goto	l2725
 16219                           
 16220                           ; BSR set to: 0
 16221  001B04  80D8               	bsf	status,0,c
 16222  001B06  D001               	goto	L12
 16223  001B08                     l2725:
 16224                           
 16225                           ; BSR set to: 0
 16226                           
 16227                           ; BSR set to: 0
 16228  001B08  90D8               	bcf	status,0,c
 16229  001B0A                     L12:
 16230  001B0A  3773               	rlcf	___fladd@grs& (0+255),f,b
 16231                           
 16232                           ; BSR set to: 0
 16233                           
 16234                           ; BSR set to: 0
 16235  001B0C  5172               	movf	___fladd@bexp& (0+255),w,b
 16236  001B0E  A4D8               	btfss	status,2,c
 16237                           
 16238                           ; BSR set to: 0
 16239  001B10  0772               	decf	___fladd@bexp& (0+255),f,b
 16240  001B12                     l2727:
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245                           
 16246                           ; BSR set to: 0
 16247  001B12  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16248  001B14  D7EE               	goto	l2723
 16249  001B16                     u7150:
 16250                           
 16251                           ; BSR set to: 0
 16252                           
 16253                           ; BSR set to: 0
 16254                           
 16255                           ; BSR set to: 0
 16256  001B16  0E00               	movlw	0
 16257  001B18  6F71               	movwf	___fladd@aexp& (0+255),b
 16258                           
 16259                           ; BSR set to: 0
 16260  001B1A  AF73               	btfss	___fladd@grs& (0+255),7,b
 16261  001B1C  D00A               	goto	l2732
 16262                           
 16263                           ; BSR set to: 0
 16264  001B1E  C073  F068         	movff	___fladd@grs,??___fladd
 16265  001B22  0E7F               	movlw	127
 16266  001B24  1768               	andwf	??___fladd& (0+255),f,b
 16267  001B26  A4D8               	btfss	status,2,c
 16268  001B28  D002               	goto	u7180
 16269                           
 16270                           ; BSR set to: 0
 16271                           
 16272                           ; BSR set to: 0
 16273  001B2A  A160               	btfss	___fladd@b& (0+255),0,b
 16274  001B2C  D002               	goto	l2732
 16275  001B2E                     u7180:
 16276                           
 16277                           ; BSR set to: 0
 16278  001B2E  0E01               	movlw	1
 16279  001B30  6F71               	movwf	___fladd@aexp& (0+255),b
 16280  001B32                     l2732:
 16281                           
 16282                           ; BSR set to: 0
 16283                           
 16284                           ; BSR set to: 0
 16285                           
 16286                           ; BSR set to: 0
 16287  001B32  5171               	movf	___fladd@aexp& (0+255),w,b
 16288  001B34  B4D8               	btfsc	status,2,c
 16289  001B36  D020               	goto	l2735
 16290                           
 16291                           ; BSR set to: 0
 16292  001B38  0E01               	movlw	1
 16293  001B3A  2760               	addwf	___fladd@b& (0+255),f,b
 16294  001B3C  0E00               	movlw	0
 16295  001B3E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16296  001B40  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16297  001B42  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16298                           
 16299                           ; BSR set to: 0
 16300  001B44  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16301  001B46  D018               	goto	l2735
 16302                           
 16303                           ; BSR set to: 0
 16304  001B48  C060  F068         	movff	___fladd@b,??___fladd
 16305  001B4C  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16306  001B50  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16307  001B54  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16308  001B58  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16309  001B5A  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16310  001B5C  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16311  001B5E  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16312  001B60  3368               	rrcf	??___fladd& (0+255),f,b
 16313  001B62  C068  F060         	movff	??___fladd,___fladd@b
 16314  001B66  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16315  001B6A  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16316  001B6E  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16317  001B72  2972               	incf	___fladd@bexp& (0+255),w,b
 16318  001B74  A4D8               	btfss	status,2,c
 16319                           
 16320                           ; BSR set to: 0
 16321  001B76  2B72               	incf	___fladd@bexp& (0+255),f,b
 16322  001B78                     l2735:
 16323                           
 16324                           ; BSR set to: 0
 16325                           
 16326                           ; BSR set to: 0
 16327                           
 16328                           ; BSR set to: 0
 16329                           
 16330                           ; BSR set to: 0
 16331  001B78  2972               	incf	___fladd@bexp& (0+255),w,b
 16332  001B7A  B4D8               	btfsc	status,2,c
 16333  001B7C  D003               	goto	u7230
 16334                           
 16335                           ; BSR set to: 0
 16336  001B7E  5172               	movf	___fladd@bexp& (0+255),w,b
 16337  001B80  A4D8               	btfss	status,2,c
 16338  001B82  D00D               	goto	l2739
 16339  001B84                     u7230:
 16340                           
 16341                           ; BSR set to: 0
 16342                           
 16343                           ; BSR set to: 0
 16344  001B84  0E00               	movlw	0
 16345  001B86  6F60               	movwf	___fladd@b& (0+255),b
 16346  001B88  0E00               	movlw	0
 16347  001B8A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16348  001B8C  0E00               	movlw	0
 16349  001B8E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16350  001B90  0E00               	movlw	0
 16351  001B92  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16352  001B94  5172               	movf	___fladd@bexp& (0+255),w,b
 16353  001B96  A4D8               	btfss	status,2,c
 16354  001B98  D002               	goto	l2739
 16355                           
 16356                           ; BSR set to: 0
 16357  001B9A  0E00               	movlw	0
 16358  001B9C  6F70               	movwf	___fladd@signs& (0+255),b
 16359  001B9E                     l2739:
 16360                           
 16361                           ; BSR set to: 0
 16362                           
 16363                           ; BSR set to: 0
 16364                           
 16365                           ; BSR set to: 0
 16366  001B9E  A172               	btfss	___fladd@bexp& (0+255),0,b
 16367  001BA0  D002               	goto	l2740
 16368                           
 16369                           ; BSR set to: 0
 16370  001BA2  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16371  001BA4  D001               	goto	l2741
 16372  001BA6                     l2740:
 16373                           
 16374                           ; BSR set to: 0
 16375                           
 16376                           ; BSR set to: 0
 16377  001BA6  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16378  001BA8                     l2741:
 16379                           
 16380                           ; BSR set to: 0
 16381                           
 16382                           ; BSR set to: 0
 16383  001BA8  90D8               	bcf	status,0,c
 16384  001BAA  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16385  001BAC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16386                           
 16387                           ; BSR set to: 0
 16388  001BAE  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16389                           
 16390                           ; BSR set to: 0
 16391  001BB0  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16392                           
 16393                           ; BSR set to: 0
 16394                           
 16395                           ; BSR set to: 0
 16396  001BB2  C060  F060         	movff	___fladd@b,?___fladd
 16397  001BB6  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16398  001BBA  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16399  001BBE  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16400  001BC2  0012               	return	
 16401  001BC4                     __end_of___fladd:
 16402                           	opt stack 0
 16403                           tblptru	equ	0xFF8
 16404                           tblptrh	equ	0xFF7
 16405                           tblptrl	equ	0xFF6
 16406                           tablat	equ	0xFF5
 16407                           prodh	equ	0xFF4
 16408                           prodl	equ	0xFF3
 16409                           intcon	equ	0xFF2
 16410                           intcon3	equ	0xFF0
 16411                           postinc0	equ	0xFEE
 16412                           wreg	equ	0xFE8
 16413                           indf1	equ	0xFE7
 16414                           postdec1	equ	0xFE5
 16415                           fsr1h	equ	0xFE2
 16416                           fsr1l	equ	0xFE1
 16417                           indf2	equ	0xFDF
 16418                           fsr2h	equ	0xFDA
 16419                           fsr2l	equ	0xFD9
 16420                           status	equ	0xFD8
 16421                           
 16422 ;; *************** function _moteJoiningProcess *****************
 16423 ;; Defined at:
 16424 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 16425 ;; Parameters:    Size  Location     Type
 16426 ;;  messageReady    1    wreg     unsigned char 
 16427 ;;  changeStates    1   23[BANK0 ] unsigned char 
 16428 ;;  selectButton    1   24[BANK0 ] unsigned char 
 16429 ;; Auto vars:     Size  Location     Type
 16430 ;;  messageReady    1   28[BANK0 ] unsigned char 
 16431 ;;  readDataRate    1   26[BANK0 ] unsigned char 
 16432 ;;  joiningCompl    1   27[BANK0 ] unsigned char 
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1    wreg      enum E6155
 16435 ;; Registers used:
 16436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16442 ;;      Params:         0       2       0       0       0       0       0       0       0
 16443 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16444 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16445 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16446 ;;Total ram usage:        6 bytes
 16447 ;; Hardware stack levels used:    1
 16448 ;; Hardware stack levels required when called:   16
 16449 ;; This function calls:
 16450 ;;		_DATAEE_WriteByte
 16451 ;;		_moteApp_delayms
 16452 ;;		_oled_clear
 16453 ;;		_oled_putString
 16454 ;;		_sendCommand
 16455 ;;		_strcmp
 16456 ;;		_strncmp
 16457 ;; This function is called by:
 16458 ;;		_moteHandler
 16459 ;; This function uses a non-reentrant model
 16460 ;;
 16461                           
 16462                           	psect	text51
 16463  00100E                     __ptext51:
 16464                           	opt stack 0
 16465  00100E                     _moteJoiningProcess:
 16466                           	opt stack 13
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;incstack = 0
 16470                           ;moteJoiningProcess@messageReady stored from wreg
 16471  00100E  0100               	movlb	0	; () banked
 16472  001010  6F7C               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16473                           
 16474                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 16475  001012  0E00               	movlw	0
 16476  001014  0100               	movlb	0	; () banked
 16477  001016  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16478                           
 16479                           ;MOTEapp.c: 297: switch (activeState)
 16480  001018  D266               	goto	l390
 16481  00101A                     
 16482                           ; BSR set to: 0
 16483                           ;MOTEapp.c: 300: while(1);
 16484  00101A  D7FF               	goto	l391
 16485  00101C                     
 16486                           ;MOTEapp.c: 303: sendCommand("sys reset");
 16487  00101C  0EFC               	movlw	low STR_30
 16488  00101E  0100               	movlb	0	; () banked
 16489  001020  6F61               	movwf	sendCommand@string& (0+255),b
 16490  001022  0E7E               	movlw	high STR_30
 16491  001024  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16492  001026  EC7D  F02B         	call	_sendCommand	;wreg free
 16493  00102A  D13A               	goto	l10510
 16494  00102C                     
 16495                           ; BSR set to: 0
 16496                           ;MOTEapp.c: 307: if (selectButton)
 16497                           
 16498                           ; BSR set to: 0
 16499  00102C  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16500  00102E  B4D8               	btfsc	status,2,c
 16501  001030  D002               	goto	l398
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;MOTEapp.c: 308: {
 16505                           ;MOTEapp.c: 309: activeState = moteComFailure;
 16506  001032  0E0A               	movlw	10
 16507  001034  6FF4               	movwf	_activeState& (0+255),b
 16508  001036                     l398:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;MOTEapp.c: 310: }
 16512                           ;MOTEapp.c: 311: if ( messageReady )
 16513  001036  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16514  001038  B4D8               	btfsc	status,2,c
 16515  00103A  D279               	goto	l395
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;MOTEapp.c: 312: {
 16519                           ;MOTEapp.c: 313: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16520  00103C  0E50               	movlw	low _moduleResonseBuffer
 16521  00103E  6F60               	movwf	strncmp@s1& (0+255),b
 16522  001040  0E01               	movlw	high _moduleResonseBuffer
 16523  001042  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16524  001044  0EB8               	movlw	low STR_31
 16525  001046  6F62               	movwf	strncmp@s2& (0+255),b
 16526  001048  0E7F               	movlw	high STR_31
 16527  00104A  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16528  00104C  0E00               	movlw	0
 16529  00104E  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16530  001050  0E04               	movlw	4
 16531  001052  6F64               	movwf	strncmp@len& (0+255),b
 16532  001054  ECB7  F023         	call	_strncmp	;wreg free
 16533  001058  0100               	movlb	0	; () banked
 16534  00105A  5160               	movf	?_strncmp& (0+255),w,b
 16535  00105C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16536  00105E  A4D8               	btfss	status,2,c
 16537  001060  D029               	goto	l400
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;MOTEapp.c: 314: {
 16541                           ;MOTEapp.c: 315: rnModule = rn2483;
 16542  001062  0E00               	movlw	0
 16543  001064  6FEE               	movwf	_rnModule& (0+255),b
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;MOTEapp.c: 316: oled_clear();
 16547  001066  EC1A  F02D         	call	_oled_clear	;wreg free
 16548                           
 16549                           ;MOTEapp.c: 317: oled_putString(" Joining Method ",0,0);
 16550  00106A  0E43               	movlw	low STR_32
 16551  00106C  0100               	movlb	0	; () banked
 16552  00106E  6F72               	movwf	oled_putString@string& (0+255),b
 16553  001070  0E7B               	movlw	high STR_32
 16554  001072  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16555  001074  0E00               	movlw	0
 16556  001076  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16557  001078  0E00               	movlw	0
 16558  00107A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16559  00107C  ECA1  F026         	call	_oled_putString	;wreg free
 16560                           
 16561                           ;MOTEapp.c: 318: oled_putString("<- ABP   OTAA ->", 0,2);
 16562  001080  0E98               	movlw	low STR_33
 16563  001082  0100               	movlb	0	; () banked
 16564  001084  6F72               	movwf	oled_putString@string& (0+255),b
 16565  001086  0E7B               	movlw	high STR_33
 16566  001088  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16567  00108A  0E00               	movlw	0
 16568  00108C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16569  00108E  0E02               	movlw	2
 16570  001090  6F75               	movwf	oled_putString@start_page& (0+255),b
 16571  001092  ECA1  F026         	call	_oled_putString	;wreg free
 16572                           
 16573                           ;MOTEapp.c: 319: oled_putString("  (S2)   (S3)   ", 0,3);
 16574  001096  0EEE               	movlw	low STR_34
 16575  001098  0100               	movlb	0	; () banked
 16576  00109A  6F72               	movwf	oled_putString@string& (0+255),b
 16577  00109C  0E7A               	movlw	high STR_34
 16578  00109E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16579  0010A0  0E00               	movlw	0
 16580  0010A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16581  0010A4  0E03               	movlw	3
 16582  0010A6  6F75               	movwf	oled_putString@start_page& (0+255),b
 16583  0010A8  ECA1  F026         	call	_oled_putString	;wreg free
 16584  0010AC  D03B               	goto	l10448
 16585  0010AE                     L13:
 16586  0010AE  0100               	movlb	0	; () banked
 16587  0010B0                     L14:
 16588  0010B0  6FF4               	movwf	_activeState& (0+255),b
 16589                           
 16590                           ;MOTEapp.c: 321: }
 16591  0010B2  D23D               	goto	l395
 16592  0010B4                     l400:
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;MOTEapp.c: 322: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16596                           
 16597                           ; BSR set to: 0
 16598  0010B4  0E50               	movlw	low _moduleResonseBuffer
 16599  0010B6  6F60               	movwf	strncmp@s1& (0+255),b
 16600  0010B8  0E01               	movlw	high _moduleResonseBuffer
 16601  0010BA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16602  0010BC  0EBD               	movlw	low STR_35
 16603  0010BE  6F62               	movwf	strncmp@s2& (0+255),b
 16604  0010C0  0E7F               	movlw	high STR_35
 16605  0010C2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16606  0010C4  0E00               	movlw	0
 16607  0010C6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16608  0010C8  0E04               	movlw	4
 16609  0010CA  6F64               	movwf	strncmp@len& (0+255),b
 16610  0010CC  ECB7  F023         	call	_strncmp	;wreg free
 16611  0010D0  0100               	movlb	0	; () banked
 16612  0010D2  5160               	movf	?_strncmp& (0+255),w,b
 16613  0010D4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16614  0010D6  A4D8               	btfss	status,2,c
 16615  0010D8  D027               	goto	l402
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;MOTEapp.c: 323: {
 16619                           ;MOTEapp.c: 324: rnModule = rn2903;
 16620  0010DA  0E01               	movlw	1
 16621  0010DC  6FEE               	movwf	_rnModule& (0+255),b
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;MOTEapp.c: 325: oled_clear();
 16625  0010DE  EC1A  F02D         	call	_oled_clear	;wreg free
 16626                           
 16627                           ;MOTEapp.c: 326: oled_putString(" Joining Method ",0,0);
 16628  0010E2  0E43               	movlw	low STR_32
 16629  0010E4  0100               	movlb	0	; () banked
 16630  0010E6  6F72               	movwf	oled_putString@string& (0+255),b
 16631  0010E8  0E7B               	movlw	high STR_32
 16632  0010EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16633  0010EC  0E00               	movlw	0
 16634  0010EE  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16635  0010F0  0E00               	movlw	0
 16636  0010F2  6F75               	movwf	oled_putString@start_page& (0+255),b
 16637  0010F4  ECA1  F026         	call	_oled_putString	;wreg free
 16638                           
 16639                           ;MOTEapp.c: 327: oled_putString("<- ABP   OTAA ->", 0,2);
 16640  0010F8  0E98               	movlw	low STR_33
 16641  0010FA  0100               	movlb	0	; () banked
 16642  0010FC  6F72               	movwf	oled_putString@string& (0+255),b
 16643  0010FE  0E7B               	movlw	high STR_33
 16644  001100  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16645  001102  0E00               	movlw	0
 16646  001104  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16647  001106  0E02               	movlw	2
 16648  001108  6F75               	movwf	oled_putString@start_page& (0+255),b
 16649  00110A  ECA1  F026         	call	_oled_putString	;wreg free
 16650                           
 16651                           ;MOTEapp.c: 328: oled_putString("  (S2)   (S3)   ", 0,3);
 16652  00110E  0EEE               	movlw	low STR_34
 16653  001110  0100               	movlb	0	; () banked
 16654  001112  6F72               	movwf	oled_putString@string& (0+255),b
 16655  001114  0E7A               	movlw	high STR_34
 16656  001116  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16657  001118  0E00               	movlw	0
 16658  00111A  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16659  00111C  0E03               	movlw	3
 16660  00111E  6F75               	movwf	oled_putString@start_page& (0+255),b
 16661  001120  ECA1  F026         	call	_oled_putString	;wreg free
 16662  001124                     l10448:
 16663                           
 16664                           ;MOTEapp.c: 329: activeState = moteJoinMethod;
 16665  001124  0E02               	movlw	2
 16666  001126  D7C3               	goto	L13
 16667  001128                     l402:
 16668                           
 16669                           ; BSR set to: 0
 16670                           ;MOTEapp.c: 331: else
 16671                           ;MOTEapp.c: 332: {
 16672                           ;MOTEapp.c: 333: sendCommand("sys reset");
 16673                           
 16674                           ; BSR set to: 0
 16675  001128  0EFC               	movlw	low STR_30
 16676  00112A  6F61               	movwf	sendCommand@string& (0+255),b
 16677  00112C  0E7E               	movlw	high STR_30
 16678  00112E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16679  001130  EC7D  F02B         	call	_sendCommand	;wreg free
 16680                           
 16681                           ;MOTEapp.c: 334: moteApp_delayms(25);
 16682  001134  0E00               	movlw	0
 16683  001136  0100               	movlb	0	; () banked
 16684  001138  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16685  00113A  0E19               	movlw	25
 16686  00113C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16687  00113E  EC33  F02B         	call	_moteApp_delayms	;wreg free
 16688                           
 16689                           ;MOTEapp.c: 335: activeState = moteStartup;
 16690  001142  0E00               	movlw	0
 16691  001144  D7B4               	goto	L13
 16692  001146                     
 16693                           ; BSR set to: 0
 16694                           ;MOTEapp.c: 340: if (changeStates)
 16695                           
 16696                           ; BSR set to: 0
 16697  001146  5177               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16698  001148  B4D8               	btfsc	status,2,c
 16699  00114A  D019               	goto	l405
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;MOTEapp.c: 341: {
 16703                           ;MOTEapp.c: 342: oled_putString("  (S2)          ", 0,3);
 16704  00114C  0EBB               	movlw	low STR_40
 16705  00114E  6F72               	movwf	oled_putString@string& (0+255),b
 16706  001150  0E7A               	movlw	high STR_40
 16707  001152  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16708  001154  0E00               	movlw	0
 16709  001156  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16710  001158  0E03               	movlw	3
 16711  00115A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16712  00115C  ECA1  F026         	call	_oled_putString	;wreg free
 16713                           
 16714                           ;MOTEapp.c: 343: moteApp_delayms(500);
 16715  001160  0E01               	movlw	1
 16716  001162  0100               	movlb	0	; () banked
 16717  001164  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16718  001166  0EF4               	movlw	244
 16719  001168  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16720  00116A  EC33  F02B         	call	_moteApp_delayms	;wreg free
 16721                           
 16722                           ;MOTEapp.c: 344: sendCommand("mac join abp");
 16723  00116E  0EE7               	movlw	low STR_41
 16724  001170  0100               	movlb	0	; () banked
 16725  001172  6F61               	movwf	sendCommand@string& (0+255),b
 16726  001174  0E7D               	movlw	high STR_41
 16727  001176  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16728  001178  EC7D  F02B         	call	_sendCommand	;wreg free
 16729  00117C  D05E               	goto	l10494
 16730  00117E                     l405:
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;MOTEapp.c: 347: else if (selectButton)
 16734                           
 16735                           ; BSR set to: 0
 16736  00117E  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16737  001180  B4D8               	btfsc	status,2,c
 16738  001182  D1D5               	goto	l395
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;MOTEapp.c: 348: {
 16742                           ;MOTEapp.c: 349: oled_putString("         (S3)   ", 0,3);
 16743  001184  0EDD               	movlw	low STR_42
 16744  001186  6F72               	movwf	oled_putString@string& (0+255),b
 16745  001188  0E7A               	movlw	high STR_42
 16746  00118A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16747  00118C  0E00               	movlw	0
 16748  00118E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16749  001190  0E03               	movlw	3
 16750  001192  6F75               	movwf	oled_putString@start_page& (0+255),b
 16751  001194  ECA1  F026         	call	_oled_putString	;wreg free
 16752                           
 16753                           ;MOTEapp.c: 350: moteApp_delayms(500);
 16754  001198  0E01               	movlw	1
 16755  00119A  0100               	movlb	0	; () banked
 16756  00119C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16757  00119E  0EF4               	movlw	244
 16758  0011A0  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16759  0011A2  EC33  F02B         	call	_moteApp_delayms	;wreg free
 16760                           
 16761                           ;MOTEapp.c: 351: sendCommand("mac join otaa");
 16762  0011A6  0E3B               	movlw	low STR_43
 16763  0011A8  0100               	movlb	0	; () banked
 16764  0011AA  6F61               	movwf	sendCommand@string& (0+255),b
 16765  0011AC  0E7D               	movlw	high STR_43
 16766  0011AE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16767  0011B0  EC7D  F02B         	call	_sendCommand	;wreg free
 16768  0011B4  D12F               	goto	l10560
 16769  0011B6                     
 16770                           ; BSR set to: 0
 16771                           ;MOTEapp.c: 356: if ( messageReady )
 16772                           
 16773                           ; BSR set to: 0
 16774  0011B6  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16775  0011B8  B4D8               	btfsc	status,2,c
 16776  0011BA  D1B9               	goto	l395
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;MOTEapp.c: 357: {
 16780                           ;MOTEapp.c: 358: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16781  0011BC  0E50               	movlw	low _moduleResonseBuffer
 16782  0011BE  6F60               	movwf	strcmp@s1& (0+255),b
 16783  0011C0  0E01               	movlw	high _moduleResonseBuffer
 16784  0011C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16785  0011C4  0EF7               	movlw	low STR_44
 16786  0011C6  6F62               	movwf	strcmp@s2& (0+255),b
 16787  0011C8  0E7F               	movlw	high STR_44
 16788  0011CA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16789  0011CC  EC3E  F029         	call	_strcmp	;wreg free
 16790  0011D0  0100               	movlb	0	; () banked
 16791  0011D2  5160               	movf	?_strcmp& (0+255),w,b
 16792  0011D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16793  0011D6  A4D8               	btfss	status,2,c
 16794  0011D8  D002               	goto	l410
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;MOTEapp.c: 359: {
 16798                           ;MOTEapp.c: 360: activeState = moteWaitAbp;
 16799  0011DA  0E04               	movlw	4
 16800  0011DC  D769               	goto	L14
 16801  0011DE                     l410:
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;MOTEapp.c: 362: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16805                           
 16806                           ; BSR set to: 0
 16807  0011DE  0E50               	movlw	low _moduleResonseBuffer
 16808  0011E0  6F60               	movwf	strcmp@s1& (0+255),b
 16809  0011E2  0E01               	movlw	high _moduleResonseBuffer
 16810  0011E4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16811  0011E6  0E57               	movlw	low STR_45
 16812  0011E8  6F62               	movwf	strcmp@s2& (0+255),b
 16813  0011EA  0E7D               	movlw	high STR_45
 16814  0011EC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16815  0011EE  EC3E  F029         	call	_strcmp	;wreg free
 16816  0011F2  0100               	movlb	0	; () banked
 16817  0011F4  5160               	movf	?_strcmp& (0+255),w,b
 16818  0011F6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16819  0011F8  A4D8               	btfss	status,2,c
 16820  0011FA  D019               	goto	l412
 16821                           
 16822                           ; BSR set to: 0
 16823                           ;MOTEapp.c: 363: {
 16824                           ;MOTEapp.c: 364: oled_clear();
 16825  0011FC  EC1A  F02D         	call	_oled_clear	;wreg free
 16826                           
 16827                           ;MOTEapp.c: 365: oled_putString("Valid Keys",0,0);
 16828  001200  0EB4               	movlw	low STR_46
 16829  001202  0100               	movlb	0	; () banked
 16830  001204  6F72               	movwf	oled_putString@string& (0+255),b
 16831  001206  0E7E               	movlw	high STR_46
 16832  001208  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16833  00120A  0E00               	movlw	0
 16834  00120C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16835  00120E  0E00               	movlw	0
 16836  001210  6F75               	movwf	oled_putString@start_page& (0+255),b
 16837  001212  ECA1  F026         	call	_oled_putString	;wreg free
 16838                           
 16839                           ;MOTEapp.c: 366: oled_putString("Required",0,1);
 16840  001216  0E19               	movlw	low STR_47
 16841  001218  0100               	movlb	0	; () banked
 16842  00121A  6F72               	movwf	oled_putString@string& (0+255),b
 16843  00121C  0E7F               	movlw	high STR_47
 16844  00121E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16845  001220  0E00               	movlw	0
 16846  001222  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16847  001224  0E01               	movlw	1
 16848  001226  6F75               	movwf	oled_putString@start_page& (0+255),b
 16849  001228  ECA1  F026         	call	_oled_putString	;wreg free
 16850  00122C  D076               	goto	l10526
 16851  00122E                     l412:
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;MOTEapp.c: 369: else
 16855                           ;MOTEapp.c: 370: {
 16856                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 16857                           
 16858                           ; BSR set to: 0
 16859  00122E  0EE7               	movlw	low STR_41
 16860  001230  6F61               	movwf	sendCommand@string& (0+255),b
 16861  001232  0E7D               	movlw	high STR_41
 16862  001234  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16863  001236  EC7D  F02B         	call	_sendCommand	;wreg free
 16864  00123A                     l10494:
 16865                           
 16866                           ;MOTEapp.c: 372: activeState = moteCheckAbp;
 16867  00123A  0E03               	movlw	3
 16868  00123C  D738               	goto	L13
 16869  00123E                     
 16870                           ; BSR set to: 0
 16871                           ;MOTEapp.c: 377: if ( messageReady )
 16872                           
 16873                           ; BSR set to: 0
 16874  00123E  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16875  001240  B4D8               	btfsc	status,2,c
 16876  001242  D175               	goto	l395
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;MOTEapp.c: 378: {
 16880                           ;MOTEapp.c: 379: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16881  001244  0E50               	movlw	low _moduleResonseBuffer
 16882  001246  6F60               	movwf	strcmp@s1& (0+255),b
 16883  001248  0E01               	movlw	high _moduleResonseBuffer
 16884  00124A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16885  00124C  0E22               	movlw	low STR_49
 16886  00124E  6F62               	movwf	strcmp@s2& (0+255),b
 16887  001250  0E7F               	movlw	high STR_49
 16888  001252  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16889  001254  EC3E  F029         	call	_strcmp	;wreg free
 16890  001258  0100               	movlb	0	; () banked
 16891  00125A  5160               	movf	?_strcmp& (0+255),w,b
 16892  00125C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16893  00125E  A4D8               	btfss	status,2,c
 16894  001260  D019               	goto	l416
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;MOTEapp.c: 380: {
 16898                           ;MOTEapp.c: 381: oled_clear();
 16899  001262  EC1A  F02D         	call	_oled_clear	;wreg free
 16900                           
 16901                           ;MOTEapp.c: 382: oled_putString("ABP Join ",0,0);
 16902  001266  0ED4               	movlw	low STR_50
 16903  001268  0100               	movlb	0	; () banked
 16904  00126A  6F72               	movwf	oled_putString@string& (0+255),b
 16905  00126C  0E7E               	movlw	high STR_50
 16906  00126E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16907  001270  0E00               	movlw	0
 16908  001272  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16909  001274  0E00               	movlw	0
 16910  001276  6F75               	movwf	oled_putString@start_page& (0+255),b
 16911  001278  ECA1  F026         	call	_oled_putString	;wreg free
 16912                           
 16913                           ;MOTEapp.c: 383: oled_putString("Successful",0,1);
 16914  00127C  0E9E               	movlw	low STR_51
 16915  00127E  0100               	movlb	0	; () banked
 16916  001280  6F72               	movwf	oled_putString@string& (0+255),b
 16917  001282  0E7E               	movlw	high STR_51
 16918  001284  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16919  001286  0E00               	movlw	0
 16920  001288  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16921  00128A  0E01               	movlw	1
 16922  00128C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16923  00128E  ECA1  F026         	call	_oled_putString	;wreg free
 16924  001292  D090               	goto	l10548
 16925  001294                     l416:
 16926                           
 16927                           ; BSR set to: 0
 16928                           ;MOTEapp.c: 386: else
 16929                           ;MOTEapp.c: 387: {
 16930                           ;MOTEapp.c: 388: sendCommand("mac reset");
 16931                           
 16932                           ; BSR set to: 0
 16933  001294  0EF2               	movlw	low STR_52
 16934  001296  6F61               	movwf	sendCommand@string& (0+255),b
 16935  001298  0E7E               	movlw	high STR_52
 16936  00129A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16937  00129C  EC7D  F02B         	call	_sendCommand	;wreg free
 16938  0012A0                     l10510:
 16939                           
 16940                           ;MOTEapp.c: 389: activeState = moteReset;
 16941  0012A0  0E01               	movlw	1
 16942  0012A2  D705               	goto	L13
 16943  0012A4                     
 16944                           ; BSR set to: 0
 16945                           ;MOTEapp.c: 395: if ( messageReady )
 16946                           
 16947                           ; BSR set to: 0
 16948  0012A4  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16949  0012A6  B4D8               	btfsc	status,2,c
 16950  0012A8  D142               	goto	l395
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;MOTEapp.c: 396: {
 16954                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16955  0012AA  0E50               	movlw	low _moduleResonseBuffer
 16956  0012AC  6F60               	movwf	strcmp@s1& (0+255),b
 16957  0012AE  0E01               	movlw	high _moduleResonseBuffer
 16958  0012B0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16959  0012B2  0EF7               	movlw	low STR_44
 16960  0012B4  6F62               	movwf	strcmp@s2& (0+255),b
 16961  0012B6  0E7F               	movlw	high STR_44
 16962  0012B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16963  0012BA  EC3E  F029         	call	_strcmp	;wreg free
 16964  0012BE  0100               	movlb	0	; () banked
 16965  0012C0  5160               	movf	?_strcmp& (0+255),w,b
 16966  0012C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16967  0012C4  A4D8               	btfss	status,2,c
 16968  0012C6  D002               	goto	l420
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;MOTEapp.c: 398: {
 16972                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 16973  0012C8  0E06               	movlw	6
 16974  0012CA  D6F2               	goto	L14
 16975  0012CC                     l420:
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16979                           
 16980                           ; BSR set to: 0
 16981  0012CC  0E50               	movlw	low _moduleResonseBuffer
 16982  0012CE  6F60               	movwf	strcmp@s1& (0+255),b
 16983  0012D0  0E01               	movlw	high _moduleResonseBuffer
 16984  0012D2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16985  0012D4  0E57               	movlw	low STR_45
 16986  0012D6  6F62               	movwf	strcmp@s2& (0+255),b
 16987  0012D8  0E7D               	movlw	high STR_45
 16988  0012DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16989  0012DC  EC3E  F029         	call	_strcmp	;wreg free
 16990  0012E0  0100               	movlb	0	; () banked
 16991  0012E2  5160               	movf	?_strcmp& (0+255),w,b
 16992  0012E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16993  0012E6  A4D8               	btfss	status,2,c
 16994  0012E8  D01A               	goto	l422
 16995                           
 16996                           ; BSR set to: 0
 16997                           ;MOTEapp.c: 402: {
 16998                           ;MOTEapp.c: 403: oled_clear();
 16999  0012EA  EC1A  F02D         	call	_oled_clear	;wreg free
 17000                           
 17001                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 17002  0012EE  0EB4               	movlw	low STR_46
 17003  0012F0  0100               	movlb	0	; () banked
 17004  0012F2  6F72               	movwf	oled_putString@string& (0+255),b
 17005  0012F4  0E7E               	movlw	high STR_46
 17006  0012F6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17007  0012F8  0E00               	movlw	0
 17008  0012FA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17009  0012FC  0E00               	movlw	0
 17010  0012FE  6F75               	movwf	oled_putString@start_page& (0+255),b
 17011  001300  ECA1  F026         	call	_oled_putString	;wreg free
 17012                           
 17013                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 17014  001304  0E19               	movlw	low STR_47
 17015  001306  0100               	movlb	0	; () banked
 17016  001308  6F72               	movwf	oled_putString@string& (0+255),b
 17017  00130A  0E7F               	movlw	high STR_47
 17018  00130C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17019  00130E  0E00               	movlw	0
 17020  001310  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17021  001312  0E01               	movlw	1
 17022  001314  6F75               	movwf	oled_putString@start_page& (0+255),b
 17023  001316  ECA1  F026         	call	_oled_putString	;wreg free
 17024  00131A                     l10526:
 17025                           
 17026                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 17027  00131A  0E09               	movlw	9
 17028  00131C  D6C8               	goto	L13
 17029  00131E                     l422:
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17033                           
 17034                           ; BSR set to: 0
 17035  00131E  0E50               	movlw	low _moduleResonseBuffer
 17036  001320  6F60               	movwf	strcmp@s1& (0+255),b
 17037  001322  0E01               	movlw	high _moduleResonseBuffer
 17038  001324  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17039  001326  0E49               	movlw	low STR_57
 17040  001328  6F62               	movwf	strcmp@s2& (0+255),b
 17041  00132A  0E7D               	movlw	high STR_57
 17042  00132C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17043  00132E  EC3E  F029         	call	_strcmp	;wreg free
 17044  001332  0100               	movlb	0	; () banked
 17045  001334  5160               	movf	?_strcmp& (0+255),w,b
 17046  001336  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17047  001338  A4D8               	btfss	status,2,c
 17048  00133A  D007               	goto	l424
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;MOTEapp.c: 409: {
 17052                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 17053  00133C  0E3B               	movlw	low STR_43
 17054  00133E  6F61               	movwf	sendCommand@string& (0+255),b
 17055  001340  0E7D               	movlw	high STR_43
 17056  001342  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17057  001344  EC7D  F02B         	call	_sendCommand	;wreg free
 17058  001348  D065               	goto	l10560
 17059  00134A                     l424:
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17063                           
 17064                           ; BSR set to: 0
 17065  00134A  0E50               	movlw	low _moduleResonseBuffer
 17066  00134C  6F60               	movwf	strcmp@s1& (0+255),b
 17067  00134E  0E01               	movlw	high _moduleResonseBuffer
 17068  001350  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17069  001352  0E93               	movlw	low STR_59
 17070  001354  6F62               	movwf	strcmp@s2& (0+255),b
 17071  001356  0E7E               	movlw	high STR_59
 17072  001358  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17073  00135A  EC3E  F029         	call	_strcmp	;wreg free
 17074  00135E  D066               	goto	L15
 17075  001360                     
 17076                           ; BSR set to: 0
 17077                           ;MOTEapp.c: 420: if ( messageReady )
 17078                           
 17079                           ; BSR set to: 0
 17080  001360  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17081  001362  B4D8               	btfsc	status,2,c
 17082  001364  D0E4               	goto	l395
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;MOTEapp.c: 421: {
 17086                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17087  001366  0E50               	movlw	low _moduleResonseBuffer
 17088  001368  6F60               	movwf	strcmp@s1& (0+255),b
 17089  00136A  0E01               	movlw	high _moduleResonseBuffer
 17090  00136C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17091  00136E  0E22               	movlw	low STR_49
 17092  001370  6F62               	movwf	strcmp@s2& (0+255),b
 17093  001372  0E7F               	movlw	high STR_49
 17094  001374  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17095  001376  EC3E  F029         	call	_strcmp	;wreg free
 17096  00137A  0100               	movlb	0	; () banked
 17097  00137C  5160               	movf	?_strcmp& (0+255),w,b
 17098  00137E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17099  001380  A4D8               	btfss	status,2,c
 17100  001382  D01A               	goto	l429
 17101                           
 17102                           ; BSR set to: 0
 17103                           ;MOTEapp.c: 423: {
 17104                           ;MOTEapp.c: 424: oled_clear();
 17105  001384  EC1A  F02D         	call	_oled_clear	;wreg free
 17106                           
 17107                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 17108  001388  0E88               	movlw	low STR_61
 17109  00138A  0100               	movlb	0	; () banked
 17110  00138C  6F72               	movwf	oled_putString@string& (0+255),b
 17111  00138E  0E7E               	movlw	high STR_61
 17112  001390  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17113  001392  0E00               	movlw	0
 17114  001394  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17115  001396  0E00               	movlw	0
 17116  001398  6F75               	movwf	oled_putString@start_page& (0+255),b
 17117  00139A  ECA1  F026         	call	_oled_putString	;wreg free
 17118                           
 17119                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 17120  00139E  0E9E               	movlw	low STR_51
 17121  0013A0  0100               	movlb	0	; () banked
 17122  0013A2  6F72               	movwf	oled_putString@string& (0+255),b
 17123  0013A4  0E7E               	movlw	high STR_51
 17124  0013A6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17125  0013A8  0E00               	movlw	0
 17126  0013AA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17127  0013AC  0E01               	movlw	1
 17128  0013AE  6F75               	movwf	oled_putString@start_page& (0+255),b
 17129  0013B0  ECA1  F026         	call	_oled_putString	;wreg free
 17130  0013B4                     l10548:
 17131                           
 17132                           ;MOTEapp.c: 427: activeState = moteJoined;
 17133  0013B4  0E07               	movlw	7
 17134  0013B6  D67B               	goto	L13
 17135  0013B8                     l429:
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17139                           
 17140                           ; BSR set to: 0
 17141  0013B8  0E50               	movlw	low _moduleResonseBuffer
 17142  0013BA  6F60               	movwf	strcmp@s1& (0+255),b
 17143  0013BC  0E01               	movlw	high _moduleResonseBuffer
 17144  0013BE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17145  0013C0  0E95               	movlw	low STR_63
 17146  0013C2  6F62               	movwf	strcmp@s2& (0+255),b
 17147  0013C4  0E7F               	movlw	high STR_63
 17148  0013C6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17149  0013C8  EC3E  F029         	call	_strcmp	;wreg free
 17150  0013CC  0100               	movlb	0	; () banked
 17151  0013CE  5160               	movf	?_strcmp& (0+255),w,b
 17152  0013D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17153  0013D2  A4D8               	btfss	status,2,c
 17154  0013D4  D021               	goto	l431
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;MOTEapp.c: 430: {
 17158                           ;MOTEapp.c: 431: oled_clear();
 17159  0013D6  EC1A  F02D         	call	_oled_clear	;wreg free
 17160                           
 17161                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 17162  0013DA  0EE8               	movlw	low STR_64
 17163  0013DC  0100               	movlb	0	; () banked
 17164  0013DE  6F72               	movwf	oled_putString@string& (0+255),b
 17165  0013E0  0E7E               	movlw	high STR_64
 17166  0013E2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17167  0013E4  0E01               	movlw	1
 17168  0013E6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17169  0013E8  0E00               	movlw	0
 17170  0013EA  6F75               	movwf	oled_putString@start_page& (0+255),b
 17171  0013EC  ECA1  F026         	call	_oled_putString	;wreg free
 17172                           
 17173                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 17174  0013F0  0E8E               	movlw	low STR_65
 17175  0013F2  0100               	movlb	0	; () banked
 17176  0013F4  6F72               	movwf	oled_putString@string& (0+255),b
 17177  0013F6  0E7F               	movlw	high STR_65
 17178  0013F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17179  0013FA  0E02               	movlw	2
 17180  0013FC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17181  0013FE  0E01               	movlw	1
 17182  001400  6F75               	movwf	oled_putString@start_page& (0+255),b
 17183  001402  ECA1  F026         	call	_oled_putString	;wreg free
 17184                           
 17185                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 17186  001406  0E3B               	movlw	low STR_43
 17187  001408  0100               	movlb	0	; () banked
 17188  00140A  6F61               	movwf	sendCommand@string& (0+255),b
 17189  00140C  0E7D               	movlw	high STR_43
 17190  00140E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17191  001410  EC7D  F02B         	call	_sendCommand	;wreg free
 17192  001414                     l10560:
 17193                           
 17194                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 17195  001414  0E05               	movlw	5
 17196  001416  D64B               	goto	L13
 17197  001418                     l431:
 17198                           
 17199                           ; BSR set to: 0
 17200                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17201                           
 17202                           ; BSR set to: 0
 17203  001418  0E50               	movlw	low _moduleResonseBuffer
 17204  00141A  6F60               	movwf	strcmp@s1& (0+255),b
 17205  00141C  0E01               	movlw	high _moduleResonseBuffer
 17206  00141E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17207  001420  0E93               	movlw	low STR_59
 17208  001422  6F62               	movwf	strcmp@s2& (0+255),b
 17209  001424  0E7E               	movlw	high STR_59
 17210  001426  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17211  001428  EC3E  F029         	call	_strcmp	;wreg free
 17212  00142C                     L15:
 17213  00142C  0100               	movlb	0	; () banked
 17214  00142E  5160               	movf	?_strcmp& (0+255),w,b
 17215  001430  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17216  001432  A4D8               	btfss	status,2,c
 17217  001434  D07C               	goto	l395
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;MOTEapp.c: 438: {
 17221                           ;MOTEapp.c: 439: activeState = moteStartup;
 17222  001436  0E00               	movlw	0
 17223  001438  D63B               	goto	L14
 17224  00143A                     
 17225                           ; BSR set to: 0
 17226                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 17227                           
 17228                           ; BSR set to: 0
 17229  00143A  0EA9               	movlw	low STR_68
 17230  00143C  6F61               	movwf	sendCommand@string& (0+255),b
 17231  00143E  0E7E               	movlw	high STR_68
 17232  001440  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17233  001442  EC7D  F02B         	call	_sendCommand	;wreg free
 17234  001446  D018               	goto	l10576
 17235  001448                     
 17236                           ; BSR set to: 0
 17237                           ;MOTEapp.c: 448: if ( messageReady )
 17238                           
 17239                           ; BSR set to: 0
 17240  001448  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17241  00144A  B4D8               	btfsc	status,2,c
 17242  00144C  D070               	goto	l395
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;MOTEapp.c: 449: {
 17246                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17247  00144E  0E50               	movlw	low _moduleResonseBuffer
 17248  001450  6F60               	movwf	strcmp@s1& (0+255),b
 17249  001452  0E01               	movlw	high _moduleResonseBuffer
 17250  001454  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17251  001456  0E49               	movlw	low STR_57
 17252  001458  6F62               	movwf	strcmp@s2& (0+255),b
 17253  00145A  0E7D               	movlw	high STR_57
 17254  00145C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17255  00145E  EC3E  F029         	call	_strcmp	;wreg free
 17256  001462  0100               	movlb	0	; () banked
 17257  001464  5160               	movf	?_strcmp& (0+255),w,b
 17258  001466  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17259  001468  A4D8               	btfss	status,2,c
 17260  00146A  D008               	goto	l437
 17261                           
 17262                           ; BSR set to: 0
 17263                           ;MOTEapp.c: 451: {
 17264                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 17265  00146C  0EA9               	movlw	low STR_68
 17266  00146E  6F61               	movwf	sendCommand@string& (0+255),b
 17267  001470  0E7E               	movlw	high STR_68
 17268  001472  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17269  001474  EC7D  F02B         	call	_sendCommand	;wreg free
 17270  001478                     l10576:
 17271                           
 17272                           ;MOTEapp.c: 453: activeState = moteGetDr;
 17273  001478  0E08               	movlw	8
 17274  00147A  D619               	goto	L13
 17275  00147C                     l437:
 17276                           
 17277                           ; BSR set to: 0
 17278                           ;MOTEapp.c: 455: else
 17279                           ;MOTEapp.c: 456: {
 17280                           ;MOTEapp.c: 457: uint8_t readDataRate;
 17281                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 17282                           
 17283                           ; BSR set to: 0
 17284  00147C  0101               	movlb	1	; () banked
 17285  00147E  5150               	movf	_moduleResonseBuffer& (0+255),w,b
 17286  001480  0FD0               	addlw	208
 17287  001482  0100               	movlb	0	; () banked
 17288  001484  6F7A               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 17292  001486  C07A  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;MOTEapp.c: 460: joiningComplete = 1;
 17296  00148A  0E01               	movlw	1
 17297  00148C  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;MOTEapp.c: 461: }
 17301                           ;MOTEapp.c: 462: }
 17302                           ;MOTEapp.c: 463: break;
 17303                           
 17304                           ; BSR set to: 0
 17305  00148E  D04F               	goto	l395
 17306  001490                     
 17307                           ; BSR set to: 0
 17308                           ;MOTEapp.c: 465: if (selectButton)
 17309                           
 17310                           ; BSR set to: 0
 17311  001490  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17312  001492  B4D8               	btfsc	status,2,c
 17313  001494  D04C               	goto	l395
 17314                           
 17315                           ; BSR set to: 0
 17316                           ;MOTEapp.c: 466: {
 17317                           ;MOTEapp.c: 467: activeState = moteComFailure;
 17318  001496  0E0A               	movlw	10
 17319  001498  D60B               	goto	L14
 17320  00149A                     
 17321                           ; BSR set to: 0
 17322                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 17323                           
 17324                           ; BSR set to: 0
 17325  00149A  0E00               	movlw	0
 17326  00149C  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17327  00149E  0E00               	movlw	0
 17328  0014A0  EC6F  F02A         	call	_DATAEE_WriteByte
 17329  0014A4  B281               	btfsc	3969,1,c	;volatile
 17330  0014A6  D002               	goto	u9290
 17331  0014A8  A081               	btfss	3969,0,c	;volatile
 17332  0014AA  D7FC               	goto	l443
 17333  0014AC                     u9290:
 17334                           
 17335                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 17336  0014AC  0EFA               	movlw	250
 17337  0014AE  0100               	movlb	0	; () banked
 17338  0014B0  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17339  0014B2  0E58               	movlw	88
 17340  0014B4                     u11447:
 17341  0014B4  2EE8               	decfsz	wreg,f,c
 17342  0014B6  D7FE               	bra	u11447
 17343  0014B8  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17344  0014BA  D7FC               	bra	u11447
 17345  0014BC  F000               	nop	
 17346                           
 17347                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 17348  0014BE  0EFA               	movlw	250
 17349  0014C0  0100               	movlb	0	; () banked
 17350  0014C2  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17351  0014C4  0E58               	movlw	88
 17352  0014C6                     u11457:
 17353  0014C6  2EE8               	decfsz	wreg,f,c
 17354  0014C8  D7FE               	bra	u11457
 17355  0014CA  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17356  0014CC  D7FC               	bra	u11457
 17357  0014CE  F000               	nop	
 17358                           
 17359                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 17360  0014D0  0EFA               	movlw	250
 17361  0014D2  0100               	movlb	0	; () banked
 17362  0014D4  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17363  0014D6  0E58               	movlw	88
 17364  0014D8                     u11467:
 17365  0014D8  2EE8               	decfsz	wreg,f,c
 17366  0014DA  D7FE               	bra	u11467
 17367  0014DC  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17368  0014DE  D7FC               	bra	u11467
 17369  0014E0  F000               	nop	
 17370  0014E2  00FF               	reset		;# 
 17371                           
 17372                           ;MOTEapp.c: 480: }
 17373                           
 17374                           ;MOTEapp.c: 479: break;
 17375  0014E4  D024               	goto	l395
 17376  0014E6                     l390:
 17377  0014E6  0100               	movlb	0	; () banked
 17378  0014E8  51F4               	movf	_activeState& (0+255),w,b
 17379                           
 17380                           ; Switch size 1, requested type "space"
 17381                           ; Number of cases is 11, Range of values is 0 to 10
 17382                           ; switch strategies available:
 17383                           ; Name         Instructions Cycles
 17384                           ; simple_byte           34    18 (average)
 17385                           ;	Chosen strategy is simple_byte
 17386  0014EA  0A00               	xorlw	0	; case 0
 17387  0014EC  B4D8               	btfsc	status,2,c
 17388  0014EE  D596               	goto	l396
 17389  0014F0  0A01               	xorlw	1	; case 1
 17390  0014F2  B4D8               	btfsc	status,2,c
 17391  0014F4  D59B               	goto	l397
 17392  0014F6  0A03               	xorlw	3	; case 2
 17393  0014F8  B4D8               	btfsc	status,2,c
 17394  0014FA  D625               	goto	l404
 17395  0014FC  0A01               	xorlw	1	; case 3
 17396  0014FE  B4D8               	btfsc	status,2,c
 17397  001500  D65A               	goto	l408
 17398  001502  0A07               	xorlw	7	; case 4
 17399  001504  B4D8               	btfsc	status,2,c
 17400  001506  D69B               	goto	l414
 17401  001508  0A01               	xorlw	1	; case 5
 17402  00150A  B4D8               	btfsc	status,2,c
 17403  00150C  D6CB               	goto	l418
 17404  00150E  0A03               	xorlw	3	; case 6
 17405  001510  B4D8               	btfsc	status,2,c
 17406  001512  D726               	goto	l427
 17407  001514  0A01               	xorlw	1	; case 7
 17408  001516  B4D8               	btfsc	status,2,c
 17409  001518  D790               	goto	l434
 17410  00151A  0A0F               	xorlw	15	; case 8
 17411  00151C  B4D8               	btfsc	status,2,c
 17412  00151E  D794               	goto	l435
 17413  001520  0A01               	xorlw	1	; case 9
 17414  001522  B4D8               	btfsc	status,2,c
 17415  001524  D7B5               	goto	l439
 17416  001526  0A03               	xorlw	3	; case 10
 17417  001528  B4D8               	btfsc	status,2,c
 17418  00152A  D7B7               	goto	l441
 17419  00152C  D576               	goto	l391
 17420  00152E                     l395:
 17421                           
 17422                           ;MOTEapp.c: 481: return joiningComplete;
 17423                           
 17424                           ; BSR set to: 0
 17425  00152E  0100               	movlb	0	; () banked
 17426  001530  517B               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17427  001532  0012               	return	
 17428  001534                     __end_of_moteJoiningProcess:
 17429                           	opt stack 0
 17430                           tblptru	equ	0xFF8
 17431                           tblptrh	equ	0xFF7
 17432                           tblptrl	equ	0xFF6
 17433                           tablat	equ	0xFF5
 17434                           prodh	equ	0xFF4
 17435                           prodl	equ	0xFF3
 17436                           intcon	equ	0xFF2
 17437                           intcon3	equ	0xFF0
 17438                           postinc0	equ	0xFEE
 17439                           wreg	equ	0xFE8
 17440                           indf1	equ	0xFE7
 17441                           postdec1	equ	0xFE5
 17442                           fsr1h	equ	0xFE2
 17443                           fsr1l	equ	0xFE1
 17444                           indf2	equ	0xFDF
 17445                           fsr2h	equ	0xFDA
 17446                           fsr2l	equ	0xFD9
 17447                           status	equ	0xFD8
 17448                           
 17449 ;; *************** function _strncmp *****************
 17450 ;; Defined at:
 17451 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17454 ;;		 -> moduleResonseBuffer(64), 
 17455 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17456 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17457 ;;		 -> STR_35(5), STR_31(5), 
 17458 ;;  len             2    4[BANK0 ] unsigned int 
 17459 ;; Auto vars:     Size  Location     Type
 17460 ;;		None
 17461 ;; Return value:  Size  Location     Type
 17462 ;;                  2    0[BANK0 ] int 
 17463 ;; Registers used:
 17464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17465 ;; Tracked objects:
 17466 ;;		On entry : 0/0
 17467 ;;		On exit  : 0/0
 17468 ;;		Unchanged: 0/0
 17469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17470 ;;      Params:         0       6       0       0       0       0       0       0       0
 17471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17472 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17473 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17474 ;;Total ram usage:        9 bytes
 17475 ;; Hardware stack levels used:    1
 17476 ;; Hardware stack levels required when called:   11
 17477 ;; This function calls:
 17478 ;;		Nothing
 17479 ;; This function is called by:
 17480 ;;		_moteJoiningProcess
 17481 ;;		_moteRunningProcess
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	text52
 17486  00476E                     __ptext52:
 17487                           	opt stack 0
 17488  00476E                     _strncmp:
 17489                           	opt stack 17
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;incstack = 0
 17493  00476E  D035               	goto	l2819
 17494  004770                     l9622:
 17495  004770  C060  FFD9         	movff	strncmp@s1,fsr2l
 17496  004774  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17497  004778  50DF               	movf	indf2,w,c
 17498  00477A  B4D8               	btfsc	status,2,c
 17499  00477C  D010               	goto	u8120
 17500  00477E  C060  FFD9         	movff	strncmp@s1,fsr2l
 17501  004782  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17502  004786  50DF               	movf	indf2,w,c
 17503  004788  0100               	movlb	0	; () banked
 17504  00478A  6F66               	movwf	??_strncmp& (0+255),b
 17505  00478C  C062  FFF6         	movff	strncmp@s2,tblptrl
 17506  004790  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17507  004794                     	if	0	;tblptru may be non-zero
 17508  004794                     	endif
 17509  004794                     	if	0	;tblptru may be non-zero
 17510  004794                     	endif
 17511  004794  0008               	tblrd		*
 17512  004796  50F5               	movf	tablat,w,c
 17513  004798  1966               	xorwf	??_strncmp& (0+255),w,b
 17514  00479A  B4D8               	btfsc	status,2,c
 17515  00479C  D01A               	goto	l2821
 17516  00479E                     u8120:
 17517                           
 17518                           ; BSR set to: 0
 17519  00479E  C062  FFF6         	movff	strncmp@s2,tblptrl
 17520  0047A2  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17521  0047A6                     	if	0	;tblptru may be non-zero
 17522  0047A6                     	endif
 17523  0047A6                     	if	0	;tblptru may be non-zero
 17524  0047A6                     	endif
 17525  0047A6  0008               	tblrd		*
 17526  0047A8  50F5               	movf	tablat,w,c
 17527  0047AA  0100               	movlb	0	; () banked
 17528  0047AC  6F66               	movwf	??_strncmp& (0+255),b
 17529  0047AE  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17530  0047B0  1F66               	comf	??_strncmp& (0+255),f,b
 17531  0047B2  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17532  0047B4  4B66               	infsnz	??_strncmp& (0+255),f,b
 17533  0047B6  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17534  0047B8  C060  FFD9         	movff	strncmp@s1,fsr2l
 17535  0047BC  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17536  0047C0  50DF               	movf	indf2,w,c
 17537  0047C2  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17538  0047C4  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17539  0047C6  2566               	addwf	??_strncmp& (0+255),w,b
 17540  0047C8  6F60               	movwf	?_strncmp& (0+255),b
 17541  0047CA  0E00               	movlw	0
 17542  0047CC  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17543  0047CE  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17544                           
 17545                           ; BSR set to: 0
 17546  0047D0  0012               	return	
 17547  0047D2                     l2821:
 17548                           
 17549                           ; BSR set to: 0
 17550                           
 17551                           ; BSR set to: 0
 17552  0047D2  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17553  0047D4  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17554  0047D6  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17555  0047D8  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17556  0047DA                     l2819:
 17557                           
 17558                           ; BSR set to: 0
 17559  0047DA  0100               	movlb	0	; () banked
 17560  0047DC  0764               	decf	strncmp@len& (0+255),f,b
 17561  0047DE  A0D8               	btfss	status,0,c
 17562  0047E0  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17563  0047E2  2964               	incf	strncmp@len& (0+255),w,b
 17564  0047E4  E1C5               	bnz	l9622
 17565  0047E6  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17566  0047E8  A4D8               	btfss	status,2,c
 17567  0047EA  D7C2               	goto	l2820
 17568                           
 17569                           ; BSR set to: 0
 17570                           
 17571                           ; BSR set to: 0
 17572  0047EC  0E00               	movlw	0
 17573  0047EE  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17574  0047F0  0E00               	movlw	0
 17575  0047F2  6F60               	movwf	?_strncmp& (0+255),b
 17576  0047F4  0012               	return	
 17577  0047F6                     __end_of_strncmp:
 17578                           	opt stack 0
 17579                           tblptru	equ	0xFF8
 17580                           tblptrh	equ	0xFF7
 17581                           tblptrl	equ	0xFF6
 17582                           tablat	equ	0xFF5
 17583                           prodh	equ	0xFF4
 17584                           prodl	equ	0xFF3
 17585                           intcon	equ	0xFF2
 17586                           intcon3	equ	0xFF0
 17587                           postinc0	equ	0xFEE
 17588                           wreg	equ	0xFE8
 17589                           indf1	equ	0xFE7
 17590                           postdec1	equ	0xFE5
 17591                           fsr1h	equ	0xFE2
 17592                           fsr1l	equ	0xFE1
 17593                           indf2	equ	0xFDF
 17594                           fsr2h	equ	0xFDA
 17595                           fsr2l	equ	0xFD9
 17596                           status	equ	0xFD8
 17597                           
 17598 ;; *************** function _strcmp *****************
 17599 ;; Defined at:
 17600 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17601 ;; Parameters:    Size  Location     Type
 17602 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17603 ;;		 -> moduleResonseBuffer(64), 
 17604 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17605 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17606 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17607 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17608 ;; Auto vars:     Size  Location     Type
 17609 ;;  r               1    5[BANK0 ] char 
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  2    0[BANK0 ] int 
 17612 ;; Registers used:
 17613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17614 ;; Tracked objects:
 17615 ;;		On entry : 0/0
 17616 ;;		On exit  : 0/0
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17619 ;;      Params:         0       4       0       0       0       0       0       0       0
 17620 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17621 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17622 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17623 ;;Total ram usage:        6 bytes
 17624 ;; Hardware stack levels used:    1
 17625 ;; Hardware stack levels required when called:   11
 17626 ;; This function calls:
 17627 ;;		Nothing
 17628 ;; This function is called by:
 17629 ;;		_moteJoiningProcess
 17630 ;;		_moteRunningProcess
 17631 ;; This function uses a non-reentrant model
 17632 ;;
 17633                           
 17634                           	psect	text53
 17635  00527C                     __ptext53:
 17636                           	opt stack 0
 17637  00527C                     _strcmp:
 17638                           	opt stack 17
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;incstack = 0
 17642  00527C  D005               	goto	l2811
 17643  00527E  0100               	movlb	0	; () banked
 17644  005280  4B60               	infsnz	strcmp@s1& (0+255),f,b
 17645  005282  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 17646  005284  4B62               	infsnz	strcmp@s2& (0+255),f,b
 17647  005286  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 17648  005288                     l2811:
 17649                           
 17650                           ; BSR set to: 0
 17651  005288  C060  FFD9         	movff	strcmp@s1,fsr2l
 17652  00528C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17653  005290  50DF               	movf	indf2,w,c
 17654  005292  0100               	movlb	0	; () banked
 17655  005294  6F64               	movwf	??_strcmp& (0+255),b
 17656  005296  C062  FFF6         	movff	strcmp@s2,tblptrl
 17657  00529A  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 17658  00529E                     	if	0	;tblptru may be non-zero
 17659  00529E                     	endif
 17660  00529E                     	if	0	;tblptru may be non-zero
 17661  00529E                     	endif
 17662  00529E  0008               	tblrd		*
 17663  0052A0  50F5               	movf	tablat,w,c
 17664  0052A2  0800               	sublw	0
 17665  0052A4  2564               	addwf	??_strcmp& (0+255),w,b
 17666  0052A6  6F65               	movwf	strcmp@r& (0+255),b
 17667  0052A8  5165               	movf	strcmp@r& (0+255),w,b
 17668  0052AA  A4D8               	btfss	status,2,c
 17669  0052AC  D007               	goto	u8150
 17670                           
 17671                           ; BSR set to: 0
 17672  0052AE  C060  FFD9         	movff	strcmp@s1,fsr2l
 17673  0052B2  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17674  0052B6  50DF               	movf	indf2,w,c
 17675  0052B8  A4D8               	btfss	status,2,c
 17676  0052BA  D7E1               	goto	l2812
 17677  0052BC                     u8150:
 17678                           
 17679                           ; BSR set to: 0
 17680                           
 17681                           ; BSR set to: 0
 17682                           
 17683                           ; BSR set to: 0
 17684  0052BC  5165               	movf	strcmp@r& (0+255),w,b
 17685  0052BE  6F60               	movwf	?_strcmp& (0+255),b
 17686  0052C0  6B61               	clrf	(?_strcmp+1)& (0+255),b
 17687  0052C2  BF60               	btfsc	?_strcmp& (0+255),7,b
 17688  0052C4  0761               	decf	(?_strcmp+1)& (0+255),f,b
 17689  0052C6  0012               	return	
 17690  0052C8                     __end_of_strcmp:
 17691                           	opt stack 0
 17692                           tblptru	equ	0xFF8
 17693                           tblptrh	equ	0xFF7
 17694                           tblptrl	equ	0xFF6
 17695                           tablat	equ	0xFF5
 17696                           prodh	equ	0xFF4
 17697                           prodl	equ	0xFF3
 17698                           intcon	equ	0xFF2
 17699                           intcon3	equ	0xFF0
 17700                           postinc0	equ	0xFEE
 17701                           wreg	equ	0xFE8
 17702                           indf1	equ	0xFE7
 17703                           postdec1	equ	0xFE5
 17704                           fsr1h	equ	0xFE2
 17705                           fsr1l	equ	0xFE1
 17706                           indf2	equ	0xFDF
 17707                           fsr2h	equ	0xFDA
 17708                           fsr2l	equ	0xFD9
 17709                           status	equ	0xFD8
 17710                           
 17711 ;; *************** function _moteApp_delayms *****************
 17712 ;; Defined at:
 17713 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;  length          2    0[BANK0 ] unsigned int 
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;  counter         2    3[BANK0 ] unsigned int 
 17718 ;; Return value:  Size  Location     Type
 17719 ;;                  1    wreg      void 
 17720 ;; Registers used:
 17721 ;;		wreg, status,2, status,0
 17722 ;; Tracked objects:
 17723 ;;		On entry : 0/0
 17724 ;;		On exit  : 0/0
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17727 ;;      Params:         0       2       0       0       0       0       0       0       0
 17728 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17729 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17730 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17731 ;;Total ram usage:        5 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:   11
 17734 ;; This function calls:
 17735 ;;		Nothing
 17736 ;; This function is called by:
 17737 ;;		_main
 17738 ;;		_test_powerup
 17739 ;;		_moduleResync
 17740 ;;		_moteJoiningProcess
 17741 ;;		_moteRunningProcess
 17742 ;;		_moteApp_GoToSleep
 17743 ;;		_moteApp_setSensorsInput
 17744 ;; This function uses a non-reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text54
 17748  005666                     __ptext54:
 17749                           	opt stack 0
 17750  005666                     _moteApp_delayms:
 17751                           	opt stack 16
 17752                           
 17753                           ;MOTEapp.c: 169: uint16_t counter;
 17754                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;incstack = 0
 17758  005666  0E00               	movlw	0
 17759  005668  0100               	movlb	0	; () banked
 17760  00566A  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17761  00566C  0E00               	movlw	0
 17762  00566E  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 17763  005670  D00C               	goto	l348
 17764  005672                     
 17765                           ; BSR set to: 0
 17766                           ;MOTEapp.c: 171: {
 17767                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 17768                           
 17769                           ; BSR set to: 0
 17770  005672  0E10               	movlw	16
 17771  005674  0100               	movlb	0	; () banked
 17772  005676  6F62               	movwf	??_moteApp_delayms& (0+255),b
 17773  005678  0E94               	movlw	148
 17774  00567A                     u11477:
 17775  00567A  2EE8               	decfsz	wreg,f,c
 17776  00567C  D7FE               	bra	u11477
 17777  00567E  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 17778  005680  D7FC               	bra	u11477
 17779  005682  F000               	nop	
 17780  005684  0100               	movlb	0	; () banked
 17781  005686  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17782  005688  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17783  00568A                     l348:
 17784                           
 17785                           ; BSR set to: 0
 17786  00568A  5160               	movf	moteApp_delayms@length& (0+255),w,b
 17787  00568C  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 17788  00568E  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17789  005690  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17790  005692  B0D8               	btfsc	status,0,c
 17791  005694  0012               	return	
 17792  005696  D7ED               	goto	l349
 17793  005698                     __end_of_moteApp_delayms:
 17794                           	opt stack 0
 17795                           tblptru	equ	0xFF8
 17796                           tblptrh	equ	0xFF7
 17797                           tblptrl	equ	0xFF6
 17798                           tablat	equ	0xFF5
 17799                           prodh	equ	0xFF4
 17800                           prodl	equ	0xFF3
 17801                           intcon	equ	0xFF2
 17802                           intcon3	equ	0xFF0
 17803                           postinc0	equ	0xFEE
 17804                           wreg	equ	0xFE8
 17805                           indf1	equ	0xFE7
 17806                           postdec1	equ	0xFE5
 17807                           fsr1h	equ	0xFE2
 17808                           fsr1l	equ	0xFE1
 17809                           indf2	equ	0xFDF
 17810                           fsr2h	equ	0xFDA
 17811                           fsr2l	equ	0xFD9
 17812                           status	equ	0xFD8
 17813                           
 17814 ;; *************** function _DATAEE_WriteByte *****************
 17815 ;; Defined at:
 17816 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17817 ;; Parameters:    Size  Location     Type
 17818 ;;  bAdd            1    wreg     unsigned char 
 17819 ;;  bData           1    0[BANK0 ] unsigned char 
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17822 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  1    wreg      void 
 17825 ;; Registers used:
 17826 ;;		wreg, status,2
 17827 ;; Tracked objects:
 17828 ;;		On entry : 0/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17832 ;;      Params:         0       1       0       0       0       0       0       0       0
 17833 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17835 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17836 ;;Total ram usage:        3 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:   11
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		_main
 17843 ;;		_moteJoiningProcess
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           	psect	text55
 17848  0054DE                     __ptext55:
 17849                           	opt stack 0
 17850  0054DE                     _DATAEE_WriteByte:
 17851                           	opt stack 17
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;incstack = 0
 17855                           ;DATAEE_WriteByte@bAdd stored from wreg
 17856  0054DE  0100               	movlb	0	; () banked
 17857  0054E0  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17858                           
 17859                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17860  0054E2  0E00               	movlw	0
 17861  0054E4  BEF2               	btfsc	intcon,7,c	;volatile
 17862  0054E6  0E01               	movlw	1
 17863  0054E8  0100               	movlb	0	; () banked
 17864  0054EA  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17868  0054EC  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;memory.c: 171: EEDATA = bData;
 17872  0054F0  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17873                           
 17874                           ; BSR set to: 0
 17875                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17876  0054F4  9EA6               	bcf	4006,7,c	;volsfr
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17880  0054F6  9CA6               	bcf	4006,6,c	;volsfr
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;memory.c: 174: EECON1bits.WREN = 1;
 17884  0054F8  84A6               	bsf	4006,2,c	;volsfr
 17885                           
 17886                           ; BSR set to: 0
 17887                           ;memory.c: 175: INTCONbits.GIE = 0;
 17888  0054FA  9EF2               	bcf	intcon,7,c	;volatile
 17889                           
 17890                           ; BSR set to: 0
 17891                           ;memory.c: 176: EECON2 = 0x55;
 17892  0054FC  0E55               	movlw	85
 17893  0054FE  6EA7               	movwf	4007,c	;volsfr
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;memory.c: 177: EECON2 = 0xAA;
 17897  005500  0EAA               	movlw	170
 17898  005502  6EA7               	movwf	4007,c	;volsfr
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;memory.c: 178: EECON1bits.WR = 1;
 17902  005504  82A6               	bsf	4006,1,c	;volsfr
 17903  005506                     
 17904                           ; BSR set to: 0
 17905                           ;memory.c: 181: {
 17906  005506  B2A6               	btfsc	4006,1,c	;volsfr
 17907  005508  D7FE               	goto	l1556
 17908                           
 17909                           ;memory.c: 182: }
 17910                           ;memory.c: 184: EECON1bits.WREN = 0;
 17911  00550A  94A6               	bcf	4006,2,c	;volsfr
 17912                           
 17913                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17914  00550C  0100               	movlb	0	; () banked
 17915  00550E  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17916  005510  D002               	bra	u7985
 17917  005512  9EF2               	bcf	intcon,7,c	;volatile
 17918  005514  D001               	bra	u7986
 17919  005516                     u7985:
 17920  005516  8EF2               	bsf	intcon,7,c	;volatile
 17921  005518                     u7986:
 17922  005518  0012               	return		;funcret
 17923  00551A                     __end_of_DATAEE_WriteByte:
 17924                           	opt stack 0
 17925                           tblptru	equ	0xFF8
 17926                           tblptrh	equ	0xFF7
 17927                           tblptrl	equ	0xFF6
 17928                           tablat	equ	0xFF5
 17929                           prodh	equ	0xFF4
 17930                           prodl	equ	0xFF3
 17931                           intcon	equ	0xFF2
 17932                           intcon3	equ	0xFF0
 17933                           postinc0	equ	0xFEE
 17934                           wreg	equ	0xFE8
 17935                           indf1	equ	0xFE7
 17936                           postdec1	equ	0xFE5
 17937                           fsr1h	equ	0xFE2
 17938                           fsr1l	equ	0xFE1
 17939                           indf2	equ	0xFDF
 17940                           fsr2h	equ	0xFDA
 17941                           fsr2l	equ	0xFD9
 17942                           status	equ	0xFD8
 17943                           
 17944 ;; *************** function _USBapp_exitCDCState *****************
 17945 ;; Defined at:
 17946 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17947 ;; Parameters:    Size  Location     Type
 17948 ;;  usbState        1    wreg     enum E5838
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  usbState        1    0[BANK0 ] enum E5838
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  1    wreg      void 
 17953 ;; Registers used:
 17954 ;;		wreg
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17960 ;;      Params:         0       0       0       0       0       0       0       0       0
 17961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17964 ;;Total ram usage:        1 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:   11
 17967 ;; This function calls:
 17968 ;;		Nothing
 17969 ;; This function is called by:
 17970 ;;		_moteHandler
 17971 ;; This function uses a non-reentrant model
 17972 ;;
 17973                           
 17974                           	psect	text56
 17975  005C06                     __ptext56:
 17976                           	opt stack 0
 17977  005C06                     _USBapp_exitCDCState:
 17978                           	opt stack 18
 17979                           
 17980                           ;incstack = 0
 17981                           ;USBapp_exitCDCState@usbState stored from wreg
 17982  005C06  0100               	movlb	0	; () banked
 17983  005C08  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 17984                           
 17985                           ;USBapp.c: 141: exitUSB = usbState;
 17986  005C0A  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 17987  005C0E  0012               	return		;funcret
 17988  005C10                     __end_of_USBapp_exitCDCState:
 17989                           	opt stack 0
 17990                           tblptru	equ	0xFF8
 17991                           tblptrh	equ	0xFF7
 17992                           tblptrl	equ	0xFF6
 17993                           tablat	equ	0xFF5
 17994                           prodh	equ	0xFF4
 17995                           prodl	equ	0xFF3
 17996                           intcon	equ	0xFF2
 17997                           intcon3	equ	0xFF0
 17998                           postinc0	equ	0xFEE
 17999                           wreg	equ	0xFE8
 18000                           indf1	equ	0xFE7
 18001                           postdec1	equ	0xFE5
 18002                           fsr1h	equ	0xFE2
 18003                           fsr1l	equ	0xFE1
 18004                           indf2	equ	0xFDF
 18005                           fsr2h	equ	0xFDA
 18006                           fsr2l	equ	0xFD9
 18007                           status	equ	0xFD8
 18008                           
 18009 ;; *************** function _USBapp_exitCDC *****************
 18010 ;; Defined at:
 18011 ;;		line 134 in file "../Includes/Board/USBapp.c"
 18012 ;; Parameters:    Size  Location     Type
 18013 ;;		None
 18014 ;; Auto vars:     Size  Location     Type
 18015 ;;		None
 18016 ;; Return value:  Size  Location     Type
 18017 ;;                  1    wreg      enum E5902
 18018 ;; Registers used:
 18019 ;;		wreg, status,2
 18020 ;; Tracked objects:
 18021 ;;		On entry : 0/0
 18022 ;;		On exit  : 0/0
 18023 ;;		Unchanged: 0/0
 18024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18025 ;;      Params:         0       0       0       0       0       0       0       0       0
 18026 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18027 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18028 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18029 ;;Total ram usage:        0 bytes
 18030 ;; Hardware stack levels used:    1
 18031 ;; Hardware stack levels required when called:   11
 18032 ;; This function calls:
 18033 ;;		Nothing
 18034 ;; This function is called by:
 18035 ;;		_moteHandler
 18036 ;; This function uses a non-reentrant model
 18037 ;;
 18038                           
 18039                           	psect	text57
 18040  005C5C                     __ptext57:
 18041                           	opt stack 0
 18042  005C5C                     _USBapp_exitCDC:
 18043                           	opt stack 18
 18044                           
 18045                           ;USBapp.c: 136: return exitUSB;
 18046                           
 18047                           ;incstack = 0
 18048  005C5C  0100               	movlb	0	; () banked
 18049  005C5E  51F9               	movf	_exitUSB& (0+255),w,b
 18050  005C60  0012               	return	
 18051  005C62                     __end_of_USBapp_exitCDC:
 18052                           	opt stack 0
 18053                           tblptru	equ	0xFF8
 18054                           tblptrh	equ	0xFF7
 18055                           tblptrl	equ	0xFF6
 18056                           tablat	equ	0xFF5
 18057                           prodh	equ	0xFF4
 18058                           prodl	equ	0xFF3
 18059                           intcon	equ	0xFF2
 18060                           intcon3	equ	0xFF0
 18061                           postinc0	equ	0xFEE
 18062                           wreg	equ	0xFE8
 18063                           indf1	equ	0xFE7
 18064                           postdec1	equ	0xFE5
 18065                           fsr1h	equ	0xFE2
 18066                           fsr1l	equ	0xFE1
 18067                           indf2	equ	0xFDF
 18068                           fsr2h	equ	0xFDA
 18069                           fsr2l	equ	0xFD9
 18070                           status	equ	0xFD8
 18071                           
 18072 ;; *************** function _TMRapp_Handler *****************
 18073 ;; Defined at:
 18074 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;		None
 18077 ;; Auto vars:     Size  Location     Type
 18078 ;;		None
 18079 ;; Return value:  Size  Location     Type
 18080 ;;                  1    wreg      void 
 18081 ;; Registers used:
 18082 ;;		wreg, status,2, status,0, cstack
 18083 ;; Tracked objects:
 18084 ;;		On entry : 0/0
 18085 ;;		On exit  : 0/0
 18086 ;;		Unchanged: 0/0
 18087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18088 ;;      Params:         0       0       0       0       0       0       0       0       0
 18089 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18090 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18091 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18092 ;;Total ram usage:        0 bytes
 18093 ;; Hardware stack levels used:    1
 18094 ;; Hardware stack levels required when called:   12
 18095 ;; This function calls:
 18096 ;;		___almod
 18097 ;;		___lwmod
 18098 ;; This function is called by:
 18099 ;;		_moteHandler
 18100 ;; This function uses a non-reentrant model
 18101 ;;
 18102                           
 18103                           	psect	text58
 18104  002F3E                     __ptext58:
 18105                           	opt stack 0
 18106  002F3E                     _TMRapp_Handler:
 18107                           	opt stack 17
 18108                           
 18109                           ;TMRapp.c: 60: timerMsTickCount++;
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;incstack = 0
 18113  002F3E  0100               	movlb	0	; () banked
 18114  002F40  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 18115  002F42  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18119  002F44  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18120  002F48  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18121  002F4C  0E00               	movlw	0
 18122  002F4E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18123  002F50  0E0A               	movlw	10
 18124  002F52  6F62               	movwf	___lwmod@divisor& (0+255),b
 18125  002F54  ECAD  F029         	call	___lwmod	;wreg free
 18126  002F58  0100               	movlb	0	; () banked
 18127  002F5A  5160               	movf	?___lwmod& (0+255),w,b
 18128  002F5C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18129  002F5E  A4D8               	btfss	status,2,c
 18130  002F60  0012               	return	
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;TMRapp.c: 63: {
 18134                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18135  002F62  83F8               	bsf	_appTimer& (0+255),1,b
 18136                           
 18137                           ; BSR set to: 0
 18138                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18139  002F64  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18140  002F68  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18141  002F6C  0E00               	movlw	0
 18142  002F6E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18143  002F70  0E64               	movlw	100
 18144  002F72  6F62               	movwf	___lwmod@divisor& (0+255),b
 18145  002F74  ECAD  F029         	call	___lwmod	;wreg free
 18146  002F78  0100               	movlb	0	; () banked
 18147  002F7A  5160               	movf	?___lwmod& (0+255),w,b
 18148  002F7C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18149  002F7E  A4D8               	btfss	status,2,c
 18150  002F80  0012               	return	
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;TMRapp.c: 66: {
 18154                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18155  002F82  85F8               	bsf	_appTimer& (0+255),2,b
 18156                           
 18157                           ; BSR set to: 0
 18158                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18159  002F84  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18160  002F88  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18161  002F8C  0E03               	movlw	3
 18162  002F8E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18163  002F90  0EE8               	movlw	232
 18164  002F92  6F62               	movwf	___lwmod@divisor& (0+255),b
 18165  002F94  ECAD  F029         	call	___lwmod	;wreg free
 18166  002F98  0100               	movlb	0	; () banked
 18167  002F9A  5160               	movf	?___lwmod& (0+255),w,b
 18168  002F9C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18169  002F9E  A4D8               	btfss	status,2,c
 18170  002FA0  0012               	return	
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;TMRapp.c: 69: {
 18174                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18175  002FA2  87F8               	bsf	_appTimer& (0+255),3,b
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18179  002FA4  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 18180  002FA8  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 18181  002FAC  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 18182  002FAE  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 18183  002FB0  0E60               	movlw	96
 18184  002FB2  6F64               	movwf	___almod@divisor& (0+255),b
 18185  002FB4  0EEA               	movlw	234
 18186  002FB6  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 18187  002FB8  0E00               	movlw	0
 18188  002FBA  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 18189  002FBC  0E00               	movlw	0
 18190  002FBE  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 18191  002FC0  ECFF  F020         	call	___almod	;wreg free
 18192  002FC4  0100               	movlb	0	; () banked
 18193  002FC6  5160               	movf	?___almod& (0+255),w,b
 18194  002FC8  1161               	iorwf	(?___almod+1)& (0+255),w,b
 18195  002FCA  1162               	iorwf	(?___almod+2)& (0+255),w,b
 18196  002FCC  1163               	iorwf	(?___almod+3)& (0+255),w,b
 18197  002FCE  A4D8               	btfss	status,2,c
 18198  002FD0  0012               	return	
 18199                           
 18200                           ; BSR set to: 0
 18201                           ;TMRapp.c: 72: {
 18202                           ;TMRapp.c: 73: timerMinTickCount++;
 18203  002FD2  0101               	movlb	1	; () banked
 18204  002FD4  4B3A               	infsnz	_timerMinTickCount& (0+255),f,b
 18205  002FD6  2B3B               	incf	(_timerMinTickCount+1)& (0+255),f,b
 18206                           
 18207                           ; BSR set to: 1
 18208                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18209  002FD8  0100               	movlb	0	; () banked
 18210  002FDA  89F8               	bsf	_appTimer& (0+255),4,b
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18214  002FDC  C13A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18215  002FE0  C13B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18216  002FE4  0E00               	movlw	0
 18217  002FE6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18218  002FE8  0E3C               	movlw	60
 18219  002FEA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18220  002FEC  ECAD  F029         	call	___lwmod	;wreg free
 18221  002FF0  0100               	movlb	0	; () banked
 18222  002FF2  5160               	movf	?___lwmod& (0+255),w,b
 18223  002FF4  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18224  002FF6  A4D8               	btfss	status,2,c
 18225  002FF8  0012               	return	
 18226                           
 18227                           ; BSR set to: 0
 18228                           ;TMRapp.c: 76: {
 18229                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18230  002FFA  8BF8               	bsf	_appTimer& (0+255),5,b
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18234  002FFC  C13A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18235  003000  C13B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18236  003004  0E02               	movlw	2
 18237  003006  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18238  003008  0ED0               	movlw	208
 18239  00300A  6F62               	movwf	___lwmod@divisor& (0+255),b
 18240  00300C  ECAD  F029         	call	___lwmod	;wreg free
 18241  003010  0100               	movlb	0	; () banked
 18242  003012  5160               	movf	?___lwmod& (0+255),w,b
 18243  003014  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18244  003016  A4D8               	btfss	status,2,c
 18245  003018  0012               	return	
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;TMRapp.c: 79: {
 18249                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18250  00301A  8DF8               	bsf	_appTimer& (0+255),6,b
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18254  00301C  C13A  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18255  003020  C13B  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18256  003024  0E05               	movlw	5
 18257  003026  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18258  003028  0EA0               	movlw	160
 18259  00302A  6F62               	movwf	___lwmod@divisor& (0+255),b
 18260  00302C  ECAD  F029         	call	___lwmod	;wreg free
 18261  003030  0100               	movlb	0	; () banked
 18262  003032  5160               	movf	?___lwmod& (0+255),w,b
 18263  003034  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18264  003036  A4D8               	btfss	status,2,c
 18265  003038  0012               	return	
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;TMRapp.c: 82: {
 18269                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18270  00303A  8FF8               	bsf	_appTimer& (0+255),7,b
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18274  00303C  0E00               	movlw	0
 18275  00303E  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 18276  003040  0E00               	movlw	0
 18277  003042  6FD8               	movwf	_timerMsTickCount& (0+255),b
 18278                           
 18279                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18280  003044  0E00               	movlw	0
 18281  003046  0101               	movlb	1	; () banked
 18282  003048  6F3B               	movwf	(_timerMinTickCount+1)& (0+255),b
 18283  00304A  0E00               	movlw	0
 18284  00304C  6F3A               	movwf	_timerMinTickCount& (0+255),b
 18285                           
 18286                           ; BSR set to: 1
 18287                           
 18288                           ; BSR set to: 1
 18289                           
 18290                           ; BSR set to: 1
 18291                           
 18292                           ; BSR set to: 1
 18293                           
 18294                           ; BSR set to: 1
 18295                           
 18296                           ; BSR set to: 1
 18297  00304E  0012               	return	
 18298  003050                     __end_of_TMRapp_Handler:
 18299                           	opt stack 0
 18300                           tblptru	equ	0xFF8
 18301                           tblptrh	equ	0xFF7
 18302                           tblptrl	equ	0xFF6
 18303                           tablat	equ	0xFF5
 18304                           prodh	equ	0xFF4
 18305                           prodl	equ	0xFF3
 18306                           intcon	equ	0xFF2
 18307                           intcon3	equ	0xFF0
 18308                           postinc0	equ	0xFEE
 18309                           wreg	equ	0xFE8
 18310                           indf1	equ	0xFE7
 18311                           postdec1	equ	0xFE5
 18312                           fsr1h	equ	0xFE2
 18313                           fsr1l	equ	0xFE1
 18314                           indf2	equ	0xFDF
 18315                           fsr2h	equ	0xFDA
 18316                           fsr2l	equ	0xFD9
 18317                           status	equ	0xFD8
 18318                           
 18319 ;; *************** function ___lwmod *****************
 18320 ;; Defined at:
 18321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18322 ;; Parameters:    Size  Location     Type
 18323 ;;  dividend        2    0[BANK0 ] unsigned int 
 18324 ;;  divisor         2    2[BANK0 ] unsigned int 
 18325 ;; Auto vars:     Size  Location     Type
 18326 ;;  counter         1    4[BANK0 ] unsigned char 
 18327 ;; Return value:  Size  Location     Type
 18328 ;;                  2    0[BANK0 ] unsigned int 
 18329 ;; Registers used:
 18330 ;;		wreg, status,2, status,0
 18331 ;; Tracked objects:
 18332 ;;		On entry : 0/0
 18333 ;;		On exit  : 0/0
 18334 ;;		Unchanged: 0/0
 18335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18336 ;;      Params:         0       4       0       0       0       0       0       0       0
 18337 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18339 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18340 ;;Total ram usage:        5 bytes
 18341 ;; Hardware stack levels used:    1
 18342 ;; Hardware stack levels required when called:   11
 18343 ;; This function calls:
 18344 ;;		Nothing
 18345 ;; This function is called by:
 18346 ;;		_TMRapp_Handler
 18347 ;;		_moteApp_add16bToDataBuffer
 18348 ;;		_oled_putUint16
 18349 ;; This function uses a non-reentrant model
 18350 ;;
 18351                           
 18352                           	psect	text59
 18353  00535A                     __ptext59:
 18354                           	opt stack 0
 18355  00535A                     ___lwmod:
 18356                           	opt stack 17
 18357                           
 18358                           ;incstack = 0
 18359  00535A  0100               	movlb	0	; () banked
 18360  00535C  5162               	movf	___lwmod@divisor& (0+255),w,b
 18361  00535E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18362  005360  B4D8               	btfsc	status,2,c
 18363  005362  D018               	goto	l2670
 18364                           
 18365                           ; BSR set to: 0
 18366  005364  0E01               	movlw	1
 18367  005366  6F64               	movwf	___lwmod@counter& (0+255),b
 18368  005368  D004               	goto	l2665
 18369  00536A                     
 18370                           ; BSR set to: 0
 18371                           
 18372                           ; BSR set to: 0
 18373  00536A  90D8               	bcf	status,0,c
 18374  00536C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18375  00536E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18376  005370  2B64               	incf	___lwmod@counter& (0+255),f,b
 18377  005372                     l2665:
 18378                           
 18379                           ; BSR set to: 0
 18380                           
 18381                           ; BSR set to: 0
 18382  005372  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18383  005374  D7FA               	goto	l2666
 18384  005376                     u8770:
 18385                           
 18386                           ; BSR set to: 0
 18387                           
 18388                           ; BSR set to: 0
 18389                           
 18390                           ; BSR set to: 0
 18391  005376  5162               	movf	___lwmod@divisor& (0+255),w,b
 18392  005378  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18393  00537A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18394  00537C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18395  00537E  A0D8               	btfss	status,0,c
 18396  005380  D004               	goto	l2669
 18397                           
 18398                           ; BSR set to: 0
 18399  005382  5162               	movf	___lwmod@divisor& (0+255),w,b
 18400  005384  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18401  005386  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18402  005388  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18403  00538A                     l2669:
 18404                           
 18405                           ; BSR set to: 0
 18406                           
 18407                           ; BSR set to: 0
 18408  00538A  90D8               	bcf	status,0,c
 18409  00538C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18410  00538E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18411                           
 18412                           ; BSR set to: 0
 18413  005390  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18414  005392  D7F1               	goto	u8770
 18415  005394                     l2670:
 18416                           
 18417                           ; BSR set to: 0
 18418                           
 18419                           ; BSR set to: 0
 18420  005394  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18421  005398  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18422                           
 18423                           ; BSR set to: 0
 18424  00539C  0012               	return		;funcret
 18425  00539E                     __end_of___lwmod:
 18426                           	opt stack 0
 18427                           tblptru	equ	0xFF8
 18428                           tblptrh	equ	0xFF7
 18429                           tblptrl	equ	0xFF6
 18430                           tablat	equ	0xFF5
 18431                           prodh	equ	0xFF4
 18432                           prodl	equ	0xFF3
 18433                           intcon	equ	0xFF2
 18434                           intcon3	equ	0xFF0
 18435                           postinc0	equ	0xFEE
 18436                           wreg	equ	0xFE8
 18437                           indf1	equ	0xFE7
 18438                           postdec1	equ	0xFE5
 18439                           fsr1h	equ	0xFE2
 18440                           fsr1l	equ	0xFE1
 18441                           indf2	equ	0xFDF
 18442                           fsr2h	equ	0xFDA
 18443                           fsr2l	equ	0xFD9
 18444                           status	equ	0xFD8
 18445                           
 18446 ;; *************** function ___almod *****************
 18447 ;; Defined at:
 18448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;  dividend        4    0[BANK0 ] long 
 18451 ;;  divisor         4    4[BANK0 ] long 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  sign            1    9[BANK0 ] unsigned char 
 18454 ;;  counter         1    8[BANK0 ] unsigned char 
 18455 ;; Return value:  Size  Location     Type
 18456 ;;                  4    0[BANK0 ] long 
 18457 ;; Registers used:
 18458 ;;		wreg, status,2, status,0
 18459 ;; Tracked objects:
 18460 ;;		On entry : 0/0
 18461 ;;		On exit  : 0/0
 18462 ;;		Unchanged: 0/0
 18463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18464 ;;      Params:         0       8       0       0       0       0       0       0       0
 18465 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18466 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18467 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18468 ;;Total ram usage:       10 bytes
 18469 ;; Hardware stack levels used:    1
 18470 ;; Hardware stack levels required when called:   11
 18471 ;; This function calls:
 18472 ;;		Nothing
 18473 ;; This function is called by:
 18474 ;;		_TMRapp_Handler
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           	psect	text60
 18479  0041FE                     __ptext60:
 18480                           	opt stack 0
 18481  0041FE                     ___almod:
 18482                           	opt stack 17
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;incstack = 0
 18486  0041FE  0E00               	movlw	0
 18487  004200  0100               	movlb	0	; () banked
 18488  004202  6F69               	movwf	___almod@sign& (0+255),b
 18489                           
 18490                           ; BSR set to: 0
 18491  004204  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18492  004206  D00A               	goto	l2320
 18493                           
 18494                           ; BSR set to: 0
 18495  004208  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18496  00420A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18497  00420C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18498  00420E  6D60               	negf	___almod@dividend& (0+255),b
 18499  004210  0E00               	movlw	0
 18500  004212  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18501  004214  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18502  004216  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18503                           
 18504                           ; BSR set to: 0
 18505  004218  0E01               	movlw	1
 18506  00421A  6F69               	movwf	___almod@sign& (0+255),b
 18507  00421C                     l2320:
 18508                           
 18509                           ; BSR set to: 0
 18510                           
 18511                           ; BSR set to: 0
 18512  00421C  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18513  00421E  D008               	goto	l2321
 18514                           
 18515                           ; BSR set to: 0
 18516  004220  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18517  004222  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18518  004224  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18519  004226  6D64               	negf	___almod@divisor& (0+255),b
 18520  004228  0E00               	movlw	0
 18521  00422A  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18522  00422C  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18523  00422E  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18524  004230                     l2321:
 18525                           
 18526                           ; BSR set to: 0
 18527                           
 18528                           ; BSR set to: 0
 18529  004230  5164               	movf	___almod@divisor& (0+255),w,b
 18530  004232  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18531  004234  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18532  004236  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18533  004238  B4D8               	btfsc	status,2,c
 18534  00423A  D024               	goto	l2328
 18535                           
 18536                           ; BSR set to: 0
 18537  00423C  0E01               	movlw	1
 18538  00423E  6F68               	movwf	___almod@counter& (0+255),b
 18539  004240  D006               	goto	l2323
 18540  004242                     
 18541                           ; BSR set to: 0
 18542                           
 18543                           ; BSR set to: 0
 18544  004242  90D8               	bcf	status,0,c
 18545  004244  3764               	rlcf	___almod@divisor& (0+255),f,b
 18546  004246  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18547  004248  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18548  00424A  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18549  00424C  2B68               	incf	___almod@counter& (0+255),f,b
 18550  00424E                     l2323:
 18551                           
 18552                           ; BSR set to: 0
 18553                           
 18554                           ; BSR set to: 0
 18555  00424E  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18556  004250  D7F8               	goto	l2324
 18557  004252                     u8730:
 18558                           
 18559                           ; BSR set to: 0
 18560                           
 18561                           ; BSR set to: 0
 18562                           
 18563                           ; BSR set to: 0
 18564  004252  5164               	movf	___almod@divisor& (0+255),w,b
 18565  004254  5D60               	subwf	___almod@dividend& (0+255),w,b
 18566  004256  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18567  004258  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18568  00425A  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18569  00425C  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18570  00425E  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18571  004260  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18572  004262  A0D8               	btfss	status,0,c
 18573  004264  D008               	goto	l2327
 18574                           
 18575                           ; BSR set to: 0
 18576  004266  5164               	movf	___almod@divisor& (0+255),w,b
 18577  004268  5F60               	subwf	___almod@dividend& (0+255),f,b
 18578  00426A  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18579  00426C  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18580  00426E  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18581  004270  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18582  004272  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18583  004274  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18584  004276                     l2327:
 18585                           
 18586                           ; BSR set to: 0
 18587                           
 18588                           ; BSR set to: 0
 18589  004276  90D8               	bcf	status,0,c
 18590  004278  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18591  00427A  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18592  00427C  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18593  00427E  3364               	rrcf	___almod@divisor& (0+255),f,b
 18594                           
 18595                           ; BSR set to: 0
 18596  004280  2F68               	decfsz	___almod@counter& (0+255),f,b
 18597  004282  D7E7               	goto	u8730
 18598  004284                     l2328:
 18599                           
 18600                           ; BSR set to: 0
 18601                           
 18602                           ; BSR set to: 0
 18603                           
 18604                           ; BSR set to: 0
 18605  004284  5169               	movf	___almod@sign& (0+255),w,b
 18606  004286  B4D8               	btfsc	status,2,c
 18607  004288  D008               	goto	l2329
 18608                           
 18609                           ; BSR set to: 0
 18610  00428A  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18611  00428C  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18612  00428E  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18613  004290  6D60               	negf	___almod@dividend& (0+255),b
 18614  004292  0E00               	movlw	0
 18615  004294  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18616  004296  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18617  004298  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18618  00429A                     l2329:
 18619                           
 18620                           ; BSR set to: 0
 18621                           
 18622                           ; BSR set to: 0
 18623  00429A  C060  F060         	movff	___almod@dividend,?___almod
 18624  00429E  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18625  0042A2  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18626  0042A6  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18627  0042AA  0012               	return	
 18628  0042AC                     __end_of___almod:
 18629                           	opt stack 0
 18630                           tblptru	equ	0xFF8
 18631                           tblptrh	equ	0xFF7
 18632                           tblptrl	equ	0xFF6
 18633                           tablat	equ	0xFF5
 18634                           prodh	equ	0xFF4
 18635                           prodl	equ	0xFF3
 18636                           intcon	equ	0xFF2
 18637                           intcon3	equ	0xFF0
 18638                           postinc0	equ	0xFEE
 18639                           wreg	equ	0xFE8
 18640                           indf1	equ	0xFE7
 18641                           postdec1	equ	0xFE5
 18642                           fsr1h	equ	0xFE2
 18643                           fsr1l	equ	0xFE1
 18644                           indf2	equ	0xFDF
 18645                           fsr2h	equ	0xFDA
 18646                           fsr2l	equ	0xFD9
 18647                           status	equ	0xFD8
 18648                           
 18649 ;; *************** function _TMRapp_ClearBitFlags *****************
 18650 ;; Defined at:
 18651 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18652 ;; Parameters:    Size  Location     Type
 18653 ;;		None
 18654 ;; Auto vars:     Size  Location     Type
 18655 ;;		None
 18656 ;; Return value:  Size  Location     Type
 18657 ;;                  1    wreg      void 
 18658 ;; Registers used:
 18659 ;;		wreg, status,2
 18660 ;; Tracked objects:
 18661 ;;		On entry : 0/0
 18662 ;;		On exit  : 0/0
 18663 ;;		Unchanged: 0/0
 18664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18665 ;;      Params:         0       0       0       0       0       0       0       0       0
 18666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18667 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18668 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18669 ;;Total ram usage:        0 bytes
 18670 ;; Hardware stack levels used:    1
 18671 ;; Hardware stack levels required when called:   11
 18672 ;; This function calls:
 18673 ;;		Nothing
 18674 ;; This function is called by:
 18675 ;;		_moteHandler
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text61
 18680  005C36                     __ptext61:
 18681                           	opt stack 0
 18682  005C36                     _TMRapp_ClearBitFlags:
 18683                           	opt stack 18
 18684                           
 18685                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;incstack = 0
 18689  005C36  0E00               	movlw	0
 18690  005C38  0100               	movlb	0	; () banked
 18691  005C3A  6FF8               	movwf	_appTimer& (0+255),b
 18692                           
 18693                           ; BSR set to: 0
 18694  005C3C  0012               	return		;funcret
 18695  005C3E                     __end_of_TMRapp_ClearBitFlags:
 18696                           	opt stack 0
 18697                           tblptru	equ	0xFF8
 18698                           tblptrh	equ	0xFF7
 18699                           tblptrl	equ	0xFF6
 18700                           tablat	equ	0xFF5
 18701                           prodh	equ	0xFF4
 18702                           prodl	equ	0xFF3
 18703                           intcon	equ	0xFF2
 18704                           intcon3	equ	0xFF0
 18705                           postinc0	equ	0xFEE
 18706                           wreg	equ	0xFE8
 18707                           indf1	equ	0xFE7
 18708                           postdec1	equ	0xFE5
 18709                           fsr1h	equ	0xFE2
 18710                           fsr1l	equ	0xFE1
 18711                           indf2	equ	0xFDF
 18712                           fsr2h	equ	0xFDA
 18713                           fsr2l	equ	0xFD9
 18714                           status	equ	0xFD8
 18715                           
 18716 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18717 ;; Defined at:
 18718 ;;		line 1027 in file "../Includes/Board/MOTEapp.c"
 18719 ;; Parameters:    Size  Location     Type
 18720 ;;  timerTask       1    wreg     struct .
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;  timerTask       1    0[BANK0 ] struct .
 18723 ;; Return value:  Size  Location     Type
 18724 ;;                  1    wreg      void 
 18725 ;; Registers used:
 18726 ;;		wreg, status,2, status,0
 18727 ;; Tracked objects:
 18728 ;;		On entry : 0/0
 18729 ;;		On exit  : 0/0
 18730 ;;		Unchanged: 0/0
 18731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18732 ;;      Params:         0       0       0       0       0       0       0       0       0
 18733 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18734 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18735 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18736 ;;Total ram usage:        1 bytes
 18737 ;; Hardware stack levels used:    1
 18738 ;; Hardware stack levels required when called:   11
 18739 ;; This function calls:
 18740 ;;		Nothing
 18741 ;; This function is called by:
 18742 ;;		_moteHandler
 18743 ;; This function uses a non-reentrant model
 18744 ;;
 18745                           
 18746                           	psect	text62
 18747  00597C                     __ptext62:
 18748                           	opt stack 0
 18749  00597C                     _MOTEapp_TimerBasedTask:
 18750                           	opt stack 18
 18751                           
 18752                           ; BSR set to: 0
 18753                           ;incstack = 0
 18754                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18755  00597C  0100               	movlb	0	; () banked
 18756  00597E  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18757                           
 18758                           ;MOTEapp.c: 1032: if (timerTask.mSecTenTick)
 18759  005980  0100               	movlb	0	; () banked
 18760  005982  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18761  005984  D003               	goto	l605
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;MOTEapp.c: 1033: {
 18765                           ;MOTEapp.c: 1035: m10SecTicker++;
 18766  005986  0101               	movlb	1	; () banked
 18767  005988  4B3C               	infsnz	_m10SecTicker& (0+255),f,b
 18768  00598A  2B3D               	incf	(_m10SecTicker+1)& (0+255),f,b
 18769  00598C                     l605:
 18770                           
 18771                           ;MOTEapp.c: 1041: }
 18772                           ;MOTEapp.c: 1042: if (timerTask.SecTick)
 18773                           
 18774                           ; BSR set to: 1
 18775                           
 18776                           ;MOTEapp.c: 1038: {
 18777                           
 18778                           ; BSR set to: 1
 18779                           
 18780                           ; BSR set to: 1
 18781  00598C  0100               	movlb	0	; () banked
 18782  00598E  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;MOTEapp.c: 1043: {
 18786                           ;MOTEapp.c: 1045: secTicker++;
 18787  005990  2BF0               	incf	_secTicker& (0+255),f,b
 18788                           
 18789                           ; BSR set to: 0
 18790                           ;MOTEapp.c: 1046: }
 18791                           ;MOTEapp.c: 1047: if (timerTask.MinTick)
 18792                           
 18793                           ; BSR set to: 0
 18794  005992  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18795  005994  0012               	return	
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;MOTEapp.c: 1048: {
 18799                           ;MOTEapp.c: 1050: minTicker++;
 18800  005996  0101               	movlb	1	; () banked
 18801  005998  2B48               	incf	_minTicker& (0+255),f,b
 18802                           
 18803                           ; BSR set to: 1
 18804                           
 18805                           ; BSR set to: 1
 18806                           
 18807                           ;MOTEapp.c: 1057: {
 18808                           
 18809                           ; BSR set to: 1
 18810                           
 18811                           ; BSR set to: 1
 18812                           
 18813                           ;MOTEapp.c: 1053: {
 18814                           
 18815                           ; BSR set to: 1
 18816                           
 18817                           ; BSR set to: 1
 18818  00599A  0012               	return	
 18819  00599C                     __end_of_MOTEapp_TimerBasedTask:
 18820                           	opt stack 0
 18821                           tblptru	equ	0xFF8
 18822                           tblptrh	equ	0xFF7
 18823                           tblptrl	equ	0xFF6
 18824                           tablat	equ	0xFF5
 18825                           prodh	equ	0xFF4
 18826                           prodl	equ	0xFF3
 18827                           intcon	equ	0xFF2
 18828                           intcon3	equ	0xFF0
 18829                           postinc0	equ	0xFEE
 18830                           wreg	equ	0xFE8
 18831                           indf1	equ	0xFE7
 18832                           postdec1	equ	0xFE5
 18833                           fsr1h	equ	0xFE2
 18834                           fsr1l	equ	0xFE1
 18835                           indf2	equ	0xFDF
 18836                           fsr2h	equ	0xFDA
 18837                           fsr2l	equ	0xFD9
 18838                           status	equ	0xFD8
 18839                           
 18840 ;; *************** function _moteApp_clearCommand *****************
 18841 ;; Defined at:
 18842 ;;		line 1259 in file "../Includes/Board/MOTEapp.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;		None
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;		None
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  1    wreg      void 
 18849 ;; Registers used:
 18850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/0
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18859 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18860 ;;Total ram usage:        0 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; Hardware stack levels required when called:   14
 18863 ;; This function calls:
 18864 ;;		_sendCommand
 18865 ;; This function is called by:
 18866 ;;		_main
 18867 ;; This function uses a non-reentrant model
 18868 ;;
 18869                           
 18870                           	psect	text63
 18871  005BAA                     __ptext63:
 18872                           	opt stack 0
 18873  005BAA                     _moteApp_clearCommand:
 18874                           	opt stack 16
 18875                           
 18876                           ;MOTEapp.c: 1261: sendCommand("\r\n");
 18877                           
 18878                           ;incstack = 0
 18879  005BAA  0E05               	movlw	low (STR_177+23)
 18880  005BAC  0100               	movlb	0	; () banked
 18881  005BAE  6F61               	movwf	sendCommand@string& (0+255),b
 18882  005BB0  0E7A               	movlw	high (STR_177+23)
 18883  005BB2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18884  005BB4  EC7D  F02B         	call	_sendCommand	;wreg free
 18885  005BB8  0012               	return		;funcret
 18886  005BBA                     __end_of_moteApp_clearCommand:
 18887                           	opt stack 0
 18888                           tblptru	equ	0xFF8
 18889                           tblptrh	equ	0xFF7
 18890                           tblptrl	equ	0xFF6
 18891                           tablat	equ	0xFF5
 18892                           prodh	equ	0xFF4
 18893                           prodl	equ	0xFF3
 18894                           intcon	equ	0xFF2
 18895                           intcon3	equ	0xFF0
 18896                           postinc0	equ	0xFEE
 18897                           wreg	equ	0xFE8
 18898                           indf1	equ	0xFE7
 18899                           postdec1	equ	0xFE5
 18900                           fsr1h	equ	0xFE2
 18901                           fsr1l	equ	0xFE1
 18902                           indf2	equ	0xFDF
 18903                           fsr2h	equ	0xFDA
 18904                           fsr2l	equ	0xFD9
 18905                           status	equ	0xFD8
 18906                           
 18907 ;; *************** function _sendCommand *****************
 18908 ;; Defined at:
 18909 ;;		line 1114 in file "../Includes/Board/MOTEapp.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18912 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 18913 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 18914 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 18915 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 18916 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 18917 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 18918 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 18919 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;		None
 18922 ;; Return value:  Size  Location     Type
 18923 ;;                  1    wreg      void 
 18924 ;; Registers used:
 18925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18931 ;;      Params:         0       2       0       0       0       0       0       0       0
 18932 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18934 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18935 ;;Total ram usage:        2 bytes
 18936 ;; Hardware stack levels used:    1
 18937 ;; Hardware stack levels required when called:   13
 18938 ;; This function calls:
 18939 ;;		_EUSART_Write
 18940 ;;		_EndLine
 18941 ;; This function is called by:
 18942 ;;		_moduleResync
 18943 ;;		_moduleSleep
 18944 ;;		_moteJoiningProcess
 18945 ;;		_MOTEapp_SetDataRateSetting
 18946 ;;		_moteApp_clearCommand
 18947 ;;		_moteApp_toggleLeds
 18948 ;;		_moteApp_setSensorsInput
 18949 ;;		_moteApp_getTempValue
 18950 ;;		_moteApp_getLightValue
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text64
 18955  0056FA                     __ptext64:
 18956                           	opt stack 0
 18957  0056FA                     _sendCommand:
 18958                           	opt stack 14
 18959                           
 18960                           ;MOTEapp.c: 1117: while (*string)
 18961                           
 18962                           ;incstack = 0
 18963  0056FA  D00B               	goto	l636
 18964  0056FC                     
 18965                           ;MOTEapp.c: 1118: {
 18966                           ;MOTEapp.c: 1119: EUSART_Write(*string++);
 18967  0056FC  C061  FFF6         	movff	sendCommand@string,tblptrl
 18968  005700  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18969  005704                     	if	0	;tblptru may be non-zero
 18970  005704                     	endif
 18971  005704                     	if	0	;tblptru may be non-zero
 18972  005704                     	endif
 18973  005704  0008               	tblrd		*
 18974  005706  50F5               	movf	tablat,w,c
 18975  005708  EC50  F02A         	call	_EUSART_Write
 18976  00570C  0100               	movlb	0	; () banked
 18977  00570E  4B61               	infsnz	sendCommand@string& (0+255),f,b
 18978  005710  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 18979  005712                     l636:
 18980                           
 18981                           ; BSR set to: 0
 18982  005712  C061  FFF6         	movff	sendCommand@string,tblptrl
 18983  005716  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18984  00571A                     	if	0	;tblptru may be non-zero
 18985  00571A                     	endif
 18986  00571A                     	if	0	;tblptru may be non-zero
 18987  00571A                     	endif
 18988  00571A  0008               	tblrd		*
 18989  00571C  50F5               	movf	tablat,w,c
 18990  00571E  0900               	iorlw	0
 18991  005720  A4D8               	btfss	status,2,c
 18992  005722  D7EC               	goto	l637
 18993                           
 18994                           ;MOTEapp.c: 1120: }
 18995                           ;MOTEapp.c: 1121: EndLine();
 18996  005724  ECE5  F02D         	call	_EndLine	;wreg free
 18997  005728  0012               	return		;funcret
 18998  00572A                     __end_of_sendCommand:
 18999                           	opt stack 0
 19000                           tblptru	equ	0xFF8
 19001                           tblptrh	equ	0xFF7
 19002                           tblptrl	equ	0xFF6
 19003                           tablat	equ	0xFF5
 19004                           prodh	equ	0xFF4
 19005                           prodl	equ	0xFF3
 19006                           intcon	equ	0xFF2
 19007                           intcon3	equ	0xFF0
 19008                           postinc0	equ	0xFEE
 19009                           wreg	equ	0xFE8
 19010                           indf1	equ	0xFE7
 19011                           postdec1	equ	0xFE5
 19012                           fsr1h	equ	0xFE2
 19013                           fsr1l	equ	0xFE1
 19014                           indf2	equ	0xFDF
 19015                           fsr2h	equ	0xFDA
 19016                           fsr2l	equ	0xFD9
 19017                           status	equ	0xFD8
 19018                           
 19019 ;; *************** function _EndLine *****************
 19020 ;; Defined at:
 19021 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
 19022 ;; Parameters:    Size  Location     Type
 19023 ;;		None
 19024 ;; Auto vars:     Size  Location     Type
 19025 ;;		None
 19026 ;; Return value:  Size  Location     Type
 19027 ;;                  1    wreg      void 
 19028 ;; Registers used:
 19029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19030 ;; Tracked objects:
 19031 ;;		On entry : 0/0
 19032 ;;		On exit  : 0/0
 19033 ;;		Unchanged: 0/0
 19034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19035 ;;      Params:         0       0       0       0       0       0       0       0       0
 19036 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19038 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19039 ;;Total ram usage:        0 bytes
 19040 ;; Hardware stack levels used:    1
 19041 ;; Hardware stack levels required when called:   12
 19042 ;; This function calls:
 19043 ;;		_EUSART_Write
 19044 ;; This function is called by:
 19045 ;;		_sendCommand
 19046 ;;		_sendDataCommand
 19047 ;; This function uses a non-reentrant model
 19048 ;;
 19049                           
 19050                           	psect	text65
 19051  005BCA                     __ptext65:
 19052                           	opt stack 0
 19053  005BCA                     _EndLine:
 19054                           	opt stack 14
 19055                           
 19056                           ;MOTEapp.c: 1110: EUSART_Write(0x0D);
 19057                           
 19058                           ;incstack = 0
 19059  005BCA  0E0D               	movlw	13
 19060  005BCC  EC50  F02A         	call	_EUSART_Write
 19061                           
 19062                           ;MOTEapp.c: 1111: EUSART_Write(0x0A);
 19063  005BD0  0E0A               	movlw	10
 19064  005BD2  EC50  F02A         	call	_EUSART_Write
 19065  005BD6  0012               	return		;funcret
 19066  005BD8                     __end_of_EndLine:
 19067                           	opt stack 0
 19068                           tblptru	equ	0xFF8
 19069                           tblptrh	equ	0xFF7
 19070                           tblptrl	equ	0xFF6
 19071                           tablat	equ	0xFF5
 19072                           prodh	equ	0xFF4
 19073                           prodl	equ	0xFF3
 19074                           intcon	equ	0xFF2
 19075                           intcon3	equ	0xFF0
 19076                           postinc0	equ	0xFEE
 19077                           wreg	equ	0xFE8
 19078                           indf1	equ	0xFE7
 19079                           postdec1	equ	0xFE5
 19080                           fsr1h	equ	0xFE2
 19081                           fsr1l	equ	0xFE1
 19082                           indf2	equ	0xFDF
 19083                           fsr2h	equ	0xFDA
 19084                           fsr2l	equ	0xFD9
 19085                           status	equ	0xFD8
 19086                           
 19087 ;; *************** function _USBapp_handlerState *****************
 19088 ;; Defined at:
 19089 ;;		line 78 in file "../Includes/Board/USBapp.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;  state           1    wreg     enum E5833
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;  state           1    0[BANK0 ] enum E5833
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  1    wreg      void 
 19096 ;; Registers used:
 19097 ;;		wreg
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19103 ;;      Params:         0       0       0       0       0       0       0       0       0
 19104 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19106 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19107 ;;Total ram usage:        1 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:   11
 19110 ;; This function calls:
 19111 ;;		Nothing
 19112 ;; This function is called by:
 19113 ;;		_main
 19114 ;; This function uses a non-reentrant model
 19115 ;;
 19116                           
 19117                           	psect	text66
 19118  005C10                     __ptext66:
 19119                           	opt stack 0
 19120  005C10                     _USBapp_handlerState:
 19121                           	opt stack 19
 19122                           
 19123                           ;incstack = 0
 19124                           ;USBapp_handlerState@state stored from wreg
 19125  005C10  0100               	movlb	0	; () banked
 19126  005C12  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 19127                           
 19128                           ;USBapp.c: 80: usbState = state;
 19129  005C14  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 19130  005C18  0012               	return		;funcret
 19131  005C1A                     __end_of_USBapp_handlerState:
 19132                           	opt stack 0
 19133                           tblptru	equ	0xFF8
 19134                           tblptrh	equ	0xFF7
 19135                           tblptrl	equ	0xFF6
 19136                           tablat	equ	0xFF5
 19137                           prodh	equ	0xFF4
 19138                           prodl	equ	0xFF3
 19139                           intcon	equ	0xFF2
 19140                           intcon3	equ	0xFF0
 19141                           postinc0	equ	0xFEE
 19142                           wreg	equ	0xFE8
 19143                           indf1	equ	0xFE7
 19144                           postdec1	equ	0xFE5
 19145                           fsr1h	equ	0xFE2
 19146                           fsr1l	equ	0xFE1
 19147                           indf2	equ	0xFDF
 19148                           fsr2h	equ	0xFDA
 19149                           fsr2l	equ	0xFD9
 19150                           status	equ	0xFD8
 19151                           
 19152 ;; *************** function _USBapp_Handler *****************
 19153 ;; Defined at:
 19154 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19155 ;; Parameters:    Size  Location     Type
 19156 ;;		None
 19157 ;; Auto vars:     Size  Location     Type
 19158 ;;  buttonPress     1   23[BANK0 ] enum E5867
 19159 ;; Return value:  Size  Location     Type
 19160 ;;                  1    wreg      void 
 19161 ;; Registers used:
 19162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19163 ;; Tracked objects:
 19164 ;;		On entry : 0/0
 19165 ;;		On exit  : 0/0
 19166 ;;		Unchanged: 0/0
 19167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19168 ;;      Params:         0       0       0       0       0       0       0       0       0
 19169 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19171 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19172 ;;Total ram usage:        1 bytes
 19173 ;; Hardware stack levels used:    1
 19174 ;; Hardware stack levels required when called:   16
 19175 ;; This function calls:
 19176 ;;		_USBapp_DeviceCdcEmulatorHandler
 19177 ;;		_oled_clear
 19178 ;;		_oled_putString
 19179 ;;		_service_pushbutton
 19180 ;; This function is called by:
 19181 ;;		_main
 19182 ;; This function uses a non-reentrant model
 19183 ;;
 19184                           
 19185                           	psect	text67
 19186  003FE8                     __ptext67:
 19187                           	opt stack 0
 19188  003FE8                     _USBapp_Handler:
 19189                           	opt stack 14
 19190                           
 19191                           ;USBapp.c: 90: {
 19192                           ;USBapp.c: 91: switch(usbState)
 19193                           
 19194                           ;incstack = 0
 19195                           ;USBapp.c: 89: do
 19196  003FE8  D03E               	goto	l845
 19197  003FEA                     
 19198                           ;USBapp.c: 94: while(1);
 19199  003FEA  D7FF               	goto	l846
 19200  003FEC                     
 19201                           ;USBapp.c: 98: oled_clear();
 19202  003FEC  EC1A  F02D         	call	_oled_clear	;wreg free
 19203                           
 19204                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19205  003FF0  0E10               	movlw	low STR_187
 19206  003FF2  0100               	movlb	0	; () banked
 19207  003FF4  6F72               	movwf	oled_putString@string& (0+255),b
 19208  003FF6  0E7F               	movlw	high STR_187
 19209  003FF8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19210  003FFA  0E01               	movlw	1
 19211  003FFC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19212  003FFE  0E00               	movlw	0
 19213  004000  6F75               	movwf	oled_putString@start_page& (0+255),b
 19214  004002  ECA1  F026         	call	_oled_putString	;wreg free
 19215                           
 19216                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19217  004006  0E61               	movlw	low STR_188
 19218  004008  0100               	movlb	0	; () banked
 19219  00400A  6F72               	movwf	oled_putString@string& (0+255),b
 19220  00400C  0E7F               	movlw	high STR_188
 19221  00400E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19222  004010  0E02               	movlw	2
 19223  004012  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19224  004014  0E01               	movlw	1
 19225  004016  6F75               	movwf	oled_putString@start_page& (0+255),b
 19226  004018  ECA1  F026         	call	_oled_putString	;wreg free
 19227                           
 19228                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19229  00401C  0E28               	movlw	low STR_189
 19230  00401E  0100               	movlb	0	; () banked
 19231  004020  6F72               	movwf	oled_putString@string& (0+255),b
 19232  004022  0E7E               	movlw	high STR_189
 19233  004024  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19234  004026  0E00               	movlw	0
 19235  004028  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19236  00402A  0E02               	movlw	2
 19237  00402C  6F75               	movwf	oled_putString@start_page& (0+255),b
 19238  00402E  ECA1  F026         	call	_oled_putString	;wreg free
 19239                           
 19240                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19241  004032  0E01               	movlw	1
 19242  004034  0100               	movlb	0	; () banked
 19243  004036  D005               	goto	L16
 19244  004038                     
 19245                           ; BSR set to: 0
 19246                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19247                           
 19248                           ; BSR set to: 0
 19249  004038  0E20               	movlw	32
 19250  00403A  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19251  00403C  D001               	goto	l853
 19252  00403E  D01F               	goto	l850
 19253  004040                     l853:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;USBapp.c: 111: }
 19257                           ;USBapp.c: 112: usbState = USB_CDC;
 19258                           
 19259                           ; BSR set to: 0
 19260  004040  0E02               	movlw	2
 19261  004042                     L16:
 19262  004042  6FEA               	movwf	_usbState& (0+255),b
 19263                           
 19264                           ;USBapp.c: 113: break;
 19265  004044  D01C               	goto	l850
 19266  004046                     
 19267                           ; BSR set to: 0
 19268                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19269                           
 19270                           ; BSR set to: 0
 19271  004046  ECDD  F01A         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19272                           
 19273                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19274  00404A  0E03               	movlw	3
 19275  00404C  0100               	movlb	0	; () banked
 19276  00404E  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19277                           
 19278                           ; BSR set to: 0
 19279                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19280  004050  EC6A  F026         	call	_service_pushbutton	;wreg free
 19281  004054  0100               	movlb	0	; () banked
 19282  004056  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;USBapp.c: 122: if (buttonPress != Released )
 19286  004058  0E03               	movlw	3
 19287  00405A  1977               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19288  00405C  B4D8               	btfsc	status,2,c
 19289  00405E  D00F               	goto	l850
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;USBapp.c: 123: {
 19293                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19294  004060  0E02               	movlw	2
 19295  004062  6FF9               	movwf	_exitUSB& (0+255),b
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;USBapp.c: 127: }
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;USBapp.c: 125: }
 19302                           ;USBapp.c: 126: break;
 19303  004064  D00C               	goto	l850
 19304  004066                     l845:
 19305                           
 19306                           ; BSR set to: 0
 19307  004066  0100               	movlb	0	; () banked
 19308  004068  51EA               	movf	_usbState& (0+255),w,b
 19309                           
 19310                           ; Switch size 1, requested type "space"
 19311                           ; Number of cases is 3, Range of values is 0 to 2
 19312                           ; switch strategies available:
 19313                           ; Name         Instructions Cycles
 19314                           ; simple_byte           10     6 (average)
 19315                           ;	Chosen strategy is simple_byte
 19316  00406A  0A00               	xorlw	0	; case 0
 19317  00406C  B4D8               	btfsc	status,2,c
 19318  00406E  D7BE               	goto	l851
 19319  004070  0A01               	xorlw	1	; case 1
 19320  004072  B4D8               	btfsc	status,2,c
 19321  004074  D7E1               	goto	l852
 19322  004076  0A03               	xorlw	3	; case 2
 19323  004078  B4D8               	btfsc	status,2,c
 19324  00407A  D7E5               	goto	l855
 19325  00407C  D7B6               	goto	l846
 19326  00407E                     l850:
 19327                           
 19328                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19329                           
 19330                           ; BSR set to: 0
 19331  00407E  A080               	btfss	3968,0,c	;volatile
 19332  004080  D004               	goto	u10250
 19333  004082  0100               	movlb	0	; () banked
 19334  004084  51F9               	movf	_exitUSB& (0+255),w,b
 19335  004086  B4D8               	btfsc	status,2,c
 19336  004088  D7EE               	goto	l845
 19337  00408A                     u10250:
 19338                           
 19339                           ;USBapp.c: 129: __nop();
 19340                           
 19341                           ; BSR set to: 0
 19342  00408A  F000               	nop	
 19343                           
 19344                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19345  00408C  0E02               	movlw	2
 19346  00408E  0100               	movlb	0	; () banked
 19347  004090  19F9               	xorwf	_exitUSB& (0+255),w,b
 19348  004092  B4D8               	btfsc	status,2,c
 19349  004094  0012               	return	
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;USBapp.c: 131: exitUSB = NO_USB;
 19353  004096  0E00               	movlw	0
 19354  004098  6FF9               	movwf	_exitUSB& (0+255),b
 19355  00409A  0012               	return	
 19356  00409C                     __end_of_USBapp_Handler:
 19357                           	opt stack 0
 19358                           tblptru	equ	0xFF8
 19359                           tblptrh	equ	0xFF7
 19360                           tblptrl	equ	0xFF6
 19361                           tablat	equ	0xFF5
 19362                           prodh	equ	0xFF4
 19363                           prodl	equ	0xFF3
 19364                           intcon	equ	0xFF2
 19365                           intcon3	equ	0xFF0
 19366                           postinc0	equ	0xFEE
 19367                           wreg	equ	0xFE8
 19368                           indf1	equ	0xFE7
 19369                           postdec1	equ	0xFE5
 19370                           fsr1h	equ	0xFE2
 19371                           fsr1l	equ	0xFE1
 19372                           indf2	equ	0xFDF
 19373                           fsr2h	equ	0xFDA
 19374                           fsr2l	equ	0xFD9
 19375                           status	equ	0xFD8
 19376                           
 19377 ;; *************** function _service_pushbutton *****************
 19378 ;; Defined at:
 19379 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;		None
 19382 ;; Auto vars:     Size  Location     Type
 19383 ;;  bs              1    0[BANK0 ] enum E5748
 19384 ;; Return value:  Size  Location     Type
 19385 ;;                  1    wreg      enum E5836
 19386 ;; Registers used:
 19387 ;;		wreg, status,2, status,0
 19388 ;; Tracked objects:
 19389 ;;		On entry : 0/0
 19390 ;;		On exit  : 0/0
 19391 ;;		Unchanged: 0/0
 19392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19393 ;;      Params:         0       0       0       0       0       0       0       0       0
 19394 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19396 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19397 ;;Total ram usage:        1 bytes
 19398 ;; Hardware stack levels used:    1
 19399 ;; Hardware stack levels required when called:   11
 19400 ;; This function calls:
 19401 ;;		Nothing
 19402 ;; This function is called by:
 19403 ;;		_moteHandler
 19404 ;;		_USBapp_Handler
 19405 ;; This function uses a non-reentrant model
 19406 ;;
 19407                           
 19408                           	psect	text68
 19409  004CD4                     __ptext68:
 19410                           	opt stack 0
 19411  004CD4                     _service_pushbutton:
 19412                           	opt stack 18
 19413                           
 19414                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19415                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19416                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19417                           
 19418                           ; BSR set to: 0
 19419                           ;incstack = 0
 19420  004CD4  0E00               	movlw	0
 19421  004CD6  0100               	movlb	0	; () banked
 19422  004CD8  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19426  004CDA  A281               	btfss	3969,1,c	;volatile
 19427  004CDC  D002               	goto	u9010
 19428                           
 19429                           ; BSR set to: 0
 19430  004CDE  B081               	btfsc	3969,0,c	;volatile
 19431  004CE0  D01A               	goto	l938
 19432  004CE2                     u9010:
 19433                           
 19434                           ; BSR set to: 0
 19435                           ;buttons.c: 56: {
 19436                           ;buttons.c: 57: ++PB_Timer;
 19437                           
 19438                           ; BSR set to: 0
 19439  004CE2  0E01               	movlw	1
 19440  004CE4  0101               	movlb	1	; () banked
 19441  004CE6  272A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19442  004CE8  0E00               	movlw	0
 19443  004CEA  232B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19444  004CEC  232C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19445  004CEE  232D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19446                           
 19447                           ;buttons.c: 61: if (PB_Timer == 55)
 19448  004CF0  0E37               	movlw	55
 19449  004CF2  192A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19450  004CF4  112B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19451  004CF6  112C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19452  004CF8  112D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19453  004CFA  A4D8               	btfss	status,2,c
 19454  004CFC  D009               	goto	l941
 19455                           
 19456                           ; BSR set to: 1
 19457                           ;buttons.c: 62: {
 19458                           ;buttons.c: 63: Release_Timer = 0;
 19459  004CFE  0E00               	movlw	0
 19460  004D00  0100               	movlb	0	; () banked
 19461  004D02  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19465  004D04  B281               	btfsc	3969,1,c	;volatile
 19466  004D06  D002               	goto	l942
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;buttons.c: 66: {
 19470                           ;buttons.c: 67: bs = ShortPress1;
 19471  004D08  0E01               	movlw	1
 19472  004D0A  D018               	goto	L19
 19473  004D0C                     l942:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;buttons.c: 69: else
 19477                           ;buttons.c: 70: {
 19478                           ;buttons.c: 71: bs = ShortPress2;
 19479                           
 19480                           ; BSR set to: 0
 19481  004D0C  0E02               	movlw	2
 19482  004D0E  D016               	goto	L19
 19483  004D10                     l941:
 19484                           
 19485                           ;buttons.c: 74: else
 19486                           ;buttons.c: 75: {
 19487                           ;buttons.c: 76: bs = NoButton;
 19488                           
 19489                           ; BSR set to: 0
 19490  004D10  0E00               	movlw	0
 19491  004D12  0100               	movlb	0	; () banked
 19492  004D14  D013               	goto	L19
 19493  004D16                     l938:
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;buttons.c: 79: else
 19497                           ;buttons.c: 80: {
 19498                           ;buttons.c: 81: if (Release_Timer == 20)
 19499                           
 19500                           ; BSR set to: 0
 19501  004D16  0E14               	movlw	20
 19502  004D18  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19503  004D1A  A4D8               	btfss	status,2,c
 19504  004D1C  D00D               	goto	l946
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;buttons.c: 82: {
 19508                           ;buttons.c: 83: PB_Timer = 0;
 19509  004D1E  0E00               	movlw	0
 19510  004D20  0101               	movlb	1	; () banked
 19511  004D22  6F2A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19512  004D24  0E00               	movlw	0
 19513  004D26  6F2B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19514  004D28  0E00               	movlw	0
 19515  004D2A  6F2C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19516  004D2C  0E00               	movlw	0
 19517  004D2E  6F2D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19518                           
 19519                           ;buttons.c: 84: Release_Timer = 0;
 19520  004D30  0E00               	movlw	0
 19521  004D32  0100               	movlb	0	; () banked
 19522  004D34  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19523                           
 19524                           ;buttons.c: 85: }
 19525  004D36  D001               	goto	l947
 19526  004D38                     l946:
 19527                           
 19528                           ; BSR set to: 0
 19529                           ;buttons.c: 86: else
 19530                           ;buttons.c: 87: {
 19531                           ;buttons.c: 88: Release_Timer++;
 19532                           
 19533                           ; BSR set to: 0
 19534  004D38  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19535  004D3A                     l947:
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;buttons.c: 89: }
 19539                           ;buttons.c: 90: bs = Released;
 19540                           
 19541                           ; BSR set to: 0
 19542  004D3A  0E03               	movlw	3
 19543  004D3C                     L19:
 19544  004D3C  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;buttons.c: 91: }
 19548                           ;buttons.c: 93: return bs;
 19549                           
 19550                           ; BSR set to: 0
 19551  004D3E  5160               	movf	service_pushbutton@bs& (0+255),w,b
 19552  004D40  0012               	return	
 19553  004D42                     __end_of_service_pushbutton:
 19554                           	opt stack 0
 19555                           tblptru	equ	0xFF8
 19556                           tblptrh	equ	0xFF7
 19557                           tblptrl	equ	0xFF6
 19558                           tablat	equ	0xFF5
 19559                           prodh	equ	0xFF4
 19560                           prodl	equ	0xFF3
 19561                           intcon	equ	0xFF2
 19562                           intcon3	equ	0xFF0
 19563                           postinc0	equ	0xFEE
 19564                           wreg	equ	0xFE8
 19565                           indf1	equ	0xFE7
 19566                           postdec1	equ	0xFE5
 19567                           fsr1h	equ	0xFE2
 19568                           fsr1l	equ	0xFE1
 19569                           indf2	equ	0xFDF
 19570                           fsr2h	equ	0xFDA
 19571                           fsr2l	equ	0xFD9
 19572                           status	equ	0xFD8
 19573                           
 19574 ;; *************** function _oled_putString *****************
 19575 ;; Defined at:
 19576 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19577 ;; Parameters:    Size  Location     Type
 19578 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 19579 ;;		 -> printfOled@tempBuffer(16), oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), 
 19580 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 19581 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 19582 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 19583 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 19584 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 19585 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 19586 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 19587 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 19588 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 19589 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 19590 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 19591 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 19592 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 19593 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 19594 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 19595 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 19596 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 19597 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 19598 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 19599 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 19600 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 19601 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 19602 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 19603 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 19604 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 19605 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 19606 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 19607 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 19608 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 19609 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 19610 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 19611 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 19612 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 19613 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 19614 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 19615 ;;  station_dot     1   20[BANK0 ] unsigned char 
 19616 ;;  start_page      1   21[BANK0 ] unsigned char 
 19617 ;; Auto vars:     Size  Location     Type
 19618 ;;  index           1   22[BANK0 ] unsigned char 
 19619 ;; Return value:  Size  Location     Type
 19620 ;;                  1    wreg      void 
 19621 ;; Registers used:
 19622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19623 ;; Tracked objects:
 19624 ;;		On entry : 0/0
 19625 ;;		On exit  : 0/0
 19626 ;;		Unchanged: 0/0
 19627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19628 ;;      Params:         0       4       0       0       0       0       0       0       0
 19629 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19631 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19632 ;;Total ram usage:        5 bytes
 19633 ;; Hardware stack levels used:    1
 19634 ;; Hardware stack levels required when called:   14
 19635 ;; This function calls:
 19636 ;;		_oled_putChar
 19637 ;; This function is called by:
 19638 ;;		_main
 19639 ;;		_test_oled
 19640 ;;		_test_switch
 19641 ;;		_test_comms
 19642 ;;		_test_leds
 19643 ;;		_moteHandler
 19644 ;;		_moteJoiningProcess
 19645 ;;		_moteRunningProcess
 19646 ;;		_moteApp_testSensors
 19647 ;;		_USBapp_Handler
 19648 ;;		_oled_putUint8
 19649 ;;		_oled_putint8
 19650 ;;		_test_adc
 19651 ;;		_test_rf
 19652 ;;		_oled_putUint16
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656                           	psect	text69
 19657  004D42                     __ptext69:
 19658                           	opt stack 0
 19659  004D42                     _oled_putString:
 19660                           	opt stack 14
 19661                           
 19662                           ;SSD1306oLED.c: 333: uint8_t index;
 19663                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19664                           
 19665                           ; BSR set to: 0
 19666                           ;incstack = 0
 19667  004D42  C074  F076         	movff	oled_putString@station_dot,oled_putString@index
 19668  004D46  0E0F               	movlw	15
 19669  004D48  0100               	movlb	0	; () banked
 19670  004D4A  6576               	cpfsgt	oled_putString@index& (0+255),b
 19671  004D4C  D001               	goto	l1045
 19672  004D4E  0012               	return	
 19673  004D50                     l1045:
 19674                           
 19675                           ; BSR set to: 0
 19676                           ;SSD1306oLED.c: 335: {
 19677                           ;SSD1306oLED.c: 336: if (*string != 0)
 19678                           
 19679                           ; BSR set to: 0
 19680  004D50  C072  FFF6         	movff	oled_putString@string,tblptrl
 19681  004D54  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19682  004D58  6AF8               	clrf	tblptru,c
 19683  004D5A  0E07               	movlw	(high __ramtop+-1)
 19684  004D5C  64F7               	cpfsgt	tblptrh,c
 19685  004D5E  D003               	bra	u6577
 19686  004D60  0008               	tblrd		*
 19687  004D62  50F5               	movf	tablat,w,c
 19688  004D64  D005               	bra	u6570
 19689  004D66                     u6577:
 19690  004D66  CFF6 FFE9          	movff	tblptrl,fsr0l
 19691  004D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19692  004D6E  50EF               	movf	indf0,w,c
 19693  004D70                     u6570:
 19694  004D70  0900               	iorlw	0
 19695  004D72  B4D8               	btfsc	status,2,c
 19696  004D74  0012               	return	
 19697                           
 19698                           ;SSD1306oLED.c: 337: {
 19699                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19700  004D76  C076  F062         	movff	oled_putString@index,oled_putChar@station_dot
 19701  004D7A  C075  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 19702  004D7E  C072  FFF6         	movff	oled_putString@string,tblptrl
 19703  004D82  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19704  004D86  6AF8               	clrf	tblptru,c
 19705  004D88  0E07               	movlw	(high __ramtop+-1)
 19706  004D8A  64F7               	cpfsgt	tblptrh,c
 19707  004D8C  D003               	bra	u6597
 19708  004D8E  0008               	tblrd		*
 19709  004D90  50F5               	movf	tablat,w,c
 19710  004D92  D005               	bra	u6590
 19711  004D94                     u6597:
 19712  004D94  CFF6 FFE9          	movff	tblptrl,fsr0l
 19713  004D98  CFF7 FFEA          	movff	tblptrh,fsr0h
 19714  004D9C  50EF               	movf	indf0,w,c
 19715  004D9E                     u6590:
 19716  004D9E  EC7F  F024         	call	_oled_putChar
 19717                           
 19718                           ;SSD1306oLED.c: 339: *string++;
 19719  004DA2  0100               	movlb	0	; () banked
 19720  004DA4  4B72               	infsnz	oled_putString@string& (0+255),f,b
 19721  004DA6  2B73               	incf	(oled_putString@string+1)& (0+255),f,b
 19722                           
 19723                           ; BSR set to: 0
 19724                           
 19725                           ; BSR set to: 0
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;SSD1306oLED.c: 341: else
 19729                           ;SSD1306oLED.c: 342: {
 19730                           ;SSD1306oLED.c: 343: break;
 19731                           
 19732                           ;SSD1306oLED.c: 340: }
 19733  004DA8  2B76               	incf	oled_putString@index& (0+255),f,b
 19734                           
 19735                           ; BSR set to: 0
 19736  004DAA  0E0F               	movlw	15
 19737  004DAC  D7CE               	goto	L20
 19738  004DAE                     __end_of_oled_putString:
 19739                           	opt stack 0
 19740                           tblptru	equ	0xFF8
 19741                           tblptrh	equ	0xFF7
 19742                           tblptrl	equ	0xFF6
 19743                           tablat	equ	0xFF5
 19744                           prodh	equ	0xFF4
 19745                           prodl	equ	0xFF3
 19746                           intcon	equ	0xFF2
 19747                           intcon3	equ	0xFF0
 19748                           indf0	equ	0xFEF
 19749                           postinc0	equ	0xFEE
 19750                           fsr0h	equ	0xFEA
 19751                           fsr0l	equ	0xFE9
 19752                           wreg	equ	0xFE8
 19753                           indf1	equ	0xFE7
 19754                           postdec1	equ	0xFE5
 19755                           fsr1h	equ	0xFE2
 19756                           fsr1l	equ	0xFE1
 19757                           indf2	equ	0xFDF
 19758                           fsr2h	equ	0xFDA
 19759                           fsr2l	equ	0xFD9
 19760                           status	equ	0xFD8
 19761                           
 19762 ;; *************** function _oled_clear *****************
 19763 ;; Defined at:
 19764 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19765 ;; Parameters:    Size  Location     Type
 19766 ;;		None
 19767 ;; Auto vars:     Size  Location     Type
 19768 ;;		None
 19769 ;; Return value:  Size  Location     Type
 19770 ;;                  1    wreg      void 
 19771 ;; Registers used:
 19772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19773 ;; Tracked objects:
 19774 ;;		On entry : 0/0
 19775 ;;		On exit  : 0/0
 19776 ;;		Unchanged: 0/0
 19777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19778 ;;      Params:         0       0       0       0       0       0       0       0       0
 19779 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19781 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19782 ;;Total ram usage:        0 bytes
 19783 ;; Hardware stack levels used:    1
 19784 ;; Hardware stack levels required when called:   15
 19785 ;; This function calls:
 19786 ;;		_oled_clearRow
 19787 ;; This function is called by:
 19788 ;;		_main
 19789 ;;		_test_powerup
 19790 ;;		_test_oled
 19791 ;;		_test_switch
 19792 ;;		_moteHandler
 19793 ;;		_moteJoiningProcess
 19794 ;;		_moteRunningProcess
 19795 ;;		_moteApp_testSensors
 19796 ;;		_USBapp_Handler
 19797 ;;		_oled_init
 19798 ;;		_test_adc
 19799 ;;		_test_rf
 19800 ;; This function uses a non-reentrant model
 19801 ;;
 19802                           
 19803                           	psect	text70
 19804  005A34                     __ptext70:
 19805                           	opt stack 0
 19806  005A34                     _oled_clear:
 19807                           	opt stack 13
 19808                           
 19809                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19810                           
 19811                           ;incstack = 0
 19812  005A34  0E00               	movlw	0
 19813  005A36  EC87  F02C         	call	_oled_clearRow
 19814                           
 19815                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19816  005A3A  0E01               	movlw	1
 19817  005A3C  EC87  F02C         	call	_oled_clearRow
 19818                           
 19819                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19820  005A40  0E02               	movlw	2
 19821  005A42  EC87  F02C         	call	_oled_clearRow
 19822                           
 19823                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19824  005A46  0E03               	movlw	3
 19825  005A48  EC87  F02C         	call	_oled_clearRow
 19826  005A4C  0012               	return		;funcret
 19827  005A4E                     __end_of_oled_clear:
 19828                           	opt stack 0
 19829                           tblptru	equ	0xFF8
 19830                           tblptrh	equ	0xFF7
 19831                           tblptrl	equ	0xFF6
 19832                           tablat	equ	0xFF5
 19833                           prodh	equ	0xFF4
 19834                           prodl	equ	0xFF3
 19835                           intcon	equ	0xFF2
 19836                           intcon3	equ	0xFF0
 19837                           indf0	equ	0xFEF
 19838                           postinc0	equ	0xFEE
 19839                           fsr0h	equ	0xFEA
 19840                           fsr0l	equ	0xFE9
 19841                           wreg	equ	0xFE8
 19842                           indf1	equ	0xFE7
 19843                           postdec1	equ	0xFE5
 19844                           fsr1h	equ	0xFE2
 19845                           fsr1l	equ	0xFE1
 19846                           indf2	equ	0xFDF
 19847                           fsr2h	equ	0xFDA
 19848                           fsr2l	equ	0xFD9
 19849                           status	equ	0xFD8
 19850                           
 19851 ;; *************** function _oled_clearRow *****************
 19852 ;; Defined at:
 19853 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 19854 ;; Parameters:    Size  Location     Type
 19855 ;;  page            1    wreg     unsigned char 
 19856 ;; Auto vars:     Size  Location     Type
 19857 ;;  page            1   12[BANK0 ] unsigned char 
 19858 ;;  index           1   13[BANK0 ] unsigned char 
 19859 ;; Return value:  Size  Location     Type
 19860 ;;                  1    wreg      void 
 19861 ;; Registers used:
 19862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19863 ;; Tracked objects:
 19864 ;;		On entry : 0/0
 19865 ;;		On exit  : 0/0
 19866 ;;		Unchanged: 0/0
 19867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19868 ;;      Params:         0       0       0       0       0       0       0       0       0
 19869 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19871 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19872 ;;Total ram usage:        2 bytes
 19873 ;; Hardware stack levels used:    1
 19874 ;; Hardware stack levels required when called:   14
 19875 ;; This function calls:
 19876 ;;		_oled_putChar
 19877 ;; This function is called by:
 19878 ;;		_oled_clear
 19879 ;; This function uses a non-reentrant model
 19880 ;;
 19881                           
 19882                           	psect	text71
 19883  00590E                     __ptext71:
 19884                           	opt stack 0
 19885  00590E                     _oled_clearRow:
 19886                           	opt stack 13
 19887                           
 19888                           ;incstack = 0
 19889                           ;oled_clearRow@page stored from wreg
 19890  00590E  0100               	movlb	0	; () banked
 19891  005910  6F6C               	movwf	oled_clearRow@page& (0+255),b
 19892                           
 19893                           ;SSD1306oLED.c: 358: uint8_t index;
 19894                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 19895  005912  0E00               	movlw	0
 19896  005914  0100               	movlb	0	; () banked
 19897  005916  6F6D               	movwf	oled_clearRow@index& (0+255),b
 19898  005918                     l8048:
 19899                           
 19900                           ; BSR set to: 0
 19901  005918  0E0F               	movlw	15
 19902  00591A  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 19903  00591C  D001               	goto	l1055
 19904  00591E  0012               	return	
 19905  005920                     l1055:
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;SSD1306oLED.c: 361: {
 19909                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 19910                           
 19911                           ; BSR set to: 0
 19912  005920  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 19913  005924  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 19914  005928  0E20               	movlw	32
 19915  00592A  EC7F  F024         	call	_oled_putChar
 19916  00592E  0100               	movlb	0	; () banked
 19917  005930  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 19918  005932  D7F2               	goto	l8048
 19919  005934                     __end_of_oled_clearRow:
 19920                           	opt stack 0
 19921                           tblptru	equ	0xFF8
 19922                           tblptrh	equ	0xFF7
 19923                           tblptrl	equ	0xFF6
 19924                           tablat	equ	0xFF5
 19925                           prodh	equ	0xFF4
 19926                           prodl	equ	0xFF3
 19927                           intcon	equ	0xFF2
 19928                           intcon3	equ	0xFF0
 19929                           indf0	equ	0xFEF
 19930                           postinc0	equ	0xFEE
 19931                           fsr0h	equ	0xFEA
 19932                           fsr0l	equ	0xFE9
 19933                           wreg	equ	0xFE8
 19934                           indf1	equ	0xFE7
 19935                           postdec1	equ	0xFE5
 19936                           fsr1h	equ	0xFE2
 19937                           fsr1l	equ	0xFE1
 19938                           indf2	equ	0xFDF
 19939                           fsr2h	equ	0xFDA
 19940                           fsr2l	equ	0xFD9
 19941                           status	equ	0xFD8
 19942                           
 19943 ;; *************** function _oled_putChar *****************
 19944 ;; Defined at:
 19945 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 19946 ;; Parameters:    Size  Location     Type
 19947 ;;  k               1    wreg     unsigned char 
 19948 ;;  station_dot     1    2[BANK0 ] unsigned char 
 19949 ;;  start_page      1    3[BANK0 ] unsigned char 
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  k               1   10[BANK0 ] unsigned char 
 19952 ;;  index           1   11[BANK0 ] unsigned char 
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      void 
 19955 ;; Registers used:
 19956 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19962 ;;      Params:         0       2       0       0       0       0       0       0       0
 19963 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19964 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19965 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19966 ;;Total ram usage:       10 bytes
 19967 ;; Hardware stack levels used:    1
 19968 ;; Hardware stack levels required when called:   13
 19969 ;; This function calls:
 19970 ;;		_Set_Column_Address
 19971 ;;		_Set_Page_Address
 19972 ;;		_oled_writeData
 19973 ;; This function is called by:
 19974 ;;		_moteApp_testSensors
 19975 ;;		_oled_putString
 19976 ;;		_oled_clearRow
 19977 ;;		_test_adc
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           	psect	text72
 19982  0048FE                     __ptext72:
 19983                           	opt stack 0
 19984  0048FE                     _oled_putChar:
 19985                           	opt stack 14
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;incstack = 0
 19989                           ;oled_putChar@k stored from wreg
 19990  0048FE  0100               	movlb	0	; () banked
 19991  004900  6F6A               	movwf	oled_putChar@k& (0+255),b
 19992                           
 19993                           ;SSD1306oLED.c: 320: uint8_t index;
 19994                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 19995  004902  0100               	movlb	0	; () banked
 19996  004904  5163               	movf	oled_putChar@start_page& (0+255),w,b
 19997  004906  EC8C  F02D         	call	_Set_Page_Address
 19998                           
 19999                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 20000  00490A  0100               	movlb	0	; () banked
 20001  00490C  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 20002  00490E  0D08               	mullw	8
 20003  004910  50F3               	movf	prodl,w,c
 20004  004912  0F04               	addlw	4
 20005  004914  EC0C  F02D         	call	_Set_Column_Address
 20006                           
 20007                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 20008  004918  0E00               	movlw	0
 20009  00491A  0100               	movlb	0	; () banked
 20010  00491C  6F6B               	movwf	oled_putChar@index& (0+255),b
 20011  00491E                     l7898:
 20012                           
 20013                           ; BSR set to: 0
 20014  00491E  0E07               	movlw	7
 20015  004920  656B               	cpfsgt	oled_putChar@index& (0+255),b
 20016  004922  D001               	goto	l1040
 20017  004924  0012               	return	
 20018  004926                     l1040:
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;SSD1306oLED.c: 326: {
 20022                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 20023                           
 20024                           ; BSR set to: 0
 20025  004926  516B               	movf	oled_putChar@index& (0+255),w,b
 20026  004928  0D01               	mullw	1
 20027  00492A  0E00               	movlw	0
 20028  00492C  6F64               	movwf	??_oled_putChar& (0+255),b
 20029  00492E  0EFF               	movlw	255
 20030  004930  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 20031  004932  516A               	movf	oled_putChar@k& (0+255),w,b
 20032  004934  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 20033  004936  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 20034  004938  90D8               	bcf	status,0,c
 20035  00493A  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20036  00493C  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20037  00493E  90D8               	bcf	status,0,c
 20038  004940  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20039  004942  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20040  004944  90D8               	bcf	status,0,c
 20041  004946  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20042  004948  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20043  00494A  5164               	movf	??_oled_putChar& (0+255),w,b
 20044  00494C  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 20045  00494E  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 20046  004950  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 20047  004952  C1E8  F068         	movff	_selectedFont,??_oled_putChar+4
 20048  004956  C1E9  F069         	movff	_selectedFont+1,??_oled_putChar+5
 20049  00495A  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 20050  00495C  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20051  00495E  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 20052  004960  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20053  004962  50F3               	movf	prodl,w,c
 20054  004964  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20055  004966  50F4               	movf	prodh,w,c
 20056  004968  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20057  00496A  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 20058  00496E  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 20059  004972                     	if	0	;tblptru may be non-zero
 20060  004972                     	endif
 20061  004972                     	if	0	;tblptru may be non-zero
 20062  004972                     	endif
 20063  004972  0008               	tblrd		*
 20064  004974  50F5               	movf	tablat,w,c
 20065  004976  EC41  F02D         	call	_oled_writeData
 20066  00497A  0100               	movlb	0	; () banked
 20067  00497C  2B6B               	incf	oled_putChar@index& (0+255),f,b
 20068  00497E  D7CF               	goto	l7898
 20069  004980                     __end_of_oled_putChar:
 20070                           	opt stack 0
 20071                           tblptru	equ	0xFF8
 20072                           tblptrh	equ	0xFF7
 20073                           tblptrl	equ	0xFF6
 20074                           tablat	equ	0xFF5
 20075                           prodh	equ	0xFF4
 20076                           prodl	equ	0xFF3
 20077                           intcon	equ	0xFF2
 20078                           intcon3	equ	0xFF0
 20079                           indf0	equ	0xFEF
 20080                           postinc0	equ	0xFEE
 20081                           fsr0h	equ	0xFEA
 20082                           fsr0l	equ	0xFE9
 20083                           wreg	equ	0xFE8
 20084                           indf1	equ	0xFE7
 20085                           postdec1	equ	0xFE5
 20086                           fsr1h	equ	0xFE2
 20087                           fsr1l	equ	0xFE1
 20088                           indf2	equ	0xFDF
 20089                           fsr2h	equ	0xFDA
 20090                           fsr2l	equ	0xFD9
 20091                           status	equ	0xFD8
 20092                           
 20093 ;; *************** function _oled_writeData *****************
 20094 ;; Defined at:
 20095 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20096 ;; Parameters:    Size  Location     Type
 20097 ;;  data            1    wreg     unsigned char 
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;  data            1    0[BANK0 ] unsigned char 
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      void 
 20102 ;; Registers used:
 20103 ;;		wreg
 20104 ;; Tracked objects:
 20105 ;;		On entry : 0/0
 20106 ;;		On exit  : 0/0
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20109 ;;      Params:         0       0       0       0       0       0       0       0       0
 20110 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20111 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20112 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20113 ;;Total ram usage:        1 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:   11
 20116 ;; This function calls:
 20117 ;;		Nothing
 20118 ;; This function is called by:
 20119 ;;		_oled_putChar
 20120 ;; This function uses a non-reentrant model
 20121 ;;
 20122                           
 20123                           	psect	text73
 20124  005A82                     __ptext73:
 20125                           	opt stack 0
 20126  005A82                     _oled_writeData:
 20127                           	opt stack 15
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;incstack = 0
 20131                           ;oled_writeData@data stored from wreg
 20132  005A82  0100               	movlb	0	; () banked
 20133  005A84  6F60               	movwf	oled_writeData@data& (0+255),b
 20134                           
 20135                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20136  005A86  988A               	bcf	3978,4,c	;volatile
 20137                           
 20138                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20139  005A88  808B               	bsf	3979,0,c	;volatile
 20140                           
 20141                           ;SSD1306oLED.c: 446: LATD=data;
 20142  005A8A  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 20143                           
 20144                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20145  005A8E  928B               	bcf	3979,1,c	;volatile
 20146                           
 20147                           ;SSD1306oLED.c: 448: __nop();
 20148  005A90  F000               	nop	
 20149                           
 20150                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20151  005A92  828B               	bsf	3979,1,c	;volatile
 20152                           
 20153                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20154  005A94  888A               	bsf	3978,4,c	;volatile
 20155  005A96  0012               	return	
 20156  005A98                     __end_of_oled_writeData:
 20157                           	opt stack 0
 20158                           tblptru	equ	0xFF8
 20159                           tblptrh	equ	0xFF7
 20160                           tblptrl	equ	0xFF6
 20161                           tablat	equ	0xFF5
 20162                           prodh	equ	0xFF4
 20163                           prodl	equ	0xFF3
 20164                           intcon	equ	0xFF2
 20165                           intcon3	equ	0xFF0
 20166                           indf0	equ	0xFEF
 20167                           postinc0	equ	0xFEE
 20168                           fsr0h	equ	0xFEA
 20169                           fsr0l	equ	0xFE9
 20170                           wreg	equ	0xFE8
 20171                           indf1	equ	0xFE7
 20172                           postdec1	equ	0xFE5
 20173                           fsr1h	equ	0xFE2
 20174                           fsr1l	equ	0xFE1
 20175                           indf2	equ	0xFDF
 20176                           fsr2h	equ	0xFDA
 20177                           fsr2l	equ	0xFD9
 20178                           status	equ	0xFD8
 20179                           
 20180 ;; *************** function _Set_Page_Address *****************
 20181 ;; Defined at:
 20182 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20183 ;; Parameters:    Size  Location     Type
 20184 ;;  address         1    wreg     unsigned char 
 20185 ;; Auto vars:     Size  Location     Type
 20186 ;;  address         1    1[BANK0 ] unsigned char 
 20187 ;; Return value:  Size  Location     Type
 20188 ;;                  1    wreg      void 
 20189 ;; Registers used:
 20190 ;;		wreg, status,2, status,0, cstack
 20191 ;; Tracked objects:
 20192 ;;		On entry : 0/0
 20193 ;;		On exit  : 0/0
 20194 ;;		Unchanged: 0/0
 20195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20196 ;;      Params:         0       0       0       0       0       0       0       0       0
 20197 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20199 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20200 ;;Total ram usage:        1 bytes
 20201 ;; Hardware stack levels used:    1
 20202 ;; Hardware stack levels required when called:   12
 20203 ;; This function calls:
 20204 ;;		_oled_writeCommand
 20205 ;; This function is called by:
 20206 ;;		_oled_putChar
 20207 ;; This function uses a non-reentrant model
 20208 ;;
 20209                           
 20210                           	psect	text74
 20211  005B18                     __ptext74:
 20212                           	opt stack 0
 20213  005B18                     _Set_Page_Address:
 20214                           	opt stack 14
 20215                           
 20216                           ;incstack = 0
 20217                           ;Set_Page_Address@address stored from wreg
 20218  005B18  0100               	movlb	0	; () banked
 20219  005B1A  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20220                           
 20221                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20222  005B1C  0100               	movlb	0	; () banked
 20223  005B1E  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20224  005B20  09B0               	iorlw	176
 20225  005B22  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20229  005B24  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20230  005B26  EC4C  F02D         	call	_oled_writeCommand
 20231  005B2A  0012               	return	
 20232  005B2C                     __end_of_Set_Page_Address:
 20233                           	opt stack 0
 20234                           tblptru	equ	0xFF8
 20235                           tblptrh	equ	0xFF7
 20236                           tblptrl	equ	0xFF6
 20237                           tablat	equ	0xFF5
 20238                           prodh	equ	0xFF4
 20239                           prodl	equ	0xFF3
 20240                           intcon	equ	0xFF2
 20241                           intcon3	equ	0xFF0
 20242                           indf0	equ	0xFEF
 20243                           postinc0	equ	0xFEE
 20244                           fsr0h	equ	0xFEA
 20245                           fsr0l	equ	0xFE9
 20246                           wreg	equ	0xFE8
 20247                           indf1	equ	0xFE7
 20248                           postdec1	equ	0xFE5
 20249                           fsr1h	equ	0xFE2
 20250                           fsr1l	equ	0xFE1
 20251                           indf2	equ	0xFDF
 20252                           fsr2h	equ	0xFDA
 20253                           fsr2l	equ	0xFD9
 20254                           status	equ	0xFD8
 20255                           
 20256 ;; *************** function _Set_Column_Address *****************
 20257 ;; Defined at:
 20258 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  address         1    wreg     unsigned char 
 20261 ;; Auto vars:     Size  Location     Type
 20262 ;;  address         1    1[BANK0 ] unsigned char 
 20263 ;; Return value:  Size  Location     Type
 20264 ;;                  1    wreg      void 
 20265 ;; Registers used:
 20266 ;;		wreg, status,2, status,0, cstack
 20267 ;; Tracked objects:
 20268 ;;		On entry : 0/0
 20269 ;;		On exit  : 0/0
 20270 ;;		Unchanged: 0/0
 20271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20272 ;;      Params:         0       0       0       0       0       0       0       0       0
 20273 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20275 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20276 ;;Total ram usage:        1 bytes
 20277 ;; Hardware stack levels used:    1
 20278 ;; Hardware stack levels required when called:   12
 20279 ;; This function calls:
 20280 ;;		_oled_writeCommand
 20281 ;; This function is called by:
 20282 ;;		_oled_putChar
 20283 ;; This function uses a non-reentrant model
 20284 ;;
 20285                           
 20286                           	psect	text75
 20287  005A18                     __ptext75:
 20288                           	opt stack 0
 20289  005A18                     _Set_Column_Address:
 20290                           	opt stack 14
 20291                           
 20292                           ;incstack = 0
 20293                           ;Set_Column_Address@address stored from wreg
 20294  005A18  0100               	movlb	0	; () banked
 20295  005A1A  6F61               	movwf	Set_Column_Address@address& (0+255),b
 20296                           
 20297                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20298  005A1C  0100               	movlb	0	; () banked
 20299  005A1E  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 20300  005A20  0B0F               	andlw	15
 20301  005A22  0910               	iorlw	16
 20302  005A24  EC4C  F02D         	call	_oled_writeCommand
 20303                           
 20304                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20305  005A28  0100               	movlb	0	; () banked
 20306  005A2A  5161               	movf	Set_Column_Address@address& (0+255),w,b
 20307  005A2C  0B0F               	andlw	15
 20308  005A2E  EC4C  F02D         	call	_oled_writeCommand
 20309  005A32  0012               	return	
 20310  005A34                     __end_of_Set_Column_Address:
 20311                           	opt stack 0
 20312                           tblptru	equ	0xFF8
 20313                           tblptrh	equ	0xFF7
 20314                           tblptrl	equ	0xFF6
 20315                           tablat	equ	0xFF5
 20316                           prodh	equ	0xFF4
 20317                           prodl	equ	0xFF3
 20318                           intcon	equ	0xFF2
 20319                           intcon3	equ	0xFF0
 20320                           indf0	equ	0xFEF
 20321                           postinc0	equ	0xFEE
 20322                           fsr0h	equ	0xFEA
 20323                           fsr0l	equ	0xFE9
 20324                           wreg	equ	0xFE8
 20325                           indf1	equ	0xFE7
 20326                           postdec1	equ	0xFE5
 20327                           fsr1h	equ	0xFE2
 20328                           fsr1l	equ	0xFE1
 20329                           indf2	equ	0xFDF
 20330                           fsr2h	equ	0xFDA
 20331                           fsr2l	equ	0xFD9
 20332                           status	equ	0xFD8
 20333                           
 20334 ;; *************** function _oled_writeCommand *****************
 20335 ;; Defined at:
 20336 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;  command         1    wreg     unsigned char 
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;  command         1    0[BANK0 ] unsigned char 
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		wreg
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0
 20351 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20353 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20354 ;;Total ram usage:        1 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; Hardware stack levels required when called:   11
 20357 ;; This function calls:
 20358 ;;		Nothing
 20359 ;; This function is called by:
 20360 ;;		_Set_Page_Address
 20361 ;;		_Set_Column_Address
 20362 ;;		_oled_devInit
 20363 ;;		_oled_setDisplay
 20364 ;;		_oled_displayOff
 20365 ;;		_oled_setContrastControlRegister
 20366 ;;		_oled_initialDispayLine
 20367 ;;		_oled_powerControl
 20368 ;;		_oled_regulorResistorSelect
 20369 ;; This function uses a non-reentrant model
 20370 ;;
 20371                           
 20372                           	psect	text76
 20373  005A98                     __ptext76:
 20374                           	opt stack 0
 20375  005A98                     _oled_writeCommand:
 20376                           	opt stack 14
 20377                           
 20378                           ;incstack = 0
 20379                           ;oled_writeCommand@command stored from wreg
 20380  005A98  0100               	movlb	0	; () banked
 20381  005A9A  6F60               	movwf	oled_writeCommand@command& (0+255),b
 20382                           
 20383                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20384  005A9C  988A               	bcf	3978,4,c	;volatile
 20385                           
 20386                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20387  005A9E  908B               	bcf	3979,0,c	;volatile
 20388                           
 20389                           ;SSD1306oLED.c: 434: LATD=command;
 20390  005AA0  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20391                           
 20392                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20393  005AA4  928B               	bcf	3979,1,c	;volatile
 20394                           
 20395                           ;SSD1306oLED.c: 436: __nop();
 20396  005AA6  F000               	nop	
 20397                           
 20398                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20399  005AA8  828B               	bsf	3979,1,c	;volatile
 20400                           
 20401                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20402  005AAA  888A               	bsf	3978,4,c	;volatile
 20403  005AAC  0012               	return	
 20404  005AAE                     __end_of_oled_writeCommand:
 20405                           	opt stack 0
 20406                           tblptru	equ	0xFF8
 20407                           tblptrh	equ	0xFF7
 20408                           tblptrl	equ	0xFF6
 20409                           tablat	equ	0xFF5
 20410                           prodh	equ	0xFF4
 20411                           prodl	equ	0xFF3
 20412                           intcon	equ	0xFF2
 20413                           intcon3	equ	0xFF0
 20414                           indf0	equ	0xFEF
 20415                           postinc0	equ	0xFEE
 20416                           fsr0h	equ	0xFEA
 20417                           fsr0l	equ	0xFE9
 20418                           wreg	equ	0xFE8
 20419                           indf1	equ	0xFE7
 20420                           postdec1	equ	0xFE5
 20421                           fsr1h	equ	0xFE2
 20422                           fsr1l	equ	0xFE1
 20423                           indf2	equ	0xFDF
 20424                           fsr2h	equ	0xFDA
 20425                           fsr2l	equ	0xFD9
 20426                           status	equ	0xFD8
 20427                           
 20428 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20429 ;; Defined at:
 20430 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;		None
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;		None
 20435 ;; Return value:  Size  Location     Type
 20436 ;;                  1    wreg      void 
 20437 ;; Registers used:
 20438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20439 ;; Tracked objects:
 20440 ;;		On entry : 0/0
 20441 ;;		On exit  : 0/0
 20442 ;;		Unchanged: 0/0
 20443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20444 ;;      Params:         0       0       0       0       0       0       0       0       0
 20445 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20446 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20447 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20448 ;;Total ram usage:        1 bytes
 20449 ;; Hardware stack levels used:    1
 20450 ;; Hardware stack levels required when called:   13
 20451 ;; This function calls:
 20452 ;;		_CDCTxService
 20453 ;;		_EUSART_Read
 20454 ;;		_EUSART_Write
 20455 ;;		_MOTEapp_setResponseReady
 20456 ;;		_USBapp_getrxByteFlag
 20457 ;;		_getsUSBUSART
 20458 ;;		_putUSBUSART
 20459 ;; This function is called by:
 20460 ;;		_USBapp_Handler
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           	psect	text77
 20465  0035BA                     __ptext77:
 20466                           	opt stack 0
 20467  0035BA                     _USBapp_DeviceCdcEmulatorHandler:
 20468                           	opt stack 16
 20469                           
 20470                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20471                           
 20472                           ;incstack = 0
 20473  0035BA  0E1F               	movlw	31
 20474  0035BC  0100               	movlb	0	; () banked
 20475  0035BE  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20476  0035C0  0012               	return	
 20477                           
 20478                           ; BSR set to: 0
 20479  0035C2  B260               	btfsc	3936,1,c	;volatile
 20480  0035C4  0012               	return	
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20484                           
 20485                           ; BSR set to: 0
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;USBapp.c: 166: return;
 20489  0035C6  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20490  0035C8  A4D8               	btfss	status,2,c
 20491  0035CA  D011               	goto	l880
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;USBapp.c: 169: {
 20495                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20496  0035CC  0EA0               	movlw	low _USB_Buffer
 20497  0035CE  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20498  0035D0  0E02               	movlw	high _USB_Buffer
 20499  0035D2  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20500  0035D4  0E40               	movlw	64
 20501  0035D6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20502  0035D8  EC3D  F01F         	call	_getsUSBUSART	;wreg free
 20503  0035DC  0100               	movlb	0	; () banked
 20504  0035DE  6FE6               	movwf	_LastRS232Out& (0+255),b
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20508  0035E0  51E6               	movf	_LastRS232Out& (0+255),w,b
 20509  0035E2  B4D8               	btfsc	status,2,c
 20510  0035E4  D004               	goto	l880
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;USBapp.c: 172: {
 20514                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20515  0035E6  0E01               	movlw	1
 20516  0035E8  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20517                           
 20518                           ;USBapp.c: 174: RS232cp = 0;
 20519  0035EA  0E00               	movlw	0
 20520  0035EC  6FE5               	movwf	_RS232cp& (0+255),b
 20521  0035EE                     l880:
 20522                           
 20523                           ; BSR set to: 0
 20524                           ;USBapp.c: 175: }
 20525                           ;USBapp.c: 176: }
 20526                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20527                           
 20528                           ; BSR set to: 0
 20529  0035EE  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20530  0035F0  A4D8               	btfss	status,2,c
 20531                           
 20532                           ; BSR set to: 0
 20533  0035F2  A2AC               	btfss	4012,1,c	;volatile
 20534  0035F4  D013               	goto	l882
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;USBapp.c: 180: {
 20538                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20539  0035F6  51E5               	movf	_RS232cp& (0+255),w,b
 20540  0035F8  0D01               	mullw	1
 20541  0035FA  0EA0               	movlw	low _USB_Buffer
 20542  0035FC  24F3               	addwf	prodl,w,c
 20543  0035FE  6ED9               	movwf	fsr2l,c
 20544  003600  0E02               	movlw	high _USB_Buffer
 20545  003602  20F4               	addwfc	prodh,w,c
 20546  003604  6EDA               	movwf	fsr2h,c
 20547  003606  50DF               	movf	indf2,w,c
 20548  003608  EC50  F02A         	call	_EUSART_Write
 20549                           
 20550                           ;USBapp.c: 183: ++RS232cp;
 20551  00360C  0100               	movlb	0	; () banked
 20552  00360E  2BE5               	incf	_RS232cp& (0+255),f,b
 20553                           
 20554                           ; BSR set to: 0
 20555                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20556  003610  51E6               	movf	_LastRS232Out& (0+255),w,b
 20557  003612  19E5               	xorwf	_RS232cp& (0+255),w,b
 20558  003614  A4D8               	btfss	status,2,c
 20559  003616  D002               	goto	l882
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20563  003618  0E00               	movlw	0
 20564  00361A  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20565  00361C                     l882:
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;USBapp.c: 186: }
 20569                           ;USBapp.c: 189: if ((eusartRxCount))
 20570                           
 20571                           ; BSR set to: 0
 20572  00361C  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 20573  00361E  B4D8               	btfsc	status,2,c
 20574  003620  D025               	goto	l884
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;USBapp.c: 190: {
 20578                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20579  003622  EC31  F02E         	call	_USBapp_getrxByteFlag	;wreg free
 20580  003626  0900               	iorlw	0
 20581  003628  B4D8               	btfsc	status,2,c
 20582  00362A  D020               	goto	l884
 20583  00362C  0E3F               	movlw	63
 20584  00362E  0100               	movlb	0	; () banked
 20585  003630  61E8               	cpfslt	_NextUSBOut& (0+255),b
 20586  003632  D01C               	goto	l884
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;USBapp.c: 192: {
 20590                           ;USBapp.c: 193: __nop();
 20591  003634  F000               	nop	
 20592                           
 20593                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20594  003636  ECAB  F02A         	call	_EUSART_Read	;wreg free
 20595  00363A  0100               	movlb	0	; () banked
 20596  00363C  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20597  00363E  51E8               	movf	_NextUSBOut& (0+255),w,b
 20598  003640  0D01               	mullw	1
 20599  003642  0EA0               	movlw	low _USB_Buffer
 20600  003644  24F3               	addwf	prodl,w,c
 20601  003646  6ED9               	movwf	fsr2l,c
 20602  003648  0E02               	movlw	high _USB_Buffer
 20603  00364A  20F4               	addwfc	prodh,w,c
 20604  00364C  6EDA               	movwf	fsr2h,c
 20605  00364E  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;USBapp.c: 195: ++NextUSBOut;
 20609  003652  2BE8               	incf	_NextUSBOut& (0+255),f,b
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20613  003654  51E8               	movf	_NextUSBOut& (0+255),w,b
 20614  003656  0D01               	mullw	1
 20615  003658  0EA0               	movlw	low _USB_Buffer
 20616  00365A  24F3               	addwf	prodl,w,c
 20617  00365C  6ED9               	movwf	fsr2l,c
 20618  00365E  0E02               	movlw	high _USB_Buffer
 20619  003660  20F4               	addwfc	prodh,w,c
 20620  003662  6EDA               	movwf	fsr2h,c
 20621  003664  0E00               	movlw	0
 20622  003666  6EDF               	movwf	indf2,c
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;USBapp.c: 197: rxByteFlag = 0;
 20626  003668  0E00               	movlw	0
 20627  00366A  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 20628  00366C                     l884:
 20629                           
 20630                           ;USBapp.c: 198: }
 20631                           ;USBapp.c: 199: }
 20632                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20633                           
 20634                           ; BSR set to: 0
 20635                           
 20636                           ; BSR set to: 0
 20637  00366C  0100               	movlb	0	; () banked
 20638  00366E  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20639  003670  A4D8               	btfss	status,2,c
 20640  003672  D010               	goto	l885
 20641                           
 20642                           ; BSR set to: 0
 20643  003674  51E8               	movf	_NextUSBOut& (0+255),w,b
 20644  003676  B4D8               	btfsc	status,2,c
 20645  003678  D00D               	goto	l885
 20646                           
 20647                           ; BSR set to: 0
 20648                           ;USBapp.c: 204: {
 20649                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20650  00367A  0EA0               	movlw	low _USB_Buffer
 20651  00367C  6F60               	movwf	putUSBUSART@data& (0+255),b
 20652  00367E  0E02               	movlw	high _USB_Buffer
 20653  003680  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20654  003682  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 20655  003686  EC9A  F02C         	call	_putUSBUSART	;wreg free
 20656                           
 20657                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20658  00368A  EC1F  F02E         	call	_MOTEapp_setResponseReady	;wreg free
 20659                           
 20660                           ;USBapp.c: 207: NextUSBOut = 0;
 20661  00368E  0E00               	movlw	0
 20662  003690  0100               	movlb	0	; () banked
 20663  003692  6FE8               	movwf	_NextUSBOut& (0+255),b
 20664  003694                     l885:
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;USBapp.c: 208: }
 20668                           ;USBapp.c: 210: CDCTxService();
 20669                           
 20670                           ; BSR set to: 0
 20671  003694  ECD7  F012         	call	_CDCTxService	;wreg free
 20672  003698  0012               	return		;funcret
 20673  00369A                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20674                           	opt stack 0
 20675                           tblptru	equ	0xFF8
 20676                           tblptrh	equ	0xFF7
 20677                           tblptrl	equ	0xFF6
 20678                           tablat	equ	0xFF5
 20679                           prodh	equ	0xFF4
 20680                           prodl	equ	0xFF3
 20681                           intcon	equ	0xFF2
 20682                           intcon3	equ	0xFF0
 20683                           indf0	equ	0xFEF
 20684                           postinc0	equ	0xFEE
 20685                           fsr0h	equ	0xFEA
 20686                           fsr0l	equ	0xFE9
 20687                           wreg	equ	0xFE8
 20688                           indf1	equ	0xFE7
 20689                           postdec1	equ	0xFE5
 20690                           fsr1h	equ	0xFE2
 20691                           fsr1l	equ	0xFE1
 20692                           indf2	equ	0xFDF
 20693                           fsr2h	equ	0xFDA
 20694                           fsr2l	equ	0xFD9
 20695                           status	equ	0xFD8
 20696                           
 20697 ;; *************** function _putUSBUSART *****************
 20698 ;; Defined at:
 20699 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20700 ;; Parameters:    Size  Location     Type
 20701 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20702 ;;		 -> USB_Buffer(64), 
 20703 ;;  length          1    2[BANK0 ] unsigned char 
 20704 ;; Auto vars:     Size  Location     Type
 20705 ;;		None
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  1    wreg      void 
 20708 ;; Registers used:
 20709 ;;		wreg, status,2, status,0
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20715 ;;      Params:         0       3       0       0       0       0       0       0       0
 20716 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20717 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20718 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20719 ;;Total ram usage:        3 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:   11
 20722 ;; This function calls:
 20723 ;;		Nothing
 20724 ;; This function is called by:
 20725 ;;		_USBapp_DeviceCdcEmulatorHandler
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text78
 20730  005934                     __ptext78:
 20731                           	opt stack 0
 20732  005934                     _putUSBUSART:
 20733                           	opt stack 17
 20734                           
 20735                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20736                           
 20737                           ;incstack = 0
 20738  005934  94A3               	bcf	4003,2,c	;volatile
 20739                           
 20740                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20741  005936  0100               	movlb	0	; () banked
 20742  005938  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20743  00593A  A4D8               	btfss	status,2,c
 20744  00593C  D00C               	goto	l2196
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;usb_device_cdc.c: 530: {
 20748                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20749  00593E  C060  F131         	movff	putUSBUSART@data,_pCDCSrc
 20750  005942  C061  F132         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20751                           
 20752                           ; BSR set to: 0
 20753  005946  C062  F0DC         	movff	putUSBUSART@length,_cdc_tx_len
 20754                           
 20755                           ; BSR set to: 0
 20756  00594A  0E01               	movlw	1
 20757  00594C  0101               	movlb	1	; () banked
 20758  00594E  6F41               	movwf	_cdc_mem_type& (0+255),b
 20759                           
 20760                           ; BSR set to: 1
 20761  005950  0E01               	movlw	1
 20762  005952  0100               	movlb	0	; () banked
 20763  005954  6FEB               	movwf	_cdc_trf_state& (0+255),b
 20764  005956                     l2196:
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;usb_device_cdc.c: 532: }
 20768                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20769                           
 20770                           ; BSR set to: 0
 20771  005956  84A3               	bsf	4003,2,c	;volatile
 20772                           
 20773                           ; BSR set to: 0
 20774  005958  0012               	return		;funcret
 20775  00595A                     __end_of_putUSBUSART:
 20776                           	opt stack 0
 20777                           tblptru	equ	0xFF8
 20778                           tblptrh	equ	0xFF7
 20779                           tblptrl	equ	0xFF6
 20780                           tablat	equ	0xFF5
 20781                           prodh	equ	0xFF4
 20782                           prodl	equ	0xFF3
 20783                           intcon	equ	0xFF2
 20784                           intcon3	equ	0xFF0
 20785                           indf0	equ	0xFEF
 20786                           postinc0	equ	0xFEE
 20787                           fsr0h	equ	0xFEA
 20788                           fsr0l	equ	0xFE9
 20789                           wreg	equ	0xFE8
 20790                           indf1	equ	0xFE7
 20791                           postdec1	equ	0xFE5
 20792                           fsr1h	equ	0xFE2
 20793                           fsr1l	equ	0xFE1
 20794                           indf2	equ	0xFDF
 20795                           fsr2h	equ	0xFDA
 20796                           fsr2l	equ	0xFD9
 20797                           status	equ	0xFD8
 20798                           
 20799 ;; *************** function _getsUSBUSART *****************
 20800 ;; Defined at:
 20801 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20802 ;; Parameters:    Size  Location     Type
 20803 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20804 ;;		 -> USB_Buffer(64), 
 20805 ;;  len             1    9[BANK0 ] unsigned char 
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;		None
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  1    wreg      unsigned char 
 20810 ;; Registers used:
 20811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20817 ;;      Params:         0       3       0       0       0       0       0       0       0
 20818 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20819 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20820 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20821 ;;Total ram usage:        6 bytes
 20822 ;; Hardware stack levels used:    1
 20823 ;; Hardware stack levels required when called:   12
 20824 ;; This function calls:
 20825 ;;		_USBTransferOnePacket
 20826 ;; This function is called by:
 20827 ;;		_USBapp_DeviceCdcEmulatorHandler
 20828 ;; This function uses a non-reentrant model
 20829 ;;
 20830                           
 20831                           	psect	text79
 20832  003E7A                     __ptext79:
 20833                           	opt stack 0
 20834  003E7A                     _getsUSBUSART:
 20835                           	opt stack 16
 20836                           
 20837                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 20838                           
 20839                           ; BSR set to: 0
 20840                           ;incstack = 0
 20841  003E7A  0E00               	movlw	0
 20842  003E7C  0100               	movlb	0	; () banked
 20843  003E7E  6FDD               	movwf	_cdc_rx_len& (0+255),b
 20844                           
 20845                           ; BSR set to: 0
 20846                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20847  003E80  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20848  003E82  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 20849  003E84  B4D8               	btfsc	status,2,c
 20850  003E86  D00F               	goto	l2186
 20851                           
 20852                           ; BSR set to: 0
 20853  003E88  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20854  003E8C  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20855  003E90  AEDF               	btfss	indf2,7,c
 20856  003E92  D003               	goto	u8420
 20857  003E94  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20858  003E96  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20859  003E98  D002               	goto	u8428
 20860  003E9A                     u8420:
 20861  003E9A  0100               	movlb	0	; () banked
 20862  003E9C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20863  003E9E                     u8428:
 20864  003E9E  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20865  003EA0  6F6B               	movwf	_getsUSBUSART$6657& (0+255),b
 20866  003EA2  6B6C               	clrf	(_getsUSBUSART$6657+1)& (0+255),b
 20867  003EA4  D004               	goto	l2188
 20868  003EA6                     l2186:
 20869                           
 20870                           ; BSR set to: 0
 20871                           
 20872                           ; BSR set to: 0
 20873  003EA6  0E00               	movlw	0
 20874  003EA8  6F6C               	movwf	(_getsUSBUSART$6657+1)& (0+255),b
 20875  003EAA  0E00               	movlw	0
 20876  003EAC  6F6B               	movwf	_getsUSBUSART$6657& (0+255),b
 20877  003EAE                     l2188:
 20878                           
 20879                           ; BSR set to: 0
 20880                           
 20881                           ; BSR set to: 0
 20882  003EAE  516B               	movf	_getsUSBUSART$6657& (0+255),w,b
 20883  003EB0  116C               	iorwf	(_getsUSBUSART$6657+1)& (0+255),w,b
 20884  003EB2  A4D8               	btfss	status,2,c
 20885  003EB4  D03B               	goto	l2184
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;usb_device_cdc.c: 437: {
 20889                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20890  003EB6  EE20 F001          	lfsr	2,1
 20891  003EBA  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20892  003EBC  26D9               	addwf	fsr2l,f,c
 20893  003EBE  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20894  003EC0  22DA               	addwfc	fsr2h,f,c
 20895  003EC2  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20896  003EC4  5CDE               	subwf	postinc2,w,c
 20897  003EC6  B0D8               	btfsc	status,0,c
 20898  003EC8  D008               	goto	l2189
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20902  003ECA  EE20 F001          	lfsr	2,1
 20903  003ECE  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20904  003ED0  26D9               	addwf	fsr2l,f,c
 20905  003ED2  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20906  003ED4  22DA               	addwfc	fsr2h,f,c
 20907  003ED6  50DF               	movf	indf2,w,c
 20908  003ED8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20909  003EDA                     l2189:
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20913                           
 20914                           ; BSR set to: 0
 20915  003EDA  0E00               	movlw	0
 20916  003EDC  6FDD               	movwf	_cdc_rx_len& (0+255),b
 20917  003EDE  D013               	goto	l2190
 20918  003EE0                     
 20919                           ; BSR set to: 0
 20920                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20921                           
 20922                           ; BSR set to: 0
 20923  003EE0  51DD               	movf	_cdc_rx_len& (0+255),w,b
 20924  003EE2  0D01               	mullw	1
 20925  003EE4  0E40               	movlw	64
 20926  003EE6  24F3               	addwf	prodl,w,c
 20927  003EE8  6ED9               	movwf	fsr2l,c
 20928  003EEA  0E05               	movlw	5
 20929  003EEC  20F4               	addwfc	prodh,w,c
 20930  003EEE  6EDA               	movwf	fsr2h,c
 20931  003EF0  51DD               	movf	_cdc_rx_len& (0+255),w,b
 20932  003EF2  0D01               	mullw	1
 20933  003EF4  50F3               	movf	prodl,w,c
 20934  003EF6  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20935  003EF8  6EE1               	movwf	fsr1l,c
 20936  003EFA  50F4               	movf	prodh,w,c
 20937  003EFC  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20938  003EFE  6EE2               	movwf	fsr1h,c
 20939  003F00  CFDF FFE7          	movff	indf2,indf1
 20940                           
 20941                           ; BSR set to: 0
 20942  003F04  2BDD               	incf	_cdc_rx_len& (0+255),f,b
 20943  003F06                     l2190:
 20944                           
 20945                           ; BSR set to: 0
 20946                           
 20947                           ; BSR set to: 0
 20948  003F06  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20949  003F08  5DDD               	subwf	_cdc_rx_len& (0+255),w,b
 20950  003F0A  A0D8               	btfss	status,0,c
 20951  003F0C  D7E9               	goto	l2191
 20952                           
 20953                           ; BSR set to: 0
 20954                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20955                           
 20956                           ; BSR set to: 0
 20957  003F0E  0E00               	movlw	0
 20958  003F10  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20959  003F12  0E40               	movlw	64
 20960  003F14  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20961  003F16  0E05               	movlw	5
 20962  003F18  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20963  003F1A  0E40               	movlw	64
 20964  003F1C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20965  003F1E  0E02               	movlw	2
 20966  003F20  EC81  F01E         	call	_USBTransferOnePacket
 20967  003F24  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20968  003F28  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20969  003F2C                     l2184:
 20970                           
 20971                           ;usb_device_cdc.c: 457: }
 20972                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 20973  003F2C  0100               	movlb	0	; () banked
 20974  003F2E  51DD               	movf	_cdc_rx_len& (0+255),w,b
 20975  003F30  0012               	return	
 20976  003F32                     __end_of_getsUSBUSART:
 20977                           	opt stack 0
 20978                           tblptru	equ	0xFF8
 20979                           tblptrh	equ	0xFF7
 20980                           tblptrl	equ	0xFF6
 20981                           tablat	equ	0xFF5
 20982                           prodh	equ	0xFF4
 20983                           prodl	equ	0xFF3
 20984                           intcon	equ	0xFF2
 20985                           intcon3	equ	0xFF0
 20986                           indf0	equ	0xFEF
 20987                           postinc0	equ	0xFEE
 20988                           fsr0h	equ	0xFEA
 20989                           fsr0l	equ	0xFE9
 20990                           wreg	equ	0xFE8
 20991                           indf1	equ	0xFE7
 20992                           postdec1	equ	0xFE5
 20993                           fsr1h	equ	0xFE2
 20994                           fsr1l	equ	0xFE1
 20995                           indf2	equ	0xFDF
 20996                           postinc2	equ	0xFDE
 20997                           fsr2h	equ	0xFDA
 20998                           fsr2l	equ	0xFD9
 20999                           status	equ	0xFD8
 21000                           
 21001 ;; *************** function _USBapp_getrxByteFlag *****************
 21002 ;; Defined at:
 21003 ;;		line 268 in file "../Includes/Board/USBapp.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;		None
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;		None
 21008 ;; Return value:  Size  Location     Type
 21009 ;;                  1    wreg      unsigned char 
 21010 ;; Registers used:
 21011 ;;		wreg, status,2
 21012 ;; Tracked objects:
 21013 ;;		On entry : 0/0
 21014 ;;		On exit  : 0/0
 21015 ;;		Unchanged: 0/0
 21016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21017 ;;      Params:         0       0       0       0       0       0       0       0       0
 21018 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21020 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21021 ;;Total ram usage:        0 bytes
 21022 ;; Hardware stack levels used:    1
 21023 ;; Hardware stack levels required when called:   11
 21024 ;; This function calls:
 21025 ;;		Nothing
 21026 ;; This function is called by:
 21027 ;;		_USBapp_DeviceCdcEmulatorHandler
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text80
 21032  005C62                     __ptext80:
 21033                           	opt stack 0
 21034  005C62                     _USBapp_getrxByteFlag:
 21035                           	opt stack 17
 21036                           
 21037                           ;USBapp.c: 270: return rxByteFlag;
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;incstack = 0
 21041  005C62  0100               	movlb	0	; () banked
 21042  005C64  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 21043  005C66  0012               	return	
 21044  005C68                     __end_of_USBapp_getrxByteFlag:
 21045                           	opt stack 0
 21046                           tblptru	equ	0xFF8
 21047                           tblptrh	equ	0xFF7
 21048                           tblptrl	equ	0xFF6
 21049                           tablat	equ	0xFF5
 21050                           prodh	equ	0xFF4
 21051                           prodl	equ	0xFF3
 21052                           intcon	equ	0xFF2
 21053                           intcon3	equ	0xFF0
 21054                           indf0	equ	0xFEF
 21055                           postinc0	equ	0xFEE
 21056                           fsr0h	equ	0xFEA
 21057                           fsr0l	equ	0xFE9
 21058                           wreg	equ	0xFE8
 21059                           indf1	equ	0xFE7
 21060                           postdec1	equ	0xFE5
 21061                           fsr1h	equ	0xFE2
 21062                           fsr1l	equ	0xFE1
 21063                           indf2	equ	0xFDF
 21064                           postinc2	equ	0xFDE
 21065                           fsr2h	equ	0xFDA
 21066                           fsr2l	equ	0xFD9
 21067                           status	equ	0xFD8
 21068                           
 21069 ;; *************** function _MOTEapp_setResponseReady *****************
 21070 ;; Defined at:
 21071 ;;		line 1103 in file "../Includes/Board/MOTEapp.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;		None
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      void 
 21078 ;; Registers used:
 21079 ;;		wreg, status,2
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0
 21086 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21088 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21089 ;;Total ram usage:        0 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   11
 21092 ;; This function calls:
 21093 ;;		Nothing
 21094 ;; This function is called by:
 21095 ;;		_USBapp_DeviceCdcEmulatorHandler
 21096 ;; This function uses a non-reentrant model
 21097 ;;
 21098                           
 21099                           	psect	text81
 21100  005C3E                     __ptext81:
 21101                           	opt stack 0
 21102  005C3E                     _MOTEapp_setResponseReady:
 21103                           	opt stack 17
 21104                           
 21105                           ;MOTEapp.c: 1105: responseReady = 1;
 21106                           
 21107                           ; BSR set to: 0
 21108                           ;incstack = 0
 21109  005C3E  0E01               	movlw	1
 21110  005C40  0101               	movlb	1	; () banked
 21111  005C42  6F4B               	movwf	_responseReady& (0+255),b
 21112                           
 21113                           ; BSR set to: 1
 21114  005C44  0012               	return		;funcret
 21115  005C46                     __end_of_MOTEapp_setResponseReady:
 21116                           	opt stack 0
 21117                           tblptru	equ	0xFF8
 21118                           tblptrh	equ	0xFF7
 21119                           tblptrl	equ	0xFF6
 21120                           tablat	equ	0xFF5
 21121                           prodh	equ	0xFF4
 21122                           prodl	equ	0xFF3
 21123                           intcon	equ	0xFF2
 21124                           intcon3	equ	0xFF0
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           fsr0h	equ	0xFEA
 21128                           fsr0l	equ	0xFE9
 21129                           wreg	equ	0xFE8
 21130                           indf1	equ	0xFE7
 21131                           postdec1	equ	0xFE5
 21132                           fsr1h	equ	0xFE2
 21133                           fsr1l	equ	0xFE1
 21134                           indf2	equ	0xFDF
 21135                           postinc2	equ	0xFDE
 21136                           fsr2h	equ	0xFDA
 21137                           fsr2l	equ	0xFD9
 21138                           status	equ	0xFD8
 21139                           
 21140 ;; *************** function _EUSART_Write *****************
 21141 ;; Defined at:
 21142 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21143 ;; Parameters:    Size  Location     Type
 21144 ;;  txData          1    wreg     unsigned char 
 21145 ;; Auto vars:     Size  Location     Type
 21146 ;;  txData          1    0[BANK0 ] unsigned char 
 21147 ;; Return value:  Size  Location     Type
 21148 ;;                  1    wreg      void 
 21149 ;; Registers used:
 21150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21151 ;; Tracked objects:
 21152 ;;		On entry : 0/0
 21153 ;;		On exit  : 0/0
 21154 ;;		Unchanged: 0/0
 21155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21156 ;;      Params:         0       0       0       0       0       0       0       0       0
 21157 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21159 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21160 ;;Total ram usage:        1 bytes
 21161 ;; Hardware stack levels used:    1
 21162 ;; Hardware stack levels required when called:   11
 21163 ;; This function calls:
 21164 ;;		Nothing
 21165 ;; This function is called by:
 21166 ;;		_EndLine
 21167 ;;		_sendCommand
 21168 ;;		_sendDataCommand
 21169 ;;		_USBapp_DeviceCdcEmulatorHandler
 21170 ;; This function uses a non-reentrant model
 21171 ;;
 21172                           
 21173                           	psect	text82
 21174  0054A0                     __ptext82:
 21175                           	opt stack 0
 21176  0054A0                     _EUSART_Write:
 21177                           	opt stack 14
 21178                           
 21179                           ; BSR set to: 1
 21180                           ;incstack = 0
 21181                           ;EUSART_Write@txData stored from wreg
 21182  0054A0  0100               	movlb	0	; () banked
 21183  0054A2  6F60               	movwf	EUSART_Write@txData& (0+255),b
 21184  0054A4                     
 21185                           ;eusart.c: 142: {
 21186                           
 21187                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21188  0054A4  0100               	movlb	0	; () banked
 21189  0054A6  51E0               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 21190  0054A8  B4D8               	btfsc	status,2,c
 21191  0054AA  D7FC               	goto	l7908
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;eusart.c: 143: }
 21195                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21196  0054AC  B89D               	btfsc	3997,4,c	;volatile
 21197  0054AE  D003               	goto	l1228
 21198                           
 21199                           ; BSR set to: 0
 21200                           ;eusart.c: 146: {
 21201                           ;eusart.c: 147: TXREG = txData;
 21202  0054B0  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21203                           
 21204                           ;eusart.c: 148: }
 21205  0054B4  D012               	goto	l1229
 21206  0054B6                     l1228:
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;eusart.c: 149: else
 21210                           ;eusart.c: 150: {
 21211                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21212  0054B6  989D               	bcf	3997,4,c	;volatile
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21216  0054B8  51E2               	movf	_eusartTxHead& (0+255),w,b
 21217  0054BA  0D01               	mullw	1
 21218  0054BC  0E40               	movlw	low _eusartTxBuffer
 21219  0054BE  24F3               	addwf	prodl,w,c
 21220  0054C0  6ED9               	movwf	fsr2l,c
 21221  0054C2  0E02               	movlw	high _eusartTxBuffer
 21222  0054C4  20F4               	addwfc	prodh,w,c
 21223  0054C6  6EDA               	movwf	fsr2h,c
 21224  0054C8  C060  FFDF         	movff	EUSART_Write@txData,indf2
 21225                           
 21226                           ; BSR set to: 0
 21227  0054CC  2BE2               	incf	_eusartTxHead& (0+255),f,b
 21228                           
 21229                           ; BSR set to: 0
 21230                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21231  0054CE  0E3F               	movlw	63
 21232  0054D0  65E2               	cpfsgt	_eusartTxHead& (0+255),b
 21233  0054D2  D002               	goto	l1230
 21234                           
 21235                           ; BSR set to: 0
 21236                           ;eusart.c: 154: {
 21237                           ;eusart.c: 155: eusartTxHead = 0;
 21238  0054D4  0E00               	movlw	0
 21239  0054D6  6FE2               	movwf	_eusartTxHead& (0+255),b
 21240  0054D8                     l1230:
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;eusart.c: 156: }
 21244                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21245                           
 21246                           ; BSR set to: 0
 21247  0054D8  07E0               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 21248  0054DA                     l1229:
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;eusart.c: 158: }
 21252                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21253                           
 21254                           ; BSR set to: 0
 21255  0054DA  889D               	bsf	3997,4,c	;volatile
 21256                           
 21257                           ; BSR set to: 0
 21258  0054DC  0012               	return		;funcret
 21259  0054DE                     __end_of_EUSART_Write:
 21260                           	opt stack 0
 21261                           tblptru	equ	0xFF8
 21262                           tblptrh	equ	0xFF7
 21263                           tblptrl	equ	0xFF6
 21264                           tablat	equ	0xFF5
 21265                           prodh	equ	0xFF4
 21266                           prodl	equ	0xFF3
 21267                           intcon	equ	0xFF2
 21268                           intcon3	equ	0xFF0
 21269                           indf0	equ	0xFEF
 21270                           postinc0	equ	0xFEE
 21271                           fsr0h	equ	0xFEA
 21272                           fsr0l	equ	0xFE9
 21273                           wreg	equ	0xFE8
 21274                           indf1	equ	0xFE7
 21275                           postdec1	equ	0xFE5
 21276                           fsr1h	equ	0xFE2
 21277                           fsr1l	equ	0xFE1
 21278                           indf2	equ	0xFDF
 21279                           postinc2	equ	0xFDE
 21280                           fsr2h	equ	0xFDA
 21281                           fsr2l	equ	0xFD9
 21282                           status	equ	0xFD8
 21283                           
 21284 ;; *************** function _EUSART_Read *****************
 21285 ;; Defined at:
 21286 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21287 ;; Parameters:    Size  Location     Type
 21288 ;;		None
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;  readValue       1    0[BANK0 ] unsigned char 
 21291 ;; Return value:  Size  Location     Type
 21292 ;;                  1    wreg      unsigned char 
 21293 ;; Registers used:
 21294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21295 ;; Tracked objects:
 21296 ;;		On entry : 0/0
 21297 ;;		On exit  : 0/0
 21298 ;;		Unchanged: 0/0
 21299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21300 ;;      Params:         0       0       0       0       0       0       0       0       0
 21301 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21302 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21303 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21304 ;;Total ram usage:        1 bytes
 21305 ;; Hardware stack levels used:    1
 21306 ;; Hardware stack levels required when called:   11
 21307 ;; This function calls:
 21308 ;;		Nothing
 21309 ;; This function is called by:
 21310 ;;		_MOTEapp_getModuleResponse
 21311 ;;		_USBapp_DeviceCdcEmulatorHandler
 21312 ;; This function uses a non-reentrant model
 21313 ;;
 21314                           
 21315                           	psect	text83
 21316  005556                     __ptext83:
 21317                           	opt stack 0
 21318  005556                     _EUSART_Read:
 21319                           	opt stack 15
 21320                           
 21321                           ;eusart.c: 119: uint8_t readValue = 0;
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;incstack = 0
 21325  005556  0E00               	movlw	0
 21326  005558  0100               	movlb	0	; () banked
 21327  00555A  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21328                           
 21329                           ;eusart.c: 121: while(0 == eusartRxCount)
 21330  00555C  D001               	goto	l1218
 21331  00555E                     l1219:
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;eusart.c: 122: {
 21335                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21336  00555E  8E89               	bsf	3977,7,c	;volatile
 21337  005560                     l1218:
 21338                           
 21339                           ; BSR set to: 0
 21340                           
 21341                           ; BSR set to: 0
 21342  005560  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 21343  005562  B4D8               	btfsc	status,2,c
 21344  005564  D7FC               	goto	l1219
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;eusart.c: 124: }
 21348                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21349  005566  9A9D               	bcf	3997,5,c	;volatile
 21350                           
 21351                           ; BSR set to: 0
 21352                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21353  005568  51DE               	movf	_eusartRxTail& (0+255),w,b
 21354  00556A  0D01               	mullw	1
 21355  00556C  0E00               	movlw	low _eusartRxBuffer
 21356  00556E  24F3               	addwf	prodl,w,c
 21357  005570  6ED9               	movwf	fsr2l,c
 21358  005572  0E02               	movlw	high _eusartRxBuffer
 21359  005574  20F4               	addwfc	prodh,w,c
 21360  005576  6EDA               	movwf	fsr2h,c
 21361  005578  50DF               	movf	indf2,w,c
 21362  00557A  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21363                           
 21364                           ; BSR set to: 0
 21365  00557C  2BDE               	incf	_eusartRxTail& (0+255),f,b
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21369  00557E  0E3F               	movlw	63
 21370  005580  65DE               	cpfsgt	_eusartRxTail& (0+255),b
 21371  005582  D002               	goto	l1221
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;eusart.c: 130: {
 21375                           ;eusart.c: 131: eusartRxTail = 0;
 21376  005584  0E00               	movlw	0
 21377  005586  6FDE               	movwf	_eusartRxTail& (0+255),b
 21378  005588                     l1221:
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;eusart.c: 132: }
 21382                           ;eusart.c: 133: eusartRxCount--;
 21383                           
 21384                           ; BSR set to: 0
 21385  005588  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 21386                           
 21387                           ; BSR set to: 0
 21388                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21389  00558A  8A9D               	bsf	3997,5,c	;volatile
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;eusart.c: 136: return readValue;
 21393  00558C  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 21394  00558E  0012               	return	
 21395  005590                     __end_of_EUSART_Read:
 21396                           	opt stack 0
 21397                           tblptru	equ	0xFF8
 21398                           tblptrh	equ	0xFF7
 21399                           tblptrl	equ	0xFF6
 21400                           tablat	equ	0xFF5
 21401                           prodh	equ	0xFF4
 21402                           prodl	equ	0xFF3
 21403                           intcon	equ	0xFF2
 21404                           intcon3	equ	0xFF0
 21405                           indf0	equ	0xFEF
 21406                           postinc0	equ	0xFEE
 21407                           fsr0h	equ	0xFEA
 21408                           fsr0l	equ	0xFE9
 21409                           wreg	equ	0xFE8
 21410                           indf1	equ	0xFE7
 21411                           postdec1	equ	0xFE5
 21412                           fsr1h	equ	0xFE2
 21413                           fsr1l	equ	0xFE1
 21414                           indf2	equ	0xFDF
 21415                           postinc2	equ	0xFDE
 21416                           fsr2h	equ	0xFDA
 21417                           fsr2l	equ	0xFD9
 21418                           status	equ	0xFD8
 21419                           
 21420 ;; *************** function _CDCTxService *****************
 21421 ;; Defined at:
 21422 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;		None
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21427 ;;  i               1   10[BANK0 ] unsigned char 
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      void 
 21430 ;; Registers used:
 21431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0
 21438 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21439 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21440 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21441 ;;Total ram usage:        5 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:   12
 21444 ;; This function calls:
 21445 ;;		_USBTransferOnePacket
 21446 ;; This function is called by:
 21447 ;;		_USBapp_DeviceCdcEmulatorHandler
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text84
 21452  0025AE                     __ptext84:
 21453                           	opt stack 0
 21454  0025AE                     _CDCTxService:
 21455                           	opt stack 16
 21456                           
 21457                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21458                           ;usb_device_cdc.c: 786: uint8_t i;
 21459                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;incstack = 0
 21463  0025AE  94A3               	bcf	4003,2,c	;volatile
 21464                           
 21465                           ;usb_device_cdc.c: 790: {};
 21466                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21467  0025B0  0101               	movlb	1	; () banked
 21468  0025B2  5134               	movf	_CDCDataInHandle& (0+255),w,b
 21469  0025B4  1135               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21470  0025B6  B4D8               	btfsc	status,2,c
 21471  0025B8  D010               	goto	l2216
 21472                           
 21473                           ; BSR set to: 1
 21474  0025BA  C134  FFD9         	movff	_CDCDataInHandle,fsr2l
 21475  0025BE  C135  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21476  0025C2  AEDF               	btfss	indf2,7,c
 21477  0025C4  D004               	goto	u8480
 21478  0025C6  0100               	movlb	0	; () banked
 21479  0025C8  6B67               	clrf	??_CDCTxService& (0+255),b
 21480  0025CA  2B67               	incf	??_CDCTxService& (0+255),f,b
 21481  0025CC  D002               	goto	u8488
 21482  0025CE                     u8480:
 21483  0025CE  0100               	movlb	0	; () banked
 21484  0025D0  6B67               	clrf	??_CDCTxService& (0+255),b
 21485  0025D2                     u8488:
 21486  0025D2  5167               	movf	??_CDCTxService& (0+255),w,b
 21487  0025D4  6F68               	movwf	_CDCTxService$6705& (0+255),b
 21488  0025D6  6B69               	clrf	(_CDCTxService$6705+1)& (0+255),b
 21489  0025D8  D005               	goto	l2218
 21490  0025DA                     l2216:
 21491                           
 21492                           ; BSR set to: 0
 21493  0025DA  0E00               	movlw	0
 21494  0025DC  0100               	movlb	0	; () banked
 21495  0025DE  6F69               	movwf	(_CDCTxService$6705+1)& (0+255),b
 21496  0025E0  0E00               	movlw	0
 21497  0025E2  6F68               	movwf	_CDCTxService$6705& (0+255),b
 21498  0025E4                     l2218:
 21499                           
 21500                           ; BSR set to: 0
 21501                           
 21502                           ; BSR set to: 0
 21503  0025E4  5168               	movf	_CDCTxService$6705& (0+255),w,b
 21504  0025E6  1169               	iorwf	(_CDCTxService$6705+1)& (0+255),w,b
 21505  0025E8  B4D8               	btfsc	status,2,c
 21506  0025EA  D002               	goto	l2214
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;usb_device_cdc.c: 793: {
 21510                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21511  0025EC  84A3               	bsf	4003,2,c	;volatile
 21512                           
 21513                           ;usb_device_cdc.c: 795: return;
 21514  0025EE  0012               	return	
 21515  0025F0                     l2214:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;usb_device_cdc.c: 796: }
 21519                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21520                           
 21521                           ; BSR set to: 0
 21522  0025F0  0E03               	movlw	3
 21523  0025F2  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21524  0025F4  A4D8               	btfss	status,2,c
 21525  0025F6  D002               	goto	l2220
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21529  0025F8  0E00               	movlw	0
 21530  0025FA  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21531  0025FC                     l2220:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21535  0025FC  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21536  0025FE  A4D8               	btfss	status,2,c
 21537  002600  D002               	goto	l2221
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;usb_device_cdc.c: 810: {
 21541                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21542  002602  84A3               	bsf	4003,2,c	;volatile
 21543                           
 21544                           ;usb_device_cdc.c: 812: return;
 21545  002604  0012               	return	
 21546  002606                     l2221:
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;usb_device_cdc.c: 813: }
 21550                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21551                           
 21552                           ; BSR set to: 0
 21553  002606  0E02               	movlw	2
 21554  002608  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21555  00260A  A4D8               	btfss	status,2,c
 21556  00260C  D013               	goto	l2222
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;usb_device_cdc.c: 819: {
 21560                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21561  00260E  0E01               	movlw	1
 21562  002610  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21563  002612  0E00               	movlw	0
 21564  002614  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21565  002616  0E00               	movlw	0
 21566  002618  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21567  00261A  0E00               	movlw	0
 21568  00261C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21569  00261E  0E02               	movlw	2
 21570  002620  EC81  F01E         	call	_USBTransferOnePacket
 21571  002624  C060  F134         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21572  002628  C061  F135         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21573                           
 21574                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21575  00262C  0E03               	movlw	3
 21576  00262E  0100               	movlb	0	; () banked
 21577  002630  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21578                           
 21579                           ;usb_device_cdc.c: 823: }
 21580  002632  D05F               	goto	l2224
 21581  002634                     l2222:
 21582                           
 21583                           ; BSR set to: 0
 21584                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21585                           
 21586                           ; BSR set to: 0
 21587  002634  05EB               	decf	_cdc_trf_state& (0+255),w,b
 21588  002636  A4D8               	btfss	status,2,c
 21589  002638  D05C               	goto	l2224
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;usb_device_cdc.c: 825: {
 21593                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21594  00263A  0E40               	movlw	64
 21595  00263C  65DC               	cpfsgt	_cdc_tx_len& (0+255),b
 21596  00263E  D003               	goto	l2225
 21597                           
 21598                           ; BSR set to: 0
 21599                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21600  002640  0E40               	movlw	64
 21601  002642  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21602  002644  D002               	goto	l2226
 21603  002646                     l2225:
 21604                           
 21605                           ; BSR set to: 0
 21606                           ;usb_device_cdc.c: 831: else
 21607                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21608  002646  C0DC  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21609  00264A                     l2226:
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21613                           
 21614                           ; BSR set to: 0
 21615  00264A  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21616  00264C  0800               	sublw	0
 21617  00264E  25DC               	addwf	_cdc_tx_len& (0+255),w,b
 21618  002650  6FDC               	movwf	_cdc_tx_len& (0+255),b
 21619                           
 21620                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21621  002652  0E00               	movlw	0
 21622  002654  0101               	movlb	1	; () banked
 21623  002656  6F2E               	movwf	_pCDCDst& (0+255),b
 21624  002658  0E05               	movlw	5
 21625  00265A  6F2F               	movwf	(_pCDCDst+1)& (0+255),b
 21626                           
 21627                           ; BSR set to: 1
 21628                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21629  00265C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21633  002660  5141               	movf	_cdc_mem_type& (0+255),w,b
 21634  002662  B4D8               	btfsc	status,2,c
 21635  002664  D012               	goto	l2228
 21636  002666  D027               	goto	l2232
 21637  002668                     
 21638                           ;usb_device_cdc.c: 845: {
 21639                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21640                           
 21641                           ; BSR set to: 1
 21642  002668  C131  FFD9         	movff	_pCDCSrc,fsr2l
 21643  00266C  C132  FFDA         	movff	_pCDCSrc+1,fsr2h
 21644  002670  C12E  FFE1         	movff	_pCDCDst,fsr1l
 21645  002674  C12F  FFE2         	movff	_pCDCDst+1,fsr1h
 21646  002678  CFDF FFE7          	movff	indf2,indf1
 21647                           
 21648                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21649  00267C  0101               	movlb	1	; () banked
 21650  00267E  4B2E               	infsnz	_pCDCDst& (0+255),f,b
 21651  002680  2B2F               	incf	(_pCDCDst+1)& (0+255),f,b
 21652                           
 21653                           ; BSR set to: 1
 21654                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21655  002682  4B31               	infsnz	_pCDCSrc& (0+255),f,b
 21656  002684  2B32               	incf	(_pCDCSrc+1)& (0+255),f,b
 21657                           
 21658                           ; BSR set to: 1
 21659                           ;usb_device_cdc.c: 849: i--;
 21660  002686  0100               	movlb	0	; () banked
 21661  002688  076A               	decf	CDCTxService@i& (0+255),f,b
 21662  00268A                     l2228:
 21663                           
 21664                           ; BSR set to: 0
 21665  00268A  0100               	movlb	0	; () banked
 21666  00268C  516A               	movf	CDCTxService@i& (0+255),w,b
 21667  00268E  B4D8               	btfsc	status,2,c
 21668  002690  D016               	goto	u8570
 21669  002692  D7EA               	goto	l2229
 21670  002694                     
 21671                           ; BSR set to: 0
 21672                           ;usb_device_cdc.c: 855: {
 21673                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21674                           
 21675                           ; BSR set to: 0
 21676  002694  C131  FFD9         	movff	_pCDCSrc,fsr2l
 21677  002698  C132  FFDA         	movff	_pCDCSrc+1,fsr2h
 21678  00269C  C12E  FFE1         	movff	_pCDCDst,fsr1l
 21679  0026A0  C12F  FFE2         	movff	_pCDCDst+1,fsr1h
 21680  0026A4  CFDF FFE7          	movff	indf2,indf1
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21684  0026A8  0101               	movlb	1	; () banked
 21685  0026AA  4B2E               	infsnz	_pCDCDst& (0+255),f,b
 21686  0026AC  2B2F               	incf	(_pCDCDst+1)& (0+255),f,b
 21687                           
 21688                           ; BSR set to: 1
 21689                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21690  0026AE  4B31               	infsnz	_pCDCSrc& (0+255),f,b
 21691  0026B0  2B32               	incf	(_pCDCSrc+1)& (0+255),f,b
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;usb_device_cdc.c: 859: i--;
 21695  0026B2  0100               	movlb	0	; () banked
 21696  0026B4  076A               	decf	CDCTxService@i& (0+255),f,b
 21697  0026B6                     l2232:
 21698                           
 21699                           ; BSR set to: 0
 21700  0026B6  0100               	movlb	0	; () banked
 21701  0026B8  516A               	movf	CDCTxService@i& (0+255),w,b
 21702  0026BA  A4D8               	btfss	status,2,c
 21703  0026BC  D7EB               	goto	l2233
 21704  0026BE                     u8570:
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;usb_device_cdc.c: 860: }
 21708                           ;usb_device_cdc.c: 861: }
 21709                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  0026BE  51DC               	movf	_cdc_tx_len& (0+255),w,b
 21715  0026C0  A4D8               	btfss	status,2,c
 21716  0026C2  D008               	goto	l2237
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;usb_device_cdc.c: 868: {
 21720                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21721  0026C4  0E40               	movlw	64
 21722  0026C6  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21723  0026C8  A4D8               	btfss	status,2,c
 21724  0026CA  D002               	goto	l2236
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21728  0026CC  0E02               	movlw	2
 21729  0026CE  D001               	goto	L21
 21730  0026D0                     l2236:
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;usb_device_cdc.c: 871: else
 21734                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21735                           
 21736                           ; BSR set to: 0
 21737  0026D0  0E03               	movlw	3
 21738  0026D2                     L21:
 21739  0026D2  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21740  0026D4                     l2237:
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;usb_device_cdc.c: 873: }
 21744                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21745                           
 21746                           ; BSR set to: 0
 21747                           
 21748                           ; BSR set to: 0
 21749  0026D4  0E01               	movlw	1
 21750  0026D6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21751  0026D8  0E00               	movlw	0
 21752  0026DA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21753  0026DC  0E05               	movlw	5
 21754  0026DE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21755  0026E0  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21756  0026E4  0E02               	movlw	2
 21757  0026E6  EC81  F01E         	call	_USBTransferOnePacket
 21758  0026EA  C060  F134         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21759  0026EE  C061  F135         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21760  0026F2                     l2224:
 21761                           
 21762                           ;usb_device_cdc.c: 876: }
 21763                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 21764  0026F2  84A3               	bsf	4003,2,c	;volatile
 21765  0026F4  0012               	return		;funcret
 21766  0026F6                     __end_of_CDCTxService:
 21767                           	opt stack 0
 21768                           tblptru	equ	0xFF8
 21769                           tblptrh	equ	0xFF7
 21770                           tblptrl	equ	0xFF6
 21771                           tablat	equ	0xFF5
 21772                           prodh	equ	0xFF4
 21773                           prodl	equ	0xFF3
 21774                           intcon	equ	0xFF2
 21775                           intcon3	equ	0xFF0
 21776                           indf0	equ	0xFEF
 21777                           postinc0	equ	0xFEE
 21778                           fsr0h	equ	0xFEA
 21779                           fsr0l	equ	0xFE9
 21780                           wreg	equ	0xFE8
 21781                           indf1	equ	0xFE7
 21782                           postdec1	equ	0xFE5
 21783                           fsr1h	equ	0xFE2
 21784                           fsr1l	equ	0xFE1
 21785                           indf2	equ	0xFDF
 21786                           postinc2	equ	0xFDE
 21787                           fsr2h	equ	0xFDA
 21788                           fsr2l	equ	0xFD9
 21789                           status	equ	0xFD8
 21790                           
 21791 ;; *************** function _USBTransferOnePacket *****************
 21792 ;; Defined at:
 21793 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 21794 ;; Parameters:    Size  Location     Type
 21795 ;;  ep              1    wreg     unsigned char 
 21796 ;;  dir             1    0[BANK0 ] unsigned char 
 21797 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21798 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21799 ;;  len             1    3[BANK0 ] unsigned char 
 21800 ;; Auto vars:     Size  Location     Type
 21801 ;;  ep              1    4[BANK0 ] unsigned char 
 21802 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21803 ;;		 -> BDT(48), NULL(0), 
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  2    0[BANK0 ] PTR void 
 21806 ;; Registers used:
 21807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21808 ;; Tracked objects:
 21809 ;;		On entry : 0/0
 21810 ;;		On exit  : 0/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21813 ;;      Params:         0       4       0       0       0       0       0       0       0
 21814 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21816 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21817 ;;Total ram usage:        7 bytes
 21818 ;; Hardware stack levels used:    1
 21819 ;; Hardware stack levels required when called:   11
 21820 ;; This function calls:
 21821 ;;		Nothing
 21822 ;; This function is called by:
 21823 ;;		_getsUSBUSART
 21824 ;;		_CDCTxService
 21825 ;;		_USBCDCEventHandler
 21826 ;; This function uses a non-reentrant model
 21827 ;;
 21828                           
 21829                           	psect	text85
 21830  003D02                     __ptext85:
 21831                           	opt stack 0
 21832  003D02                     _USBTransferOnePacket:
 21833                           	opt stack 16
 21834                           
 21835                           ;incstack = 0
 21836                           ;USBTransferOnePacket@ep stored from wreg
 21837  003D02  0100               	movlb	0	; () banked
 21838  003D04  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21839                           
 21840                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 21841                           ;usb_device.c: 762: if(dir != 0)
 21842  003D06  0100               	movlb	0	; () banked
 21843  003D08  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21844  003D0A  B4D8               	btfsc	status,2,c
 21845  003D0C  D007               	goto	l1899
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;usb_device.c: 763: {
 21849                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 21850  003D0E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21851  003D10  0D02               	mullw	2
 21852  003D12  0ECA               	movlw	low _pBDTEntryIn
 21853  003D14  24F3               	addwf	prodl,w,c
 21854  003D16  6ED9               	movwf	fsr2l,c
 21855  003D18  0E00               	movlw	high _pBDTEntryIn
 21856  003D1A  D006               	goto	L22
 21857  003D1C                     l1899:
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;usb_device.c: 767: else
 21861                           ;usb_device.c: 768: {
 21862                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 21863                           
 21864                           ; BSR set to: 0
 21865  003D1C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21866  003D1E  0D02               	mullw	2
 21867  003D20  0E20               	movlw	low _pBDTEntryOut
 21868  003D22  24F3               	addwf	prodl,w,c
 21869  003D24  6ED9               	movwf	fsr2l,c
 21870  003D26  0E01               	movlw	high _pBDTEntryOut
 21871  003D28                     L22:
 21872  003D28  20F4               	addwfc	prodh,w,c
 21873  003D2A  6EDA               	movwf	fsr2h,c
 21874  003D2C  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21875  003D30  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21876                           
 21877                           ; BSR set to: 0
 21878                           ;usb_device.c: 771: }
 21879                           ;usb_device.c: 775: if(handle == 0)
 21880                           
 21881                           ; BSR set to: 0
 21882  003D34  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21883  003D36  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21884  003D38  A4D8               	btfss	status,2,c
 21885  003D3A  D005               	goto	l1901
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;usb_device.c: 776: {
 21889                           ;usb_device.c: 777: return 0;
 21890  003D3C  0E00               	movlw	0
 21891  003D3E  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21892  003D40  0E00               	movlw	0
 21893  003D42  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21894                           
 21895                           ; BSR set to: 0
 21896  003D44  0012               	return	
 21897  003D46                     l1901:
 21898                           
 21899                           ; BSR set to: 0
 21900                           ;usb_device.c: 778: }
 21901                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 21902                           
 21903                           ; BSR set to: 0
 21904  003D46  EE20 F002          	lfsr	2,2
 21905  003D4A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21906  003D4C  26D9               	addwf	fsr2l,f,c
 21907  003D4E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21908  003D50  22DA               	addwfc	fsr2h,f,c
 21909  003D52  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21910  003D56  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21911                           
 21912                           ;usb_device.c: 781: handle->CNT = len;
 21913  003D5A  EE20 F001          	lfsr	2,1
 21914  003D5E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21915  003D60  26D9               	addwf	fsr2l,f,c
 21916  003D62  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21917  003D64  22DA               	addwfc	fsr2h,f,c
 21918  003D66  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21919                           
 21920                           ; BSR set to: 0
 21921                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 21922  003D6A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21923  003D6E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21924  003D72  0E40               	movlw	64
 21925  003D74  16DF               	andwf	indf2,f,c
 21926                           
 21927                           ; BSR set to: 0
 21928                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 21929  003D76  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21930  003D7A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21931  003D7E  0E00               	movlw	0
 21932  003D80  86DB               	bsf	plusw2,3,c
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 21936  003D82  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21937  003D86  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21938  003D8A  0E00               	movlw	0
 21939  003D8C  8EDB               	bsf	plusw2,7,c
 21940                           
 21941                           ; BSR set to: 0
 21942                           ;usb_device.c: 787: if(dir != 0)
 21943  003D8E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21944  003D90  B4D8               	btfsc	status,2,c
 21945  003D92  D007               	goto	l1903
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;usb_device.c: 788: {
 21949                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21950  003D94  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21951  003D96  0D02               	mullw	2
 21952  003D98  0ECA               	movlw	low _pBDTEntryIn
 21953  003D9A  24F3               	addwf	prodl,w,c
 21954  003D9C  6ED9               	movwf	fsr2l,c
 21955  003D9E  0E00               	movlw	high _pBDTEntryIn
 21956  003DA0  D006               	goto	L23
 21957  003DA2                     l1903:
 21958                           
 21959                           ; BSR set to: 0
 21960                           ;usb_device.c: 792: else
 21961                           ;usb_device.c: 793: {
 21962                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21963                           
 21964                           ; BSR set to: 0
 21965  003DA2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21966  003DA4  0D02               	mullw	2
 21967  003DA6  0E20               	movlw	low _pBDTEntryOut
 21968  003DA8  24F3               	addwf	prodl,w,c
 21969  003DAA  6ED9               	movwf	fsr2l,c
 21970  003DAC  0E01               	movlw	high _pBDTEntryOut
 21971  003DAE                     L23:
 21972  003DAE  20F4               	addwfc	prodh,w,c
 21973  003DB0  6EDA               	movwf	fsr2h,c
 21974  003DB2  0E04               	movlw	4
 21975  003DB4  1ADF               	xorwf	indf2,f,c
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;usb_device.c: 796: }
 21979                           ;usb_device.c: 797: return (void*)handle;
 21980                           
 21981                           ; BSR set to: 0
 21982  003DB6  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21983  003DBA  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21984  003DBE  0012               	return	
 21985  003DC0                     __end_of_USBTransferOnePacket:
 21986                           	opt stack 0
 21987                           tblptru	equ	0xFF8
 21988                           tblptrh	equ	0xFF7
 21989                           tblptrl	equ	0xFF6
 21990                           tablat	equ	0xFF5
 21991                           prodh	equ	0xFF4
 21992                           prodl	equ	0xFF3
 21993                           intcon	equ	0xFF2
 21994                           intcon3	equ	0xFF0
 21995                           indf0	equ	0xFEF
 21996                           postinc0	equ	0xFEE
 21997                           fsr0h	equ	0xFEA
 21998                           fsr0l	equ	0xFE9
 21999                           wreg	equ	0xFE8
 22000                           indf1	equ	0xFE7
 22001                           postdec1	equ	0xFE5
 22002                           fsr1h	equ	0xFE2
 22003                           fsr1l	equ	0xFE1
 22004                           indf2	equ	0xFDF
 22005                           postinc2	equ	0xFDE
 22006                           postdec2	equ	0xFDD
 22007                           plusw2	equ	0xFDB
 22008                           fsr2h	equ	0xFDA
 22009                           fsr2l	equ	0xFD9
 22010                           status	equ	0xFD8
 22011                           
 22012 ;; *************** function _USBDeviceInit *****************
 22013 ;; Defined at:
 22014 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 22015 ;; Parameters:    Size  Location     Type
 22016 ;;		None
 22017 ;; Auto vars:     Size  Location     Type
 22018 ;;  i               1    8[BANK0 ] unsigned char 
 22019 ;; Return value:  Size  Location     Type
 22020 ;;                  1    wreg      void 
 22021 ;; Registers used:
 22022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22023 ;; Tracked objects:
 22024 ;;		On entry : 0/0
 22025 ;;		On exit  : 0/0
 22026 ;;		Unchanged: 0/0
 22027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22028 ;;      Params:         0       0       0       0       0       0       0       0       0
 22029 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22030 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22031 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22032 ;;Total ram usage:        1 bytes
 22033 ;; Hardware stack levels used:    1
 22034 ;; Hardware stack levels required when called:   12
 22035 ;; This function calls:
 22036 ;;		_memset
 22037 ;; This function is called by:
 22038 ;;		_main
 22039 ;; This function uses a non-reentrant model
 22040 ;;
 22041                           
 22042                           	psect	text86
 22043  002A9A                     __ptext86:
 22044                           	opt stack 0
 22045  002A9A                     _USBDeviceInit:
 22046                           	opt stack 18
 22047                           
 22048                           ;usb_device.c: 239: uint8_t i;
 22049                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 22050                           
 22051                           ; BSR set to: 0
 22052                           ;incstack = 0
 22053  002A9A  94A3               	bcf	4003,2,c	;volatile
 22054                           
 22055                           ;usb_device.c: 244: {UEIR = 0;};
 22056  002A9C  0E00               	movlw	0
 22057  002A9E  6E67               	movwf	3943,c	;volatile
 22058                           
 22059                           ;usb_device.c: 247: {UIR = 0;};
 22060  002AA0  0E00               	movlw	0
 22061  002AA2  6E65               	movwf	3941,c	;volatile
 22062                           
 22063                           ;usb_device.c: 250: UEP0 = 0;
 22064  002AA4  0E00               	movlw	0
 22065  002AA6  6E6A               	movwf	3946,c	;volatile
 22066                           
 22067                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 22068  002AA8  0E6B               	movlw	107
 22069  002AAA  0100               	movlb	0	; () banked
 22070  002AAC  6F60               	movwf	memset@p1& (0+255),b
 22071  002AAE  0E0F               	movlw	15
 22072  002AB0  6F61               	movwf	(memset@p1+1)& (0+255),b
 22073  002AB2  0E00               	movlw	0
 22074  002AB4  6F63               	movwf	(memset@c+1)& (0+255),b
 22075  002AB6  0E00               	movlw	0
 22076  002AB8  6F62               	movwf	memset@c& (0+255),b
 22077  002ABA  0E00               	movlw	0
 22078  002ABC  6F65               	movwf	(memset@n+1)& (0+255),b
 22079  002ABE  0E02               	movlw	2
 22080  002AC0  6F64               	movwf	memset@n& (0+255),b
 22081  002AC2  EC95  F02B         	call	_memset	;wreg free
 22082                           
 22083                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22084  002AC6  0E16               	movlw	22
 22085  002AC8  6E62               	movwf	3938,c	;volatile
 22086  002ACA  0E9F               	movlw	159
 22087  002ACC  6E66               	movwf	3942,c	;volatile
 22088  002ACE  0E7B               	movlw	123
 22089  002AD0  6E64               	movwf	3940,c	;volatile
 22090                           
 22091                           ;usb_device.c: 257: ;
 22092                           ;usb_device.c: 260: ;
 22093                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22094  002AD2  0E00               	movlw	0
 22095  002AD4  0100               	movlb	0	; () banked
 22096  002AD6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22097  002AD8                     l11476:
 22098                           
 22099                           ; BSR set to: 0
 22100  002AD8  0E0B               	movlw	11
 22101  002ADA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22102  002ADC  D001               	goto	l1859
 22103  002ADE  D00E               	goto	u10160
 22104  002AE0                     l1859:
 22105                           
 22106                           ; BSR set to: 0
 22107                           ;usb_device.c: 264: {
 22108                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22109                           
 22110                           ; BSR set to: 0
 22111  002AE0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22112  002AE2  0D04               	mullw	4
 22113  002AE4  0E00               	movlw	0
 22114  002AE6  24F3               	addwf	prodl,w,c
 22115  002AE8  6ED9               	movwf	fsr2l,c
 22116  002AEA  0E04               	movlw	4
 22117  002AEC  20F4               	addwfc	prodh,w,c
 22118  002AEE  6EDA               	movwf	fsr2h,c
 22119  002AF0  6ADE               	clrf	postinc2,c
 22120  002AF2  6ADE               	clrf	postinc2,c
 22121  002AF4  6ADE               	clrf	postinc2,c
 22122  002AF6  6ADD               	clrf	postdec2,c
 22123                           
 22124                           ; BSR set to: 0
 22125  002AF8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22126  002AFA  D7EE               	goto	l11476
 22127  002AFC                     u10160:
 22128                           
 22129                           ; BSR set to: 0
 22130                           ;usb_device.c: 266: }
 22131                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22132  002AFC  8C60               	bsf	3936,6,c	;volatile
 22133                           
 22134                           ; BSR set to: 0
 22135                           ;usb_device.c: 272: UADDR = 0x00;
 22136  002AFE  0E00               	movlw	0
 22137  002B00  6E63               	movwf	3939,c	;volatile
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22141  002B02  9860               	bcf	3936,4,c	;volatile
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22145  002B04  9C60               	bcf	3936,6,c	;volatile
 22146                           
 22147                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22148  002B06  D009               	goto	l1861
 22149  002B08                     
 22150                           ; BSR set to: 0
 22151                           ;usb_device.c: 282: {
 22152                           ;usb_device.c: 283: (UIR &= 0xF7);
 22153                           
 22154                           ; BSR set to: 0
 22155  002B08  9665               	bcf	3941,3,c	;volatile
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22159  002B0A  0E00               	movlw	0
 22160  002B0C  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22164  002B0E  0E00               	movlw	0
 22165  002B10  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22166                           
 22167                           ; BSR set to: 0
 22168                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22169  002B12  0E00               	movlw	0
 22170  002B14  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22171  002B16  0E00               	movlw	0
 22172  002B18  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22173  002B1A                     l1861:
 22174                           
 22175                           ; BSR set to: 0
 22176                           
 22177                           ; BSR set to: 0
 22178  002B1A  B665               	btfsc	3941,3,c	;volatile
 22179  002B1C  D7F5               	goto	l1862
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;usb_device.c: 288: }
 22183                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22184                           
 22185                           ; BSR set to: 0
 22186  002B1E  0E01               	movlw	1
 22187  002B20  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22188                           
 22189                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22190  002B22  0E01               	movlw	1
 22191  002B24  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22192                           
 22193                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22194  002B26  0E00               	movlw	0
 22195  002B28  6E4D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22196                           
 22197                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22198  002B2A  0E00               	movlw	0
 22199  002B2C  6E4C               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22200                           
 22201                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22202  002B2E  0E00               	movlw	0
 22203  002B30  0101               	movlb	1	; () banked
 22204  002B32  6F42               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22205                           
 22206                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22207  002B34  0E00               	movlw	0
 22208  002B36  0100               	movlb	0	; () banked
 22209  002B38  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22210  002B3A                     l11504:
 22211                           
 22212                           ; BSR set to: 0
 22213  002B3A  0E02               	movlw	2
 22214  002B3C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22215  002B3E  D001               	goto	l1864
 22216  002B40  D02E               	goto	u10190
 22217  002B42                     l1864:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;usb_device.c: 302: {
 22221                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22222                           
 22223                           ; BSR set to: 0
 22224  002B42  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22225  002B44  0D02               	mullw	2
 22226  002B46  0ECA               	movlw	low _pBDTEntryIn
 22227  002B48  24F3               	addwf	prodl,w,c
 22228  002B4A  6ED9               	movwf	fsr2l,c
 22229  002B4C  0E00               	movlw	high _pBDTEntryIn
 22230  002B4E  20F4               	addwfc	prodh,w,c
 22231  002B50  6EDA               	movwf	fsr2h,c
 22232  002B52  0E00               	movlw	0
 22233  002B54  6EDE               	movwf	postinc2,c
 22234  002B56  0E00               	movlw	0
 22235  002B58  6EDD               	movwf	postdec2,c
 22236                           
 22237                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22238  002B5A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22239  002B5C  0D02               	mullw	2
 22240  002B5E  0E20               	movlw	low _pBDTEntryOut
 22241  002B60  24F3               	addwf	prodl,w,c
 22242  002B62  6ED9               	movwf	fsr2l,c
 22243  002B64  0E01               	movlw	high _pBDTEntryOut
 22244  002B66  20F4               	addwfc	prodh,w,c
 22245  002B68  6EDA               	movwf	fsr2h,c
 22246  002B6A  0E00               	movlw	0
 22247  002B6C  6EDE               	movwf	postinc2,c
 22248  002B6E  0E00               	movlw	0
 22249  002B70  6EDD               	movwf	postdec2,c
 22250                           
 22251                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22252  002B72  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22253  002B74  0D01               	mullw	1
 22254  002B76  0ED3               	movlw	low _ep_data_in
 22255  002B78  24F3               	addwf	prodl,w,c
 22256  002B7A  6ED9               	movwf	fsr2l,c
 22257  002B7C  0E00               	movlw	high _ep_data_in
 22258  002B7E  20F4               	addwfc	prodh,w,c
 22259  002B80  6EDA               	movwf	fsr2h,c
 22260  002B82  0E00               	movlw	0
 22261  002B84  6EDF               	movwf	indf2,c
 22262                           
 22263                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22264  002B86  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22265  002B88  0D01               	mullw	1
 22266  002B8A  0ED0               	movlw	low _ep_data_out
 22267  002B8C  24F3               	addwf	prodl,w,c
 22268  002B8E  6ED9               	movwf	fsr2l,c
 22269  002B90  0E00               	movlw	high _ep_data_out
 22270  002B92  20F4               	addwfc	prodh,w,c
 22271  002B94  6EDA               	movwf	fsr2h,c
 22272  002B96  0E00               	movlw	0
 22273  002B98  6EDF               	movwf	indf2,c
 22274                           
 22275                           ; BSR set to: 0
 22276  002B9A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22277  002B9C  D7CE               	goto	l11504
 22278  002B9E                     u10190:
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;usb_device.c: 307: }
 22282                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22283                           
 22284                           ; BSR set to: 0
 22285  002B9E  0E08               	movlw	8
 22286  002BA0  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 22287  002BA2  0E04               	movlw	4
 22288  002BA4  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22292  002BA6  0E16               	movlw	22
 22293  002BA8  6E6A               	movwf	3946,c	;volatile
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22297  002BAA  0E04               	movlw	4
 22298  002BAC  0104               	movlb	4	; () banked
 22299  002BAE  6F03               	movwf	3,b	;volatile
 22300  002BB0  0E30               	movlw	48
 22301  002BB2  6F02               	movwf	2,b	;volatile
 22302                           
 22303                           ; BSR set to: 4
 22304                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22305  002BB4  0E08               	movlw	8
 22306  002BB6  6F01               	movwf	1,b	;volatile
 22307                           
 22308                           ; BSR set to: 4
 22309                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22310  002BB8  0E04               	movlw	4
 22311  002BBA  6F00               	movwf	0,b	;volatile
 22312                           
 22313                           ; BSR set to: 4
 22314                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22315  002BBC  8F00               	bsf	0,7,b	;volatile
 22316                           
 22317                           ; BSR set to: 4
 22318                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22319  002BBE  0E00               	movlw	0
 22320  002BC0  6E5B               	movwf	_USBActiveConfiguration,c	;volatile
 22321                           
 22322                           ; BSR set to: 4
 22323                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22324  002BC2  0E00               	movlw	0
 22325  002BC4  0100               	movlb	0	; () banked
 22326  002BC6  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22327                           
 22328                           ; BSR set to: 0
 22329  002BC8  0012               	return		;funcret
 22330  002BCA                     __end_of_USBDeviceInit:
 22331                           	opt stack 0
 22332                           tblptru	equ	0xFF8
 22333                           tblptrh	equ	0xFF7
 22334                           tblptrl	equ	0xFF6
 22335                           tablat	equ	0xFF5
 22336                           prodh	equ	0xFF4
 22337                           prodl	equ	0xFF3
 22338                           intcon	equ	0xFF2
 22339                           intcon3	equ	0xFF0
 22340                           indf0	equ	0xFEF
 22341                           postinc0	equ	0xFEE
 22342                           fsr0h	equ	0xFEA
 22343                           fsr0l	equ	0xFE9
 22344                           wreg	equ	0xFE8
 22345                           indf1	equ	0xFE7
 22346                           postdec1	equ	0xFE5
 22347                           fsr1h	equ	0xFE2
 22348                           fsr1l	equ	0xFE1
 22349                           indf2	equ	0xFDF
 22350                           postinc2	equ	0xFDE
 22351                           postdec2	equ	0xFDD
 22352                           plusw2	equ	0xFDB
 22353                           fsr2h	equ	0xFDA
 22354                           fsr2l	equ	0xFD9
 22355                           status	equ	0xFD8
 22356                           
 22357 ;; *************** function _memset *****************
 22358 ;; Defined at:
 22359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;  p1              2    0[BANK0 ] PTR void 
 22362 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22363 ;;  c               2    2[BANK0 ] int 
 22364 ;;  n               2    4[BANK0 ] unsigned int 
 22365 ;; Auto vars:     Size  Location     Type
 22366 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22367 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22368 ;; Return value:  Size  Location     Type
 22369 ;;                  2    0[BANK0 ] PTR void 
 22370 ;; Registers used:
 22371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22372 ;; Tracked objects:
 22373 ;;		On entry : 0/0
 22374 ;;		On exit  : 0/0
 22375 ;;		Unchanged: 0/0
 22376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22377 ;;      Params:         0       6       0       0       0       0       0       0       0
 22378 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22379 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22380 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22381 ;;Total ram usage:        8 bytes
 22382 ;; Hardware stack levels used:    1
 22383 ;; Hardware stack levels required when called:   11
 22384 ;; This function calls:
 22385 ;;		Nothing
 22386 ;; This function is called by:
 22387 ;;		_USBDeviceInit
 22388 ;; This function uses a non-reentrant model
 22389 ;;
 22390                           
 22391                           	psect	text87
 22392  00572A                     __ptext87:
 22393                           	opt stack 0
 22394  00572A                     _memset:
 22395                           	opt stack 18
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;incstack = 0
 22399  00572A  C060  F066         	movff	memset@p1,memset@p
 22400  00572E  C061  F067         	movff	memset@p1+1,memset@p+1
 22401  005732  D009               	goto	l2685
 22402  005734                     l11298:
 22403  005734  C066  FFD9         	movff	memset@p,fsr2l
 22404  005738  C067  FFDA         	movff	memset@p+1,fsr2h
 22405  00573C  C062  FFDF         	movff	memset@c,indf2
 22406  005740  0100               	movlb	0	; () banked
 22407  005742  4B66               	infsnz	memset@p& (0+255),f,b
 22408  005744  2B67               	incf	(memset@p+1)& (0+255),f,b
 22409  005746                     l2685:
 22410                           
 22411                           ; BSR set to: 0
 22412  005746  0100               	movlb	0	; () banked
 22413  005748  0764               	decf	memset@n& (0+255),f,b
 22414  00574A  A0D8               	btfss	status,0,c
 22415  00574C  0765               	decf	(memset@n+1)& (0+255),f,b
 22416  00574E  2964               	incf	memset@n& (0+255),w,b
 22417  005750  E1F1               	bnz	l11298
 22418  005752  2965               	incf	(memset@n+1)& (0+255),w,b
 22419  005754  B4D8               	btfsc	status,2,c
 22420  005756  0012               	return	
 22421  005758  D7ED               	goto	l2686
 22422  00575A                     __end_of_memset:
 22423                           	opt stack 0
 22424                           tblptru	equ	0xFF8
 22425                           tblptrh	equ	0xFF7
 22426                           tblptrl	equ	0xFF6
 22427                           tablat	equ	0xFF5
 22428                           prodh	equ	0xFF4
 22429                           prodl	equ	0xFF3
 22430                           intcon	equ	0xFF2
 22431                           intcon3	equ	0xFF0
 22432                           indf0	equ	0xFEF
 22433                           postinc0	equ	0xFEE
 22434                           fsr0h	equ	0xFEA
 22435                           fsr0l	equ	0xFE9
 22436                           wreg	equ	0xFE8
 22437                           indf1	equ	0xFE7
 22438                           postdec1	equ	0xFE5
 22439                           fsr1h	equ	0xFE2
 22440                           fsr1l	equ	0xFE1
 22441                           indf2	equ	0xFDF
 22442                           postinc2	equ	0xFDE
 22443                           postdec2	equ	0xFDD
 22444                           plusw2	equ	0xFDB
 22445                           fsr2h	equ	0xFDA
 22446                           fsr2l	equ	0xFD9
 22447                           status	equ	0xFD8
 22448                           
 22449 ;; *************** function _USBDeviceAttach *****************
 22450 ;; Defined at:
 22451 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22452 ;; Parameters:    Size  Location     Type
 22453 ;;		None
 22454 ;; Auto vars:     Size  Location     Type
 22455 ;;		None
 22456 ;; Return value:  Size  Location     Type
 22457 ;;                  1    wreg      void 
 22458 ;; Registers used:
 22459 ;;		wreg, status,2
 22460 ;; Tracked objects:
 22461 ;;		On entry : 0/0
 22462 ;;		On exit  : 0/0
 22463 ;;		Unchanged: 0/0
 22464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22465 ;;      Params:         0       0       0       0       0       0       0       0       0
 22466 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22468 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22469 ;;Total ram usage:        0 bytes
 22470 ;; Hardware stack levels used:    1
 22471 ;; Hardware stack levels required when called:   11
 22472 ;; This function calls:
 22473 ;;		Nothing
 22474 ;; This function is called by:
 22475 ;;		_main
 22476 ;; This function uses a non-reentrant model
 22477 ;;
 22478                           
 22479                           	psect	text88
 22480  005600                     __ptext88:
 22481                           	opt stack 0
 22482  005600                     _USBDeviceAttach:
 22483                           	opt stack 19
 22484                           
 22485                           ;usb_device.c: 1050: {
 22486                           ;usb_device.c: 1051: if(1 == 1)
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;incstack = 0
 22490  005600  0100               	movlb	0	; () banked
 22491  005602  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22492  005604  A4D8               	btfss	status,2,c
 22493  005606  0012               	return	
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;usb_device.c: 1052: {
 22497                           ;usb_device.c: 1054: UCON = 0;
 22498  005608  0E00               	movlw	0
 22499  00560A  6E60               	movwf	3936,c	;volatile
 22500                           
 22501                           ;usb_device.c: 1057: UIE = 0;
 22502  00560C  0E00               	movlw	0
 22503  00560E  6E64               	movwf	3940,c	;volatile
 22504                           
 22505                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22506  005610  0E16               	movlw	22
 22507  005612  6E62               	movwf	3938,c	;volatile
 22508  005614  0E9F               	movlw	159
 22509  005616  6E66               	movwf	3942,c	;volatile
 22510  005618  0E7B               	movlw	123
 22511  00561A  6E64               	movwf	3940,c	;volatile
 22512                           
 22513                           ; BSR set to: 0
 22514                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22515  00561C  8ED0               	bsf	4048,7,c	;volatile
 22516                           
 22517                           ; BSR set to: 0
 22518  00561E  84A5               	bsf	4005,2,c	;volatile
 22519                           
 22520                           ; BSR set to: 0
 22521  005620  84A3               	bsf	4003,2,c	;volatile
 22522                           
 22523                           ; BSR set to: 0
 22524  005622  8EF2               	bsf	intcon,7,c	;volatile
 22525                           
 22526                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22527  005624  D001               	goto	l1921
 22528  005626                     l1922:
 22529  005626  8660               	bsf	3936,3,c	;volatile
 22530  005628                     l1921:
 22531  005628  A660               	btfss	3936,3,c	;volatile
 22532  00562A  D7FD               	goto	l1922
 22533                           
 22534                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22535  00562C  0E01               	movlw	1
 22536  00562E  0100               	movlb	0	; () banked
 22537  005630  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22538                           
 22539                           ; BSR set to: 0
 22540  005632  0012               	return	
 22541  005634                     __end_of_USBDeviceAttach:
 22542                           	opt stack 0
 22543                           tblptru	equ	0xFF8
 22544                           tblptrh	equ	0xFF7
 22545                           tblptrl	equ	0xFF6
 22546                           tablat	equ	0xFF5
 22547                           prodh	equ	0xFF4
 22548                           prodl	equ	0xFF3
 22549                           intcon	equ	0xFF2
 22550                           intcon3	equ	0xFF0
 22551                           indf0	equ	0xFEF
 22552                           postinc0	equ	0xFEE
 22553                           fsr0h	equ	0xFEA
 22554                           fsr0l	equ	0xFE9
 22555                           wreg	equ	0xFE8
 22556                           indf1	equ	0xFE7
 22557                           postdec1	equ	0xFE5
 22558                           fsr1h	equ	0xFE2
 22559                           fsr1l	equ	0xFE1
 22560                           indf2	equ	0xFDF
 22561                           postinc2	equ	0xFDE
 22562                           postdec2	equ	0xFDD
 22563                           plusw2	equ	0xFDB
 22564                           fsr2h	equ	0xFDA
 22565                           fsr2l	equ	0xFD9
 22566                           status	equ	0xFD8
 22567                           
 22568 ;; *************** function _SYSTEM_Initialize *****************
 22569 ;; Defined at:
 22570 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 22571 ;; Parameters:    Size  Location     Type
 22572 ;;		None
 22573 ;; Auto vars:     Size  Location     Type
 22574 ;;		None
 22575 ;; Return value:  Size  Location     Type
 22576 ;;                  1    wreg      void 
 22577 ;; Registers used:
 22578 ;;		wreg, status,2, status,0, cstack
 22579 ;; Tracked objects:
 22580 ;;		On entry : 0/0
 22581 ;;		On exit  : 0/0
 22582 ;;		Unchanged: 0/0
 22583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22584 ;;      Params:         0       0       0       0       0       0       0       0       0
 22585 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22586 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22587 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22588 ;;Total ram usage:        0 bytes
 22589 ;; Hardware stack levels used:    1
 22590 ;; Hardware stack levels required when called:   13
 22591 ;; This function calls:
 22592 ;;		_ADC_Initialize
 22593 ;;		_CMP1_Initialize
 22594 ;;		_EUSART_Initialize
 22595 ;;		_InitSwUart
 22596 ;;		_OSCILLATOR_Initialize
 22597 ;;		_PIN_MANAGER_Initialize
 22598 ;;		_TMR0_Initialize
 22599 ;;		_TMR1_Initialize
 22600 ;;		_TMR2_Initialize
 22601 ;;		_TMR3_Initialize
 22602 ;; This function is called by:
 22603 ;;		_main
 22604 ;; This function uses a non-reentrant model
 22605 ;;
 22606                           
 22607                           	psect	text89
 22608  005844                     __ptext89:
 22609                           	opt stack 0
 22610  005844                     _SYSTEM_Initialize:
 22611                           	opt stack 17
 22612                           
 22613                           ;mcc.c: 96: OSCILLATOR_Initialize();
 22614                           
 22615                           ; BSR set to: 0
 22616                           ;incstack = 0
 22617  005844  EC57  F02D         	call	_OSCILLATOR_Initialize	;wreg free
 22618                           
 22619                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 22620  005848  ECED  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 22621                           
 22622                           ;mcc.c: 99: TMR1_Initialize();
 22623  00584C  EC4C  F02B         	call	_TMR1_Initialize	;wreg free
 22624                           
 22625                           ;mcc.c: 100: TMR2_Initialize();
 22626  005850  EC96  F02D         	call	_TMR2_Initialize	;wreg free
 22627                           
 22628                           ;mcc.c: 101: TMR3_Initialize();
 22629  005854  ECAD  F02C         	call	_TMR3_Initialize	;wreg free
 22630                           
 22631                           ;mcc.c: 102: EUSART_Initialize();
 22632  005858  ECC8  F02A         	call	_EUSART_Initialize	;wreg free
 22633                           
 22634                           ;mcc.c: 103: TMR0_Initialize();
 22635  00585C  ECCE  F02C         	call	_TMR0_Initialize	;wreg free
 22636                           
 22637                           ;mcc.c: 104: ADC_Initialize();
 22638  005860  EC27  F02D         	call	_ADC_Initialize	;wreg free
 22639                           
 22640                           ;mcc.c: 105: CMP1_Initialize();
 22641  005864  ECB4  F02D         	call	_CMP1_Initialize	;wreg free
 22642                           
 22643                           ;mcc.c: 107: InitSwUart();
 22644  005868  ECEE  F02C         	call	_InitSwUart	;wreg free
 22645  00586C  0012               	return		;funcret
 22646  00586E                     __end_of_SYSTEM_Initialize:
 22647                           	opt stack 0
 22648                           tblptru	equ	0xFF8
 22649                           tblptrh	equ	0xFF7
 22650                           tblptrl	equ	0xFF6
 22651                           tablat	equ	0xFF5
 22652                           prodh	equ	0xFF4
 22653                           prodl	equ	0xFF3
 22654                           intcon	equ	0xFF2
 22655                           intcon3	equ	0xFF0
 22656                           indf0	equ	0xFEF
 22657                           postinc0	equ	0xFEE
 22658                           fsr0h	equ	0xFEA
 22659                           fsr0l	equ	0xFE9
 22660                           wreg	equ	0xFE8
 22661                           indf1	equ	0xFE7
 22662                           postdec1	equ	0xFE5
 22663                           fsr1h	equ	0xFE2
 22664                           fsr1l	equ	0xFE1
 22665                           indf2	equ	0xFDF
 22666                           postinc2	equ	0xFDE
 22667                           postdec2	equ	0xFDD
 22668                           plusw2	equ	0xFDB
 22669                           fsr2h	equ	0xFDA
 22670                           fsr2l	equ	0xFD9
 22671                           status	equ	0xFD8
 22672                           
 22673 ;; *************** function _TMR3_Initialize *****************
 22674 ;; Defined at:
 22675 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22676 ;; Parameters:    Size  Location     Type
 22677 ;;		None
 22678 ;; Auto vars:     Size  Location     Type
 22679 ;;		None
 22680 ;; Return value:  Size  Location     Type
 22681 ;;                  1    wreg      void 
 22682 ;; Registers used:
 22683 ;;		wreg, status,2, cstack
 22684 ;; Tracked objects:
 22685 ;;		On entry : 0/0
 22686 ;;		On exit  : 0/0
 22687 ;;		Unchanged: 0/0
 22688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22689 ;;      Params:         0       0       0       0       0       0       0       0       0
 22690 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22692 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22693 ;;Total ram usage:        0 bytes
 22694 ;; Hardware stack levels used:    1
 22695 ;; Hardware stack levels required when called:   12
 22696 ;; This function calls:
 22697 ;;		_TMR3_StartTimer
 22698 ;; This function is called by:
 22699 ;;		_SYSTEM_Initialize
 22700 ;; This function uses a non-reentrant model
 22701 ;;
 22702                           
 22703                           	psect	text90
 22704  00595A                     __ptext90:
 22705                           	opt stack 0
 22706  00595A                     _TMR3_Initialize:
 22707                           	opt stack 17
 22708                           
 22709                           ;tmr3.c: 72: T3CON = 0x04;
 22710                           
 22711                           ;incstack = 0
 22712  00595A  0E04               	movlw	4
 22713  00595C  6EB1               	movwf	4017,c	;volatile
 22714                           
 22715                           ;tmr3.c: 75: T3GCON = 0x00;
 22716  00595E  0E00               	movlw	0
 22717  005960  6EB4               	movwf	4020,c	;volatile
 22718                           
 22719                           ;tmr3.c: 78: TMR3H = 0xD5;
 22720  005962  0ED5               	movlw	213
 22721  005964  6EB3               	movwf	4019,c	;volatile
 22722                           
 22723                           ;tmr3.c: 81: TMR3L = 0xD0;
 22724  005966  0ED0               	movlw	208
 22725  005968  6EB2               	movwf	4018,c	;volatile
 22726                           
 22727                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22728  00596A  CFB2 F046          	movff	4018,_timer3ReloadVal	;volatile
 22729  00596E  CFB3 F047          	movff	4019,_timer3ReloadVal+1	;volatile
 22730                           
 22731                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22732  005972  92A1               	bcf	4001,1,c	;volatile
 22733                           
 22734                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22735  005974  82A0               	bsf	4000,1,c	;volatile
 22736                           
 22737                           ;tmr3.c: 93: TMR3_StartTimer();
 22738  005976  EC3A  F02E         	call	_TMR3_StartTimer	;wreg free
 22739  00597A  0012               	return		;funcret
 22740  00597C                     __end_of_TMR3_Initialize:
 22741                           	opt stack 0
 22742                           tblptru	equ	0xFF8
 22743                           tblptrh	equ	0xFF7
 22744                           tblptrl	equ	0xFF6
 22745                           tablat	equ	0xFF5
 22746                           prodh	equ	0xFF4
 22747                           prodl	equ	0xFF3
 22748                           intcon	equ	0xFF2
 22749                           intcon3	equ	0xFF0
 22750                           indf0	equ	0xFEF
 22751                           postinc0	equ	0xFEE
 22752                           fsr0h	equ	0xFEA
 22753                           fsr0l	equ	0xFE9
 22754                           wreg	equ	0xFE8
 22755                           indf1	equ	0xFE7
 22756                           postdec1	equ	0xFE5
 22757                           fsr1h	equ	0xFE2
 22758                           fsr1l	equ	0xFE1
 22759                           indf2	equ	0xFDF
 22760                           postinc2	equ	0xFDE
 22761                           postdec2	equ	0xFDD
 22762                           plusw2	equ	0xFDB
 22763                           fsr2h	equ	0xFDA
 22764                           fsr2l	equ	0xFD9
 22765                           status	equ	0xFD8
 22766                           
 22767 ;; *************** function _TMR3_StartTimer *****************
 22768 ;; Defined at:
 22769 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22770 ;; Parameters:    Size  Location     Type
 22771 ;;		None
 22772 ;; Auto vars:     Size  Location     Type
 22773 ;;		None
 22774 ;; Return value:  Size  Location     Type
 22775 ;;                  1    wreg      void 
 22776 ;; Registers used:
 22777 ;;		None
 22778 ;; Tracked objects:
 22779 ;;		On entry : 0/0
 22780 ;;		On exit  : 0/0
 22781 ;;		Unchanged: 0/0
 22782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22783 ;;      Params:         0       0       0       0       0       0       0       0       0
 22784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22786 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22787 ;;Total ram usage:        0 bytes
 22788 ;; Hardware stack levels used:    1
 22789 ;; Hardware stack levels required when called:   11
 22790 ;; This function calls:
 22791 ;;		Nothing
 22792 ;; This function is called by:
 22793 ;;		_TMR3_Initialize
 22794 ;; This function uses a non-reentrant model
 22795 ;;
 22796                           
 22797                           	psect	text91
 22798  005C74                     __ptext91:
 22799                           	opt stack 0
 22800  005C74                     _TMR3_StartTimer:
 22801                           	opt stack 17
 22802                           
 22803                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22804                           
 22805                           ;incstack = 0
 22806  005C74  80B1               	bsf	4017,0,c	;volatile
 22807  005C76  0012               	return		;funcret
 22808  005C78                     __end_of_TMR3_StartTimer:
 22809                           	opt stack 0
 22810                           tblptru	equ	0xFF8
 22811                           tblptrh	equ	0xFF7
 22812                           tblptrl	equ	0xFF6
 22813                           tablat	equ	0xFF5
 22814                           prodh	equ	0xFF4
 22815                           prodl	equ	0xFF3
 22816                           intcon	equ	0xFF2
 22817                           intcon3	equ	0xFF0
 22818                           indf0	equ	0xFEF
 22819                           postinc0	equ	0xFEE
 22820                           fsr0h	equ	0xFEA
 22821                           fsr0l	equ	0xFE9
 22822                           wreg	equ	0xFE8
 22823                           indf1	equ	0xFE7
 22824                           postdec1	equ	0xFE5
 22825                           fsr1h	equ	0xFE2
 22826                           fsr1l	equ	0xFE1
 22827                           indf2	equ	0xFDF
 22828                           postinc2	equ	0xFDE
 22829                           postdec2	equ	0xFDD
 22830                           plusw2	equ	0xFDB
 22831                           fsr2h	equ	0xFDA
 22832                           fsr2l	equ	0xFD9
 22833                           status	equ	0xFD8
 22834                           
 22835 ;; *************** function _TMR2_Initialize *****************
 22836 ;; Defined at:
 22837 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22838 ;; Parameters:    Size  Location     Type
 22839 ;;		None
 22840 ;; Auto vars:     Size  Location     Type
 22841 ;;		None
 22842 ;; Return value:  Size  Location     Type
 22843 ;;                  1    wreg      void 
 22844 ;; Registers used:
 22845 ;;		wreg, status,2, cstack
 22846 ;; Tracked objects:
 22847 ;;		On entry : 0/0
 22848 ;;		On exit  : 0/0
 22849 ;;		Unchanged: 0/0
 22850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22851 ;;      Params:         0       0       0       0       0       0       0       0       0
 22852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22855 ;;Total ram usage:        0 bytes
 22856 ;; Hardware stack levels used:    1
 22857 ;; Hardware stack levels required when called:   12
 22858 ;; This function calls:
 22859 ;;		_TMR2_StartTimer
 22860 ;; This function is called by:
 22861 ;;		_SYSTEM_Initialize
 22862 ;; This function uses a non-reentrant model
 22863 ;;
 22864                           
 22865                           	psect	text92
 22866  005B2C                     __ptext92:
 22867                           	opt stack 0
 22868  005B2C                     _TMR2_Initialize:
 22869                           	opt stack 17
 22870                           
 22871                           ;tmr2.c: 62: T2CON = 0x7A;
 22872                           
 22873                           ;incstack = 0
 22874  005B2C  0E7A               	movlw	122
 22875  005B2E  6EBA               	movwf	4026,c	;volatile
 22876                           
 22877                           ;tmr2.c: 65: PR2 = 0x9B;
 22878  005B30  0E9B               	movlw	155
 22879  005B32  6EBB               	movwf	4027,c	;volatile
 22880                           
 22881                           ;tmr2.c: 68: TMR2 = 0x00;
 22882  005B34  0E00               	movlw	0
 22883  005B36  6EBC               	movwf	4028,c	;volatile
 22884                           
 22885                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22886  005B38  929E               	bcf	3998,1,c	;volatile
 22887                           
 22888                           ;tmr2.c: 74: TMR2_StartTimer();
 22889  005B3A  EC3C  F02E         	call	_TMR2_StartTimer	;wreg free
 22890  005B3E  0012               	return		;funcret
 22891  005B40                     __end_of_TMR2_Initialize:
 22892                           	opt stack 0
 22893                           tblptru	equ	0xFF8
 22894                           tblptrh	equ	0xFF7
 22895                           tblptrl	equ	0xFF6
 22896                           tablat	equ	0xFF5
 22897                           prodh	equ	0xFF4
 22898                           prodl	equ	0xFF3
 22899                           intcon	equ	0xFF2
 22900                           intcon3	equ	0xFF0
 22901                           indf0	equ	0xFEF
 22902                           postinc0	equ	0xFEE
 22903                           fsr0h	equ	0xFEA
 22904                           fsr0l	equ	0xFE9
 22905                           wreg	equ	0xFE8
 22906                           indf1	equ	0xFE7
 22907                           postdec1	equ	0xFE5
 22908                           fsr1h	equ	0xFE2
 22909                           fsr1l	equ	0xFE1
 22910                           indf2	equ	0xFDF
 22911                           postinc2	equ	0xFDE
 22912                           postdec2	equ	0xFDD
 22913                           plusw2	equ	0xFDB
 22914                           fsr2h	equ	0xFDA
 22915                           fsr2l	equ	0xFD9
 22916                           status	equ	0xFD8
 22917                           
 22918 ;; *************** function _TMR2_StartTimer *****************
 22919 ;; Defined at:
 22920 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22921 ;; Parameters:    Size  Location     Type
 22922 ;;		None
 22923 ;; Auto vars:     Size  Location     Type
 22924 ;;		None
 22925 ;; Return value:  Size  Location     Type
 22926 ;;                  1    wreg      void 
 22927 ;; Registers used:
 22928 ;;		None
 22929 ;; Tracked objects:
 22930 ;;		On entry : 0/0
 22931 ;;		On exit  : 0/0
 22932 ;;		Unchanged: 0/0
 22933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22934 ;;      Params:         0       0       0       0       0       0       0       0       0
 22935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22938 ;;Total ram usage:        0 bytes
 22939 ;; Hardware stack levels used:    1
 22940 ;; Hardware stack levels required when called:   11
 22941 ;; This function calls:
 22942 ;;		Nothing
 22943 ;; This function is called by:
 22944 ;;		_TMR2_Initialize
 22945 ;; This function uses a non-reentrant model
 22946 ;;
 22947                           
 22948                           	psect	text93
 22949  005C78                     __ptext93:
 22950                           	opt stack 0
 22951  005C78                     _TMR2_StartTimer:
 22952                           	opt stack 17
 22953                           
 22954                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22955                           
 22956                           ;incstack = 0
 22957  005C78  84BA               	bsf	4026,2,c	;volatile
 22958  005C7A  0012               	return		;funcret
 22959  005C7C                     __end_of_TMR2_StartTimer:
 22960                           	opt stack 0
 22961                           tblptru	equ	0xFF8
 22962                           tblptrh	equ	0xFF7
 22963                           tblptrl	equ	0xFF6
 22964                           tablat	equ	0xFF5
 22965                           prodh	equ	0xFF4
 22966                           prodl	equ	0xFF3
 22967                           intcon	equ	0xFF2
 22968                           intcon3	equ	0xFF0
 22969                           indf0	equ	0xFEF
 22970                           postinc0	equ	0xFEE
 22971                           fsr0h	equ	0xFEA
 22972                           fsr0l	equ	0xFE9
 22973                           wreg	equ	0xFE8
 22974                           indf1	equ	0xFE7
 22975                           postdec1	equ	0xFE5
 22976                           fsr1h	equ	0xFE2
 22977                           fsr1l	equ	0xFE1
 22978                           indf2	equ	0xFDF
 22979                           postinc2	equ	0xFDE
 22980                           postdec2	equ	0xFDD
 22981                           plusw2	equ	0xFDB
 22982                           fsr2h	equ	0xFDA
 22983                           fsr2l	equ	0xFD9
 22984                           status	equ	0xFD8
 22985                           
 22986 ;; *************** function _TMR1_Initialize *****************
 22987 ;; Defined at:
 22988 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22989 ;; Parameters:    Size  Location     Type
 22990 ;;		None
 22991 ;; Auto vars:     Size  Location     Type
 22992 ;;		None
 22993 ;; Return value:  Size  Location     Type
 22994 ;;                  1    wreg      void 
 22995 ;; Registers used:
 22996 ;;		wreg, status,2, status,0, cstack
 22997 ;; Tracked objects:
 22998 ;;		On entry : 0/0
 22999 ;;		On exit  : 0/0
 23000 ;;		Unchanged: 0/0
 23001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23002 ;;      Params:         0       0       0       0       0       0       0       0       0
 23003 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23004 ;;      Temps:          0       2       0       0       0       0       0       0       0
 23005 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23006 ;;Total ram usage:        2 bytes
 23007 ;; Hardware stack levels used:    1
 23008 ;; Hardware stack levels required when called:   12
 23009 ;; This function calls:
 23010 ;;		_TMR1_StartTimer
 23011 ;; This function is called by:
 23012 ;;		_SYSTEM_Initialize
 23013 ;; This function uses a non-reentrant model
 23014 ;;
 23015                           
 23016                           	psect	text94
 23017  005698                     __ptext94:
 23018                           	opt stack 0
 23019  005698                     _TMR1_Initialize:
 23020                           	opt stack 17
 23021                           
 23022                           ;tmr1.c: 68: T1CON = 0x00;
 23023                           
 23024                           ;incstack = 0
 23025  005698  0E00               	movlw	0
 23026  00569A  6ECD               	movwf	4045,c	;volatile
 23027                           
 23028                           ;tmr1.c: 71: T1GCON = 0x00;
 23029  00569C  0E00               	movlw	0
 23030  00569E  6ECC               	movwf	4044,c	;volatile
 23031                           
 23032                           ;tmr1.c: 74: TMR1H = 0xD0;
 23033  0056A0  0ED0               	movlw	208
 23034  0056A2  6ECF               	movwf	4047,c	;volatile
 23035                           
 23036                           ;tmr1.c: 77: TMR1L = 0x20;
 23037  0056A4  0E20               	movlw	32
 23038  0056A6  6ECE               	movwf	4046,c	;volatile
 23039                           
 23040                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 23041  0056A8  50CE               	movf	4046,w,c	;volatile
 23042  0056AA  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 23043  0056AE  0100               	movlb	0	; () banked
 23044  0056B0  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 23045  0056B2  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23046  0056B6  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 23047  0056B8  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 23048  0056BA  6E48               	movwf	_timer1ReloadVal,c	;volatile
 23049  0056BC  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 23050  0056BE  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 23054  0056C0  909E               	bcf	3998,0,c	;volatile
 23055                           
 23056                           ; BSR set to: 0
 23057                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 23058  0056C2  809D               	bsf	3997,0,c	;volatile
 23059                           
 23060                           ; BSR set to: 0
 23061                           ;tmr1.c: 89: TMR1_StartTimer();
 23062  0056C4  EC3E  F02E         	call	_TMR1_StartTimer	;wreg free
 23063  0056C8  0012               	return		;funcret
 23064  0056CA                     __end_of_TMR1_Initialize:
 23065                           	opt stack 0
 23066                           tblptru	equ	0xFF8
 23067                           tblptrh	equ	0xFF7
 23068                           tblptrl	equ	0xFF6
 23069                           tablat	equ	0xFF5
 23070                           prodh	equ	0xFF4
 23071                           prodl	equ	0xFF3
 23072                           intcon	equ	0xFF2
 23073                           intcon3	equ	0xFF0
 23074                           indf0	equ	0xFEF
 23075                           postinc0	equ	0xFEE
 23076                           fsr0h	equ	0xFEA
 23077                           fsr0l	equ	0xFE9
 23078                           wreg	equ	0xFE8
 23079                           indf1	equ	0xFE7
 23080                           postdec1	equ	0xFE5
 23081                           fsr1h	equ	0xFE2
 23082                           fsr1l	equ	0xFE1
 23083                           indf2	equ	0xFDF
 23084                           postinc2	equ	0xFDE
 23085                           postdec2	equ	0xFDD
 23086                           plusw2	equ	0xFDB
 23087                           fsr2h	equ	0xFDA
 23088                           fsr2l	equ	0xFD9
 23089                           status	equ	0xFD8
 23090                           
 23091 ;; *************** function _TMR1_StartTimer *****************
 23092 ;; Defined at:
 23093 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23094 ;; Parameters:    Size  Location     Type
 23095 ;;		None
 23096 ;; Auto vars:     Size  Location     Type
 23097 ;;		None
 23098 ;; Return value:  Size  Location     Type
 23099 ;;                  1    wreg      void 
 23100 ;; Registers used:
 23101 ;;		None
 23102 ;; Tracked objects:
 23103 ;;		On entry : 0/0
 23104 ;;		On exit  : 0/0
 23105 ;;		Unchanged: 0/0
 23106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23107 ;;      Params:         0       0       0       0       0       0       0       0       0
 23108 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23110 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23111 ;;Total ram usage:        0 bytes
 23112 ;; Hardware stack levels used:    1
 23113 ;; Hardware stack levels required when called:   11
 23114 ;; This function calls:
 23115 ;;		Nothing
 23116 ;; This function is called by:
 23117 ;;		_TMR1_Initialize
 23118 ;; This function uses a non-reentrant model
 23119 ;;
 23120                           
 23121                           	psect	text95
 23122  005C7C                     __ptext95:
 23123                           	opt stack 0
 23124  005C7C                     _TMR1_StartTimer:
 23125                           	opt stack 17
 23126                           
 23127                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23128                           
 23129                           ;incstack = 0
 23130  005C7C  80CD               	bsf	4045,0,c	;volatile
 23131  005C7E  0012               	return		;funcret
 23132  005C80                     __end_of_TMR1_StartTimer:
 23133                           	opt stack 0
 23134                           tblptru	equ	0xFF8
 23135                           tblptrh	equ	0xFF7
 23136                           tblptrl	equ	0xFF6
 23137                           tablat	equ	0xFF5
 23138                           prodh	equ	0xFF4
 23139                           prodl	equ	0xFF3
 23140                           intcon	equ	0xFF2
 23141                           intcon3	equ	0xFF0
 23142                           indf0	equ	0xFEF
 23143                           postinc0	equ	0xFEE
 23144                           fsr0h	equ	0xFEA
 23145                           fsr0l	equ	0xFE9
 23146                           wreg	equ	0xFE8
 23147                           indf1	equ	0xFE7
 23148                           postdec1	equ	0xFE5
 23149                           fsr1h	equ	0xFE2
 23150                           fsr1l	equ	0xFE1
 23151                           indf2	equ	0xFDF
 23152                           postinc2	equ	0xFDE
 23153                           postdec2	equ	0xFDD
 23154                           plusw2	equ	0xFDB
 23155                           fsr2h	equ	0xFDA
 23156                           fsr2l	equ	0xFD9
 23157                           status	equ	0xFD8
 23158                           
 23159 ;; *************** function _TMR0_Initialize *****************
 23160 ;; Defined at:
 23161 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 23162 ;; Parameters:    Size  Location     Type
 23163 ;;		None
 23164 ;; Auto vars:     Size  Location     Type
 23165 ;;		None
 23166 ;; Return value:  Size  Location     Type
 23167 ;;                  1    wreg      void 
 23168 ;; Registers used:
 23169 ;;		wreg, status,2, cstack
 23170 ;; Tracked objects:
 23171 ;;		On entry : 0/0
 23172 ;;		On exit  : 0/0
 23173 ;;		Unchanged: 0/0
 23174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23175 ;;      Params:         0       0       0       0       0       0       0       0       0
 23176 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23178 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23179 ;;Total ram usage:        0 bytes
 23180 ;; Hardware stack levels used:    1
 23181 ;; Hardware stack levels required when called:   12
 23182 ;; This function calls:
 23183 ;;		_TMR0_StartTimer
 23184 ;; This function is called by:
 23185 ;;		_SYSTEM_Initialize
 23186 ;; This function uses a non-reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text96
 23190  00599C                     __ptext96:
 23191                           	opt stack 0
 23192  00599C                     _TMR0_Initialize:
 23193                           	opt stack 17
 23194                           
 23195                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 23196                           
 23197                           ;incstack = 0
 23198  00599C  9AD5               	bcf	4053,5,c	;volatile
 23199                           
 23200                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 23201  00599E  98D5               	bcf	4053,4,c	;volatile
 23202                           
 23203                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 23204  0059A0  96D5               	bcf	4053,3,c	;volatile
 23205                           
 23206                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 23207  0059A2  94D5               	bcf	4053,2,c	;volatile
 23208                           
 23209                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 23210  0059A4  82D5               	bsf	4053,1,c	;volatile
 23211                           
 23212                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 23213  0059A6  90D5               	bcf	4053,0,c	;volatile
 23214                           
 23215                           ;tmr0.c: 77: timer0ReloadVal=110;
 23216  0059A8  0E00               	movlw	0
 23217  0059AA  0101               	movlb	1	; () banked
 23218  0059AC  6F39               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 23219  0059AE  0E6E               	movlw	110
 23220  0059B0  6F38               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 23221                           
 23222                           ; BSR set to: 1
 23223                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 23224  0059B2  94F2               	bcf	intcon,2,c	;volatile
 23225                           
 23226                           ; BSR set to: 1
 23227                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 23228  0059B4  8AF2               	bsf	intcon,5,c	;volatile
 23229                           
 23230                           ; BSR set to: 1
 23231                           ;tmr0.c: 86: TMR0_StartTimer();
 23232  0059B6  EC40  F02E         	call	_TMR0_StartTimer	;wreg free
 23233  0059BA  0012               	return		;funcret
 23234  0059BC                     __end_of_TMR0_Initialize:
 23235                           	opt stack 0
 23236                           tblptru	equ	0xFF8
 23237                           tblptrh	equ	0xFF7
 23238                           tblptrl	equ	0xFF6
 23239                           tablat	equ	0xFF5
 23240                           prodh	equ	0xFF4
 23241                           prodl	equ	0xFF3
 23242                           intcon	equ	0xFF2
 23243                           intcon3	equ	0xFF0
 23244                           indf0	equ	0xFEF
 23245                           postinc0	equ	0xFEE
 23246                           fsr0h	equ	0xFEA
 23247                           fsr0l	equ	0xFE9
 23248                           wreg	equ	0xFE8
 23249                           indf1	equ	0xFE7
 23250                           postdec1	equ	0xFE5
 23251                           fsr1h	equ	0xFE2
 23252                           fsr1l	equ	0xFE1
 23253                           indf2	equ	0xFDF
 23254                           postinc2	equ	0xFDE
 23255                           postdec2	equ	0xFDD
 23256                           plusw2	equ	0xFDB
 23257                           fsr2h	equ	0xFDA
 23258                           fsr2l	equ	0xFD9
 23259                           status	equ	0xFD8
 23260                           
 23261 ;; *************** function _TMR0_StartTimer *****************
 23262 ;; Defined at:
 23263 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 23264 ;; Parameters:    Size  Location     Type
 23265 ;;		None
 23266 ;; Auto vars:     Size  Location     Type
 23267 ;;		None
 23268 ;; Return value:  Size  Location     Type
 23269 ;;                  1    wreg      void 
 23270 ;; Registers used:
 23271 ;;		None
 23272 ;; Tracked objects:
 23273 ;;		On entry : 0/0
 23274 ;;		On exit  : 0/0
 23275 ;;		Unchanged: 0/0
 23276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23277 ;;      Params:         0       0       0       0       0       0       0       0       0
 23278 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23280 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23281 ;;Total ram usage:        0 bytes
 23282 ;; Hardware stack levels used:    1
 23283 ;; Hardware stack levels required when called:   11
 23284 ;; This function calls:
 23285 ;;		Nothing
 23286 ;; This function is called by:
 23287 ;;		_TMR0_Initialize
 23288 ;; This function uses a non-reentrant model
 23289 ;;
 23290                           
 23291                           	psect	text97
 23292  005C80                     __ptext97:
 23293                           	opt stack 0
 23294  005C80                     _TMR0_StartTimer:
 23295                           	opt stack 17
 23296                           
 23297                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 23298                           
 23299                           ;incstack = 0
 23300  005C80  8ED5               	bsf	4053,7,c	;volatile
 23301  005C82  0012               	return		;funcret
 23302  005C84                     __end_of_TMR0_StartTimer:
 23303                           	opt stack 0
 23304                           tblptru	equ	0xFF8
 23305                           tblptrh	equ	0xFF7
 23306                           tblptrl	equ	0xFF6
 23307                           tablat	equ	0xFF5
 23308                           prodh	equ	0xFF4
 23309                           prodl	equ	0xFF3
 23310                           intcon	equ	0xFF2
 23311                           intcon3	equ	0xFF0
 23312                           indf0	equ	0xFEF
 23313                           postinc0	equ	0xFEE
 23314                           fsr0h	equ	0xFEA
 23315                           fsr0l	equ	0xFE9
 23316                           wreg	equ	0xFE8
 23317                           indf1	equ	0xFE7
 23318                           postdec1	equ	0xFE5
 23319                           fsr1h	equ	0xFE2
 23320                           fsr1l	equ	0xFE1
 23321                           indf2	equ	0xFDF
 23322                           postinc2	equ	0xFDE
 23323                           postdec2	equ	0xFDD
 23324                           plusw2	equ	0xFDB
 23325                           fsr2h	equ	0xFDA
 23326                           fsr2l	equ	0xFD9
 23327                           status	equ	0xFD8
 23328                           
 23329 ;; *************** function _PIN_MANAGER_Initialize *****************
 23330 ;; Defined at:
 23331 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23332 ;; Parameters:    Size  Location     Type
 23333 ;;		None
 23334 ;; Auto vars:     Size  Location     Type
 23335 ;;		None
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  1    wreg      void 
 23338 ;; Registers used:
 23339 ;;		wreg, status,2
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23345 ;;      Params:         0       0       0       0       0       0       0       0       0
 23346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23348 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23349 ;;Total ram usage:        0 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:   11
 23352 ;; This function calls:
 23353 ;;		Nothing
 23354 ;; This function is called by:
 23355 ;;		_moteApp_GoToSleep
 23356 ;;		_SYSTEM_Initialize
 23357 ;; This function uses a non-reentrant model
 23358 ;;
 23359                           
 23360                           	psect	text98
 23361  0051DA                     __ptext98:
 23362                           	opt stack 0
 23363  0051DA                     _PIN_MANAGER_Initialize:
 23364                           	opt stack 16
 23365                           
 23366                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23367                           
 23368                           ;incstack = 0
 23369  0051DA  8092               	bsf	3986,0,c	;volatile
 23370                           
 23371                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23372  0051DC  8292               	bsf	3986,1,c	;volatile
 23373                           
 23374                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23375  0051DE  8492               	bsf	3986,2,c	;volatile
 23376                           
 23377                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23378  0051E0  8692               	bsf	3986,3,c	;volatile
 23379                           
 23380                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23381  0051E2  948D               	bcf	3981,2,c	;volatile
 23382                           
 23383                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23384  0051E4  9496               	bcf	3990,2,c	;volatile
 23385                           
 23386                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23387  0051E6  9A92               	bcf	3986,5,c	;volatile
 23388                           
 23389                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23390  0051E8  9C92               	bcf	3986,6,c	;volatile
 23391                           
 23392                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23393  0051EA  9E92               	bcf	3986,7,c	;volatile
 23394                           
 23395                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 23396  0051EC  9EF1               	bcf	intcon2,7,c	;volatile
 23397                           
 23398                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 23399  0051EE  8E86               	bsf	3974,7,c	;volatile
 23400                           
 23401                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 23402  0051F0  86F2               	bsf	intcon,3,c	;volatile
 23403                           
 23404                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 23405  0051F2  8293               	bsf	3987,1,c	;volatile
 23406                           
 23407                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 23408  0051F4  8093               	bsf	3987,0,c	;volatile
 23409                           
 23410                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 23411  0051F6  8E93               	bsf	3987,7,c	;volatile
 23412                           
 23413                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 23414  0051F8  9493               	bcf	3987,2,c	;volatile
 23415                           
 23416                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 23417  0051FA  9693               	bcf	3987,3,c	;volatile
 23418                           
 23419                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 23420  0051FC  9893               	bcf	3987,4,c	;volatile
 23421                           
 23422                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 23423  0051FE  9A93               	bcf	3987,5,c	;volatile
 23424                           
 23425                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 23426  005200  9094               	bcf	3988,0,c	;volatile
 23427                           
 23428                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 23429  005202  9294               	bcf	3988,1,c	;volatile
 23430                           
 23431                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 23432  005204  8494               	bsf	3988,2,c	;volatile
 23433                           
 23434                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 23435  005206  9C94               	bcf	3988,6,c	;volatile
 23436                           
 23437                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 23438  005208  8E94               	bsf	3988,7,c	;volatile
 23439                           
 23440                           ;pin_manager.c: 83: TRISD = 0b00000000;
 23441  00520A  0E00               	movlw	0
 23442  00520C  6E95               	movwf	3989,c	;volatile
 23443                           
 23444                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 23445  00520E  9496               	bcf	3990,2,c	;volatile
 23446                           
 23447                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 23448  005210  9A89               	bcf	3977,5,c	;volatile
 23449                           
 23450                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 23451  005212  9C89               	bcf	3977,6,c	;volatile
 23452                           
 23453                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 23454  005214  9E89               	bcf	3977,7,c	;volatile
 23455                           
 23456                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 23457  005216  948A               	bcf	3978,2,c	;volatile
 23458                           
 23459                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 23460  005218  948B               	bcf	3979,2,c	;volatile
 23461                           
 23462                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 23463  00521A  9C8B               	bcf	3979,6,c	;volatile
 23464                           
 23465                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 23466  00521C  848D               	bsf	3981,2,c	;volatile
 23467                           
 23468                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 23469  00521E  010F               	movlb	15	; () banked
 23470  005220  915B               	bcf	91,0,b	;volatile
 23471                           
 23472                           ; BSR set to: 15
 23473                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 23474  005222  835B               	bsf	91,1,b	;volatile
 23475                           
 23476                           ; BSR set to: 15
 23477                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 23478  005224  855B               	bsf	91,2,b	;volatile
 23479                           
 23480                           ; BSR set to: 15
 23481                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 23482  005226  875B               	bsf	91,3,b	;volatile
 23483                           
 23484                           ; BSR set to: 15
 23485                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 23486  005228  9F5D               	bcf	93,7,b	;volatile
 23487                           
 23488                           ; BSR set to: 15
 23489                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 23490  00522A  9D5D               	bcf	93,6,b	;volatile
 23491                           
 23492                           ; BSR set to: 15
 23493  00522C  0012               	return		;funcret
 23494  00522E                     __end_of_PIN_MANAGER_Initialize:
 23495                           	opt stack 0
 23496                           tblptru	equ	0xFF8
 23497                           tblptrh	equ	0xFF7
 23498                           tblptrl	equ	0xFF6
 23499                           tablat	equ	0xFF5
 23500                           prodh	equ	0xFF4
 23501                           prodl	equ	0xFF3
 23502                           intcon	equ	0xFF2
 23503                           intcon2	equ	0xFF1
 23504                           intcon3	equ	0xFF0
 23505                           indf0	equ	0xFEF
 23506                           postinc0	equ	0xFEE
 23507                           fsr0h	equ	0xFEA
 23508                           fsr0l	equ	0xFE9
 23509                           wreg	equ	0xFE8
 23510                           indf1	equ	0xFE7
 23511                           postdec1	equ	0xFE5
 23512                           fsr1h	equ	0xFE2
 23513                           fsr1l	equ	0xFE1
 23514                           indf2	equ	0xFDF
 23515                           postinc2	equ	0xFDE
 23516                           postdec2	equ	0xFDD
 23517                           plusw2	equ	0xFDB
 23518                           fsr2h	equ	0xFDA
 23519                           fsr2l	equ	0xFD9
 23520                           status	equ	0xFD8
 23521                           
 23522 ;; *************** function _OSCILLATOR_Initialize *****************
 23523 ;; Defined at:
 23524 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;		None
 23527 ;; Auto vars:     Size  Location     Type
 23528 ;;		None
 23529 ;; Return value:  Size  Location     Type
 23530 ;;                  1    wreg      void 
 23531 ;; Registers used:
 23532 ;;		wreg, status,2
 23533 ;; Tracked objects:
 23534 ;;		On entry : 0/0
 23535 ;;		On exit  : 0/0
 23536 ;;		Unchanged: 0/0
 23537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23538 ;;      Params:         0       0       0       0       0       0       0       0       0
 23539 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23541 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23542 ;;Total ram usage:        0 bytes
 23543 ;; Hardware stack levels used:    1
 23544 ;; Hardware stack levels required when called:   11
 23545 ;; This function calls:
 23546 ;;		Nothing
 23547 ;; This function is called by:
 23548 ;;		_SYSTEM_Initialize
 23549 ;; This function uses a non-reentrant model
 23550 ;;
 23551                           
 23552                           	psect	text99
 23553  005AAE                     __ptext99:
 23554                           	opt stack 0
 23555  005AAE                     _OSCILLATOR_Initialize:
 23556                           	opt stack 18
 23557                           
 23558                           ;mcc.c: 113: OSCTUNE = 0x80;
 23559                           
 23560                           ; BSR set to: 15
 23561                           ;incstack = 0
 23562  005AAE  0E80               	movlw	128
 23563  005AB0  6E9B               	movwf	3995,c	;volatile
 23564                           
 23565                           ;mcc.c: 114: OSCCON = 0x70;
 23566  005AB2  0E70               	movlw	112
 23567  005AB4  6ED3               	movwf	4051,c	;volatile
 23568                           
 23569                           ;mcc.c: 115: OSCCON2 = 0x10;
 23570  005AB6  0E10               	movlw	16
 23571  005AB8  6ED2               	movwf	4050,c	;volatile
 23572  005ABA  AED2               	btfss	4050,7,c	;volatile
 23573  005ABC  D7FE               	goto	l1338
 23574                           
 23575                           ;mcc.c: 117: ACTCON = 0x90;
 23576  005ABE  0E90               	movlw	144
 23577  005AC0  6EB5               	movwf	4021,c	;volatile
 23578  005AC2  0012               	return		;funcret
 23579  005AC4                     __end_of_OSCILLATOR_Initialize:
 23580                           	opt stack 0
 23581                           tblptru	equ	0xFF8
 23582                           tblptrh	equ	0xFF7
 23583                           tblptrl	equ	0xFF6
 23584                           tablat	equ	0xFF5
 23585                           prodh	equ	0xFF4
 23586                           prodl	equ	0xFF3
 23587                           intcon	equ	0xFF2
 23588                           intcon2	equ	0xFF1
 23589                           intcon3	equ	0xFF0
 23590                           indf0	equ	0xFEF
 23591                           postinc0	equ	0xFEE
 23592                           fsr0h	equ	0xFEA
 23593                           fsr0l	equ	0xFE9
 23594                           wreg	equ	0xFE8
 23595                           indf1	equ	0xFE7
 23596                           postdec1	equ	0xFE5
 23597                           fsr1h	equ	0xFE2
 23598                           fsr1l	equ	0xFE1
 23599                           indf2	equ	0xFDF
 23600                           postinc2	equ	0xFDE
 23601                           postdec2	equ	0xFDD
 23602                           plusw2	equ	0xFDB
 23603                           fsr2h	equ	0xFDA
 23604                           fsr2l	equ	0xFD9
 23605                           status	equ	0xFD8
 23606                           
 23607 ;; *************** function _InitSwUart *****************
 23608 ;; Defined at:
 23609 ;;		line 75 in file "../Includes/Drivers/swUart.c"
 23610 ;; Parameters:    Size  Location     Type
 23611 ;;		None
 23612 ;; Auto vars:     Size  Location     Type
 23613 ;;		None
 23614 ;; Return value:  Size  Location     Type
 23615 ;;                  1    wreg      void 
 23616 ;; Registers used:
 23617 ;;		wreg, status,2
 23618 ;; Tracked objects:
 23619 ;;		On entry : 0/0
 23620 ;;		On exit  : 0/0
 23621 ;;		Unchanged: 0/0
 23622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23623 ;;      Params:         0       0       0       0       0       0       0       0       0
 23624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23625 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23626 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23627 ;;Total ram usage:        0 bytes
 23628 ;; Hardware stack levels used:    1
 23629 ;; Hardware stack levels required when called:   11
 23630 ;; This function calls:
 23631 ;;		Nothing
 23632 ;; This function is called by:
 23633 ;;		_SYSTEM_Initialize
 23634 ;; This function uses a non-reentrant model
 23635 ;;
 23636                           
 23637                           	psect	text100
 23638  0059DC                     __ptext100:
 23639                           	opt stack 0
 23640  0059DC                     _InitSwUart:
 23641                           	opt stack 18
 23642                           
 23643                           ;swUart.c: 77: status = SILENT;
 23644                           
 23645                           ;incstack = 0
 23646  0059DC  0E00               	movlw	0
 23647  0059DE  6E59               	movwf	_status,c
 23648                           
 23649                           ;swUart.c: 78: n_bit = 0;
 23650  0059E0  0E00               	movlw	0
 23651  0059E2  6E5C               	movwf	_n_bit,c
 23652                           
 23653                           ;swUart.c: 79: rx_data = 0;
 23654  0059E4  0E00               	movlw	0
 23655  0059E6  0100               	movlb	0	; () banked
 23656  0059E8  6FE3               	movwf	_rx_data& (0+255),b
 23657                           
 23658                           ;swUart.c: 80: cs = 0;
 23659  0059EA  0E00               	movlw	0
 23660  0059EC  0101               	movlb	1	; () banked
 23661  0059EE  6F43               	movwf	_cs& (0+255),b
 23662                           
 23663                           ;swUart.c: 81: countRX = 0;
 23664  0059F0  0E00               	movlw	0
 23665  0059F2  6E58               	movwf	_countRX,c
 23666                           
 23667                           ;swUart.c: 82: countBitsSilent = 0;
 23668  0059F4  0E00               	movlw	0
 23669  0059F6  6E57               	movwf	_countBitsSilent,c
 23670                           
 23671                           ; BSR set to: 1
 23672  0059F8  0012               	return		;funcret
 23673  0059FA                     __end_of_InitSwUart:
 23674                           	opt stack 0
 23675                           tblptru	equ	0xFF8
 23676                           tblptrh	equ	0xFF7
 23677                           tblptrl	equ	0xFF6
 23678                           tablat	equ	0xFF5
 23679                           prodh	equ	0xFF4
 23680                           prodl	equ	0xFF3
 23681                           intcon	equ	0xFF2
 23682                           intcon2	equ	0xFF1
 23683                           intcon3	equ	0xFF0
 23684                           indf0	equ	0xFEF
 23685                           postinc0	equ	0xFEE
 23686                           fsr0h	equ	0xFEA
 23687                           fsr0l	equ	0xFE9
 23688                           wreg	equ	0xFE8
 23689                           indf1	equ	0xFE7
 23690                           postdec1	equ	0xFE5
 23691                           fsr1h	equ	0xFE2
 23692                           fsr1l	equ	0xFE1
 23693                           indf2	equ	0xFDF
 23694                           postinc2	equ	0xFDE
 23695                           postdec2	equ	0xFDD
 23696                           plusw2	equ	0xFDB
 23697                           fsr2h	equ	0xFDA
 23698                           fsr2l	equ	0xFD9
 23699                           status	equ	0xFD8
 23700                           
 23701 ;; *************** function _EUSART_Initialize *****************
 23702 ;; Defined at:
 23703 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23704 ;; Parameters:    Size  Location     Type
 23705 ;;		None
 23706 ;; Auto vars:     Size  Location     Type
 23707 ;;		None
 23708 ;; Return value:  Size  Location     Type
 23709 ;;                  1    wreg      void 
 23710 ;; Registers used:
 23711 ;;		wreg, status,2
 23712 ;; Tracked objects:
 23713 ;;		On entry : 0/0
 23714 ;;		On exit  : 0/0
 23715 ;;		Unchanged: 0/0
 23716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23717 ;;      Params:         0       0       0       0       0       0       0       0       0
 23718 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23719 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23720 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23721 ;;Total ram usage:        0 bytes
 23722 ;; Hardware stack levels used:    1
 23723 ;; Hardware stack levels required when called:   11
 23724 ;; This function calls:
 23725 ;;		Nothing
 23726 ;; This function is called by:
 23727 ;;		_SYSTEM_Initialize
 23728 ;; This function uses a non-reentrant model
 23729 ;;
 23730                           
 23731                           	psect	text101
 23732  005590                     __ptext101:
 23733                           	opt stack 0
 23734  005590                     _EUSART_Initialize:
 23735                           	opt stack 18
 23736                           
 23737                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23738                           
 23739                           ; BSR set to: 1
 23740                           ;incstack = 0
 23741  005590  9A9D               	bcf	3997,5,c	;volatile
 23742                           
 23743                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23744  005592  989D               	bcf	3997,4,c	;volatile
 23745                           
 23746                           ;eusart.c: 85: BAUDCON = 0x48;
 23747  005594  0E48               	movlw	72
 23748  005596  6EB8               	movwf	4024,c	;volatile
 23749                           
 23750                           ;eusart.c: 88: RCSTA = 0x90;
 23751  005598  0E90               	movlw	144
 23752  00559A  6EAB               	movwf	4011,c	;volatile
 23753                           
 23754                           ;eusart.c: 91: TXSTA = 0x26;
 23755  00559C  0E26               	movlw	38
 23756  00559E  6EAC               	movwf	4012,c	;volatile
 23757                           
 23758                           ;eusart.c: 95: SPBRG = 0xD0;
 23759  0055A0  0ED0               	movlw	208
 23760  0055A2  6EAF               	movwf	4015,c	;volatile
 23761                           
 23762                           ;eusart.c: 100: SPBRGH = 0x00;
 23763  0055A4  0E00               	movlw	0
 23764  0055A6  6EB0               	movwf	4016,c	;volatile
 23765                           
 23766                           ;eusart.c: 103: eusartTxHead = 0;
 23767  0055A8  0E00               	movlw	0
 23768  0055AA  0100               	movlb	0	; () banked
 23769  0055AC  6FE2               	movwf	_eusartTxHead& (0+255),b
 23770                           
 23771                           ;eusart.c: 104: eusartTxTail = 0;
 23772  0055AE  0E00               	movlw	0
 23773  0055B0  6FE1               	movwf	_eusartTxTail& (0+255),b
 23774                           
 23775                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23776  0055B2  0E40               	movlw	64
 23777  0055B4  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 23778                           
 23779                           ;eusart.c: 107: eusartRxHead = 0;
 23780  0055B6  0E00               	movlw	0
 23781  0055B8  6FDF               	movwf	_eusartRxHead& (0+255),b
 23782                           
 23783                           ;eusart.c: 108: eusartRxTail = 0;
 23784  0055BA  0E00               	movlw	0
 23785  0055BC  6FDE               	movwf	_eusartRxTail& (0+255),b
 23786                           
 23787                           ;eusart.c: 109: eusartRxCount = 0;
 23788  0055BE  0E00               	movlw	0
 23789  0055C0  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23793  0055C2  8A9D               	bsf	3997,5,c	;volatile
 23794                           
 23795                           ; BSR set to: 0
 23796                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23797  0055C4  88AB               	bsf	4011,4,c	;volatile
 23798                           
 23799                           ; BSR set to: 0
 23800  0055C6  0012               	return		;funcret
 23801  0055C8                     __end_of_EUSART_Initialize:
 23802                           	opt stack 0
 23803                           tblptru	equ	0xFF8
 23804                           tblptrh	equ	0xFF7
 23805                           tblptrl	equ	0xFF6
 23806                           tablat	equ	0xFF5
 23807                           prodh	equ	0xFF4
 23808                           prodl	equ	0xFF3
 23809                           intcon	equ	0xFF2
 23810                           intcon2	equ	0xFF1
 23811                           intcon3	equ	0xFF0
 23812                           indf0	equ	0xFEF
 23813                           postinc0	equ	0xFEE
 23814                           fsr0h	equ	0xFEA
 23815                           fsr0l	equ	0xFE9
 23816                           wreg	equ	0xFE8
 23817                           indf1	equ	0xFE7
 23818                           postdec1	equ	0xFE5
 23819                           fsr1h	equ	0xFE2
 23820                           fsr1l	equ	0xFE1
 23821                           indf2	equ	0xFDF
 23822                           postinc2	equ	0xFDE
 23823                           postdec2	equ	0xFDD
 23824                           plusw2	equ	0xFDB
 23825                           fsr2h	equ	0xFDA
 23826                           fsr2l	equ	0xFD9
 23827                           status	equ	0xFD8
 23828                           
 23829 ;; *************** function _CMP1_Initialize *****************
 23830 ;; Defined at:
 23831 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23832 ;; Parameters:    Size  Location     Type
 23833 ;;		None
 23834 ;; Auto vars:     Size  Location     Type
 23835 ;;		None
 23836 ;; Return value:  Size  Location     Type
 23837 ;;                  1    wreg      void 
 23838 ;; Registers used:
 23839 ;;		wreg, status,2
 23840 ;; Tracked objects:
 23841 ;;		On entry : 0/0
 23842 ;;		On exit  : 0/0
 23843 ;;		Unchanged: 0/0
 23844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23845 ;;      Params:         0       0       0       0       0       0       0       0       0
 23846 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23848 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23849 ;;Total ram usage:        0 bytes
 23850 ;; Hardware stack levels used:    1
 23851 ;; Hardware stack levels required when called:   11
 23852 ;; This function calls:
 23853 ;;		Nothing
 23854 ;; This function is called by:
 23855 ;;		_SYSTEM_Initialize
 23856 ;; This function uses a non-reentrant model
 23857 ;;
 23858                           
 23859                           	psect	text102
 23860  005B68                     __ptext102:
 23861                           	opt stack 0
 23862  005B68                     _CMP1_Initialize:
 23863                           	opt stack 18
 23864                           
 23865                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23866                           
 23867                           ; BSR set to: 0
 23868                           ;incstack = 0
 23869  005B68  9CA0               	bcf	4000,6,c	;volatile
 23870                           
 23871                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23872  005B6A  0E9C               	movlw	156
 23873  005B6C  6E98               	movwf	3992,c	;volatile
 23874                           
 23875                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23876  005B6E  8A9A               	bsf	3994,5,c	;volatile
 23877                           
 23878                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23879  005B70  929A               	bcf	3994,1,c	;volatile
 23880                           
 23881                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23882  005B72  969A               	bcf	3994,3,c	;volatile
 23883                           
 23884                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23885  005B74  9CA1               	bcf	4001,6,c	;volatile
 23886                           
 23887                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23888  005B76  9CA0               	bcf	4000,6,c	;volatile
 23889  005B78  0012               	return		;funcret
 23890  005B7A                     __end_of_CMP1_Initialize:
 23891                           	opt stack 0
 23892                           tblptru	equ	0xFF8
 23893                           tblptrh	equ	0xFF7
 23894                           tblptrl	equ	0xFF6
 23895                           tablat	equ	0xFF5
 23896                           prodh	equ	0xFF4
 23897                           prodl	equ	0xFF3
 23898                           intcon	equ	0xFF2
 23899                           intcon2	equ	0xFF1
 23900                           intcon3	equ	0xFF0
 23901                           indf0	equ	0xFEF
 23902                           postinc0	equ	0xFEE
 23903                           fsr0h	equ	0xFEA
 23904                           fsr0l	equ	0xFE9
 23905                           wreg	equ	0xFE8
 23906                           indf1	equ	0xFE7
 23907                           postdec1	equ	0xFE5
 23908                           fsr1h	equ	0xFE2
 23909                           fsr1l	equ	0xFE1
 23910                           indf2	equ	0xFDF
 23911                           postinc2	equ	0xFDE
 23912                           postdec2	equ	0xFDD
 23913                           plusw2	equ	0xFDB
 23914                           fsr2h	equ	0xFDA
 23915                           fsr2l	equ	0xFD9
 23916                           status	equ	0xFD8
 23917                           
 23918 ;; *************** function _ADC_Initialize *****************
 23919 ;; Defined at:
 23920 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;		None
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  1    wreg      void 
 23927 ;; Registers used:
 23928 ;;		wreg, status,2
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/0
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23938 ;;Total ram usage:        0 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; Hardware stack levels required when called:   11
 23941 ;; This function calls:
 23942 ;;		Nothing
 23943 ;; This function is called by:
 23944 ;;		_SYSTEM_Initialize
 23945 ;; This function uses a non-reentrant model
 23946 ;;
 23947                           
 23948                           	psect	text103
 23949  005A4E                     __ptext103:
 23950                           	opt stack 0
 23951  005A4E                     _ADC_Initialize:
 23952                           	opt stack 18
 23953                           
 23954                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23955                           
 23956                           ;incstack = 0
 23957  005A4E  0EA0               	movlw	160
 23958  005A50  6E7D               	movwf	3965,c	;volatile
 23959                           
 23960                           ;adc.c: 70: ADCON0 = 0x01;
 23961  005A52  0E01               	movlw	1
 23962  005A54  6EC2               	movwf	4034,c	;volatile
 23963                           
 23964                           ;adc.c: 73: ADCON1 = 0x08;
 23965  005A56  0E08               	movlw	8
 23966  005A58  6EC1               	movwf	4033,c	;volatile
 23967                           
 23968                           ;adc.c: 76: ADCON2 = 0b10001110;
 23969  005A5A  0E8E               	movlw	142
 23970  005A5C  6EC0               	movwf	4032,c	;volatile
 23971                           
 23972                           ;adc.c: 79: ADRESL = 0x00;
 23973  005A5E  0E00               	movlw	0
 23974  005A60  6EC3               	movwf	4035,c	;volatile
 23975                           
 23976                           ;adc.c: 82: ADRESH = 0x00;
 23977  005A62  0E00               	movlw	0
 23978  005A64  6EC4               	movwf	4036,c	;volatile
 23979  005A66  0012               	return		;funcret
 23980  005A68                     __end_of_ADC_Initialize:
 23981                           	opt stack 0
 23982                           tblptru	equ	0xFF8
 23983                           tblptrh	equ	0xFF7
 23984                           tblptrl	equ	0xFF6
 23985                           tablat	equ	0xFF5
 23986                           prodh	equ	0xFF4
 23987                           prodl	equ	0xFF3
 23988                           intcon	equ	0xFF2
 23989                           intcon2	equ	0xFF1
 23990                           intcon3	equ	0xFF0
 23991                           indf0	equ	0xFEF
 23992                           postinc0	equ	0xFEE
 23993                           fsr0h	equ	0xFEA
 23994                           fsr0l	equ	0xFE9
 23995                           wreg	equ	0xFE8
 23996                           indf1	equ	0xFE7
 23997                           postdec1	equ	0xFE5
 23998                           fsr1h	equ	0xFE2
 23999                           fsr1l	equ	0xFE1
 24000                           indf2	equ	0xFDF
 24001                           postinc2	equ	0xFDE
 24002                           postdec2	equ	0xFDD
 24003                           plusw2	equ	0xFDB
 24004                           fsr2h	equ	0xFDA
 24005                           fsr2l	equ	0xFD9
 24006                           status	equ	0xFD8
 24007                           
 24008 ;; *************** function _MOTEapp_handlerState *****************
 24009 ;; Defined at:
 24010 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 24011 ;; Parameters:    Size  Location     Type
 24012 ;;  state           1    wreg     enum E5864
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;  state           1    0[BANK0 ] enum E5864
 24015 ;; Return value:  Size  Location     Type
 24016 ;;                  1    wreg      void 
 24017 ;; Registers used:
 24018 ;;		wreg
 24019 ;; Tracked objects:
 24020 ;;		On entry : 0/0
 24021 ;;		On exit  : 0/0
 24022 ;;		Unchanged: 0/0
 24023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24024 ;;      Params:         0       0       0       0       0       0       0       0       0
 24025 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24026 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24027 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24028 ;;Total ram usage:        1 bytes
 24029 ;; Hardware stack levels used:    1
 24030 ;; Hardware stack levels required when called:   11
 24031 ;; This function calls:
 24032 ;;		Nothing
 24033 ;; This function is called by:
 24034 ;;		_main
 24035 ;; This function uses a non-reentrant model
 24036 ;;
 24037                           
 24038                           	psect	text104
 24039  005C1A                     __ptext104:
 24040                           	opt stack 0
 24041  005C1A                     _MOTEapp_handlerState:
 24042                           	opt stack 19
 24043                           
 24044                           ;incstack = 0
 24045                           ;MOTEapp_handlerState@state stored from wreg
 24046  005C1A  0100               	movlb	0	; () banked
 24047  005C1C  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 24048                           
 24049                           ;MOTEapp.c: 185: moteState = state;
 24050  005C1E  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 24051  005C22  0012               	return		;funcret
 24052  005C24                     __end_of_MOTEapp_handlerState:
 24053                           	opt stack 0
 24054                           tblptru	equ	0xFF8
 24055                           tblptrh	equ	0xFF7
 24056                           tblptrl	equ	0xFF6
 24057                           tablat	equ	0xFF5
 24058                           prodh	equ	0xFF4
 24059                           prodl	equ	0xFF3
 24060                           intcon	equ	0xFF2
 24061                           intcon2	equ	0xFF1
 24062                           intcon3	equ	0xFF0
 24063                           indf0	equ	0xFEF
 24064                           postinc0	equ	0xFEE
 24065                           fsr0h	equ	0xFEA
 24066                           fsr0l	equ	0xFE9
 24067                           wreg	equ	0xFE8
 24068                           indf1	equ	0xFE7
 24069                           postdec1	equ	0xFE5
 24070                           fsr1h	equ	0xFE2
 24071                           fsr1l	equ	0xFE1
 24072                           indf2	equ	0xFDF
 24073                           postinc2	equ	0xFDE
 24074                           postdec2	equ	0xFDD
 24075                           plusw2	equ	0xFDB
 24076                           fsr2h	equ	0xFDA
 24077                           fsr2l	equ	0xFD9
 24078                           status	equ	0xFD8
 24079                           
 24080 ;; *************** function _DATAEE_ReadByte *****************
 24081 ;; Defined at:
 24082 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 24083 ;; Parameters:    Size  Location     Type
 24084 ;;  bAdd            1    wreg     unsigned char 
 24085 ;; Auto vars:     Size  Location     Type
 24086 ;;  bAdd            1    0[BANK0 ] unsigned char 
 24087 ;; Return value:  Size  Location     Type
 24088 ;;                  1    wreg      unsigned char 
 24089 ;; Registers used:
 24090 ;;		wreg, status,2
 24091 ;; Tracked objects:
 24092 ;;		On entry : 0/0
 24093 ;;		On exit  : 0/0
 24094 ;;		Unchanged: 0/0
 24095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24096 ;;      Params:         0       0       0       0       0       0       0       0       0
 24097 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24099 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24100 ;;Total ram usage:        1 bytes
 24101 ;; Hardware stack levels used:    1
 24102 ;; Hardware stack levels required when called:   11
 24103 ;; This function calls:
 24104 ;;		Nothing
 24105 ;; This function is called by:
 24106 ;;		_main
 24107 ;; This function uses a non-reentrant model
 24108 ;;
 24109                           
 24110                           	psect	text105
 24111  005AC4                     __ptext105:
 24112                           	opt stack 0
 24113  005AC4                     _DATAEE_ReadByte:
 24114                           	opt stack 19
 24115                           
 24116                           ;incstack = 0
 24117                           ;DATAEE_ReadByte@bAdd stored from wreg
 24118  005AC4  0100               	movlb	0	; () banked
 24119  005AC6  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24120                           
 24121                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24122  005AC8  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24123                           
 24124                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24125  005ACC  9CA6               	bcf	4006,6,c	;volsfr
 24126                           
 24127                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24128  005ACE  9EA6               	bcf	4006,7,c	;volsfr
 24129                           
 24130                           ;memory.c: 193: EECON1bits.RD = 1;
 24131  005AD0  80A6               	bsf	4006,0,c	;volsfr
 24132                           
 24133                           ;memory.c: 194: __nop();
 24134  005AD2  F000               	nop	
 24135                           
 24136                           ;memory.c: 195: __nop();
 24137  005AD4  F000               	nop	
 24138                           
 24139                           ;memory.c: 197: return (EEDATA);
 24140  005AD6  50A8               	movf	4008,w,c	;volatile
 24141  005AD8  0012               	return	
 24142  005ADA                     __end_of_DATAEE_ReadByte:
 24143                           	opt stack 0
 24144                           tblptru	equ	0xFF8
 24145                           tblptrh	equ	0xFF7
 24146                           tblptrl	equ	0xFF6
 24147                           tablat	equ	0xFF5
 24148                           prodh	equ	0xFF4
 24149                           prodl	equ	0xFF3
 24150                           intcon	equ	0xFF2
 24151                           intcon2	equ	0xFF1
 24152                           intcon3	equ	0xFF0
 24153                           indf0	equ	0xFEF
 24154                           postinc0	equ	0xFEE
 24155                           fsr0h	equ	0xFEA
 24156                           fsr0l	equ	0xFE9
 24157                           wreg	equ	0xFE8
 24158                           indf1	equ	0xFE7
 24159                           postdec1	equ	0xFE5
 24160                           fsr1h	equ	0xFE2
 24161                           fsr1l	equ	0xFE1
 24162                           indf2	equ	0xFDF
 24163                           postinc2	equ	0xFDE
 24164                           postdec2	equ	0xFDD
 24165                           plusw2	equ	0xFDB
 24166                           fsr2h	equ	0xFDA
 24167                           fsr2l	equ	0xFD9
 24168                           status	equ	0xFD8
 24169                           
 24170 ;; *************** function _INTERRUPT_InterruptManager *****************
 24171 ;; Defined at:
 24172 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 24173 ;; Parameters:    Size  Location     Type
 24174 ;;		None
 24175 ;; Auto vars:     Size  Location     Type
 24176 ;;  tClearPin       1   64[COMRAM] unsigned char 
 24177 ;; Return value:  Size  Location     Type
 24178 ;;                  1    wreg      void 
 24179 ;; Registers used:
 24180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24181 ;; Tracked objects:
 24182 ;;		On entry : 0/0
 24183 ;;		On exit  : 0/0
 24184 ;;		Unchanged: 0/0
 24185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24186 ;;      Params:         0       0       0       0       0       0       0       0       0
 24187 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24188 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24189 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24190 ;;Total ram usage:       19 bytes
 24191 ;; Hardware stack levels used:    1
 24192 ;; Hardware stack levels required when called:   10
 24193 ;; This function calls:
 24194 ;;		_CMP1_ISR
 24195 ;;		_EUSART_Receive_ISR
 24196 ;;		_EUSART_Transmit_ISR
 24197 ;;		_InterruptPinRX
 24198 ;;		_InterruptTimerUART
 24199 ;;		_TMR0_ISR
 24200 ;;		_TMR1_ISR
 24201 ;;		_TMR3_ISR
 24202 ;;		_TMRapp_Tick
 24203 ;;		_USBDeviceTasks
 24204 ;;		_USBapp_setrxByteFlag
 24205 ;; This function is called by:
 24206 ;;		Interrupt level 2
 24207 ;; This function uses a non-reentrant model
 24208 ;;
 24209                           
 24210                           	psect	intcode
 24211  000008                     __pintcode:
 24212                           	opt stack 0
 24213  000008                     _INTERRUPT_InterruptManager:
 24214                           	opt stack 11
 24215                           
 24216                           ;incstack = 0
 24217  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24218  00000A  CFFA F02F          	movff	pclath,??_INTERRUPT_InterruptManager
 24219  00000E  CFFB F030          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 24220  000012  CFE9 F031          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 24221  000016  CFEA F032          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 24222  00001A  CFE1 F033          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 24223  00001E  CFE2 F034          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 24224  000022  CFD9 F035          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 24225  000026  CFDA F036          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 24226  00002A  CFF3 F037          	movff	prodl,??_INTERRUPT_InterruptManager+8
 24227  00002E  CFF4 F038          	movff	prodh,??_INTERRUPT_InterruptManager+9
 24228  000032  CFF6 F039          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 24229  000036  CFF7 F03A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 24230  00003A  CFF8 F03B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 24231  00003E  CFF5 F03C          	movff	tablat,??_INTERRUPT_InterruptManager+13
 24232  000042  C05F  F03D         	movff	btemp,??_INTERRUPT_InterruptManager+14
 24233  000046  C060  F03E         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 24234  00004A  C061  F03F         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 24235  00004E  C062  F040         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 24236                           
 24237                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24238  000052  B09D               	btfsc	3997,0,c	;volatile
 24239  000054  A09E               	btfss	3998,0,c	;volatile
 24240  000056  D004               	goto	i2l1289
 24241                           
 24242                           ;interrupt_manager.c: 60: {
 24243                           ;interrupt_manager.c: 61: TMR1_ISR();
 24244  000058  ECF2  F02D         	call	_TMR1_ISR	;wreg free
 24245                           
 24246                           ;interrupt_manager.c: 63: TMRapp_Tick();
 24247  00005C  EC34  F02E         	call	_TMRapp_Tick	;wreg free
 24248  000060                     i2l1289:
 24249                           
 24250                           ;interrupt_manager.c: 64: }
 24251                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24252  000060  B2A0               	btfsc	4000,1,c	;volatile
 24253  000062  A2A1               	btfss	4001,1,c	;volatile
 24254  000064  D003               	goto	i2l1290
 24255                           
 24256                           ;interrupt_manager.c: 66: {
 24257                           ;interrupt_manager.c: 67: TMR3_ISR();
 24258  000066  ECFD  F02C         	call	_TMR3_ISR	;wreg free
 24259                           
 24260                           ;interrupt_manager.c: 68: }
 24261  00006A  D013               	goto	i2l1296
 24262  00006C                     i2l1290:
 24263                           
 24264                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24265  00006C  BA9D               	btfsc	3997,5,c	;volatile
 24266  00006E  AA9E               	btfss	3998,5,c	;volatile
 24267  000070  D005               	goto	i2l1292
 24268                           
 24269                           ;interrupt_manager.c: 70: {
 24270                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 24271  000072  EC23  F02E         	call	_USBapp_setrxByteFlag	;wreg free
 24272                           
 24273                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 24274  000076  ECDD  F02B         	call	_EUSART_Receive_ISR	;wreg free
 24275                           
 24276                           ;interrupt_manager.c: 73: }
 24277  00007A  D00B               	goto	i2l1296
 24278  00007C                     i2l1292:
 24279                           
 24280                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 24281  00007C  B89D               	btfsc	3997,4,c	;volatile
 24282  00007E  A89E               	btfss	3998,4,c	;volatile
 24283  000080  D003               	goto	i2l1294
 24284                           
 24285                           ;interrupt_manager.c: 75: {
 24286                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 24287  000082  ECC5  F02B         	call	_EUSART_Transmit_ISR	;wreg free
 24288                           
 24289                           ;interrupt_manager.c: 77: }
 24290  000086  D005               	goto	i2l1296
 24291  000088                     i2l1294:
 24292                           
 24293                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 24294  000088  BCA0               	btfsc	4000,6,c	;volatile
 24295  00008A  ACA1               	btfss	4001,6,c	;volatile
 24296  00008C  D002               	goto	i2l1296
 24297                           
 24298                           ;interrupt_manager.c: 79: {
 24299                           ;interrupt_manager.c: 80: CMP1_ISR();
 24300  00008E  EC4A  F02E         	call	_CMP1_ISR	;wreg free
 24301  000092                     i2l1296:
 24302                           
 24303                           ;interrupt_manager.c: 81: }
 24304                           ;interrupt_manager.c: 82: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 24305  000092  BAF2               	btfsc	intcon,5,c	;volatile
 24306  000094  A4F2               	btfss	intcon,2,c	;volatile
 24307  000096  D005               	goto	i2l1297
 24308                           
 24309                           ;interrupt_manager.c: 83: {
 24310                           ;interrupt_manager.c: 84: TMR0_ISR();
 24311  000098  EC42  F02E         	call	_TMR0_ISR	;wreg free
 24312                           
 24313                           ;interrupt_manager.c: 85: InterruptTimerUART();
 24314  00009C  EC7B  F013         	call	_InterruptTimerUART	;wreg free
 24315                           
 24316                           ;interrupt_manager.c: 88: }
 24317  0000A0  D00D               	goto	i2l1300
 24318  0000A2                     i2l1297:
 24319                           
 24320                           ;interrupt_manager.c: 89: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 24321  0000A2  B6F2               	btfsc	intcon,3,c	;volatile
 24322  0000A4  A0F2               	btfss	intcon,0,c	;volatile
 24323  0000A6  D008               	goto	i2l1299
 24324                           
 24325                           ;interrupt_manager.c: 90: {
 24326                           ;interrupt_manager.c: 91: bool tClearPin;
 24327                           ;interrupt_manager.c: 93: INTCONbits.IOCIF = 0;
 24328  0000A8  90F2               	bcf	intcon,0,c	;volatile
 24329                           
 24330                           ;interrupt_manager.c: 95: tClearPin = PORTBbits.RB7;
 24331  0000AA  0E00               	movlw	0
 24332  0000AC  BE81               	btfsc	3969,7,c	;volatile
 24333  0000AE  0E01               	movlw	1
 24334  0000B0  6E41               	movwf	INTERRUPT_InterruptManager@tClearPin,c
 24335                           
 24336                           ;interrupt_manager.c: 98: InterruptPinRX();
 24337  0000B2  EC64  F029         	call	_InterruptPinRX	;wreg free
 24338                           
 24339                           ;interrupt_manager.c: 99: }
 24340  0000B6  D002               	goto	i2l1300
 24341  0000B8                     i2l1299:
 24342                           
 24343                           ;interrupt_manager.c: 100: else
 24344                           ;interrupt_manager.c: 101: {
 24345                           ;interrupt_manager.c: 103: USBDeviceTasks();
 24346  0000B8  ECB4  F014         	call	_USBDeviceTasks	;wreg free
 24347  0000BC                     i2l1300:
 24348  0000BC  C040  F062         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 24349  0000C0  C03F  F061         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 24350  0000C4  C03E  F060         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 24351  0000C8  C03D  F05F         	movff	??_INTERRUPT_InterruptManager+14,btemp
 24352  0000CC  C03C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 24353  0000D0  C03B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 24354  0000D4  C03A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 24355  0000D8  C039  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 24356  0000DC  C038  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 24357  0000E0  C037  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 24358  0000E4  C036  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 24359  0000E8  C035  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 24360  0000EC  C034  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 24361  0000F0  C033  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 24362  0000F4  C032  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 24363  0000F8  C031  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 24364  0000FC  C030  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 24365  000100  C02F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 24366  000104  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24367  000106  0011               	retfie		f
 24368  000108                     __end_of_INTERRUPT_InterruptManager:
 24369                           	opt stack 0
 24370                           pclatu	equ	0xFFB
 24371                           pclath	equ	0xFFA
 24372                           tblptru	equ	0xFF8
 24373                           tblptrh	equ	0xFF7
 24374                           tblptrl	equ	0xFF6
 24375                           tablat	equ	0xFF5
 24376                           prodh	equ	0xFF4
 24377                           prodl	equ	0xFF3
 24378                           intcon	equ	0xFF2
 24379                           intcon2	equ	0xFF1
 24380                           intcon3	equ	0xFF0
 24381                           indf0	equ	0xFEF
 24382                           postinc0	equ	0xFEE
 24383                           fsr0h	equ	0xFEA
 24384                           fsr0l	equ	0xFE9
 24385                           wreg	equ	0xFE8
 24386                           indf1	equ	0xFE7
 24387                           postdec1	equ	0xFE5
 24388                           fsr1h	equ	0xFE2
 24389                           fsr1l	equ	0xFE1
 24390                           indf2	equ	0xFDF
 24391                           postinc2	equ	0xFDE
 24392                           postdec2	equ	0xFDD
 24393                           plusw2	equ	0xFDB
 24394                           fsr2h	equ	0xFDA
 24395                           fsr2l	equ	0xFD9
 24396                           status	equ	0xFD8
 24397                           
 24398 ;; *************** function _USBapp_setrxByteFlag *****************
 24399 ;; Defined at:
 24400 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24401 ;; Parameters:    Size  Location     Type
 24402 ;;		None
 24403 ;; Auto vars:     Size  Location     Type
 24404 ;;		None
 24405 ;; Return value:  Size  Location     Type
 24406 ;;                  1    wreg      void 
 24407 ;; Registers used:
 24408 ;;		wreg, status,2
 24409 ;; Tracked objects:
 24410 ;;		On entry : 0/0
 24411 ;;		On exit  : 0/0
 24412 ;;		Unchanged: 0/0
 24413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24414 ;;      Params:         0       0       0       0       0       0       0       0       0
 24415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24418 ;;Total ram usage:        0 bytes
 24419 ;; Hardware stack levels used:    1
 24420 ;; This function calls:
 24421 ;;		Nothing
 24422 ;; This function is called by:
 24423 ;;		_INTERRUPT_InterruptManager
 24424 ;; This function uses a non-reentrant model
 24425 ;;
 24426                           
 24427                           	psect	text107
 24428  005C46                     __ptext107:
 24429                           	opt stack 0
 24430  005C46                     _USBapp_setrxByteFlag:
 24431                           	opt stack 20
 24432                           
 24433                           ;USBapp.c: 265: rxByteFlag = 1;
 24434                           
 24435                           ;incstack = 0
 24436  005C46  0E01               	movlw	1
 24437  005C48  0100               	movlb	0	; () banked
 24438  005C4A  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 24439                           
 24440                           ; BSR set to: 0
 24441  005C4C  0012               	return		;funcret
 24442  005C4E                     __end_of_USBapp_setrxByteFlag:
 24443                           	opt stack 0
 24444                           pclatu	equ	0xFFB
 24445                           pclath	equ	0xFFA
 24446                           tblptru	equ	0xFF8
 24447                           tblptrh	equ	0xFF7
 24448                           tblptrl	equ	0xFF6
 24449                           tablat	equ	0xFF5
 24450                           prodh	equ	0xFF4
 24451                           prodl	equ	0xFF3
 24452                           intcon	equ	0xFF2
 24453                           intcon2	equ	0xFF1
 24454                           intcon3	equ	0xFF0
 24455                           indf0	equ	0xFEF
 24456                           postinc0	equ	0xFEE
 24457                           fsr0h	equ	0xFEA
 24458                           fsr0l	equ	0xFE9
 24459                           wreg	equ	0xFE8
 24460                           indf1	equ	0xFE7
 24461                           postdec1	equ	0xFE5
 24462                           fsr1h	equ	0xFE2
 24463                           fsr1l	equ	0xFE1
 24464                           indf2	equ	0xFDF
 24465                           postinc2	equ	0xFDE
 24466                           postdec2	equ	0xFDD
 24467                           plusw2	equ	0xFDB
 24468                           fsr2h	equ	0xFDA
 24469                           fsr2l	equ	0xFD9
 24470                           status	equ	0xFD8
 24471                           
 24472 ;; *************** function _USBDeviceTasks *****************
 24473 ;; Defined at:
 24474 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24475 ;; Parameters:    Size  Location     Type
 24476 ;;		None
 24477 ;; Auto vars:     Size  Location     Type
 24478 ;;  i               1   30[COMRAM] unsigned char 
 24479 ;; Return value:  Size  Location     Type
 24480 ;;                  1    wreg      void 
 24481 ;; Registers used:
 24482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24483 ;; Tracked objects:
 24484 ;;		On entry : 0/0
 24485 ;;		On exit  : 0/0
 24486 ;;		Unchanged: 0/0
 24487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24488 ;;      Params:         0       0       0       0       0       0       0       0       0
 24489 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24491 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24492 ;;Total ram usage:        1 bytes
 24493 ;; Hardware stack levels used:    1
 24494 ;; Hardware stack levels required when called:    9
 24495 ;; This function calls:
 24496 ;;		_USBCtrlEPAllowStatusStage
 24497 ;;		_USBCtrlEPService
 24498 ;;		_USBStallHandler
 24499 ;;		_USBSuspend
 24500 ;;		_USBWakeFromSuspend
 24501 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24502 ;;		i2_USBDeviceInit
 24503 ;; This function is called by:
 24504 ;;		_INTERRUPT_InterruptManager
 24505 ;; This function uses a non-reentrant model
 24506 ;;
 24507                           
 24508                           	psect	text108
 24509  002968                     __ptext108:
 24510                           	opt stack 0
 24511  002968                     _USBDeviceTasks:
 24512                           	opt stack 11
 24513                           
 24514                           ;usb_device.c: 430: uint8_t i;
 24515                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24516                           
 24517                           ; BSR set to: 0
 24518                           ;incstack = 0
 24519  002968  0100               	movlb	0	; () banked
 24520  00296A  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24521  00296C  B4D8               	btfsc	status,2,c
 24522                           
 24523                           ; BSR set to: 0
 24524                           ;usb_device.c: 433: {
 24525                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24526  00296E  BA60               	btfsc	3936,5,c	;volatile
 24527  002970  D006               	goto	i2l1870
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;usb_device.c: 444: {
 24531                           ;usb_device.c: 445: {UIR = 0;};
 24532  002972  0E00               	movlw	0
 24533  002974  6E65               	movwf	3941,c	;volatile
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24537  002976  8064               	bsf	3940,0,c	;volatile
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24541  002978  8864               	bsf	3940,4,c	;volatile
 24542                           
 24543                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24544  00297A  0E02               	movlw	2
 24545  00297C  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24546  00297E                     i2l1870:
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;usb_device.c: 449: }
 24550                           ;usb_device.c: 450: }
 24551                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24552                           
 24553                           ; BSR set to: 0
 24554                           
 24555                           ; BSR set to: 0
 24556  00297E  B465               	btfsc	3941,2,c	;volatile
 24557                           
 24558                           ; BSR set to: 0
 24559  002980  A464               	btfss	3940,2,c	;volatile
 24560  002982  D003               	goto	i2l1871
 24561                           
 24562                           ; BSR set to: 0
 24563                           ;usb_device.c: 455: {
 24564                           ;usb_device.c: 456: (UIR &= 0xFB);
 24565  002984  9465               	bcf	3941,2,c	;volatile
 24566                           
 24567                           ; BSR set to: 0
 24568                           ;usb_device.c: 457: USBWakeFromSuspend();
 24569  002986  ECAD  F02B         	call	_USBWakeFromSuspend	;wreg free
 24570  00298A                     i2l1871:
 24571                           
 24572                           ;usb_device.c: 458: }
 24573                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24574  00298A  A260               	btfss	3936,1,c	;volatile
 24575  00298C  D002               	goto	i2l1872
 24576                           
 24577                           ;usb_device.c: 464: {
 24578                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24579  00298E  94A4               	bcf	4004,2,c	;volatile
 24580                           
 24581                           ;usb_device.c: 466: return;
 24582  002990  0012               	return	
 24583  002992                     i2l1872:
 24584                           
 24585                           ;usb_device.c: 467: }
 24586                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24587  002992  B065               	btfsc	3941,0,c	;volatile
 24588  002994  A064               	btfss	3940,0,c	;volatile
 24589  002996  D007               	goto	i2l1874
 24590                           
 24591                           ;usb_device.c: 480: {
 24592                           ;usb_device.c: 481: USBDeviceInit();
 24593  002998  ECE5  F015         	call	i2_USBDeviceInit	;wreg free
 24594                           
 24595                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24596  00299C  84A3               	bsf	4003,2,c	;volatile
 24597                           
 24598                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24599  00299E  0E04               	movlw	4
 24600  0029A0  0100               	movlb	0	; () banked
 24601  0029A2  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24602                           
 24603                           ; BSR set to: 0
 24604                           ;usb_device.c: 489: (UIR &= 0xFE);
 24605  0029A4  9065               	bcf	3941,0,c	;volatile
 24606  0029A6                     i2l1874:
 24607                           
 24608                           ;usb_device.c: 490: }
 24609                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24610                           
 24611                           ; BSR set to: 0
 24612  0029A6  B865               	btfsc	3941,4,c	;volatile
 24613  0029A8  A864               	btfss	3940,4,c	;volatile
 24614  0029AA  D003               	goto	i2l1875
 24615                           
 24616                           ;usb_device.c: 496: {
 24617                           ;usb_device.c: 497: USBSuspend();
 24618  0029AC  EC37  F02C         	call	_USBSuspend	;wreg free
 24619                           
 24620                           ;usb_device.c: 498: (UIR &= 0xEF);
 24621  0029B0  9865               	bcf	3941,4,c	;volatile
 24622  0029B2                     i2l1875:
 24623                           
 24624                           ;usb_device.c: 499: }
 24625                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24626  0029B2  AC65               	btfss	3941,6,c	;volatile
 24627  0029B4  D018               	goto	i2l1879
 24628                           
 24629                           ;usb_device.c: 502: {
 24630                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24631  0029B6  AC64               	btfss	3940,6,c	;volatile
 24632  0029B8  D00E               	goto	i2l1877
 24633                           
 24634                           ;usb_device.c: 504: {
 24635                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24636  0029BA  0E00               	movlw	0
 24637  0029BC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24638  0029BE  0E73               	movlw	115
 24639  0029C0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24640  0029C2  0E00               	movlw	0
 24641  0029C4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24642  0029C6  0E00               	movlw	0
 24643  0029C8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24644  0029CA  0E00               	movlw	0
 24645  0029CC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24646  0029CE  0E01               	movlw	1
 24647  0029D0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24648  0029D2  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24649  0029D6                     i2l1877:
 24650                           
 24651                           ;usb_device.c: 506: }
 24652                           ;usb_device.c: 507: (UIR &= 0xBF);
 24653  0029D6  9C65               	bcf	3941,6,c	;volatile
 24654                           
 24655                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24656  0029D8  5051               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24657  0029DA  A4D8               	btfss	status,2,c
 24658                           
 24659                           ;usb_device.c: 513: {
 24660                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24661  0029DC  0651               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24662                           
 24663                           ;usb_device.c: 515: }
 24664                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24665  0029DE  5051               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24666  0029E0  B4D8               	btfsc	status,2,c
 24667                           
 24668                           ;usb_device.c: 522: {
 24669                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24670  0029E2  ECC0  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24671  0029E6                     i2l1879:
 24672                           
 24673                           ;usb_device.c: 524: }
 24674                           ;usb_device.c: 525: }
 24675                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24676  0029E6  BA65               	btfsc	3941,5,c	;volatile
 24677  0029E8  AA64               	btfss	3940,5,c	;volatile
 24678  0029EA  D002               	goto	i2l1880
 24679                           
 24680                           ;usb_device.c: 528: {
 24681                           ;usb_device.c: 529: USBStallHandler();
 24682  0029EC  ECF0  F029         	call	_USBStallHandler	;wreg free
 24683  0029F0                     i2l1880:
 24684                           
 24685                           ;usb_device.c: 530: }
 24686                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24687  0029F0  B265               	btfsc	3941,1,c	;volatile
 24688  0029F2  A264               	btfss	3940,1,c	;volatile
 24689  0029F4  D00F               	goto	i2l1881
 24690                           
 24691                           ;usb_device.c: 533: {
 24692                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24693  0029F6  0E7F               	movlw	127
 24694  0029F8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24695  0029FA  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24696  0029FC  0E00               	movlw	0
 24697  0029FE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24698  002A00  0E00               	movlw	0
 24699  002A02  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24700  002A04  0E00               	movlw	0
 24701  002A06  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24702  002A08  0E01               	movlw	1
 24703  002A0A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24704  002A0C  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24705                           
 24706                           ;usb_device.c: 535: {UEIR = 0;};
 24707  002A10  0E00               	movlw	0
 24708  002A12  6E67               	movwf	3943,c	;volatile
 24709  002A14                     i2l1881:
 24710                           
 24711                           ;usb_device.c: 536: }
 24712                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24713  002A14  0E04               	movlw	4
 24714  002A16  0100               	movlb	0	; () banked
 24715  002A18  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24716  002A1A  D002               	goto	i2l1882
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;usb_device.c: 544: {
 24720                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24721  002A1C  94A4               	bcf	4004,2,c	;volatile
 24722                           
 24723                           ;usb_device.c: 546: return;
 24724  002A1E  0012               	return	
 24725  002A20                     i2l1882:
 24726                           
 24727                           ; BSR set to: 0
 24728                           ;usb_device.c: 547: }
 24729                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24730  002A20  A664               	btfss	3940,3,c	;volatile
 24731  002A22  D039               	goto	i2u1081_40
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;usb_device.c: 553: {
 24735                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24736  002A24  0E00               	movlw	0
 24737  002A26  6E1F               	movwf	USBDeviceTasks@i,c
 24738  002A28                     i2l11918:
 24739                           
 24740                           ; BSR set to: 0
 24741  002A28  0E03               	movlw	3
 24742  002A2A  641F               	cpfsgt	USBDeviceTasks@i,c
 24743  002A2C  D001               	goto	i2l1884
 24744  002A2E  D033               	goto	i2u1081_40
 24745  002A30                     i2l1884:
 24746                           
 24747                           ;usb_device.c: 555: {
 24748                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24749  002A30  A665               	btfss	3941,3,c	;volatile
 24750  002A32  D031               	goto	i2u1081_40
 24751                           
 24752                           ;usb_device.c: 557: {
 24753                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24754  002A34  CF61 F05A          	movff	3937,_USTATcopy	;volatile
 24755                           
 24756                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24757  002A38  305A               	rrcf	_USTATcopy,w,c	;volatile
 24758  002A3A  32E8               	rrcf	wreg,f,c
 24759  002A3C  32E8               	rrcf	wreg,f,c
 24760  002A3E  0B0F               	andlw	15
 24761  002A40  6E53               	movwf	_endpoint_number,c	;volatile
 24762                           
 24763                           ;usb_device.c: 562: (UIR &= 0xF7);
 24764  002A42  9665               	bcf	3941,3,c	;volatile
 24765                           
 24766                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24767  002A44  B45A               	btfsc	_USTATcopy,2,c	;volatile
 24768  002A46  D007               	goto	i2l1887
 24769                           
 24770                           ;usb_device.c: 567: {
 24771                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24772  002A48  5053               	movf	_endpoint_number,w,c	;volatile
 24773  002A4A  0D01               	mullw	1
 24774  002A4C  0ED0               	movlw	low _ep_data_out
 24775  002A4E  24F3               	addwf	prodl,w,c
 24776  002A50  6ED9               	movwf	fsr2l,c
 24777  002A52  0E00               	movlw	high _ep_data_out
 24778  002A54  D006               	goto	L24
 24779  002A56                     i2l1887:
 24780                           
 24781                           ;usb_device.c: 570: else
 24782                           ;usb_device.c: 571: {
 24783                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24784                           
 24785                           ; BSR set to: 0
 24786  002A56  5053               	movf	_endpoint_number,w,c	;volatile
 24787  002A58  0D01               	mullw	1
 24788  002A5A  0ED3               	movlw	low _ep_data_in
 24789  002A5C  24F3               	addwf	prodl,w,c
 24790  002A5E  6ED9               	movwf	fsr2l,c
 24791  002A60  0E00               	movlw	high _ep_data_in
 24792  002A62                     L24:
 24793  002A62  20F4               	addwfc	prodh,w,c
 24794  002A64  6EDA               	movwf	fsr2h,c
 24795  002A66  0100               	movlb	0	; () banked
 24796  002A68  70DF               	btg	indf2,0,c
 24797                           
 24798                           ; BSR set to: 0
 24799                           ;usb_device.c: 573: }
 24800                           ;usb_device.c: 577: if(endpoint_number == 0)
 24801                           
 24802                           ; BSR set to: 0
 24803  002A6A  5053               	movf	_endpoint_number,w,c	;volatile
 24804  002A6C  A4D8               	btfss	status,2,c
 24805  002A6E  D003               	goto	i2l1889
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;usb_device.c: 578: {
 24809                           ;usb_device.c: 579: USBCtrlEPService();
 24810  002A70  EC90  F01C         	call	_USBCtrlEPService	;wreg free
 24811                           
 24812                           ;usb_device.c: 580: }
 24813  002A74  D00E               	goto	i2l1891
 24814  002A76                     i2l1889:
 24815                           
 24816                           ;usb_device.c: 581: else
 24817                           ;usb_device.c: 582: {
 24818                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24819  002A76  0E00               	movlw	0
 24820  002A78  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24821  002A7A  0E72               	movlw	114
 24822  002A7C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24823  002A7E  0E5A               	movlw	low _USTATcopy
 24824  002A80  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24825  002A82  0E00               	movlw	high _USTATcopy
 24826  002A84  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24827  002A86  0E00               	movlw	0
 24828  002A88  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24829  002A8A  0E00               	movlw	0
 24830  002A8C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24831  002A8E  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24832  002A92                     i2l1891:
 24833  002A92  2A1F               	incf	USBDeviceTasks@i,f,c
 24834  002A94  D7C9               	goto	i2l11918
 24835  002A96                     i2u1081_40:
 24836                           
 24837                           ;usb_device.c: 589: }
 24838                           ;usb_device.c: 590: }
 24839                           ;usb_device.c: 591: }
 24840                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24841  002A96  94A4               	bcf	4004,2,c	;volatile
 24842  002A98  0012               	return		;funcret
 24843  002A9A                     __end_of_USBDeviceTasks:
 24844                           	opt stack 0
 24845                           pclatu	equ	0xFFB
 24846                           pclath	equ	0xFFA
 24847                           tblptru	equ	0xFF8
 24848                           tblptrh	equ	0xFF7
 24849                           tblptrl	equ	0xFF6
 24850                           tablat	equ	0xFF5
 24851                           prodh	equ	0xFF4
 24852                           prodl	equ	0xFF3
 24853                           intcon	equ	0xFF2
 24854                           intcon2	equ	0xFF1
 24855                           intcon3	equ	0xFF0
 24856                           indf0	equ	0xFEF
 24857                           postinc0	equ	0xFEE
 24858                           fsr0h	equ	0xFEA
 24859                           fsr0l	equ	0xFE9
 24860                           wreg	equ	0xFE8
 24861                           indf1	equ	0xFE7
 24862                           postdec1	equ	0xFE5
 24863                           fsr1h	equ	0xFE2
 24864                           fsr1l	equ	0xFE1
 24865                           indf2	equ	0xFDF
 24866                           postinc2	equ	0xFDE
 24867                           postdec2	equ	0xFDD
 24868                           plusw2	equ	0xFDB
 24869                           fsr2h	equ	0xFDA
 24870                           fsr2l	equ	0xFD9
 24871                           status	equ	0xFD8
 24872                           
 24873 ;; *************** function i2_USBDeviceInit *****************
 24874 ;; Defined at:
 24875 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24876 ;; Parameters:    Size  Location     Type
 24877 ;;		None
 24878 ;; Auto vars:     Size  Location     Type
 24879 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      void 
 24882 ;; Registers used:
 24883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24889 ;;      Params:         0       0       0       0       0       0       0       0       0
 24890 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24892 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24893 ;;Total ram usage:        1 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:    1
 24896 ;; This function calls:
 24897 ;;		i2_memset
 24898 ;; This function is called by:
 24899 ;;		_USBDeviceTasks
 24900 ;; This function uses a non-reentrant model
 24901 ;;
 24902                           
 24903                           	psect	text109
 24904  002BCA                     __ptext109:
 24905                           	opt stack 0
 24906  002BCA                     i2_USBDeviceInit:
 24907                           	opt stack 18
 24908                           
 24909                           ;usb_device.c: 239: uint8_t i;
 24910                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24911                           
 24912                           ;incstack = 0
 24913  002BCA  94A3               	bcf	4003,2,c	;volatile
 24914                           
 24915                           ;usb_device.c: 244: {UEIR = 0;};
 24916  002BCC  0E00               	movlw	0
 24917  002BCE  6E67               	movwf	3943,c	;volatile
 24918                           
 24919                           ;usb_device.c: 247: {UIR = 0;};
 24920  002BD0  0E00               	movlw	0
 24921  002BD2  6E65               	movwf	3941,c	;volatile
 24922                           
 24923                           ;usb_device.c: 250: UEP0 = 0;
 24924  002BD4  0E00               	movlw	0
 24925  002BD6  6E6A               	movwf	3946,c	;volatile
 24926                           
 24927                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24928  002BD8  0E6B               	movlw	107
 24929  002BDA  6E01               	movwf	i2memset@p1,c
 24930  002BDC  0E0F               	movlw	15
 24931  002BDE  6E02               	movwf	i2memset@p1+1,c
 24932  002BE0  0E00               	movlw	0
 24933  002BE2  6E04               	movwf	i2memset@c+1,c
 24934  002BE4  0E00               	movlw	0
 24935  002BE6  6E03               	movwf	i2memset@c,c
 24936  002BE8  0E00               	movlw	0
 24937  002BEA  6E06               	movwf	i2memset@n+1,c
 24938  002BEC  0E02               	movlw	2
 24939  002BEE  6E05               	movwf	i2memset@n,c
 24940  002BF0  EC0C  F02C         	call	i2_memset	;wreg free
 24941                           
 24942                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24943  002BF4  0E16               	movlw	22
 24944  002BF6  6E62               	movwf	3938,c	;volatile
 24945  002BF8  0E9F               	movlw	159
 24946  002BFA  6E66               	movwf	3942,c	;volatile
 24947  002BFC  0E7B               	movlw	123
 24948  002BFE  6E64               	movwf	3940,c	;volatile
 24949                           
 24950                           ;usb_device.c: 257: ;
 24951                           ;usb_device.c: 260: ;
 24952                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24953  002C00  0E00               	movlw	0
 24954  002C02  6E09               	movwf	i2USBDeviceInit@i,c
 24955  002C04                     i2l11390:
 24956  002C04  0E0B               	movlw	11
 24957  002C06  6409               	cpfsgt	i2USBDeviceInit@i,c
 24958  002C08  D001               	goto	i2l1859
 24959  002C0A  D00E               	goto	i2u1011_40
 24960  002C0C                     i2l1859:
 24961                           
 24962                           ;usb_device.c: 264: {
 24963                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24964  002C0C  5009               	movf	i2USBDeviceInit@i,w,c
 24965  002C0E  0D04               	mullw	4
 24966  002C10  0E00               	movlw	0
 24967  002C12  24F3               	addwf	prodl,w,c
 24968  002C14  6ED9               	movwf	fsr2l,c
 24969  002C16  0E04               	movlw	4
 24970  002C18  20F4               	addwfc	prodh,w,c
 24971  002C1A  6EDA               	movwf	fsr2h,c
 24972  002C1C  6ADE               	clrf	postinc2,c
 24973  002C1E  6ADE               	clrf	postinc2,c
 24974  002C20  6ADE               	clrf	postinc2,c
 24975  002C22  6ADD               	clrf	postdec2,c
 24976  002C24  2A09               	incf	i2USBDeviceInit@i,f,c
 24977  002C26  D7EE               	goto	i2l11390
 24978  002C28                     i2u1011_40:
 24979                           
 24980                           ;usb_device.c: 266: }
 24981                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24982  002C28  8C60               	bsf	3936,6,c	;volatile
 24983                           
 24984                           ;usb_device.c: 272: UADDR = 0x00;
 24985  002C2A  0E00               	movlw	0
 24986  002C2C  6E63               	movwf	3939,c	;volatile
 24987                           
 24988                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24989  002C2E  9860               	bcf	3936,4,c	;volatile
 24990                           
 24991                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24992  002C30  9C60               	bcf	3936,6,c	;volatile
 24993                           
 24994                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24995  002C32  D00A               	goto	i2l1861
 24996  002C34                     
 24997                           ;usb_device.c: 282: {
 24998                           ;usb_device.c: 283: (UIR &= 0xF7);
 24999  002C34  9665               	bcf	3941,3,c	;volatile
 25000                           
 25001                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 25002  002C36  0E00               	movlw	0
 25003  002C38  0100               	movlb	0	; () banked
 25004  002C3A  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25005                           
 25006                           ; BSR set to: 0
 25007                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 25008  002C3C  0E00               	movlw	0
 25009  002C3E  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25010                           
 25011                           ; BSR set to: 0
 25012                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 25013  002C40  0E00               	movlw	0
 25014  002C42  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25015  002C44  0E00               	movlw	0
 25016  002C46  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25017  002C48                     i2l1861:
 25018                           
 25019                           ; BSR set to: 0
 25020  002C48  B665               	btfsc	3941,3,c	;volatile
 25021  002C4A  D7F4               	goto	i2l1862
 25022                           
 25023                           ;usb_device.c: 288: }
 25024                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 25025  002C4C  0E01               	movlw	1
 25026  002C4E  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25027                           
 25028                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 25029  002C50  0E01               	movlw	1
 25030  002C52  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25031                           
 25032                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25033  002C54  0E00               	movlw	0
 25034  002C56  6E4D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25035                           
 25036                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25037  002C58  0E00               	movlw	0
 25038  002C5A  6E4C               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25039                           
 25040                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25041  002C5C  0E00               	movlw	0
 25042  002C5E  0101               	movlb	1	; () banked
 25043  002C60  6F42               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25044                           
 25045                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25046  002C62  0E00               	movlw	0
 25047  002C64  6E09               	movwf	i2USBDeviceInit@i,c
 25048  002C66                     i2l11418:
 25049                           
 25050                           ; BSR set to: 1
 25051  002C66  0E02               	movlw	2
 25052  002C68  6409               	cpfsgt	i2USBDeviceInit@i,c
 25053  002C6A  D001               	goto	i2l1864
 25054  002C6C  D02E               	goto	i2u1014_40
 25055  002C6E                     i2l1864:
 25056                           
 25057                           ;usb_device.c: 302: {
 25058                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25059                           
 25060                           ; BSR set to: 1
 25061  002C6E  5009               	movf	i2USBDeviceInit@i,w,c
 25062  002C70  0D02               	mullw	2
 25063  002C72  0ECA               	movlw	low _pBDTEntryIn
 25064  002C74  24F3               	addwf	prodl,w,c
 25065  002C76  6ED9               	movwf	fsr2l,c
 25066  002C78  0E00               	movlw	high _pBDTEntryIn
 25067  002C7A  20F4               	addwfc	prodh,w,c
 25068  002C7C  6EDA               	movwf	fsr2h,c
 25069  002C7E  0E00               	movlw	0
 25070  002C80  6EDE               	movwf	postinc2,c
 25071  002C82  0E00               	movlw	0
 25072  002C84  6EDD               	movwf	postdec2,c
 25073                           
 25074                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25075  002C86  5009               	movf	i2USBDeviceInit@i,w,c
 25076  002C88  0D02               	mullw	2
 25077  002C8A  0E20               	movlw	low _pBDTEntryOut
 25078  002C8C  24F3               	addwf	prodl,w,c
 25079  002C8E  6ED9               	movwf	fsr2l,c
 25080  002C90  0E01               	movlw	high _pBDTEntryOut
 25081  002C92  20F4               	addwfc	prodh,w,c
 25082  002C94  6EDA               	movwf	fsr2h,c
 25083  002C96  0E00               	movlw	0
 25084  002C98  6EDE               	movwf	postinc2,c
 25085  002C9A  0E00               	movlw	0
 25086  002C9C  6EDD               	movwf	postdec2,c
 25087                           
 25088                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25089  002C9E  5009               	movf	i2USBDeviceInit@i,w,c
 25090  002CA0  0D01               	mullw	1
 25091  002CA2  0ED3               	movlw	low _ep_data_in
 25092  002CA4  24F3               	addwf	prodl,w,c
 25093  002CA6  6ED9               	movwf	fsr2l,c
 25094  002CA8  0E00               	movlw	high _ep_data_in
 25095  002CAA  20F4               	addwfc	prodh,w,c
 25096  002CAC  6EDA               	movwf	fsr2h,c
 25097  002CAE  0E00               	movlw	0
 25098  002CB0  6EDF               	movwf	indf2,c
 25099                           
 25100                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25101  002CB2  5009               	movf	i2USBDeviceInit@i,w,c
 25102  002CB4  0D01               	mullw	1
 25103  002CB6  0ED0               	movlw	low _ep_data_out
 25104  002CB8  24F3               	addwf	prodl,w,c
 25105  002CBA  6ED9               	movwf	fsr2l,c
 25106  002CBC  0E00               	movlw	high _ep_data_out
 25107  002CBE  20F4               	addwfc	prodh,w,c
 25108  002CC0  6EDA               	movwf	fsr2h,c
 25109  002CC2  0E00               	movlw	0
 25110  002CC4  6EDF               	movwf	indf2,c
 25111  002CC6  2A09               	incf	i2USBDeviceInit@i,f,c
 25112  002CC8  D7CE               	goto	i2l11418
 25113  002CCA                     i2u1014_40:
 25114                           
 25115                           ;usb_device.c: 307: }
 25116                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25117  002CCA  0E08               	movlw	8
 25118  002CCC  0100               	movlb	0	; () banked
 25119  002CCE  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 25120  002CD0  0E04               	movlw	4
 25121  002CD2  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25125  002CD4  0E16               	movlw	22
 25126  002CD6  6E6A               	movwf	3946,c	;volatile
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25130  002CD8  0E04               	movlw	4
 25131  002CDA  0104               	movlb	4	; () banked
 25132  002CDC  6F03               	movwf	3,b	;volatile
 25133  002CDE  0E30               	movlw	48
 25134  002CE0  6F02               	movwf	2,b	;volatile
 25135                           
 25136                           ; BSR set to: 4
 25137                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25138  002CE2  0E08               	movlw	8
 25139  002CE4  6F01               	movwf	1,b	;volatile
 25140                           
 25141                           ; BSR set to: 4
 25142                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25143  002CE6  0E04               	movlw	4
 25144  002CE8  6F00               	movwf	0,b	;volatile
 25145                           
 25146                           ; BSR set to: 4
 25147                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25148  002CEA  8F00               	bsf	0,7,b	;volatile
 25149                           
 25150                           ; BSR set to: 4
 25151                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25152  002CEC  0E00               	movlw	0
 25153  002CEE  6E5B               	movwf	_USBActiveConfiguration,c	;volatile
 25154                           
 25155                           ; BSR set to: 4
 25156                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25157  002CF0  0E00               	movlw	0
 25158  002CF2  0100               	movlb	0	; () banked
 25159  002CF4  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25160                           
 25161                           ; BSR set to: 0
 25162  002CF6  0012               	return		;funcret
 25163  002CF8                     __end_ofi2_USBDeviceInit:
 25164                           	opt stack 0
 25165                           pclatu	equ	0xFFB
 25166                           pclath	equ	0xFFA
 25167                           tblptru	equ	0xFF8
 25168                           tblptrh	equ	0xFF7
 25169                           tblptrl	equ	0xFF6
 25170                           tablat	equ	0xFF5
 25171                           prodh	equ	0xFF4
 25172                           prodl	equ	0xFF3
 25173                           intcon	equ	0xFF2
 25174                           intcon2	equ	0xFF1
 25175                           intcon3	equ	0xFF0
 25176                           indf0	equ	0xFEF
 25177                           postinc0	equ	0xFEE
 25178                           fsr0h	equ	0xFEA
 25179                           fsr0l	equ	0xFE9
 25180                           wreg	equ	0xFE8
 25181                           indf1	equ	0xFE7
 25182                           postdec1	equ	0xFE5
 25183                           fsr1h	equ	0xFE2
 25184                           fsr1l	equ	0xFE1
 25185                           indf2	equ	0xFDF
 25186                           postinc2	equ	0xFDE
 25187                           postdec2	equ	0xFDD
 25188                           plusw2	equ	0xFDB
 25189                           fsr2h	equ	0xFDA
 25190                           fsr2l	equ	0xFD9
 25191                           status	equ	0xFD8
 25192                           
 25193 ;; *************** function _USBWakeFromSuspend *****************
 25194 ;; Defined at:
 25195 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25196 ;; Parameters:    Size  Location     Type
 25197 ;;		None
 25198 ;; Auto vars:     Size  Location     Type
 25199 ;;		None
 25200 ;; Return value:  Size  Location     Type
 25201 ;;                  1    wreg      void 
 25202 ;; Registers used:
 25203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25204 ;; Tracked objects:
 25205 ;;		On entry : 0/0
 25206 ;;		On exit  : 0/0
 25207 ;;		Unchanged: 0/0
 25208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25209 ;;      Params:         0       0       0       0       0       0       0       0       0
 25210 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25212 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25213 ;;Total ram usage:        0 bytes
 25214 ;; Hardware stack levels used:    1
 25215 ;; Hardware stack levels required when called:    5
 25216 ;; This function calls:
 25217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25218 ;; This function is called by:
 25219 ;;		_USBDeviceTasks
 25220 ;; This function uses a non-reentrant model
 25221 ;;
 25222                           
 25223                           	psect	text110
 25224  00575A                     __ptext110:
 25225                           	opt stack 0
 25226  00575A                     _USBWakeFromSuspend:
 25227                           	opt stack 14
 25228                           
 25229                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25230                           
 25231                           ; BSR set to: 0
 25232                           ;incstack = 0
 25233  00575A  0E00               	movlw	0
 25234  00575C  0101               	movlb	1	; () banked
 25235  00575E  6F42               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25236                           
 25237                           ; BSR set to: 1
 25238                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25239  005760  0E00               	movlw	0
 25240  005762  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25241  005764  0E74               	movlw	116
 25242  005766  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25243  005768  0E00               	movlw	0
 25244  00576A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25245  00576C  0E00               	movlw	0
 25246  00576E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25247  005770  0E00               	movlw	0
 25248  005772  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25249  005774  0E00               	movlw	0
 25250  005776  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25251  005778  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25252                           
 25253                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25254  00577C  9260               	bcf	3936,1,c	;volatile
 25255                           
 25256                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25257  00577E  9464               	bcf	3940,2,c	;volatile
 25258                           
 25259                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25260  005780  D001               	goto	i2l2030
 25261  005782                     
 25262                           ;usb_device.c: 1977: {
 25263                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25264  005782  9465               	bcf	3941,2,c	;volatile
 25265  005784                     i2l2030:
 25266  005784  A465               	btfss	3941,2,c	;volatile
 25267  005786  0012               	return	
 25268  005788  D7FC               	goto	i2l2031
 25269  00578A                     __end_of_USBWakeFromSuspend:
 25270                           	opt stack 0
 25271                           pclatu	equ	0xFFB
 25272                           pclath	equ	0xFFA
 25273                           tblptru	equ	0xFF8
 25274                           tblptrh	equ	0xFF7
 25275                           tblptrl	equ	0xFF6
 25276                           tablat	equ	0xFF5
 25277                           prodh	equ	0xFF4
 25278                           prodl	equ	0xFF3
 25279                           intcon	equ	0xFF2
 25280                           intcon2	equ	0xFF1
 25281                           intcon3	equ	0xFF0
 25282                           indf0	equ	0xFEF
 25283                           postinc0	equ	0xFEE
 25284                           fsr0h	equ	0xFEA
 25285                           fsr0l	equ	0xFE9
 25286                           wreg	equ	0xFE8
 25287                           indf1	equ	0xFE7
 25288                           postdec1	equ	0xFE5
 25289                           fsr1h	equ	0xFE2
 25290                           fsr1l	equ	0xFE1
 25291                           indf2	equ	0xFDF
 25292                           postinc2	equ	0xFDE
 25293                           postdec2	equ	0xFDD
 25294                           plusw2	equ	0xFDB
 25295                           fsr2h	equ	0xFDA
 25296                           fsr2l	equ	0xFD9
 25297                           status	equ	0xFD8
 25298                           
 25299 ;; *************** function _USBSuspend *****************
 25300 ;; Defined at:
 25301 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;		None
 25304 ;; Auto vars:     Size  Location     Type
 25305 ;;		None
 25306 ;; Return value:  Size  Location     Type
 25307 ;;                  1    wreg      void 
 25308 ;; Registers used:
 25309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25310 ;; Tracked objects:
 25311 ;;		On entry : 0/0
 25312 ;;		On exit  : 0/0
 25313 ;;		Unchanged: 0/0
 25314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25315 ;;      Params:         0       0       0       0       0       0       0       0       0
 25316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25319 ;;Total ram usage:        0 bytes
 25320 ;; Hardware stack levels used:    1
 25321 ;; Hardware stack levels required when called:    5
 25322 ;; This function calls:
 25323 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25324 ;; This function is called by:
 25325 ;;		_USBDeviceTasks
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text111
 25330  00586E                     __ptext111:
 25331                           	opt stack 0
 25332  00586E                     _USBSuspend:
 25333                           	opt stack 14
 25334                           
 25335                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 25336                           
 25337                           ;incstack = 0
 25338  00586E  8464               	bsf	3940,2,c	;volatile
 25339                           
 25340                           ;usb_device.c: 1915: (UIR &= 0xEF);
 25341  005870  9865               	bcf	3941,4,c	;volatile
 25342                           
 25343                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 25344  005872  8260               	bsf	3936,1,c	;volatile
 25345                           
 25346                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25347  005874  0E01               	movlw	1
 25348  005876  0101               	movlb	1	; () banked
 25349  005878  6F42               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25353  00587A  0E00               	movlw	0
 25354  00587C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25355  00587E  0E75               	movlw	117
 25356  005880  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25357  005882  0E00               	movlw	0
 25358  005884  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25359  005886  0E00               	movlw	0
 25360  005888  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25361  00588A  0E00               	movlw	0
 25362  00588C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25363  00588E  0E00               	movlw	0
 25364  005890  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25365  005892  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25366  005896  0012               	return		;funcret
 25367  005898                     __end_of_USBSuspend:
 25368                           	opt stack 0
 25369                           pclatu	equ	0xFFB
 25370                           pclath	equ	0xFFA
 25371                           tblptru	equ	0xFF8
 25372                           tblptrh	equ	0xFF7
 25373                           tblptrl	equ	0xFF6
 25374                           tablat	equ	0xFF5
 25375                           prodh	equ	0xFF4
 25376                           prodl	equ	0xFF3
 25377                           intcon	equ	0xFF2
 25378                           intcon2	equ	0xFF1
 25379                           intcon3	equ	0xFF0
 25380                           indf0	equ	0xFEF
 25381                           postinc0	equ	0xFEE
 25382                           fsr0h	equ	0xFEA
 25383                           fsr0l	equ	0xFE9
 25384                           wreg	equ	0xFE8
 25385                           indf1	equ	0xFE7
 25386                           postdec1	equ	0xFE5
 25387                           fsr1h	equ	0xFE2
 25388                           fsr1l	equ	0xFE1
 25389                           indf2	equ	0xFDF
 25390                           postinc2	equ	0xFDE
 25391                           postdec2	equ	0xFDD
 25392                           plusw2	equ	0xFDB
 25393                           fsr2h	equ	0xFDA
 25394                           fsr2l	equ	0xFD9
 25395                           status	equ	0xFD8
 25396                           
 25397 ;; *************** function _USBStallHandler *****************
 25398 ;; Defined at:
 25399 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25400 ;; Parameters:    Size  Location     Type
 25401 ;;		None
 25402 ;; Auto vars:     Size  Location     Type
 25403 ;;		None
 25404 ;; Return value:  Size  Location     Type
 25405 ;;                  1    wreg      void 
 25406 ;; Registers used:
 25407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25408 ;; Tracked objects:
 25409 ;;		On entry : 0/0
 25410 ;;		On exit  : 0/0
 25411 ;;		Unchanged: 0/0
 25412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25413 ;;      Params:         0       0       0       0       0       0       0       0       0
 25414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25415 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25416 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25417 ;;Total ram usage:        1 bytes
 25418 ;; Hardware stack levels used:    1
 25419 ;; This function calls:
 25420 ;;		Nothing
 25421 ;; This function is called by:
 25422 ;;		_USBDeviceTasks
 25423 ;; This function uses a non-reentrant model
 25424 ;;
 25425                           
 25426                           	psect	text112
 25427  0053E0                     __ptext112:
 25428                           	opt stack 0
 25429  0053E0                     _USBStallHandler:
 25430                           	opt stack 19
 25431                           
 25432                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25433                           
 25434                           ;incstack = 0
 25435  0053E0  A06A               	btfss	3946,0,c	;volatile
 25436  0053E2  D01D               	goto	i2l2022
 25437                           
 25438                           ;usb_device.c: 1859: {
 25439                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25440  0053E4  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25441  0053E8  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25442  0053EC  0E80               	movlw	128
 25443  0053EE  18DE               	xorwf	postinc2,w,c
 25444  0053F0  A4D8               	btfss	status,2,c
 25445  0053F2  D014               	goto	i2l2023
 25446  0053F4  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25447  0053F8  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25448  0053FC  0E84               	movlw	132
 25449  0053FE  18DE               	xorwf	postinc2,w,c
 25450  005400  A4D8               	btfss	status,2,c
 25451  005402  D00C               	goto	i2l2023
 25452                           
 25453                           ;usb_device.c: 1862: {
 25454                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25455  005404  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25456  005408  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25457  00540C  0E0C               	movlw	12
 25458  00540E  6EDF               	movwf	indf2,c
 25459                           
 25460                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25461  005410  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25462  005414  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25463  005418  0E00               	movlw	0
 25464  00541A  8EDB               	bsf	plusw2,7,c
 25465  00541C                     i2l2023:
 25466                           
 25467                           ;usb_device.c: 1866: }
 25468                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25469  00541C  906A               	bcf	3946,0,c	;volatile
 25470  00541E                     i2l2022:
 25471                           
 25472                           ;usb_device.c: 1868: }
 25473                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25474  00541E  9A65               	bcf	3941,5,c	;volatile
 25475  005420  0012               	return		;funcret
 25476  005422                     __end_of_USBStallHandler:
 25477                           	opt stack 0
 25478                           pclatu	equ	0xFFB
 25479                           pclath	equ	0xFFA
 25480                           tblptru	equ	0xFF8
 25481                           tblptrh	equ	0xFF7
 25482                           tblptrl	equ	0xFF6
 25483                           tablat	equ	0xFF5
 25484                           prodh	equ	0xFF4
 25485                           prodl	equ	0xFF3
 25486                           intcon	equ	0xFF2
 25487                           intcon2	equ	0xFF1
 25488                           intcon3	equ	0xFF0
 25489                           indf0	equ	0xFEF
 25490                           postinc0	equ	0xFEE
 25491                           fsr0h	equ	0xFEA
 25492                           fsr0l	equ	0xFE9
 25493                           wreg	equ	0xFE8
 25494                           indf1	equ	0xFE7
 25495                           postdec1	equ	0xFE5
 25496                           fsr1h	equ	0xFE2
 25497                           fsr1l	equ	0xFE1
 25498                           indf2	equ	0xFDF
 25499                           postinc2	equ	0xFDE
 25500                           postdec2	equ	0xFDD
 25501                           plusw2	equ	0xFDB
 25502                           fsr2h	equ	0xFDA
 25503                           fsr2l	equ	0xFD9
 25504                           status	equ	0xFD8
 25505                           
 25506 ;; *************** function _USBCtrlEPService *****************
 25507 ;; Defined at:
 25508 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25509 ;; Parameters:    Size  Location     Type
 25510 ;;		None
 25511 ;; Auto vars:     Size  Location     Type
 25512 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25513 ;; Return value:  Size  Location     Type
 25514 ;;                  1    wreg      void 
 25515 ;; Registers used:
 25516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25517 ;; Tracked objects:
 25518 ;;		On entry : 0/0
 25519 ;;		On exit  : 0/0
 25520 ;;		Unchanged: 0/0
 25521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25522 ;;      Params:         0       0       0       0       0       0       0       0       0
 25523 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25524 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25525 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25526 ;;Total ram usage:        3 bytes
 25527 ;; Hardware stack levels used:    1
 25528 ;; Hardware stack levels required when called:    8
 25529 ;; This function calls:
 25530 ;;		_USBCtrlTrfInHandler
 25531 ;;		_USBCtrlTrfOutHandler
 25532 ;;		_USBCtrlTrfSetupHandler
 25533 ;; This function is called by:
 25534 ;;		_USBDeviceTasks
 25535 ;; This function uses a non-reentrant model
 25536 ;;
 25537                           
 25538                           	psect	text113
 25539  003920                     __ptext113:
 25540                           	opt stack 0
 25541  003920                     _USBCtrlEPService:
 25542                           	opt stack 11
 25543                           
 25544                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25545                           
 25546                           ;incstack = 0
 25547  003920  0E2D               	movlw	45
 25548  003922  6E51               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25549                           
 25550                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25551  003924  C05A  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25552  003928  0EFD               	movlw	253
 25553  00392A  161C               	andwf	??_USBCtrlEPService,f,c
 25554  00392C  A4D8               	btfss	status,2,c
 25555  00392E  D057               	goto	i2l2036
 25556                           
 25557                           ;usb_device.c: 2013: {
 25558                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25559  003930  C05A  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25560  003934  90D8               	bcf	status,0,c
 25561  003936  321C               	rrcf	??_USBCtrlEPService,f,c
 25562  003938  0E3F               	movlw	63
 25563  00393A  161C               	andwf	??_USBCtrlEPService,f,c
 25564  00393C  501C               	movf	??_USBCtrlEPService,w,c
 25565  00393E  0D04               	mullw	4
 25566  003940  0E00               	movlw	0
 25567  003942  24F3               	addwf	prodl,w,c
 25568  003944  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 25569  003946  0E04               	movlw	4
 25570  003948  20F4               	addwfc	prodh,w,c
 25571  00394A  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25572                           
 25573                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25574  00394C  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25575  003950  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25576                           
 25577                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25578  003954  0E04               	movlw	4
 25579  003956  1A42               	xorwf	_pBDTEntryEP0OutNext,f,c
 25580                           
 25581                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25582  003958  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25583  00395C  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25584  003960  30DF               	rrcf	indf2,w,c
 25585  003962  32E8               	rrcf	wreg,f,c
 25586  003964  0B0F               	andlw	15
 25587  003966  0A0D               	xorlw	13
 25588  003968  A4D8               	btfss	status,2,c
 25589  00396A  D036               	goto	i2l2037
 25590                           
 25591                           ;usb_device.c: 2025: {
 25592                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25593                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25594  00396C  0E00               	movlw	0
 25595  00396E  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25596  003970                     i2l11352:
 25597  003970  0E07               	movlw	7
 25598  003972  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25599  003974  D001               	goto	i2l2038
 25600  003976  D023               	goto	i2u1008_40
 25601  003978                     i2l2038:
 25602                           
 25603                           ;usb_device.c: 2033: {
 25604                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25605  003978  EE20 F002          	lfsr	2,2
 25606  00397C  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 25607  00397E  26D9               	addwf	fsr2l,f,c
 25608  003980  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25609  003982  22DA               	addwfc	fsr2h,f,c
 25610  003984  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25611  003988  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25612  00398C  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25613  003990  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25614  003994  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25615  003996  0D01               	mullw	1
 25616  003998  0E30               	movlw	48
 25617  00399A  24F3               	addwf	prodl,w,c
 25618  00399C  6EE1               	movwf	fsr1l,c
 25619  00399E  0E04               	movlw	4
 25620  0039A0  20F4               	addwfc	prodh,w,c
 25621  0039A2  6EE2               	movwf	fsr1h,c
 25622  0039A4  CFDF FFE7          	movff	indf2,indf1
 25623                           
 25624                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25625  0039A8  EE20 F002          	lfsr	2,2
 25626  0039AC  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 25627  0039AE  26D9               	addwf	fsr2l,f,c
 25628  0039B0  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25629  0039B2  22DA               	addwfc	fsr2h,f,c
 25630  0039B4  2ADE               	incf	postinc2,f,c
 25631  0039B6  0E00               	movlw	0
 25632  0039B8  22DD               	addwfc	postdec2,f,c
 25633  0039BA  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25634  0039BC  D7D9               	goto	i2l11352
 25635  0039BE                     i2u1008_40:
 25636                           
 25637                           ;usb_device.c: 2036: }
 25638                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25639  0039BE  EE20 F002          	lfsr	2,2
 25640  0039C2  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 25641  0039C4  26D9               	addwf	fsr2l,f,c
 25642  0039C6  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25643  0039C8  22DA               	addwfc	fsr2h,f,c
 25644  0039CA  0E30               	movlw	48
 25645  0039CC  6EDE               	movwf	postinc2,c
 25646  0039CE  0E04               	movlw	4
 25647  0039D0  6EDD               	movwf	postdec2,c
 25648                           
 25649                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25650  0039D2  EC3D  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
 25651                           
 25652                           ;usb_device.c: 2041: }
 25653  0039D6  0012               	return	
 25654  0039D8                     i2l2037:
 25655                           
 25656                           ;usb_device.c: 2042: else
 25657                           ;usb_device.c: 2043: {
 25658                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25659  0039D8  EC67  F028         	call	_USBCtrlTrfOutHandler	;wreg free
 25660                           
 25661                           ;usb_device.c: 2046: }
 25662                           ;usb_device.c: 2047: }
 25663  0039DC  0012               	return	
 25664  0039DE                     i2l2036:
 25665                           
 25666                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25667  0039DE  505A               	movf	_USTATcopy,w,c	;volatile
 25668  0039E0  0BFD               	andlw	253
 25669  0039E2  0A04               	xorlw	4
 25670  0039E4  A4D8               	btfss	status,2,c
 25671  0039E6  0012               	return	
 25672                           
 25673                           ;usb_device.c: 2049: {
 25674                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25675  0039E8  EC6C  F01A         	call	_USBCtrlTrfInHandler	;wreg free
 25676  0039EC  0012               	return	
 25677  0039EE                     __end_of_USBCtrlEPService:
 25678                           	opt stack 0
 25679                           pclatu	equ	0xFFB
 25680                           pclath	equ	0xFFA
 25681                           tblptru	equ	0xFF8
 25682                           tblptrh	equ	0xFF7
 25683                           tblptrl	equ	0xFF6
 25684                           tablat	equ	0xFF5
 25685                           prodh	equ	0xFF4
 25686                           prodl	equ	0xFF3
 25687                           intcon	equ	0xFF2
 25688                           intcon2	equ	0xFF1
 25689                           intcon3	equ	0xFF0
 25690                           indf0	equ	0xFEF
 25691                           postinc0	equ	0xFEE
 25692                           fsr0h	equ	0xFEA
 25693                           fsr0l	equ	0xFE9
 25694                           wreg	equ	0xFE8
 25695                           indf1	equ	0xFE7
 25696                           postdec1	equ	0xFE5
 25697                           fsr1h	equ	0xFE2
 25698                           fsr1l	equ	0xFE1
 25699                           indf2	equ	0xFDF
 25700                           postinc2	equ	0xFDE
 25701                           postdec2	equ	0xFDD
 25702                           plusw2	equ	0xFDB
 25703                           fsr2h	equ	0xFDA
 25704                           fsr2l	equ	0xFD9
 25705                           status	equ	0xFD8
 25706                           
 25707 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25708 ;; Defined at:
 25709 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25710 ;; Parameters:    Size  Location     Type
 25711 ;;		None
 25712 ;; Auto vars:     Size  Location     Type
 25713 ;;		None
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  1    wreg      void 
 25716 ;; Registers used:
 25717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25723 ;;      Params:         0       0       0       0       0       0       0       0       0
 25724 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25726 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25727 ;;Total ram usage:        0 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; Hardware stack levels required when called:    7
 25730 ;; This function calls:
 25731 ;;		_USBCheckStdRequest
 25732 ;;		_USBCtrlEPServiceComplete
 25733 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25734 ;; This function is called by:
 25735 ;;		_USBCtrlEPService
 25736 ;; This function uses a non-reentrant model
 25737 ;;
 25738                           
 25739                           	psect	text114
 25740  00487A                     __ptext114:
 25741                           	opt stack 0
 25742  00487A                     _USBCtrlTrfSetupHandler:
 25743                           	opt stack 11
 25744                           
 25745                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25746                           
 25747                           ;incstack = 0
 25748  00487A  0E00               	movlw	0
 25749  00487C  6E56               	movwf	_shortPacketStatus,c	;volatile
 25750                           
 25751                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25752  00487E  0E00               	movlw	0
 25753  004880  6E50               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25754                           
 25755                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25756  004882  0E00               	movlw	0
 25757  004884  6E4D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25758                           
 25759                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25760  004886  0E00               	movlw	0
 25761  004888  6E4C               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25762                           
 25763                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25764  00488A  0E00               	movlw	0
 25765  00488C  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25766                           
 25767                           ;usb_device.c: 2107: controlTransferState = 0;
 25768  00488E  0E00               	movlw	0
 25769  004890  6E55               	movwf	_controlTransferState,c	;volatile
 25770                           
 25771                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25772  004892  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25773  004896  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25774  00489A  0E7F               	movlw	127
 25775  00489C  16DF               	andwf	indf2,f,c
 25776                           
 25777                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25778  00489E  0E04               	movlw	4
 25779  0048A0  0100               	movlb	0	; () banked
 25780  0048A2  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25781                           
 25782                           ; BSR set to: 0
 25783                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25784  0048A4  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25785  0048A8  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25786  0048AC  0E7F               	movlw	127
 25787  0048AE  16DF               	andwf	indf2,f,c
 25788                           
 25789                           ; BSR set to: 0
 25790                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25791  0048B0  0E04               	movlw	4
 25792  0048B2  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25796  0048B4  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25797  0048B8  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25798  0048BC  0E7F               	movlw	127
 25799  0048BE  16DF               	andwf	indf2,f,c
 25800                           
 25801                           ; BSR set to: 0
 25802                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25803  0048C0  0E00               	movlw	0
 25804  0048C2  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25805                           
 25806                           ; BSR set to: 0
 25807                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25808  0048C4  0E00               	movlw	0
 25809  0048C6  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25810  0048C8  0E00               	movlw	0
 25811  0048CA  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25812                           
 25813                           ; BSR set to: 0
 25814                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25815  0048CC  0E00               	movlw	0
 25816  0048CE  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25817                           
 25818                           ; BSR set to: 0
 25819                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25820  0048D0  0E00               	movlw	0
 25821  0048D2  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25822  0048D4  0E00               	movlw	0
 25823  0048D6  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;usb_device.c: 2131: USBCheckStdRequest();
 25827  0048D8  EC8A  F019         	call	_USBCheckStdRequest	;wreg free
 25828                           
 25829                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25830  0048DC  0E00               	movlw	0
 25831  0048DE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25832  0048E0  0E03               	movlw	3
 25833  0048E2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25834  0048E4  0E00               	movlw	0
 25835  0048E6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25836  0048E8  0E00               	movlw	0
 25837  0048EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25838  0048EC  0E00               	movlw	0
 25839  0048EE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25840  0048F0  0E00               	movlw	0
 25841  0048F2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25842  0048F4  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25843                           
 25844                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25845  0048F8  EC28  F018         	call	_USBCtrlEPServiceComplete	;wreg free
 25846  0048FC  0012               	return		;funcret
 25847  0048FE                     __end_of_USBCtrlTrfSetupHandler:
 25848                           	opt stack 0
 25849                           pclatu	equ	0xFFB
 25850                           pclath	equ	0xFFA
 25851                           tblptru	equ	0xFF8
 25852                           tblptrh	equ	0xFF7
 25853                           tblptrl	equ	0xFF6
 25854                           tablat	equ	0xFF5
 25855                           prodh	equ	0xFF4
 25856                           prodl	equ	0xFF3
 25857                           intcon	equ	0xFF2
 25858                           intcon2	equ	0xFF1
 25859                           intcon3	equ	0xFF0
 25860                           indf0	equ	0xFEF
 25861                           postinc0	equ	0xFEE
 25862                           fsr0h	equ	0xFEA
 25863                           fsr0l	equ	0xFE9
 25864                           wreg	equ	0xFE8
 25865                           indf1	equ	0xFE7
 25866                           postdec1	equ	0xFE5
 25867                           fsr1h	equ	0xFE2
 25868                           fsr1l	equ	0xFE1
 25869                           indf2	equ	0xFDF
 25870                           postinc2	equ	0xFDE
 25871                           postdec2	equ	0xFDD
 25872                           plusw2	equ	0xFDB
 25873                           fsr2h	equ	0xFDA
 25874                           fsr2l	equ	0xFD9
 25875                           status	equ	0xFD8
 25876                           
 25877 ;; *************** function _USBCtrlEPServiceComplete *****************
 25878 ;; Defined at:
 25879 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25880 ;; Parameters:    Size  Location     Type
 25881 ;;		None
 25882 ;; Auto vars:     Size  Location     Type
 25883 ;;		None
 25884 ;; Return value:  Size  Location     Type
 25885 ;;                  1    wreg      void 
 25886 ;; Registers used:
 25887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25888 ;; Tracked objects:
 25889 ;;		On entry : 0/0
 25890 ;;		On exit  : 0/0
 25891 ;;		Unchanged: 0/0
 25892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25893 ;;      Params:         0       0       0       0       0       0       0       0       0
 25894 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25896 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25897 ;;Total ram usage:        0 bytes
 25898 ;; Hardware stack levels used:    1
 25899 ;; Hardware stack levels required when called:    2
 25900 ;; This function calls:
 25901 ;;		_USBCtrlEPAllowDataStage
 25902 ;;		_USBCtrlEPAllowStatusStage
 25903 ;; This function is called by:
 25904 ;;		_USBCtrlTrfSetupHandler
 25905 ;; This function uses a non-reentrant model
 25906 ;;
 25907                           
 25908                           	psect	text115
 25909  003050                     __ptext115:
 25910                           	opt stack 0
 25911  003050                     _USBCtrlEPServiceComplete:
 25912                           	opt stack 15
 25913                           
 25914                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25915                           
 25916                           ;incstack = 0
 25917  003050  9860               	bcf	3936,4,c	;volatile
 25918                           
 25919                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25920  003052  0100               	movlb	0	; () banked
 25921  003054  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25922  003056  D038               	goto	i2l1946
 25923                           
 25924                           ; BSR set to: 0
 25925                           ;usb_device.c: 1295: {
 25926                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25927  003058  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25928  00305A  D00B               	goto	i2l1947
 25929                           
 25930                           ; BSR set to: 0
 25931                           ;usb_device.c: 1297: {
 25932                           ;usb_device.c: 1298: controlTransferState = 2;
 25933  00305C  0E02               	movlw	2
 25934  00305E  6E55               	movwf	_controlTransferState,c	;volatile
 25935                           
 25936                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25937  003060  504C               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25938  003062  B4D8               	btfsc	status,2,c
 25939                           
 25940                           ; BSR set to: 0
 25941                           ;usb_device.c: 1310: {
 25942                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25943  003064  ECFD  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25944                           
 25945                           ;usb_device.c: 1312: }
 25946                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25947  003068  0E00               	movlw	0
 25948  00306A  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25949                           
 25950                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25951  00306C  0E00               	movlw	0
 25952  00306E  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25953                           
 25954                           ;usb_device.c: 1318: }
 25955  003070  0012               	return	
 25956  003072                     i2l1947:
 25957                           
 25958                           ;usb_device.c: 1319: else
 25959                           ;usb_device.c: 1320: {
 25960                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25961  003072  EE20 F001          	lfsr	2,1
 25962  003076  5042               	movf	_pBDTEntryEP0OutNext,w,c
 25963  003078  26D9               	addwf	fsr2l,f,c
 25964  00307A  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 25965  00307C  22DA               	addwfc	fsr2h,f,c
 25966  00307E  0E08               	movlw	8
 25967  003080  6EDF               	movwf	indf2,c
 25968                           
 25969                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25970  003082  EE20 F002          	lfsr	2,2
 25971  003086  5042               	movf	_pBDTEntryEP0OutNext,w,c
 25972  003088  26D9               	addwf	fsr2l,f,c
 25973  00308A  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 25974  00308C  22DA               	addwfc	fsr2h,f,c
 25975  00308E  0E30               	movlw	48
 25976  003090  6EDE               	movwf	postinc2,c
 25977  003092  0E04               	movlw	4
 25978  003094  6EDD               	movwf	postdec2,c
 25979                           
 25980                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25981  003096  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25982  00309A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25983  00309E  0E0C               	movlw	12
 25984  0030A0  6EDF               	movwf	indf2,c
 25985                           
 25986                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25987  0030A2  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25988  0030A6  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25989  0030AA  0E00               	movlw	0
 25990  0030AC  8EDB               	bsf	plusw2,7,c
 25991                           
 25992                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25993  0030AE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25994  0030B2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25995  0030B6  0E04               	movlw	4
 25996  0030B8  6EDF               	movwf	indf2,c
 25997                           
 25998                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25999  0030BA  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26000  0030BE  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26001  0030C2  0E00               	movlw	0
 26002  0030C4  8EDB               	bsf	plusw2,7,c
 26003                           
 26004                           ;usb_device.c: 1331: }
 26005                           ;usb_device.c: 1332: }
 26006  0030C6  0012               	return	
 26007  0030C8                     i2l1946:
 26008                           
 26009                           ; BSR set to: 0
 26010                           ;usb_device.c: 1333: else
 26011                           ;usb_device.c: 1334: {
 26012                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 26013  0030C8  0104               	movlb	4	; () banked
 26014  0030CA  AF30               	btfss	48,7,b	;volatile
 26015  0030CC  D010               	goto	i2l1951
 26016                           
 26017                           ; BSR set to: 4
 26018                           ;usb_device.c: 1336: {
 26019                           ;usb_device.c: 1337: controlTransferState = 1;
 26020  0030CE  0E01               	movlw	1
 26021  0030D0  6E55               	movwf	_controlTransferState,c	;volatile
 26022                           
 26023                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 26024  0030D2  504D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26025  0030D4  B4D8               	btfsc	status,2,c
 26026                           
 26027                           ; BSR set to: 4
 26028                           ;usb_device.c: 1352: {
 26029                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 26030  0030D6  ECFD  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 26031                           
 26032                           ;usb_device.c: 1354: }
 26033                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 26034  0030DA  0E00               	movlw	0
 26035  0030DC  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26036                           
 26037                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 26038  0030DE  0E00               	movlw	0
 26039  0030E0  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26040                           
 26041                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 26042  0030E2  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26043  0030E4  A4D8               	btfss	status,2,c
 26044  0030E6  0012               	return	
 26045                           
 26046                           ;usb_device.c: 1379: {
 26047                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 26048  0030E8  ECC0  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26049                           
 26050                           ;usb_device.c: 1381: }
 26051                           ;usb_device.c: 1382: }
 26052  0030EC  0012               	return	
 26053  0030EE                     i2l1951:
 26054                           
 26055                           ;usb_device.c: 1383: else
 26056                           ;usb_device.c: 1384: {
 26057                           ;usb_device.c: 1395: controlTransferState = 2;
 26058  0030EE  0E02               	movlw	2
 26059  0030F0  6E55               	movwf	_controlTransferState,c	;volatile
 26060                           
 26061                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 26062  0030F2  EE20 F001          	lfsr	2,1
 26063  0030F6  5042               	movf	_pBDTEntryEP0OutNext,w,c
 26064  0030F8  26D9               	addwf	fsr2l,f,c
 26065  0030FA  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 26066  0030FC  22DA               	addwfc	fsr2h,f,c
 26067  0030FE  0E08               	movlw	8
 26068  003100  6EDF               	movwf	indf2,c
 26069                           
 26070                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26071  003102  EE20 F002          	lfsr	2,2
 26072  003106  5042               	movf	_pBDTEntryEP0OutNext,w,c
 26073  003108  26D9               	addwf	fsr2l,f,c
 26074  00310A  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 26075  00310C  22DA               	addwfc	fsr2h,f,c
 26076  00310E  0E30               	movlw	48
 26077  003110  6EDE               	movwf	postinc2,c
 26078  003112  0E04               	movlw	4
 26079  003114  6EDD               	movwf	postdec2,c
 26080                           
 26081                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26082  003116  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26083  00311A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26084  00311E  0E04               	movlw	4
 26085  003120  6EDF               	movwf	indf2,c
 26086                           
 26087                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26088  003122  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26089  003126  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26090  00312A  0E00               	movlw	0
 26091  00312C  8EDB               	bsf	plusw2,7,c
 26092                           
 26093                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26094  00312E  0E00               	movlw	0
 26095  003130  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26096                           
 26097                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26098  003132  0E00               	movlw	0
 26099  003134  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26100                           
 26101                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26102  003136  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26103  003138  A4D8               	btfss	status,2,c
 26104  00313A  0012               	return	
 26105                           
 26106                           ;usb_device.c: 1407: {
 26107                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26108  00313C  ECC0  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26109  003140  0012               	return	
 26110  003142                     __end_of_USBCtrlEPServiceComplete:
 26111                           	opt stack 0
 26112                           pclatu	equ	0xFFB
 26113                           pclath	equ	0xFFA
 26114                           tblptru	equ	0xFF8
 26115                           tblptrh	equ	0xFF7
 26116                           tblptrl	equ	0xFF6
 26117                           tablat	equ	0xFF5
 26118                           prodh	equ	0xFF4
 26119                           prodl	equ	0xFF3
 26120                           intcon	equ	0xFF2
 26121                           intcon2	equ	0xFF1
 26122                           intcon3	equ	0xFF0
 26123                           indf0	equ	0xFEF
 26124                           postinc0	equ	0xFEE
 26125                           fsr0h	equ	0xFEA
 26126                           fsr0l	equ	0xFE9
 26127                           wreg	equ	0xFE8
 26128                           indf1	equ	0xFE7
 26129                           postdec1	equ	0xFE5
 26130                           fsr1h	equ	0xFE2
 26131                           fsr1l	equ	0xFE1
 26132                           indf2	equ	0xFDF
 26133                           postinc2	equ	0xFDE
 26134                           postdec2	equ	0xFDD
 26135                           plusw2	equ	0xFDB
 26136                           fsr2h	equ	0xFDA
 26137                           fsr2l	equ	0xFD9
 26138                           status	equ	0xFD8
 26139                           
 26140 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26141 ;; Defined at:
 26142 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26143 ;; Parameters:    Size  Location     Type
 26144 ;;		None
 26145 ;; Auto vars:     Size  Location     Type
 26146 ;;		None
 26147 ;; Return value:  Size  Location     Type
 26148 ;;                  1    wreg      void 
 26149 ;; Registers used:
 26150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26151 ;; Tracked objects:
 26152 ;;		On entry : 0/0
 26153 ;;		On exit  : 0/0
 26154 ;;		Unchanged: 0/0
 26155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26156 ;;      Params:         0       0       0       0       0       0       0       0       0
 26157 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26159 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26160 ;;Total ram usage:        0 bytes
 26161 ;; Hardware stack levels used:    1
 26162 ;; Hardware stack levels required when called:    1
 26163 ;; This function calls:
 26164 ;;		_USBCtrlTrfTxService
 26165 ;; This function is called by:
 26166 ;;		_USBCtrlEPServiceComplete
 26167 ;; This function uses a non-reentrant model
 26168 ;;
 26169                           
 26170                           	psect	text116
 26171  0043FA                     __ptext116:
 26172                           	opt stack 0
 26173  0043FA                     _USBCtrlEPAllowDataStage:
 26174                           	opt stack 15
 26175                           
 26176                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26177                           
 26178                           ;incstack = 0
 26179  0043FA  0E00               	movlw	0
 26180  0043FC  6E4D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26181                           
 26182                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26183  0043FE  0E00               	movlw	0
 26184  004400  6E4C               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26185                           
 26186                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26187  004402  0E02               	movlw	2
 26188  004404  1855               	xorwf	_controlTransferState,w,c	;volatile
 26189  004406  A4D8               	btfss	status,2,c
 26190  004408  D01F               	goto	i2l1935
 26191                           
 26192                           ;usb_device.c: 1179: {
 26193                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26194  00440A  EE20 F001          	lfsr	2,1
 26195  00440E  5042               	movf	_pBDTEntryEP0OutNext,w,c
 26196  004410  26D9               	addwf	fsr2l,f,c
 26197  004412  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 26198  004414  22DA               	addwfc	fsr2h,f,c
 26199  004416  0E08               	movlw	8
 26200  004418  6EDF               	movwf	indf2,c
 26201                           
 26202                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26203  00441A  EE20 F002          	lfsr	2,2
 26204  00441E  5042               	movf	_pBDTEntryEP0OutNext,w,c
 26205  004420  26D9               	addwf	fsr2l,f,c
 26206  004422  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 26207  004424  22DA               	addwfc	fsr2h,f,c
 26208  004426  0E38               	movlw	56
 26209  004428  6EDE               	movwf	postinc2,c
 26210  00442A  0E04               	movlw	4
 26211  00442C  6EDD               	movwf	postdec2,c
 26212                           
 26213                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26214  00442E  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26215  004432  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26216  004436  0E48               	movlw	72
 26217  004438  6EDF               	movwf	indf2,c
 26218                           
 26219                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26220  00443A  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26221  00443E  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26222  004442  0E00               	movlw	0
 26223  004444  8EDB               	bsf	plusw2,7,c
 26224                           
 26225                           ;usb_device.c: 1185: }
 26226  004446  0012               	return	
 26227  004448                     i2l1935:
 26228                           
 26229                           ;usb_device.c: 1186: else
 26230                           ;usb_device.c: 1187: {
 26231                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26232  004448  0100               	movlb	0	; () banked
 26233  00444A  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26234  00444C  0104               	movlb	4	; () banked
 26235  00444E  5D36               	subwf	54,w,b	;volatile
 26236  004450  0100               	movlb	0	; () banked
 26237  004452  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26238  004454  0104               	movlb	4	; () banked
 26239  004456  5937               	subwfb	55,w,b	;volatile
 26240  004458  B0D8               	btfsc	status,0,c
 26241  00445A  D004               	goto	i2l1937
 26242                           
 26243                           ; BSR set to: 4
 26244                           ;usb_device.c: 1191: {
 26245                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26246  00445C  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 26247  004460  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 26248  004464                     i2l1937:
 26249                           
 26250                           ; BSR set to: 4
 26251                           ;usb_device.c: 1193: }
 26252                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26253                           
 26254                           ; BSR set to: 4
 26255  004464  EC26  F01C         	call	_USBCtrlTrfTxService	;wreg free
 26256                           
 26257                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26258  004468  0100               	movlb	0	; () banked
 26259  00446A  EE20 F002          	lfsr	2,2
 26260  00446E  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 26261  004470  26D9               	addwf	fsr2l,f,c
 26262  004472  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26263  004474  22DA               	addwfc	fsr2h,f,c
 26264  004476  0E38               	movlw	56
 26265  004478  6EDE               	movwf	postinc2,c
 26266  00447A  0E04               	movlw	4
 26267  00447C  6EDD               	movwf	postdec2,c
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26271  00447E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26272  004482  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26273  004486  0E48               	movlw	72
 26274  004488  6EDF               	movwf	indf2,c
 26275                           
 26276                           ; BSR set to: 0
 26277                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26278  00448A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26279  00448E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26280  004492  0E00               	movlw	0
 26281  004494  8EDB               	bsf	plusw2,7,c
 26282  004496  0012               	return	
 26283  004498                     __end_of_USBCtrlEPAllowDataStage:
 26284                           	opt stack 0
 26285                           pclatu	equ	0xFFB
 26286                           pclath	equ	0xFFA
 26287                           tblptru	equ	0xFF8
 26288                           tblptrh	equ	0xFF7
 26289                           tblptrl	equ	0xFF6
 26290                           tablat	equ	0xFF5
 26291                           prodh	equ	0xFF4
 26292                           prodl	equ	0xFF3
 26293                           intcon	equ	0xFF2
 26294                           intcon2	equ	0xFF1
 26295                           intcon3	equ	0xFF0
 26296                           indf0	equ	0xFEF
 26297                           postinc0	equ	0xFEE
 26298                           fsr0h	equ	0xFEA
 26299                           fsr0l	equ	0xFE9
 26300                           wreg	equ	0xFE8
 26301                           indf1	equ	0xFE7
 26302                           postdec1	equ	0xFE5
 26303                           fsr1h	equ	0xFE2
 26304                           fsr1l	equ	0xFE1
 26305                           indf2	equ	0xFDF
 26306                           postinc2	equ	0xFDE
 26307                           postdec2	equ	0xFDD
 26308                           plusw2	equ	0xFDB
 26309                           fsr2h	equ	0xFDA
 26310                           fsr2l	equ	0xFD9
 26311                           status	equ	0xFD8
 26312                           
 26313 ;; *************** function _USBCheckStdRequest *****************
 26314 ;; Defined at:
 26315 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;		None
 26318 ;; Auto vars:     Size  Location     Type
 26319 ;;		None
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  1    wreg      void 
 26322 ;; Registers used:
 26323 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 0/0
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26329 ;;      Params:         0       0       0       0       0       0       0       0       0
 26330 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26332 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26333 ;;Total ram usage:        0 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; Hardware stack levels required when called:    6
 26336 ;; This function calls:
 26337 ;;		_USBStdFeatureReqHandler
 26338 ;;		_USBStdGetDscHandler
 26339 ;;		_USBStdGetStatusHandler
 26340 ;;		_USBStdSetCfgHandler
 26341 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26342 ;; This function is called by:
 26343 ;;		_USBCtrlTrfSetupHandler
 26344 ;; This function uses a non-reentrant model
 26345 ;;
 26346                           
 26347                           	psect	text117
 26348  003314                     __ptext117:
 26349                           	opt stack 0
 26350  003314                     _USBCheckStdRequest:
 26351                           	opt stack 11
 26352                           
 26353                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26354                           
 26355                           ;incstack = 0
 26356  003314  0104               	movlb	4	; () banked
 26357  003316  3930               	swapf	48,w,b	;volatile
 26358  003318  32E8               	rrcf	wreg,f,c
 26359  00331A  0B03               	andlw	3
 26360  00331C  0900               	iorlw	0
 26361  00331E  A4D8               	btfss	status,2,c
 26362  003320  0012               	return	
 26363  003322  D047               	goto	i2l2072
 26364  003324                     i2l2073:
 26365                           
 26366                           ; BSR set to: 4
 26367                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26368  003324  0100               	movlb	0	; () banked
 26369  003326  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26370                           
 26371                           ; BSR set to: 0
 26372                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26373  003328  0E08               	movlw	8
 26374  00332A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26375                           
 26376                           ;usb_device.c: 2327: break;
 26377  00332C  0012               	return	
 26378  00332E                     
 26379                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26380                           
 26381                           ; BSR set to: 0
 26382  00332E  EC7C  F016         	call	_USBStdGetDscHandler	;wreg free
 26383                           
 26384                           ;usb_device.c: 2330: break;
 26385  003332  0012               	return	
 26386  003334                     
 26387                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26388  003334  ECFB  F019         	call	_USBStdSetCfgHandler	;wreg free
 26389                           
 26390                           ;usb_device.c: 2333: break;
 26391  003338  0012               	return	
 26392  00333A                     
 26393                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26394  00333A  0E5B               	movlw	low _USBActiveConfiguration
 26395  00333C  0100               	movlb	0	; () banked
 26396  00333E  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26397  003340  0E00               	movlw	high _USBActiveConfiguration
 26398  003342  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26399                           
 26400                           ; BSR set to: 0
 26401                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26402  003344  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26403                           
 26404                           ; BSR set to: 0
 26405                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26406  003346  0E01               	movlw	1
 26407  003348  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26408                           
 26409                           ; BSR set to: 0
 26410                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26411  00334A  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26412                           
 26413                           ;usb_device.c: 2339: break;
 26414  00334C  0012               	return	
 26415  00334E                     
 26416                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26417                           
 26418                           ; BSR set to: 0
 26419  00334E  EC56  F021         	call	_USBStdGetStatusHandler	;wreg free
 26420                           
 26421                           ;usb_device.c: 2342: break;
 26422  003352  0012               	return	
 26423  003354                     
 26424                           ;usb_device.c: 2344: case 3:
 26425                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26426  003354  EC3D  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 26427                           
 26428                           ;usb_device.c: 2346: break;
 26429  003358  0012               	return	
 26430  00335A                     
 26431                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26432  00335A  0104               	movlb	4	; () banked
 26433  00335C  5134               	movf	52,w,b	;volatile
 26434  00335E  0D01               	mullw	1
 26435  003360  0EE6               	movlw	low _USBAlternateInterface
 26436  003362  24F3               	addwf	prodl,w,c
 26437  003364  0100               	movlb	0	; () banked
 26438  003366  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26439  003368  0E01               	movlw	high _USBAlternateInterface
 26440  00336A  20F4               	addwfc	prodh,w,c
 26441  00336C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26442                           
 26443                           ; BSR set to: 0
 26444                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26445  00336E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26446                           
 26447                           ; BSR set to: 0
 26448                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26449  003370  0E01               	movlw	1
 26450  003372  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26451                           
 26452                           ; BSR set to: 0
 26453                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26454  003374  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26455                           
 26456                           ;usb_device.c: 2352: break;
 26457  003376  0012               	return	
 26458  003378                     i2l2082:
 26459                           
 26460                           ; BSR set to: 4
 26461                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26462  003378  0100               	movlb	0	; () banked
 26463  00337A  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26467  00337C  0104               	movlb	4	; () banked
 26468  00337E  5134               	movf	52,w,b	;volatile
 26469  003380  0D01               	mullw	1
 26470  003382  0EE6               	movlw	low _USBAlternateInterface
 26471  003384  24F3               	addwf	prodl,w,c
 26472  003386  6ED9               	movwf	fsr2l,c
 26473  003388  0E01               	movlw	high _USBAlternateInterface
 26474  00338A  20F4               	addwfc	prodh,w,c
 26475  00338C  6EDA               	movwf	fsr2h,c
 26476  00338E  C432 FFDF          	movff	1074,indf2	;volatile
 26477                           
 26478                           ;usb_device.c: 2356: break;
 26479  003392  0012               	return	
 26480  003394                     
 26481                           ; BSR set to: 4
 26482                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26483                           
 26484                           ; BSR set to: 4
 26485  003394  0E00               	movlw	0
 26486  003396  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26487  003398  0E02               	movlw	2
 26488  00339A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26489  00339C  0E00               	movlw	0
 26490  00339E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26491  0033A0  0E00               	movlw	0
 26492  0033A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26493  0033A4  0E00               	movlw	0
 26494  0033A6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26495  0033A8  0E00               	movlw	0
 26496  0033AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26497  0033AC  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26498                           
 26499                           ;usb_device.c: 2363: }
 26500                           
 26501                           ;usb_device.c: 2362: break;
 26502                           
 26503                           ;usb_device.c: 2361: default:
 26504                           
 26505                           ;usb_device.c: 2360: case 12:
 26506                           
 26507                           ;usb_device.c: 2359: break;
 26508  0033B0  0012               	return	
 26509  0033B2                     i2l2072:
 26510  0033B2  0104               	movlb	4	; () banked
 26511  0033B4  5131               	movf	49,w,b	;volatile
 26512                           
 26513                           ; Switch size 1, requested type "space"
 26514                           ; Number of cases is 11, Range of values is 0 to 12
 26515                           ; switch strategies available:
 26516                           ; Name         Instructions Cycles
 26517                           ; simple_byte           34    18 (average)
 26518                           ;	Chosen strategy is simple_byte
 26519  0033B6  0A00               	xorlw	0	; case 0
 26520  0033B8  B4D8               	btfsc	status,2,c
 26521  0033BA  D7C9               	goto	i2l2078
 26522  0033BC  0A01               	xorlw	1	; case 1
 26523  0033BE  B4D8               	btfsc	status,2,c
 26524  0033C0  D7C9               	goto	i2l2079
 26525  0033C2  0A02               	xorlw	2	; case 3
 26526  0033C4  B4D8               	btfsc	status,2,c
 26527  0033C6  D7C6               	goto	i2l2079
 26528  0033C8  0A06               	xorlw	6	; case 5
 26529  0033CA  B4D8               	btfsc	status,2,c
 26530  0033CC  D7AB               	goto	i2l2073
 26531  0033CE  0A03               	xorlw	3	; case 6
 26532  0033D0  B4D8               	btfsc	status,2,c
 26533  0033D2  D7AD               	goto	i2l2075
 26534  0033D4  0A01               	xorlw	1	; case 7
 26535  0033D6  B4D8               	btfsc	status,2,c
 26536  0033D8  D7DD               	goto	i2l2083
 26537  0033DA  0A0F               	xorlw	15	; case 8
 26538  0033DC  B4D8               	btfsc	status,2,c
 26539  0033DE  D7AD               	goto	i2l2077
 26540  0033E0  0A01               	xorlw	1	; case 9
 26541  0033E2  B4D8               	btfsc	status,2,c
 26542  0033E4  D7A7               	goto	i2l2076
 26543  0033E6  0A03               	xorlw	3	; case 10
 26544  0033E8  B4D8               	btfsc	status,2,c
 26545  0033EA  D7B7               	goto	i2l2081
 26546  0033EC  0A01               	xorlw	1	; case 11
 26547  0033EE  B4D8               	btfsc	status,2,c
 26548  0033F0  D7C3               	goto	i2l2082
 26549  0033F2  0A07               	xorlw	7	; case 12
 26550  0033F4  0012               	return	
 26551  0033F6                     __end_of_USBCheckStdRequest:
 26552                           	opt stack 0
 26553                           pclatu	equ	0xFFB
 26554                           pclath	equ	0xFFA
 26555                           tblptru	equ	0xFF8
 26556                           tblptrh	equ	0xFF7
 26557                           tblptrl	equ	0xFF6
 26558                           tablat	equ	0xFF5
 26559                           prodh	equ	0xFF4
 26560                           prodl	equ	0xFF3
 26561                           intcon	equ	0xFF2
 26562                           intcon2	equ	0xFF1
 26563                           intcon3	equ	0xFF0
 26564                           indf0	equ	0xFEF
 26565                           postinc0	equ	0xFEE
 26566                           fsr0h	equ	0xFEA
 26567                           fsr0l	equ	0xFE9
 26568                           wreg	equ	0xFE8
 26569                           indf1	equ	0xFE7
 26570                           postdec1	equ	0xFE5
 26571                           fsr1h	equ	0xFE2
 26572                           fsr1l	equ	0xFE1
 26573                           indf2	equ	0xFDF
 26574                           postinc2	equ	0xFDE
 26575                           postdec2	equ	0xFDD
 26576                           plusw2	equ	0xFDB
 26577                           fsr2h	equ	0xFDA
 26578                           fsr2l	equ	0xFD9
 26579                           status	equ	0xFD8
 26580                           
 26581 ;; *************** function _USBStdSetCfgHandler *****************
 26582 ;; Defined at:
 26583 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;		None
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;  i               1   21[COMRAM] unsigned char 
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1    wreg      void 
 26590 ;; Registers used:
 26591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0
 26598 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26600 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26601 ;;Total ram usage:        1 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; Hardware stack levels required when called:    5
 26604 ;; This function calls:
 26605 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26606 ;;		i2_memset
 26607 ;; This function is called by:
 26608 ;;		_USBCheckStdRequest
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text118
 26613  0033F6                     __ptext118:
 26614                           	opt stack 0
 26615  0033F6                     _USBStdSetCfgHandler:
 26616                           	opt stack 11
 26617                           
 26618                           ;usb_device.c: 1631: uint8_t i;
 26619                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26620                           
 26621                           ;incstack = 0
 26622  0033F6  0100               	movlb	0	; () banked
 26623  0033F8  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26627  0033FA  0E6B               	movlw	107
 26628  0033FC  6E01               	movwf	i2memset@p1,c
 26629  0033FE  0E0F               	movlw	15
 26630  003400  6E02               	movwf	i2memset@p1+1,c
 26631  003402  0E00               	movlw	0
 26632  003404  6E04               	movwf	i2memset@c+1,c
 26633  003406  0E00               	movlw	0
 26634  003408  6E03               	movwf	i2memset@c,c
 26635  00340A  0E00               	movlw	0
 26636  00340C  6E06               	movwf	i2memset@n+1,c
 26637  00340E  0E02               	movlw	2
 26638  003410  6E05               	movwf	i2memset@n,c
 26639  003412  EC0C  F02C         	call	i2_memset	;wreg free
 26640                           
 26641                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26642  003416  0E00               	movlw	0
 26643  003418  6E01               	movwf	i2memset@p1,c
 26644  00341A  0E04               	movlw	4
 26645  00341C  6E02               	movwf	i2memset@p1+1,c
 26646  00341E  0E00               	movlw	0
 26647  003420  6E04               	movwf	i2memset@c+1,c
 26648  003422  0E00               	movlw	0
 26649  003424  6E03               	movwf	i2memset@c,c
 26650  003426  0E00               	movlw	0
 26651  003428  6E06               	movwf	i2memset@n+1,c
 26652  00342A  0E30               	movlw	48
 26653  00342C  6E05               	movwf	i2memset@n,c
 26654  00342E  EC0C  F02C         	call	i2_memset	;wreg free
 26655                           
 26656                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26657  003432  8C60               	bsf	3936,6,c	;volatile
 26658                           
 26659                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26660  003434  0E00               	movlw	0
 26661  003436  6E16               	movwf	USBStdSetCfgHandler@i,c
 26662  003438                     i2l8350:
 26663  003438  0E02               	movlw	2
 26664  00343A  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26665  00343C  D001               	goto	i2l1987
 26666  00343E  D016               	goto	i2u619_40
 26667  003440                     i2l1987:
 26668                           
 26669                           ;usb_device.c: 1649: {
 26670                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26671  003440  5016               	movf	USBStdSetCfgHandler@i,w,c
 26672  003442  0D01               	mullw	1
 26673  003444  0ED3               	movlw	low _ep_data_in
 26674  003446  24F3               	addwf	prodl,w,c
 26675  003448  6ED9               	movwf	fsr2l,c
 26676  00344A  0E00               	movlw	high _ep_data_in
 26677  00344C  20F4               	addwfc	prodh,w,c
 26678  00344E  6EDA               	movwf	fsr2h,c
 26679  003450  0E00               	movlw	0
 26680  003452  6EDF               	movwf	indf2,c
 26681                           
 26682                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26683  003454  5016               	movf	USBStdSetCfgHandler@i,w,c
 26684  003456  0D01               	mullw	1
 26685  003458  0ED0               	movlw	low _ep_data_out
 26686  00345A  24F3               	addwf	prodl,w,c
 26687  00345C  6ED9               	movwf	fsr2l,c
 26688  00345E  0E00               	movlw	high _ep_data_out
 26689  003460  20F4               	addwfc	prodh,w,c
 26690  003462  6EDA               	movwf	fsr2h,c
 26691  003464  0E00               	movlw	0
 26692  003466  6EDF               	movwf	indf2,c
 26693  003468  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26694  00346A  D7E6               	goto	i2l8350
 26695  00346C                     i2u619_40:
 26696                           
 26697                           ;usb_device.c: 1652: }
 26698                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26699  00346C  0EE6               	movlw	low _USBAlternateInterface
 26700  00346E  6E01               	movwf	i2memset@p1,c
 26701  003470  0E01               	movlw	high _USBAlternateInterface
 26702  003472  6E02               	movwf	i2memset@p1+1,c
 26703  003474  0E00               	movlw	0
 26704  003476  6E04               	movwf	i2memset@c+1,c
 26705  003478  0E00               	movlw	0
 26706  00347A  6E03               	movwf	i2memset@c,c
 26707  00347C  0E00               	movlw	0
 26708  00347E  6E06               	movwf	i2memset@n+1,c
 26709  003480  0E02               	movlw	2
 26710  003482  6E05               	movwf	i2memset@n,c
 26711  003484  EC0C  F02C         	call	i2_memset	;wreg free
 26712                           
 26713                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26714  003488  9C60               	bcf	3936,6,c	;volatile
 26715                           
 26716                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26717  00348A  0E08               	movlw	8
 26718  00348C  0100               	movlb	0	; () banked
 26719  00348E  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 26720  003490  0E04               	movlw	4
 26721  003492  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26722                           
 26723                           ; BSR set to: 0
 26724                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26725  003494  0E00               	movlw	0
 26726  003496  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 26727  003498  0E04               	movlw	4
 26728  00349A  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26729                           
 26730                           ; BSR set to: 0
 26731                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26732  00349C  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26733  0034A0  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26734                           
 26735                           ; BSR set to: 0
 26736                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26737  0034A4  C432 F05B          	movff	1074,_USBActiveConfiguration	;volatile
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26741  0034A8  505B               	movf	_USBActiveConfiguration,w,c	;volatile
 26742  0034AA  A4D8               	btfss	status,2,c
 26743  0034AC  D003               	goto	i2l1989
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;usb_device.c: 1671: {
 26747                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26748  0034AE  0E10               	movlw	16
 26749  0034B0  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26750                           
 26751                           ;usb_device.c: 1674: }
 26752  0034B2  0012               	return	
 26753  0034B4                     i2l1989:
 26754                           
 26755                           ; BSR set to: 0
 26756                           ;usb_device.c: 1675: else
 26757                           ;usb_device.c: 1676: {
 26758                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26759                           
 26760                           ; BSR set to: 0
 26761  0034B4  0E00               	movlw	0
 26762  0034B6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26763  0034B8  0E01               	movlw	1
 26764  0034BA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26765  0034BC  0E5B               	movlw	low _USBActiveConfiguration
 26766  0034BE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26767  0034C0  0E00               	movlw	high _USBActiveConfiguration
 26768  0034C2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26769  0034C4  0E00               	movlw	0
 26770  0034C6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26771  0034C8  0E01               	movlw	1
 26772  0034CA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26773  0034CC  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26774                           
 26775                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26776  0034D0  0E20               	movlw	32
 26777  0034D2  0100               	movlb	0	; () banked
 26778  0034D4  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26779  0034D6  0012               	return	
 26780  0034D8                     __end_of_USBStdSetCfgHandler:
 26781                           	opt stack 0
 26782                           pclatu	equ	0xFFB
 26783                           pclath	equ	0xFFA
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           intcon2	equ	0xFF1
 26792                           intcon3	equ	0xFF0
 26793                           indf0	equ	0xFEF
 26794                           postinc0	equ	0xFEE
 26795                           fsr0h	equ	0xFEA
 26796                           fsr0l	equ	0xFE9
 26797                           wreg	equ	0xFE8
 26798                           indf1	equ	0xFE7
 26799                           postdec1	equ	0xFE5
 26800                           fsr1h	equ	0xFE2
 26801                           fsr1l	equ	0xFE1
 26802                           indf2	equ	0xFDF
 26803                           postinc2	equ	0xFDE
 26804                           postdec2	equ	0xFDD
 26805                           plusw2	equ	0xFDB
 26806                           fsr2h	equ	0xFDA
 26807                           fsr2l	equ	0xFD9
 26808                           status	equ	0xFD8
 26809                           
 26810 ;; *************** function i2_memset *****************
 26811 ;; Defined at:
 26812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 26813 ;; Parameters:    Size  Location     Type
 26814 ;;  p1              2    0[COMRAM] PTR void 
 26815 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26816 ;;  c               2    2[COMRAM] int 
 26817 ;;  n               2    4[COMRAM] unsigned int 
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26820 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26821 ;; Return value:  Size  Location     Type
 26822 ;;                  2    0[COMRAM] PTR void 
 26823 ;; Registers used:
 26824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26825 ;; Tracked objects:
 26826 ;;		On entry : 0/0
 26827 ;;		On exit  : 0/0
 26828 ;;		Unchanged: 0/0
 26829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26830 ;;      Params:         6       0       0       0       0       0       0       0       0
 26831 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26832 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26833 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26834 ;;Total ram usage:        8 bytes
 26835 ;; Hardware stack levels used:    1
 26836 ;; This function calls:
 26837 ;;		Nothing
 26838 ;; This function is called by:
 26839 ;;		_USBStdSetCfgHandler
 26840 ;;		i2_USBDeviceInit
 26841 ;; This function uses a non-reentrant model
 26842 ;;
 26843                           
 26844                           	psect	text119
 26845  005818                     __ptext119:
 26846                           	opt stack 0
 26847  005818                     i2_memset:
 26848                           	opt stack 18
 26849                           
 26850                           ; BSR set to: 0
 26851                           ;incstack = 0
 26852  005818  C001  F007         	movff	i2memset@p1,i2memset@p
 26853  00581C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26854  005820  D008               	goto	i2l2685
 26855  005822                     i2l8170:
 26856  005822  C007  FFD9         	movff	i2memset@p,fsr2l
 26857  005826  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26858  00582A  C003  FFDF         	movff	i2memset@c,indf2
 26859  00582E  4A07               	infsnz	i2memset@p,f,c
 26860  005830  2A08               	incf	i2memset@p+1,f,c
 26861  005832                     i2l2685:
 26862  005832  0605               	decf	i2memset@n,f,c
 26863  005834  A0D8               	btfss	status,0,c
 26864  005836  0606               	decf	i2memset@n+1,f,c
 26865  005838  2805               	incf	i2memset@n,w,c
 26866  00583A  E1F3               	bnz	i2l8170
 26867  00583C  2806               	incf	i2memset@n+1,w,c
 26868  00583E  B4D8               	btfsc	status,2,c
 26869  005840  0012               	return	
 26870  005842  D7EF               	goto	i2l2686
 26871  005844                     __end_ofi2_memset:
 26872                           	opt stack 0
 26873                           pclatu	equ	0xFFB
 26874                           pclath	equ	0xFFA
 26875                           tblptru	equ	0xFF8
 26876                           tblptrh	equ	0xFF7
 26877                           tblptrl	equ	0xFF6
 26878                           tablat	equ	0xFF5
 26879                           prodh	equ	0xFF4
 26880                           prodl	equ	0xFF3
 26881                           intcon	equ	0xFF2
 26882                           intcon2	equ	0xFF1
 26883                           intcon3	equ	0xFF0
 26884                           indf0	equ	0xFEF
 26885                           postinc0	equ	0xFEE
 26886                           fsr0h	equ	0xFEA
 26887                           fsr0l	equ	0xFE9
 26888                           wreg	equ	0xFE8
 26889                           indf1	equ	0xFE7
 26890                           postdec1	equ	0xFE5
 26891                           fsr1h	equ	0xFE2
 26892                           fsr1l	equ	0xFE1
 26893                           indf2	equ	0xFDF
 26894                           postinc2	equ	0xFDE
 26895                           postdec2	equ	0xFDD
 26896                           plusw2	equ	0xFDB
 26897                           fsr2h	equ	0xFDA
 26898                           fsr2l	equ	0xFD9
 26899                           status	equ	0xFD8
 26900                           
 26901 ;; *************** function _USBStdGetStatusHandler *****************
 26902 ;; Defined at:
 26903 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26904 ;; Parameters:    Size  Location     Type
 26905 ;;		None
 26906 ;; Auto vars:     Size  Location     Type
 26907 ;;  p               2    1[COMRAM] PTR struct __BDT
 26908 ;;		 -> BDT(48), NULL(0), 
 26909 ;; Return value:  Size  Location     Type
 26910 ;;                  1    wreg      void 
 26911 ;; Registers used:
 26912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26913 ;; Tracked objects:
 26914 ;;		On entry : 0/0
 26915 ;;		On exit  : 0/0
 26916 ;;		Unchanged: 0/0
 26917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26918 ;;      Params:         0       0       0       0       0       0       0       0       0
 26919 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26920 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26921 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26922 ;;Total ram usage:        3 bytes
 26923 ;; Hardware stack levels used:    1
 26924 ;; This function calls:
 26925 ;;		Nothing
 26926 ;; This function is called by:
 26927 ;;		_USBCheckStdRequest
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text120
 26932  0042AC                     __ptext120:
 26933                           	opt stack 0
 26934  0042AC                     _USBStdGetStatusHandler:
 26935                           	opt stack 16
 26936                           
 26937                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26938                           
 26939                           ;incstack = 0
 26940  0042AC  0E00               	movlw	0
 26941  0042AE  0104               	movlb	4	; () banked
 26942  0042B0  6F38               	movwf	56,b	;volatile
 26943                           
 26944                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26945  0042B2  0E00               	movlw	0
 26946  0042B4  6F39               	movwf	57,b	;volatile
 26947                           
 26948                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26949  0042B6  D038               	goto	i2l2008
 26950  0042B8                     i2l2009:
 26951                           
 26952                           ; BSR set to: 4
 26953                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26954  0042B8  0100               	movlb	0	; () banked
 26955  0042BA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26956                           
 26957                           ;usb_device.c: 1789: }
 26958                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26959                           
 26960                           ; BSR set to: 4
 26961                           
 26962                           ; BSR set to: 0
 26963                           ;usb_device.c: 1787: {
 26964                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26965                           
 26966                           ;usb_device.c: 1786: if(0 == 1)
 26967  0042BC  0454               	decf	_RemoteWakeup,w,c	;volatile
 26968  0042BE  A4D8               	btfss	status,2,c
 26969  0042C0  D03E               	goto	i2l2012
 26970                           
 26971                           ;usb_device.c: 1792: {
 26972                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26973  0042C2  0104               	movlb	4	; () banked
 26974  0042C4  8338               	bsf	56,1,b	;volatile
 26975                           
 26976                           ; BSR set to: 4
 26977                           ;usb_device.c: 1794: }
 26978                           ;usb_device.c: 1795: break;
 26979  0042C6  D03B               	goto	i2l2012
 26980  0042C8                     i2l2013:
 26981                           
 26982                           ; BSR set to: 4
 26983                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26984  0042C8  0100               	movlb	0	; () banked
 26985  0042CA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26986                           
 26987                           ;usb_device.c: 1798: break;
 26988  0042CC  D038               	goto	i2l2012
 26989  0042CE                     i2l2014:
 26990                           
 26991                           ; BSR set to: 4
 26992                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26993  0042CE  0100               	movlb	0	; () banked
 26994  0042D0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26995                           
 26996                           ;usb_device.c: 1804: {
 26997                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26998                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26999  0042D2  0104               	movlb	4	; () banked
 27000  0042D4  BF34               	btfsc	52,7,b	;volatile
 27001  0042D6  D00A               	goto	i2l2015
 27002                           
 27003                           ; BSR set to: 4
 27004                           ;usb_device.c: 1808: {
 27005                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27006  0042D8  5134               	movf	52,w,b	;volatile
 27007  0042DA  0B0F               	andlw	15
 27008  0042DC  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27009  0042DE  5001               	movf	??_USBStdGetStatusHandler,w,c
 27010  0042E0  0D02               	mullw	2
 27011  0042E2  0E20               	movlw	low _pBDTEntryOut
 27012  0042E4  24F3               	addwf	prodl,w,c
 27013  0042E6  6ED9               	movwf	fsr2l,c
 27014  0042E8  0E01               	movlw	high _pBDTEntryOut
 27015  0042EA  D009               	goto	L25
 27016  0042EC                     i2l2015:
 27017                           
 27018                           ; BSR set to: 4
 27019                           ;usb_device.c: 1811: else
 27020                           ;usb_device.c: 1812: {
 27021                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27022                           
 27023                           ; BSR set to: 4
 27024  0042EC  5134               	movf	52,w,b	;volatile
 27025  0042EE  0B0F               	andlw	15
 27026  0042F0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27027  0042F2  5001               	movf	??_USBStdGetStatusHandler,w,c
 27028  0042F4  0D02               	mullw	2
 27029  0042F6  0ECA               	movlw	low _pBDTEntryIn
 27030  0042F8  24F3               	addwf	prodl,w,c
 27031  0042FA  6ED9               	movwf	fsr2l,c
 27032  0042FC  0E00               	movlw	high _pBDTEntryIn
 27033  0042FE                     L25:
 27034  0042FE  20F4               	addwfc	prodh,w,c
 27035  004300  6EDA               	movwf	fsr2h,c
 27036  004302  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 27037  004306  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 27038                           
 27039                           ; BSR set to: 4
 27040                           ;usb_device.c: 1814: }
 27041                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27042                           
 27043                           ; BSR set to: 4
 27044  00430A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27045  00430E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27046  004312  AEDF               	btfss	indf2,7,c
 27047  004314  D014               	goto	i2l2012
 27048                           
 27049                           ; BSR set to: 4
 27050  004316  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27051  00431A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27052  00431E  A4DF               	btfss	indf2,2,c
 27053  004320  D00E               	goto	i2l2012
 27054                           
 27055                           ; BSR set to: 4
 27056                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 27057  004322  0E01               	movlw	1
 27058  004324  6F38               	movwf	56,b	;volatile
 27059                           
 27060                           ; BSR set to: 4
 27061                           ;usb_device.c: 1819: }
 27062                           ;usb_device.c: 1820: }
 27063                           
 27064                           ; BSR set to: 4
 27065                           ;usb_device.c: 1818: break;
 27066  004326  D00B               	goto	i2l2012
 27067  004328                     i2l2008:
 27068                           
 27069                           ; BSR set to: 4
 27070                           
 27071                           ; BSR set to: 4
 27072  004328  5130               	movf	48,w,b	;volatile
 27073  00432A  0B1F               	andlw	31
 27074                           
 27075                           ; Switch size 1, requested type "space"
 27076                           ; Number of cases is 3, Range of values is 0 to 2
 27077                           ; switch strategies available:
 27078                           ; Name         Instructions Cycles
 27079                           ; simple_byte           10     6 (average)
 27080                           ;	Chosen strategy is simple_byte
 27081  00432C  0A00               	xorlw	0	; case 0
 27082  00432E  B4D8               	btfsc	status,2,c
 27083  004330  D7C3               	goto	i2l2009
 27084  004332  0A01               	xorlw	1	; case 1
 27085  004334  B4D8               	btfsc	status,2,c
 27086  004336  D7C8               	goto	i2l2013
 27087  004338  0A03               	xorlw	3	; case 2
 27088  00433A  B4D8               	btfsc	status,2,c
 27089  00433C  D7C8               	goto	i2l2014
 27090  00433E                     i2l2012:
 27091                           
 27092                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27093  00433E  0100               	movlb	0	; () banked
 27094  004340  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27095  004342  0012               	return	
 27096                           
 27097                           ; BSR set to: 0
 27098                           ;usb_device.c: 1823: {
 27099                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27100  004344  0E38               	movlw	56
 27101  004346  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27102  004348  0E04               	movlw	4
 27103  00434A  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27104                           
 27105                           ; BSR set to: 0
 27106                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27107  00434C  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27108                           
 27109                           ; BSR set to: 0
 27110                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27111  00434E  0E02               	movlw	2
 27112  004350  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27113  004352  0012               	return	
 27114  004354                     __end_of_USBStdGetStatusHandler:
 27115                           	opt stack 0
 27116                           pclatu	equ	0xFFB
 27117                           pclath	equ	0xFFA
 27118                           tblptru	equ	0xFF8
 27119                           tblptrh	equ	0xFF7
 27120                           tblptrl	equ	0xFF6
 27121                           tablat	equ	0xFF5
 27122                           prodh	equ	0xFF4
 27123                           prodl	equ	0xFF3
 27124                           intcon	equ	0xFF2
 27125                           intcon2	equ	0xFF1
 27126                           intcon3	equ	0xFF0
 27127                           indf0	equ	0xFEF
 27128                           postinc0	equ	0xFEE
 27129                           fsr0h	equ	0xFEA
 27130                           fsr0l	equ	0xFE9
 27131                           wreg	equ	0xFE8
 27132                           indf1	equ	0xFE7
 27133                           postdec1	equ	0xFE5
 27134                           fsr1h	equ	0xFE2
 27135                           fsr1l	equ	0xFE1
 27136                           indf2	equ	0xFDF
 27137                           postinc2	equ	0xFDE
 27138                           postdec2	equ	0xFDD
 27139                           plusw2	equ	0xFDB
 27140                           fsr2h	equ	0xFDA
 27141                           fsr2l	equ	0xFD9
 27142                           status	equ	0xFD8
 27143                           
 27144 ;; *************** function _USBStdGetDscHandler *****************
 27145 ;; Defined at:
 27146 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27147 ;; Parameters:    Size  Location     Type
 27148 ;;		None
 27149 ;; Auto vars:     Size  Location     Type
 27150 ;;		None
 27151 ;; Return value:  Size  Location     Type
 27152 ;;                  1    wreg      void 
 27153 ;; Registers used:
 27154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27155 ;; Tracked objects:
 27156 ;;		On entry : 0/0
 27157 ;;		On exit  : 0/0
 27158 ;;		Unchanged: 0/0
 27159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27160 ;;      Params:         0       0       0       0       0       0       0       0       0
 27161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27162 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27163 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27164 ;;Total ram usage:        2 bytes
 27165 ;; Hardware stack levels used:    1
 27166 ;; This function calls:
 27167 ;;		Nothing
 27168 ;; This function is called by:
 27169 ;;		_USBCheckStdRequest
 27170 ;; This function uses a non-reentrant model
 27171 ;;
 27172                           
 27173                           	psect	text121
 27174  002CF8                     __ptext121:
 27175                           	opt stack 0
 27176  002CF8                     _USBStdGetDscHandler:
 27177                           	opt stack 16
 27178                           
 27179                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27180                           
 27181                           ; BSR set to: 0
 27182                           ;incstack = 0
 27183  002CF8  0E80               	movlw	128
 27184  002CFA  0104               	movlb	4	; () banked
 27185  002CFC  1930               	xorwf	48,w,b	;volatile
 27186  002CFE  A4D8               	btfss	status,2,c
 27187  002D00  0012               	return	
 27188                           
 27189                           ; BSR set to: 4
 27190                           ;usb_device.c: 1707: {
 27191                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27192  002D02  0EC0               	movlw	192
 27193  002D04  0100               	movlb	0	; () banked
 27194  002D06  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27195                           
 27196                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27197  002D08  D082               	goto	i2l1995
 27198  002D0A                     
 27199                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27200                           
 27201                           ; BSR set to: 0
 27202  002D0A  0EA2               	movlw	low _device_dsc
 27203  002D0C  0100               	movlb	0	; () banked
 27204  002D0E  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27205  002D10  0E79               	movlw	high _device_dsc
 27206  002D12  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27207                           
 27208                           ; BSR set to: 0
 27209                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27210  002D14  0E00               	movlw	0
 27211  002D16  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27212  002D18  0E12               	movlw	18
 27213  002D1A  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27214                           
 27215                           ;usb_device.c: 1715: break;
 27216  002D1C  0012               	return	
 27217  002D1E                     
 27218                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27219                           
 27220                           ; BSR set to: 0
 27221  002D1E  0104               	movlb	4	; () banked
 27222  002D20  5132               	movf	50,w,b	;volatile
 27223  002D22  A4D8               	btfss	status,2,c
 27224  002D24  D040               	goto	i2l1999
 27225                           
 27226                           ; BSR set to: 4
 27227                           ;usb_device.c: 1721: {
 27228                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27229  002D26  5132               	movf	50,w,b	;volatile
 27230  002D28  0D02               	mullw	2
 27231  002D2A  0EF5               	movlw	low _USB_CD_Ptr
 27232  002D2C  24F3               	addwf	prodl,w,c
 27233  002D2E  6EF6               	movwf	tblptrl,c
 27234  002D30  0E75               	movlw	high _USB_CD_Ptr
 27235  002D32  20F4               	addwfc	prodh,w,c
 27236  002D34  6EF7               	movwf	tblptrh,c
 27237  002D36                     	if	0	;There are less than 3 active tblptr bytes
 27238  002D36                     	endif
 27239  002D36  0009               	tblrd		*+
 27240  002D38  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27241  002D3C  000A               	tblrd		*-
 27242  002D3E  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27243                           
 27244                           ; BSR set to: 4
 27245                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27246  002D42  0E02               	movlw	2
 27247  002D44  0100               	movlb	0	; () banked
 27248  002D46  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27249  002D48  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27250  002D4A  0E00               	movlw	0
 27251  002D4C  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27252  002D4E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27253  002D50  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27254  002D54  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27255  002D58  6AF8               	clrf	tblptru,c
 27256  002D5A  0E07               	movlw	(high __ramtop+-1)
 27257  002D5C  64F7               	cpfsgt	tblptrh,c
 27258  002D5E  D003               	bra	i2u623_47
 27259  002D60  0008               	tblrd		*
 27260  002D62  50F5               	movf	tablat,w,c
 27261  002D64  D005               	bra	i2u623_40
 27262  002D66                     i2u623_47:
 27263  002D66  CFF6 FFE9          	movff	tblptrl,fsr0l
 27264  002D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27265  002D6E  50EF               	movf	indf0,w,c
 27266  002D70                     i2u623_40:
 27267  002D70  0100               	movlb	0	; () banked
 27268  002D72  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27269                           
 27270                           ; BSR set to: 0
 27271                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27272  002D74  0E03               	movlw	3
 27273  002D76  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27274  002D78  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27275  002D7A  0E00               	movlw	0
 27276  002D7C  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27277  002D7E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27278  002D80  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27279  002D84  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27280  002D88  6AF8               	clrf	tblptru,c
 27281  002D8A  0E07               	movlw	(high __ramtop+-1)
 27282  002D8C  64F7               	cpfsgt	tblptrh,c
 27283  002D8E  D003               	bra	i2u624_47
 27284  002D90  0008               	tblrd		*
 27285  002D92  50F5               	movf	tablat,w,c
 27286  002D94  D005               	bra	i2u624_40
 27287  002D96                     i2u624_47:
 27288  002D96  CFF6 FFE9          	movff	tblptrl,fsr0l
 27289  002D9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27290  002D9E  50EF               	movf	indf0,w,c
 27291  002DA0                     i2u624_40:
 27292  002DA0  0100               	movlb	0	; () banked
 27293  002DA2  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27294                           
 27295                           ;usb_device.c: 1729: }
 27296  002DA4  0012               	return	
 27297  002DA6                     i2l1999:
 27298                           
 27299                           ;usb_device.c: 1730: else
 27300                           ;usb_device.c: 1731: {
 27301                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 27302                           
 27303                           ; BSR set to: 0
 27304  002DA6  0E00               	movlw	0
 27305  002DA8  0100               	movlb	0	; () banked
 27306  002DAA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27307                           
 27308                           ; BSR set to: 0
 27309                           ;usb_device.c: 1733: }
 27310                           ;usb_device.c: 1734: break;
 27311  002DAC  0012               	return	
 27312  002DAE                     
 27313                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 27314                           
 27315                           ; BSR set to: 0
 27316  002DAE  0E03               	movlw	3
 27317  002DB0  0104               	movlb	4	; () banked
 27318  002DB2  6132               	cpfslt	50,b	;volatile
 27319  002DB4  D024               	goto	i2l2002
 27320                           
 27321                           ; BSR set to: 4
 27322                           ;usb_device.c: 1740: {
 27323                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27324  002DB6  5132               	movf	50,w,b	;volatile
 27325  002DB8  0D02               	mullw	2
 27326  002DBA  0EEF               	movlw	low _USB_SD_Ptr
 27327  002DBC  24F3               	addwf	prodl,w,c
 27328  002DBE  6EF6               	movwf	tblptrl,c
 27329  002DC0  0E75               	movlw	high _USB_SD_Ptr
 27330  002DC2  20F4               	addwfc	prodh,w,c
 27331  002DC4  6EF7               	movwf	tblptrh,c
 27332  002DC6                     	if	0	;There are less than 3 active tblptr bytes
 27333  002DC6                     	endif
 27334  002DC6  0009               	tblrd		*+
 27335  002DC8  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27336  002DCC  000A               	tblrd		*-
 27337  002DCE  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27338                           
 27339                           ; BSR set to: 4
 27340                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27341  002DD2  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 27342  002DD6  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27343  002DDA  6AF8               	clrf	tblptru,c
 27344  002DDC  0E07               	movlw	(high __ramtop+-1)
 27345  002DDE  64F7               	cpfsgt	tblptrh,c
 27346  002DE0  D003               	bra	i2u626_47
 27347  002DE2  0008               	tblrd		*
 27348  002DE4  50F5               	movf	tablat,w,c
 27349  002DE6  D005               	bra	i2u626_40
 27350  002DE8                     i2u626_47:
 27351  002DE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 27352  002DEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 27353  002DF0  50EF               	movf	indf0,w,c
 27354  002DF2                     i2u626_40:
 27355  002DF2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27356  002DF4  5001               	movf	??_USBStdGetDscHandler,w,c
 27357  002DF6  0100               	movlb	0	; () banked
 27358  002DF8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27359  002DFA  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27360                           
 27361                           ;usb_device.c: 1745: }
 27362  002DFC  0012               	return	
 27363  002DFE                     i2l2002:
 27364                           
 27365                           ;usb_device.c: 1746: else
 27366                           ;usb_device.c: 1747: {
 27367                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27368                           
 27369                           ; BSR set to: 0
 27370  002DFE  0E00               	movlw	0
 27371  002E00  0100               	movlb	0	; () banked
 27372  002E02  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;usb_device.c: 1749: }
 27376                           ;usb_device.c: 1750: break;
 27377  002E04  0012               	return	
 27378  002E06                     
 27379                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27380                           
 27381                           ; BSR set to: 0
 27382  002E06  0E00               	movlw	0
 27383  002E08  0100               	movlb	0	; () banked
 27384  002E0A  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27385                           
 27386                           ; BSR set to: 0
 27387                           ;usb_device.c: 1754: }
 27388                           
 27389                           ;usb_device.c: 1753: break;
 27390  002E0C  0012               	return	
 27391  002E0E                     i2l1995:
 27392                           
 27393                           ; BSR set to: 0
 27394                           
 27395                           ; BSR set to: 0
 27396  002E0E  0104               	movlb	4	; () banked
 27397  002E10  5133               	movf	51,w,b	;volatile
 27398                           
 27399                           ; Switch size 1, requested type "space"
 27400                           ; Number of cases is 3, Range of values is 1 to 3
 27401                           ; switch strategies available:
 27402                           ; Name         Instructions Cycles
 27403                           ; simple_byte           10     6 (average)
 27404                           ;	Chosen strategy is simple_byte
 27405  002E12  0A01               	xorlw	1	; case 1
 27406  002E14  B4D8               	btfsc	status,2,c
 27407  002E16  D779               	goto	i2l1996
 27408  002E18  0A03               	xorlw	3	; case 2
 27409  002E1A  B4D8               	btfsc	status,2,c
 27410  002E1C  D780               	goto	i2l1998
 27411  002E1E  0A01               	xorlw	1	; case 3
 27412  002E20  B4D8               	btfsc	status,2,c
 27413  002E22  D7C5               	goto	i2l2001
 27414  002E24  D7F0               	goto	i2l2004
 27415  002E26                     __end_of_USBStdGetDscHandler:
 27416                           	opt stack 0
 27417                           pclatu	equ	0xFFB
 27418                           pclath	equ	0xFFA
 27419                           tblptru	equ	0xFF8
 27420                           tblptrh	equ	0xFF7
 27421                           tblptrl	equ	0xFF6
 27422                           tablat	equ	0xFF5
 27423                           prodh	equ	0xFF4
 27424                           prodl	equ	0xFF3
 27425                           intcon	equ	0xFF2
 27426                           intcon2	equ	0xFF1
 27427                           intcon3	equ	0xFF0
 27428                           indf0	equ	0xFEF
 27429                           postinc0	equ	0xFEE
 27430                           fsr0h	equ	0xFEA
 27431                           fsr0l	equ	0xFE9
 27432                           wreg	equ	0xFE8
 27433                           indf1	equ	0xFE7
 27434                           postdec1	equ	0xFE5
 27435                           fsr1h	equ	0xFE2
 27436                           fsr1l	equ	0xFE1
 27437                           indf2	equ	0xFDF
 27438                           postinc2	equ	0xFDE
 27439                           postdec2	equ	0xFDD
 27440                           plusw2	equ	0xFDB
 27441                           fsr2h	equ	0xFDA
 27442                           fsr2l	equ	0xFD9
 27443                           status	equ	0xFD8
 27444                           
 27445 ;; *************** function _USBStdFeatureReqHandler *****************
 27446 ;; Defined at:
 27447 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27448 ;; Parameters:    Size  Location     Type
 27449 ;;		None
 27450 ;; Auto vars:     Size  Location     Type
 27451 ;;  p               2   25[COMRAM] PTR struct __BDT
 27452 ;;		 -> BDT(48), NULL(0), 
 27453 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27454 ;;		 -> UEP0(1), 
 27455 ;;  current_ep_d    1   24[COMRAM] struct .
 27456 ;; Return value:  Size  Location     Type
 27457 ;;                  1    wreg      void 
 27458 ;; Registers used:
 27459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27460 ;; Tracked objects:
 27461 ;;		On entry : 0/0
 27462 ;;		On exit  : 0/0
 27463 ;;		Unchanged: 0/0
 27464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27465 ;;      Params:         0       0       0       0       0       0       0       0       0
 27466 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27467 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27468 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27469 ;;Total ram usage:        6 bytes
 27470 ;; Hardware stack levels used:    1
 27471 ;; Hardware stack levels required when called:    5
 27472 ;; This function calls:
 27473 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27474 ;; This function is called by:
 27475 ;;		_USBCheckStdRequest
 27476 ;; This function uses a non-reentrant model
 27477 ;;
 27478                           
 27479                           	psect	text122
 27480  001E7A                     __ptext122:
 27481                           	opt stack 0
 27482  001E7A                     _USBStdFeatureReqHandler:
 27483                           	opt stack 11
 27484                           
 27485                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27486                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27487                           ;usb_device.c: 2390: unsigned char* pUEP;
 27488                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27489                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27490                           
 27491                           ;incstack = 0
 27492  001E7A  0104               	movlb	4	; () banked
 27493  001E7C  0532               	decf	50,w,b	;volatile
 27494  001E7E  A4D8               	btfss	status,2,c
 27495  001E80  D010               	goto	i2l2090
 27496                           
 27497                           ; BSR set to: 4
 27498  001E82  5130               	movf	48,w,b	;volatile
 27499  001E84  0B1F               	andlw	31
 27500  001E86  0900               	iorlw	0
 27501  001E88  A4D8               	btfss	status,2,c
 27502  001E8A  D00B               	goto	i2l2090
 27503                           
 27504                           ; BSR set to: 4
 27505                           ;usb_device.c: 2395: {
 27506                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27507  001E8C  0100               	movlb	0	; () banked
 27508  001E8E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27509                           
 27510                           ; BSR set to: 0
 27511                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27512  001E90  0E03               	movlw	3
 27513  001E92  0104               	movlb	4	; () banked
 27514  001E94  1931               	xorwf	49,w,b	;volatile
 27515  001E96  A4D8               	btfss	status,2,c
 27516  001E98  D002               	goto	i2l2089
 27517                           
 27518                           ; BSR set to: 4
 27519                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27520  001E9A  0E01               	movlw	1
 27521  001E9C  D001               	goto	L26
 27522  001E9E                     i2l2089:
 27523                           
 27524                           ; BSR set to: 4
 27525                           ;usb_device.c: 2399: else
 27526                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27527                           
 27528                           ; BSR set to: 4
 27529  001E9E  0E00               	movlw	0
 27530  001EA0                     L26:
 27531  001EA0  6E54               	movwf	_RemoteWakeup,c	;volatile
 27532  001EA2                     i2l2090:
 27533                           
 27534                           ; BSR set to: 4
 27535                           ;usb_device.c: 2401: }
 27536                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27537                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27538                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27539                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27540                           
 27541                           ; BSR set to: 4
 27542  001EA2  5132               	movf	50,w,b	;volatile
 27543  001EA4  A4D8               	btfss	status,2,c
 27544  001EA6  0012               	return	
 27545                           
 27546                           ; BSR set to: 4
 27547  001EA8  5130               	movf	48,w,b	;volatile
 27548  001EAA  0B1F               	andlw	31
 27549  001EAC  0A02               	xorlw	2
 27550  001EAE  A4D8               	btfss	status,2,c
 27551  001EB0  0012               	return	
 27552                           
 27553                           ; BSR set to: 4
 27554  001EB2  5134               	movf	52,w,b	;volatile
 27555  001EB4  0B0F               	andlw	15
 27556  001EB6  0900               	iorlw	0
 27557  001EB8  B4D8               	btfsc	status,2,c
 27558  001EBA  0012               	return	
 27559                           
 27560                           ; BSR set to: 4
 27561  001EBC  5134               	movf	52,w,b	;volatile
 27562  001EBE  0B0F               	andlw	15
 27563  001EC0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27564  001EC2  0E03               	movlw	3
 27565  001EC4  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27566  001EC6  0012               	return	
 27567                           
 27568                           ; BSR set to: 4
 27569  001EC8  0E20               	movlw	32
 27570  001ECA  0100               	movlb	0	; () banked
 27571  001ECC  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27572  001ECE  A4D8               	btfss	status,2,c
 27573  001ED0  0012               	return	
 27574                           
 27575                           ; BSR set to: 0
 27576                           ;usb_device.c: 2408: {
 27577                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27578  001ED2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27579                           
 27580                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27581  001ED4  0104               	movlb	4	; () banked
 27582  001ED6  BF34               	btfsc	52,7,b	;volatile
 27583  001ED8  D019               	goto	i2l2092
 27584                           
 27585                           ; BSR set to: 4
 27586                           ;usb_device.c: 2415: {
 27587                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27588  001EDA  5134               	movf	52,w,b	;volatile
 27589  001EDC  0B0F               	andlw	15
 27590  001EDE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27591  001EE0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27592  001EE2  0D02               	mullw	2
 27593  001EE4  0E20               	movlw	low _pBDTEntryOut
 27594  001EE6  24F3               	addwf	prodl,w,c
 27595  001EE8  6ED9               	movwf	fsr2l,c
 27596  001EEA  0E01               	movlw	high _pBDTEntryOut
 27597  001EEC  20F4               	addwfc	prodh,w,c
 27598  001EEE  6EDA               	movwf	fsr2h,c
 27599  001EF0  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27600  001EF4  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27601                           
 27602                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27603  001EF8  5134               	movf	52,w,b	;volatile
 27604  001EFA  0B0F               	andlw	15
 27605  001EFC  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27606  001EFE  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27607  001F00  0D01               	mullw	1
 27608  001F02  0ED0               	movlw	low _ep_data_out
 27609  001F04  24F3               	addwf	prodl,w,c
 27610  001F06  6ED9               	movwf	fsr2l,c
 27611  001F08  0E00               	movlw	high _ep_data_out
 27612  001F0A  D018               	goto	L27
 27613  001F0C                     i2l2092:
 27614                           
 27615                           ; BSR set to: 4
 27616                           ;usb_device.c: 2419: else
 27617                           ;usb_device.c: 2420: {
 27618                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27619                           
 27620                           ; BSR set to: 4
 27621  001F0C  5134               	movf	52,w,b	;volatile
 27622  001F0E  0B0F               	andlw	15
 27623  001F10  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27624  001F12  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27625  001F14  0D02               	mullw	2
 27626  001F16  0ECA               	movlw	low _pBDTEntryIn
 27627  001F18  24F3               	addwf	prodl,w,c
 27628  001F1A  6ED9               	movwf	fsr2l,c
 27629  001F1C  0E00               	movlw	high _pBDTEntryIn
 27630  001F1E  20F4               	addwfc	prodh,w,c
 27631  001F20  6EDA               	movwf	fsr2h,c
 27632  001F22  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27633  001F26  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27634                           
 27635                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27636  001F2A  5134               	movf	52,w,b	;volatile
 27637  001F2C  0B0F               	andlw	15
 27638  001F2E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27639  001F30  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27640  001F32  0D01               	mullw	1
 27641  001F34  0ED3               	movlw	low _ep_data_in
 27642  001F36  24F3               	addwf	prodl,w,c
 27643  001F38  6ED9               	movwf	fsr2l,c
 27644  001F3A  0E00               	movlw	high _ep_data_in
 27645  001F3C                     L27:
 27646  001F3C  20F4               	addwfc	prodh,w,c
 27647  001F3E  6EDA               	movwf	fsr2h,c
 27648  001F40  50DF               	movf	indf2,w,c
 27649  001F42  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27650                           
 27651                           ; BSR set to: 4
 27652                           ;usb_device.c: 2423: }
 27653                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27654                           
 27655                           ; BSR set to: 4
 27656  001F44  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27657  001F46  D002               	goto	i2l2094
 27658                           
 27659                           ; BSR set to: 4
 27660                           ;usb_device.c: 2429: {
 27661                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27662  001F48  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27663                           
 27664                           ;usb_device.c: 2431: }
 27665  001F4A  D001               	goto	i2l2095
 27666  001F4C                     i2l2094:
 27667                           
 27668                           ; BSR set to: 4
 27669                           ;usb_device.c: 2432: else
 27670                           ;usb_device.c: 2433: {
 27671                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27672                           
 27673                           ; BSR set to: 4
 27674  001F4C  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27675  001F4E                     i2l2095:
 27676                           
 27677                           ; BSR set to: 4
 27678                           ;usb_device.c: 2435: }
 27679                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27680                           
 27681                           ; BSR set to: 4
 27682  001F4E  BF34               	btfsc	52,7,b	;volatile
 27683  001F50  D00A               	goto	i2l2096
 27684                           
 27685                           ; BSR set to: 4
 27686                           ;usb_device.c: 2440: {
 27687                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27688  001F52  5134               	movf	52,w,b	;volatile
 27689  001F54  0B0F               	andlw	15
 27690  001F56  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27691  001F58  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27692  001F5A  0D02               	mullw	2
 27693  001F5C  0E20               	movlw	low _pBDTEntryOut
 27694  001F5E  24F3               	addwf	prodl,w,c
 27695  001F60  6ED9               	movwf	fsr2l,c
 27696  001F62  0E01               	movlw	high _pBDTEntryOut
 27697  001F64  D009               	goto	L28
 27698  001F66                     i2l2096:
 27699                           
 27700                           ; BSR set to: 4
 27701                           ;usb_device.c: 2443: else
 27702                           ;usb_device.c: 2444: {
 27703                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27704                           
 27705                           ; BSR set to: 4
 27706  001F66  5134               	movf	52,w,b	;volatile
 27707  001F68  0B0F               	andlw	15
 27708  001F6A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27709  001F6C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27710  001F6E  0D02               	mullw	2
 27711  001F70  0ECA               	movlw	low _pBDTEntryIn
 27712  001F72  24F3               	addwf	prodl,w,c
 27713  001F74  6ED9               	movwf	fsr2l,c
 27714  001F76  0E00               	movlw	high _pBDTEntryIn
 27715  001F78                     L28:
 27716  001F78  20F4               	addwfc	prodh,w,c
 27717  001F7A  6EDA               	movwf	fsr2h,c
 27718  001F7C  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27719  001F80  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27720                           
 27721                           ; BSR set to: 4
 27722                           ;usb_device.c: 2446: }
 27723                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27724                           
 27725                           ; BSR set to: 4
 27726  001F84  0E03               	movlw	3
 27727  001F86  1931               	xorwf	49,w,b	;volatile
 27728  001F88  A4D8               	btfss	status,2,c
 27729  001F8A  D02D               	goto	i2l2098
 27730                           
 27731                           ; BSR set to: 4
 27732                           ;usb_device.c: 2450: {
 27733                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27734  001F8C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27735  001F90  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27736  001F94  AEDF               	btfss	indf2,7,c
 27737  001F96  D01A               	goto	i2l2101
 27738                           
 27739                           ; BSR set to: 4
 27740                           ;usb_device.c: 2452: {
 27741                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27742  001F98  BF34               	btfsc	52,7,b	;volatile
 27743  001F9A  D00A               	goto	i2l2100
 27744                           
 27745                           ; BSR set to: 4
 27746                           ;usb_device.c: 2456: {
 27747                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27748  001F9C  5134               	movf	52,w,b	;volatile
 27749  001F9E  0B0F               	andlw	15
 27750  001FA0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27751  001FA2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27752  001FA4  0D01               	mullw	1
 27753  001FA6  0ED0               	movlw	low _ep_data_out
 27754  001FA8  24F3               	addwf	prodl,w,c
 27755  001FAA  6ED9               	movwf	fsr2l,c
 27756  001FAC  0E00               	movlw	high _ep_data_out
 27757  001FAE  D00A               	goto	L29
 27758  001FB0                     i2l2100:
 27759                           
 27760                           ;usb_device.c: 2459: else
 27761                           ;usb_device.c: 2460: {
 27762                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27763                           
 27764                           ; BSR set to: 0
 27765  001FB0  0104               	movlb	4	; () banked
 27766  001FB2  5134               	movf	52,w,b	;volatile
 27767  001FB4  0B0F               	andlw	15
 27768  001FB6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27769  001FB8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27770  001FBA  0D01               	mullw	1
 27771  001FBC  0ED3               	movlw	low _ep_data_in
 27772  001FBE  24F3               	addwf	prodl,w,c
 27773  001FC0  6ED9               	movwf	fsr2l,c
 27774  001FC2  0E00               	movlw	high _ep_data_in
 27775  001FC4                     L29:
 27776  001FC4  20F4               	addwfc	prodh,w,c
 27777  001FC6  6EDA               	movwf	fsr2h,c
 27778  001FC8  0100               	movlb	0	; () banked
 27779  001FCA  82DF               	bsf	indf2,1,c
 27780  001FCC                     i2l2101:
 27781                           
 27782                           ;usb_device.c: 2462: }
 27783                           ;usb_device.c: 2463: }
 27784                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27785                           
 27786                           ; BSR set to: 0
 27787                           
 27788                           ; BSR set to: 0
 27789  001FCC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27790  001FD0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27791  001FD4  0E00               	movlw	0
 27792  001FD6  84DB               	bsf	plusw2,2,c
 27793                           
 27794                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27795  001FD8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27796  001FDC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27797  001FE0  0E00               	movlw	0
 27798  001FE2  8EDB               	bsf	plusw2,7,c
 27799                           
 27800                           ;usb_device.c: 2468: }
 27801  001FE4  0012               	return	
 27802  001FE6                     i2l2098:
 27803                           
 27804                           ;usb_device.c: 2469: else
 27805                           ;usb_device.c: 2470: {
 27806                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27807  001FE6  0E04               	movlw	4
 27808  001FE8  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27809                           
 27810                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27811  001FEA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27812  001FEE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27813  001FF2  AEDF               	btfss	indf2,7,c
 27814  001FF4  D01B               	goto	i2l2103
 27815                           
 27816                           ;usb_device.c: 2476: {
 27817                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27818  001FF6  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27819  001FFA  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27820  001FFE  0E7F               	movlw	127
 27821  002000  16DF               	andwf	indf2,f,c
 27822                           
 27823                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27824  002002  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27825  002006  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27826  00200A  0E00               	movlw	0
 27827  00200C  8CDB               	bsf	plusw2,6,c
 27828                           
 27829                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27830  00200E  0E00               	movlw	0
 27831  002010  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27832  002012  0E05               	movlw	5
 27833  002014  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27834  002016  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27835  00201A  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27836  00201E  0E00               	movlw	0
 27837  002020  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27838  002022  0E02               	movlw	2
 27839  002024  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27840  002026  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27841                           
 27842                           ;usb_device.c: 2482: }
 27843  00202A  D006               	goto	i2l2104
 27844  00202C                     i2l2103:
 27845                           
 27846                           ;usb_device.c: 2483: else
 27847                           ;usb_device.c: 2484: {
 27848                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27849  00202C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27850  002030  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27851  002034  0E00               	movlw	0
 27852  002036  8CDB               	bsf	plusw2,6,c
 27853  002038                     i2l2104:
 27854                           
 27855                           ;usb_device.c: 2487: }
 27856                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27857  002038  0E04               	movlw	4
 27858  00203A  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27859                           
 27860                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27861  00203C  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27862  00203E  D006               	goto	i2u648_40
 27863  002040  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27864  002044  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27865  002048  AEDF               	btfss	indf2,7,c
 27866  00204A  D030               	goto	i2l2105
 27867  00204C                     i2u648_40:
 27868                           
 27869                           ;usb_device.c: 2498: {
 27870                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27871  00204C  0104               	movlb	4	; () banked
 27872  00204E  BF34               	btfsc	52,7,b	;volatile
 27873  002050  D00A               	goto	i2l2108
 27874                           
 27875                           ; BSR set to: 4
 27876                           ;usb_device.c: 2500: {
 27877                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27878  002052  5134               	movf	52,w,b	;volatile
 27879  002054  0B0F               	andlw	15
 27880  002056  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27881  002058  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27882  00205A  0D01               	mullw	1
 27883  00205C  0ED0               	movlw	low _ep_data_out
 27884  00205E  24F3               	addwf	prodl,w,c
 27885  002060  6ED9               	movwf	fsr2l,c
 27886  002062  0E00               	movlw	high _ep_data_out
 27887  002064  D00A               	goto	L30
 27888  002066                     i2l2108:
 27889                           
 27890                           ;usb_device.c: 2503: else
 27891                           ;usb_device.c: 2504: {
 27892                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27893                           
 27894                           ; BSR set to: 0
 27895  002066  0104               	movlb	4	; () banked
 27896  002068  5134               	movf	52,w,b	;volatile
 27897  00206A  0B0F               	andlw	15
 27898  00206C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27899  00206E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27900  002070  0D01               	mullw	1
 27901  002072  0ED3               	movlw	low _ep_data_in
 27902  002074  24F3               	addwf	prodl,w,c
 27903  002076  6ED9               	movwf	fsr2l,c
 27904  002078  0E00               	movlw	high _ep_data_in
 27905  00207A                     L30:
 27906  00207A  20F4               	addwfc	prodh,w,c
 27907  00207C  6EDA               	movwf	fsr2h,c
 27908  00207E  0100               	movlb	0	; () banked
 27909  002080  92DF               	bcf	indf2,1,c
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;usb_device.c: 2506: }
 27913                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27914                           
 27915                           ; BSR set to: 0
 27916  002082  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27917  002086  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27918  00208A  0E3B               	movlw	59
 27919  00208C  16DF               	andwf	indf2,f,c
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27923  00208E  0E00               	movlw	0
 27924  002090  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27925  002092  0E05               	movlw	5
 27926  002094  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27927  002096  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27928  00209A  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27929  00209E  0E00               	movlw	0
 27930  0020A0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27931  0020A2  0E02               	movlw	2
 27932  0020A4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27933  0020A6  EC39  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27934                           
 27935                           ;usb_device.c: 2512: }
 27936  0020AA  D006               	goto	i2l2110
 27937  0020AC                     i2l2105:
 27938                           
 27939                           ;usb_device.c: 2513: else
 27940                           ;usb_device.c: 2514: {
 27941                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27942  0020AC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27943  0020B0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27944  0020B4  0E3B               	movlw	59
 27945  0020B6  16DF               	andwf	indf2,f,c
 27946  0020B8                     i2l2110:
 27947                           
 27948                           ;usb_device.c: 2517: }
 27949                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27950  0020B8  0104               	movlb	4	; () banked
 27951  0020BA  5134               	movf	52,w,b	;volatile
 27952  0020BC  0B0F               	andlw	15
 27953  0020BE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27954  0020C0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27955  0020C2  0D01               	mullw	1
 27956  0020C4  0E6A               	movlw	106
 27957  0020C6  24F3               	addwf	prodl,w,c
 27958  0020C8  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27959  0020CA  0E0F               	movlw	15
 27960  0020CC  20F4               	addwfc	prodh,w,c
 27961  0020CE  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27962                           
 27963                           ; BSR set to: 4
 27964                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27965  0020D0  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27966  0020D4  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27967  0020D8  0EFE               	movlw	254
 27968  0020DA  16DF               	andwf	indf2,f,c
 27969                           
 27970                           ; BSR set to: 4
 27971  0020DC  0012               	return	
 27972  0020DE                     __end_of_USBStdFeatureReqHandler:
 27973                           	opt stack 0
 27974                           pclatu	equ	0xFFB
 27975                           pclath	equ	0xFFA
 27976                           tblptru	equ	0xFF8
 27977                           tblptrh	equ	0xFF7
 27978                           tblptrl	equ	0xFF6
 27979                           tablat	equ	0xFF5
 27980                           prodh	equ	0xFF4
 27981                           prodl	equ	0xFF3
 27982                           intcon	equ	0xFF2
 27983                           intcon2	equ	0xFF1
 27984                           intcon3	equ	0xFF0
 27985                           indf0	equ	0xFEF
 27986                           postinc0	equ	0xFEE
 27987                           fsr0h	equ	0xFEA
 27988                           fsr0l	equ	0xFE9
 27989                           wreg	equ	0xFE8
 27990                           indf1	equ	0xFE7
 27991                           postdec1	equ	0xFE5
 27992                           fsr1h	equ	0xFE2
 27993                           fsr1l	equ	0xFE1
 27994                           indf2	equ	0xFDF
 27995                           postinc2	equ	0xFDE
 27996                           postdec2	equ	0xFDD
 27997                           plusw2	equ	0xFDB
 27998                           fsr2h	equ	0xFDA
 27999                           fsr2l	equ	0xFD9
 28000                           status	equ	0xFD8
 28001                           
 28002 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28003 ;; Defined at:
 28004 ;;		line 308 in file "../Includes/Board/USBapp.c"
 28005 ;; Parameters:    Size  Location     Type
 28006 ;;  event           2   13[COMRAM] enum E5981
 28007 ;;  pdata           2   15[COMRAM] PTR void 
 28008 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 28009 ;;  size            2   17[COMRAM] unsigned int 
 28010 ;; Auto vars:     Size  Location     Type
 28011 ;;		None
 28012 ;; Return value:  Size  Location     Type
 28013 ;;                  1    wreg      unsigned char 
 28014 ;; Registers used:
 28015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28016 ;; Tracked objects:
 28017 ;;		On entry : 0/0
 28018 ;;		On exit  : 0/0
 28019 ;;		Unchanged: 0/0
 28020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28021 ;;      Params:         6       0       0       0       0       0       0       0       0
 28022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28023 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28024 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28025 ;;Total ram usage:        8 bytes
 28026 ;; Hardware stack levels used:    1
 28027 ;; Hardware stack levels required when called:    4
 28028 ;; This function calls:
 28029 ;;		_USBCheckCDCRequest
 28030 ;;		_USBapp_CdcEmulatorInitialize
 28031 ;; This function is called by:
 28032 ;;		_USBDeviceTasks
 28033 ;;		_USBStdSetCfgHandler
 28034 ;;		_USBSuspend
 28035 ;;		_USBWakeFromSuspend
 28036 ;;		_USBCtrlTrfSetupHandler
 28037 ;;		_USBCheckStdRequest
 28038 ;;		_USBStdFeatureReqHandler
 28039 ;; This function uses a non-reentrant model
 28040 ;;
 28041                           
 28042                           	psect	text123
 28043  005072                     __ptext123:
 28044                           	opt stack 0
 28045  005072                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28046                           	opt stack 15
 28047                           
 28048                           ;USBapp.c: 310: switch( (int) event )
 28049                           
 28050                           ;incstack = 0
 28051  005072  D006               	goto	i2l917
 28052  005074                     
 28053                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 28054  005074  ECC2  F028         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 28055                           
 28056                           ;USBapp.c: 338: break;
 28057                           
 28058                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 28059                           
 28060                           ;USBapp.c: 335: break;
 28061  005078  0012               	return	
 28062  00507A                     
 28063                           ;USBapp.c: 343: USBCheckCDCRequest();
 28064  00507A  ECA7  F020         	call	_USBCheckCDCRequest	;wreg free
 28065                           
 28066                           ;USBapp.c: 354: }
 28067                           
 28068                           ;USBapp.c: 353: break;
 28069                           
 28070                           ;USBapp.c: 352: default:
 28071                           
 28072                           ;USBapp.c: 350: break;
 28073                           
 28074                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 28075                           
 28076                           ;USBapp.c: 347: break;
 28077                           
 28078                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 28079                           
 28080                           ;USBapp.c: 344: break;
 28081  00507E  0012               	return	
 28082  005080                     i2l917:
 28083  005080  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28084  005084  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28085                           
 28086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28087                           ; Switch size 1, requested type "space"
 28088                           ; Number of cases is 2, Range of values is 0 to 127
 28089                           ; switch strategies available:
 28090                           ; Name         Instructions Cycles
 28091                           ; simple_byte            7     4 (average)
 28092                           ;	Chosen strategy is simple_byte
 28093  005088  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28094  00508A  0A00               	xorlw	0	; case 0
 28095  00508C  B4D8               	btfsc	status,2,c
 28096  00508E  D004               	goto	i2l12350
 28097  005090  0A7F               	xorlw	127	; case 127
 28098  005092  A4D8               	btfss	status,2,c
 28099  005094  0012               	return	
 28100  005096  D018               	goto	i2l12352
 28101  005098                     i2l12350:
 28102                           
 28103                           ; Switch size 1, requested type "space"
 28104                           ; Number of cases is 8, Range of values is 1 to 117
 28105                           ; switch strategies available:
 28106                           ; Name         Instructions Cycles
 28107                           ; simple_byte           25    13 (average)
 28108                           ;	Chosen strategy is simple_byte
 28109  005098  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28110  00509A  0A01               	xorlw	1	; case 1
 28111  00509C  B4D8               	btfsc	status,2,c
 28112  00509E  D7EA               	goto	i2l923
 28113  0050A0  0A03               	xorlw	3	; case 2
 28114  0050A2  B4D8               	btfsc	status,2,c
 28115  0050A4  0012               	return	
 28116  0050A6  0A01               	xorlw	1	; case 3
 28117  0050A8  B4D8               	btfsc	status,2,c
 28118  0050AA  D7E7               	goto	i2l925
 28119  0050AC  0A06               	xorlw	6	; case 5
 28120  0050AE  B4D8               	btfsc	status,2,c
 28121  0050B0  0012               	return	
 28122  0050B2  0A77               	xorlw	119	; case 114
 28123  0050B4  B4D8               	btfsc	status,2,c
 28124  0050B6  0012               	return	
 28125  0050B8  0A01               	xorlw	1	; case 115
 28126  0050BA  B4D8               	btfsc	status,2,c
 28127  0050BC  0012               	return	
 28128  0050BE  0A07               	xorlw	7	; case 116
 28129  0050C0  B4D8               	btfsc	status,2,c
 28130  0050C2  0012               	return	
 28131  0050C4  0A01               	xorlw	1	; case 117
 28132  0050C6  0012               	return	
 28133  0050C8                     i2l12352:
 28134                           
 28135                           ; Switch size 1, requested type "space"
 28136                           ; Number of cases is 1, Range of values is 255 to 255
 28137                           ; switch strategies available:
 28138                           ; Name         Instructions Cycles
 28139                           ; simple_byte            4     3 (average)
 28140                           ;	Chosen strategy is simple_byte
 28141  0050C8  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28142  0050CA  0AFF               	xorlw	255	; case 255
 28143  0050CC  0012               	return	
 28144  0050CE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28145                           	opt stack 0
 28146                           pclatu	equ	0xFFB
 28147                           pclath	equ	0xFFA
 28148                           tblptru	equ	0xFF8
 28149                           tblptrh	equ	0xFF7
 28150                           tblptrl	equ	0xFF6
 28151                           tablat	equ	0xFF5
 28152                           prodh	equ	0xFF4
 28153                           prodl	equ	0xFF3
 28154                           intcon	equ	0xFF2
 28155                           intcon2	equ	0xFF1
 28156                           intcon3	equ	0xFF0
 28157                           indf0	equ	0xFEF
 28158                           postinc0	equ	0xFEE
 28159                           fsr0h	equ	0xFEA
 28160                           fsr0l	equ	0xFE9
 28161                           wreg	equ	0xFE8
 28162                           indf1	equ	0xFE7
 28163                           postdec1	equ	0xFE5
 28164                           fsr1h	equ	0xFE2
 28165                           fsr1l	equ	0xFE1
 28166                           indf2	equ	0xFDF
 28167                           postinc2	equ	0xFDE
 28168                           postdec2	equ	0xFDD
 28169                           plusw2	equ	0xFDB
 28170                           fsr2h	equ	0xFDA
 28171                           fsr2l	equ	0xFD9
 28172                           status	equ	0xFD8
 28173                           
 28174 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28175 ;; Defined at:
 28176 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28177 ;; Parameters:    Size  Location     Type
 28178 ;;		None
 28179 ;; Auto vars:     Size  Location     Type
 28180 ;;  i               1   12[COMRAM] unsigned char 
 28181 ;; Return value:  Size  Location     Type
 28182 ;;                  1    wreg      void 
 28183 ;; Registers used:
 28184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/0
 28187 ;;		On exit  : 0/0
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28190 ;;      Params:         0       0       0       0       0       0       0       0       0
 28191 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28193 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28194 ;;Total ram usage:        1 bytes
 28195 ;; Hardware stack levels used:    1
 28196 ;; Hardware stack levels required when called:    3
 28197 ;; This function calls:
 28198 ;;		_CDCInitEP
 28199 ;;		i2_EUSART_Initialize
 28200 ;; This function is called by:
 28201 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28202 ;; This function uses a non-reentrant model
 28203 ;;
 28204                           
 28205                           	psect	text124
 28206  005184                     __ptext124:
 28207                           	opt stack 0
 28208  005184                     _USBapp_CdcEmulatorInitialize:
 28209                           	opt stack 15
 28210                           
 28211                           ;USBapp.c: 147: CDCInitEP();
 28212                           
 28213                           ;incstack = 0
 28214  005184  EC40  F027         	call	_CDCInitEP	;wreg free
 28215                           
 28216                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28217  005188  0E00               	movlw	0
 28218  00518A  0101               	movlb	1	; () banked
 28219  00518C  6FD6               	movwf	(_line_coding+4)& (0+255),b
 28220                           
 28221                           ; BSR set to: 1
 28222                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28223  00518E  0E08               	movlw	8
 28224  005190  6FD8               	movwf	(_line_coding+6)& (0+255),b
 28225                           
 28226                           ; BSR set to: 1
 28227                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28228  005192  0E00               	movlw	0
 28229  005194  6FD7               	movwf	(_line_coding+5)& (0+255),b
 28230                           
 28231                           ; BSR set to: 1
 28232                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28233  005196  0E00               	movlw	0
 28234  005198  6FD2               	movwf	_line_coding& (0+255),b
 28235  00519A  0E4B               	movlw	75
 28236  00519C  6FD3               	movwf	(_line_coding+1)& (0+255),b
 28237  00519E  0E00               	movlw	0
 28238  0051A0  6FD4               	movwf	(_line_coding+2)& (0+255),b
 28239  0051A2  0E00               	movlw	0
 28240  0051A4  6FD5               	movwf	(_line_coding+3)& (0+255),b
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;USBapp.c: 152: EUSART_Initialize();
 28244  0051A6  ECE4  F02A         	call	i2_EUSART_Initialize	;wreg free
 28245                           
 28246                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28247  0051AA  0E00               	movlw	0
 28248  0051AC  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28249  0051AE                     i2l7940:
 28250  0051AE  0E3F               	movlw	63
 28251  0051B0  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28252  0051B2  D001               	goto	i2l870
 28253  0051B4  D00C               	goto	i2u582_40
 28254  0051B6                     i2l870:
 28255                           
 28256                           ;USBapp.c: 155: {
 28257                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28258  0051B6  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28259  0051B8  0D01               	mullw	1
 28260  0051BA  0EA0               	movlw	low _USB_Buffer
 28261  0051BC  24F3               	addwf	prodl,w,c
 28262  0051BE  6ED9               	movwf	fsr2l,c
 28263  0051C0  0E02               	movlw	high _USB_Buffer
 28264  0051C2  20F4               	addwfc	prodh,w,c
 28265  0051C4  6EDA               	movwf	fsr2h,c
 28266  0051C6  0E00               	movlw	0
 28267  0051C8  6EDF               	movwf	indf2,c
 28268  0051CA  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28269  0051CC  D7F0               	goto	i2l7940
 28270  0051CE                     i2u582_40:
 28271                           
 28272                           ;USBapp.c: 157: }
 28273                           ;USBapp.c: 158: NextUSBOut = 0;
 28274  0051CE  0E00               	movlw	0
 28275  0051D0  0100               	movlb	0	; () banked
 28276  0051D2  6FE8               	movwf	_NextUSBOut& (0+255),b
 28277                           
 28278                           ;USBapp.c: 159: LastRS232Out = 0;
 28279  0051D4  0E00               	movlw	0
 28280  0051D6  6FE6               	movwf	_LastRS232Out& (0+255),b
 28281                           
 28282                           ; BSR set to: 0
 28283  0051D8  0012               	return		;funcret
 28284  0051DA                     __end_of_USBapp_CdcEmulatorInitialize:
 28285                           	opt stack 0
 28286                           pclatu	equ	0xFFB
 28287                           pclath	equ	0xFFA
 28288                           tblptru	equ	0xFF8
 28289                           tblptrh	equ	0xFF7
 28290                           tblptrl	equ	0xFF6
 28291                           tablat	equ	0xFF5
 28292                           prodh	equ	0xFF4
 28293                           prodl	equ	0xFF3
 28294                           intcon	equ	0xFF2
 28295                           intcon2	equ	0xFF1
 28296                           intcon3	equ	0xFF0
 28297                           indf0	equ	0xFEF
 28298                           postinc0	equ	0xFEE
 28299                           fsr0h	equ	0xFEA
 28300                           fsr0l	equ	0xFE9
 28301                           wreg	equ	0xFE8
 28302                           indf1	equ	0xFE7
 28303                           postdec1	equ	0xFE5
 28304                           fsr1h	equ	0xFE2
 28305                           fsr1l	equ	0xFE1
 28306                           indf2	equ	0xFDF
 28307                           postinc2	equ	0xFDE
 28308                           postdec2	equ	0xFDD
 28309                           plusw2	equ	0xFDB
 28310                           fsr2h	equ	0xFDA
 28311                           fsr2l	equ	0xFD9
 28312                           status	equ	0xFD8
 28313                           
 28314 ;; *************** function _CDCInitEP *****************
 28315 ;; Defined at:
 28316 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28317 ;; Parameters:    Size  Location     Type
 28318 ;;		None
 28319 ;; Auto vars:     Size  Location     Type
 28320 ;;		None
 28321 ;; Return value:  Size  Location     Type
 28322 ;;                  1    wreg      void 
 28323 ;; Registers used:
 28324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28325 ;; Tracked objects:
 28326 ;;		On entry : 0/0
 28327 ;;		On exit  : 0/0
 28328 ;;		Unchanged: 0/0
 28329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28330 ;;      Params:         0       0       0       0       0       0       0       0       0
 28331 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28333 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28334 ;;Total ram usage:        0 bytes
 28335 ;; Hardware stack levels used:    1
 28336 ;; Hardware stack levels required when called:    2
 28337 ;; This function calls:
 28338 ;;		_USBEnableEndpoint
 28339 ;;		i2_USBTransferOnePacket
 28340 ;; This function is called by:
 28341 ;;		_USBapp_CdcEmulatorInitialize
 28342 ;; This function uses a non-reentrant model
 28343 ;;
 28344                           
 28345                           	psect	text125
 28346  004E80                     __ptext125:
 28347                           	opt stack 0
 28348  004E80                     _CDCInitEP:
 28349                           	opt stack 15
 28350                           
 28351                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28352                           
 28353                           ; BSR set to: 0
 28354                           ;incstack = 0
 28355  004E80  0E00               	movlw	0
 28356  004E82  0101               	movlb	1	; () banked
 28357  004E84  6FD2               	movwf	_line_coding& (0+255),b
 28358  004E86  0E4B               	movlw	75
 28359  004E88  6FD3               	movwf	(_line_coding+1)& (0+255),b
 28360  004E8A  0E00               	movlw	0
 28361  004E8C  6FD4               	movwf	(_line_coding+2)& (0+255),b
 28362  004E8E  0E00               	movlw	0
 28363  004E90  6FD5               	movwf	(_line_coding+3)& (0+255),b
 28364                           
 28365                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28366  004E92  0E00               	movlw	0
 28367  004E94  6FD6               	movwf	(_line_coding+4)& (0+255),b
 28368                           
 28369                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28370  004E96  0E00               	movlw	0
 28371  004E98  6FD7               	movwf	(_line_coding+5)& (0+255),b
 28372                           
 28373                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28374  004E9A  0E08               	movlw	8
 28375  004E9C  6FD8               	movwf	(_line_coding+6)& (0+255),b
 28376                           
 28377                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28378  004E9E  0E00               	movlw	0
 28379  004EA0  0100               	movlb	0	; () banked
 28380  004EA2  6FDD               	movwf	_cdc_rx_len& (0+255),b
 28381                           
 28382                           ; BSR set to: 0
 28383                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28384  004EA4  0E1A               	movlw	26
 28385  004EA6  6E09               	movwf	USBEnableEndpoint@options,c
 28386  004EA8  0E01               	movlw	1
 28387  004EAA  EC8D  F02A         	call	_USBEnableEndpoint
 28388                           
 28389                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28390  004EAE  0E1E               	movlw	30
 28391  004EB0  6E09               	movwf	USBEnableEndpoint@options,c
 28392  004EB2  0E02               	movlw	2
 28393  004EB4  EC8D  F02A         	call	_USBEnableEndpoint
 28394                           
 28395                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28396  004EB8  0E00               	movlw	0
 28397  004EBA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28398  004EBC  0E40               	movlw	64
 28399  004EBE  6E02               	movwf	i2USBTransferOnePacket@data,c
 28400  004EC0  0E05               	movlw	5
 28401  004EC2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28402  004EC4  0E40               	movlw	64
 28403  004EC6  6E04               	movwf	i2USBTransferOnePacket@len,c
 28404  004EC8  0E02               	movlw	2
 28405  004ECA  ECE0  F01E         	call	i2_USBTransferOnePacket
 28406  004ECE  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28407  004ED2  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28408                           
 28409                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28410  004ED6  0E00               	movlw	0
 28411  004ED8  0101               	movlb	1	; () banked
 28412  004EDA  6F34               	movwf	_CDCDataInHandle& (0+255),b
 28413  004EDC  0E00               	movlw	0
 28414  004EDE  6F35               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28415                           
 28416                           ; BSR set to: 1
 28417                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28418  004EE0  0E00               	movlw	0
 28419  004EE2  0100               	movlb	0	; () banked
 28420  004EE4  6FEB               	movwf	_cdc_trf_state& (0+255),b
 28421                           
 28422                           ; BSR set to: 0
 28423  004EE6  0012               	return		;funcret
 28424  004EE8                     __end_of_CDCInitEP:
 28425                           	opt stack 0
 28426                           pclatu	equ	0xFFB
 28427                           pclath	equ	0xFFA
 28428                           tblptru	equ	0xFF8
 28429                           tblptrh	equ	0xFF7
 28430                           tblptrl	equ	0xFF6
 28431                           tablat	equ	0xFF5
 28432                           prodh	equ	0xFF4
 28433                           prodl	equ	0xFF3
 28434                           intcon	equ	0xFF2
 28435                           intcon2	equ	0xFF1
 28436                           intcon3	equ	0xFF0
 28437                           indf0	equ	0xFEF
 28438                           postinc0	equ	0xFEE
 28439                           fsr0h	equ	0xFEA
 28440                           fsr0l	equ	0xFE9
 28441                           wreg	equ	0xFE8
 28442                           indf1	equ	0xFE7
 28443                           postdec1	equ	0xFE5
 28444                           fsr1h	equ	0xFE2
 28445                           fsr1l	equ	0xFE1
 28446                           indf2	equ	0xFDF
 28447                           postinc2	equ	0xFDE
 28448                           postdec2	equ	0xFDD
 28449                           plusw2	equ	0xFDB
 28450                           fsr2h	equ	0xFDA
 28451                           fsr2l	equ	0xFD9
 28452                           status	equ	0xFD8
 28453                           
 28454 ;; *************** function i2_USBTransferOnePacket *****************
 28455 ;; Defined at:
 28456 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28457 ;; Parameters:    Size  Location     Type
 28458 ;;  ep              1    wreg     unsigned char 
 28459 ;;  dir             1    0[COMRAM] unsigned char 
 28460 ;;  data            2    1[COMRAM] PTR unsigned char 
 28461 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28462 ;;  len             1    3[COMRAM] unsigned char 
 28463 ;; Auto vars:     Size  Location     Type
 28464 ;;  ep              1    4[COMRAM] unsigned char 
 28465 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28466 ;;		 -> BDT(48), NULL(0), 
 28467 ;; Return value:  Size  Location     Type
 28468 ;;                  2    0[COMRAM] PTR void 
 28469 ;; Registers used:
 28470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28471 ;; Tracked objects:
 28472 ;;		On entry : 0/0
 28473 ;;		On exit  : 0/0
 28474 ;;		Unchanged: 0/0
 28475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28476 ;;      Params:         4       0       0       0       0       0       0       0       0
 28477 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28478 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28479 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28480 ;;Total ram usage:        7 bytes
 28481 ;; Hardware stack levels used:    1
 28482 ;; This function calls:
 28483 ;;		Nothing
 28484 ;; This function is called by:
 28485 ;;		_CDCInitEP
 28486 ;; This function uses a non-reentrant model
 28487 ;;
 28488                           
 28489                           	psect	text126
 28490  003DC0                     __ptext126:
 28491                           	opt stack 0
 28492  003DC0                     i2_USBTransferOnePacket:
 28493                           	opt stack 16
 28494                           
 28495                           ; BSR set to: 0
 28496                           ;incstack = 0
 28497                           ;i2USBTransferOnePacket@ep stored from wreg
 28498  003DC0  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28499                           
 28500                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28501                           ;usb_device.c: 762: if(dir != 0)
 28502  003DC2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28503  003DC4  B4D8               	btfsc	status,2,c
 28504  003DC6  D007               	goto	i2l1899
 28505                           
 28506                           ;usb_device.c: 763: {
 28507                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28508  003DC8  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28509  003DCA  0D02               	mullw	2
 28510  003DCC  0ECA               	movlw	low _pBDTEntryIn
 28511  003DCE  24F3               	addwf	prodl,w,c
 28512  003DD0  6ED9               	movwf	fsr2l,c
 28513  003DD2  0E00               	movlw	high _pBDTEntryIn
 28514  003DD4  D006               	goto	L31
 28515  003DD6                     i2l1899:
 28516                           
 28517                           ;usb_device.c: 767: else
 28518                           ;usb_device.c: 768: {
 28519                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28520  003DD6  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28521  003DD8  0D02               	mullw	2
 28522  003DDA  0E20               	movlw	low _pBDTEntryOut
 28523  003DDC  24F3               	addwf	prodl,w,c
 28524  003DDE  6ED9               	movwf	fsr2l,c
 28525  003DE0  0E01               	movlw	high _pBDTEntryOut
 28526  003DE2                     L31:
 28527  003DE2  20F4               	addwfc	prodh,w,c
 28528  003DE4  6EDA               	movwf	fsr2h,c
 28529  003DE6  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28530  003DEA  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28531                           
 28532                           ;usb_device.c: 771: }
 28533                           ;usb_device.c: 775: if(handle == 0)
 28534  003DEE  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28535  003DF0  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28536  003DF2  A4D8               	btfss	status,2,c
 28537  003DF4  D005               	goto	i2l1901
 28538                           
 28539                           ;usb_device.c: 776: {
 28540                           ;usb_device.c: 777: return 0;
 28541  003DF6  0E00               	movlw	0
 28542  003DF8  6E01               	movwf	?i2_USBTransferOnePacket,c
 28543  003DFA  0E00               	movlw	0
 28544  003DFC  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28545  003DFE  0012               	return	
 28546  003E00                     i2l1901:
 28547                           
 28548                           ;usb_device.c: 778: }
 28549                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28550  003E00  EE20 F002          	lfsr	2,2
 28551  003E04  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28552  003E06  26D9               	addwf	fsr2l,f,c
 28553  003E08  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28554  003E0A  22DA               	addwfc	fsr2h,f,c
 28555  003E0C  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28556  003E10  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28557                           
 28558                           ;usb_device.c: 781: handle->CNT = len;
 28559  003E14  EE20 F001          	lfsr	2,1
 28560  003E18  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28561  003E1A  26D9               	addwf	fsr2l,f,c
 28562  003E1C  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28563  003E1E  22DA               	addwfc	fsr2h,f,c
 28564  003E20  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28565                           
 28566                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28567  003E24  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28568  003E28  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28569  003E2C  0E40               	movlw	64
 28570  003E2E  16DF               	andwf	indf2,f,c
 28571                           
 28572                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28573  003E30  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28574  003E34  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28575  003E38  0E00               	movlw	0
 28576  003E3A  86DB               	bsf	plusw2,3,c
 28577                           
 28578                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28579  003E3C  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28580  003E40  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28581  003E44  0E00               	movlw	0
 28582  003E46  8EDB               	bsf	plusw2,7,c
 28583                           
 28584                           ;usb_device.c: 787: if(dir != 0)
 28585  003E48  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28586  003E4A  B4D8               	btfsc	status,2,c
 28587  003E4C  D007               	goto	i2l1903
 28588                           
 28589                           ;usb_device.c: 788: {
 28590                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28591  003E4E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28592  003E50  0D02               	mullw	2
 28593  003E52  0ECA               	movlw	low _pBDTEntryIn
 28594  003E54  24F3               	addwf	prodl,w,c
 28595  003E56  6ED9               	movwf	fsr2l,c
 28596  003E58  0E00               	movlw	high _pBDTEntryIn
 28597  003E5A  D006               	goto	L32
 28598  003E5C                     i2l1903:
 28599                           
 28600                           ;usb_device.c: 792: else
 28601                           ;usb_device.c: 793: {
 28602                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28603  003E5C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28604  003E5E  0D02               	mullw	2
 28605  003E60  0E20               	movlw	low _pBDTEntryOut
 28606  003E62  24F3               	addwf	prodl,w,c
 28607  003E64  6ED9               	movwf	fsr2l,c
 28608  003E66  0E01               	movlw	high _pBDTEntryOut
 28609  003E68                     L32:
 28610  003E68  20F4               	addwfc	prodh,w,c
 28611  003E6A  6EDA               	movwf	fsr2h,c
 28612  003E6C  0E04               	movlw	4
 28613  003E6E  1ADF               	xorwf	indf2,f,c
 28614                           
 28615                           ;usb_device.c: 796: }
 28616                           ;usb_device.c: 797: return (void*)handle;
 28617  003E70  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28618  003E74  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28619  003E78  0012               	return	
 28620  003E7A                     __end_ofi2_USBTransferOnePacket:
 28621                           	opt stack 0
 28622                           pclatu	equ	0xFFB
 28623                           pclath	equ	0xFFA
 28624                           tblptru	equ	0xFF8
 28625                           tblptrh	equ	0xFF7
 28626                           tblptrl	equ	0xFF6
 28627                           tablat	equ	0xFF5
 28628                           prodh	equ	0xFF4
 28629                           prodl	equ	0xFF3
 28630                           intcon	equ	0xFF2
 28631                           intcon2	equ	0xFF1
 28632                           intcon3	equ	0xFF0
 28633                           indf0	equ	0xFEF
 28634                           postinc0	equ	0xFEE
 28635                           fsr0h	equ	0xFEA
 28636                           fsr0l	equ	0xFE9
 28637                           wreg	equ	0xFE8
 28638                           indf1	equ	0xFE7
 28639                           postdec1	equ	0xFE5
 28640                           fsr1h	equ	0xFE2
 28641                           fsr1l	equ	0xFE1
 28642                           indf2	equ	0xFDF
 28643                           postinc2	equ	0xFDE
 28644                           postdec2	equ	0xFDD
 28645                           plusw2	equ	0xFDB
 28646                           fsr2h	equ	0xFDA
 28647                           fsr2l	equ	0xFD9
 28648                           status	equ	0xFD8
 28649                           
 28650 ;; *************** function _USBEnableEndpoint *****************
 28651 ;; Defined at:
 28652 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28653 ;; Parameters:    Size  Location     Type
 28654 ;;  ep              1    wreg     unsigned char 
 28655 ;;  options         1    8[COMRAM] unsigned char 
 28656 ;; Auto vars:     Size  Location     Type
 28657 ;;  ep              1   11[COMRAM] unsigned char 
 28658 ;;  p               2    9[COMRAM] PTR unsigned char 
 28659 ;;		 -> UEP0(1), 
 28660 ;; Return value:  Size  Location     Type
 28661 ;;                  1    wreg      void 
 28662 ;; Registers used:
 28663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28664 ;; Tracked objects:
 28665 ;;		On entry : 0/0
 28666 ;;		On exit  : 0/0
 28667 ;;		Unchanged: 0/0
 28668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28669 ;;      Params:         1       0       0       0       0       0       0       0       0
 28670 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28671 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28672 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28673 ;;Total ram usage:        4 bytes
 28674 ;; Hardware stack levels used:    1
 28675 ;; Hardware stack levels required when called:    1
 28676 ;; This function calls:
 28677 ;;		_USBConfigureEndpoint
 28678 ;; This function is called by:
 28679 ;;		_CDCInitEP
 28680 ;; This function uses a non-reentrant model
 28681 ;;
 28682                           
 28683                           	psect	text127
 28684  00551A                     __ptext127:
 28685                           	opt stack 0
 28686  00551A                     _USBEnableEndpoint:
 28687                           	opt stack 15
 28688                           
 28689                           ;incstack = 0
 28690                           ;USBEnableEndpoint@ep stored from wreg
 28691  00551A  6E0C               	movwf	USBEnableEndpoint@ep,c
 28692                           
 28693                           ;usb_device.c: 647: unsigned char* p;
 28694                           ;usb_device.c: 651: if(options & 0x04)
 28695  00551C  A409               	btfss	USBEnableEndpoint@options,2,c
 28696  00551E  D005               	goto	i2l1894
 28697                           
 28698                           ;usb_device.c: 652: {
 28699                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28700  005520  0E00               	movlw	0
 28701  005522  6E01               	movwf	USBConfigureEndpoint@direction,c
 28702  005524  500C               	movf	USBEnableEndpoint@ep,w,c
 28703  005526  EC9A  F022         	call	_USBConfigureEndpoint
 28704  00552A                     i2l1894:
 28705                           
 28706                           ;usb_device.c: 654: }
 28707                           ;usb_device.c: 655: if(options & 0x02)
 28708  00552A  A209               	btfss	USBEnableEndpoint@options,1,c
 28709  00552C  D005               	goto	i2l1895
 28710                           
 28711                           ;usb_device.c: 656: {
 28712                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28713  00552E  0E01               	movlw	1
 28714  005530  6E01               	movwf	USBConfigureEndpoint@direction,c
 28715  005532  500C               	movf	USBEnableEndpoint@ep,w,c
 28716  005534  EC9A  F022         	call	_USBConfigureEndpoint
 28717  005538                     i2l1895:
 28718                           
 28719                           ;usb_device.c: 658: }
 28720                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28721  005538  500C               	movf	USBEnableEndpoint@ep,w,c
 28722  00553A  0D01               	mullw	1
 28723  00553C  0E6A               	movlw	106
 28724  00553E  24F3               	addwf	prodl,w,c
 28725  005540  6E0A               	movwf	USBEnableEndpoint@p,c
 28726  005542  0E0F               	movlw	15
 28727  005544  20F4               	addwfc	prodh,w,c
 28728  005546  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28729                           
 28730                           ;usb_device.c: 664: *p = options;
 28731  005548  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28732  00554C  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28733  005550  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28734  005554  0012               	return		;funcret
 28735  005556                     __end_of_USBEnableEndpoint:
 28736                           	opt stack 0
 28737                           pclatu	equ	0xFFB
 28738                           pclath	equ	0xFFA
 28739                           tblptru	equ	0xFF8
 28740                           tblptrh	equ	0xFF7
 28741                           tblptrl	equ	0xFF6
 28742                           tablat	equ	0xFF5
 28743                           prodh	equ	0xFF4
 28744                           prodl	equ	0xFF3
 28745                           intcon	equ	0xFF2
 28746                           intcon2	equ	0xFF1
 28747                           intcon3	equ	0xFF0
 28748                           indf0	equ	0xFEF
 28749                           postinc0	equ	0xFEE
 28750                           fsr0h	equ	0xFEA
 28751                           fsr0l	equ	0xFE9
 28752                           wreg	equ	0xFE8
 28753                           indf1	equ	0xFE7
 28754                           postdec1	equ	0xFE5
 28755                           fsr1h	equ	0xFE2
 28756                           fsr1l	equ	0xFE1
 28757                           indf2	equ	0xFDF
 28758                           postinc2	equ	0xFDE
 28759                           postdec2	equ	0xFDD
 28760                           plusw2	equ	0xFDB
 28761                           fsr2h	equ	0xFDA
 28762                           fsr2l	equ	0xFD9
 28763                           status	equ	0xFD8
 28764                           
 28765 ;; *************** function _USBConfigureEndpoint *****************
 28766 ;; Defined at:
 28767 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28768 ;; Parameters:    Size  Location     Type
 28769 ;;  EPNum           1    wreg     unsigned char 
 28770 ;;  direction       1    0[COMRAM] unsigned char 
 28771 ;; Auto vars:     Size  Location     Type
 28772 ;;  EPNum           1    5[COMRAM] unsigned char 
 28773 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28774 ;;		 -> BDT(48), 
 28775 ;; Return value:  Size  Location     Type
 28776 ;;                  1    wreg      void 
 28777 ;; Registers used:
 28778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28779 ;; Tracked objects:
 28780 ;;		On entry : 0/0
 28781 ;;		On exit  : 0/0
 28782 ;;		Unchanged: 0/0
 28783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28784 ;;      Params:         1       0       0       0       0       0       0       0       0
 28785 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28786 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28787 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28788 ;;Total ram usage:        8 bytes
 28789 ;; Hardware stack levels used:    1
 28790 ;; This function calls:
 28791 ;;		Nothing
 28792 ;; This function is called by:
 28793 ;;		_USBEnableEndpoint
 28794 ;; This function uses a non-reentrant model
 28795 ;;
 28796                           
 28797                           	psect	text128
 28798  004534                     __ptext128:
 28799                           	opt stack 0
 28800  004534                     _USBConfigureEndpoint:
 28801                           	opt stack 15
 28802                           
 28803                           ;incstack = 0
 28804                           ;USBConfigureEndpoint@EPNum stored from wreg
 28805  004534  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28806                           
 28807                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28808                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28809  004536  0E00               	movlw	0
 28810  004538  6E07               	movwf	USBConfigureEndpoint@handle,c
 28811  00453A  0E04               	movlw	4
 28812  00453C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28813                           
 28814                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28815  00453E  5001               	movf	USBConfigureEndpoint@direction,w,c
 28816  004540  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28817  004542  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28818  004544  90D8               	bcf	status,0,c
 28819  004546  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28820  004548  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28821  00454A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28822  00454C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28823  00454E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28824  004550  90D8               	bcf	status,0,c
 28825  004552  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28826  004554  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28827  004556  90D8               	bcf	status,0,c
 28828  004558  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28829  00455A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28830  00455C  5002               	movf	??_USBConfigureEndpoint,w,c
 28831  00455E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28832  004560  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28833  004562  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28834  004564  90D8               	bcf	status,0,c
 28835  004566  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28836  004568  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28837  00456A  90D8               	bcf	status,0,c
 28838  00456C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28839  00456E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28840  004570  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28841  004572  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28842  004574  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28843  004576  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28844                           
 28845                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28846  004578  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28847  00457C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28848  004580  9EDF               	bcf	indf2,7,c
 28849                           
 28850                           ;usb_device.c: 1242: if(direction == 0)
 28851  004582  5001               	movf	USBConfigureEndpoint@direction,w,c
 28852  004584  A4D8               	btfss	status,2,c
 28853  004586  D007               	goto	i2l1941
 28854                           
 28855                           ;usb_device.c: 1243: {
 28856                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28857  004588  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28858  00458A  0D02               	mullw	2
 28859  00458C  0E20               	movlw	low _pBDTEntryOut
 28860  00458E  24F3               	addwf	prodl,w,c
 28861  004590  6ED9               	movwf	fsr2l,c
 28862  004592  0E01               	movlw	high _pBDTEntryOut
 28863  004594  D006               	goto	L33
 28864  004596                     i2l1941:
 28865                           
 28866                           ;usb_device.c: 1246: else
 28867                           ;usb_device.c: 1247: {
 28868                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28869  004596  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28870  004598  0D02               	mullw	2
 28871  00459A  0ECA               	movlw	low _pBDTEntryIn
 28872  00459C  24F3               	addwf	prodl,w,c
 28873  00459E  6ED9               	movwf	fsr2l,c
 28874  0045A0  0E00               	movlw	high _pBDTEntryIn
 28875  0045A2                     L33:
 28876  0045A2  20F4               	addwfc	prodh,w,c
 28877  0045A4  6EDA               	movwf	fsr2h,c
 28878  0045A6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28879  0045AA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28880                           
 28881                           ;usb_device.c: 1249: }
 28882                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28883  0045AE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28884  0045B2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28885  0045B6  9CDF               	bcf	indf2,6,c
 28886                           
 28887                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28888  0045B8  EE20 F004          	lfsr	2,4
 28889  0045BC  5007               	movf	USBConfigureEndpoint@handle,w,c
 28890  0045BE  26D9               	addwf	fsr2l,f,c
 28891  0045C0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28892  0045C2  22DA               	addwfc	fsr2h,f,c
 28893  0045C4  8CDF               	bsf	indf2,6,c
 28894  0045C6  0012               	return		;funcret
 28895  0045C8                     __end_of_USBConfigureEndpoint:
 28896                           	opt stack 0
 28897                           pclatu	equ	0xFFB
 28898                           pclath	equ	0xFFA
 28899                           tblptru	equ	0xFF8
 28900                           tblptrh	equ	0xFF7
 28901                           tblptrl	equ	0xFF6
 28902                           tablat	equ	0xFF5
 28903                           prodh	equ	0xFF4
 28904                           prodl	equ	0xFF3
 28905                           intcon	equ	0xFF2
 28906                           intcon2	equ	0xFF1
 28907                           intcon3	equ	0xFF0
 28908                           indf0	equ	0xFEF
 28909                           postinc0	equ	0xFEE
 28910                           fsr0h	equ	0xFEA
 28911                           fsr0l	equ	0xFE9
 28912                           wreg	equ	0xFE8
 28913                           indf1	equ	0xFE7
 28914                           postdec1	equ	0xFE5
 28915                           fsr1h	equ	0xFE2
 28916                           fsr1l	equ	0xFE1
 28917                           indf2	equ	0xFDF
 28918                           postinc2	equ	0xFDE
 28919                           postdec2	equ	0xFDD
 28920                           plusw2	equ	0xFDB
 28921                           fsr2h	equ	0xFDA
 28922                           fsr2l	equ	0xFD9
 28923                           status	equ	0xFD8
 28924                           
 28925 ;; *************** function _USBCheckCDCRequest *****************
 28926 ;; Defined at:
 28927 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28928 ;; Parameters:    Size  Location     Type
 28929 ;;		None
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;		None
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  1    wreg      void 
 28934 ;; Registers used:
 28935 ;;		wreg, status,2, status,0
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/0
 28938 ;;		On exit  : 0/0
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28941 ;;      Params:         0       0       0       0       0       0       0       0       0
 28942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28944 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28945 ;;Total ram usage:        0 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; This function calls:
 28948 ;;		Nothing
 28949 ;; This function is called by:
 28950 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text129
 28955  00414E                     __ptext129:
 28956                           	opt stack 0
 28957  00414E                     _USBCheckCDCRequest:
 28958                           	opt stack 18
 28959                           
 28960                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28961                           
 28962                           ;incstack = 0
 28963  00414E  0104               	movlb	4	; () banked
 28964  004150  5130               	movf	48,w,b	;volatile
 28965  004152  0B1F               	andlw	31
 28966  004154  06E8               	decf	wreg,f,c
 28967  004156  A4D8               	btfss	status,2,c
 28968  004158  0012               	return	
 28969                           
 28970                           ; BSR set to: 4
 28971                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28972                           
 28973                           ; BSR set to: 4
 28974                           
 28975                           ; BSR set to: 4
 28976  00415A  3930               	swapf	48,w,b	;volatile
 28977  00415C  32E8               	rrcf	wreg,f,c
 28978  00415E  0B03               	andlw	3
 28979  004160  06E8               	decf	wreg,f,c
 28980  004162  A4D8               	btfss	status,2,c
 28981  004164  0012               	return	
 28982                           
 28983                           ; BSR set to: 4
 28984                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28985                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28986                           
 28987                           ; BSR set to: 4
 28988                           
 28989                           ; BSR set to: 4
 28990  004166  5134               	movf	52,w,b	;volatile
 28991  004168  B4D8               	btfsc	status,2,c
 28992  00416A  D037               	goto	i2l2162
 28993                           
 28994                           ; BSR set to: 4
 28995  00416C  0534               	decf	52,w,b	;volatile
 28996  00416E  A4D8               	btfss	status,2,c
 28997  004170  0012               	return	
 28998  004172  D033               	goto	i2l2162
 28999  004174                     
 29000                           ; BSR set to: 4
 29001                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29002                           
 29003                           ; BSR set to: 4
 29004  004174  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 29005  004176  0100               	movlb	0	; () banked
 29006  004178  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29007  00417A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29008  00417C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29009                           
 29010                           ; BSR set to: 0
 29011                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 29012  00417E  0E00               	movlw	0
 29013  004180  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29014  004182  0E08               	movlw	8
 29015  004184  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29016                           
 29017                           ; BSR set to: 0
 29018                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29019  004186  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 29020                           
 29021                           ; BSR set to: 0
 29022                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 29023  004188  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29024                           
 29025                           ;usb_device_cdc.c: 212: break;
 29026  00418A  0012               	return	
 29027  00418C                     
 29028                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29029                           
 29030                           ; BSR set to: 0
 29031  00418C  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 29032  00418E  0100               	movlb	0	; () banked
 29033  004190  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29034  004192  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29035  004194  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 29039  004196  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29040                           
 29041                           ;usb_device_cdc.c: 217: break;
 29042  004198  0012               	return	
 29043  00419A                     i2l2166:
 29044                           
 29045                           ; BSR set to: 4
 29046                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 29047  00419A  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 29048  00419E  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 29049                           
 29050                           ; BSR set to: 4
 29051                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 29052  0041A2  0EC0               	movlw	low _cdc_notice
 29053  0041A4  0100               	movlb	0	; () banked
 29054  0041A6  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 29055  0041A8  0E01               	movlw	high _cdc_notice
 29056  0041AA  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 29057                           
 29058                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 29059  0041AC  0E2A               	movlw	low _USART_mySetLineCodingHandler
 29060  0041AE  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 29061  0041B0  0E51               	movlw	high _USART_mySetLineCodingHandler
 29062  0041B2  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 29063                           
 29064                           ; BSR set to: 0
 29065                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 29066  0041B4  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 29067                           
 29068                           ;usb_device_cdc.c: 224: break;
 29069  0041B6  0012               	return	
 29070  0041B8                     
 29071                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29072                           
 29073                           ; BSR set to: 0
 29074  0041B8  0ED2               	movlw	low _line_coding
 29075  0041BA  0100               	movlb	0	; () banked
 29076  0041BC  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29077  0041BE  0E01               	movlw	high _line_coding
 29078  0041C0  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29079                           
 29080                           ; BSR set to: 0
 29081  0041C2  0E00               	movlw	0
 29082  0041C4  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29083  0041C6  0E07               	movlw	7
 29084  0041C8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29085                           
 29086                           ; BSR set to: 0
 29087  0041CA  0EC1               	movlw	193
 29088  0041CC  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29089                           
 29090                           ;usb_device_cdc.c: 231: break;
 29091  0041CE  0012               	return	
 29092  0041D0                     i2l2168:
 29093                           
 29094                           ; BSR set to: 4
 29095                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29096  0041D0  C432 F140          	movff	1074,_control_signal_bitmap	;volatile
 29097                           
 29098                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29099  0041D4  0100               	movlb	0	; () banked
 29100  0041D6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29101                           
 29102                           ; BSR set to: 0
 29103                           ;usb_device_cdc.c: 260: }
 29104                           
 29105                           ; BSR set to: 0
 29106                           ;usb_device_cdc.c: 259: break;
 29107                           
 29108                           ;usb_device_cdc.c: 258: default:
 29109                           
 29110                           ;usb_device_cdc.c: 256: break;
 29111  0041D8  0012               	return	
 29112  0041DA                     i2l2162:
 29113                           
 29114                           ; BSR set to: 0
 29115  0041DA  0104               	movlb	4	; () banked
 29116  0041DC  5131               	movf	49,w,b	;volatile
 29117                           
 29118                           ; Switch size 1, requested type "space"
 29119                           ; Number of cases is 5, Range of values is 0 to 34
 29120                           ; switch strategies available:
 29121                           ; Name         Instructions Cycles
 29122                           ; simple_byte           16     9 (average)
 29123                           ;	Chosen strategy is simple_byte
 29124  0041DE  0A00               	xorlw	0	; case 0
 29125  0041E0  B4D8               	btfsc	status,2,c
 29126  0041E2  D7C8               	goto	i2l2163
 29127  0041E4  0A01               	xorlw	1	; case 1
 29128  0041E6  B4D8               	btfsc	status,2,c
 29129  0041E8  D7D1               	goto	i2l2165
 29130  0041EA  0A21               	xorlw	33	; case 32
 29131  0041EC  B4D8               	btfsc	status,2,c
 29132  0041EE  D7D5               	goto	i2l2166
 29133  0041F0  0A01               	xorlw	1	; case 33
 29134  0041F2  B4D8               	btfsc	status,2,c
 29135  0041F4  D7E1               	goto	i2l2167
 29136  0041F6  0A03               	xorlw	3	; case 34
 29137  0041F8  A4D8               	btfss	status,2,c
 29138  0041FA  0012               	return	
 29139  0041FC  D7E9               	goto	i2l2168
 29140  0041FE                     __end_of_USBCheckCDCRequest:
 29141                           	opt stack 0
 29142                           pclatu	equ	0xFFB
 29143                           pclath	equ	0xFFA
 29144                           tblptru	equ	0xFF8
 29145                           tblptrh	equ	0xFF7
 29146                           tblptrl	equ	0xFF6
 29147                           tablat	equ	0xFF5
 29148                           prodh	equ	0xFF4
 29149                           prodl	equ	0xFF3
 29150                           intcon	equ	0xFF2
 29151                           intcon2	equ	0xFF1
 29152                           intcon3	equ	0xFF0
 29153                           indf0	equ	0xFEF
 29154                           postinc0	equ	0xFEE
 29155                           fsr0h	equ	0xFEA
 29156                           fsr0l	equ	0xFE9
 29157                           wreg	equ	0xFE8
 29158                           indf1	equ	0xFE7
 29159                           postdec1	equ	0xFE5
 29160                           fsr1h	equ	0xFE2
 29161                           fsr1l	equ	0xFE1
 29162                           indf2	equ	0xFDF
 29163                           postinc2	equ	0xFDE
 29164                           postdec2	equ	0xFDD
 29165                           plusw2	equ	0xFDB
 29166                           fsr2h	equ	0xFDA
 29167                           fsr2l	equ	0xFD9
 29168                           status	equ	0xFD8
 29169                           
 29170 ;; *************** function _USBCtrlTrfOutHandler *****************
 29171 ;; Defined at:
 29172 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29173 ;; Parameters:    Size  Location     Type
 29174 ;;		None
 29175 ;; Auto vars:     Size  Location     Type
 29176 ;;		None
 29177 ;; Return value:  Size  Location     Type
 29178 ;;                  1    wreg      void 
 29179 ;; Registers used:
 29180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29181 ;; Tracked objects:
 29182 ;;		On entry : 0/0
 29183 ;;		On exit  : 0/0
 29184 ;;		Unchanged: 0/0
 29185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29186 ;;      Params:         0       0       0       0       0       0       0       0       0
 29187 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29189 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29190 ;;Total ram usage:        0 bytes
 29191 ;; Hardware stack levels used:    1
 29192 ;; Hardware stack levels required when called:    3
 29193 ;; This function calls:
 29194 ;;		_USBCtrlTrfRxService
 29195 ;; This function is called by:
 29196 ;;		_USBCtrlEPService
 29197 ;; This function uses a non-reentrant model
 29198 ;;
 29199                           
 29200                           	psect	text130
 29201  0050CE                     __ptext130:
 29202                           	opt stack 0
 29203  0050CE                     _USBCtrlTrfOutHandler:
 29204                           	opt stack 15
 29205                           
 29206                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29207                           
 29208                           ;incstack = 0
 29209  0050CE  0E02               	movlw	2
 29210  0050D0  1855               	xorwf	_controlTransferState,w,c	;volatile
 29211  0050D2  A4D8               	btfss	status,2,c
 29212  0050D4  D003               	goto	i2l2049
 29213                           
 29214                           ;usb_device.c: 2172: {
 29215                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29216  0050D6  EC1A  F014         	call	_USBCtrlTrfRxService	;wreg free
 29217                           
 29218                           ;usb_device.c: 2174: }
 29219  0050DA  0012               	return	
 29220  0050DC                     i2l2049:
 29221                           
 29222                           ;usb_device.c: 2175: else
 29223                           ;usb_device.c: 2176: {
 29224                           ;usb_device.c: 2179: controlTransferState = 0;
 29225  0050DC  0E00               	movlw	0
 29226  0050DE  6E55               	movwf	_controlTransferState,c	;volatile
 29227                           
 29228                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29229  0050E0  5052               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29230  0050E2  A4D8               	btfss	status,2,c
 29231  0050E4  D01F               	goto	i2l2051
 29232                           
 29233                           ;usb_device.c: 2187: {
 29234                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29235  0050E6  EE20 F001          	lfsr	2,1
 29236  0050EA  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29237  0050EC  26D9               	addwf	fsr2l,f,c
 29238  0050EE  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29239  0050F0  22DA               	addwfc	fsr2h,f,c
 29240  0050F2  0E08               	movlw	8
 29241  0050F4  6EDF               	movwf	indf2,c
 29242                           
 29243                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29244  0050F6  EE20 F002          	lfsr	2,2
 29245  0050FA  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29246  0050FC  26D9               	addwf	fsr2l,f,c
 29247  0050FE  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29248  005100  22DA               	addwfc	fsr2h,f,c
 29249  005102  0E30               	movlw	48
 29250  005104  6EDE               	movwf	postinc2,c
 29251  005106  0E04               	movlw	4
 29252  005108  6EDD               	movwf	postdec2,c
 29253                           
 29254                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29255  00510A  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29256  00510E  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29257  005112  0E0C               	movlw	12
 29258  005114  6EDF               	movwf	indf2,c
 29259                           
 29260                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29261  005116  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29262  00511A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29263  00511E  0E00               	movlw	0
 29264  005120  8EDB               	bsf	plusw2,7,c
 29265                           
 29266                           ;usb_device.c: 2192: }
 29267  005122  0012               	return	
 29268  005124                     i2l2051:
 29269                           
 29270                           ;usb_device.c: 2193: else
 29271                           ;usb_device.c: 2194: {
 29272                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29273  005124  0E00               	movlw	0
 29274  005126  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29275  005128  0012               	return	
 29276  00512A                     __end_of_USBCtrlTrfOutHandler:
 29277                           	opt stack 0
 29278                           pclatu	equ	0xFFB
 29279                           pclath	equ	0xFFA
 29280                           tblptru	equ	0xFF8
 29281                           tblptrh	equ	0xFF7
 29282                           tblptrl	equ	0xFF6
 29283                           tablat	equ	0xFF5
 29284                           prodh	equ	0xFF4
 29285                           prodl	equ	0xFF3
 29286                           intcon	equ	0xFF2
 29287                           intcon2	equ	0xFF1
 29288                           intcon3	equ	0xFF0
 29289                           indf0	equ	0xFEF
 29290                           postinc0	equ	0xFEE
 29291                           fsr0h	equ	0xFEA
 29292                           fsr0l	equ	0xFE9
 29293                           wreg	equ	0xFE8
 29294                           indf1	equ	0xFE7
 29295                           postdec1	equ	0xFE5
 29296                           fsr1h	equ	0xFE2
 29297                           fsr1l	equ	0xFE1
 29298                           indf2	equ	0xFDF
 29299                           postinc2	equ	0xFDE
 29300                           postdec2	equ	0xFDD
 29301                           plusw2	equ	0xFDB
 29302                           fsr2h	equ	0xFDA
 29303                           fsr2l	equ	0xFD9
 29304                           status	equ	0xFD8
 29305                           
 29306 ;; *************** function _USBCtrlTrfRxService *****************
 29307 ;; Defined at:
 29308 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29309 ;; Parameters:    Size  Location     Type
 29310 ;;		None
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29313 ;;  i               1   17[COMRAM] unsigned char 
 29314 ;; Return value:  Size  Location     Type
 29315 ;;                  1    wreg      void 
 29316 ;; Registers used:
 29317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29318 ;; Tracked objects:
 29319 ;;		On entry : 0/0
 29320 ;;		On exit  : 0/0
 29321 ;;		Unchanged: 0/0
 29322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29323 ;;      Params:         0       0       0       0       0       0       0       0       0
 29324 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29326 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29327 ;;Total ram usage:        2 bytes
 29328 ;; Hardware stack levels used:    1
 29329 ;; Hardware stack levels required when called:    2
 29330 ;; This function calls:
 29331 ;;		_USART_mySetLineCodingHandler
 29332 ;;		_USBCtrlEPAllowStatusStage
 29333 ;; This function is called by:
 29334 ;;		_USBCtrlTrfOutHandler
 29335 ;; This function uses a non-reentrant model
 29336 ;;
 29337                           
 29338                           	psect	text131
 29339  002834                     __ptext131:
 29340                           	opt stack 0
 29341  002834                     _USBCtrlTrfRxService:
 29342                           	opt stack 15
 29343                           
 29344                           ;usb_device.c: 1520: uint8_t byteToRead;
 29345                           ;usb_device.c: 1521: uint8_t i;
 29346                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29347                           
 29348                           ;incstack = 0
 29349  002834  EE20 F001          	lfsr	2,1
 29350  002838  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 29351  00283A  26D9               	addwf	fsr2l,f,c
 29352  00283C  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29353  00283E  22DA               	addwfc	fsr2h,f,c
 29354  002840  50DF               	movf	indf2,w,c
 29355  002842  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29356                           
 29357                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29358  002844  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29359  002846  0100               	movlb	0	; () banked
 29360  002848  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29361  00284A  0E00               	movlw	0
 29362  00284C  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29363  00284E  A0D8               	btfss	status,0,c
 29364                           
 29365                           ; BSR set to: 0
 29366                           ;usb_device.c: 1532: {
 29367                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29368  002850  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29369                           
 29370                           ; BSR set to: 0
 29371                           ;usb_device.c: 1534: }
 29372                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29373                           
 29374                           ; BSR set to: 0
 29375  002854  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29376  002856  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29377  002858  0E00               	movlw	0
 29378  00285A  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29379                           
 29380                           ; BSR set to: 0
 29381                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29382  00285C  0E00               	movlw	0
 29383  00285E  6E12               	movwf	USBCtrlTrfRxService@i,c
 29384  002860  D011               	goto	i2l1975
 29385  002862                     
 29386                           ; BSR set to: 0
 29387                           ;usb_device.c: 1541: {
 29388                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29389                           
 29390                           ; BSR set to: 0
 29391  002862  5012               	movf	USBCtrlTrfRxService@i,w,c
 29392  002864  0D01               	mullw	1
 29393  002866  0E38               	movlw	56
 29394  002868  24F3               	addwf	prodl,w,c
 29395  00286A  6ED9               	movwf	fsr2l,c
 29396  00286C  0E04               	movlw	4
 29397  00286E  20F4               	addwfc	prodh,w,c
 29398  002870  6EDA               	movwf	fsr2h,c
 29399  002872  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 29400  002876  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29401  00287A  CFDF FFE7          	movff	indf2,indf1
 29402                           
 29403                           ; BSR set to: 0
 29404  00287E  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 29405  002880  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29406                           
 29407                           ; BSR set to: 0
 29408  002882  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29409  002884                     i2l1975:
 29410                           
 29411                           ; BSR set to: 0
 29412                           
 29413                           ; BSR set to: 0
 29414  002884  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29415  002886  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29416  002888  A0D8               	btfss	status,0,c
 29417  00288A  D7EB               	goto	i2l1976
 29418                           
 29419                           ; BSR set to: 0
 29420                           ;usb_device.c: 1543: }
 29421                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29422                           
 29423                           ; BSR set to: 0
 29424  00288C  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29425  00288E  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29426  002890  B4D8               	btfsc	status,2,c
 29427  002892  D032               	goto	i2l1978
 29428                           
 29429                           ; BSR set to: 0
 29430                           ;usb_device.c: 1548: {
 29431                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29432  002894  EE20 F001          	lfsr	2,1
 29433  002898  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29434  00289A  26D9               	addwf	fsr2l,f,c
 29435  00289C  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29436  00289E  22DA               	addwfc	fsr2h,f,c
 29437  0028A0  0E08               	movlw	8
 29438  0028A2  6EDF               	movwf	indf2,c
 29439                           
 29440                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29441  0028A4  EE20 F002          	lfsr	2,2
 29442  0028A8  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29443  0028AA  26D9               	addwf	fsr2l,f,c
 29444  0028AC  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29445  0028AE  22DA               	addwfc	fsr2h,f,c
 29446  0028B0  0E38               	movlw	56
 29447  0028B2  6EDE               	movwf	postinc2,c
 29448  0028B4  0E04               	movlw	4
 29449  0028B6  6EDD               	movwf	postdec2,c
 29450                           
 29451                           ; BSR set to: 0
 29452                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29453  0028B8  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29454  0028BC  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29455  0028C0  BCDF               	btfsc	indf2,6,c
 29456  0028C2  D00D               	goto	i2l1979
 29457                           
 29458                           ; BSR set to: 0
 29459                           ;usb_device.c: 1552: {
 29460                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29461  0028C4  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29462  0028C8  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29463  0028CC  0E48               	movlw	72
 29464  0028CE  6EDF               	movwf	indf2,c
 29465                           
 29466                           ; BSR set to: 0
 29467                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29468  0028D0  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29469  0028D4  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29470  0028D8  0E00               	movlw	0
 29471  0028DA  8EDB               	bsf	plusw2,7,c
 29472                           
 29473                           ;usb_device.c: 1555: }
 29474  0028DC  0012               	return	
 29475  0028DE                     i2l1979:
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;usb_device.c: 1556: else
 29479                           ;usb_device.c: 1557: {
 29480                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29481                           
 29482                           ; BSR set to: 0
 29483  0028DE  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29484  0028E2  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29485  0028E6  0E08               	movlw	8
 29486  0028E8  6EDF               	movwf	indf2,c
 29487                           
 29488                           ; BSR set to: 0
 29489                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29490  0028EA  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29491  0028EE  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29492  0028F2  0E00               	movlw	0
 29493  0028F4  8EDB               	bsf	plusw2,7,c
 29494                           
 29495                           ; BSR set to: 0
 29496                           ;usb_device.c: 1560: }
 29497                           ;usb_device.c: 1561: }
 29498  0028F6  0012               	return	
 29499  0028F8                     i2l1978:
 29500                           
 29501                           ; BSR set to: 0
 29502                           ;usb_device.c: 1562: else
 29503                           ;usb_device.c: 1563: {
 29504                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29505                           
 29506                           ; BSR set to: 0
 29507  0028F8  EE20 F001          	lfsr	2,1
 29508  0028FC  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29509  0028FE  26D9               	addwf	fsr2l,f,c
 29510  002900  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29511  002902  22DA               	addwfc	fsr2h,f,c
 29512  002904  0E08               	movlw	8
 29513  002906  6EDF               	movwf	indf2,c
 29514                           
 29515                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29516  002908  EE20 F002          	lfsr	2,2
 29517  00290C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29518  00290E  26D9               	addwf	fsr2l,f,c
 29519  002910  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29520  002912  22DA               	addwfc	fsr2h,f,c
 29521  002914  0E30               	movlw	48
 29522  002916  6EDE               	movwf	postinc2,c
 29523  002918  0E04               	movlw	4
 29524  00291A  6EDD               	movwf	postdec2,c
 29525                           
 29526                           ; BSR set to: 0
 29527                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29528  00291C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29529  002920  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29530  002924  0E04               	movlw	4
 29531  002926  6EDF               	movwf	indf2,c
 29532                           
 29533                           ; BSR set to: 0
 29534                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29535  002928  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29536  00292C  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29537  002930  0E00               	movlw	0
 29538  002932  8EDB               	bsf	plusw2,7,c
 29539                           
 29540                           ; BSR set to: 0
 29541                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29542  002934  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29543  002936  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29544  002938  B4D8               	btfsc	status,2,c
 29545  00293A  D00E               	goto	i2u685_49
 29546                           
 29547                           ; BSR set to: 0
 29548                           ;usb_device.c: 1581: {
 29549                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29550  00293C  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29551  002940  D801               	call	i2u685_48
 29552  002942  D00A               	goto	i2u685_49
 29553  002944                     i2u685_48:
 29554  002944  0005               	push	
 29555  002946  6EFA               	movwf	pclath,c
 29556  002948  50DE               	movf	postinc2,w,c
 29557  00294A  6EFD               	movwf	tosl,c
 29558  00294C  50DE               	movf	postinc2,w,c
 29559  00294E  6EFE               	movwf	tosh,c
 29560  002950  50F8               	movf	tblptru,w,c
 29561  002952  6EFF               	movwf	tosu,c
 29562  002954  50FA               	movf	pclath,w,c
 29563  002956  0012               	return		;indir
 29564  002958                     i2u685_49:
 29565                           
 29566                           ;usb_device.c: 1588: }
 29567                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29568  002958  0100               	movlb	0	; () banked
 29569  00295A  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29570                           
 29571                           ; BSR set to: 0
 29572                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29573  00295C  5050               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29574  00295E  A4D8               	btfss	status,2,c
 29575  002960  0012               	return	
 29576                           
 29577                           ; BSR set to: 0
 29578                           ;usb_device.c: 1604: {
 29579                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29580  002962  ECC0  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29581  002966  0012               	return	
 29582  002968                     __end_of_USBCtrlTrfRxService:
 29583                           	opt stack 0
 29584                           tosu	equ	0xFFF
 29585                           tosh	equ	0xFFE
 29586                           tosl	equ	0xFFD
 29587                           pclatu	equ	0xFFB
 29588                           pclath	equ	0xFFA
 29589                           tblptru	equ	0xFF8
 29590                           tblptrh	equ	0xFF7
 29591                           tblptrl	equ	0xFF6
 29592                           tablat	equ	0xFF5
 29593                           prodh	equ	0xFF4
 29594                           prodl	equ	0xFF3
 29595                           intcon	equ	0xFF2
 29596                           intcon2	equ	0xFF1
 29597                           intcon3	equ	0xFF0
 29598                           indf0	equ	0xFEF
 29599                           postinc0	equ	0xFEE
 29600                           fsr0h	equ	0xFEA
 29601                           fsr0l	equ	0xFE9
 29602                           wreg	equ	0xFE8
 29603                           indf1	equ	0xFE7
 29604                           postdec1	equ	0xFE5
 29605                           fsr1h	equ	0xFE2
 29606                           fsr1l	equ	0xFE1
 29607                           indf2	equ	0xFDF
 29608                           postinc2	equ	0xFDE
 29609                           postdec2	equ	0xFDD
 29610                           plusw2	equ	0xFDB
 29611                           fsr2h	equ	0xFDA
 29612                           fsr2l	equ	0xFD9
 29613                           status	equ	0xFD8
 29614                           
 29615 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29616 ;; Defined at:
 29617 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29618 ;; Parameters:    Size  Location     Type
 29619 ;;		None
 29620 ;; Auto vars:     Size  Location     Type
 29621 ;;		None
 29622 ;; Return value:  Size  Location     Type
 29623 ;;                  1    wreg      void 
 29624 ;; Registers used:
 29625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29626 ;; Tracked objects:
 29627 ;;		On entry : 0/0
 29628 ;;		On exit  : 0/0
 29629 ;;		Unchanged: 0/0
 29630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29631 ;;      Params:         0       0       0       0       0       0       0       0       0
 29632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29634 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29635 ;;Total ram usage:        0 bytes
 29636 ;; Hardware stack levels used:    1
 29637 ;; This function calls:
 29638 ;;		Nothing
 29639 ;; This function is called by:
 29640 ;;		_USBDeviceTasks
 29641 ;;		_USBCtrlEPServiceComplete
 29642 ;;		_USBCtrlTrfRxService
 29643 ;; This function uses a non-reentrant model
 29644 ;;
 29645                           
 29646                           	psect	text132
 29647  003B80                     __ptext132:
 29648                           	opt stack 0
 29649  003B80                     _USBCtrlEPAllowStatusStage:
 29650                           	opt stack 16
 29651                           
 29652                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29653                           
 29654                           ;incstack = 0
 29655  003B80  504F               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29656  003B82  A4D8               	btfss	status,2,c
 29657  003B84  0012               	return	
 29658                           
 29659                           ;usb_device.c: 1112: {
 29660                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29661  003B86  0E01               	movlw	1
 29662  003B88  6E4F               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29663                           
 29664                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29665  003B8A  504E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29666  003B8C  A4D8               	btfss	status,2,c
 29667  003B8E  0012               	return	
 29668                           
 29669                           ;usb_device.c: 1115: {
 29670                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29671  003B90  0E01               	movlw	1
 29672  003B92  6E4E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29673                           
 29674                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29675  003B94  0E02               	movlw	2
 29676  003B96  1855               	xorwf	_controlTransferState,w,c	;volatile
 29677  003B98  A4D8               	btfss	status,2,c
 29678  003B9A  D016               	goto	i2l1929
 29679                           
 29680                           ;usb_device.c: 1121: {
 29681                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29682  003B9C  0100               	movlb	0	; () banked
 29683  003B9E  EE20 F001          	lfsr	2,1
 29684  003BA2  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29685  003BA4  26D9               	addwf	fsr2l,f,c
 29686  003BA6  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29687  003BA8  22DA               	addwfc	fsr2h,f,c
 29688  003BAA  0E00               	movlw	0
 29689  003BAC  6EDF               	movwf	indf2,c
 29690                           
 29691                           ; BSR set to: 0
 29692                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29693  003BAE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29694  003BB2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29695  003BB6  0E48               	movlw	72
 29696  003BB8  6EDF               	movwf	indf2,c
 29697                           
 29698                           ; BSR set to: 0
 29699                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29700  003BBA  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29701  003BBE  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29702  003BC2  0E00               	movlw	0
 29703  003BC4  8EDB               	bsf	plusw2,7,c
 29704                           
 29705                           ;usb_device.c: 1125: }
 29706  003BC6  0012               	return	
 29707  003BC8                     i2l1929:
 29708                           
 29709                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29710                           
 29711                           ; BSR set to: 0
 29712  003BC8  0455               	decf	_controlTransferState,w,c	;volatile
 29713  003BCA  A4D8               	btfss	status,2,c
 29714  003BCC  0012               	return	
 29715                           
 29716                           ;usb_device.c: 1127: {
 29717                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29718  003BCE  0E00               	movlw	0
 29719  003BD0  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29720                           
 29721                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29722  003BD2  EE20 F001          	lfsr	2,1
 29723  003BD6  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 29724  003BD8  26D9               	addwf	fsr2l,f,c
 29725  003BDA  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29726  003BDC  22DA               	addwfc	fsr2h,f,c
 29727  003BDE  0E08               	movlw	8
 29728  003BE0  6EDF               	movwf	indf2,c
 29729                           
 29730                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29731  003BE2  EE20 F002          	lfsr	2,2
 29732  003BE6  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 29733  003BE8  26D9               	addwf	fsr2l,f,c
 29734  003BEA  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29735  003BEC  22DA               	addwfc	fsr2h,f,c
 29736  003BEE  0E30               	movlw	48
 29737  003BF0  6EDE               	movwf	postinc2,c
 29738  003BF2  0E04               	movlw	4
 29739  003BF4  6EDD               	movwf	postdec2,c
 29740                           
 29741                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29742  003BF6  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29743  003BFA  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29744  003BFE  0E04               	movlw	4
 29745  003C00  6EDF               	movwf	indf2,c
 29746                           
 29747                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29748  003C02  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29749  003C06  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29750  003C0A  0E00               	movlw	0
 29751  003C0C  8EDB               	bsf	plusw2,7,c
 29752                           
 29753                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29754  003C0E  0E01               	movlw	1
 29755  003C10  6E52               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29756                           
 29757                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29758  003C12  EE20 F001          	lfsr	2,1
 29759  003C16  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29760  003C18  26D9               	addwf	fsr2l,f,c
 29761  003C1A  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29762  003C1C  22DA               	addwfc	fsr2h,f,c
 29763  003C1E  0E08               	movlw	8
 29764  003C20  6EDF               	movwf	indf2,c
 29765                           
 29766                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29767  003C22  EE20 F002          	lfsr	2,2
 29768  003C26  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29769  003C28  26D9               	addwf	fsr2l,f,c
 29770  003C2A  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29771  003C2C  22DA               	addwfc	fsr2h,f,c
 29772  003C2E  0E30               	movlw	48
 29773  003C30  6EDE               	movwf	postinc2,c
 29774  003C32  0E04               	movlw	4
 29775  003C34  6EDD               	movwf	postdec2,c
 29776                           
 29777                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29778  003C36  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29779  003C3A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29780  003C3E  0E80               	movlw	128
 29781  003C40  6EDF               	movwf	indf2,c
 29782  003C42  0012               	return	
 29783  003C44                     __end_of_USBCtrlEPAllowStatusStage:
 29784                           	opt stack 0
 29785                           tosu	equ	0xFFF
 29786                           tosh	equ	0xFFE
 29787                           tosl	equ	0xFFD
 29788                           pclatu	equ	0xFFB
 29789                           pclath	equ	0xFFA
 29790                           tblptru	equ	0xFF8
 29791                           tblptrh	equ	0xFF7
 29792                           tblptrl	equ	0xFF6
 29793                           tablat	equ	0xFF5
 29794                           prodh	equ	0xFF4
 29795                           prodl	equ	0xFF3
 29796                           intcon	equ	0xFF2
 29797                           intcon2	equ	0xFF1
 29798                           intcon3	equ	0xFF0
 29799                           indf0	equ	0xFEF
 29800                           postinc0	equ	0xFEE
 29801                           fsr0h	equ	0xFEA
 29802                           fsr0l	equ	0xFE9
 29803                           wreg	equ	0xFE8
 29804                           indf1	equ	0xFE7
 29805                           postdec1	equ	0xFE5
 29806                           fsr1h	equ	0xFE2
 29807                           fsr1l	equ	0xFE1
 29808                           indf2	equ	0xFDF
 29809                           postinc2	equ	0xFDE
 29810                           postdec2	equ	0xFDD
 29811                           plusw2	equ	0xFDB
 29812                           fsr2h	equ	0xFDA
 29813                           fsr2l	equ	0xFD9
 29814                           status	equ	0xFD8
 29815                           
 29816 ;; *************** function _USBCtrlTrfInHandler *****************
 29817 ;; Defined at:
 29818 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;		None
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29823 ;; Return value:  Size  Location     Type
 29824 ;;                  1    wreg      void 
 29825 ;; Registers used:
 29826 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 29827 ;; Tracked objects:
 29828 ;;		On entry : 0/0
 29829 ;;		On exit  : 0/0
 29830 ;;		Unchanged: 0/0
 29831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29832 ;;      Params:         0       0       0       0       0       0       0       0       0
 29833 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29834 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29835 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29836 ;;Total ram usage:        1 bytes
 29837 ;; Hardware stack levels used:    1
 29838 ;; Hardware stack levels required when called:    2
 29839 ;; This function calls:
 29840 ;;		_USART_mySetLineCodingHandler
 29841 ;;		_USBCtrlTrfTxService
 29842 ;; This function is called by:
 29843 ;;		_USBCtrlEPService
 29844 ;; This function uses a non-reentrant model
 29845 ;;
 29846                           
 29847                           	psect	text133
 29848  0034D8                     __ptext133:
 29849                           	opt stack 0
 29850  0034D8                     _USBCtrlTrfInHandler:
 29851                           	opt stack 16
 29852                           
 29853                           ;usb_device.c: 2225: uint8_t lastDTS;
 29854                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29855                           
 29856                           ;incstack = 0
 29857  0034D8  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29858  0034DC  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29859  0034E0  0100               	movlb	0	; () banked
 29860  0034E2  0E00               	movlw	0
 29861  0034E4  BCDF               	btfsc	indf2,6,c
 29862  0034E6  0E01               	movlw	1
 29863  0034E8  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29867  0034EA  0E04               	movlw	4
 29868  0034EC  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 29869                           
 29870                           ; BSR set to: 0
 29871                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29872  0034EE  0E08               	movlw	8
 29873  0034F0  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29874  0034F2  A4D8               	btfss	status,2,c
 29875  0034F4  D00C               	goto	i2l2058
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;usb_device.c: 2236: {
 29879                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29880  0034F6  0104               	movlb	4	; () banked
 29881  0034F8  5132               	movf	50,w,b	;volatile
 29882  0034FA  0B7F               	andlw	127
 29883  0034FC  6E63               	movwf	3939,c	;volatile
 29884                           
 29885                           ; BSR set to: 4
 29886                           ;usb_device.c: 2238: if(UADDR != 0u)
 29887  0034FE  5063               	movf	3939,w,c	;volatile
 29888  003500  B4D8               	btfsc	status,2,c
 29889  003502  D002               	goto	i2l2057
 29890                           
 29891                           ; BSR set to: 4
 29892                           ;usb_device.c: 2239: {
 29893                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29894  003504  0E10               	movlw	16
 29895  003506  D001               	goto	L34
 29896  003508                     i2l2057:
 29897                           
 29898                           ;usb_device.c: 2242: else
 29899                           ;usb_device.c: 2243: {
 29900                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29901                           
 29902                           ; BSR set to: 0
 29903  003508  0E04               	movlw	4
 29904  00350A                     L34:
 29905  00350A  0100               	movlb	0	; () banked
 29906  00350C  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 29907  00350E                     i2l2058:
 29908                           
 29909                           ; BSR set to: 0
 29910                           ;usb_device.c: 2245: }
 29911                           ;usb_device.c: 2246: }
 29912                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29913                           
 29914                           ; BSR set to: 0
 29915                           
 29916                           ; BSR set to: 0
 29917  00350E  0455               	decf	_controlTransferState,w,c	;volatile
 29918  003510  A4D8               	btfss	status,2,c
 29919  003512  D03A               	goto	i2l2059
 29920                           
 29921                           ; BSR set to: 0
 29922                           ;usb_device.c: 2250: {
 29923                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29924  003514  EE20 F002          	lfsr	2,2
 29925  003518  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29926  00351A  26D9               	addwf	fsr2l,f,c
 29927  00351C  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29928  00351E  22DA               	addwfc	fsr2h,f,c
 29929  003520  0E38               	movlw	56
 29930  003522  6EDE               	movwf	postinc2,c
 29931  003524  0E04               	movlw	4
 29932  003526  6EDD               	movwf	postdec2,c
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29936  003528  EC26  F01C         	call	_USBCtrlTrfTxService	;wreg free
 29937                           
 29938                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29939  00352C  0E02               	movlw	2
 29940  00352E  1856               	xorwf	_shortPacketStatus,w,c	;volatile
 29941  003530  A4D8               	btfss	status,2,c
 29942  003532  D00D               	goto	i2l2060
 29943                           
 29944                           ;usb_device.c: 2259: {
 29945                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29946  003534  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29947  003538  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29948  00353C  0E04               	movlw	4
 29949  00353E  6EDF               	movwf	indf2,c
 29950                           
 29951                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29952  003540  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29953  003544  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29954  003548  0E00               	movlw	0
 29955  00354A  8EDB               	bsf	plusw2,7,c
 29956                           
 29957                           ;usb_device.c: 2264: }
 29958  00354C  0012               	return	
 29959  00354E                     i2l2060:
 29960                           
 29961                           ;usb_device.c: 2265: else
 29962                           ;usb_device.c: 2266: {
 29963                           ;usb_device.c: 2267: if(lastDTS == 0)
 29964  00354E  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29965  003550  A4D8               	btfss	status,2,c
 29966  003552  D00D               	goto	i2l2062
 29967                           
 29968                           ;usb_device.c: 2268: {
 29969                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29970  003554  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29971  003558  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29972  00355C  0E48               	movlw	72
 29973  00355E  6EDF               	movwf	indf2,c
 29974                           
 29975                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29976  003560  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29977  003564  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29978  003568  0E00               	movlw	0
 29979  00356A  8EDB               	bsf	plusw2,7,c
 29980                           
 29981                           ;usb_device.c: 2271: }
 29982  00356C  0012               	return	
 29983  00356E                     i2l2062:
 29984                           
 29985                           ;usb_device.c: 2272: else
 29986                           ;usb_device.c: 2273: {
 29987                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29988  00356E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29989  003572  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29990  003576  0E08               	movlw	8
 29991  003578  6EDF               	movwf	indf2,c
 29992                           
 29993                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29994  00357A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29995  00357E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29996  003582  0E00               	movlw	0
 29997  003584  8EDB               	bsf	plusw2,7,c
 29998                           
 29999                           ;usb_device.c: 2276: }
 30000                           ;usb_device.c: 2277: }
 30001                           ;usb_device.c: 2278: }
 30002  003586  0012               	return	
 30003  003588                     i2l2059:
 30004                           
 30005                           ; BSR set to: 0
 30006                           ;usb_device.c: 2279: else
 30007                           ;usb_device.c: 2280: {
 30008                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 30009  003588  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 30010  00358A  D014               	goto	i2l2065
 30011                           
 30012                           ; BSR set to: 0
 30013                           ;usb_device.c: 2285: {
 30014                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 30015  00358C  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 30016  00358E  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 30017  003590  B4D8               	btfsc	status,2,c
 30018  003592  D00E               	goto	i2u869_49
 30019                           
 30020                           ; BSR set to: 0
 30021                           ;usb_device.c: 2287: {
 30022                           ;usb_device.c: 2288: outPipes[0].pFunc();
 30023  003594  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 30024  003598  D801               	call	i2u869_48
 30025  00359A  D00A               	goto	i2u869_49
 30026  00359C                     i2u869_48:
 30027  00359C  0005               	push	
 30028  00359E  6EFA               	movwf	pclath,c
 30029  0035A0  50DE               	movf	postinc2,w,c
 30030  0035A2  6EFD               	movwf	tosl,c
 30031  0035A4  50DE               	movf	postinc2,w,c
 30032  0035A6  6EFE               	movwf	tosh,c
 30033  0035A8  50F8               	movf	tblptru,w,c
 30034  0035AA  6EFF               	movwf	tosu,c
 30035  0035AC  50FA               	movf	pclath,w,c
 30036  0035AE  0012               	return		;indir
 30037  0035B0                     i2u869_49:
 30038                           
 30039                           ;usb_device.c: 2289: }
 30040                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 30041  0035B0  0100               	movlb	0	; () banked
 30042  0035B2  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30043  0035B4                     i2l2065:
 30044                           
 30045                           ; BSR set to: 0
 30046                           ;usb_device.c: 2291: }
 30047                           ;usb_device.c: 2293: controlTransferState = 0;
 30048                           
 30049                           ; BSR set to: 0
 30050  0035B4  0E00               	movlw	0
 30051  0035B6  6E55               	movwf	_controlTransferState,c	;volatile
 30052  0035B8  0012               	return	
 30053  0035BA                     __end_of_USBCtrlTrfInHandler:
 30054                           	opt stack 0
 30055                           tosu	equ	0xFFF
 30056                           tosh	equ	0xFFE
 30057                           tosl	equ	0xFFD
 30058                           pclatu	equ	0xFFB
 30059                           pclath	equ	0xFFA
 30060                           tblptru	equ	0xFF8
 30061                           tblptrh	equ	0xFF7
 30062                           tblptrl	equ	0xFF6
 30063                           tablat	equ	0xFF5
 30064                           prodh	equ	0xFF4
 30065                           prodl	equ	0xFF3
 30066                           intcon	equ	0xFF2
 30067                           intcon2	equ	0xFF1
 30068                           intcon3	equ	0xFF0
 30069                           indf0	equ	0xFEF
 30070                           postinc0	equ	0xFEE
 30071                           fsr0h	equ	0xFEA
 30072                           fsr0l	equ	0xFE9
 30073                           wreg	equ	0xFE8
 30074                           indf1	equ	0xFE7
 30075                           postdec1	equ	0xFE5
 30076                           fsr1h	equ	0xFE2
 30077                           fsr1l	equ	0xFE1
 30078                           indf2	equ	0xFDF
 30079                           postinc2	equ	0xFDE
 30080                           postdec2	equ	0xFDD
 30081                           plusw2	equ	0xFDB
 30082                           fsr2h	equ	0xFDA
 30083                           fsr2l	equ	0xFD9
 30084                           status	equ	0xFD8
 30085                           
 30086 ;; *************** function _USBCtrlTrfTxService *****************
 30087 ;; Defined at:
 30088 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 30089 ;; Parameters:    Size  Location     Type
 30090 ;;		None
 30091 ;; Auto vars:     Size  Location     Type
 30092 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30093 ;; Return value:  Size  Location     Type
 30094 ;;                  1    wreg      void 
 30095 ;; Registers used:
 30096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30097 ;; Tracked objects:
 30098 ;;		On entry : 0/0
 30099 ;;		On exit  : 0/0
 30100 ;;		Unchanged: 0/0
 30101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30102 ;;      Params:         0       0       0       0       0       0       0       0       0
 30103 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30105 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30106 ;;Total ram usage:        1 bytes
 30107 ;; Hardware stack levels used:    1
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_USBCtrlEPAllowDataStage
 30112 ;;		_USBCtrlTrfInHandler
 30113 ;; This function uses a non-reentrant model
 30114 ;;
 30115                           
 30116                           	psect	text134
 30117  00384C                     __ptext134:
 30118                           	opt stack 0
 30119  00384C                     _USBCtrlTrfTxService:
 30120                           	opt stack 15
 30121                           
 30122                           ;usb_device.c: 1439: uint8_t byteToSend;
 30123                           ;usb_device.c: 1443: byteToSend = 8;
 30124                           
 30125                           ;incstack = 0
 30126  00384C  0E08               	movlw	8
 30127  00384E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30128                           
 30129                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30130  003850  0100               	movlb	0	; () banked
 30131  003852  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30132  003854  E110               	bnz	i2l8092
 30133  003856  0E08               	movlw	8
 30134  003858  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30135  00385A  B0D8               	btfsc	status,0,c
 30136  00385C  D00C               	goto	i2l1962
 30137                           
 30138                           ; BSR set to: 0
 30139                           ;usb_device.c: 1445: {
 30140                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30141  00385E  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30142                           
 30143                           ; BSR set to: 0
 30144                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30145  003862  5056               	movf	_shortPacketStatus,w,c	;volatile
 30146  003864  A4D8               	btfss	status,2,c
 30147  003866  D002               	goto	i2l1960
 30148                           
 30149                           ; BSR set to: 0
 30150                           ;usb_device.c: 1454: {
 30151                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30152  003868  0E01               	movlw	1
 30153  00386A  D004               	goto	L35
 30154  00386C                     i2l1960:
 30155                           
 30156                           ; BSR set to: 0
 30157                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30158                           
 30159                           ; BSR set to: 0
 30160  00386C  0456               	decf	_shortPacketStatus,w,c	;volatile
 30161  00386E  A4D8               	btfss	status,2,c
 30162  003870  D002               	goto	i2l1962
 30163                           
 30164                           ; BSR set to: 0
 30165                           ;usb_device.c: 1458: {
 30166                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30167  003872  0E02               	movlw	2
 30168  003874                     L35:
 30169  003874  6E56               	movwf	_shortPacketStatus,c	;volatile
 30170  003876                     i2l1962:
 30171  003876                     i2l8092:
 30172                           
 30173                           ; BSR set to: 0
 30174                           ;usb_device.c: 1460: }
 30175                           ;usb_device.c: 1461: }
 30176                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30177  003876  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30178  003878  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30179  00387A  0E00               	movlw	0
 30180  00387C  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30181                           
 30182                           ; BSR set to: 0
 30183                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30184  00387E  EE20 F001          	lfsr	2,1
 30185  003882  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30186  003884  26D9               	addwf	fsr2l,f,c
 30187  003886  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30188  003888  22DA               	addwfc	fsr2h,f,c
 30189  00388A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30190                           
 30191                           ; BSR set to: 0
 30192                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30193  00388E  0E38               	movlw	56
 30194  003890  0101               	movlb	1	; () banked
 30195  003892  6F36               	movwf	_pDst& (0+255),b
 30196  003894  0E04               	movlw	4
 30197  003896  6F37               	movwf	(_pDst+1)& (0+255),b
 30198                           
 30199                           ; BSR set to: 1
 30200                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30201  003898  0100               	movlb	0	; () banked
 30202  00389A  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30203  00389C  D01D               	goto	i2l1964
 30204  00389E  D03C               	goto	i2l1968
 30205  0038A0                     
 30206                           ;usb_device.c: 1478: {
 30207                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30208                           
 30209                           ; BSR set to: 0
 30210  0038A0  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30211  0038A4  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30212  0038A8  6AF8               	clrf	tblptru,c
 30213  0038AA  C136  FFD9         	movff	_pDst,fsr2l
 30214  0038AE  C137  FFDA         	movff	_pDst+1,fsr2h
 30215  0038B2  0E07               	movlw	(high __ramtop+-1)
 30216  0038B4  64F7               	cpfsgt	tblptrh,c
 30217  0038B6  D003               	bra	i2u595_47
 30218  0038B8  0008               	tblrd		*
 30219  0038BA  50F5               	movf	tablat,w,c
 30220  0038BC  D005               	bra	i2u595_40
 30221  0038BE                     i2u595_47:
 30222  0038BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 30223  0038C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 30224  0038C6  50EF               	movf	indf0,w,c
 30225  0038C8                     i2u595_40:
 30226  0038C8  6EDF               	movwf	indf2,c
 30227  0038CA  0100               	movlb	0	; () banked
 30228  0038CC  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30229  0038CE  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30230                           
 30231                           ; BSR set to: 0
 30232  0038D0  0101               	movlb	1	; () banked
 30233  0038D2  4B36               	infsnz	_pDst& (0+255),f,b
 30234  0038D4  2B37               	incf	(_pDst+1)& (0+255),f,b
 30235                           
 30236                           ; BSR set to: 1
 30237                           ;usb_device.c: 1480: byteToSend--;
 30238  0038D6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30239  0038D8                     i2l1964:
 30240                           
 30241                           ; BSR set to: 1
 30242  0038D8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30243  0038DA  B4D8               	btfsc	status,2,c
 30244  0038DC  0012               	return	
 30245  0038DE  D7E0               	goto	i2l1965
 30246  0038E0                     
 30247                           ;usb_device.c: 1486: {
 30248                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30249  0038E0  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30250  0038E4  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30251  0038E8  6AF8               	clrf	tblptru,c
 30252  0038EA  C136  FFD9         	movff	_pDst,fsr2l
 30253  0038EE  C137  FFDA         	movff	_pDst+1,fsr2h
 30254  0038F2  0E07               	movlw	(high __ramtop+-1)
 30255  0038F4  64F7               	cpfsgt	tblptrh,c
 30256  0038F6  D003               	bra	i2u597_47
 30257  0038F8  0008               	tblrd		*
 30258  0038FA  50F5               	movf	tablat,w,c
 30259  0038FC  D005               	bra	i2u597_40
 30260  0038FE                     i2u597_47:
 30261  0038FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 30262  003902  CFF7 FFEA          	movff	tblptrh,fsr0h
 30263  003906  50EF               	movf	indf0,w,c
 30264  003908                     i2u597_40:
 30265  003908  6EDF               	movwf	indf2,c
 30266  00390A  0100               	movlb	0	; () banked
 30267  00390C  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30268  00390E  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30269                           
 30270                           ; BSR set to: 0
 30271  003910  0101               	movlb	1	; () banked
 30272  003912  4B36               	infsnz	_pDst& (0+255),f,b
 30273  003914  2B37               	incf	(_pDst+1)& (0+255),f,b
 30274                           
 30275                           ; BSR set to: 1
 30276                           ;usb_device.c: 1488: byteToSend--;
 30277  003916  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30278  003918                     i2l1968:
 30279                           
 30280                           ; BSR set to: 1
 30281  003918  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30282  00391A  B4D8               	btfsc	status,2,c
 30283  00391C  0012               	return	
 30284  00391E  D7E0               	goto	i2l1969
 30285  003920                     __end_of_USBCtrlTrfTxService:
 30286                           	opt stack 0
 30287                           tosu	equ	0xFFF
 30288                           tosh	equ	0xFFE
 30289                           tosl	equ	0xFFD
 30290                           pclatu	equ	0xFFB
 30291                           pclath	equ	0xFFA
 30292                           tblptru	equ	0xFF8
 30293                           tblptrh	equ	0xFF7
 30294                           tblptrl	equ	0xFF6
 30295                           tablat	equ	0xFF5
 30296                           prodh	equ	0xFF4
 30297                           prodl	equ	0xFF3
 30298                           intcon	equ	0xFF2
 30299                           intcon2	equ	0xFF1
 30300                           intcon3	equ	0xFF0
 30301                           indf0	equ	0xFEF
 30302                           postinc0	equ	0xFEE
 30303                           fsr0h	equ	0xFEA
 30304                           fsr0l	equ	0xFE9
 30305                           wreg	equ	0xFE8
 30306                           indf1	equ	0xFE7
 30307                           postdec1	equ	0xFE5
 30308                           fsr1h	equ	0xFE2
 30309                           fsr1l	equ	0xFE1
 30310                           indf2	equ	0xFDF
 30311                           postinc2	equ	0xFDE
 30312                           postdec2	equ	0xFDD
 30313                           plusw2	equ	0xFDB
 30314                           fsr2h	equ	0xFDA
 30315                           fsr2l	equ	0xFD9
 30316                           status	equ	0xFD8
 30317                           
 30318 ;; *************** function _USART_mySetLineCodingHandler *****************
 30319 ;; Defined at:
 30320 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30321 ;; Parameters:    Size  Location     Type
 30322 ;;		None
 30323 ;; Auto vars:     Size  Location     Type
 30324 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30325 ;; Return value:  Size  Location     Type
 30326 ;;                  1    wreg      void 
 30327 ;; Registers used:
 30328 ;;		wreg, status,2, status,0, cstack
 30329 ;; Tracked objects:
 30330 ;;		On entry : 0/0
 30331 ;;		On exit  : 0/0
 30332 ;;		Unchanged: 0/0
 30333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30334 ;;      Params:         0       0       0       0       0       0       0       0       0
 30335 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30337 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30338 ;;Total ram usage:        4 bytes
 30339 ;; Hardware stack levels used:    1
 30340 ;; Hardware stack levels required when called:    1
 30341 ;; This function calls:
 30342 ;;		___lldiv
 30343 ;;		i2_EUSART_Initialize
 30344 ;; This function is called by:
 30345 ;;		_USBCheckCDCRequest
 30346 ;;		_USBCtrlTrfRxService
 30347 ;;		_USBCtrlTrfInHandler
 30348 ;; This function uses a non-reentrant model
 30349 ;;
 30350                           
 30351                           	psect	text135
 30352  00512A                     __ptext135:
 30353                           	opt stack 0
 30354  00512A                     _USART_mySetLineCodingHandler:
 30355                           	opt stack 15
 30356                           
 30357                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30358                           
 30359                           ;incstack = 0
 30360  00512A  C1C0  F1D2         	movff	_cdc_notice,_line_coding
 30361  00512E  C1C1  F1D3         	movff	_cdc_notice+1,_line_coding+1
 30362  005132  C1C2  F1D4         	movff	_cdc_notice+2,_line_coding+2
 30363  005136  C1C3  F1D5         	movff	_cdc_notice+3,_line_coding+3
 30364                           
 30365                           ;USBapp.c: 278: uint32_t dwBaud;
 30366                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30367  00513A  0E00               	movlw	0
 30368  00513C  6E01               	movwf	___lldiv@dividend,c
 30369  00513E  0E1B               	movlw	27
 30370  005140  6E02               	movwf	___lldiv@dividend+1,c
 30371  005142  0EB7               	movlw	183
 30372  005144  6E03               	movwf	___lldiv@dividend+2,c
 30373  005146  0E00               	movlw	0
 30374  005148  6E04               	movwf	___lldiv@dividend+3,c
 30375  00514A  C1D2  F005         	movff	_line_coding,___lldiv@divisor
 30376  00514E  C1D3  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30377  005152  C1D4  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30378  005156  C1D5  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30379  00515A  ECC0  F024         	call	___lldiv	;wreg free
 30380  00515E  0EFF               	movlw	255
 30381  005160  2401               	addwf	?___lldiv,w,c
 30382  005162  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30383  005164  0EFF               	movlw	255
 30384  005166  2002               	addwfc	?___lldiv+1,w,c
 30385  005168  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30386  00516A  0EFF               	movlw	255
 30387  00516C  2003               	addwfc	?___lldiv+2,w,c
 30388  00516E  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30389  005170  0EFF               	movlw	255
 30390  005172  2004               	addwfc	?___lldiv+3,w,c
 30391  005174  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30392                           
 30393                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30394  005176  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30395                           
 30396                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30397  00517A  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30398                           
 30399                           ;USBapp.c: 283: EUSART_Initialize();
 30400  00517E  ECE4  F02A         	call	i2_EUSART_Initialize	;wreg free
 30401  005182  0012               	return		;funcret
 30402  005184                     __end_of_USART_mySetLineCodingHandler:
 30403                           	opt stack 0
 30404                           tosu	equ	0xFFF
 30405                           tosh	equ	0xFFE
 30406                           tosl	equ	0xFFD
 30407                           pclatu	equ	0xFFB
 30408                           pclath	equ	0xFFA
 30409                           tblptru	equ	0xFF8
 30410                           tblptrh	equ	0xFF7
 30411                           tblptrl	equ	0xFF6
 30412                           tablat	equ	0xFF5
 30413                           prodh	equ	0xFF4
 30414                           prodl	equ	0xFF3
 30415                           intcon	equ	0xFF2
 30416                           intcon2	equ	0xFF1
 30417                           intcon3	equ	0xFF0
 30418                           indf0	equ	0xFEF
 30419                           postinc0	equ	0xFEE
 30420                           fsr0h	equ	0xFEA
 30421                           fsr0l	equ	0xFE9
 30422                           wreg	equ	0xFE8
 30423                           indf1	equ	0xFE7
 30424                           postdec1	equ	0xFE5
 30425                           fsr1h	equ	0xFE2
 30426                           fsr1l	equ	0xFE1
 30427                           indf2	equ	0xFDF
 30428                           postinc2	equ	0xFDE
 30429                           postdec2	equ	0xFDD
 30430                           plusw2	equ	0xFDB
 30431                           fsr2h	equ	0xFDA
 30432                           fsr2l	equ	0xFD9
 30433                           status	equ	0xFD8
 30434                           
 30435 ;; *************** function i2_EUSART_Initialize *****************
 30436 ;; Defined at:
 30437 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30438 ;; Parameters:    Size  Location     Type
 30439 ;;		None
 30440 ;; Auto vars:     Size  Location     Type
 30441 ;;		None
 30442 ;; Return value:  Size  Location     Type
 30443 ;;                  1    wreg      void 
 30444 ;; Registers used:
 30445 ;;		wreg, status,2
 30446 ;; Tracked objects:
 30447 ;;		On entry : 0/0
 30448 ;;		On exit  : 0/0
 30449 ;;		Unchanged: 0/0
 30450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30451 ;;      Params:         0       0       0       0       0       0       0       0       0
 30452 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30454 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30455 ;;Total ram usage:        0 bytes
 30456 ;; Hardware stack levels used:    1
 30457 ;; This function calls:
 30458 ;;		Nothing
 30459 ;; This function is called by:
 30460 ;;		_USBapp_CdcEmulatorInitialize
 30461 ;;		_USART_mySetLineCodingHandler
 30462 ;; This function uses a non-reentrant model
 30463 ;;
 30464                           
 30465                           	psect	text136
 30466  0055C8                     __ptext136:
 30467                           	opt stack 0
 30468  0055C8                     i2_EUSART_Initialize:
 30469                           	opt stack 17
 30470                           
 30471                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30472                           
 30473                           ;incstack = 0
 30474  0055C8  9A9D               	bcf	3997,5,c	;volatile
 30475                           
 30476                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30477  0055CA  989D               	bcf	3997,4,c	;volatile
 30478                           
 30479                           ;eusart.c: 85: BAUDCON = 0x48;
 30480  0055CC  0E48               	movlw	72
 30481  0055CE  6EB8               	movwf	4024,c	;volatile
 30482                           
 30483                           ;eusart.c: 88: RCSTA = 0x90;
 30484  0055D0  0E90               	movlw	144
 30485  0055D2  6EAB               	movwf	4011,c	;volatile
 30486                           
 30487                           ;eusart.c: 91: TXSTA = 0x26;
 30488  0055D4  0E26               	movlw	38
 30489  0055D6  6EAC               	movwf	4012,c	;volatile
 30490                           
 30491                           ;eusart.c: 95: SPBRG = 0xD0;
 30492  0055D8  0ED0               	movlw	208
 30493  0055DA  6EAF               	movwf	4015,c	;volatile
 30494                           
 30495                           ;eusart.c: 100: SPBRGH = 0x00;
 30496  0055DC  0E00               	movlw	0
 30497  0055DE  6EB0               	movwf	4016,c	;volatile
 30498                           
 30499                           ;eusart.c: 103: eusartTxHead = 0;
 30500  0055E0  0E00               	movlw	0
 30501  0055E2  0100               	movlb	0	; () banked
 30502  0055E4  6FE2               	movwf	_eusartTxHead& (0+255),b
 30503                           
 30504                           ;eusart.c: 104: eusartTxTail = 0;
 30505  0055E6  0E00               	movlw	0
 30506  0055E8  6FE1               	movwf	_eusartTxTail& (0+255),b
 30507                           
 30508                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30509  0055EA  0E40               	movlw	64
 30510  0055EC  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 30511                           
 30512                           ;eusart.c: 107: eusartRxHead = 0;
 30513  0055EE  0E00               	movlw	0
 30514  0055F0  6FDF               	movwf	_eusartRxHead& (0+255),b
 30515                           
 30516                           ;eusart.c: 108: eusartRxTail = 0;
 30517  0055F2  0E00               	movlw	0
 30518  0055F4  6FDE               	movwf	_eusartRxTail& (0+255),b
 30519                           
 30520                           ;eusart.c: 109: eusartRxCount = 0;
 30521  0055F6  0E00               	movlw	0
 30522  0055F8  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 30523                           
 30524                           ; BSR set to: 0
 30525                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30526  0055FA  8A9D               	bsf	3997,5,c	;volatile
 30527                           
 30528                           ; BSR set to: 0
 30529                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30530  0055FC  88AB               	bsf	4011,4,c	;volatile
 30531                           
 30532                           ; BSR set to: 0
 30533  0055FE  0012               	return		;funcret
 30534  005600                     __end_ofi2_EUSART_Initialize:
 30535                           	opt stack 0
 30536                           tosu	equ	0xFFF
 30537                           tosh	equ	0xFFE
 30538                           tosl	equ	0xFFD
 30539                           pclatu	equ	0xFFB
 30540                           pclath	equ	0xFFA
 30541                           tblptru	equ	0xFF8
 30542                           tblptrh	equ	0xFF7
 30543                           tblptrl	equ	0xFF6
 30544                           tablat	equ	0xFF5
 30545                           prodh	equ	0xFF4
 30546                           prodl	equ	0xFF3
 30547                           intcon	equ	0xFF2
 30548                           intcon2	equ	0xFF1
 30549                           intcon3	equ	0xFF0
 30550                           indf0	equ	0xFEF
 30551                           postinc0	equ	0xFEE
 30552                           fsr0h	equ	0xFEA
 30553                           fsr0l	equ	0xFE9
 30554                           wreg	equ	0xFE8
 30555                           indf1	equ	0xFE7
 30556                           postdec1	equ	0xFE5
 30557                           fsr1h	equ	0xFE2
 30558                           fsr1l	equ	0xFE1
 30559                           indf2	equ	0xFDF
 30560                           postinc2	equ	0xFDE
 30561                           postdec2	equ	0xFDD
 30562                           plusw2	equ	0xFDB
 30563                           fsr2h	equ	0xFDA
 30564                           fsr2l	equ	0xFD9
 30565                           status	equ	0xFD8
 30566                           
 30567 ;; *************** function ___lldiv *****************
 30568 ;; Defined at:
 30569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30570 ;; Parameters:    Size  Location     Type
 30571 ;;  dividend        4    0[COMRAM] unsigned long 
 30572 ;;  divisor         4    4[COMRAM] unsigned long 
 30573 ;; Auto vars:     Size  Location     Type
 30574 ;;  quotient        4    8[COMRAM] unsigned long 
 30575 ;;  counter         1   12[COMRAM] unsigned char 
 30576 ;; Return value:  Size  Location     Type
 30577 ;;                  4    0[COMRAM] unsigned long 
 30578 ;; Registers used:
 30579 ;;		wreg, status,2, status,0
 30580 ;; Tracked objects:
 30581 ;;		On entry : 0/0
 30582 ;;		On exit  : 0/0
 30583 ;;		Unchanged: 0/0
 30584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30585 ;;      Params:         8       0       0       0       0       0       0       0       0
 30586 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30588 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30589 ;;Total ram usage:       13 bytes
 30590 ;; Hardware stack levels used:    1
 30591 ;; This function calls:
 30592 ;;		Nothing
 30593 ;; This function is called by:
 30594 ;;		_USART_mySetLineCodingHandler
 30595 ;; This function uses a non-reentrant model
 30596 ;;
 30597                           
 30598                           	psect	text137
 30599  004980                     __ptext137:
 30600                           	opt stack 0
 30601  004980                     ___lldiv:
 30602                           	opt stack 15
 30603                           
 30604                           ; BSR set to: 0
 30605                           ;incstack = 0
 30606  004980  0E00               	movlw	0
 30607  004982  6E09               	movwf	___lldiv@quotient,c
 30608  004984  0E00               	movlw	0
 30609  004986  6E0A               	movwf	___lldiv@quotient+1,c
 30610  004988  0E00               	movlw	0
 30611  00498A  6E0B               	movwf	___lldiv@quotient+2,c
 30612  00498C  0E00               	movlw	0
 30613  00498E  6E0C               	movwf	___lldiv@quotient+3,c
 30614  004990  5005               	movf	___lldiv@divisor,w,c
 30615  004992  1006               	iorwf	___lldiv@divisor+1,w,c
 30616  004994  1007               	iorwf	___lldiv@divisor+2,w,c
 30617  004996  1008               	iorwf	___lldiv@divisor+3,w,c
 30618  004998  B4D8               	btfsc	status,2,c
 30619  00499A  D02A               	goto	i2l2607
 30620  00499C  0E01               	movlw	1
 30621  00499E  6E0D               	movwf	___lldiv@counter,c
 30622  0049A0  D006               	goto	i2l2602
 30623  0049A2  90D8               	bcf	status,0,c
 30624  0049A4  3605               	rlcf	___lldiv@divisor,f,c
 30625  0049A6  3606               	rlcf	___lldiv@divisor+1,f,c
 30626  0049A8  3607               	rlcf	___lldiv@divisor+2,f,c
 30627  0049AA  3608               	rlcf	___lldiv@divisor+3,f,c
 30628  0049AC  2A0D               	incf	___lldiv@counter,f,c
 30629  0049AE                     i2l2602:
 30630  0049AE  AE08               	btfss	___lldiv@divisor+3,7,c
 30631  0049B0  D7F8               	goto	i2l2603
 30632  0049B2                     i2u600_40:
 30633  0049B2  90D8               	bcf	status,0,c
 30634  0049B4  3609               	rlcf	___lldiv@quotient,f,c
 30635  0049B6  360A               	rlcf	___lldiv@quotient+1,f,c
 30636  0049B8  360B               	rlcf	___lldiv@quotient+2,f,c
 30637  0049BA  360C               	rlcf	___lldiv@quotient+3,f,c
 30638  0049BC  5005               	movf	___lldiv@divisor,w,c
 30639  0049BE  5C01               	subwf	___lldiv@dividend,w,c
 30640  0049C0  5006               	movf	___lldiv@divisor+1,w,c
 30641  0049C2  5802               	subwfb	___lldiv@dividend+1,w,c
 30642  0049C4  5007               	movf	___lldiv@divisor+2,w,c
 30643  0049C6  5803               	subwfb	___lldiv@dividend+2,w,c
 30644  0049C8  5008               	movf	___lldiv@divisor+3,w,c
 30645  0049CA  5804               	subwfb	___lldiv@dividend+3,w,c
 30646  0049CC  A0D8               	btfss	status,0,c
 30647  0049CE  D009               	goto	i2l2606
 30648  0049D0  5005               	movf	___lldiv@divisor,w,c
 30649  0049D2  5E01               	subwf	___lldiv@dividend,f,c
 30650  0049D4  5006               	movf	___lldiv@divisor+1,w,c
 30651  0049D6  5A02               	subwfb	___lldiv@dividend+1,f,c
 30652  0049D8  5007               	movf	___lldiv@divisor+2,w,c
 30653  0049DA  5A03               	subwfb	___lldiv@dividend+2,f,c
 30654  0049DC  5008               	movf	___lldiv@divisor+3,w,c
 30655  0049DE  5A04               	subwfb	___lldiv@dividend+3,f,c
 30656  0049E0  8009               	bsf	___lldiv@quotient,0,c
 30657  0049E2                     i2l2606:
 30658  0049E2  90D8               	bcf	status,0,c
 30659  0049E4  3208               	rrcf	___lldiv@divisor+3,f,c
 30660  0049E6  3207               	rrcf	___lldiv@divisor+2,f,c
 30661  0049E8  3206               	rrcf	___lldiv@divisor+1,f,c
 30662  0049EA  3205               	rrcf	___lldiv@divisor,f,c
 30663  0049EC  2E0D               	decfsz	___lldiv@counter,f,c
 30664  0049EE  D7E1               	goto	i2u600_40
 30665  0049F0                     i2l2607:
 30666  0049F0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30667  0049F4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30668  0049F8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30669  0049FC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30670  004A00  0012               	return		;funcret
 30671  004A02                     __end_of___lldiv:
 30672                           	opt stack 0
 30673                           tosu	equ	0xFFF
 30674                           tosh	equ	0xFFE
 30675                           tosl	equ	0xFFD
 30676                           pclatu	equ	0xFFB
 30677                           pclath	equ	0xFFA
 30678                           tblptru	equ	0xFF8
 30679                           tblptrh	equ	0xFF7
 30680                           tblptrl	equ	0xFF6
 30681                           tablat	equ	0xFF5
 30682                           prodh	equ	0xFF4
 30683                           prodl	equ	0xFF3
 30684                           intcon	equ	0xFF2
 30685                           intcon2	equ	0xFF1
 30686                           intcon3	equ	0xFF0
 30687                           indf0	equ	0xFEF
 30688                           postinc0	equ	0xFEE
 30689                           fsr0h	equ	0xFEA
 30690                           fsr0l	equ	0xFE9
 30691                           wreg	equ	0xFE8
 30692                           indf1	equ	0xFE7
 30693                           postdec1	equ	0xFE5
 30694                           fsr1h	equ	0xFE2
 30695                           fsr1l	equ	0xFE1
 30696                           indf2	equ	0xFDF
 30697                           postinc2	equ	0xFDE
 30698                           postdec2	equ	0xFDD
 30699                           plusw2	equ	0xFDB
 30700                           fsr2h	equ	0xFDA
 30701                           fsr2l	equ	0xFD9
 30702                           status	equ	0xFD8
 30703                           
 30704 ;; *************** function _TMRapp_Tick *****************
 30705 ;; Defined at:
 30706 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30707 ;; Parameters:    Size  Location     Type
 30708 ;;		None
 30709 ;; Auto vars:     Size  Location     Type
 30710 ;;		None
 30711 ;; Return value:  Size  Location     Type
 30712 ;;                  1    wreg      void 
 30713 ;; Registers used:
 30714 ;;		None
 30715 ;; Tracked objects:
 30716 ;;		On entry : 0/0
 30717 ;;		On exit  : 0/0
 30718 ;;		Unchanged: 0/0
 30719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30720 ;;      Params:         0       0       0       0       0       0       0       0       0
 30721 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30722 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30723 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30724 ;;Total ram usage:        0 bytes
 30725 ;; Hardware stack levels used:    1
 30726 ;; This function calls:
 30727 ;;		Nothing
 30728 ;; This function is called by:
 30729 ;;		_INTERRUPT_InterruptManager
 30730 ;; This function uses a non-reentrant model
 30731 ;;
 30732                           
 30733                           	psect	text138
 30734  005C68                     __ptext138:
 30735                           	opt stack 0
 30736  005C68                     _TMRapp_Tick:
 30737                           	opt stack 20
 30738                           
 30739                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30740                           
 30741                           ;incstack = 0
 30742  005C68  0100               	movlb	0	; () banked
 30743  005C6A  81F8               	bsf	_appTimer& (0+255),0,b
 30744                           
 30745                           ; BSR set to: 0
 30746  005C6C  0012               	return		;funcret
 30747  005C6E                     __end_of_TMRapp_Tick:
 30748                           	opt stack 0
 30749                           tosu	equ	0xFFF
 30750                           tosh	equ	0xFFE
 30751                           tosl	equ	0xFFD
 30752                           pclatu	equ	0xFFB
 30753                           pclath	equ	0xFFA
 30754                           tblptru	equ	0xFF8
 30755                           tblptrh	equ	0xFF7
 30756                           tblptrl	equ	0xFF6
 30757                           tablat	equ	0xFF5
 30758                           prodh	equ	0xFF4
 30759                           prodl	equ	0xFF3
 30760                           intcon	equ	0xFF2
 30761                           intcon2	equ	0xFF1
 30762                           intcon3	equ	0xFF0
 30763                           indf0	equ	0xFEF
 30764                           postinc0	equ	0xFEE
 30765                           fsr0h	equ	0xFEA
 30766                           fsr0l	equ	0xFE9
 30767                           wreg	equ	0xFE8
 30768                           indf1	equ	0xFE7
 30769                           postdec1	equ	0xFE5
 30770                           fsr1h	equ	0xFE2
 30771                           fsr1l	equ	0xFE1
 30772                           indf2	equ	0xFDF
 30773                           postinc2	equ	0xFDE
 30774                           postdec2	equ	0xFDD
 30775                           plusw2	equ	0xFDB
 30776                           fsr2h	equ	0xFDA
 30777                           fsr2l	equ	0xFD9
 30778                           status	equ	0xFD8
 30779                           
 30780 ;; *************** function _TMR3_ISR *****************
 30781 ;; Defined at:
 30782 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30783 ;; Parameters:    Size  Location     Type
 30784 ;;		None
 30785 ;; Auto vars:     Size  Location     Type
 30786 ;;		None
 30787 ;; Return value:  Size  Location     Type
 30788 ;;                  1    wreg      void 
 30789 ;; Registers used:
 30790 ;;		wreg, status,2
 30791 ;; Tracked objects:
 30792 ;;		On entry : 0/0
 30793 ;;		On exit  : 0/0
 30794 ;;		Unchanged: 0/0
 30795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30796 ;;      Params:         0       0       0       0       0       0       0       0       0
 30797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30799 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30800 ;;Total ram usage:        0 bytes
 30801 ;; Hardware stack levels used:    1
 30802 ;; This function calls:
 30803 ;;		Nothing
 30804 ;; This function is called by:
 30805 ;;		_INTERRUPT_InterruptManager
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text139
 30810  0059FA                     __ptext139:
 30811                           	opt stack 0
 30812  0059FA                     _TMR3_ISR:
 30813                           	opt stack 20
 30814                           
 30815                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30816                           
 30817                           ; BSR set to: 0
 30818                           ;incstack = 0
 30819  0059FA  92A1               	bcf	4001,1,c	;volatile
 30820                           
 30821                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30822  0059FC  A48D               	btfss	3981,2,c	;volatile
 30823  0059FE  D006               	goto	i2l1689
 30824                           
 30825                           ;tmr3.c: 168: {
 30826                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30827  005A00  948D               	bcf	3981,2,c	;volatile
 30828                           
 30829                           ;tmr3.c: 170: TMR3H = 0xD5;
 30830  005A02  0ED5               	movlw	213
 30831  005A04  6EB3               	movwf	4019,c	;volatile
 30832                           
 30833                           ;tmr3.c: 171: TMR3L = 0xD0;
 30834  005A06  0ED0               	movlw	208
 30835  005A08  6EB2               	movwf	4018,c	;volatile
 30836                           
 30837                           ;tmr3.c: 172: } else {
 30838  005A0A  0012               	return	
 30839  005A0C                     i2l1689:
 30840                           
 30841                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30842  005A0C  848D               	bsf	3981,2,c	;volatile
 30843                           
 30844                           ;tmr3.c: 174: TMR3H = 0xFB;
 30845  005A0E  0EFB               	movlw	251
 30846  005A10  6EB3               	movwf	4019,c	;volatile
 30847                           
 30848                           ;tmr3.c: 175: TMR3L = 0x50;
 30849  005A12  0E50               	movlw	80
 30850  005A14  6EB2               	movwf	4018,c	;volatile
 30851  005A16  0012               	return	
 30852  005A18                     __end_of_TMR3_ISR:
 30853                           	opt stack 0
 30854                           tosu	equ	0xFFF
 30855                           tosh	equ	0xFFE
 30856                           tosl	equ	0xFFD
 30857                           pclatu	equ	0xFFB
 30858                           pclath	equ	0xFFA
 30859                           tblptru	equ	0xFF8
 30860                           tblptrh	equ	0xFF7
 30861                           tblptrl	equ	0xFF6
 30862                           tablat	equ	0xFF5
 30863                           prodh	equ	0xFF4
 30864                           prodl	equ	0xFF3
 30865                           intcon	equ	0xFF2
 30866                           intcon2	equ	0xFF1
 30867                           intcon3	equ	0xFF0
 30868                           indf0	equ	0xFEF
 30869                           postinc0	equ	0xFEE
 30870                           fsr0h	equ	0xFEA
 30871                           fsr0l	equ	0xFE9
 30872                           wreg	equ	0xFE8
 30873                           indf1	equ	0xFE7
 30874                           postdec1	equ	0xFE5
 30875                           fsr1h	equ	0xFE2
 30876                           fsr1l	equ	0xFE1
 30877                           indf2	equ	0xFDF
 30878                           postinc2	equ	0xFDE
 30879                           postdec2	equ	0xFDD
 30880                           plusw2	equ	0xFDB
 30881                           fsr2h	equ	0xFDA
 30882                           fsr2l	equ	0xFD9
 30883                           status	equ	0xFD8
 30884                           
 30885 ;; *************** function _TMR1_ISR *****************
 30886 ;; Defined at:
 30887 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30888 ;; Parameters:    Size  Location     Type
 30889 ;;		None
 30890 ;; Auto vars:     Size  Location     Type
 30891 ;;		None
 30892 ;; Return value:  Size  Location     Type
 30893 ;;                  1    wreg      void 
 30894 ;; Registers used:
 30895 ;;		wreg, status,2
 30896 ;; Tracked objects:
 30897 ;;		On entry : 0/0
 30898 ;;		On exit  : 0/0
 30899 ;;		Unchanged: 0/0
 30900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30901 ;;      Params:         0       0       0       0       0       0       0       0       0
 30902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30904 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30905 ;;Total ram usage:        0 bytes
 30906 ;; Hardware stack levels used:    1
 30907 ;; This function calls:
 30908 ;;		Nothing
 30909 ;; This function is called by:
 30910 ;;		_INTERRUPT_InterruptManager
 30911 ;; This function uses a non-reentrant model
 30912 ;;
 30913                           
 30914                           	psect	text140
 30915  005BE4                     __ptext140:
 30916                           	opt stack 0
 30917  005BE4                     _TMR1_ISR:
 30918                           	opt stack 20
 30919                           
 30920                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30921                           
 30922                           ;incstack = 0
 30923  005BE4  909E               	bcf	3998,0,c	;volatile
 30924                           
 30925                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30926  005BE6  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 30927  005BE8  6ECF               	movwf	4047,c	;volatile
 30928                           
 30929                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30930  005BEA  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30931  005BEE  0012               	return		;funcret
 30932  005BF0                     __end_of_TMR1_ISR:
 30933                           	opt stack 0
 30934                           tosu	equ	0xFFF
 30935                           tosh	equ	0xFFE
 30936                           tosl	equ	0xFFD
 30937                           pclatu	equ	0xFFB
 30938                           pclath	equ	0xFFA
 30939                           tblptru	equ	0xFF8
 30940                           tblptrh	equ	0xFF7
 30941                           tblptrl	equ	0xFF6
 30942                           tablat	equ	0xFF5
 30943                           prodh	equ	0xFF4
 30944                           prodl	equ	0xFF3
 30945                           intcon	equ	0xFF2
 30946                           intcon2	equ	0xFF1
 30947                           intcon3	equ	0xFF0
 30948                           indf0	equ	0xFEF
 30949                           postinc0	equ	0xFEE
 30950                           fsr0h	equ	0xFEA
 30951                           fsr0l	equ	0xFE9
 30952                           wreg	equ	0xFE8
 30953                           indf1	equ	0xFE7
 30954                           postdec1	equ	0xFE5
 30955                           fsr1h	equ	0xFE2
 30956                           fsr1l	equ	0xFE1
 30957                           indf2	equ	0xFDF
 30958                           postinc2	equ	0xFDE
 30959                           postdec2	equ	0xFDD
 30960                           plusw2	equ	0xFDB
 30961                           fsr2h	equ	0xFDA
 30962                           fsr2l	equ	0xFD9
 30963                           status	equ	0xFD8
 30964                           
 30965 ;; *************** function _TMR0_ISR *****************
 30966 ;; Defined at:
 30967 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 30968 ;; Parameters:    Size  Location     Type
 30969 ;;		None
 30970 ;; Auto vars:     Size  Location     Type
 30971 ;;		None
 30972 ;; Return value:  Size  Location     Type
 30973 ;;                  1    wreg      void 
 30974 ;; Registers used:
 30975 ;;		None
 30976 ;; Tracked objects:
 30977 ;;		On entry : 0/0
 30978 ;;		On exit  : 0/0
 30979 ;;		Unchanged: 0/0
 30980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30981 ;;      Params:         0       0       0       0       0       0       0       0       0
 30982 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30984 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30985 ;;Total ram usage:        0 bytes
 30986 ;; Hardware stack levels used:    1
 30987 ;; This function calls:
 30988 ;;		Nothing
 30989 ;; This function is called by:
 30990 ;;		_INTERRUPT_InterruptManager
 30991 ;; This function uses a non-reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text141
 30995  005C84                     __ptext141:
 30996                           	opt stack 0
 30997  005C84                     _TMR0_ISR:
 30998                           	opt stack 20
 30999                           
 31000                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 31001                           
 31002                           ;incstack = 0
 31003  005C84  94F2               	bcf	intcon,2,c	;volatile
 31004  005C86  0012               	return		;funcret
 31005  005C88                     __end_of_TMR0_ISR:
 31006                           	opt stack 0
 31007                           tosu	equ	0xFFF
 31008                           tosh	equ	0xFFE
 31009                           tosl	equ	0xFFD
 31010                           pclatu	equ	0xFFB
 31011                           pclath	equ	0xFFA
 31012                           tblptru	equ	0xFF8
 31013                           tblptrh	equ	0xFF7
 31014                           tblptrl	equ	0xFF6
 31015                           tablat	equ	0xFF5
 31016                           prodh	equ	0xFF4
 31017                           prodl	equ	0xFF3
 31018                           intcon	equ	0xFF2
 31019                           intcon2	equ	0xFF1
 31020                           intcon3	equ	0xFF0
 31021                           indf0	equ	0xFEF
 31022                           postinc0	equ	0xFEE
 31023                           fsr0h	equ	0xFEA
 31024                           fsr0l	equ	0xFE9
 31025                           wreg	equ	0xFE8
 31026                           indf1	equ	0xFE7
 31027                           postdec1	equ	0xFE5
 31028                           fsr1h	equ	0xFE2
 31029                           fsr1l	equ	0xFE1
 31030                           indf2	equ	0xFDF
 31031                           postinc2	equ	0xFDE
 31032                           postdec2	equ	0xFDD
 31033                           plusw2	equ	0xFDB
 31034                           fsr2h	equ	0xFDA
 31035                           fsr2l	equ	0xFD9
 31036                           status	equ	0xFD8
 31037                           
 31038 ;; *************** function _InterruptTimerUART *****************
 31039 ;; Defined at:
 31040 ;;		line 120 in file "../Includes/Drivers/swUart.c"
 31041 ;; Parameters:    Size  Location     Type
 31042 ;;		None
 31043 ;; Auto vars:     Size  Location     Type
 31044 ;;  mask            1   45[COMRAM] unsigned char 
 31045 ;; Return value:  Size  Location     Type
 31046 ;;                  1    wreg      void 
 31047 ;; Registers used:
 31048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31049 ;; Tracked objects:
 31050 ;;		On entry : 0/0
 31051 ;;		On exit  : 0/0
 31052 ;;		Unchanged: 0/0
 31053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31054 ;;      Params:         0       0       0       0       0       0       0       0       0
 31055 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31056 ;;      Temps:          2       0       0       0       0       0       0       0       0
 31057 ;;      Totals:         3       0       0       0       0       0       0       0       0
 31058 ;;Total ram usage:        3 bytes
 31059 ;; Hardware stack levels used:    1
 31060 ;; Hardware stack levels required when called:    6
 31061 ;; This function calls:
 31062 ;;		_TMR0_StopTimer
 31063 ;;		_clearInterruptTimerUART
 31064 ;;		_printfOled
 31065 ;;		_reloadTimer
 31066 ;;		i2_oled_clear
 31067 ;; This function is called by:
 31068 ;;		_INTERRUPT_InterruptManager
 31069 ;; This function uses a non-reentrant model
 31070 ;;
 31071                           
 31072                           	psect	text142
 31073  0026F6                     __ptext142:
 31074                           	opt stack 0
 31075  0026F6                     _InterruptTimerUART:
 31076                           	opt stack 14
 31077                           
 31078                           ;swUart.c: 122: uint8_t mask;
 31079                           ;swUart.c: 124: switch(status)
 31080                           
 31081                           ;incstack = 0
 31082  0026F6  D08D               	goto	i2l1144
 31083  0026F8                     
 31084                           ;swUart.c: 127: if(countBitsSilent == ( 22 - 1 ) )
 31085  0026F8  0E15               	movlw	21
 31086  0026FA  1857               	xorwf	_countBitsSilent,w,c
 31087  0026FC  A4D8               	btfss	status,2,c
 31088  0026FE  D018               	goto	i2l1146
 31089                           
 31090                           ;swUart.c: 128: {
 31091                           ;swUart.c: 129: TMR0_StopTimer();
 31092  002700  EC46  F02E         	call	_TMR0_StopTimer	;wreg free
 31093                           
 31094                           ;swUart.c: 130: oled_clear();
 31095  002704  EC34  F02D         	call	i2_oled_clear	;wreg free
 31096                           
 31097                           ;swUart.c: 132: *(buffer_rx + countRX) = 0;
 31098  002708  5058               	movf	_countRX,w,c
 31099  00270A  0D01               	mullw	1
 31100  00270C  0E00               	movlw	low _buffer_rx
 31101  00270E  24F3               	addwf	prodl,w,c
 31102  002710  6ED9               	movwf	fsr2l,c
 31103  002712  0E03               	movlw	high _buffer_rx
 31104  002714  20F4               	addwfc	prodh,w,c
 31105  002716  6EDA               	movwf	fsr2h,c
 31106  002718  0E00               	movlw	0
 31107  00271A  6EDF               	movwf	indf2,c
 31108                           
 31109                           ;swUart.c: 133: printfOled(buffer_rx, countRX);
 31110  00271C  0E00               	movlw	low _buffer_rx
 31111  00271E  6E12               	movwf	printfOled@buffer_rx,c
 31112  002720  0E03               	movlw	high _buffer_rx
 31113  002722  6E13               	movwf	printfOled@buffer_rx+1,c
 31114  002724  C058  F014         	movff	_countRX,printfOled@numBytes
 31115  002728  EC4E  F020         	call	_printfOled	;wreg free
 31116                           
 31117                           ;swUart.c: 136: countRX = 0;
 31118  00272C  0E00               	movlw	0
 31119  00272E  6E58               	movwf	_countRX,c
 31120  002730                     i2l1146:
 31121                           
 31122                           ;swUart.c: 137: }
 31123                           ;swUart.c: 138: if(countBitsSilent < 22)
 31124  002730  0E16               	movlw	22
 31125  002732  6057               	cpfslt	_countBitsSilent,c
 31126  002734  D07C               	goto	i2l1148
 31127                           
 31128                           ;swUart.c: 139: {
 31129                           ;swUart.c: 140: countBitsSilent ++;
 31130  002736  2A57               	incf	_countBitsSilent,f,c
 31131                           
 31132                           ;swUart.c: 141: reloadTimer(110);
 31133  002738  0E6E               	movlw	110
 31134  00273A  EC12  F02E         	call	_reloadTimer
 31135                           
 31136                           ;swUart.c: 142: }
 31137                           ;swUart.c: 143: break;
 31138  00273E  D077               	goto	i2l1148
 31139  002740                     
 31140                           ;swUart.c: 155: PORTAbits.RA7 = !PORTAbits.RA7;
 31141  002740  BE80               	btfsc	3968,7,c	;volatile
 31142  002742  D003               	goto	i2u1045_40
 31143  002744  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31144  002746  2A2C               	incf	??_InterruptTimerUART& (0+255),f,c
 31145  002748  D001               	goto	i2u1046_48
 31146  00274A                     i2u1045_40:
 31147  00274A  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31148  00274C                     i2u1046_48:
 31149  00274C  322C               	rrcf	??_InterruptTimerUART,f,c
 31150  00274E  322C               	rrcf	??_InterruptTimerUART,f,c
 31151  002750  5080               	movf	3968,w,c	;volatile
 31152  002752  182C               	xorwf	??_InterruptTimerUART,w,c
 31153  002754  0B7F               	andlw	-129
 31154  002756  182C               	xorwf	??_InterruptTimerUART,w,c
 31155  002758  6E80               	movwf	3968,c	;volatile
 31156                           
 31157                           ;swUart.c: 156: mask = 0x01 << n_bit;
 31158  00275A  C05C  F02C         	movff	_n_bit,??_InterruptTimerUART
 31159  00275E  0E01               	movlw	1
 31160  002760  6E2D               	movwf	(??_InterruptTimerUART+1)& (0+255),c
 31161  002762  2A2C               	incf	??_InterruptTimerUART,f,c
 31162  002764  D002               	goto	i2u1047_44
 31163  002766                     i2u1047_45:
 31164  002766  90D8               	bcf	status,0,c
 31165  002768  362D               	rlcf	??_InterruptTimerUART+1,f,c
 31166  00276A                     i2u1047_44:
 31167  00276A  2E2C               	decfsz	??_InterruptTimerUART,f,c
 31168  00276C  D7FC               	goto	i2u1047_45
 31169  00276E  502D               	movf	??_InterruptTimerUART+1,w,c
 31170  002770  6E2E               	movwf	InterruptTimerUART@mask,c
 31171                           
 31172                           ;swUart.c: 158: if( PORTBbits.RB7 == 1 )
 31173  002772  AE81               	btfss	3969,7,c	;volatile
 31174  002774  D006               	goto	i2l1150
 31175                           
 31176                           ;swUart.c: 159: {
 31177                           ;swUart.c: 160: rx_data |= mask;
 31178  002776  502E               	movf	InterruptTimerUART@mask,w,c
 31179  002778  0100               	movlb	0	; () banked
 31180  00277A  13E3               	iorwf	_rx_data& (0+255),f,b
 31181                           
 31182                           ; BSR set to: 0
 31183                           ;swUart.c: 161: cs ++;
 31184  00277C  0101               	movlb	1	; () banked
 31185  00277E  2B43               	incf	_cs& (0+255),f,b
 31186                           
 31187                           ;swUart.c: 162: }
 31188  002780  D004               	goto	i2l1151
 31189  002782                     i2l1150:
 31190                           
 31191                           ;swUart.c: 163: else
 31192                           ;swUart.c: 164: {
 31193                           ;swUart.c: 166: rx_data &= ~mask;
 31194                           
 31195                           ; BSR set to: 1
 31196  002782  502E               	movf	InterruptTimerUART@mask,w,c
 31197  002784  0AFF               	xorlw	255
 31198  002786  0100               	movlb	0	; () banked
 31199  002788  17E3               	andwf	_rx_data& (0+255),f,b
 31200  00278A                     i2l1151:
 31201                           
 31202                           ;swUart.c: 167: }
 31203                           ;swUart.c: 168: n_bit ++;
 31204                           
 31205                           ; BSR set to: 0
 31206  00278A  2A5C               	incf	_n_bit,f,c
 31207                           
 31208                           ;swUart.c: 169: if( n_bit == 8 )
 31209  00278C  0E08               	movlw	8
 31210  00278E  185C               	xorwf	_n_bit,w,c
 31211  002790  A4D8               	btfss	status,2,c
 31212  002792  D002               	goto	i2l1152
 31213                           
 31214                           ;swUart.c: 170: {
 31215                           ;swUart.c: 171: status = STOP_UA;
 31216  002794  0E03               	movlw	3
 31217  002796  6E59               	movwf	_status,c
 31218  002798                     i2l1152:
 31219                           
 31220                           ;swUart.c: 172: }
 31221                           ;swUart.c: 173: reloadTimer(110);
 31222  002798  0E6E               	movlw	110
 31223  00279A  EC12  F02E         	call	_reloadTimer
 31224                           
 31225                           ;swUart.c: 174: break;
 31226  00279E  D047               	goto	i2l1148
 31227  0027A0                     
 31228                           ;swUart.c: 176: PORTAbits.RA7 = !PORTAbits.RA7;
 31229  0027A0  BE80               	btfsc	3968,7,c	;volatile
 31230  0027A2  D003               	goto	i2u1050_40
 31231  0027A4  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31232  0027A6  2A2C               	incf	??_InterruptTimerUART& (0+255),f,c
 31233  0027A8  D001               	goto	i2u1051_48
 31234  0027AA                     i2u1050_40:
 31235  0027AA  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31236  0027AC                     i2u1051_48:
 31237  0027AC  322C               	rrcf	??_InterruptTimerUART,f,c
 31238  0027AE  322C               	rrcf	??_InterruptTimerUART,f,c
 31239  0027B0  5080               	movf	3968,w,c	;volatile
 31240  0027B2  182C               	xorwf	??_InterruptTimerUART,w,c
 31241  0027B4  0B7F               	andlw	-129
 31242  0027B6  182C               	xorwf	??_InterruptTimerUART,w,c
 31243  0027B8  6E80               	movwf	3968,c	;volatile
 31244                           
 31245                           ;swUart.c: 179: if( PORTBbits.RB7 == 0 )
 31246  0027BA  5081               	movf	3969,w,c	;volatile
 31247                           
 31248                           ;swUart.c: 183: status = STOP_UA;
 31249                           
 31250                           ;swUart.c: 181: else
 31251                           ;swUart.c: 182: {}
 31252                           
 31253                           ;swUart.c: 180: {}
 31254  0027BC  0E03               	movlw	3
 31255  0027BE  6E59               	movwf	_status,c
 31256                           
 31257                           ;swUart.c: 184: reloadTimer(110);
 31258  0027C0  0E6E               	movlw	110
 31259  0027C2  EC12  F02E         	call	_reloadTimer
 31260                           
 31261                           ;swUart.c: 185: break;
 31262  0027C6  D033               	goto	i2l1148
 31263  0027C8                     
 31264                           ;swUart.c: 187: PORTAbits.RA7 = !PORTAbits.RA7;
 31265  0027C8  BE80               	btfsc	3968,7,c	;volatile
 31266  0027CA  D003               	goto	i2u1052_40
 31267  0027CC  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31268  0027CE  2A2C               	incf	??_InterruptTimerUART& (0+255),f,c
 31269  0027D0  D001               	goto	i2u1053_48
 31270  0027D2                     i2u1052_40:
 31271  0027D2  6A2C               	clrf	??_InterruptTimerUART& (0+255),c
 31272  0027D4                     i2u1053_48:
 31273  0027D4  322C               	rrcf	??_InterruptTimerUART,f,c
 31274  0027D6  322C               	rrcf	??_InterruptTimerUART,f,c
 31275  0027D8  5080               	movf	3968,w,c	;volatile
 31276  0027DA  182C               	xorwf	??_InterruptTimerUART,w,c
 31277  0027DC  0B7F               	andlw	-129
 31278  0027DE  182C               	xorwf	??_InterruptTimerUART,w,c
 31279  0027E0  6E80               	movwf	3968,c	;volatile
 31280                           
 31281                           ;swUart.c: 188: buffer_rx[countRX] = rx_data;
 31282  0027E2  5058               	movf	_countRX,w,c
 31283  0027E4  0D01               	mullw	1
 31284  0027E6  0E00               	movlw	low _buffer_rx
 31285  0027E8  24F3               	addwf	prodl,w,c
 31286  0027EA  6ED9               	movwf	fsr2l,c
 31287  0027EC  0E03               	movlw	high _buffer_rx
 31288  0027EE  20F4               	addwfc	prodh,w,c
 31289  0027F0  6EDA               	movwf	fsr2h,c
 31290  0027F2  C0E3  FFDF         	movff	_rx_data,indf2
 31291                           
 31292                           ;swUart.c: 189: countRX ++;
 31293  0027F6  2A58               	incf	_countRX,f,c
 31294                           
 31295                           ;swUart.c: 190: status = SILENT;
 31296  0027F8  0E00               	movlw	0
 31297  0027FA  6E59               	movwf	_status,c
 31298                           
 31299                           ;swUart.c: 191: reloadTimer(110);
 31300  0027FC  0E6E               	movlw	110
 31301  0027FE  EC12  F02E         	call	_reloadTimer
 31302                           
 31303                           ;swUart.c: 192: break;
 31304  002802  D015               	goto	i2l1148
 31305  002804                     
 31306                           ;swUart.c: 194: countRX = 0;
 31307  002804  0E00               	movlw	0
 31308  002806  6E58               	movwf	_countRX,c
 31309                           
 31310                           ;swUart.c: 195: status = SILENT;
 31311  002808  0E00               	movlw	0
 31312  00280A  6E59               	movwf	_status,c
 31313                           
 31314                           ;swUart.c: 196: countBitsSilent = 22;
 31315  00280C  0E16               	movlw	22
 31316  00280E  6E57               	movwf	_countBitsSilent,c
 31317                           
 31318                           ;swUart.c: 198: }
 31319                           
 31320                           ;swUart.c: 197: break;
 31321  002810  D00E               	goto	i2l1148
 31322  002812                     i2l1144:
 31323  002812  5059               	movf	_status,w,c
 31324                           
 31325                           ; Switch size 1, requested type "space"
 31326                           ; Number of cases is 4, Range of values is 0 to 3
 31327                           ; switch strategies available:
 31328                           ; Name         Instructions Cycles
 31329                           ; simple_byte           13     7 (average)
 31330                           ;	Chosen strategy is simple_byte
 31331  002814  0A00               	xorlw	0	; case 0
 31332  002816  B4D8               	btfsc	status,2,c
 31333  002818  D76F               	goto	i2l1145
 31334  00281A  0A01               	xorlw	1	; case 1
 31335  00281C  B4D8               	btfsc	status,2,c
 31336  00281E  D790               	goto	i2l1149
 31337  002820  0A03               	xorlw	3	; case 2
 31338  002822  B4D8               	btfsc	status,2,c
 31339  002824  D7BD               	goto	i2l1153
 31340  002826  0A01               	xorlw	1	; case 3
 31341  002828  B4D8               	btfsc	status,2,c
 31342  00282A  D7CE               	goto	i2l1156
 31343  00282C  D7EB               	goto	i2l1157
 31344  00282E                     i2l1148:
 31345                           
 31346                           ;swUart.c: 199: clearInterruptTimerUART();
 31347  00282E  EC37  F02E         	call	_clearInterruptTimerUART	;wreg free
 31348  002832  0012               	return		;funcret
 31349  002834                     __end_of_InterruptTimerUART:
 31350                           	opt stack 0
 31351                           tosu	equ	0xFFF
 31352                           tosh	equ	0xFFE
 31353                           tosl	equ	0xFFD
 31354                           pclatu	equ	0xFFB
 31355                           pclath	equ	0xFFA
 31356                           tblptru	equ	0xFF8
 31357                           tblptrh	equ	0xFF7
 31358                           tblptrl	equ	0xFF6
 31359                           tablat	equ	0xFF5
 31360                           prodh	equ	0xFF4
 31361                           prodl	equ	0xFF3
 31362                           intcon	equ	0xFF2
 31363                           intcon2	equ	0xFF1
 31364                           intcon3	equ	0xFF0
 31365                           indf0	equ	0xFEF
 31366                           postinc0	equ	0xFEE
 31367                           fsr0h	equ	0xFEA
 31368                           fsr0l	equ	0xFE9
 31369                           wreg	equ	0xFE8
 31370                           indf1	equ	0xFE7
 31371                           postdec1	equ	0xFE5
 31372                           fsr1h	equ	0xFE2
 31373                           fsr1l	equ	0xFE1
 31374                           indf2	equ	0xFDF
 31375                           postinc2	equ	0xFDE
 31376                           postdec2	equ	0xFDD
 31377                           plusw2	equ	0xFDB
 31378                           fsr2h	equ	0xFDA
 31379                           fsr2l	equ	0xFD9
 31380                           status	equ	0xFD8
 31381                           
 31382 ;; *************** function _printfOled *****************
 31383 ;; Defined at:
 31384 ;;		line 237 in file "../Includes/Drivers/swUart.c"
 31385 ;; Parameters:    Size  Location     Type
 31386 ;;  buffer_rx       2   17[COMRAM] PTR char 
 31387 ;;		 -> buffer_rx(128), 
 31388 ;;  numBytes        1   19[COMRAM] unsigned char 
 31389 ;; Auto vars:     Size  Location     Type
 31390 ;;  tempBuffer     16   25[COMRAM] unsigned char [16]
 31391 ;;  i               1   42[COMRAM] unsigned char 
 31392 ;;  j               1   41[COMRAM] unsigned char 
 31393 ;; Return value:  Size  Location     Type
 31394 ;;                  1    wreg      void 
 31395 ;; Registers used:
 31396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31397 ;; Tracked objects:
 31398 ;;		On entry : 0/0
 31399 ;;		On exit  : 0/0
 31400 ;;		Unchanged: 0/0
 31401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31402 ;;      Params:         3       0       0       0       0       0       0       0       0
 31403 ;;      Locals:        18       0       0       0       0       0       0       0       0
 31404 ;;      Temps:          5       0       0       0       0       0       0       0       0
 31405 ;;      Totals:        26       0       0       0       0       0       0       0       0
 31406 ;;Total ram usage:       26 bytes
 31407 ;; Hardware stack levels used:    1
 31408 ;; Hardware stack levels required when called:    5
 31409 ;; This function calls:
 31410 ;;		i2_oled_clear
 31411 ;;		i2_oled_putString
 31412 ;; This function is called by:
 31413 ;;		_InterruptTimerUART
 31414 ;; This function uses a non-reentrant model
 31415 ;;
 31416                           
 31417                           	psect	text143
 31418  00409C                     __ptext143:
 31419                           	opt stack 0
 31420  00409C                     _printfOled:
 31421                           	opt stack 14
 31422                           
 31423                           ;swUart.c: 242: uint8_t tempBuffer[16],i,j;
 31424                           ;swUart.c: 243: oled_clear();
 31425                           
 31426                           ;incstack = 0
 31427  00409C  EC34  F02D         	call	i2_oled_clear	;wreg free
 31428                           
 31429                           ;swUart.c: 245: for(j=0;j<4;j++)
 31430  0040A0  0E00               	movlw	0
 31431  0040A2  6E2A               	movwf	printfOled@j,c
 31432  0040A4                     i2l11212:
 31433  0040A4  0E03               	movlw	3
 31434  0040A6  642A               	cpfsgt	printfOled@j,c
 31435  0040A8  D001               	goto	i2l1170
 31436  0040AA  0012               	return	
 31437  0040AC                     i2l1170:
 31438                           
 31439                           ;swUart.c: 246: {
 31440                           ;swUart.c: 247: for(i=0;i<16;i++)
 31441  0040AC  0E00               	movlw	0
 31442  0040AE  6E2B               	movwf	printfOled@i,c
 31443  0040B0                     i2l11218:
 31444  0040B0  0E0F               	movlw	15
 31445  0040B2  642B               	cpfsgt	printfOled@i,c
 31446  0040B4  D001               	goto	i2l1172
 31447  0040B6  D03F               	goto	i2u997_40
 31448  0040B8                     i2l1172:
 31449                           
 31450                           ;swUart.c: 248: {
 31451                           ;swUart.c: 249: if(numBytes > (i + j*16) )tempBuffer[i]= *(buffer_rx + i + j*16);
 31452  0040B8  5014               	movf	printfOled@numBytes,w,c
 31453  0040BA  6E15               	movwf	??_printfOled& (0+255),c
 31454  0040BC  6A16               	clrf	(??_printfOled+1)& (0+255),c
 31455  0040BE  502A               	movf	printfOled@j,w,c
 31456  0040C0  0D10               	mullw	16
 31457  0040C2  502B               	movf	printfOled@i,w,c
 31458  0040C4  6E17               	movwf	(??_printfOled+2)& (0+255),c
 31459  0040C6  6A18               	clrf	(??_printfOled+3)& (0+255),c
 31460  0040C8  50F3               	movf	prodl,w,c
 31461  0040CA  2617               	addwf	??_printfOled+2,f,c
 31462  0040CC  50F4               	movf	prodh,w,c
 31463  0040CE  2218               	addwfc	??_printfOled+3,f,c
 31464  0040D0  5015               	movf	??_printfOled,w,c
 31465  0040D2  5C17               	subwf	??_printfOled+2,w,c
 31466  0040D4  5018               	movf	??_printfOled+3,w,c
 31467  0040D6  0A80               	xorlw	128
 31468  0040D8  6E19               	movwf	(??_printfOled+4)& (0+255),c
 31469  0040DA  5016               	movf	??_printfOled+1,w,c
 31470  0040DC  0A80               	xorlw	128
 31471  0040DE  5819               	subwfb	(??_printfOled+4)& (0+255),w,c
 31472  0040E0  B0D8               	btfsc	status,0,c
 31473  0040E2  D01D               	goto	i2l1174
 31474  0040E4  502B               	movf	printfOled@i,w,c
 31475  0040E6  0D01               	mullw	1
 31476  0040E8  C012  F015         	movff	printfOled@buffer_rx,??_printfOled
 31477  0040EC  C013  F016         	movff	printfOled@buffer_rx+1,??_printfOled+1
 31478  0040F0  50F3               	movf	prodl,w,c
 31479  0040F2  2615               	addwf	??_printfOled,f,c
 31480  0040F4  50F4               	movf	prodh,w,c
 31481  0040F6  2216               	addwfc	??_printfOled+1,f,c
 31482  0040F8  502A               	movf	printfOled@j,w,c
 31483  0040FA  0D10               	mullw	16
 31484  0040FC  50F3               	movf	prodl,w,c
 31485  0040FE  2415               	addwf	??_printfOled,w,c
 31486  004100  6ED9               	movwf	fsr2l,c
 31487  004102  50F4               	movf	prodh,w,c
 31488  004104  2016               	addwfc	??_printfOled+1,w,c
 31489  004106  6EDA               	movwf	fsr2h,c
 31490  004108  502B               	movf	printfOled@i,w,c
 31491  00410A  0D01               	mullw	1
 31492  00410C  0E1A               	movlw	low printfOled@tempBuffer
 31493  00410E  24F3               	addwf	prodl,w,c
 31494  004110  6EE1               	movwf	fsr1l,c
 31495  004112  0E00               	movlw	high printfOled@tempBuffer
 31496  004114  20F4               	addwfc	prodh,w,c
 31497  004116  6EE2               	movwf	fsr1h,c
 31498  004118  CFDF FFE7          	movff	indf2,indf1
 31499  00411C  D00A               	goto	i2l1175
 31500  00411E                     i2l1174:
 31501                           
 31502                           ;swUart.c: 250: else tempBuffer[i] = 0;
 31503  00411E  502B               	movf	printfOled@i,w,c
 31504  004120  0D01               	mullw	1
 31505  004122  0E1A               	movlw	low printfOled@tempBuffer
 31506  004124  24F3               	addwf	prodl,w,c
 31507  004126  6ED9               	movwf	fsr2l,c
 31508  004128  0E00               	movlw	high printfOled@tempBuffer
 31509  00412A  20F4               	addwfc	prodh,w,c
 31510  00412C  6EDA               	movwf	fsr2h,c
 31511  00412E  0E00               	movlw	0
 31512  004130  6EDF               	movwf	indf2,c
 31513  004132                     i2l1175:
 31514  004132  2A2B               	incf	printfOled@i,f,c
 31515  004134  D7BD               	goto	i2l11218
 31516  004136                     i2u997_40:
 31517                           
 31518                           ;swUart.c: 251: }
 31519                           ;swUart.c: 252: oled_putString(tempBuffer,0,j);
 31520  004136  0E1A               	movlw	low printfOled@tempBuffer
 31521  004138  6E0D               	movwf	i2oled_putString@string,c
 31522  00413A  0E00               	movlw	high printfOled@tempBuffer
 31523  00413C  6E0E               	movwf	i2oled_putString@string+1,c
 31524  00413E  0E00               	movlw	0
 31525  004140  6E0F               	movwf	i2oled_putString@station_dot,c
 31526  004142  C02A  F010         	movff	printfOled@j,i2oled_putString@start_page
 31527  004146  ECA7  F027         	call	i2_oled_putString	;wreg free
 31528  00414A  2A2A               	incf	printfOled@j,f,c
 31529  00414C  D7AB               	goto	i2l11212
 31530  00414E                     __end_of_printfOled:
 31531                           	opt stack 0
 31532                           tosu	equ	0xFFF
 31533                           tosh	equ	0xFFE
 31534                           tosl	equ	0xFFD
 31535                           pclatu	equ	0xFFB
 31536                           pclath	equ	0xFFA
 31537                           tblptru	equ	0xFF8
 31538                           tblptrh	equ	0xFF7
 31539                           tblptrl	equ	0xFF6
 31540                           tablat	equ	0xFF5
 31541                           prodh	equ	0xFF4
 31542                           prodl	equ	0xFF3
 31543                           intcon	equ	0xFF2
 31544                           intcon2	equ	0xFF1
 31545                           intcon3	equ	0xFF0
 31546                           indf0	equ	0xFEF
 31547                           postinc0	equ	0xFEE
 31548                           fsr0h	equ	0xFEA
 31549                           fsr0l	equ	0xFE9
 31550                           wreg	equ	0xFE8
 31551                           indf1	equ	0xFE7
 31552                           postdec1	equ	0xFE5
 31553                           fsr1h	equ	0xFE2
 31554                           fsr1l	equ	0xFE1
 31555                           indf2	equ	0xFDF
 31556                           postinc2	equ	0xFDE
 31557                           postdec2	equ	0xFDD
 31558                           plusw2	equ	0xFDB
 31559                           fsr2h	equ	0xFDA
 31560                           fsr2l	equ	0xFD9
 31561                           status	equ	0xFD8
 31562                           
 31563 ;; *************** function i2_oled_putString *****************
 31564 ;; Defined at:
 31565 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;  string          2   12[COMRAM] PTR const unsigned char 
 31568 ;;		 -> printfOled@tempBuffer(16), oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), 
 31569 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 31570 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 31571 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 31572 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 31573 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 31574 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 31575 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 31576 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 31577 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 31578 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 31579 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 31580 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 31581 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 31582 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 31583 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 31584 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 31585 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 31586 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 31587 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 31588 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 31589 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 31590 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 31591 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 31592 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 31593 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 31594 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 31595 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 31596 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 31597 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 31598 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 31599 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 31600 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 31601 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 31602 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 31603 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 31604 ;;  station_dot     1   14[COMRAM] unsigned char 
 31605 ;;  start_page      1   15[COMRAM] unsigned char 
 31606 ;; Auto vars:     Size  Location     Type
 31607 ;;  oled_putStri    1   16[COMRAM] unsigned char 
 31608 ;; Return value:  Size  Location     Type
 31609 ;;                  1    wreg      void 
 31610 ;; Registers used:
 31611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31612 ;; Tracked objects:
 31613 ;;		On entry : 0/0
 31614 ;;		On exit  : 0/0
 31615 ;;		Unchanged: 0/0
 31616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31617 ;;      Params:         4       0       0       0       0       0       0       0       0
 31618 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31619 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31620 ;;      Totals:         5       0       0       0       0       0       0       0       0
 31621 ;;Total ram usage:        5 bytes
 31622 ;; Hardware stack levels used:    1
 31623 ;; Hardware stack levels required when called:    3
 31624 ;; This function calls:
 31625 ;;		i2_oled_putChar
 31626 ;; This function is called by:
 31627 ;;		_printfOled
 31628 ;; This function uses a non-reentrant model
 31629 ;;
 31630                           
 31631                           	psect	text144
 31632  004F4E                     __ptext144:
 31633                           	opt stack 0
 31634  004F4E                     i2_oled_putString:
 31635                           	opt stack 15
 31636                           
 31637                           ;SSD1306oLED.c: 333: uint8_t index;
 31638                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 31639                           
 31640                           ;incstack = 0
 31641  004F4E  C00F  F011         	movff	i2oled_putString@station_dot,i2oled_putString@index
 31642  004F52                     i2l10190:
 31643  004F52  0E0F               	movlw	15
 31644  004F54  6411               	cpfsgt	i2oled_putString@index,c
 31645  004F56  D001               	goto	i2l1045
 31646  004F58  0012               	return	
 31647  004F5A                     i2l1045:
 31648                           
 31649                           ;SSD1306oLED.c: 335: {
 31650                           ;SSD1306oLED.c: 336: if (*string != 0)
 31651  004F5A  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 31652  004F5E  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 31653  004F62  6AF8               	clrf	tblptru,c
 31654  004F64  0E07               	movlw	(high __ramtop+-1)
 31655  004F66  64F7               	cpfsgt	tblptrh,c
 31656  004F68  D003               	bra	i2u880_47
 31657  004F6A  0008               	tblrd		*
 31658  004F6C  50F5               	movf	tablat,w,c
 31659  004F6E  D005               	bra	i2u880_40
 31660  004F70                     i2u880_47:
 31661  004F70  CFF6 FFE9          	movff	tblptrl,fsr0l
 31662  004F74  CFF7 FFEA          	movff	tblptrh,fsr0h
 31663  004F78  50EF               	movf	indf0,w,c
 31664  004F7A                     i2u880_40:
 31665  004F7A  0900               	iorlw	0
 31666  004F7C  B4D8               	btfsc	status,2,c
 31667  004F7E  0012               	return	
 31668                           
 31669                           ;SSD1306oLED.c: 337: {
 31670                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 31671  004F80  C011  F003         	movff	i2oled_putString@index,i2oled_putChar@station_dot
 31672  004F84  C010  F004         	movff	i2oled_putString@start_page,i2oled_putChar@start_page
 31673  004F88  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 31674  004F8C  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 31675  004F90  6AF8               	clrf	tblptru,c
 31676  004F92  0E07               	movlw	(high __ramtop+-1)
 31677  004F94  64F7               	cpfsgt	tblptrh,c
 31678  004F96  D003               	bra	i2u882_47
 31679  004F98  0008               	tblrd		*
 31680  004F9A  50F5               	movf	tablat,w,c
 31681  004F9C  D005               	bra	i2u882_40
 31682  004F9E                     i2u882_47:
 31683  004F9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 31684  004FA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 31685  004FA6  50EF               	movf	indf0,w,c
 31686  004FA8                     i2u882_40:
 31687  004FA8  ECBC  F025         	call	i2_oled_putChar
 31688                           
 31689                           ;SSD1306oLED.c: 339: *string++;
 31690  004FAC  4A0D               	infsnz	i2oled_putString@string,f,c
 31691  004FAE  2A0E               	incf	i2oled_putString@string+1,f,c
 31692                           
 31693                           ;SSD1306oLED.c: 341: else
 31694                           ;SSD1306oLED.c: 342: {
 31695                           ;SSD1306oLED.c: 343: break;
 31696                           
 31697                           ;SSD1306oLED.c: 340: }
 31698  004FB0  2A11               	incf	i2oled_putString@index,f,c
 31699  004FB2  D7CF               	goto	i2l10190
 31700  004FB4                     __end_ofi2_oled_putString:
 31701                           	opt stack 0
 31702                           tosu	equ	0xFFF
 31703                           tosh	equ	0xFFE
 31704                           tosl	equ	0xFFD
 31705                           pclatu	equ	0xFFB
 31706                           pclath	equ	0xFFA
 31707                           tblptru	equ	0xFF8
 31708                           tblptrh	equ	0xFF7
 31709                           tblptrl	equ	0xFF6
 31710                           tablat	equ	0xFF5
 31711                           prodh	equ	0xFF4
 31712                           prodl	equ	0xFF3
 31713                           intcon	equ	0xFF2
 31714                           intcon2	equ	0xFF1
 31715                           intcon3	equ	0xFF0
 31716                           indf0	equ	0xFEF
 31717                           postinc0	equ	0xFEE
 31718                           fsr0h	equ	0xFEA
 31719                           fsr0l	equ	0xFE9
 31720                           wreg	equ	0xFE8
 31721                           indf1	equ	0xFE7
 31722                           postdec1	equ	0xFE5
 31723                           fsr1h	equ	0xFE2
 31724                           fsr1l	equ	0xFE1
 31725                           indf2	equ	0xFDF
 31726                           postinc2	equ	0xFDE
 31727                           postdec2	equ	0xFDD
 31728                           plusw2	equ	0xFDB
 31729                           fsr2h	equ	0xFDA
 31730                           fsr2l	equ	0xFD9
 31731                           status	equ	0xFD8
 31732                           
 31733 ;; *************** function i2_oled_clear *****************
 31734 ;; Defined at:
 31735 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 31736 ;; Parameters:    Size  Location     Type
 31737 ;;		None
 31738 ;; Auto vars:     Size  Location     Type
 31739 ;;		None
 31740 ;; Return value:  Size  Location     Type
 31741 ;;                  1    wreg      void 
 31742 ;; Registers used:
 31743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31744 ;; Tracked objects:
 31745 ;;		On entry : 0/0
 31746 ;;		On exit  : 0/0
 31747 ;;		Unchanged: 0/0
 31748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31749 ;;      Params:         0       0       0       0       0       0       0       0       0
 31750 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31751 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31752 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31753 ;;Total ram usage:        0 bytes
 31754 ;; Hardware stack levels used:    1
 31755 ;; Hardware stack levels required when called:    4
 31756 ;; This function calls:
 31757 ;;		i2_oled_clearRow
 31758 ;; This function is called by:
 31759 ;;		_InterruptTimerUART
 31760 ;;		_printfOled
 31761 ;; This function uses a non-reentrant model
 31762 ;;
 31763                           
 31764                           	psect	text145
 31765  005A68                     __ptext145:
 31766                           	opt stack 0
 31767  005A68                     i2_oled_clear:
 31768                           	opt stack 15
 31769                           
 31770                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 31771                           
 31772                           ;incstack = 0
 31773  005A68  0E00               	movlw	0
 31774  005A6A  ECDE  F02C         	call	i2_oled_clearRow
 31775                           
 31776                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 31777  005A6E  0E01               	movlw	1
 31778  005A70  ECDE  F02C         	call	i2_oled_clearRow
 31779                           
 31780                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 31781  005A74  0E02               	movlw	2
 31782  005A76  ECDE  F02C         	call	i2_oled_clearRow
 31783                           
 31784                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 31785  005A7A  0E03               	movlw	3
 31786  005A7C  ECDE  F02C         	call	i2_oled_clearRow
 31787  005A80  0012               	return		;funcret
 31788  005A82                     __end_ofi2_oled_clear:
 31789                           	opt stack 0
 31790                           tosu	equ	0xFFF
 31791                           tosh	equ	0xFFE
 31792                           tosl	equ	0xFFD
 31793                           pclatu	equ	0xFFB
 31794                           pclath	equ	0xFFA
 31795                           tblptru	equ	0xFF8
 31796                           tblptrh	equ	0xFF7
 31797                           tblptrl	equ	0xFF6
 31798                           tablat	equ	0xFF5
 31799                           prodh	equ	0xFF4
 31800                           prodl	equ	0xFF3
 31801                           intcon	equ	0xFF2
 31802                           intcon2	equ	0xFF1
 31803                           intcon3	equ	0xFF0
 31804                           indf0	equ	0xFEF
 31805                           postinc0	equ	0xFEE
 31806                           fsr0h	equ	0xFEA
 31807                           fsr0l	equ	0xFE9
 31808                           wreg	equ	0xFE8
 31809                           indf1	equ	0xFE7
 31810                           postdec1	equ	0xFE5
 31811                           fsr1h	equ	0xFE2
 31812                           fsr1l	equ	0xFE1
 31813                           indf2	equ	0xFDF
 31814                           postinc2	equ	0xFDE
 31815                           postdec2	equ	0xFDD
 31816                           plusw2	equ	0xFDB
 31817                           fsr2h	equ	0xFDA
 31818                           fsr2l	equ	0xFD9
 31819                           status	equ	0xFD8
 31820                           
 31821 ;; *************** function i2_oled_clearRow *****************
 31822 ;; Defined at:
 31823 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 31824 ;; Parameters:    Size  Location     Type
 31825 ;;  page            1    wreg     unsigned char 
 31826 ;; Auto vars:     Size  Location     Type
 31827 ;;  page            1   12[COMRAM] unsigned char 
 31828 ;;  oled_clearRo    1   13[COMRAM] unsigned char 
 31829 ;; Return value:  Size  Location     Type
 31830 ;;                  1    wreg      void 
 31831 ;; Registers used:
 31832 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31833 ;; Tracked objects:
 31834 ;;		On entry : 0/0
 31835 ;;		On exit  : 0/0
 31836 ;;		Unchanged: 0/0
 31837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31838 ;;      Params:         0       0       0       0       0       0       0       0       0
 31839 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31841 ;;      Totals:         2       0       0       0       0       0       0       0       0
 31842 ;;Total ram usage:        2 bytes
 31843 ;; Hardware stack levels used:    1
 31844 ;; Hardware stack levels required when called:    3
 31845 ;; This function calls:
 31846 ;;		i2_oled_putChar
 31847 ;; This function is called by:
 31848 ;;		i2_oled_clear
 31849 ;; This function uses a non-reentrant model
 31850 ;;
 31851                           
 31852                           	psect	text146
 31853  0059BC                     __ptext146:
 31854                           	opt stack 0
 31855  0059BC                     i2_oled_clearRow:
 31856                           	opt stack 15
 31857                           
 31858                           ;incstack = 0
 31859                           ;i2oled_clearRow@page stored from wreg
 31860  0059BC  6E0D               	movwf	i2oled_clearRow@page,c
 31861                           
 31862                           ;SSD1306oLED.c: 358: uint8_t index;
 31863                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 31864  0059BE  0E00               	movlw	0
 31865  0059C0  6E0E               	movwf	i2oled_clearRow@index,c
 31866  0059C2                     i2l9472:
 31867  0059C2  0E0F               	movlw	15
 31868  0059C4  640E               	cpfsgt	i2oled_clearRow@index,c
 31869  0059C6  D001               	goto	i2l1055
 31870  0059C8  0012               	return	
 31871  0059CA                     i2l1055:
 31872                           
 31873                           ;SSD1306oLED.c: 361: {
 31874                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 31875  0059CA  C00E  F003         	movff	i2oled_clearRow@index,i2oled_putChar@station_dot
 31876  0059CE  C00D  F004         	movff	i2oled_clearRow@page,i2oled_putChar@start_page
 31877  0059D2  0E20               	movlw	32
 31878  0059D4  ECBC  F025         	call	i2_oled_putChar
 31879  0059D8  2A0E               	incf	i2oled_clearRow@index,f,c
 31880  0059DA  D7F3               	goto	i2l9472
 31881  0059DC                     __end_ofi2_oled_clearRow:
 31882                           	opt stack 0
 31883                           tosu	equ	0xFFF
 31884                           tosh	equ	0xFFE
 31885                           tosl	equ	0xFFD
 31886                           pclatu	equ	0xFFB
 31887                           pclath	equ	0xFFA
 31888                           tblptru	equ	0xFF8
 31889                           tblptrh	equ	0xFF7
 31890                           tblptrl	equ	0xFF6
 31891                           tablat	equ	0xFF5
 31892                           prodh	equ	0xFF4
 31893                           prodl	equ	0xFF3
 31894                           intcon	equ	0xFF2
 31895                           intcon2	equ	0xFF1
 31896                           intcon3	equ	0xFF0
 31897                           indf0	equ	0xFEF
 31898                           postinc0	equ	0xFEE
 31899                           fsr0h	equ	0xFEA
 31900                           fsr0l	equ	0xFE9
 31901                           wreg	equ	0xFE8
 31902                           indf1	equ	0xFE7
 31903                           postdec1	equ	0xFE5
 31904                           fsr1h	equ	0xFE2
 31905                           fsr1l	equ	0xFE1
 31906                           indf2	equ	0xFDF
 31907                           postinc2	equ	0xFDE
 31908                           postdec2	equ	0xFDD
 31909                           plusw2	equ	0xFDB
 31910                           fsr2h	equ	0xFDA
 31911                           fsr2l	equ	0xFD9
 31912                           status	equ	0xFD8
 31913                           
 31914 ;; *************** function i2_oled_putChar *****************
 31915 ;; Defined at:
 31916 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 31917 ;; Parameters:    Size  Location     Type
 31918 ;;  k               1    wreg     unsigned char 
 31919 ;;  station_dot     1    2[COMRAM] unsigned char 
 31920 ;;  start_page      1    3[COMRAM] unsigned char 
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;  k               1   10[COMRAM] unsigned char 
 31923 ;;  oled_putChar    1   11[COMRAM] unsigned char 
 31924 ;; Return value:  Size  Location     Type
 31925 ;;                  1    wreg      void 
 31926 ;; Registers used:
 31927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31928 ;; Tracked objects:
 31929 ;;		On entry : 0/0
 31930 ;;		On exit  : 0/0
 31931 ;;		Unchanged: 0/0
 31932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31933 ;;      Params:         2       0       0       0       0       0       0       0       0
 31934 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31935 ;;      Temps:          6       0       0       0       0       0       0       0       0
 31936 ;;      Totals:        10       0       0       0       0       0       0       0       0
 31937 ;;Total ram usage:       10 bytes
 31938 ;; Hardware stack levels used:    1
 31939 ;; Hardware stack levels required when called:    2
 31940 ;; This function calls:
 31941 ;;		i2_Set_Column_Address
 31942 ;;		i2_Set_Page_Address
 31943 ;;		i2_oled_writeData
 31944 ;; This function is called by:
 31945 ;;		i2_oled_putString
 31946 ;;		i2_oled_clearRow
 31947 ;; This function uses a non-reentrant model
 31948 ;;
 31949                           
 31950                           	psect	text147
 31951  004B78                     __ptext147:
 31952                           	opt stack 0
 31953  004B78                     i2_oled_putChar:
 31954                           	opt stack 15
 31955                           
 31956                           ;incstack = 0
 31957                           ;i2oled_putChar@k stored from wreg
 31958  004B78  6E0B               	movwf	i2oled_putChar@k,c
 31959                           
 31960                           ;SSD1306oLED.c: 320: uint8_t index;
 31961                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 31962  004B7A  5004               	movf	i2oled_putChar@start_page,w,c
 31963  004B7C  ECDD  F02D         	call	i2_Set_Page_Address
 31964                           
 31965                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 31966  004B80  5003               	movf	i2oled_putChar@station_dot,w,c
 31967  004B82  0D08               	mullw	8
 31968  004B84  50F3               	movf	prodl,w,c
 31969  004B86  0F04               	addlw	4
 31970  004B88  EC6D  F02D         	call	i2_Set_Column_Address
 31971                           
 31972                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 31973  004B8C  0E00               	movlw	0
 31974  004B8E  6E0C               	movwf	i2oled_putChar@index,c
 31975  004B90                     i2l8530:
 31976  004B90  0E07               	movlw	7
 31977  004B92  640C               	cpfsgt	i2oled_putChar@index,c
 31978  004B94  D001               	goto	i2l1040
 31979  004B96  0012               	return	
 31980  004B98                     i2l1040:
 31981                           
 31982                           ;SSD1306oLED.c: 326: {
 31983                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 31984  004B98  500C               	movf	i2oled_putChar@index,w,c
 31985  004B9A  0D01               	mullw	1
 31986  004B9C  0E00               	movlw	0
 31987  004B9E  6E05               	movwf	??i2_oled_putChar& (0+255),c
 31988  004BA0  0EFF               	movlw	255
 31989  004BA2  6E06               	movwf	(??i2_oled_putChar+1)& (0+255),c
 31990  004BA4  500B               	movf	i2oled_putChar@k,w,c
 31991  004BA6  6E07               	movwf	(??i2_oled_putChar+2)& (0+255),c
 31992  004BA8  6A08               	clrf	(??i2_oled_putChar+3)& (0+255),c
 31993  004BAA  90D8               	bcf	status,0,c
 31994  004BAC  3607               	rlcf	??i2_oled_putChar+2,f,c
 31995  004BAE  3608               	rlcf	??i2_oled_putChar+3,f,c
 31996  004BB0  90D8               	bcf	status,0,c
 31997  004BB2  3607               	rlcf	??i2_oled_putChar+2,f,c
 31998  004BB4  3608               	rlcf	??i2_oled_putChar+3,f,c
 31999  004BB6  90D8               	bcf	status,0,c
 32000  004BB8  3607               	rlcf	??i2_oled_putChar+2,f,c
 32001  004BBA  3608               	rlcf	??i2_oled_putChar+3,f,c
 32002  004BBC  5005               	movf	??i2_oled_putChar,w,c
 32003  004BBE  2607               	addwf	??i2_oled_putChar+2,f,c
 32004  004BC0  5006               	movf	??i2_oled_putChar+1,w,c
 32005  004BC2  2208               	addwfc	??i2_oled_putChar+3,f,c
 32006  004BC4  C1E8  F009         	movff	_selectedFont,??i2_oled_putChar+4
 32007  004BC8  C1E9  F00A         	movff	_selectedFont+1,??i2_oled_putChar+5
 32008  004BCC  5007               	movf	??i2_oled_putChar+2,w,c
 32009  004BCE  2609               	addwf	??i2_oled_putChar+4,f,c
 32010  004BD0  5008               	movf	??i2_oled_putChar+3,w,c
 32011  004BD2  220A               	addwfc	??i2_oled_putChar+5,f,c
 32012  004BD4  50F3               	movf	prodl,w,c
 32013  004BD6  2609               	addwf	??i2_oled_putChar+4,f,c
 32014  004BD8  50F4               	movf	prodh,w,c
 32015  004BDA  220A               	addwfc	??i2_oled_putChar+5,f,c
 32016  004BDC  C009  FFF6         	movff	??i2_oled_putChar+4,tblptrl
 32017  004BE0  C00A  FFF7         	movff	??i2_oled_putChar+5,tblptrh
 32018  004BE4                     	if	0	;tblptru may be non-zero
 32019  004BE4                     	endif
 32020  004BE4                     	if	0	;tblptru may be non-zero
 32021  004BE4                     	endif
 32022  004BE4  0008               	tblrd		*
 32023  004BE6  50F5               	movf	tablat,w,c
 32024  004BE8  ECA0  F02D         	call	i2_oled_writeData
 32025  004BEC  2A0C               	incf	i2oled_putChar@index,f,c
 32026  004BEE  D7D0               	goto	i2l8530
 32027  004BF0                     __end_ofi2_oled_putChar:
 32028                           	opt stack 0
 32029                           tosu	equ	0xFFF
 32030                           tosh	equ	0xFFE
 32031                           tosl	equ	0xFFD
 32032                           pclatu	equ	0xFFB
 32033                           pclath	equ	0xFFA
 32034                           tblptru	equ	0xFF8
 32035                           tblptrh	equ	0xFF7
 32036                           tblptrl	equ	0xFF6
 32037                           tablat	equ	0xFF5
 32038                           prodh	equ	0xFF4
 32039                           prodl	equ	0xFF3
 32040                           intcon	equ	0xFF2
 32041                           intcon2	equ	0xFF1
 32042                           intcon3	equ	0xFF0
 32043                           indf0	equ	0xFEF
 32044                           postinc0	equ	0xFEE
 32045                           fsr0h	equ	0xFEA
 32046                           fsr0l	equ	0xFE9
 32047                           wreg	equ	0xFE8
 32048                           indf1	equ	0xFE7
 32049                           postdec1	equ	0xFE5
 32050                           fsr1h	equ	0xFE2
 32051                           fsr1l	equ	0xFE1
 32052                           indf2	equ	0xFDF
 32053                           postinc2	equ	0xFDE
 32054                           postdec2	equ	0xFDD
 32055                           plusw2	equ	0xFDB
 32056                           fsr2h	equ	0xFDA
 32057                           fsr2l	equ	0xFD9
 32058                           status	equ	0xFD8
 32059                           
 32060 ;; *************** function i2_oled_writeData *****************
 32061 ;; Defined at:
 32062 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 32063 ;; Parameters:    Size  Location     Type
 32064 ;;  data            1    wreg     unsigned char 
 32065 ;; Auto vars:     Size  Location     Type
 32066 ;;  data            1    0[COMRAM] unsigned char 
 32067 ;; Return value:  Size  Location     Type
 32068 ;;                  1    wreg      void 
 32069 ;; Registers used:
 32070 ;;		wreg
 32071 ;; Tracked objects:
 32072 ;;		On entry : 0/0
 32073 ;;		On exit  : 0/0
 32074 ;;		Unchanged: 0/0
 32075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32076 ;;      Params:         0       0       0       0       0       0       0       0       0
 32077 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32079 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32080 ;;Total ram usage:        1 bytes
 32081 ;; Hardware stack levels used:    1
 32082 ;; This function calls:
 32083 ;;		Nothing
 32084 ;; This function is called by:
 32085 ;;		i2_oled_putChar
 32086 ;; This function uses a non-reentrant model
 32087 ;;
 32088                           
 32089                           	psect	text148
 32090  005B40                     __ptext148:
 32091                           	opt stack 0
 32092  005B40                     i2_oled_writeData:
 32093                           	opt stack 16
 32094                           
 32095                           ;incstack = 0
 32096                           ;i2oled_writeData@data stored from wreg
 32097  005B40  6E01               	movwf	i2oled_writeData@data,c
 32098                           
 32099                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 32100  005B42  988A               	bcf	3978,4,c	;volatile
 32101                           
 32102                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 32103  005B44  808B               	bsf	3979,0,c	;volatile
 32104                           
 32105                           ;SSD1306oLED.c: 446: LATD=data;
 32106  005B46  C001  FF8C         	movff	i2oled_writeData@data,3980	;volatile
 32107                           
 32108                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 32109  005B4A  928B               	bcf	3979,1,c	;volatile
 32110                           
 32111                           ;SSD1306oLED.c: 448: __nop();
 32112  005B4C  F000               	nop	
 32113                           
 32114                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 32115  005B4E  828B               	bsf	3979,1,c	;volatile
 32116                           
 32117                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 32118  005B50  888A               	bsf	3978,4,c	;volatile
 32119  005B52  0012               	return	
 32120  005B54                     __end_ofi2_oled_writeData:
 32121                           	opt stack 0
 32122                           tosu	equ	0xFFF
 32123                           tosh	equ	0xFFE
 32124                           tosl	equ	0xFFD
 32125                           pclatu	equ	0xFFB
 32126                           pclath	equ	0xFFA
 32127                           tblptru	equ	0xFF8
 32128                           tblptrh	equ	0xFF7
 32129                           tblptrl	equ	0xFF6
 32130                           tablat	equ	0xFF5
 32131                           prodh	equ	0xFF4
 32132                           prodl	equ	0xFF3
 32133                           intcon	equ	0xFF2
 32134                           intcon2	equ	0xFF1
 32135                           intcon3	equ	0xFF0
 32136                           indf0	equ	0xFEF
 32137                           postinc0	equ	0xFEE
 32138                           fsr0h	equ	0xFEA
 32139                           fsr0l	equ	0xFE9
 32140                           wreg	equ	0xFE8
 32141                           indf1	equ	0xFE7
 32142                           postdec1	equ	0xFE5
 32143                           fsr1h	equ	0xFE2
 32144                           fsr1l	equ	0xFE1
 32145                           indf2	equ	0xFDF
 32146                           postinc2	equ	0xFDE
 32147                           postdec2	equ	0xFDD
 32148                           plusw2	equ	0xFDB
 32149                           fsr2h	equ	0xFDA
 32150                           fsr2l	equ	0xFD9
 32151                           status	equ	0xFD8
 32152                           
 32153 ;; *************** function i2_Set_Page_Address *****************
 32154 ;; Defined at:
 32155 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 32156 ;; Parameters:    Size  Location     Type
 32157 ;;  address         1    wreg     unsigned char 
 32158 ;; Auto vars:     Size  Location     Type
 32159 ;;  address         1    1[COMRAM] unsigned char 
 32160 ;; Return value:  Size  Location     Type
 32161 ;;                  1    wreg      void 
 32162 ;; Registers used:
 32163 ;;		wreg, status,2, status,0, cstack
 32164 ;; Tracked objects:
 32165 ;;		On entry : 0/0
 32166 ;;		On exit  : 0/0
 32167 ;;		Unchanged: 0/0
 32168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32169 ;;      Params:         0       0       0       0       0       0       0       0       0
 32170 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32171 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32172 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32173 ;;Total ram usage:        1 bytes
 32174 ;; Hardware stack levels used:    1
 32175 ;; Hardware stack levels required when called:    1
 32176 ;; This function calls:
 32177 ;;		i2_oled_writeCommand
 32178 ;; This function is called by:
 32179 ;;		i2_oled_putChar
 32180 ;; This function uses a non-reentrant model
 32181 ;;
 32182                           
 32183                           	psect	text149
 32184  005BBA                     __ptext149:
 32185                           	opt stack 0
 32186  005BBA                     i2_Set_Page_Address:
 32187                           	opt stack 15
 32188                           
 32189                           ;incstack = 0
 32190                           ;i2Set_Page_Address@address stored from wreg
 32191  005BBA  6E02               	movwf	i2Set_Page_Address@address,c
 32192                           
 32193                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 32194  005BBC  5002               	movf	i2Set_Page_Address@address,w,c
 32195  005BBE  09B0               	iorlw	176
 32196  005BC0  6E02               	movwf	i2Set_Page_Address@address,c
 32197                           
 32198                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 32199  005BC2  5002               	movf	i2Set_Page_Address@address,w,c
 32200  005BC4  ECAA  F02D         	call	i2_oled_writeCommand
 32201  005BC8  0012               	return	
 32202  005BCA                     __end_ofi2_Set_Page_Address:
 32203                           	opt stack 0
 32204                           tosu	equ	0xFFF
 32205                           tosh	equ	0xFFE
 32206                           tosl	equ	0xFFD
 32207                           pclatu	equ	0xFFB
 32208                           pclath	equ	0xFFA
 32209                           tblptru	equ	0xFF8
 32210                           tblptrh	equ	0xFF7
 32211                           tblptrl	equ	0xFF6
 32212                           tablat	equ	0xFF5
 32213                           prodh	equ	0xFF4
 32214                           prodl	equ	0xFF3
 32215                           intcon	equ	0xFF2
 32216                           intcon2	equ	0xFF1
 32217                           intcon3	equ	0xFF0
 32218                           indf0	equ	0xFEF
 32219                           postinc0	equ	0xFEE
 32220                           fsr0h	equ	0xFEA
 32221                           fsr0l	equ	0xFE9
 32222                           wreg	equ	0xFE8
 32223                           indf1	equ	0xFE7
 32224                           postdec1	equ	0xFE5
 32225                           fsr1h	equ	0xFE2
 32226                           fsr1l	equ	0xFE1
 32227                           indf2	equ	0xFDF
 32228                           postinc2	equ	0xFDE
 32229                           postdec2	equ	0xFDD
 32230                           plusw2	equ	0xFDB
 32231                           fsr2h	equ	0xFDA
 32232                           fsr2l	equ	0xFD9
 32233                           status	equ	0xFD8
 32234                           
 32235 ;; *************** function i2_Set_Column_Address *****************
 32236 ;; Defined at:
 32237 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 32238 ;; Parameters:    Size  Location     Type
 32239 ;;  address         1    wreg     unsigned char 
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;  address         1    1[COMRAM] unsigned char 
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1    wreg      void 
 32244 ;; Registers used:
 32245 ;;		wreg, status,2, status,0, cstack
 32246 ;; Tracked objects:
 32247 ;;		On entry : 0/0
 32248 ;;		On exit  : 0/0
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32251 ;;      Params:         0       0       0       0       0       0       0       0       0
 32252 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32254 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32255 ;;Total ram usage:        1 bytes
 32256 ;; Hardware stack levels used:    1
 32257 ;; Hardware stack levels required when called:    1
 32258 ;; This function calls:
 32259 ;;		i2_oled_writeCommand
 32260 ;; This function is called by:
 32261 ;;		i2_oled_putChar
 32262 ;; This function uses a non-reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text150
 32266  005ADA                     __ptext150:
 32267                           	opt stack 0
 32268  005ADA                     i2_Set_Column_Address:
 32269                           	opt stack 15
 32270                           
 32271                           ;incstack = 0
 32272                           ;i2Set_Column_Address@address stored from wreg
 32273  005ADA  6E02               	movwf	i2Set_Column_Address@address,c
 32274                           
 32275                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 32276  005ADC  3802               	swapf	i2Set_Column_Address@address,w,c
 32277  005ADE  0B0F               	andlw	15
 32278  005AE0  0910               	iorlw	16
 32279  005AE2  ECAA  F02D         	call	i2_oled_writeCommand
 32280                           
 32281                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 32282  005AE6  5002               	movf	i2Set_Column_Address@address,w,c
 32283  005AE8  0B0F               	andlw	15
 32284  005AEA  ECAA  F02D         	call	i2_oled_writeCommand
 32285  005AEE  0012               	return	
 32286  005AF0                     __end_ofi2_Set_Column_Address:
 32287                           	opt stack 0
 32288                           tosu	equ	0xFFF
 32289                           tosh	equ	0xFFE
 32290                           tosl	equ	0xFFD
 32291                           pclatu	equ	0xFFB
 32292                           pclath	equ	0xFFA
 32293                           tblptru	equ	0xFF8
 32294                           tblptrh	equ	0xFF7
 32295                           tblptrl	equ	0xFF6
 32296                           tablat	equ	0xFF5
 32297                           prodh	equ	0xFF4
 32298                           prodl	equ	0xFF3
 32299                           intcon	equ	0xFF2
 32300                           intcon2	equ	0xFF1
 32301                           intcon3	equ	0xFF0
 32302                           indf0	equ	0xFEF
 32303                           postinc0	equ	0xFEE
 32304                           fsr0h	equ	0xFEA
 32305                           fsr0l	equ	0xFE9
 32306                           wreg	equ	0xFE8
 32307                           indf1	equ	0xFE7
 32308                           postdec1	equ	0xFE5
 32309                           fsr1h	equ	0xFE2
 32310                           fsr1l	equ	0xFE1
 32311                           indf2	equ	0xFDF
 32312                           postinc2	equ	0xFDE
 32313                           postdec2	equ	0xFDD
 32314                           plusw2	equ	0xFDB
 32315                           fsr2h	equ	0xFDA
 32316                           fsr2l	equ	0xFD9
 32317                           status	equ	0xFD8
 32318                           
 32319 ;; *************** function i2_oled_writeCommand *****************
 32320 ;; Defined at:
 32321 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 32322 ;; Parameters:    Size  Location     Type
 32323 ;;  command         1    wreg     unsigned char 
 32324 ;; Auto vars:     Size  Location     Type
 32325 ;;  command         1    0[COMRAM] unsigned char 
 32326 ;; Return value:  Size  Location     Type
 32327 ;;                  1    wreg      void 
 32328 ;; Registers used:
 32329 ;;		wreg
 32330 ;; Tracked objects:
 32331 ;;		On entry : 0/0
 32332 ;;		On exit  : 0/0
 32333 ;;		Unchanged: 0/0
 32334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32335 ;;      Params:         0       0       0       0       0       0       0       0       0
 32336 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32338 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32339 ;;Total ram usage:        1 bytes
 32340 ;; Hardware stack levels used:    1
 32341 ;; This function calls:
 32342 ;;		Nothing
 32343 ;; This function is called by:
 32344 ;;		i2_Set_Page_Address
 32345 ;;		i2_Set_Column_Address
 32346 ;; This function uses a non-reentrant model
 32347 ;;
 32348                           
 32349                           	psect	text151
 32350  005B54                     __ptext151:
 32351                           	opt stack 0
 32352  005B54                     i2_oled_writeCommand:
 32353                           	opt stack 15
 32354                           
 32355                           ;incstack = 0
 32356                           ;i2oled_writeCommand@command stored from wreg
 32357  005B54  6E01               	movwf	i2oled_writeCommand@command,c
 32358                           
 32359                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 32360  005B56  988A               	bcf	3978,4,c	;volatile
 32361                           
 32362                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 32363  005B58  908B               	bcf	3979,0,c	;volatile
 32364                           
 32365                           ;SSD1306oLED.c: 434: LATD=command;
 32366  005B5A  C001  FF8C         	movff	i2oled_writeCommand@command,3980	;volatile
 32367                           
 32368                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 32369  005B5E  928B               	bcf	3979,1,c	;volatile
 32370                           
 32371                           ;SSD1306oLED.c: 436: __nop();
 32372  005B60  F000               	nop	
 32373                           
 32374                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 32375  005B62  828B               	bsf	3979,1,c	;volatile
 32376                           
 32377                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 32378  005B64  888A               	bsf	3978,4,c	;volatile
 32379  005B66  0012               	return	
 32380  005B68                     __end_ofi2_oled_writeCommand:
 32381                           	opt stack 0
 32382                           tosu	equ	0xFFF
 32383                           tosh	equ	0xFFE
 32384                           tosl	equ	0xFFD
 32385                           pclatu	equ	0xFFB
 32386                           pclath	equ	0xFFA
 32387                           tblptru	equ	0xFF8
 32388                           tblptrh	equ	0xFF7
 32389                           tblptrl	equ	0xFF6
 32390                           tablat	equ	0xFF5
 32391                           prodh	equ	0xFF4
 32392                           prodl	equ	0xFF3
 32393                           intcon	equ	0xFF2
 32394                           intcon2	equ	0xFF1
 32395                           intcon3	equ	0xFF0
 32396                           indf0	equ	0xFEF
 32397                           postinc0	equ	0xFEE
 32398                           fsr0h	equ	0xFEA
 32399                           fsr0l	equ	0xFE9
 32400                           wreg	equ	0xFE8
 32401                           indf1	equ	0xFE7
 32402                           postdec1	equ	0xFE5
 32403                           fsr1h	equ	0xFE2
 32404                           fsr1l	equ	0xFE1
 32405                           indf2	equ	0xFDF
 32406                           postinc2	equ	0xFDE
 32407                           postdec2	equ	0xFDD
 32408                           plusw2	equ	0xFDB
 32409                           fsr2h	equ	0xFDA
 32410                           fsr2l	equ	0xFD9
 32411                           status	equ	0xFD8
 32412                           
 32413 ;; *************** function _clearInterruptTimerUART *****************
 32414 ;; Defined at:
 32415 ;;		line 202 in file "../Includes/Drivers/swUart.c"
 32416 ;; Parameters:    Size  Location     Type
 32417 ;;		None
 32418 ;; Auto vars:     Size  Location     Type
 32419 ;;		None
 32420 ;; Return value:  Size  Location     Type
 32421 ;;                  1    wreg      void 
 32422 ;; Registers used:
 32423 ;;		cstack
 32424 ;; Tracked objects:
 32425 ;;		On entry : 0/0
 32426 ;;		On exit  : 0/0
 32427 ;;		Unchanged: 0/0
 32428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32429 ;;      Params:         0       0       0       0       0       0       0       0       0
 32430 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32432 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32433 ;;Total ram usage:        0 bytes
 32434 ;; Hardware stack levels used:    1
 32435 ;; Hardware stack levels required when called:    1
 32436 ;; This function calls:
 32437 ;;		_TMR0_Clear
 32438 ;; This function is called by:
 32439 ;;		_InterruptTimerUART
 32440 ;; This function uses a non-reentrant model
 32441 ;;
 32442                           
 32443                           	psect	text152
 32444  005C6E                     __ptext152:
 32445                           	opt stack 0
 32446  005C6E                     _clearInterruptTimerUART:
 32447                           	opt stack 18
 32448                           
 32449                           ;swUart.c: 204: TMR0_Clear();
 32450                           
 32451                           ;incstack = 0
 32452  005C6E  EC44  F02E         	call	_TMR0_Clear	;wreg free
 32453  005C72  0012               	return		;funcret
 32454  005C74                     __end_of_clearInterruptTimerUART:
 32455                           	opt stack 0
 32456                           tosu	equ	0xFFF
 32457                           tosh	equ	0xFFE
 32458                           tosl	equ	0xFFD
 32459                           pclatu	equ	0xFFB
 32460                           pclath	equ	0xFFA
 32461                           tblptru	equ	0xFF8
 32462                           tblptrh	equ	0xFF7
 32463                           tblptrl	equ	0xFF6
 32464                           tablat	equ	0xFF5
 32465                           prodh	equ	0xFF4
 32466                           prodl	equ	0xFF3
 32467                           intcon	equ	0xFF2
 32468                           intcon2	equ	0xFF1
 32469                           intcon3	equ	0xFF0
 32470                           indf0	equ	0xFEF
 32471                           postinc0	equ	0xFEE
 32472                           fsr0h	equ	0xFEA
 32473                           fsr0l	equ	0xFE9
 32474                           wreg	equ	0xFE8
 32475                           indf1	equ	0xFE7
 32476                           postdec1	equ	0xFE5
 32477                           fsr1h	equ	0xFE2
 32478                           fsr1l	equ	0xFE1
 32479                           indf2	equ	0xFDF
 32480                           postinc2	equ	0xFDE
 32481                           postdec2	equ	0xFDD
 32482                           plusw2	equ	0xFDB
 32483                           fsr2h	equ	0xFDA
 32484                           fsr2l	equ	0xFD9
 32485                           status	equ	0xFD8
 32486                           
 32487 ;; *************** function _TMR0_Clear *****************
 32488 ;; Defined at:
 32489 ;;		line 142 in file "../Includes/MccGenerated/tmr0.c"
 32490 ;; Parameters:    Size  Location     Type
 32491 ;;		None
 32492 ;; Auto vars:     Size  Location     Type
 32493 ;;		None
 32494 ;; Return value:  Size  Location     Type
 32495 ;;                  1    wreg      void 
 32496 ;; Registers used:
 32497 ;;		None
 32498 ;; Tracked objects:
 32499 ;;		On entry : 0/0
 32500 ;;		On exit  : 0/0
 32501 ;;		Unchanged: 0/0
 32502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32503 ;;      Params:         0       0       0       0       0       0       0       0       0
 32504 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32506 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32507 ;;Total ram usage:        0 bytes
 32508 ;; Hardware stack levels used:    1
 32509 ;; This function calls:
 32510 ;;		Nothing
 32511 ;; This function is called by:
 32512 ;;		_clearInterruptTimerUART
 32513 ;; This function uses a non-reentrant model
 32514 ;;
 32515                           
 32516                           	psect	text153
 32517  005C88                     __ptext153:
 32518                           	opt stack 0
 32519  005C88                     _TMR0_Clear:
 32520                           	opt stack 18
 32521                           
 32522                           ;tmr0.c: 145: INTCONbits.TMR0IF = 0;
 32523                           
 32524                           ;incstack = 0
 32525  005C88  94F2               	bcf	intcon,2,c	;volatile
 32526  005C8A  0012               	return		;funcret
 32527  005C8C                     __end_of_TMR0_Clear:
 32528                           	opt stack 0
 32529                           tosu	equ	0xFFF
 32530                           tosh	equ	0xFFE
 32531                           tosl	equ	0xFFD
 32532                           pclatu	equ	0xFFB
 32533                           pclath	equ	0xFFA
 32534                           tblptru	equ	0xFF8
 32535                           tblptrh	equ	0xFF7
 32536                           tblptrl	equ	0xFF6
 32537                           tablat	equ	0xFF5
 32538                           prodh	equ	0xFF4
 32539                           prodl	equ	0xFF3
 32540                           intcon	equ	0xFF2
 32541                           intcon2	equ	0xFF1
 32542                           intcon3	equ	0xFF0
 32543                           indf0	equ	0xFEF
 32544                           postinc0	equ	0xFEE
 32545                           fsr0h	equ	0xFEA
 32546                           fsr0l	equ	0xFE9
 32547                           wreg	equ	0xFE8
 32548                           indf1	equ	0xFE7
 32549                           postdec1	equ	0xFE5
 32550                           fsr1h	equ	0xFE2
 32551                           fsr1l	equ	0xFE1
 32552                           indf2	equ	0xFDF
 32553                           postinc2	equ	0xFDE
 32554                           postdec2	equ	0xFDD
 32555                           plusw2	equ	0xFDB
 32556                           fsr2h	equ	0xFDA
 32557                           fsr2l	equ	0xFD9
 32558                           status	equ	0xFD8
 32559                           
 32560 ;; *************** function _TMR0_StopTimer *****************
 32561 ;; Defined at:
 32562 ;;		line 95 in file "../Includes/MccGenerated/tmr0.c"
 32563 ;; Parameters:    Size  Location     Type
 32564 ;;		None
 32565 ;; Auto vars:     Size  Location     Type
 32566 ;;		None
 32567 ;; Return value:  Size  Location     Type
 32568 ;;                  1    wreg      void 
 32569 ;; Registers used:
 32570 ;;		None
 32571 ;; Tracked objects:
 32572 ;;		On entry : 0/0
 32573 ;;		On exit  : 0/0
 32574 ;;		Unchanged: 0/0
 32575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32576 ;;      Params:         0       0       0       0       0       0       0       0       0
 32577 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32578 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32579 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32580 ;;Total ram usage:        0 bytes
 32581 ;; Hardware stack levels used:    1
 32582 ;; This function calls:
 32583 ;;		Nothing
 32584 ;; This function is called by:
 32585 ;;		_InterruptTimerUART
 32586 ;; This function uses a non-reentrant model
 32587 ;;
 32588                           
 32589                           	psect	text154
 32590  005C8C                     __ptext154:
 32591                           	opt stack 0
 32592  005C8C                     _TMR0_StopTimer:
 32593                           	opt stack 19
 32594                           
 32595                           ;tmr0.c: 98: T0CONbits.TMR0ON = 0;
 32596                           
 32597                           ;incstack = 0
 32598  005C8C  9ED5               	bcf	4053,7,c	;volatile
 32599  005C8E  0012               	return		;funcret
 32600  005C90                     __end_of_TMR0_StopTimer:
 32601                           	opt stack 0
 32602                           tosu	equ	0xFFF
 32603                           tosh	equ	0xFFE
 32604                           tosl	equ	0xFFD
 32605                           pclatu	equ	0xFFB
 32606                           pclath	equ	0xFFA
 32607                           tblptru	equ	0xFF8
 32608                           tblptrh	equ	0xFF7
 32609                           tblptrl	equ	0xFF6
 32610                           tablat	equ	0xFF5
 32611                           prodh	equ	0xFF4
 32612                           prodl	equ	0xFF3
 32613                           intcon	equ	0xFF2
 32614                           intcon2	equ	0xFF1
 32615                           intcon3	equ	0xFF0
 32616                           indf0	equ	0xFEF
 32617                           postinc0	equ	0xFEE
 32618                           fsr0h	equ	0xFEA
 32619                           fsr0l	equ	0xFE9
 32620                           wreg	equ	0xFE8
 32621                           indf1	equ	0xFE7
 32622                           postdec1	equ	0xFE5
 32623                           fsr1h	equ	0xFE2
 32624                           fsr1l	equ	0xFE1
 32625                           indf2	equ	0xFDF
 32626                           postinc2	equ	0xFDE
 32627                           postdec2	equ	0xFDD
 32628                           plusw2	equ	0xFDB
 32629                           fsr2h	equ	0xFDA
 32630                           fsr2l	equ	0xFD9
 32631                           status	equ	0xFD8
 32632                           
 32633 ;; *************** function _InterruptPinRX *****************
 32634 ;; Defined at:
 32635 ;;		line 93 in file "../Includes/Drivers/swUart.c"
 32636 ;; Parameters:    Size  Location     Type
 32637 ;;		None
 32638 ;; Auto vars:     Size  Location     Type
 32639 ;;		None
 32640 ;; Return value:  Size  Location     Type
 32641 ;;                  1    wreg      void 
 32642 ;; Registers used:
 32643 ;;		wreg, status,2, status,0, cstack
 32644 ;; Tracked objects:
 32645 ;;		On entry : 0/0
 32646 ;;		On exit  : 0/0
 32647 ;;		Unchanged: 0/0
 32648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32649 ;;      Params:         0       0       0       0       0       0       0       0       0
 32650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32651 ;;      Temps:          1       0       0       0       0       0       0       0       0
 32652 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32653 ;;Total ram usage:        1 bytes
 32654 ;; Hardware stack levels used:    1
 32655 ;; Hardware stack levels required when called:    1
 32656 ;; This function calls:
 32657 ;;		_clearInterruptPinRX
 32658 ;;		_reloadTimer
 32659 ;;		i2_TMR0_StartTimer
 32660 ;; This function is called by:
 32661 ;;		_INTERRUPT_InterruptManager
 32662 ;; This function uses a non-reentrant model
 32663 ;;
 32664                           
 32665                           	psect	text155
 32666  0052C8                     __ptext155:
 32667                           	opt stack 0
 32668  0052C8                     _InterruptPinRX:
 32669                           	opt stack 19
 32670                           
 32671                           ;swUart.c: 96: if(status == SILENT)
 32672                           
 32673                           ;incstack = 0
 32674  0052C8  5059               	movf	_status,w,c
 32675  0052CA  B4D8               	btfsc	status,2,c
 32676                           
 32677                           ;swUart.c: 97: {
 32678                           ;swUart.c: 98: if(PORTBbits.RB7 == 0)
 32679  0052CC  BE81               	btfsc	3969,7,c	;volatile
 32680  0052CE  D01E               	goto	i2l1140
 32681                           
 32682                           ;swUart.c: 99: {
 32683                           ;swUart.c: 102: TMR0_StartTimer();
 32684  0052D0  EC48  F02E         	call	i2_TMR0_StartTimer	;wreg free
 32685                           
 32686                           ;swUart.c: 103: PORTAbits.RA7 = !PORTAbits.RA7;
 32687  0052D4  BE80               	btfsc	3968,7,c	;volatile
 32688  0052D6  D003               	goto	i2u1041_40
 32689  0052D8  6A02               	clrf	??_InterruptPinRX& (0+255),c
 32690  0052DA  2A02               	incf	??_InterruptPinRX& (0+255),f,c
 32691  0052DC  D001               	goto	i2u1042_48
 32692  0052DE                     i2u1041_40:
 32693  0052DE  6A02               	clrf	??_InterruptPinRX& (0+255),c
 32694  0052E0                     i2u1042_48:
 32695  0052E0  3202               	rrcf	??_InterruptPinRX,f,c
 32696  0052E2  3202               	rrcf	??_InterruptPinRX,f,c
 32697  0052E4  5080               	movf	3968,w,c	;volatile
 32698  0052E6  1802               	xorwf	??_InterruptPinRX,w,c
 32699  0052E8  0B7F               	andlw	-129
 32700  0052EA  1802               	xorwf	??_InterruptPinRX,w,c
 32701  0052EC  6E80               	movwf	3968,c	;volatile
 32702                           
 32703                           ;swUart.c: 104: reloadTimer(34);
 32704  0052EE  0E22               	movlw	34
 32705  0052F0  EC12  F02E         	call	_reloadTimer
 32706                           
 32707                           ;swUart.c: 109: countBitsSilent = 0;
 32708  0052F4  0E00               	movlw	0
 32709  0052F6  6E57               	movwf	_countBitsSilent,c
 32710                           
 32711                           ;swUart.c: 110: n_bit = 0;
 32712  0052F8  0E00               	movlw	0
 32713  0052FA  6E5C               	movwf	_n_bit,c
 32714                           
 32715                           ;swUart.c: 111: cs = 0;
 32716  0052FC  0E00               	movlw	0
 32717  0052FE  0101               	movlb	1	; () banked
 32718  005300  6F43               	movwf	_cs& (0+255),b
 32719                           
 32720                           ; BSR set to: 1
 32721                           ;swUart.c: 112: rx_data = 0;
 32722  005302  0E00               	movlw	0
 32723  005304  0100               	movlb	0	; () banked
 32724  005306  6FE3               	movwf	_rx_data& (0+255),b
 32725                           
 32726                           ; BSR set to: 0
 32727                           ;swUart.c: 113: status = N_BIT;
 32728  005308  0E01               	movlw	1
 32729  00530A  6E59               	movwf	_status,c
 32730  00530C                     i2l1140:
 32731                           
 32732                           ;swUart.c: 114: }
 32733                           ;swUart.c: 115: }
 32734                           ;swUart.c: 117: clearInterruptPinRX();
 32735                           
 32736                           ; BSR set to: 0
 32737                           
 32738                           ; BSR set to: 0
 32739  00530C  ECF8  F02D         	call	_clearInterruptPinRX	;wreg free
 32740  005310  0012               	return		;funcret
 32741  005312                     __end_of_InterruptPinRX:
 32742                           	opt stack 0
 32743                           tosu	equ	0xFFF
 32744                           tosh	equ	0xFFE
 32745                           tosl	equ	0xFFD
 32746                           pclatu	equ	0xFFB
 32747                           pclath	equ	0xFFA
 32748                           tblptru	equ	0xFF8
 32749                           tblptrh	equ	0xFF7
 32750                           tblptrl	equ	0xFF6
 32751                           tablat	equ	0xFF5
 32752                           prodh	equ	0xFF4
 32753                           prodl	equ	0xFF3
 32754                           intcon	equ	0xFF2
 32755                           intcon2	equ	0xFF1
 32756                           intcon3	equ	0xFF0
 32757                           indf0	equ	0xFEF
 32758                           postinc0	equ	0xFEE
 32759                           fsr0h	equ	0xFEA
 32760                           fsr0l	equ	0xFE9
 32761                           wreg	equ	0xFE8
 32762                           indf1	equ	0xFE7
 32763                           postdec1	equ	0xFE5
 32764                           fsr1h	equ	0xFE2
 32765                           fsr1l	equ	0xFE1
 32766                           indf2	equ	0xFDF
 32767                           postinc2	equ	0xFDE
 32768                           postdec2	equ	0xFDD
 32769                           plusw2	equ	0xFDB
 32770                           fsr2h	equ	0xFDA
 32771                           fsr2l	equ	0xFD9
 32772                           status	equ	0xFD8
 32773                           
 32774 ;; *************** function i2_TMR0_StartTimer *****************
 32775 ;; Defined at:
 32776 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 32777 ;; Parameters:    Size  Location     Type
 32778 ;;		None
 32779 ;; Auto vars:     Size  Location     Type
 32780 ;;		None
 32781 ;; Return value:  Size  Location     Type
 32782 ;;                  1    wreg      void 
 32783 ;; Registers used:
 32784 ;;		None
 32785 ;; Tracked objects:
 32786 ;;		On entry : 0/0
 32787 ;;		On exit  : 0/0
 32788 ;;		Unchanged: 0/0
 32789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32790 ;;      Params:         0       0       0       0       0       0       0       0       0
 32791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32793 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32794 ;;Total ram usage:        0 bytes
 32795 ;; Hardware stack levels used:    1
 32796 ;; This function calls:
 32797 ;;		Nothing
 32798 ;; This function is called by:
 32799 ;;		_InterruptPinRX
 32800 ;; This function uses a non-reentrant model
 32801 ;;
 32802                           
 32803                           	psect	text156
 32804  005C90                     __ptext156:
 32805                           	opt stack 0
 32806  005C90                     i2_TMR0_StartTimer:
 32807                           	opt stack 19
 32808                           
 32809                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 32810                           
 32811                           ;incstack = 0
 32812  005C90  8ED5               	bsf	4053,7,c	;volatile
 32813  005C92  0012               	return		;funcret
 32814  005C94                     __end_ofi2_TMR0_StartTimer:
 32815                           	opt stack 0
 32816                           tosu	equ	0xFFF
 32817                           tosh	equ	0xFFE
 32818                           tosl	equ	0xFFD
 32819                           pclatu	equ	0xFFB
 32820                           pclath	equ	0xFFA
 32821                           tblptru	equ	0xFF8
 32822                           tblptrh	equ	0xFF7
 32823                           tblptrl	equ	0xFF6
 32824                           tablat	equ	0xFF5
 32825                           prodh	equ	0xFF4
 32826                           prodl	equ	0xFF3
 32827                           intcon	equ	0xFF2
 32828                           intcon2	equ	0xFF1
 32829                           intcon3	equ	0xFF0
 32830                           indf0	equ	0xFEF
 32831                           postinc0	equ	0xFEE
 32832                           fsr0h	equ	0xFEA
 32833                           fsr0l	equ	0xFE9
 32834                           wreg	equ	0xFE8
 32835                           indf1	equ	0xFE7
 32836                           postdec1	equ	0xFE5
 32837                           fsr1h	equ	0xFE2
 32838                           fsr1l	equ	0xFE1
 32839                           indf2	equ	0xFDF
 32840                           postinc2	equ	0xFDE
 32841                           postdec2	equ	0xFDD
 32842                           plusw2	equ	0xFDB
 32843                           fsr2h	equ	0xFDA
 32844                           fsr2l	equ	0xFD9
 32845                           status	equ	0xFD8
 32846                           
 32847 ;; *************** function _reloadTimer *****************
 32848 ;; Defined at:
 32849 ;;		line 207 in file "../Includes/Drivers/swUart.c"
 32850 ;; Parameters:    Size  Location     Type
 32851 ;;  setTimerValu    1    wreg     unsigned char 
 32852 ;; Auto vars:     Size  Location     Type
 32853 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 32854 ;; Return value:  Size  Location     Type
 32855 ;;                  1    wreg      void 
 32856 ;; Registers used:
 32857 ;;		wreg
 32858 ;; Tracked objects:
 32859 ;;		On entry : 0/0
 32860 ;;		On exit  : 0/0
 32861 ;;		Unchanged: 0/0
 32862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32863 ;;      Params:         0       0       0       0       0       0       0       0       0
 32864 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32865 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32866 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32867 ;;Total ram usage:        1 bytes
 32868 ;; Hardware stack levels used:    1
 32869 ;; This function calls:
 32870 ;;		Nothing
 32871 ;; This function is called by:
 32872 ;;		_InterruptPinRX
 32873 ;;		_InterruptTimerUART
 32874 ;; This function uses a non-reentrant model
 32875 ;;
 32876                           
 32877                           	psect	text157
 32878  005C24                     __ptext157:
 32879                           	opt stack 0
 32880  005C24                     _reloadTimer:
 32881                           	opt stack 19
 32882                           
 32883                           ;incstack = 0
 32884                           ;reloadTimer@setTimerValue stored from wreg
 32885  005C24  6E01               	movwf	reloadTimer@setTimerValue,c
 32886                           
 32887                           ;swUart.c: 209: TMR0 = setTimerValue;
 32888  005C26  C001  FFD6         	movff	reloadTimer@setTimerValue,4054	;volatile
 32889  005C2A  6AD7               	clrf	4055,c	;volatile
 32890  005C2C  0012               	return		;funcret
 32891  005C2E                     __end_of_reloadTimer:
 32892                           	opt stack 0
 32893                           tosu	equ	0xFFF
 32894                           tosh	equ	0xFFE
 32895                           tosl	equ	0xFFD
 32896                           pclatu	equ	0xFFB
 32897                           pclath	equ	0xFFA
 32898                           tblptru	equ	0xFF8
 32899                           tblptrh	equ	0xFF7
 32900                           tblptrl	equ	0xFF6
 32901                           tablat	equ	0xFF5
 32902                           prodh	equ	0xFF4
 32903                           prodl	equ	0xFF3
 32904                           intcon	equ	0xFF2
 32905                           intcon2	equ	0xFF1
 32906                           intcon3	equ	0xFF0
 32907                           indf0	equ	0xFEF
 32908                           postinc0	equ	0xFEE
 32909                           fsr0h	equ	0xFEA
 32910                           fsr0l	equ	0xFE9
 32911                           wreg	equ	0xFE8
 32912                           indf1	equ	0xFE7
 32913                           postdec1	equ	0xFE5
 32914                           fsr1h	equ	0xFE2
 32915                           fsr1l	equ	0xFE1
 32916                           indf2	equ	0xFDF
 32917                           postinc2	equ	0xFDE
 32918                           postdec2	equ	0xFDD
 32919                           plusw2	equ	0xFDB
 32920                           fsr2h	equ	0xFDA
 32921                           fsr2l	equ	0xFD9
 32922                           status	equ	0xFD8
 32923                           
 32924 ;; *************** function _clearInterruptPinRX *****************
 32925 ;; Defined at:
 32926 ;;		line 228 in file "../Includes/Drivers/swUart.c"
 32927 ;; Parameters:    Size  Location     Type
 32928 ;;		None
 32929 ;; Auto vars:     Size  Location     Type
 32930 ;;  tClearPin       1    0[COMRAM] unsigned char 
 32931 ;; Return value:  Size  Location     Type
 32932 ;;                  1    wreg      void 
 32933 ;; Registers used:
 32934 ;;		wreg
 32935 ;; Tracked objects:
 32936 ;;		On entry : 0/0
 32937 ;;		On exit  : 0/0
 32938 ;;		Unchanged: 0/0
 32939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32940 ;;      Params:         0       0       0       0       0       0       0       0       0
 32941 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32943 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32944 ;;Total ram usage:        1 bytes
 32945 ;; Hardware stack levels used:    1
 32946 ;; This function calls:
 32947 ;;		Nothing
 32948 ;; This function is called by:
 32949 ;;		_InterruptPinRX
 32950 ;; This function uses a non-reentrant model
 32951 ;;
 32952                           
 32953                           	psect	text158
 32954  005BF0                     __ptext158:
 32955                           	opt stack 0
 32956  005BF0                     _clearInterruptPinRX:
 32957                           	opt stack 19
 32958                           
 32959                           ;swUart.c: 230: bool tClearPin;
 32960                           ;swUart.c: 232: INTCONbits.IOCIF = 0;
 32961                           
 32962                           ;incstack = 0
 32963  005BF0  90F2               	bcf	intcon,0,c	;volatile
 32964                           
 32965                           ;swUart.c: 234: tClearPin = PORTBbits.RB7;
 32966  005BF2  0E00               	movlw	0
 32967  005BF4  BE81               	btfsc	3969,7,c	;volatile
 32968  005BF6  0E01               	movlw	1
 32969  005BF8  6E01               	movwf	clearInterruptPinRX@tClearPin,c
 32970  005BFA  0012               	return		;funcret
 32971  005BFC                     __end_of_clearInterruptPinRX:
 32972                           	opt stack 0
 32973                           tosu	equ	0xFFF
 32974                           tosh	equ	0xFFE
 32975                           tosl	equ	0xFFD
 32976                           pclatu	equ	0xFFB
 32977                           pclath	equ	0xFFA
 32978                           tblptru	equ	0xFF8
 32979                           tblptrh	equ	0xFF7
 32980                           tblptrl	equ	0xFF6
 32981                           tablat	equ	0xFF5
 32982                           prodh	equ	0xFF4
 32983                           prodl	equ	0xFF3
 32984                           intcon	equ	0xFF2
 32985                           intcon2	equ	0xFF1
 32986                           intcon3	equ	0xFF0
 32987                           indf0	equ	0xFEF
 32988                           postinc0	equ	0xFEE
 32989                           fsr0h	equ	0xFEA
 32990                           fsr0l	equ	0xFE9
 32991                           wreg	equ	0xFE8
 32992                           indf1	equ	0xFE7
 32993                           postdec1	equ	0xFE5
 32994                           fsr1h	equ	0xFE2
 32995                           fsr1l	equ	0xFE1
 32996                           indf2	equ	0xFDF
 32997                           postinc2	equ	0xFDE
 32998                           postdec2	equ	0xFDD
 32999                           plusw2	equ	0xFDB
 33000                           fsr2h	equ	0xFDA
 33001                           fsr2l	equ	0xFD9
 33002                           status	equ	0xFD8
 33003                           
 33004 ;; *************** function _EUSART_Transmit_ISR *****************
 33005 ;; Defined at:
 33006 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 33007 ;; Parameters:    Size  Location     Type
 33008 ;;		None
 33009 ;; Auto vars:     Size  Location     Type
 33010 ;;		None
 33011 ;; Return value:  Size  Location     Type
 33012 ;;                  1    wreg      void 
 33013 ;; Registers used:
 33014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33015 ;; Tracked objects:
 33016 ;;		On entry : 0/0
 33017 ;;		On exit  : 0/0
 33018 ;;		Unchanged: 0/0
 33019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33020 ;;      Params:         0       0       0       0       0       0       0       0       0
 33021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33023 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33024 ;;Total ram usage:        0 bytes
 33025 ;; Hardware stack levels used:    1
 33026 ;; This function calls:
 33027 ;;		Nothing
 33028 ;; This function is called by:
 33029 ;;		_INTERRUPT_InterruptManager
 33030 ;; This function uses a non-reentrant model
 33031 ;;
 33032                           
 33033                           	psect	text159
 33034  00578A                     __ptext159:
 33035                           	opt stack 0
 33036  00578A                     _EUSART_Transmit_ISR:
 33037                           	opt stack 20
 33038                           
 33039                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 33040                           
 33041                           ;incstack = 0
 33042  00578A  0E40               	movlw	64
 33043  00578C  0100               	movlb	0	; () banked
 33044  00578E  61E0               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 33045  005790  D012               	goto	i2l1234
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;eusart.c: 167: {
 33049                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 33050  005792  51E1               	movf	_eusartTxTail& (0+255),w,b
 33051  005794  0D01               	mullw	1
 33052  005796  0E40               	movlw	low _eusartTxBuffer
 33053  005798  24F3               	addwf	prodl,w,c
 33054  00579A  6ED9               	movwf	fsr2l,c
 33055  00579C  0E02               	movlw	high _eusartTxBuffer
 33056  00579E  20F4               	addwfc	prodh,w,c
 33057  0057A0  6EDA               	movwf	fsr2h,c
 33058  0057A2  50DF               	movf	indf2,w,c
 33059  0057A4  6EAD               	movwf	4013,c	;volatile
 33060                           
 33061                           ; BSR set to: 0
 33062  0057A6  2BE1               	incf	_eusartTxTail& (0+255),f,b
 33063                           
 33064                           ; BSR set to: 0
 33065                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 33066  0057A8  0E3F               	movlw	63
 33067  0057AA  65E1               	cpfsgt	_eusartTxTail& (0+255),b
 33068  0057AC  D002               	goto	i2l1235
 33069                           
 33070                           ; BSR set to: 0
 33071                           ;eusart.c: 170: {
 33072                           ;eusart.c: 171: eusartTxTail = 0;
 33073  0057AE  0E00               	movlw	0
 33074  0057B0  6FE1               	movwf	_eusartTxTail& (0+255),b
 33075  0057B2                     i2l1235:
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;eusart.c: 172: }
 33079                           ;eusart.c: 173: eusartTxBufferRemaining++;
 33080                           
 33081                           ; BSR set to: 0
 33082  0057B2  2BE0               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 33083                           
 33084                           ;eusart.c: 174: }
 33085  0057B4  0012               	return	
 33086  0057B6                     i2l1234:
 33087                           
 33088                           ; BSR set to: 0
 33089                           ;eusart.c: 175: else
 33090                           ;eusart.c: 176: {
 33091                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 33092  0057B6  989D               	bcf	3997,4,c	;volatile
 33093  0057B8  0012               	return	
 33094  0057BA                     __end_of_EUSART_Transmit_ISR:
 33095                           	opt stack 0
 33096                           tosu	equ	0xFFF
 33097                           tosh	equ	0xFFE
 33098                           tosl	equ	0xFFD
 33099                           pclatu	equ	0xFFB
 33100                           pclath	equ	0xFFA
 33101                           tblptru	equ	0xFF8
 33102                           tblptrh	equ	0xFF7
 33103                           tblptrl	equ	0xFF6
 33104                           tablat	equ	0xFF5
 33105                           prodh	equ	0xFF4
 33106                           prodl	equ	0xFF3
 33107                           intcon	equ	0xFF2
 33108                           intcon2	equ	0xFF1
 33109                           intcon3	equ	0xFF0
 33110                           indf0	equ	0xFEF
 33111                           postinc0	equ	0xFEE
 33112                           fsr0h	equ	0xFEA
 33113                           fsr0l	equ	0xFE9
 33114                           wreg	equ	0xFE8
 33115                           indf1	equ	0xFE7
 33116                           postdec1	equ	0xFE5
 33117                           fsr1h	equ	0xFE2
 33118                           fsr1l	equ	0xFE1
 33119                           indf2	equ	0xFDF
 33120                           postinc2	equ	0xFDE
 33121                           postdec2	equ	0xFDD
 33122                           plusw2	equ	0xFDB
 33123                           fsr2h	equ	0xFDA
 33124                           fsr2l	equ	0xFD9
 33125                           status	equ	0xFD8
 33126                           
 33127 ;; *************** function _EUSART_Receive_ISR *****************
 33128 ;; Defined at:
 33129 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 33130 ;; Parameters:    Size  Location     Type
 33131 ;;		None
 33132 ;; Auto vars:     Size  Location     Type
 33133 ;;		None
 33134 ;; Return value:  Size  Location     Type
 33135 ;;                  1    wreg      void 
 33136 ;; Registers used:
 33137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33138 ;; Tracked objects:
 33139 ;;		On entry : 0/0
 33140 ;;		On exit  : 0/0
 33141 ;;		Unchanged: 0/0
 33142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33143 ;;      Params:         0       0       0       0       0       0       0       0       0
 33144 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33146 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33147 ;;Total ram usage:        0 bytes
 33148 ;; Hardware stack levels used:    1
 33149 ;; This function calls:
 33150 ;;		Nothing
 33151 ;; This function is called by:
 33152 ;;		_INTERRUPT_InterruptManager
 33153 ;; This function uses a non-reentrant model
 33154 ;;
 33155                           
 33156                           	psect	text160
 33157  0057BA                     __ptext160:
 33158                           	opt stack 0
 33159  0057BA                     _EUSART_Receive_ISR:
 33160                           	opt stack 20
 33161                           
 33162                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;incstack = 0
 33166  0057BA  A2AB               	btfss	4011,1,c	;volatile
 33167  0057BC  D003               	goto	i2l1240
 33168                           
 33169                           ;eusart.c: 184: {
 33170                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 33171  0057BE  98AB               	bcf	4011,4,c	;volatile
 33172                           
 33173                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 33174  0057C0  88AB               	bsf	4011,4,c	;volatile
 33175                           
 33176                           ;eusart.c: 189: }
 33177  0057C2  0012               	return	
 33178  0057C4                     i2l1240:
 33179                           
 33180                           ;eusart.c: 190: else
 33181                           ;eusart.c: 191: {
 33182                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 33183  0057C4  0100               	movlb	0	; () banked
 33184  0057C6  51DF               	movf	_eusartRxHead& (0+255),w,b
 33185  0057C8  0D01               	mullw	1
 33186  0057CA  0E00               	movlw	low _eusartRxBuffer
 33187  0057CC  24F3               	addwf	prodl,w,c
 33188  0057CE  6ED9               	movwf	fsr2l,c
 33189  0057D0  0E02               	movlw	high _eusartRxBuffer
 33190  0057D2  20F4               	addwfc	prodh,w,c
 33191  0057D4  6EDA               	movwf	fsr2h,c
 33192  0057D6  CFAE FFDF          	movff	4014,indf2	;volatile
 33193                           
 33194                           ; BSR set to: 0
 33195  0057DA  2BDF               	incf	_eusartRxHead& (0+255),f,b
 33196                           
 33197                           ; BSR set to: 0
 33198                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 33199  0057DC  0E3F               	movlw	63
 33200  0057DE  65DF               	cpfsgt	_eusartRxHead& (0+255),b
 33201  0057E0  D002               	goto	i2l1242
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;eusart.c: 195: {
 33205                           ;eusart.c: 196: eusartRxHead = 0;
 33206  0057E2  0E00               	movlw	0
 33207  0057E4  6FDF               	movwf	_eusartRxHead& (0+255),b
 33208  0057E6                     i2l1242:
 33209                           
 33210                           ; BSR set to: 0
 33211                           ;eusart.c: 197: }
 33212                           ;eusart.c: 198: eusartRxCount++;
 33213                           
 33214                           ; BSR set to: 0
 33215  0057E6  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 33216  0057E8  0012               	return	
 33217  0057EA                     __end_of_EUSART_Receive_ISR:
 33218                           	opt stack 0
 33219                           tosu	equ	0xFFF
 33220                           tosh	equ	0xFFE
 33221                           tosl	equ	0xFFD
 33222                           pclatu	equ	0xFFB
 33223                           pclath	equ	0xFFA
 33224                           tblptru	equ	0xFF8
 33225                           tblptrh	equ	0xFF7
 33226                           tblptrl	equ	0xFF6
 33227                           tablat	equ	0xFF5
 33228                           prodh	equ	0xFF4
 33229                           prodl	equ	0xFF3
 33230                           intcon	equ	0xFF2
 33231                           intcon2	equ	0xFF1
 33232                           intcon3	equ	0xFF0
 33233                           indf0	equ	0xFEF
 33234                           postinc0	equ	0xFEE
 33235                           fsr0h	equ	0xFEA
 33236                           fsr0l	equ	0xFE9
 33237                           wreg	equ	0xFE8
 33238                           indf1	equ	0xFE7
 33239                           postdec1	equ	0xFE5
 33240                           fsr1h	equ	0xFE2
 33241                           fsr1l	equ	0xFE1
 33242                           indf2	equ	0xFDF
 33243                           postinc2	equ	0xFDE
 33244                           postdec2	equ	0xFDD
 33245                           plusw2	equ	0xFDB
 33246                           fsr2h	equ	0xFDA
 33247                           fsr2l	equ	0xFD9
 33248                           status	equ	0xFD8
 33249                           
 33250 ;; *************** function _CMP1_ISR *****************
 33251 ;; Defined at:
 33252 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 33253 ;; Parameters:    Size  Location     Type
 33254 ;;		None
 33255 ;; Auto vars:     Size  Location     Type
 33256 ;;		None
 33257 ;; Return value:  Size  Location     Type
 33258 ;;                  1    wreg      void 
 33259 ;; Registers used:
 33260 ;;		None
 33261 ;; Tracked objects:
 33262 ;;		On entry : 0/0
 33263 ;;		On exit  : 0/0
 33264 ;;		Unchanged: 0/0
 33265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33266 ;;      Params:         0       0       0       0       0       0       0       0       0
 33267 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33269 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33270 ;;Total ram usage:        0 bytes
 33271 ;; Hardware stack levels used:    1
 33272 ;; This function calls:
 33273 ;;		Nothing
 33274 ;; This function is called by:
 33275 ;;		_INTERRUPT_InterruptManager
 33276 ;; This function uses a non-reentrant model
 33277 ;;
 33278                           
 33279                           	psect	text161
 33280  005C94                     __ptext161:
 33281                           	opt stack 0
 33282  005C94                     _CMP1_ISR:
 33283                           	opt stack 20
 33284                           
 33285                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 33286                           
 33287                           ;incstack = 0
 33288  005C94  9CA1               	bcf	4001,6,c	;volatile
 33289  005C96  0012               	return		;funcret
 33290  005C98                     __end_of_CMP1_ISR:
 33291                           	opt stack 0
 33292                           tosu	equ	0xFFF
 33293                           tosh	equ	0xFFE
 33294                           tosl	equ	0xFFD
 33295                           pclatu	equ	0xFFB
 33296                           pclath	equ	0xFFA
 33297                           tblptru	equ	0xFF8
 33298                           tblptrh	equ	0xFF7
 33299                           tblptrl	equ	0xFF6
 33300                           tablat	equ	0xFF5
 33301                           prodh	equ	0xFF4
 33302                           prodl	equ	0xFF3
 33303                           intcon	equ	0xFF2
 33304                           intcon2	equ	0xFF1
 33305                           intcon3	equ	0xFF0
 33306                           indf0	equ	0xFEF
 33307                           postinc0	equ	0xFEE
 33308                           fsr0h	equ	0xFEA
 33309                           fsr0l	equ	0xFE9
 33310                           wreg	equ	0xFE8
 33311                           indf1	equ	0xFE7
 33312                           postdec1	equ	0xFE5
 33313                           fsr1h	equ	0xFE2
 33314                           fsr1l	equ	0xFE1
 33315                           indf2	equ	0xFDF
 33316                           postinc2	equ	0xFDE
 33317                           postdec2	equ	0xFDD
 33318                           plusw2	equ	0xFDB
 33319                           fsr2h	equ	0xFDA
 33320                           fsr2l	equ	0xFD9
 33321                           status	equ	0xFD8
 33322                           tosu	equ	0xFFF
 33323                           tosh	equ	0xFFE
 33324                           tosl	equ	0xFFD
 33325                           pclatu	equ	0xFFB
 33326                           pclath	equ	0xFFA
 33327                           tblptru	equ	0xFF8
 33328                           tblptrh	equ	0xFF7
 33329                           tblptrl	equ	0xFF6
 33330                           tablat	equ	0xFF5
 33331                           prodh	equ	0xFF4
 33332                           prodl	equ	0xFF3
 33333                           intcon	equ	0xFF2
 33334                           intcon2	equ	0xFF1
 33335                           intcon3	equ	0xFF0
 33336                           indf0	equ	0xFEF
 33337                           postinc0	equ	0xFEE
 33338                           fsr0h	equ	0xFEA
 33339                           fsr0l	equ	0xFE9
 33340                           wreg	equ	0xFE8
 33341                           indf1	equ	0xFE7
 33342                           postdec1	equ	0xFE5
 33343                           fsr1h	equ	0xFE2
 33344                           fsr1l	equ	0xFE1
 33345                           indf2	equ	0xFDF
 33346                           postinc2	equ	0xFDE
 33347                           postdec2	equ	0xFDD
 33348                           plusw2	equ	0xFDB
 33349                           fsr2h	equ	0xFDA
 33350                           fsr2l	equ	0xFD9
 33351                           status	equ	0xFD8
 33352                           
 33353                           	psect	text162
 33354  000000                     __ptext162:
 33355                           	opt stack 0
 33356                           tosu	equ	0xFFF
 33357                           tosh	equ	0xFFE
 33358                           tosl	equ	0xFFD
 33359                           pclatu	equ	0xFFB
 33360                           pclath	equ	0xFFA
 33361                           tblptru	equ	0xFF8
 33362                           tblptrh	equ	0xFF7
 33363                           tblptrl	equ	0xFF6
 33364                           tablat	equ	0xFF5
 33365                           prodh	equ	0xFF4
 33366                           prodl	equ	0xFF3
 33367                           intcon	equ	0xFF2
 33368                           intcon2	equ	0xFF1
 33369                           intcon3	equ	0xFF0
 33370                           indf0	equ	0xFEF
 33371                           postinc0	equ	0xFEE
 33372                           fsr0h	equ	0xFEA
 33373                           fsr0l	equ	0xFE9
 33374                           wreg	equ	0xFE8
 33375                           indf1	equ	0xFE7
 33376                           postdec1	equ	0xFE5
 33377                           fsr1h	equ	0xFE2
 33378                           fsr1l	equ	0xFE1
 33379                           indf2	equ	0xFDF
 33380                           postinc2	equ	0xFDE
 33381                           postdec2	equ	0xFDD
 33382                           plusw2	equ	0xFDB
 33383                           fsr2h	equ	0xFDA
 33384                           fsr2l	equ	0xFD9
 33385                           status	equ	0xFD8
 33386                           
 33387                           	psect	rparam
 33388  0000                     tosu	equ	0xFFF
 33389                           tosh	equ	0xFFE
 33390                           tosl	equ	0xFFD
 33391                           pclatu	equ	0xFFB
 33392                           pclath	equ	0xFFA
 33393                           tblptru	equ	0xFF8
 33394                           tblptrh	equ	0xFF7
 33395                           tblptrl	equ	0xFF6
 33396                           tablat	equ	0xFF5
 33397                           prodh	equ	0xFF4
 33398                           prodl	equ	0xFF3
 33399                           intcon	equ	0xFF2
 33400                           intcon2	equ	0xFF1
 33401                           intcon3	equ	0xFF0
 33402                           indf0	equ	0xFEF
 33403                           postinc0	equ	0xFEE
 33404                           fsr0h	equ	0xFEA
 33405                           fsr0l	equ	0xFE9
 33406                           wreg	equ	0xFE8
 33407                           indf1	equ	0xFE7
 33408                           postdec1	equ	0xFE5
 33409                           fsr1h	equ	0xFE2
 33410                           fsr1l	equ	0xFE1
 33411                           indf2	equ	0xFDF
 33412                           postinc2	equ	0xFDE
 33413                           postdec2	equ	0xFDD
 33414                           plusw2	equ	0xFDB
 33415                           fsr2h	equ	0xFDA
 33416                           fsr2l	equ	0xFD9
 33417                           status	equ	0xFD8
 33418                           
 33419                           	psect	temp
 33420  00005F                     btemp:
 33421                           	opt stack 0
 33422  00005F                     	ds	1
 33423  0000                     int$flags	set	btemp
 33424  0000                     wtemp6	set	btemp+1
 33425                           tosu	equ	0xFFF
 33426                           tosh	equ	0xFFE
 33427                           tosl	equ	0xFFD
 33428                           pclatu	equ	0xFFB
 33429                           pclath	equ	0xFFA
 33430                           tblptru	equ	0xFF8
 33431                           tblptrh	equ	0xFF7
 33432                           tblptrl	equ	0xFF6
 33433                           tablat	equ	0xFF5
 33434                           prodh	equ	0xFF4
 33435                           prodl	equ	0xFF3
 33436                           intcon	equ	0xFF2
 33437                           intcon2	equ	0xFF1
 33438                           intcon3	equ	0xFF0
 33439                           indf0	equ	0xFEF
 33440                           postinc0	equ	0xFEE
 33441                           fsr0h	equ	0xFEA
 33442                           fsr0l	equ	0xFE9
 33443                           wreg	equ	0xFE8
 33444                           indf1	equ	0xFE7
 33445                           postdec1	equ	0xFE5
 33446                           fsr1h	equ	0xFE2
 33447                           fsr1l	equ	0xFE1
 33448                           indf2	equ	0xFDF
 33449                           postinc2	equ	0xFDE
 33450                           postdec2	equ	0xFDD
 33451                           plusw2	equ	0xFDB
 33452                           fsr2h	equ	0xFDA
 33453                           fsr2l	equ	0xFD9
 33454                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         672
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      94
    BANK0           160     92     160
    BANK1           256      0     235
    BANK2           256      0     224
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6293_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6293_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6293_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6293_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4656$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4646$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4646$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4622$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4622$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4622$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4622$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    printfOled@buffer_rx	PTR char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> printfOled@tempBuffer(COMRAM[16]), oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), 
		 -> STR_189(CODE[12]), STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_182(CODE[5]), STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), 
		 -> STR_162(CODE[16]), STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), 
		 -> STR_158(CODE[4]), STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), 
		 -> STR_154(CODE[4]), STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), 
		 -> STR_150(CODE[4]), STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), 
		 -> STR_146(CODE[4]), STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), 
		 -> STR_142(CODE[4]), STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), 
		 -> STR_138(CODE[4]), STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), 
		 -> STR_134(CODE[16]), STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[15]), STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), 
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), 
		 -> STR_122(CODE[5]), STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), 
		 -> STR_118(CODE[2]), STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), 
		 -> STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), 
		 -> STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), 
		 -> STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), 
		 -> STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), 
		 -> STR_98(CODE[16]), STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), 
		 -> STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), 
		 -> STR_87(CODE[12]), STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), 
		 -> STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), 
		 -> STR_62(CODE[11]), STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), 
		 -> STR_42(CODE[17]), STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_InterruptTimerUART
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptTimerUART->_printfOled
    _printfOled->i2_oled_putString
    i2_oled_putString->i2_oled_putChar
    i2_oled_clear->i2_oled_clearRow
    i2_oled_clearRow->i2_oled_putChar
    i2_oled_putChar->i2_Set_Column_Address
    i2_oled_putChar->i2_Set_Page_Address
    i2_Set_Page_Address->i2_oled_writeCommand
    i2_Set_Column_Address->i2_oled_writeCommand
    _InterruptPinRX->_clearInterruptPinRX
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  730542
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  285174
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   41779
                                             23 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   41687
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41354
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44357
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  112923
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  345157
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  183048
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44227
                                             23 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44335
                                             23 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51236
                                             23 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   45636
                                             23 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   40596
                                             18 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         19    19      0   32290
                                             46 COMRAM    19    19      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                 _InterruptTimerUART
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptTimerUART                                  3     3      0    2203
                                             43 COMRAM     3     3      0
                     _TMR0_StopTimer
            _clearInterruptTimerUART
                         _printfOled
                        _reloadTimer
                       i2_oled_clear
 ---------------------------------------------------------------------------------
 (12) _printfOled                                         26    23      3    1653
                                             17 COMRAM    26    23      3
                       i2_oled_clear
                   i2_oled_putString
 ---------------------------------------------------------------------------------
 (13) i2_oled_putString                                    5     1      4     628
                                             12 COMRAM     5     1      4
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (12) i2_oled_clear                                        0     0      0     483
                    i2_oled_clearRow
 ---------------------------------------------------------------------------------
 (13) i2_oled_clearRow                                     2     2      0     483
                                             12 COMRAM     2     2      0
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (14) i2_oled_putChar                                     10     8      2     393
                                              2 COMRAM    10     8      2
               i2_Set_Column_Address
                 i2_Set_Page_Address
                   i2_oled_writeData
 ---------------------------------------------------------------------------------
 (15) i2_oled_writeData                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Set_Page_Address                                  1     1      0      67
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (15) i2_Set_Column_Address                                1     1      0      66
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (16) i2_oled_writeCommand                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptTimerUART                             0     0      0       0
                         _TMR0_Clear
 ---------------------------------------------------------------------------------
 (13) _TMR0_Clear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      1     1      0      23
                                              1 COMRAM     1     1      0
                _clearInterruptPinRX
                        _reloadTimer
                  i2_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _clearInterruptPinRX
     _reloadTimer
     i2_TMR0_StartTimer
   _InterruptTimerUART
     _TMR0_StopTimer
     _clearInterruptTimerUART
       _TMR0_Clear
     _printfOled
       i2_oled_clear
         i2_oled_clearRow
           i2_oled_putChar
             i2_Set_Column_Address
               i2_oled_writeCommand
             i2_Set_Page_Address
               i2_oled_writeCommand
             i2_oled_writeData
       i2_oled_putString
         i2_oled_putChar
           i2_Set_Column_Address
             i2_oled_writeCommand
           i2_Set_Page_Address
             i2_oled_writeCommand
           i2_oled_writeData
     _reloadTimer
     i2_oled_clear
       i2_oled_clearRow
         i2_oled_putChar
           i2_Set_Column_Address
             i2_oled_writeCommand
           i2_Set_Page_Address
             i2_oled_writeCommand
           i2_oled_writeData
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E0       9       87.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EB       7       91.8%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     41      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     349      14        0.0%
DATA                 0      0     349       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 18:15:55 2018

                         _InterruptTimerUART 26F6             __size_of_moteApp_lightStringSize 0006  
                                 _USB_SD_Ptr 75EF                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                   __end_ofi2_oled_putString 4FB4                        ??_moteApp_testSensors 00AC  
                                         l60 2F02                                           l65 2F04  
                                         l57 2EA0                                           l66 2F16  
                          ??_CMP1_Initialize 0060                                           l67 2F2C  
                                 _USB_Buffer 02A0                    _MOTEapp_getModuleResponse 4EE8  
                                         _cs 0143               moteJoiningProcess@selectButton 0078  
                              _USBDeviceInit 2A9A                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 5A98  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 0068  
                            _timer0ReloadVal 0138                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
                        ?_InterruptTimerUART 0001               __end_of_moteApp_setLightString 4E18  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l111 5658                                          l112 5640  
                                        l130 3A8E                                          l123 3A36  
                                        l127 3AA6                                          l400 10B4  
                                        l128 3A4E                                          l129 3A6E  
                                        l410 11DE                                          l402 1128  
                                        l420 12CC                                          l412 122E  
                                        l404 1146                                          l340 484A  
                                        l500 0712                                          l405 117E  
                                        l341 485A                  __end_of_USBStdGetDscHandler 2E26  
                                        l422 131E                                          l414 123E  
                                        l502 0750                                          l431 1418  
                                        l343 4870                                          l424 134A  
                                        l416 1294                                          l408 11B6  
                                        l600 23BA                                          l512 08E6  
                                        l504 078C                                          l441 149A  
                                        l601 23CA                                          l337 4828  
                                        l434 143A                                          l418 12A4  
                                        l530 0ACC                                          l522 0A20  
                                        l370 215C                                          l443 14A4  
                                        l435 1448                                          l427 1360  
                                        l355 58F6                                          l523 0B5C  
                                        l531 0AE4                                          l363 210A  
                                        l348 568A                                          l524 0B14  
                                        l532 0AFC                                          l516 0940  
                                        l508 07FA                                          l460 0260  
                                        l605 598C                                          l349 5672  
                                        l437 147C                                          l429 13B8  
                                        l621 4F26                                          l701 5022  
                                        l541 0BFA                                          l525 0A84  
                                        l517 09B2                                          l509 084E  
                                        l381 22F2                                          l373 21EC  
                                        l365 2110                                          l390 14E6  
                                        l550 0CAC                                          l518 097E  
                                        l462 026C                                          l382 220C  
                                        l366 2126                                          l439 1490  
                                        l391 101A                                          l703 5054  
                                        l711 4AC8                                          l543 0CF4  
                                        l551 0CC4                                          l535 0B82  
                                        l527 0B3E                                          l519 0994  
                                        l383 225C                                          l367 213E  
                                        l704 506A                                          l720 4B18  
                                        l560 0D56                                          l552 0CDC  
                                        l544 0C4E                                          l528 0A9C  
                                        l480 03EA                                          l472 02D4  
                                        l464 02CA                                          l376 22D6  
                                        l721 4B2A                                          l561 0D72  
                                        l537 0B9E                                          l529 0AB4  
                                        l385 22C2                                          l377 220A  
                                        l369 214E                                          l626 4F4A  
                                        l642 3C5C                                          l466 0FB8  
                                        l562 0D8E                                          l554 0D36  
                                        l546 0D24                                          l490 079E  
                                        l482 03F6                                          l395 152E  
                                        l731 543A                                          l643 3C46  
                                        l563 0DAA                                          l547 0C64  
                                        l491 05BC                                          l483 04BC  
                                        l467 02D2                                          l459 02B6  
                                        l636 5712                                          l396 101C  
                                        l708 4A98                                          l732 544C  
                                        l724 4B4C                                          l572 0F16  
                                        l580 0EE6                                          l556 0DDE  
                                        l564 0DC6                                          l548 0C7C  
                                        l492 06D2                                          l484 04DA  
                                        l476 0330                                          l637 56FC  
                                        l397 102C                                          l725 4B5E  
                                        l661 5814                                          l645 3C7C  
                                        l581 0EFE                                          l573 0E70  
                                        l565 0E08                                          l557 0D3C  
                                        l549 0C94                                          l485 04FA  
                                        l477 0384                                          l398 1036  
                                        l750 4DF8                                          l582 0F46  
                                        l566 0E4A                                          l494 064E  
                                        l591 23DA                                          l647 3CF4  
                                        l495 065C                                          l592 234A  
                                        l672 381E                                          l648 3CB2  
                                        l584 0F5E                                          l576 0E86  
                                        l568 0E6A                                          l593 2414  
                                        l585 0F64                                          l577 0E9E  
                                        l569 0E66                                          l497 069A  
                                        l489 0592                                          l850 407E  
                                        l594 235A                                          l666 377E  
                                        l690 4642                                          l738 5246  
                                        l658 5802                                          l578 0EB6  
                                        l498 069E                                          l851 3FEC  
                                        l595 236A                                          l739 5258  
                                        l579 0ECE                                          l852 4038  
                                        l596 237A                                          l684 45D6  
                                        _BDT 000400                                          l941 4D10  
                                        l845 4066                                          l853 4040  
                                        l597 238A                                          l669 3810  
                                        l942 4D0C                                          l846 3FEA  
                                        l598 239A                                          l686 45FA  
                                        l855 4046                                          l599 23AA  
                                        l679 32C0                                          _CKE 007E3E  
                                        l880 35EE                                          l688 461E  
                                        l882 361C                                          l946 4D38  
                                        l938 4D16                                          l947 4D3A  
                                        l884 366C                                          l885 3694  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                      ?_oled_initialDispayLine 0001  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 100E                                          _UIE 000F64  
                                        _UIR 000F65                              _timer1ReloadVal 0048  
                                        _log 02E8                                   _USBSuspend 586E  
                               ___awmod@sign 0065                 __end_of_moteApp_clearBuffers 465A  
               __end_of_moteApp_clearCommand 5BBA                     __end_ofi2_oled_writeData 5B54  
                  i2oled_putChar@station_dot 0003                         USBStdSetCfgHandler@i 0016  
                            _TMR2_Initialize 5B2C                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 2968                               _USBDeviceState 00EC  
                               ___flmul@aexp 0085                                 ___flmul@bexp 0086  
                               ___flmul@sign 0080                                 ___flmul@temp 008B  
                               ___flmul@prod 0087                        moteApp_delayms@length 0060  
               MOTEapp_SetDataRateSetting@dr 0064                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 012E                               ??_getsUSBUSART 006A  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 0077  
                               ___fltol@exp1 0069                                         l1040 4926  
                                       l1032 4366                                         l1033 43E0  
                                       l1221 5588                                         l1045 4D50  
                                       l1230 54D8                                         l1055 5920  
                                       l1218 5560                                         l1066 58DA  
                                       l1219 555E                                         l2220 25FC  
                                       l1228 54B6                                         l2221 2606  
                                       l1229 54DA                                         l2222 2634  
                                       l2214 25F0                                         l1246 53AC  
                                       l2224 26F2                                         l2232 26B6  
                                       l2216 25DA                                         l2320 421C  
                                       l2233 2694                                         l2225 2646  
                                       l2321 4230                                         l1338 5ABA  
                                       l2226 264A                                         l2218 25E4  
                                       l2323 424E                              _timer3ReloadVal 0046  
                                       l2236 26D0                                         l2228 268A  
                                       l2324 4242                                         l2237 26D4  
                                       l2229 2668                                         l2190 3F06  
                                       l2191 3EE0                                         l2327 4276  
                                       l2184 3F2C                                         l2328 4284  
                                       l2440 4CBC                                         l2432 4C78  
                                       l2329 429A                                         l2441 4CCA  
                                       l2433 4C84                                         l2186 3EA6  
                                       l2435 4C9A                                         l2188 3EAE  
                                       l2196 5956                                         l1556 5506  
                                       l2700 195C                                         l2436 4C92  
                 USBConfigureEndpoint@handle 0007                                         l1901 3D46  
                                       l2189 3EDA                                         l2701 1920  
                                       l2710 1A36                                         l1903 3DA2  
                                       l2711 19FC                                         l2439 4CB2  
                                       l2720 1ACE                                         l2704 19D8  
                                       l1921 5628                                         l2705 19B6  
                                       l2801 17CC                                         l2481 36BA  
                                       l1922 5626                                         l2714 1A20  
                                       l2706 19C4                                         l2490 373E  
                                       l2811 5288                                         l2723 1AF2  
                                       l2715 1A24                                         l2707 19C8  
                                       l2803 1810                                         l2483 3726  
                                       l2812 527E                                         l2820 4770  
                                       l2740 1BA6                                         l2732 1B32  
                                       l2804 182E                                         l2492 3766  
                                       l2484 3716                                         l1861 2B1A  
                                       l2821 47D2                                         l2741 1BA8  
                                       l2725 1B08                                         l2581 547E  
                                       l1862 2B08                                         l2670 5394  
                                       l2718 1ABE                                         l2750 1BF2  
                                       l2806 1852                                         l2830 24CA  
                                       l2582 5478                                         l2735 1B78  
                                       l2727 1B12                                         l2807 1870  
                                       l1864 2B42                                         l2760 1D02  
                                       l2832 24DC                                         l2680 5324  
                                       l2665 5372                                         l2761 1D2A  
                                       l2753 1C36                                         l2489 374A  
                                       l2833 24D0                                         l2585 5494  
                                       l2666 536A                                         l2754 1C32  
                                       l2586 549C                                         l1859 2AE0  
                                       l2819 47DA                                         l2739 1B9E  
                                       l2763 1D50                                         l2843 256A  
                                       l2835 251A                                         l2692 18B8  
                                       l2756 1C7C                                         l2844 259C  
                                       l2836 2502                                         l2828 249C  
                                       l2685 5746                                         l2669 538A  
                                       l2693 18B4                                         l2773 1DBE  
                                       l2749 1BF6                                         l2829 24AC  
                                       l2686 5734                                         l2766 1D86  
                                       l2758 1CA4                                         l2790 15D4  
                                       l2838 254C                                         l2775 1E02  
                                       l2767 1D68                                         l2759 1D52  
                                       l2783 1566                                         l2839 2540  
                                       l2679 5346                                         l2776 1E26  
                                       l2784 1562                                         l2697 1900  
                                       l2777 1E50                                         l2785 1576  
                                       l2698 18FC                                         l2778 1E5C  
                                       l2794 1794                                         l1899 3D1C  
                                       l2779 1E5E                                         l2795 1776  
                                       l2787 15A6                                         l2788 15A2  
                                       l2789 15B6                                         l8222 5324  
                                       l8048 5918                                         l9176 1E50  
                                       l7908 54A4                                         l9622 4770  
                                       l8670 4DF0                                         l8592 53A4  
                                       l9652 45CE                                         l9726 501A  
                                       l9664 45F2                                         l7898 491E  
                                       l9578 4A90                                         l9676 4616  
                                       STR_1 7D1E                                         l9688 463A  
                                       l9776 3C74                                         STR_2 7D00  
                                       STR_3 7D0F                                         STR_4 7F3D  
                                       STR_5 7D8A                                         STR_6 7D97  
                                       STR_7 7CC3                                         STR_8 7E70  
                                       STR_9 7F46                              _lightStringSize 00ED  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 0020  
                                       _PEIE 007F96                                         u7020 19E0  
                                       u8020 5262                                         u7230 1B84  
                                       u7150 1B16                                         u8120 479E  
                                       u8040 5456                                         u9010 4CE2  
                                       u8210 4636                                         u7180 1B2E  
                                       u6620 53C4                                         u8300 506E  
                                       u8150 52BC                        ??_USBCtrlTrfTxService 0001  
                                       u7440 1DBA                                         u8400 37EE  
                                       u8080 4AF6                                         u6570 4D70  
                                       u8170 45EE                                         u8250 4B34  
                                       u8330 3C98                                         u8420 3E9A  
                                       u6590 4D9E                                         u7470 1E10  
                                       u7630 17C8                                         u8190 4612  
                                       u8270 4B68                                         _UCFG 000F62  
                                       u7480 1E34                                         u7800 3750  
                                       u7720 4C9E                                         u6577 4D66  
                                       u7570 15C2                                         u6690 4E14  
                                       u8428 3E9E                                         u7660 181E  
                                       u7580 1738                                         _UEP0 000F6A  
                                       u6597 4D94                                         _UEP1 000F6B  
                                       u7670 183C                                         u7910 2556  
                                       u7830 5482                                         u8480 25CE  
                                       u7760 36D8                                         u7585 172E  
                                       u8570 26BE                                         u8730 4252  
                                       u9290 14AC                                         u6970 198C  
                                       u9530 06A2                                         u9450 0508  
                                       u9370 02E2                                         _UEIE 000F66  
                                       u6980 199C                                         u9700 0BAC  
                                       u9620 08F2                                         u7765 36CE  
                                       u6990 199E                                         u8488 25D2  
                                       u8770 5376                                         u8850 3A1E  
                                       u9580 07AC                                         _UEIR 000F67  
                                       _UCON 000F60                                         u7985 5516  
                                       u7986 5518                                         _TMR0 000FD6  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 0134       USBStdFeatureReqHandler@current_ep_data 0019  
                       ??_InterruptTimerUART 002C                                         _pDst 0136  
                                       _main 2E26                     ??i2_USBTransferOnePacket 0005  
                            _TMR0_StartTimer 5C80            __end_of_moteApp_add8bToDataBuffer 3FE8  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       indf0 000FEF                                         fsr2h 000FDA  
                                       fsr0l 000FE9                                         indf1 000FE7  
                                _BaudRateGen 0126                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                            _USBDeviceAttach 5600                                         btemp 005F  
                              __CFG_BORV$190 000000                 moteApp_addToDataBuffer@index 0075  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 5C46                                         start 0108  
                              __CFG_IESO$OFF 000000                              ___fldiv@new_exp 009E  
                            __end_of_EndLine 5BD8                              _TMR3_Initialize 595A  
                                _storedLight 01DE                  __end_of_USBapp_exitCDCState 5C10  
                           __end_of_CMP1_ISR 5C98                              ?_oled_putString 0072  
                 __end_of_USBCheckStdRequest 33F6                       ??_USBCtrlTrfOutHandler 0014  
                __size_of_moteRunningProcess 0F02                             ?_oled_setDisplay 0001  
                              __CFG_MCLRE$ON 000000                              ?i2_oled_putChar 0003  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 5C68                         ??_moteJoiningProcess 0079  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 5C68  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 59BC                       _moteApp_getLightString 5BD8  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 5BAA                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 5AC4                                        l10510 12A0  
                                      l10526 131A                                        l11504 2B3A  
                                      l10560 1414                                        l10448 1124  
                                      l10548 13B4                                        l10494 123A  
                                      l10830 0654                                        l10576 1478  
                                      l11298 5734                                        l11476 2AD8  
                     ??i2_Set_Column_Address 0002                                ___fltol@sign1 0068  
                i2oled_putString@station_dot 000F                              __end_of___almod 42AC  
                            __end_of___fladd 1BC4                                        ?_main 0001  
                            __end_of___fldiv 1E7A                              __end_of___lbdiv 54A0  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 4CD4                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 1886                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3778                              _TMR1_StartTimer 5C7C  
                            __end_of___lldiv 4A02                                        u10160 2AFC  
                                      u10250 408A                                        u10340 2178  
                                      u10190 2B9E                                        u11307 32E8  
                                      u11227 3A9E            __size_of_MOTEapp_setResponseReady 0008  
                                      u11317 32FA                                        u11237 3238  
                                      u11407 233E                                        u11327 5648  
                                      u11247 324A                                        _T1CON 000FCD  
                                      u11417 241C                                        u11337 0794  
                                      u11257 325C                       __end_of_USBDeviceTasks 2A9A  
                                      u11427 242E                                        u11347 4A12  
                                      u11267 3282                                        u11437 2440  
                                      u11357 4A26                                        u11277 3294  
                                      u11447 14B4                                        u11367 4A3A  
                                      u11287 32A6                                        _T2CON 000FBA  
                                      u11457 14C6                                        u11377 5902  
                                      u11297 32D6                                        u11467 14D8  
                                      u11387 231A                                        u11477 567A  
                                      u11397 232C                      __end_of_sendDataCommand 3D02  
                                      _T3CON 000FB1                    ?_USBCtrlEPServiceComplete 0001  
                            __end_of___lwmod 539E                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0079                                        i2l923 5074  
                                      i2l917 5080                                        i2l925 507A  
                                      i2l870 51B6                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                           ?i2_oled_clearRow 0001                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00C4                              __end_of_delayms 5666  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                                  ?_TMR0_Clear 0001  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000              __end_of_USBCtrlEPAllowDataStage 4498  
                          oled_putChar@index 006B                             __end_of_TMR0_ISR 5C88  
                           __end_of_TMR1_ISR 5BF0                                        _sd000 79B4  
                                      _sd001 796E              service_pushbutton@Release_Timer 00E4  
                                      _sd002 793A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 5A18                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 5AC4  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _n_bit 005C                                        _light 013E  
                        _clearInterruptPinRX 5BF0                                        _stops 0144  
                             __pbitbssCOMRAM 02E8                      __end_of_TMR1_Initialize 56CA  
                               _runningState 00F3                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                          __end_of_CDCInitEP 4EE8                   oled_setDisplay@displayType 0061  
                  i2Set_Page_Address@address 0002                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 0060  
                            _TMR2_StartTimer 5C78                              __end_of_strncmp 47F6  
                            ___lbdiv@divisor 0060                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                        i2oled_putString@index 0011  
                           __end_ofi2_memset 5844                              ___lbdiv@counter 0062  
                               _m10SecTicker 013C                 __end_of_moteApp_getTempValue 5462  
               __size_ofi2_oled_writeCommand 0014                              putUSBUSART@data 0060  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 4498                        TMR2_ReadTimer@readVal 0060  
              __size_of_TMRapp_ClearBitFlags 0008                  __size_ofi2_Set_Page_Address 0010  
                                 _InitSwUart 59DC                                 __end_of_main 2F3E  
                      _control_signal_bitmap 0140                         ?_clearInterruptPinRX 0001  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 597C  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 5B40  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00BC  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 005E                              _TMR3_StartTimer 5C74  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 55C8                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 00E8  
                               ?_reloadTimer 0001                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 0141  
           moteApp_convertSensorValue@string 0072                      __end_of_TMR0_StartTimer 5C84  
                    __end_of_USBDeviceAttach 5634                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00D6                            _getsUSBUSART$6657 006B  
                                     _ACTCON 000FB5                                       STR_100 7B87  
                                     STR_101 7C83                                       STR_110 7C83  
                                     STR_102 7C63                                       STR_103 7C53  
                                     STR_111 7C20                                       STR_104 7C83  
                                     STR_112 7CD3                                       STR_120 7B65  
                                     STR_121 7F87                                       STR_113 7CE2  
                                     STR_105 7C42                                       STR_130 7CE2  
                                     STR_122 7FC2                                       STR_106 7ECA  
                                     STR_114 7C73                                       _ADRESH 000FC4  
                                     STR_131 7CD3                                       STR_115 7C63  
                                     STR_107 7E51                                       STR_123 7DCB  
                                     STR_132 7C63                                       STR_108 7B10  
                                     STR_124 7FE0                                       STR_140 7FCF  
                                     STR_116 7F80                                       STR_133 7C53  
                                     STR_109 7AFF                                       STR_125 7FEC  
                                     STR_141 7FD3                                       STR_117 7F79  
                                     STR_134 7C83                                       STR_126 7FE4  
                                     STR_150 7FEF                                       STR_118 7FFA  
                                     STR_142 7FD7                                       _ADRESL 000FC3  
                                     STR_127 7FE8                                       STR_143 7FDB  
                                     STR_135 7BED                                       STR_151 7BCB  
                                     STR_119 7B76                                       STR_160 7B21  
                                     STR_144 7FF3                                       STR_128 7FEF  
                                     STR_136 7E58                                       STR_152 7C93  
                                     STR_137 7C73                                       STR_129 7C73  
                                     STR_153 7FC7                                       STR_145 7FDB  
                                     STR_161 7B87                                       STR_162 7C83  
                                     STR_154 7FCB                                       STR_146 7FDF  
                                     STR_138 7FC7                                       STR_170 7DCD  
                                     STR_155 7FCF                                       STR_147 7FEB  
                                     STR_139 7FCB                                       STR_171 7DDA  
                                     STR_163 7CA3                                       STR_156 7FD3  
                                     STR_180 7F71                                       STR_148 7FE3  
                                     STR_164 7D7F                                       STR_172 7CF1  
                                     STR_157 7FD7                                       STR_181 7F69  
                                     STR_149 7FE7                                       STR_173 7F2B  
                                     STR_165 7D8C                                       _EEDATA 000FA8  
                                     STR_174 7A05                                       STR_182 7AC7  
                                     STR_158 7FDB                                       STR_166 7D99  
                                     STR_159 7FF3                                       STR_167 7DA6  
                                     STR_175 7A22                                       STR_183 79D3  
                                     STR_168 7DB3                                       STR_176 7A3C  
                                     STR_184 79B8                                       STR_169 7DC0  
                                     STR_185 7A56                                       STR_177 79EE  
                                     STR_186 7A6C                                       STR_178 7A08  
                                     STR_179 7F58                                       STR_187 7F10  
                                     STR_188 7F61                                       STR_189 7E28  
                                     _EECON2 000FA7                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 007A  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 0148  
                                     i2l1040 4B98                                       i2l2001 2DAE  
                                     i2l2002 2DFE                                       i2l1140 530C  
                                     i2l2100 1FB0                                       i2l2004 2E06  
                                     i2l2012 433E                                       i2l1300 00BC  
                    __end_of_TMR3_Initialize 597C                                       i2l1045 4F5A  
                                     i2l2101 1FCC                                       i2l2013 42C8  
                                     i2l1150 2782                                       i2l2110 20B8  
                                     i2l2014 42CE                                       i2l2022 541E  
                                     i2l2030 5784                                       i2l1055 59CA  
                                     i2l1151 278A                                       i2l2103 202C  
                                     i2l2015 42EC                                       i2l2023 541C  
                                     i2l2031 5782                                       i2l1240 57C4  
                                     i2l1144 2812                                       i2l1152 2798  
                                     i2l2104 2038                                       i2l2008 4328  
                                     i2l1153 27A0                                       i2l1145 26F8  
                                     i2l2105 20AC                                       i2l2009 42B8  
                                     i2l1242 57E6                                       i2l1234 57B6  
                                     i2l1170 40AC                                       i2l1146 2730  
                                     i2l1235 57B2                                       i2l2051 5124  
                                     i2l1172 40B8                                       i2l1148 282E  
                                     i2l1156 27C8                                       i2l2060 354E  
                                     i2l2108 2066                                       i2l2036 39DE  
                                     i2l1157 2804                                       i2l1149 2740  
                                     i2l2037 39D8                                       i2l1174 411E  
                                     i2l2062 356E                                       i2l2038 3978  
                                     i2l1175 4132                                       i2l2072 33B2  
                                     i2l2065 35B4                                       i2l2057 3508  
                                     i2l2049 50DC                                       i2l2081 335A  
                                     i2l2073 3324                                       i2l2058 350E  
                                     i2l2162 41DA                                       i2l2090 1EA2  
                                     i2l2082 3378                                       i2l1290 006C  
                                     i2l2059 3588                                       i2l2163 4174  
                                     i2l2083 3394                                       i2l2075 332E  
                                     i2l2092 1F0C                                       i2l2076 3334  
                                     i2l1292 007C                                       i2l2165 418C  
                                     i2l2077 333A                                       i2l2166 419A  
                                     i2l2094 1F4C                                       i2l2078 334E  
                                     i2l1294 0088                                       i2l2167 41B8  
                                     i2l2095 1F4E                                       i2l2079 3354  
                                     i2l2168 41D0                                       i2l2096 1F66  
                                     i2l1296 0092                                       i2l2089 1E9E  
                                     i2l1297 00A2                                       i2l1289 0060  
                                     i2l2602 49AE                                       i2l2098 1FE6  
                                     i2l2603 49A2                                       i2l1299 00B8  
                                     i2l1901 3E00                                       i2l2606 49E2  
                                     i2l2607 49F0                                       i2l1903 3E5C  
                                     i2l1941 4596                                       i2l1861 2C48  
                                     i2l1862 2C34                                       i2l1870 297E  
                                     i2l1935 4448                                       i2l1951 30EE  
                                     i2l1871 298A                                       i2l1960 386C  
                                     i2l1864 2C6E                                       i2l1880 29F0  
                                     i2l1872 2992                                       i2l1689 5A0C  
                                     i2l1929 3BC8                                       i2l1937 4464  
                                     i2l1881 2A14                                       i2l1962 3876  
                                     i2l1946 30C8                                       i2l1882 2A20  
                                     i2l1874 29A6                                       i2l1947 3072  
                                     i2l1859 2C0C                                       i2l1891 2A92  
                                     i2l1875 29B2                                       i2l1964 38D8  
                                     i2l1884 2A30                                       i2l1965 38A0  
                                     i2l2685 5832                                       i2l1877 29D6  
                                     i2l1894 552A                                       i2l2686 5822  
                                     i2l1975 2884                                       i2l1895 5538  
                                     i2l1887 2A56                                       i2l1879 29E6  
                                     i2l1968 3918                                       i2l1976 2862  
                                     i2l1969 38E0                                       i2l1889 2A76  
                                     i2l1978 28F8                                       i2l1979 28DE  
                                     i2l1899 3DD6                                       i2l1995 2E0E  
                                     i2l1987 3440                                       i2l1996 2D0A  
                                     i2l1989 34B4                                       i2l1998 2D1E  
                                     i2l1999 2DA6                                       i2l8170 5822  
                                     i2l8092 3876                                       i2l8350 3438  
                                     _TABLAT 000FF5                                       i2l8530 4B90  
                      __size_ofi2_oled_clear 001A                                       i2l7940 51AE  
                                     i2l9472 59C2                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 25AE                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 527C                            _shortPacketStatus 0056  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 45C8                         _moteApp_clearCommand 5BAA  
                    _moteApp_lightStringSize 5C56                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 5A34  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 5818  
                        __size_of_TMR0_Clear 0004                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0014                      __end_of_TMR1_StartTimer 5C80  
                               ?_putUSBUSART 0060                        ??_clearInterruptPinRX 0001  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 5898                                    ??___fldiv 0095  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0280  
                       __end_of_getsUSBUSART 3F32                                    ??___lwmod 0064  
                          _USBEnableEndpoint 551A              __size_of_USBStdGetStatusHandler 00A8  
                        _EUSART_Transmit_ISR 578A                                       _memcpy 5312  
                           ?_TMR0_Initialize 0001                                       _memset 572A  
                                     clear_0 44EE                                       clear_1 44FA  
                                     clear_2 4506                                       clear_3 4512  
                                     clear_4 4520                                       _parity 0145  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           printfOled@numBytes 0014  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                                     _status 0059                      __end_of_DATAEE_ReadByte 5ADA  
                                     _strcmp 527C                   __end_of_ADC_TempConversion 322C  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                            _moteApp_delayms 5666                  __size_of_service_pushbutton 006E  
                               __pdataCOMRAM 005E                                 _CDCTxService 25AE  
                               i2_oled_clear 5A68                                 __mediumconst 75EE  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                                  ?_CMP1_ISR 0001                      __end_of_TMR2_StartTimer 5C7C  
                               _dataRateRead 014C                                  _CtrlTrfData 000438  
                                  ??_strncmp 0066                             ___lbdiv@dividend 0061  
                              ?_oled_devInit 0001                         ?_EUSART_Transmit_ISR 0001  
                       _controlTransferState 0055                    USBapp_Handler@buttonPress 0077  
                       _USBapp_getrxByteFlag 5C62                             ?_TMR1_Initialize 0001  
                       __CFG_LS48MHZ$SYS48X8 000000                   i2oled_putString@start_page 0010  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 5844                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 0070  
                                 __accesstop 0060                      __end_of__initialization 4526  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5B68                       i2oled_putString@string 000D  
                         ?_SYSTEM_Initialize 0001                           oled_writeData@data 0060  
                              ___rparam_used 000001                                ?_oled_setFont 0060  
                   __size_of_USBStallHandler 0042                                   ___fltol@f1 0060  
                              ?_oled_putChar 0062                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0042                                ?_oled_putint8 0077  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 5556  
                                ?_InitSwUart 0001                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 79B8                                __end_of_sd001 79A2  
                              __end_of_sd002 796E                                 __pidataBANK0 5C4E  
                               __pidataBANK1 5C98                          ??_SYSTEM_Initialize 0062  
                    __end_of_TMR3_StartTimer 5C78                                    ?_TMR0_ISR 0001  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 009E                             _DATAEE_WriteByte 54DE  
              __size_of_USBConfigureEndpoint 0094      __end_of_oled_setContrastControlRegister 5B18  
   __size_of_oled_setContrastControlRegister 0014             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 5B04  
                          ?i2_oled_putString 000D                  __end_of_USBCtrlTrfInHandler 35BA  
                           ?_TMR2_Initialize 0001                         i2oled_clearRow@index 000E  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 3DC0                              __CFG_PCLKEN$OFF 000000  
                         ??i2_oled_putString 0011                     ?_clearInterruptTimerUART 0001  
                 i2oled_writeCommand@command 0001                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F7                            _CDCTxService$6705 0068  
                                 _cdc_notice 01C0                                    ?i2_memset 0001  
                                 _cdc_rx_len 00DD                            ?i2_oled_writeData 0001  
                                 _cdc_tx_len 00DC                         _moteApp_getTempValue 5422  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01E3  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01B0  
                           ?_TMR0_StartTimer 0001                           ??i2_oled_writeData 0001  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 586E                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 42AC                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00BC                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                       __end_of_EUSART_Write 54DE                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0076  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                           ??i2_oled_putChar 0005                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0074                              _periodicUpValue 00FE  
                  ??_moteApp_lightStringSize 0060                  __size_of_EUSART_Receive_ISR 0030  
                        oled_putString@index 0076                               ??_oled_putChar 0064  
                __size_of_USBWakeFromSuspend 0030                                  _pBDTEntryIn 00CA  
                     __size_of_oled_clearRow 0026                                   _clearLight 01D9  
                __end_of_moteApp_testSensors 3B80                     sendDataCommand@byteCount 0067  
           __end_of_USBCtrlEPServiceComplete 3142             __end_of_MOTEapp_setResponseReady 5C46  
                             ??_oled_putint8 0079                       oled_putChar@start_page 0063  
                __size_of_USBCheckCDCRequest 00B0                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0030                      ?_moteApp_getLightString 0060  
                           ??_oled_writeData 0060                         USBCtrlTrfRxService@i 0012  
                               ?_TMRapp_Tick 0001                      __size_of_TMR0_StopTimer 0004  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 5698  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 0112                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A2                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 3920  
                    _moteApp_addToDataBuffer 5014                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 00D3                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 2968                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 3314                                _eusartRxCount 00F5  
                          _configDescriptor1 78F7                                      i2l11212 40A4  
                                    i2l10190 4F52                                      i2l11218 40B0  
                                    i2l11352 3970                                      i2l11418 2C66  
                                    i2l12350 5098                                      i2l11390 2C04  
                                    i2l12352 50C8                                      i2l11918 2A28  
                                  ?___xxtofl 0060                                      _RS232cp 00E5  
                        i2_oled_writeCommand 5B54                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0060  
                               ??_TMR0_Clear 0001                                   ??i2_memset 0007  
                         __size_of_test_oled 008A                         __size_of_moduleSleep 0026  
                __end_of_USBCtrlTrfTxService 3920                         __size_of_moteHandler 021A  
                        _USBStdSetCfgHandler 33F6                                      _OSCCON2 000FD2  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                                    _TBLPTRU 000FF8                                      _OSCTUNE 000F9B  
                     __size_of_oled_putUint8 008A               USBapp_LEDUpdateStatus@ledCount 004A  
                            __CFG_WDTPS$8192 000000          __size_of_moteApp_convertSensorValue 007E  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 5B7A  
                             ??_moduleResync 0065                          ?_USBCheckStdRequest 0001  
                       __size_of_reloadTimer 000A                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 012E                          __size_of_InitSwUart 001E  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                      ADC_TempConversion@val 00A8                                      _UIRbits 000F65  
                     test_switch@buttonCheck 007A              moteRunningProcess@bufferReadPos 00B4  
                                    _EndLine 5BCA                                _cdc_trf_state 00EB  
                       DATAEE_WriteByte@bAdd 0061                              _countBitsSilent 0057  
                    __size_of_USBapp_exitCDC 0006                  __size_of_InterruptTimerUART 013E  
                 __end_of_moteRunningProcess 100E                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                          printfOled@buffer_rx 0012  
                 ?_moteApp_add8bToDataBuffer 0066                         ?i2_oled_writeCommand 0001  
                                    _pCDCDst 012E                                      _pCDCSrc 0131  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 5BE4  
                     InterruptTimerUART@mask 002E           __end_of_MOTEapp_SetDataRateSetting 245A  
                 _MOTEapp_SetDataRateSetting 22F8                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 4E80  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00B9                             _Set_Page_Address 5B18  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 41FE                           __end_of_TMR0_Clear 5C8C  
                                    ___fladd 1886                            _timerMinTickCount 013A  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 0526  
                                    ___fldiv 1BC4                                      ___lbdiv 5462  
                                    ___awmod 4C62                                      ___flmul 1534  
                           ?_TMR3_StartTimer 0001                                      ___fltol 369A  
                                    ___lldiv 4980                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0028                            ??_USBStallHandler 0001  
                                    ___lwmod 535A                         oled_putint8@negative 0079  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0026  
                                    __pcinit 4498                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793A  
                                    __ramtop 0800                                      _delayms 5634  
                          hexToStr@character 0060                                      __ptext0 2E26  
                                    __ptext1 4BF0                                      __ptext2 39EE  
                                    __ptext3 465A                                      __ptext4 4FB4  
                                    __ptext5 4E18                                      __ptext6 322C  
                                    __ptext7 5634                                      __ptext8 3ABA  
                                    __ptext9 20DE                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 004C  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 5C5C  
                            __size_of_strcmp 004C                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countRX 0058  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 5AAE  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 590E                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 004A                __size_ofi2_Set_Column_Address 0016  
            moteApp_add8bToDataBuffer@number 0069                                   ??___xxtofl 0064  
                                  _T3CONbits 000FB1                                   _oled_clear 5A34  
                           ___awmod@dividend 0060                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 5C3E                                 _LastRS232Out 00E6  
                            i2_USBDeviceInit 2BCA                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 56FA                                      _rx_data 00E3  
               __end_of_MOTEapp_handlerState 5C24                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F7                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 002A              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 476E  
                       end_of_initialization 4526                                 _getsUSBUSART 3E7A  
              sendDataCommand@byteCount_1627 0068                           __end_of_USB_SD_Ptr 75F5  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                     __size_ofi2_oled_clearRow 0020  
                        _pBDTEntryEP0OutNext 0042                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
                              __Lmediumconst 75EE              _dummy_encapsulated_cmd_response 01CA  
                                  i2u1011_40 2C28                                    i2u1014_40 2CCA  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1008_40 39BE  
                                  i2u1041_40 52DE                                    i2u1050_40 27AA  
                                  i2u1042_48 52E0                                    i2u1052_40 27D2  
                                  i2u1051_48 27AC                                    i2u1045_40 274A  
                                  i2u1053_48 27D4                     ?_USBStdFeatureReqHandler 0001  
                                  i2u1046_48 274C                                    i2u1047_44 276A  
                                  i2u1047_45 2766                                    i2u1081_40 2A96  
                      ??i2_oled_writeCommand 0001               __end_of_MOTEapp_TimerBasedTask 599C  
                          _EUSART_Initialize 5590                            _oled_powerControl 5B8A  
                                 _rxByteFlag 00E9                   __end_ofi2_Set_Page_Address 5BCA  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 00CC                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 5014  
                          __end_of_test_oled 46E4               moteJoiningProcess@changeStates 0077  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 46E4                           __end_of_USBSuspend 5898  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 43FA  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 006D  
                         test_switch@timeout 0078                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 0075  
             moteApp_setLightString@stingPos 006D                         __end_of_oled_devInit 4A82  
                   _USBCtrlEPServiceComplete 3050                      moteApp_toggleLeds@state 0064  
                                 _responseId 0110                                   _retryCount 014A  
                           ?_moteApp_delayms 0060                                _randomPortNum 00F1  
                   _MOTEapp_setResponseReady 5C3E                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 004F                   _USBStatusStageEnabledFlag2 004E  
                              _dataRateValue 00FC                          _USBapp_handlerState 5C10  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 0078                               ?_oled_clearRow 0001  
                                 _test_comms 4E18                                   _printfOled 409C  
                     ??_moteApp_getTempValue 0065                         __end_of_oled_setFont 5B04  
                                ___fladd@grs 0073                           _Set_Column_Address 5A18  
                       __end_of_oled_putChar 4980                                ___xxtofl@sign 0068  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISEbits 000F96  
                          ??_oled_displayOff 0061                        __size_of_EUSART_Write 003E  
                       __end_of_oled_putint8 43FA                           _BothEP0OutUOWNsSet 0052  
           __size_of_moteApp_setSensorsInput 0078                                ?_test_powerup 0001  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 551A  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 5BFC                                    _USTATcopy 005A  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3142                     oled_putString@start_page 0075  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 4B00                   _moteApp_convertSensorValue 4A82  
                  __end_of_EUSART_Initialize 55C8                    __end_of_oled_powerControl 5B9A  
                    oled_putint8@station_dot 0077                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 3DC0                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 5BFC  
                                printfOled@i 002B                                  printfOled@j 002A  
                             ?_oled_putUint8 0077                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                             _TMR0_StopTimer 5C8C                                 ??_InitSwUart 0060  
                      _moteApp_getLightValue 522E                       _USBCtrlTrfSetupHandler 487A  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 487A                        __end_of_USBDeviceInit 2BCA  
                             _TMRapp_Handler 2F3E                               _USBapp_Handler 3FE8  
                       __size_of_TMRapp_Tick 0006          MOTEapp_getModuleResponse@bufferByte 0062  
                             __end_of___wmul 58C0                                __pidataCOMRAM 5C9B  
                               _EUSART_Write 54A0                        sendDataCommand@string 0061  
                          __size_of_TMR0_ISR 0004                      __end_ofi2_USBDeviceInit 2CF8  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 4D42  
                          __size_of_TMR3_ISR 001E                               _ADC_Initialize 5A4E  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 535A  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 575A  
                          _USBBusIsSuspended 0142                     oled_writeCommand@command 0060  
                             __end_of_strcmp 52C8                                  ?_oled_clear 0001  
                        start_initialization 4498                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00AD          __size_of_oled_regulorResistorSelect 0010  
                   __size_of_TMR0_Initialize 0020              __size_of_PIN_MANAGER_Initialize 0054  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 5C06              __end_of_moteApp_addToDataBuffer 5072  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 5600                            __size_ofi2_memset 002C  
                                  _OledFont0 75F7                 __end_of_USBConfigureEndpoint 45C8  
                  __size_ofi2_oled_putString 0066              __end_of_USBStdFeatureReqHandler 20DE  
                   __size_of_sendDataCommand 00BE                           __end_of_InitSwUart 59FA  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 3C44                                _periodicState 00FA  
           __size_of_clearInterruptTimerUART 0006                               _USBapp_exitCDC 5C5C  
                   __end_of_USBCtrlEPService 39EE         __end_of_USART_mySetLineCodingHandler 5184  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 512A  
                 __end_of_EUSART_FlushBuffer 53E0                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0008                                _moteModeState 014D  
                  ??_USBCtrlEPAllowDataStage 0002                       __end_of_TMR0_StopTimer 5C90  
                  __size_ofi2_oled_writeData 0014                                  ??_CDCInitEP 000D  
                             USBDeviceInit@i 0068                           _periodicTimerValue 00FD  
                     _pBDTEntryEP0OutCurrent 0044                     __size_of_TMR1_Initialize 0032  
                          ??i2_oled_clearRow 000D                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 409C  
                     __end_of_TMRapp_Handler 3050               __end_ofi2_USBTransferOnePacket 3E7A  
                       _TMRapp_ClearBitFlags 5C36                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 006A                          _USBStdGetDscHandler 2CF8  
                       _MOTEapp_handlerState 5C1A                       __end_of_ADC_Initialize 5A68  
                                __pdataBANK0 00F9                                  __pdataBANK1 01E8  
                            i2oled_putChar@k 000B                                     ??_memcpy 0066  
                                   ??_memset 0066                              ??_oled_clearRow 006C  
            MOTEapp_TimerBasedTask@timerTask 0060                          _moduleResonseBuffer 0150  
                                   ??_strcmp 0064                                  ?_test_comms 0001  
                                ?_printfOled 0012                    oled_putString@station_dot 0074  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                             _InterruptPinRX 52C8                       _USBActiveConfiguration 005B  
             __end_of_USBStdGetStatusHandler 4354                                    ___fldiv@a 0091  
                                  ___fldiv@b 008D                  __end_of_EUSART_Transmit_ISR 57BA  
                                  ___flmul@a 0078                                    ___flmul@b 0074  
                                __pbssCOMRAM 0042                   service_pushbutton@PB_Timer 012A  
                              __pcstackBANK0 0060                 __size_of_USBCtrlTrfInHandler 00E2  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 5B2C  
                          __size_of___xxtofl 0154                              ?_TMR2_ReadTimer 0001  
                                _activeState 00F4                         ?_USBStdGetDscHandler 0001  
                        i2oled_clearRow@page 000D                       __end_of_USBapp_exitCDC 5C62  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 57EA  
             moteRunningProcess@messageReady 00AD                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 5C06                   __end_of_USBWakeFromSuspend 578A  
                 __size_of_EUSART_Initialize 0038                   __size_of_oled_powerControl 0010  
                          __size_of_hexToStr 002E                              _USBStallHandler 53E0  
                               _pBDTEntryOut 0120                          __end_of_EUSART_Read 5590  
                       i2oled_writeData@data 0001                   __end_of_USBCheckCDCRequest 41FE  
                            ??_oled_putUint8 0079                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0100                              ?_TMR0_StopTimer 0001  
                ??_moteApp_add8bToDataBuffer 0067          INTERRUPT_InterruptManager@tClearPin 0041  
                          _oled_writeCommand 5A98                        __size_of_oled_devInit 0080  
                    oled_putChar@station_dot 0062                  ?_MOTEapp_SetDataRateSetting 0001  
                     _PIN_MANAGER_Initialize 51DA                       ?_moteApp_getLightValue 006E  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 0149                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 0060              __size_of_oled_initialDispayLine 0010  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 75EE                                     ?___almod 0060  
                                   ?___fladd 0060                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 008D                                    __ptext100 59DC  
                                  __ptext101 5590                                     ?___lbdiv 0060  
                                  __ptext110 575A                                    __ptext102 5B68  
                                  __ptext111 586E                                    __ptext103 5A4E  
                                  __ptext120 42AC                                    __ptext112 53E0  
                                  __ptext104 5C1A                                    __ptext121 2CF8  
                                  __ptext113 3920                                    __ptext105 5AC4  
                                  __ptext130 50CE                                    __ptext122 1E7A  
                                  __ptext114 487A                                    __ptext131 2834  
                                  __ptext123 5072                                    __ptext115 3050  
                                  __ptext107 5C46                                    __ptext140 5BE4  
                                  __ptext132 3B80                                    __ptext124 5184  
                                  __ptext116 43FA                                    __ptext108 2968  
                                  __ptext141 5C84                                    __ptext133 34D8  
                                  __ptext125 4E80                                    __ptext117 3314  
                                  __ptext109 2BCA                                    __ptext150 5ADA  
                                  __ptext142 26F6                                    __ptext134 384C  
                                  __ptext126 3DC0                                    __ptext118 33F6  
                                  __ptext151 5B54                                    __ptext143 409C  
                                  __ptext135 512A                                    __ptext127 551A  
                                  __ptext119 5818                                    __ptext160 57BA  
                                  __ptext152 5C6E                                    __ptext144 4F4E  
                                  __ptext136 55C8                                    __ptext128 4534  
                                  __ptext161 5C94                                    __ptext153 5C88  
                                  __ptext145 5A68                                    __ptext137 4980  
                                  __ptext129 414E                                    __ptext162 0000  
                                  __ptext154 5C8C                                    __ptext146 59BC  
                                  __ptext138 5C68                                    __ptext155 52C8  
                                  __ptext147 4B78                                    __ptext139 59FA  
                                  __ptext156 5C90                                    __ptext148 5B40  
                                  __ptext157 5C24                                    __ptext149 5BBA  
                                  __ptext158 5BF0                                    __ptext159 578A  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 3314  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00DF                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E2  
                               _eusartRxTail 00DE                 __size_of_moteApp_testSensors 00C6  
                               _eusartTxTail 00E1                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0082                       __end_of_InterruptPinRX 5312  
                         _moteRunningProcess 010C                            _moduleBufferIndex 00F2  
                                   ?_delayms 0060                                    _buffer_rx 0300  
               ??_INTERRUPT_InterruptManager 002F                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BB  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00A6  
                    _eusartTxBufferRemaining 00E0                         _USBTransferOnePacket 3D02  
                                  _mainState 014F                     __size_of_TMR1_StartTimer 0004  
                              ??_reloadTimer 0001                      _moteApp_setSensorsInput 4B00  
                     moteHandler@buttonPress 00BA                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 512A                                    _minTicker 0148  
                   reloadTimer@setTimerValue 0001                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 5C94                       _moteApp_setLightString 4DAE  
                                _ep_data_out 00D0                 __size_of_USBCtrlTrfRxService 0134  
                                  _secTicker 00F0                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 0060                   __end_of_InterruptTimerUART 2834  
                        oled_putint8@numData 007A                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 4A02           __end_of_oled_regulorResistorSelect 5B8A  
                 _oled_regulorResistorSelect 5B7A                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 0072                            _dataRateSelection 01EA  
                           _timerMsTickCount 00D8                                    _oled_init 56CA  
               __size_of_USBCtrlTrfTxService 00D4                            ??_TMR0_Initialize 0060  
          __end_of_MOTEapp_getModuleResponse 4F4E                               _eusartTxBuffer 0240  
                   i2oled_putChar@start_page 0004                               ___wmul@product 0064  
                                   _IOCBbits 000F86                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 5AAE  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                 __end_ofi2_Set_Column_Address 5AF0  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 0060  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 0068                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 5AF0                                    _moteState 00FF  
                        __size_of_printfOled 00B2                            ??_sendDataCommand 0066  
                              _operationType 00F7                            i2_TMR0_StartTimer 5C90  
                      __size_of_moduleResync 0084                         ??_moteRunningProcess 00AF  
                 __end_of_moteJoiningProcess 1534          __size_of_INTERRUPT_InterruptManager 0100  
                               _oled_putChar 48FE                                     i2u600_40 49B2  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 0092                __size_of_moteApp_clearCommand 0010  
                                   _PIR3bits 000FA4                                     i2u623_40 2D70  
                                   i2u623_47 2D66                                     i2u624_40 2DA0  
                                   i2u624_47 2D96                                     i2u626_40 2DF2  
                                   i2u626_47 2DE8                                     i2u619_40 346C  
                                   i2u582_40 51CE                                     i2u648_40 204C  
                  USBCtrlEPService@setup_cnt 001E                                     i2u595_40 38C8  
                                   i2u595_47 38BE                                     i2u597_40 3908  
                                   i2u597_47 38FE                                     i2u685_48 2944  
                                   i2u685_49 2958                                     i2u880_40 4F7A  
                                   i2u880_47 4F70                                     i2u882_40 4FA8  
                                   i2u882_47 4F9E                                     i2u869_48 359C  
                                   i2u869_49 35B0                                     _RCONbits 000FD0  
                       __end_of_test_powerup 4C62                                 _oled_putint8 4354  
                              ??_putUSBUSART 0063                                     i2u997_40 4136  
                         ?i2_TMR0_StartTimer 0001                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 004D                                     _SSP1CON1 000FC6  
                                   _TMR0_ISR 5C84                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 5BE4                      __size_of_oled_putString 006C  
                                   _TMR3_ISR 59FA                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                      __size_ofi2_oled_putChar 0078  
                            _oled_displayOff 5C2E                                    _test_leds 4FB4  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00AC  
                       _USBConfigureEndpoint 4534                                    _test_oled 465A  
                      ??_USBapp_exitCDCState 0060                              ?_InterruptPinRX 0001  
           __size_of_USBStdFeatureReqHandler 0264                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                        ??i2_TMR0_StartTimer 0001                           i2_Set_Page_Address 5BBA  
                          ___wmul@multiplier 0060                        ?_USBTransferOnePacket 0060  
        moteRunningProcess@sizeOfUpdate_1497 00B2                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0078                    _moteApp_add8bToDataBuffer 3F32  
                    __size_of_oled_writeData 0016                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 00B8  
                              ?i2_oled_clear 0001                                 _RemoteWakeup 0054  
                        __end_of_sendCommand 572A                                     i2_memset 5818  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 5B9A  
                      DATAEE_WriteByte@bData 0060                           _RS232_Out_Data_Rdy 00E7  
                        ?i2_Set_Page_Address 0001            moteApp_setLightString@lightString 006B  
                    __end_of_USBStallHandler 5422                          __end_of_moduleSleep 590E  
                        __end_of_moteHandler 22F8                                  _EUSART_Read 5556  
                          _moteApp_GoToSleep 3778                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0                                    copy_data0 44CA  
                           i2_oled_putString 4F4E                  __end_ofi2_oled_writeCommand 5B68  
                    _clearInterruptTimerUART 5C6E                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                                 _moduleResync 47F6  
                __end_of_USBStdSetCfgHandler 34D8                            ?_DATAEE_WriteByte 0060  
              __size_of_USBapp_getrxByteFlag 0006                          __end_of_reloadTimer 5C2E  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0077  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0072  
               clearInterruptPinRX@tClearPin 0001                             __size_of_EndLine 000E  
                  __end_ofi2_TMR0_StartTimer 5C94                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 79B4                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                             i2_oled_writeData 5B40  
                    USBStdGetStatusHandler@p 0002                                     __Hrparam 0000  
                        ??_moteApp_GoToSleep 006E                                    memcpy@tmp 006A  
                        i2oled_putChar@index 000C                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 0064                       ??_MOTEapp_handlerState 0060  
                       ??i2_Set_Page_Address 0002                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                            ??_TMR0_StartTimer 0060  
                           __size_of___almod 00AE                             __size_of___fladd 033E  
                          ??_USBDeviceAttach 0060                                   ?_test_leds 0001  
                           __size_of___fldiv 02B6                             __size_of___lbdiv 003E  
                                 ?_test_oled 0001                             __size_of___awmod 0072  
                i2Set_Column_Address@address 0002                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007A                                 _selectedFont 01E8  
                           __size_of___lldiv 0082                              _oled_setDisplay 58C0  
           moteApp_clearBuffers@counter_1714 0061             moteApp_clearBuffers@counter_1715 0062  
           moteApp_clearBuffers@counter_1716 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 595A  
                                _line_coding 01D2                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 014B  
                             ??i2_oled_clear 000F                                 ??_oled_clear 006E  
                                   ___xxtofl 245A                                  _menuTimeout 00FB  
                   __size_of_moteApp_delayms 0032                    __end_of_moteApp_GoToSleep 384C  
              __size_of_moteApp_getTempValue 0040                      __size_of_USBDeviceTasks 0132  
                                   _appTimer 00F8                                     _appState 014E  
                                   __ptext10 010C                                     __ptext11 3C44  
                                   __ptext20 5312                                     __ptext12 57EA  
                                   __ptext21 5BD8                                     __ptext13 4354  
                                 _T1GCONbits 000FCC                                     __ptext30 56CA  
                                   __ptext22 4A82                                     __ptext14 46E4  
                                   __ptext31 5AF0                                     __ptext23 5898  
                                   __ptext15 4B00                                     __ptext40 47F6  
                                   __ptext32 58C0                                     __ptext24 45C8  
                                   __ptext16 5C56                                     __ptext41 4EE8  
                                   __ptext33 4A02                                     __ptext25 5014  
                                   __ptext17 5422                                     __ptext50 1886  
                                   __ptext42 539E                                     __ptext34 5B04  
                                   __ptext26 3F32                                     __ptext18 522E  
                                   __ptext51 100E                                     __ptext43 5BFC  
                                   __ptext35 5B7A                                     __ptext27 5462  
                                   __ptext19 4DAE                                     __ptext60 41FE  
                                   __ptext52 476E                                     __ptext44 22F8  
                                   __ptext36 5B8A                                     __ptext28 4C62  
                                   __ptext61 5C36                                     __ptext53 527C  
                                   __ptext45 3142                                     __ptext37 5B9A  
                                   __ptext29 3778                                     __ptext70 5A34  
                                   __ptext62 597C                                     __ptext54 5666  
                                   __ptext46 245A                                     __ptext38 5C2E  
                                   __ptext71 590E                                     __ptext63 5BAA  
                                   __ptext55 54DE                                     __ptext47 369A  
                                   __ptext39 58E8                                     __ptext80 5C62  
                                   __ptext72 48FE                                     __ptext64 56FA  
                                   __ptext56 5C06                                     __ptext48 1534  
                                   __ptext81 5C3E                                     __ptext73 5A82  
                                   __ptext65 5BCA                                     __ptext57 5C5C  
                                   __ptext49 1BC4                                     __ptext90 595A  
                                   __ptext82 54A0                                     __ptext74 5B18  
                                   __ptext66 5C10                                     __ptext58 2F3E  
                                   __ptext91 5C74                                     __ptext83 5556  
                                   __ptext75 5A18                                     __ptext67 3FE8  
                                   __ptext59 535A                                     __ptext92 5B2C  
                                   __ptext84 25AE                                     __ptext76 5A98  
                                   __ptext68 4CD4                                     __ptext93 5C78  
                                   __ptext85 3D02                                     __ptext77 35BA  
                                   __ptext69 4D42                                     __ptext94 5698  
                                   __ptext86 2A9A                                     __ptext78 5934  
                                   __ptext95 5C7C                                     __ptext87 572A  
                                   __ptext79 3E7A                                     __ptext96 599C  
                                   __ptext88 5600                                     __ptext97 5C80  
                                   __ptext89 5844                                     __ptext98 51DA  
                                   __ptext99 5AAE         __end_of_USBapp_CdcEmulatorInitialize 51DA  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 5184  
                               _SSP1CON1bits 000FC6                                     _dotCount 0147  
                                   _hexToStr 57EA                           _service_pushbutton 4CD4  
                            ___almod@divisor 0064                            ??_TMR1_StartTimer 0060  
                            i2_oled_clearRow 59BC                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 0088               __end_of_USBCtrlTrfSetupHandler 48FE  
                              __size_of_main 0118                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0016                               _Contrast_level 005E  
                                   _rnModule 00EE                           oled_putint8@number 0080  
                                 strncmp@len 0064                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 0060                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 0072                      __end_of_oled_displayOff 5C36  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 34D8                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 0146                           __end_of_oled_clear 5A4E  
                        __end_of_test_switch 3ABA                                     _outPipes 00BC  
                       _USBCtrlTrfOutHandler 50CE                                     int$flags 005F  
                                   _usbState 00EA                         printfOled@tempBuffer 001A  
                  _USBCtrlEPAllowStatusStage 3B80                 __size_of_clearInterruptPinRX 000C  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 0108                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 56FA                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 539E  
                               ??_test_comms 0077                                 ??_printfOled 0015  
               __end_of_USBapp_setrxByteFlag 5C4E                                  _moduleSleep 58E8  
                                _moteHandler 20DE                             ??_TMR2_ReadTimer 0060  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0050  
                   CDCTxService@byte_to_send 006B                         i2_Set_Column_Address 5ADA  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 5C1A  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                _reloadTimer 5C24                                     memcpy@s1 0062  
              USBCtrlTrfTxService@byteToSend 0001                    ??_clearInterruptTimerUART 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 0190  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                             ??_TMR0_StopTimer 0001  
                        _moteApp_testSensors 3ABA                                  ??_oled_init 006E  
                ??_MOTEapp_getModuleResponse 0061                           ??_Set_Page_Address 0061  
                     __size_of_USBDeviceInit 0130                         oled_powerControl@vol 0061  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 50CE     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 5072               moteJoiningProcess@messageReady 007C  
            __end_of_moteApp_setSensorsInput 4B78                             ___lwmod@dividend 0060  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                 __size_ofi2_TMR0_StartTimer 0004                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0077                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 00B7  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 4E80                         ??_EUSART_FlushBuffer 0060  
                         __end_of_printfOled 414E                      __end_of_oled_setDisplay 58E8  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00EF  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 4D42                                  _putUSBUSART 5934  
                             i2_oled_putChar 4B78                           _EUSART_Receive_ISR 57BA  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 2834                           _USBWakeFromSuspend 575A  
                                ??_test_leds 0077                                _powerOnStatus 00F6  
                                ??_test_oled 0077                      _USBStdFeatureReqHandler 1E7A  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 369A  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 35BA  
                         _USBCheckCDCRequest 414E                          _USBCtrlTrfTxService 384C  
                        __end_of_TMRapp_Tick 5C6E                        __end_of_oled_clearRow 5934  
                                _temperature 00DA                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 5A82                        ?i2_Set_Column_Address 0001  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 0060  
                                   strcmp@s2 0062                      ?_moteApp_setLightString 006B  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 0062  
                           ??_USBapp_exitCDC 0060                              _TMR0_Initialize 599C  
                      ??_USBCtrlTrfInHandler 0012                      __end_ofi2_oled_clearRow 59DC  
                      _USBAlternateInterface 01E6                              ___lwmod@counter 0064  
                                 _TMR0_Clear 5C88                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 322C                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0053  
                                 _WDTCONbits 000FD1                                 _test_powerup 4BF0  
                            _sendDataCommand 3C44                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0077                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 522E                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0051  
                                _test_switch 39EE                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 26F6                              _TMR1_Initialize 5698  
                       __end_ofi2_oled_clear 5A82            moteJoiningProcess@joiningComplete 007B  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 476E  
                     __end_of_oled_putString 4DAE                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 75F5              __end_of_clearInterruptTimerUART 5C74  
                     __end_ofi2_oled_putChar 4BF0                             ??_InterruptPinRX 0002  
