

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 11:13:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   173                           	dabs	1,0x400,48,_BDT
   174                           	dabs	1,0x500,64,_cdc_data_tx
   175                           	dabs	1,0x438,8,_CtrlTrfData
   176                           	dabs	1,0x430,8,_SetupPkt
   177                           	dabs	1,0x540,64,_cdc_data_rx
   178  0000                     
   179                           ; Version 1.45
   180                           ; Generated 16/11/2017 GMT
   181                           ; 
   182                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   183                           ; All rights reserved.
   184                           ; 
   185                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   186                           ; 
   187                           ; Redistribution and use in source and binary forms, with or without modification, are
   188                           ; permitted provided that the following conditions are met:
   189                           ; 
   190                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   191                           ;        conditions and the following disclaimer.
   192                           ; 
   193                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   194                           ;        of conditions and the following disclaimer in the documentation and/or other
   195                           ;        materials provided with the distribution.
   196                           ; 
   197                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   198                           ;        software without specific prior written permission.
   199                           ; 
   200                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   201                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   202                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   203                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   204                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   205                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   206                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   207                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   208                           ; 
   209                           ; 
   210                           ; Code-generator required, PIC18LF45K50 Definitions
   211                           ; 
   212                           ; SFR Addresses
   213  0000                     
   214                           	psect	idataCOMRAM
   215  00593D                     __pidataCOMRAM:
   216                           	opt stack 0
   217                           
   218                           ;initializer for _Contrast_level
   219  00593D  13                 	db	19
   220                           
   221                           	psect	idataBANK0
   222  005902                     __pidataBANK0:
   223                           	opt stack 0
   224                           
   225                           ;initializer for _exitUSB
   226  005902  01                 	db	1
   227                           
   228                           ;initializer for _periodicState
   229  005903  03                 	db	3
   230                           
   231                           ;initializer for _menuTimeout
   232  005904  01                 	db	1
   233                           
   234                           ;initializer for _dataRateValue
   235  005905  02                 	db	2
   236                           
   237                           ;initializer for _periodicTimerValue
   238  005906  03                 	db	3
   239                           
   240                           ;initializer for _periodicUpValue
   241  005907  03                 	db	3
   242                           
   243                           ;initializer for _moteState
   244  005908  01                 	db	1
   245                           
   246                           	psect	idataBANK1
   247  00593A                     __pidataBANK1:
   248                           	opt stack 0
   249                           
   250                           ;initializer for _selectedFont
   251  00593A  F7                 	db	low _OledFont0
   252  00593B  75                 	db	high _OledFont0
   253                           
   254                           ;initializer for _dataRateSelection
   255  00593C  02                 	db	2
   256                           
   257                           	psect	mediumconst
   258  0075EE                     __pmediumconst:
   259                           	opt stack 0
   260  0075EE  00                 	db	0
   261  0075EF                     _USB_SD_Ptr:
   262                           	opt stack 0
   263  0075EF  B4                 	db	low _sd000
   264  0075F0  79                 	db	high _sd000
   265  0075F1  6E                 	db	low _sd001
   266  0075F2  79                 	db	high _sd001
   267  0075F3  3A                 	db	low _sd002
   268  0075F4  79                 	db	high _sd002
   269  0075F5                     __end_of_USB_SD_Ptr:
   270                           	opt stack 0
   271  0075F5                     _USB_CD_Ptr:
   272                           	opt stack 0
   273  0075F5  F7                 	db	low _configDescriptor1
   274  0075F6  78                 	db	high _configDescriptor1
   275  0075F7                     __end_of_USB_CD_Ptr:
   276                           	opt stack 0
   277  0075F7                     _OledFont0:
   278                           	opt stack 0
   279  0075F7  00                 	db	0
   280  0075F8  00                 	db	0
   281  0075F9  00                 	db	0
   282  0075FA  00                 	db	0
   283  0075FB  00                 	db	0
   284  0075FC  00                 	db	0
   285  0075FD  00                 	db	0
   286  0075FE  00                 	db	0
   287  0075FF  00                 	db	0
   288  007600  00                 	db	0
   289  007601  00                 	db	0
   290  007602  5F                 	db	95
   291  007603  00                 	db	0
   292  007604  00                 	db	0
   293  007605  00                 	db	0
   294  007606  00                 	db	0
   295  007607  00                 	db	0
   296  007608  00                 	db	0
   297  007609  03                 	db	3
   298  00760A  00                 	db	0
   299  00760B  03                 	db	3
   300  00760C  00                 	db	0
   301  00760D  00                 	db	0
   302  00760E  00                 	db	0
   303  00760F  64                 	db	100
   304  007610  3C                 	db	60
   305  007611  26                 	db	38
   306  007612  64                 	db	100
   307  007613  3C                 	db	60
   308  007614  26                 	db	38
   309  007615  24                 	db	36
   310  007616  00                 	db	0
   311  007617  26                 	db	38
   312  007618  49                 	db	73
   313  007619  49                 	db	73
   314  00761A  7F                 	db	127
   315  00761B  49                 	db	73
   316  00761C  49                 	db	73
   317  00761D  32                 	db	50
   318  00761E  00                 	db	0
   319  00761F  42                 	db	66
   320  007620  25                 	db	37
   321  007621  12                 	db	18
   322  007622  08                 	db	8
   323  007623  24                 	db	36
   324  007624  52                 	db	82
   325  007625  21                 	db	33
   326  007626  00                 	db	0
   327  007627  20                 	db	32
   328  007628  50                 	db	80
   329  007629  4E                 	db	78
   330  00762A  55                 	db	85
   331  00762B  22                 	db	34
   332  00762C  58                 	db	88
   333  00762D  28                 	db	40
   334  00762E  00                 	db	0
   335  00762F  00                 	db	0
   336  007630  00                 	db	0
   337  007631  00                 	db	0
   338  007632  03                 	db	3
   339  007633  00                 	db	0
   340  007634  00                 	db	0
   341  007635  00                 	db	0
   342  007636  00                 	db	0
   343  007637  00                 	db	0
   344  007638  00                 	db	0
   345  007639  1C                 	db	28
   346  00763A  22                 	db	34
   347  00763B  41                 	db	65
   348  00763C  00                 	db	0
   349  00763D  00                 	db	0
   350  00763E  00                 	db	0
   351  00763F  00                 	db	0
   352  007640  00                 	db	0
   353  007641  00                 	db	0
   354  007642  41                 	db	65
   355  007643  22                 	db	34
   356  007644  1C                 	db	28
   357  007645  00                 	db	0
   358  007646  00                 	db	0
   359  007647  00                 	db	0
   360  007648  15                 	db	21
   361  007649  15                 	db	21
   362  00764A  0E                 	db	14
   363  00764B  0E                 	db	14
   364  00764C  15                 	db	21
   365  00764D  15                 	db	21
   366  00764E  00                 	db	0
   367  00764F  00                 	db	0
   368  007650  08                 	db	8
   369  007651  08                 	db	8
   370  007652  3E                 	db	62
   371  007653  08                 	db	8
   372  007654  08                 	db	8
   373  007655  00                 	db	0
   374  007656  00                 	db	0
   375  007657  00                 	db	0
   376  007658  00                 	db	0
   377  007659  00                 	db	0
   378  00765A  50                 	db	80
   379  00765B  30                 	db	48
   380  00765C  00                 	db	0
   381  00765D  00                 	db	0
   382  00765E  00                 	db	0
   383  00765F  00                 	db	0
   384  007660  08                 	db	8
   385  007661  08                 	db	8
   386  007662  08                 	db	8
   387  007663  08                 	db	8
   388  007664  08                 	db	8
   389  007665  00                 	db	0
   390  007666  00                 	db	0
   391  007667  00                 	db	0
   392  007668  00                 	db	0
   393  007669  00                 	db	0
   394  00766A  40                 	db	64
   395  00766B  00                 	db	0
   396  00766C  00                 	db	0
   397  00766D  00                 	db	0
   398  00766E  00                 	db	0
   399  00766F  40                 	db	64
   400  007670  20                 	db	32
   401  007671  10                 	db	16
   402  007672  08                 	db	8
   403  007673  04                 	db	4
   404  007674  02                 	db	2
   405  007675  01                 	db	1
   406  007676  00                 	db	0
   407  007677  00                 	db	0
   408  007678  3E                 	db	62
   409  007679  41                 	db	65
   410  00767A  41                 	db	65
   411  00767B  41                 	db	65
   412  00767C  3E                 	db	62
   413  00767D  00                 	db	0
   414  00767E  00                 	db	0
   415  00767F  00                 	db	0
   416  007680  00                 	db	0
   417  007681  41                 	db	65
   418  007682  7F                 	db	127
   419  007683  40                 	db	64
   420  007684  00                 	db	0
   421  007685  00                 	db	0
   422  007686  00                 	db	0
   423  007687  00                 	db	0
   424  007688  42                 	db	66
   425  007689  61                 	db	97
   426  00768A  51                 	db	81
   427  00768B  49                 	db	73
   428  00768C  6E                 	db	110
   429  00768D  00                 	db	0
   430  00768E  00                 	db	0
   431  00768F  00                 	db	0
   432  007690  22                 	db	34
   433  007691  41                 	db	65
   434  007692  49                 	db	73
   435  007693  49                 	db	73
   436  007694  36                 	db	54
   437  007695  00                 	db	0
   438  007696  00                 	db	0
   439  007697  00                 	db	0
   440  007698  18                 	db	24
   441  007699  14                 	db	20
   442  00769A  12                 	db	18
   443  00769B  7F                 	db	127
   444  00769C  10                 	db	16
   445  00769D  00                 	db	0
   446  00769E  00                 	db	0
   447  00769F  00                 	db	0
   448  0076A0  27                 	db	39
   449  0076A1  49                 	db	73
   450  0076A2  49                 	db	73
   451  0076A3  49                 	db	73
   452  0076A4  71                 	db	113
   453  0076A5  00                 	db	0
   454  0076A6  00                 	db	0
   455  0076A7  00                 	db	0
   456  0076A8  3C                 	db	60
   457  0076A9  4A                 	db	74
   458  0076AA  49                 	db	73
   459  0076AB  48                 	db	72
   460  0076AC  70                 	db	112
   461  0076AD  00                 	db	0
   462  0076AE  00                 	db	0
   463  0076AF  00                 	db	0
   464  0076B0  43                 	db	67
   465  0076B1  21                 	db	33
   466  0076B2  11                 	db	17
   467  0076B3  0D                 	db	13
   468  0076B4  03                 	db	3
   469  0076B5  00                 	db	0
   470  0076B6  00                 	db	0
   471  0076B7  00                 	db	0
   472  0076B8  36                 	db	54
   473  0076B9  49                 	db	73
   474  0076BA  49                 	db	73
   475  0076BB  49                 	db	73
   476  0076BC  36                 	db	54
   477  0076BD  00                 	db	0
   478  0076BE  00                 	db	0
   479  0076BF  00                 	db	0
   480  0076C0  06                 	db	6
   481  0076C1  09                 	db	9
   482  0076C2  49                 	db	73
   483  0076C3  29                 	db	41
   484  0076C4  1E                 	db	30
   485  0076C5  00                 	db	0
   486  0076C6  00                 	db	0
   487  0076C7  00                 	db	0
   488  0076C8  00                 	db	0
   489  0076C9  00                 	db	0
   490  0076CA  12                 	db	18
   491  0076CB  00                 	db	0
   492  0076CC  00                 	db	0
   493  0076CD  00                 	db	0
   494  0076CE  00                 	db	0
   495  0076CF  00                 	db	0
   496  0076D0  00                 	db	0
   497  0076D1  00                 	db	0
   498  0076D2  52                 	db	82
   499  0076D3  30                 	db	48
   500  0076D4  00                 	db	0
   501  0076D5  00                 	db	0
   502  0076D6  00                 	db	0
   503  0076D7  00                 	db	0
   504  0076D8  00                 	db	0
   505  0076D9  08                 	db	8
   506  0076DA  14                 	db	20
   507  0076DB  14                 	db	20
   508  0076DC  22                 	db	34
   509  0076DD  00                 	db	0
   510  0076DE  00                 	db	0
   511  0076DF  00                 	db	0
   512  0076E0  14                 	db	20
   513  0076E1  14                 	db	20
   514  0076E2  14                 	db	20
   515  0076E3  14                 	db	20
   516  0076E4  14                 	db	20
   517  0076E5  14                 	db	20
   518  0076E6  00                 	db	0
   519  0076E7  00                 	db	0
   520  0076E8  00                 	db	0
   521  0076E9  22                 	db	34
   522  0076EA  14                 	db	20
   523  0076EB  14                 	db	20
   524  0076EC  08                 	db	8
   525  0076ED  00                 	db	0
   526  0076EE  00                 	db	0
   527  0076EF  00                 	db	0
   528  0076F0  02                 	db	2
   529  0076F1  01                 	db	1
   530  0076F2  59                 	db	89
   531  0076F3  05                 	db	5
   532  0076F4  02                 	db	2
   533  0076F5  00                 	db	0
   534  0076F6  00                 	db	0
   535  0076F7  3E                 	db	62
   536  0076F8  41                 	db	65
   537  0076F9  5D                 	db	93
   538  0076FA  55                 	db	85
   539  0076FB  4D                 	db	77
   540  0076FC  51                 	db	81
   541  0076FD  2E                 	db	46
   542  0076FE  00                 	db	0
   543  0076FF  40                 	db	64
   544  007700  7C                 	db	124
   545  007701  4A                 	db	74
   546  007702  09                 	db	9
   547  007703  4A                 	db	74
   548  007704  7C                 	db	124
   549  007705  40                 	db	64
   550  007706  00                 	db	0
   551  007707  41                 	db	65
   552  007708  7F                 	db	127
   553  007709  49                 	db	73
   554  00770A  49                 	db	73
   555  00770B  49                 	db	73
   556  00770C  49                 	db	73
   557  00770D  36                 	db	54
   558  00770E  00                 	db	0
   559  00770F  1C                 	db	28
   560  007710  22                 	db	34
   561  007711  41                 	db	65
   562  007712  41                 	db	65
   563  007713  41                 	db	65
   564  007714  41                 	db	65
   565  007715  22                 	db	34
   566  007716  00                 	db	0
   567  007717  41                 	db	65
   568  007718  7F                 	db	127
   569  007719  41                 	db	65
   570  00771A  41                 	db	65
   571  00771B  41                 	db	65
   572  00771C  22                 	db	34
   573  00771D  1C                 	db	28
   574  00771E  00                 	db	0
   575  00771F  41                 	db	65
   576  007720  7F                 	db	127
   577  007721  49                 	db	73
   578  007722  49                 	db	73
   579  007723  5D                 	db	93
   580  007724  41                 	db	65
   581  007725  63                 	db	99
   582  007726  00                 	db	0
   583  007727  41                 	db	65
   584  007728  7F                 	db	127
   585  007729  49                 	db	73
   586  00772A  09                 	db	9
   587  00772B  1D                 	db	29
   588  00772C  01                 	db	1
   589  00772D  03                 	db	3
   590  00772E  00                 	db	0
   591  00772F  1C                 	db	28
   592  007730  22                 	db	34
   593  007731  41                 	db	65
   594  007732  49                 	db	73
   595  007733  49                 	db	73
   596  007734  3A                 	db	58
   597  007735  08                 	db	8
   598  007736  00                 	db	0
   599  007737  41                 	db	65
   600  007738  7F                 	db	127
   601  007739  08                 	db	8
   602  00773A  08                 	db	8
   603  00773B  08                 	db	8
   604  00773C  7F                 	db	127
   605  00773D  41                 	db	65
   606  00773E  00                 	db	0
   607  00773F  00                 	db	0
   608  007740  41                 	db	65
   609  007741  41                 	db	65
   610  007742  7F                 	db	127
   611  007743  41                 	db	65
   612  007744  41                 	db	65
   613  007745  00                 	db	0
   614  007746  00                 	db	0
   615  007747  30                 	db	48
   616  007748  40                 	db	64
   617  007749  41                 	db	65
   618  00774A  41                 	db	65
   619  00774B  3F                 	db	63
   620  00774C  01                 	db	1
   621  00774D  01                 	db	1
   622  00774E  00                 	db	0
   623  00774F  41                 	db	65
   624  007750  7F                 	db	127
   625  007751  08                 	db	8
   626  007752  0C                 	db	12
   627  007753  12                 	db	18
   628  007754  61                 	db	97
   629  007755  41                 	db	65
   630  007756  00                 	db	0
   631  007757  41                 	db	65
   632  007758  7F                 	db	127
   633  007759  41                 	db	65
   634  00775A  40                 	db	64
   635  00775B  40                 	db	64
   636  00775C  40                 	db	64
   637  00775D  60                 	db	96
   638  00775E  00                 	db	0
   639  00775F  41                 	db	65
   640  007760  7F                 	db	127
   641  007761  42                 	db	66
   642  007762  0C                 	db	12
   643  007763  42                 	db	66
   644  007764  7F                 	db	127
   645  007765  41                 	db	65
   646  007766  00                 	db	0
   647  007767  41                 	db	65
   648  007768  7F                 	db	127
   649  007769  42                 	db	66
   650  00776A  0C                 	db	12
   651  00776B  11                 	db	17
   652  00776C  7F                 	db	127
   653  00776D  01                 	db	1
   654  00776E  00                 	db	0
   655  00776F  1C                 	db	28
   656  007770  22                 	db	34
   657  007771  41                 	db	65
   658  007772  41                 	db	65
   659  007773  41                 	db	65
   660  007774  22                 	db	34
   661  007775  1C                 	db	28
   662  007776  00                 	db	0
   663  007777  41                 	db	65
   664  007778  7F                 	db	127
   665  007779  49                 	db	73
   666  00777A  09                 	db	9
   667  00777B  09                 	db	9
   668  00777C  09                 	db	9
   669  00777D  06                 	db	6
   670  00777E  00                 	db	0
   671  00777F  0C                 	db	12
   672  007780  12                 	db	18
   673  007781  21                 	db	33
   674  007782  21                 	db	33
   675  007783  61                 	db	97
   676  007784  52                 	db	82
   677  007785  4C                 	db	76
   678  007786  00                 	db	0
   679  007787  41                 	db	65
   680  007788  7F                 	db	127
   681  007789  09                 	db	9
   682  00778A  09                 	db	9
   683  00778B  19                 	db	25
   684  00778C  69                 	db	105
   685  00778D  46                 	db	70
   686  00778E  00                 	db	0
   687  00778F  66                 	db	102
   688  007790  49                 	db	73
   689  007791  49                 	db	73
   690  007792  49                 	db	73
   691  007793  49                 	db	73
   692  007794  49                 	db	73
   693  007795  33                 	db	51
   694  007796  00                 	db	0
   695  007797  03                 	db	3
   696  007798  01                 	db	1
   697  007799  41                 	db	65
   698  00779A  7F                 	db	127
   699  00779B  41                 	db	65
   700  00779C  01                 	db	1
   701  00779D  03                 	db	3
   702  00779E  00                 	db	0
   703  00779F  01                 	db	1
   704  0077A0  3F                 	db	63
   705  0077A1  41                 	db	65
   706  0077A2  40                 	db	64
   707  0077A3  41                 	db	65
   708  0077A4  3F                 	db	63
   709  0077A5  01                 	db	1
   710  0077A6  00                 	db	0
   711  0077A7  01                 	db	1
   712  0077A8  0F                 	db	15
   713  0077A9  31                 	db	49
   714  0077AA  40                 	db	64
   715  0077AB  31                 	db	49
   716  0077AC  0F                 	db	15
   717  0077AD  01                 	db	1
   718  0077AE  00                 	db	0
   719  0077AF  01                 	db	1
   720  0077B0  1F                 	db	31
   721  0077B1  61                 	db	97
   722  0077B2  14                 	db	20
   723  0077B3  61                 	db	97
   724  0077B4  1F                 	db	31
   725  0077B5  01                 	db	1
   726  0077B6  00                 	db	0
   727  0077B7  41                 	db	65
   728  0077B8  41                 	db	65
   729  0077B9  36                 	db	54
   730  0077BA  08                 	db	8
   731  0077BB  36                 	db	54
   732  0077BC  41                 	db	65
   733  0077BD  41                 	db	65
   734  0077BE  00                 	db	0
   735  0077BF  01                 	db	1
   736  0077C0  03                 	db	3
   737  0077C1  44                 	db	68
   738  0077C2  78                 	db	120
   739  0077C3  44                 	db	68
   740  0077C4  03                 	db	3
   741  0077C5  01                 	db	1
   742  0077C6  00                 	db	0
   743  0077C7  43                 	db	67
   744  0077C8  61                 	db	97
   745  0077C9  51                 	db	81
   746  0077CA  49                 	db	73
   747  0077CB  45                 	db	69
   748  0077CC  43                 	db	67
   749  0077CD  61                 	db	97
   750  0077CE  00                 	db	0
   751  0077CF  00                 	db	0
   752  0077D0  00                 	db	0
   753  0077D1  7F                 	db	127
   754  0077D2  41                 	db	65
   755  0077D3  41                 	db	65
   756  0077D4  00                 	db	0
   757  0077D5  00                 	db	0
   758  0077D6  00                 	db	0
   759  0077D7  01                 	db	1
   760  0077D8  02                 	db	2
   761  0077D9  04                 	db	4
   762  0077DA  08                 	db	8
   763  0077DB  10                 	db	16
   764  0077DC  20                 	db	32
   765  0077DD  40                 	db	64
   766  0077DE  00                 	db	0
   767  0077DF  00                 	db	0
   768  0077E0  00                 	db	0
   769  0077E1  41                 	db	65
   770  0077E2  41                 	db	65
   771  0077E3  7F                 	db	127
   772  0077E4  00                 	db	0
   773  0077E5  00                 	db	0
   774  0077E6  00                 	db	0
   775  0077E7  00                 	db	0
   776  0077E8  04                 	db	4
   777  0077E9  02                 	db	2
   778  0077EA  01                 	db	1
   779  0077EB  01                 	db	1
   780  0077EC  02                 	db	2
   781  0077ED  04                 	db	4
   782  0077EE  00                 	db	0
   783  0077EF  00                 	db	0
   784  0077F0  40                 	db	64
   785  0077F1  40                 	db	64
   786  0077F2  40                 	db	64
   787  0077F3  40                 	db	64
   788  0077F4  40                 	db	64
   789  0077F5  40                 	db	64
   790  0077F6  00                 	db	0
   791  0077F7  00                 	db	0
   792  0077F8  01                 	db	1
   793  0077F9  02                 	db	2
   794  0077FA  00                 	db	0
   795  0077FB  00                 	db	0
   796  0077FC  00                 	db	0
   797  0077FD  00                 	db	0
   798  0077FE  00                 	db	0
   799  0077FF  00                 	db	0
   800  007800  34                 	db	52
   801  007801  4A                 	db	74
   802  007802  4A                 	db	74
   803  007803  4A                 	db	74
   804  007804  3C                 	db	60
   805  007805  40                 	db	64
   806  007806  00                 	db	0
   807  007807  00                 	db	0
   808  007808  41                 	db	65
   809  007809  3F                 	db	63
   810  00780A  48                 	db	72
   811  00780B  48                 	db	72
   812  00780C  48                 	db	72
   813  00780D  30                 	db	48
   814  00780E  00                 	db	0
   815  00780F  00                 	db	0
   816  007810  3C                 	db	60
   817  007811  42                 	db	66
   818  007812  42                 	db	66
   819  007813  42                 	db	66
   820  007814  24                 	db	36
   821  007815  00                 	db	0
   822  007816  00                 	db	0
   823  007817  00                 	db	0
   824  007818  30                 	db	48
   825  007819  48                 	db	72
   826  00781A  48                 	db	72
   827  00781B  49                 	db	73
   828  00781C  3F                 	db	63
   829  00781D  40                 	db	64
   830  00781E  00                 	db	0
   831  00781F  00                 	db	0
   832  007820  3C                 	db	60
   833  007821  4A                 	db	74
   834  007822  4A                 	db	74
   835  007823  4A                 	db	74
   836  007824  2C                 	db	44
   837  007825  00                 	db	0
   838  007826  00                 	db	0
   839  007827  00                 	db	0
   840  007828  00                 	db	0
   841  007829  48                 	db	72
   842  00782A  7E                 	db	126
   843  00782B  49                 	db	73
   844  00782C  09                 	db	9
   845  00782D  00                 	db	0
   846  00782E  00                 	db	0
   847  00782F  00                 	db	0
   848  007830  26                 	db	38
   849  007831  49                 	db	73
   850  007832  49                 	db	73
   851  007833  49                 	db	73
   852  007834  3F                 	db	63
   853  007835  01                 	db	1
   854  007836  00                 	db	0
   855  007837  41                 	db	65
   856  007838  7F                 	db	127
   857  007839  48                 	db	72
   858  00783A  04                 	db	4
   859  00783B  44                 	db	68
   860  00783C  78                 	db	120
   861  00783D  40                 	db	64
   862  00783E  00                 	db	0
   863  00783F  00                 	db	0
   864  007840  00                 	db	0
   865  007841  44                 	db	68
   866  007842  7D                 	db	125
   867  007843  40                 	db	64
   868  007844  00                 	db	0
   869  007845  00                 	db	0
   870  007846  00                 	db	0
   871  007847  00                 	db	0
   872  007848  00                 	db	0
   873  007849  40                 	db	64
   874  00784A  44                 	db	68
   875  00784B  3D                 	db	61
   876  00784C  00                 	db	0
   877  00784D  00                 	db	0
   878  00784E  00                 	db	0
   879  00784F  41                 	db	65
   880  007850  7F                 	db	127
   881  007851  10                 	db	16
   882  007852  18                 	db	24
   883  007853  24                 	db	36
   884  007854  42                 	db	66
   885  007855  42                 	db	66
   886  007856  00                 	db	0
   887  007857  00                 	db	0
   888  007858  40                 	db	64
   889  007859  41                 	db	65
   890  00785A  7F                 	db	127
   891  00785B  40                 	db	64
   892  00785C  40                 	db	64
   893  00785D  00                 	db	0
   894  00785E  00                 	db	0
   895  00785F  42                 	db	66
   896  007860  7E                 	db	126
   897  007861  02                 	db	2
   898  007862  7C                 	db	124
   899  007863  02                 	db	2
   900  007864  7E                 	db	126
   901  007865  40                 	db	64
   902  007866  00                 	db	0
   903  007867  42                 	db	66
   904  007868  7E                 	db	126
   905  007869  44                 	db	68
   906  00786A  02                 	db	2
   907  00786B  42                 	db	66
   908  00786C  7C                 	db	124
   909  00786D  40                 	db	64
   910  00786E  00                 	db	0
   911  00786F  00                 	db	0
   912  007870  3C                 	db	60
   913  007871  42                 	db	66
   914  007872  42                 	db	66
   915  007873  42                 	db	66
   916  007874  3C                 	db	60
   917  007875  00                 	db	0
   918  007876  00                 	db	0
   919  007877  00                 	db	0
   920  007878  41                 	db	65
   921  007879  7F                 	db	127
   922  00787A  49                 	db	73
   923  00787B  09                 	db	9
   924  00787C  09                 	db	9
   925  00787D  06                 	db	6
   926  00787E  00                 	db	0
   927  00787F  00                 	db	0
   928  007880  06                 	db	6
   929  007881  09                 	db	9
   930  007882  09                 	db	9
   931  007883  49                 	db	73
   932  007884  7F                 	db	127
   933  007885  41                 	db	65
   934  007886  00                 	db	0
   935  007887  00                 	db	0
   936  007888  42                 	db	66
   937  007889  7E                 	db	126
   938  00788A  44                 	db	68
   939  00788B  02                 	db	2
   940  00788C  02                 	db	2
   941  00788D  04                 	db	4
   942  00788E  00                 	db	0
   943  00788F  00                 	db	0
   944  007890  64                 	db	100
   945  007891  4A                 	db	74
   946  007892  4A                 	db	74
   947  007893  4A                 	db	74
   948  007894  36                 	db	54
   949  007895  00                 	db	0
   950  007896  00                 	db	0
   951  007897  00                 	db	0
   952  007898  04                 	db	4
   953  007899  3F                 	db	63
   954  00789A  44                 	db	68
   955  00789B  44                 	db	68
   956  00789C  20                 	db	32
   957  00789D  00                 	db	0
   958  00789E  00                 	db	0
   959  00789F  00                 	db	0
   960  0078A0  02                 	db	2
   961  0078A1  3E                 	db	62
   962  0078A2  40                 	db	64
   963  0078A3  40                 	db	64
   964  0078A4  22                 	db	34
   965  0078A5  7E                 	db	126
   966  0078A6  40                 	db	64
   967  0078A7  02                 	db	2
   968  0078A8  0E                 	db	14
   969  0078A9  32                 	db	50
   970  0078AA  40                 	db	64
   971  0078AB  32                 	db	50
   972  0078AC  0E                 	db	14
   973  0078AD  02                 	db	2
   974  0078AE  00                 	db	0
   975  0078AF  02                 	db	2
   976  0078B0  1E                 	db	30
   977  0078B1  62                 	db	98
   978  0078B2  18                 	db	24
   979  0078B3  62                 	db	98
   980  0078B4  1E                 	db	30
   981  0078B5  02                 	db	2
   982  0078B6  00                 	db	0
   983  0078B7  42                 	db	66
   984  0078B8  62                 	db	98
   985  0078B9  14                 	db	20
   986  0078BA  08                 	db	8
   987  0078BB  14                 	db	20
   988  0078BC  62                 	db	98
   989  0078BD  42                 	db	66
   990  0078BE  00                 	db	0
   991  0078BF  01                 	db	1
   992  0078C0  43                 	db	67
   993  0078C1  45                 	db	69
   994  0078C2  38                 	db	56
   995  0078C3  05                 	db	5
   996  0078C4  03                 	db	3
   997  0078C5  01                 	db	1
   998  0078C6  00                 	db	0
   999  0078C7  00                 	db	0
  1000  0078C8  46                 	db	70
  1001  0078C9  62                 	db	98
  1002  0078CA  52                 	db	82
  1003  0078CB  4A                 	db	74
  1004  0078CC  46                 	db	70
  1005  0078CD  62                 	db	98
  1006  0078CE  00                 	db	0
  1007  0078CF  00                 	db	0
  1008  0078D0  00                 	db	0
  1009  0078D1  08                 	db	8
  1010  0078D2  36                 	db	54
  1011  0078D3  41                 	db	65
  1012  0078D4  00                 	db	0
  1013  0078D5  00                 	db	0
  1014  0078D6  00                 	db	0
  1015  0078D7  00                 	db	0
  1016  0078D8  00                 	db	0
  1017  0078D9  00                 	db	0
  1018  0078DA  7F                 	db	127
  1019  0078DB  00                 	db	0
  1020  0078DC  00                 	db	0
  1021  0078DD  00                 	db	0
  1022  0078DE  00                 	db	0
  1023  0078DF  00                 	db	0
  1024  0078E0  00                 	db	0
  1025  0078E1  00                 	db	0
  1026  0078E2  41                 	db	65
  1027  0078E3  36                 	db	54
  1028  0078E4  08                 	db	8
  1029  0078E5  00                 	db	0
  1030  0078E6  00                 	db	0
  1031  0078E7  00                 	db	0
  1032  0078E8  18                 	db	24
  1033  0078E9  08                 	db	8
  1034  0078EA  08                 	db	8
  1035  0078EB  10                 	db	16
  1036  0078EC  10                 	db	16
  1037  0078ED  18                 	db	24
  1038  0078EE  00                 	db	0
  1039  0078EF  AA                 	db	170
  1040  0078F0  55                 	db	85
  1041  0078F1  AA                 	db	170
  1042  0078F2  55                 	db	85
  1043  0078F3  AA                 	db	170
  1044  0078F4  55                 	db	85
  1045  0078F5  AA                 	db	170
  1046  0078F6  55                 	db	85
  1047  0078F7                     __end_of_OledFont0:
  1048                           	opt stack 0
  1049  0078F7                     _configDescriptor1:
  1050                           	opt stack 0
  1051  0078F7  09                 	db	9
  1052  0078F8  02                 	db	2
  1053  0078F9  43                 	db	67
  1054  0078FA  00                 	db	0
  1055  0078FB  02                 	db	2
  1056  0078FC  01                 	db	1
  1057  0078FD  00                 	db	0
  1058  0078FE  C0                 	db	192
  1059  0078FF  32                 	db	50
  1060  007900  09                 	db	9
  1061  007901  04                 	db	4
  1062  007902  00                 	db	0
  1063  007903  00                 	db	0
  1064  007904  01                 	db	1
  1065  007905  02                 	db	2
  1066  007906  02                 	db	2
  1067  007907  01                 	db	1
  1068  007908  00                 	db	0
  1069  007909  05                 	db	5
  1070  00790A  24                 	db	36
  1071  00790B  00                 	db	0
  1072  00790C  10                 	db	16
  1073  00790D  01                 	db	1
  1074  00790E  04                 	db	4
  1075  00790F  24                 	db	36
  1076  007910  02                 	db	2
  1077  007911  02                 	db	2
  1078  007912  05                 	db	5
  1079  007913  24                 	db	36
  1080  007914  06                 	db	6
  1081  007915  00                 	db	0
  1082  007916  01                 	db	1
  1083  007917  05                 	db	5
  1084  007918  24                 	db	36
  1085  007919  01                 	db	1
  1086  00791A  00                 	db	0
  1087  00791B  01                 	db	1
  1088  00791C  07                 	db	7
  1089  00791D  05                 	db	5
  1090  00791E  81                 	db	129
  1091  00791F  03                 	db	3
  1092  007920  08                 	db	8
  1093  007921  00                 	db	0
  1094  007922  02                 	db	2
  1095  007923  09                 	db	9
  1096  007924  04                 	db	4
  1097  007925  01                 	db	1
  1098  007926  00                 	db	0
  1099  007927  02                 	db	2
  1100  007928  0A                 	db	10
  1101  007929  00                 	db	0
  1102  00792A  00                 	db	0
  1103  00792B  00                 	db	0
  1104  00792C  07                 	db	7
  1105  00792D  05                 	db	5
  1106  00792E  02                 	db	2
  1107  00792F  02                 	db	2
  1108  007930  40                 	db	64
  1109  007931  00                 	db	0
  1110  007932  00                 	db	0
  1111  007933  07                 	db	7
  1112  007934  05                 	db	5
  1113  007935  82                 	db	130
  1114  007936  02                 	db	2
  1115  007937  40                 	db	64
  1116  007938  00                 	db	0
  1117  007939  00                 	db	0
  1118  00793A                     __end_of_configDescriptor1:
  1119                           	opt stack 0
  1120  00793A                     _sd002:
  1121                           	opt stack 0
  1122  00793A  34                 	db	52
  1123  00793B  03                 	db	3
  1124  00793C  0043               	dw	67
  1125  00793E  0044               	dw	68
  1126  007940  0043               	dw	67
  1127  007942  0020               	dw	32
  1128  007944  0052               	dw	82
  1129  007946  0053               	dw	83
  1130  007948  002D               	dw	45
  1131  00794A  0032               	dw	50
  1132  00794C  0033               	dw	51
  1133  00794E  0032               	dw	50
  1134  007950  0020               	dw	32
  1135  007952  0045               	dw	69
  1136  007954  006D               	dw	109
  1137  007956  0075               	dw	117
  1138  007958  006C               	dw	108
  1139  00795A  0061               	dw	97
  1140  00795C  0074               	dw	116
  1141  00795E  0069               	dw	105
  1142  007960  006F               	dw	111
  1143  007962  006E               	dw	110
  1144  007964  0020               	dw	32
  1145  007966  0044               	dw	68
  1146  007968  0065               	dw	101
  1147  00796A  006D               	dw	109
  1148  00796C  006F               	dw	111
  1149  00796E                     __end_of_sd002:
  1150                           	opt stack 0
  1151  00796E                     _sd001:
  1152                           	opt stack 0
  1153  00796E  34                 	db	52
  1154  00796F  03                 	db	3
  1155  007970  004D               	dw	77
  1156  007972  0069               	dw	105
  1157  007974  0063               	dw	99
  1158  007976  0072               	dw	114
  1159  007978  006F               	dw	111
  1160  00797A  0063               	dw	99
  1161  00797C  0068               	dw	104
  1162  00797E  0069               	dw	105
  1163  007980  0070               	dw	112
  1164  007982  0020               	dw	32
  1165  007984  0054               	dw	84
  1166  007986  0065               	dw	101
  1167  007988  0063               	dw	99
  1168  00798A  0068               	dw	104
  1169  00798C  006E               	dw	110
  1170  00798E  006F               	dw	111
  1171  007990  006C               	dw	108
  1172  007992  006F               	dw	111
  1173  007994  0067               	dw	103
  1174  007996  0079               	dw	121
  1175  007998  0020               	dw	32
  1176  00799A  0049               	dw	73
  1177  00799C  006E               	dw	110
  1178  00799E  0063               	dw	99
  1179  0079A0  002E               	dw	46
  1180  0079A2                     __end_of_sd001:
  1181                           	opt stack 0
  1182  0079A2                     _device_dsc:
  1183                           	opt stack 0
  1184  0079A2  12                 	db	18
  1185  0079A3  01                 	db	1
  1186  0079A4  0200               	dw	512
  1187  0079A6  02                 	db	2
  1188  0079A7  00                 	db	0
  1189  0079A8  00                 	db	0
  1190  0079A9  08                 	db	8
  1191  0079AA  04D8               	dw	1240
  1192  0079AC  000A               	dw	10
  1193  0079AE  0100               	dw	256
  1194  0079B0  01                 	db	1
  1195  0079B1  02                 	db	2
  1196  0079B2  00                 	db	0
  1197  0079B3  01                 	db	1
  1198  0079B4                     __end_of_device_dsc:
  1199                           	opt stack 0
  1200  0079B4                     _sd000:
  1201                           	opt stack 0
  1202  0079B4  04                 	db	4
  1203  0079B5  03                 	db	3
  1204  0079B6  0409               	dw	1033
  1205  0079B8                     __end_of_sd000:
  1206                           	opt stack 0
  1207  0000                     _ANSELCbits	set	3933
  1208  0000                     _ANSELAbits	set	3931
  1209  0000                     _TMR3	set	4018
  1210  0000                     _TMR0	set	4054
  1211  0000                     _UEP0bits	set	3946
  1212  0000                     _IPR3bits	set	4005
  1213  0000                     _RCONbits	set	4048
  1214  0000                     _UCON	set	3936
  1215  0000                     _USTAT	set	3937
  1216  0000                     _PIR3bits	set	4004
  1217  0000                     _UIEbits	set	3940
  1218  0000                     _UIRbits	set	3941
  1219  0000                     _UADDR	set	3939
  1220  0000                     _UIE	set	3940
  1221  0000                     _UEIE	set	3942
  1222  0000                     _UCFG	set	3938
  1223  0000                     _UIR	set	3941
  1224  0000                     _UEIR	set	3943
  1225  0000                     _PIE3bits	set	4003
  1226  0000                     _T0CONbits	set	4053
  1227  0000                     _T3GCONbits	set	4020
  1228  0000                     _T3CONbits	set	4017
  1229  0000                     _T3GCON	set	4020
  1230  0000                     _T3CON	set	4017
  1231  0000                     _T2CONbits	set	4026
  1232  0000                     _TMR2	set	4028
  1233  0000                     _PR2	set	4027
  1234  0000                     _T2CON	set	4026
  1235  0000                     _VREFCON0bits	set	3965
  1236  0000                     _CM1CON0bits	set	3992
  1237  0000                     _CM2CON1bits	set	3994
  1238  0000                     _CM1CON0	set	3992
  1239  0000                     _EEDATA	set	4008
  1240  0000                     _EEADR	set	4009
  1241  0000                     _EECON2	set	4007
  1242  0000                     _EECON1bits	set	4006
  1243  0000                     _TABLAT	set	4085
  1244  0000                     _TBLPTRL	set	4086
  1245  0000                     _TBLPTRH	set	4087
  1246  0000                     _TBLPTRU	set	4088
  1247  0000                     _TRISD	set	3989
  1248  0000                     _IOCBbits	set	3974
  1249  0000                     _INTCON2bits	set	4081
  1250  0000                     _TRISAbits	set	3986
  1251  0000                     _T1GCONbits	set	4044
  1252  0000                     _T1CONbits	set	4045
  1253  0000                     _TMR1L	set	4046
  1254  0000                     _TMR1H	set	4047
  1255  0000                     _T1GCON	set	4044
  1256  0000                     _T1CON	set	4045
  1257  0000                     _SSP1STATbits	set	4039
  1258  0000                     _SSPBUF	set	4041
  1259  0000                     _SSP1CON1bits	set	4038
  1260  0000                     _SSP1ADD	set	4040
  1261  0000                     _SSP1CON1	set	4038
  1262  0000                     _SSP1STAT	set	4039
  1263  0000                     _ADRESH	set	4036
  1264  0000                     _ADRESL	set	4035
  1265  0000                     _ADCON2	set	4032
  1266  0000                     _ADCON1	set	4033
  1267  0000                     _ADCON0	set	4034
  1268  0000                     _VREFCON0	set	3965
  1269  0000                     _ACTCON	set	4021
  1270  0000                     _OSCCON2bits	set	4050
  1271  0000                     _OSCCON2	set	4050
  1272  0000                     _OSCCON	set	4051
  1273  0000                     _OSCTUNE	set	3995
  1274  0000                     _PIR1bits	set	3998
  1275  0000                     _RCREG	set	4014
  1276  0000                     _RCSTAbits	set	4011
  1277  0000                     _TXSTA	set	4012
  1278  0000                     _RCSTA	set	4011
  1279  0000                     _BAUDCON	set	4024
  1280  0000                     _LATD	set	3980
  1281  0000                     _TRISCbits	set	3988
  1282  0000                     _TRISBbits	set	3987
  1283  0000                     _TRISEbits	set	3990
  1284  0000                     _SPBRGH	set	4016
  1285  0000                     _SPBRG	set	4015
  1286  0000                     _UCONbits	set	3936
  1287  0000                     _TMR3L	set	4018
  1288  0000                     _TMR3H	set	4019
  1289  0000                     _PIR2bits	set	4001
  1290  0000                     _WDTCONbits	set	4049
  1291  0000                     _PORTCbits	set	3970
  1292  0000                     _IOCCbits	set	3975
  1293  0000                     _INTCON3bits	set	4080
  1294  0000                     _PIE2bits	set	4000
  1295  0000                     _LATEbits	set	3981
  1296  0000                     _INTCONbits	set	4082
  1297  0000                     _ADCON0bits	set	4034
  1298  0000                     _PORTAbits	set	3968
  1299  0000                     _PIE1bits	set	3997
  1300  0000                     _TXREG	set	4013
  1301  0000                     _LATCbits	set	3979
  1302  0000                     _TXSTAbits	set	4012
  1303  0000                     _LATAbits	set	3977
  1304  0000                     _PORTBbits	set	3969
  1305  0000                     _LATBbits	set	3978
  1306  0000                     _UEP1	set	3947
  1307  0000                     _UEP0	set	3946
  1308  0000                     _CKE	set	32318
  1309  0000                     _CKP	set	32308
  1310  0000                     _GIE	set	32663
  1311  0000                     _PEIE	set	32662
  1312  0079B8                     STR_184:
  1313  0079B8  73                 	db	115	;'s'
  1314  0079B9  79                 	db	121	;'y'
  1315  0079BA  73                 	db	115	;'s'
  1316  0079BB  20                 	db	32
  1317  0079BC  73                 	db	115	;'s'
  1318  0079BD  65                 	db	101	;'e'
  1319  0079BE  74                 	db	116	;'t'
  1320  0079BF  20                 	db	32
  1321  0079C0  70                 	db	112	;'p'
  1322  0079C1  69                 	db	105	;'i'
  1323  0079C2  6E                 	db	110	;'n'
  1324  0079C3  6D                 	db	109	;'m'
  1325  0079C4  6F                 	db	111	;'o'
  1326  0079C5  64                 	db	100	;'d'
  1327  0079C6  65                 	db	101	;'e'
  1328  0079C7  20                 	db	32
  1329  0079C8  47                 	db	71	;'G'
  1330  0079C9  50                 	db	80	;'P'
  1331  0079CA  49                 	db	73	;'I'
  1332  0079CB  4F                 	db	79	;'O'
  1333  0079CC  31                 	db	49	;'1'
  1334  0079CD  32                 	db	50	;'2'
  1335  0079CE  20                 	db	32
  1336  0079CF  61                 	db	97	;'a'
  1337  0079D0  6E                 	db	110	;'n'
  1338  0079D1  61                 	db	97	;'a'
  1339  0079D2  00                 	db	0
  1340  0079D3                     STR_183:
  1341  0079D3  73                 	db	115	;'s'
  1342  0079D4  79                 	db	121	;'y'
  1343  0079D5  73                 	db	115	;'s'
  1344  0079D6  20                 	db	32
  1345  0079D7  73                 	db	115	;'s'
  1346  0079D8  65                 	db	101	;'e'
  1347  0079D9  74                 	db	116	;'t'
  1348  0079DA  20                 	db	32
  1349  0079DB  70                 	db	112	;'p'
  1350  0079DC  69                 	db	105	;'i'
  1351  0079DD  6E                 	db	110	;'n'
  1352  0079DE  6D                 	db	109	;'m'
  1353  0079DF  6F                 	db	111	;'o'
  1354  0079E0  64                 	db	100	;'d'
  1355  0079E1  65                 	db	101	;'e'
  1356  0079E2  20                 	db	32
  1357  0079E3  47                 	db	71	;'G'
  1358  0079E4  50                 	db	80	;'P'
  1359  0079E5  49                 	db	73	;'I'
  1360  0079E6  4F                 	db	79	;'O'
  1361  0079E7  31                 	db	49	;'1'
  1362  0079E8  33                 	db	51	;'3'
  1363  0079E9  20                 	db	32
  1364  0079EA  61                 	db	97	;'a'
  1365  0079EB  6E                 	db	110	;'n'
  1366  0079EC  61                 	db	97	;'a'
  1367  0079ED  00                 	db	0
  1368  0079EE                     STR_177:
  1369  0079EE  73                 	db	115	;'s'
  1370  0079EF  79                 	db	121	;'y'
  1371  0079F0  73                 	db	115	;'s'
  1372  0079F1  20                 	db	32
  1373  0079F2  73                 	db	115	;'s'
  1374  0079F3  65                 	db	101	;'e'
  1375  0079F4  74                 	db	116	;'t'
  1376  0079F5  20                 	db	32
  1377  0079F6  70                 	db	112	;'p'
  1378  0079F7  69                 	db	105	;'i'
  1379  0079F8  6E                 	db	110	;'n'
  1380  0079F9  64                 	db	100	;'d'
  1381  0079FA  69                 	db	105	;'i'
  1382  0079FB  67                 	db	103	;'g'
  1383  0079FC  20                 	db	32
  1384  0079FD  47                 	db	71	;'G'
  1385  0079FE  50                 	db	80	;'P'
  1386  0079FF  49                 	db	73	;'I'
  1387  007A00  4F                 	db	79	;'O'
  1388  007A01  31                 	db	49	;'1'
  1389  007A02  30                 	db	48	;'0'
  1390  007A03  20                 	db	32
  1391  007A04  30                 	db	48	;'0'
  1392  007A05  0D                 	db	13
  1393  007A06  0A                 	db	10
  1394  007A07  00                 	db	0
  1395  007A08                     STR_178:
  1396  007A08  73                 	db	115	;'s'
  1397  007A09  79                 	db	121	;'y'
  1398  007A0A  73                 	db	115	;'s'
  1399  007A0B  20                 	db	32
  1400  007A0C  73                 	db	115	;'s'
  1401  007A0D  65                 	db	101	;'e'
  1402  007A0E  74                 	db	116	;'t'
  1403  007A0F  20                 	db	32
  1404  007A10  70                 	db	112	;'p'
  1405  007A11  69                 	db	105	;'i'
  1406  007A12  6E                 	db	110	;'n'
  1407  007A13  64                 	db	100	;'d'
  1408  007A14  69                 	db	105	;'i'
  1409  007A15  67                 	db	103	;'g'
  1410  007A16  20                 	db	32
  1411  007A17  47                 	db	71	;'G'
  1412  007A18  50                 	db	80	;'P'
  1413  007A19  49                 	db	73	;'I'
  1414  007A1A  4F                 	db	79	;'O'
  1415  007A1B  31                 	db	49	;'1'
  1416  007A1C  31                 	db	49	;'1'
  1417  007A1D  20                 	db	32
  1418  007A1E  30                 	db	48	;'0'
  1419  007A1F  0D                 	db	13
  1420  007A20  0A                 	db	10
  1421  007A21  00                 	db	0
  1422  007A22                     STR_175:
  1423  007A22  73                 	db	115	;'s'
  1424  007A23  79                 	db	121	;'y'
  1425  007A24  73                 	db	115	;'s'
  1426  007A25  20                 	db	32
  1427  007A26  73                 	db	115	;'s'
  1428  007A27  65                 	db	101	;'e'
  1429  007A28  74                 	db	116	;'t'
  1430  007A29  20                 	db	32
  1431  007A2A  70                 	db	112	;'p'
  1432  007A2B  69                 	db	105	;'i'
  1433  007A2C  6E                 	db	110	;'n'
  1434  007A2D  64                 	db	100	;'d'
  1435  007A2E  69                 	db	105	;'i'
  1436  007A2F  67                 	db	103	;'g'
  1437  007A30  20                 	db	32
  1438  007A31  47                 	db	71	;'G'
  1439  007A32  50                 	db	80	;'P'
  1440  007A33  49                 	db	73	;'I'
  1441  007A34  4F                 	db	79	;'O'
  1442  007A35  31                 	db	49	;'1'
  1443  007A36  30                 	db	48	;'0'
  1444  007A37  20                 	db	32
  1445  007A38  31                 	db	49	;'1'
  1446  007A39  0D                 	db	13
  1447  007A3A  0A                 	db	10
  1448  007A3B  00                 	db	0
  1449  007A3C                     STR_176:
  1450  007A3C  73                 	db	115	;'s'
  1451  007A3D  79                 	db	121	;'y'
  1452  007A3E  73                 	db	115	;'s'
  1453  007A3F  20                 	db	32
  1454  007A40  73                 	db	115	;'s'
  1455  007A41  65                 	db	101	;'e'
  1456  007A42  74                 	db	116	;'t'
  1457  007A43  20                 	db	32
  1458  007A44  70                 	db	112	;'p'
  1459  007A45  69                 	db	105	;'i'
  1460  007A46  6E                 	db	110	;'n'
  1461  007A47  64                 	db	100	;'d'
  1462  007A48  69                 	db	105	;'i'
  1463  007A49  67                 	db	103	;'g'
  1464  007A4A  20                 	db	32
  1465  007A4B  47                 	db	71	;'G'
  1466  007A4C  50                 	db	80	;'P'
  1467  007A4D  49                 	db	73	;'I'
  1468  007A4E  4F                 	db	79	;'O'
  1469  007A4F  31                 	db	49	;'1'
  1470  007A50  31                 	db	49	;'1'
  1471  007A51  20                 	db	32
  1472  007A52  31                 	db	49	;'1'
  1473  007A53  0D                 	db	13
  1474  007A54  0A                 	db	10
  1475  007A55  00                 	db	0
  1476  007A56                     STR_185:
  1477  007A56  73                 	db	115	;'s'
  1478  007A57  79                 	db	121	;'y'
  1479  007A58  73                 	db	115	;'s'
  1480  007A59  20                 	db	32
  1481  007A5A  67                 	db	103	;'g'
  1482  007A5B  65                 	db	101	;'e'
  1483  007A5C  74                 	db	116	;'t'
  1484  007A5D  20                 	db	32
  1485  007A5E  70                 	db	112	;'p'
  1486  007A5F  69                 	db	105	;'i'
  1487  007A60  6E                 	db	110	;'n'
  1488  007A61  61                 	db	97	;'a'
  1489  007A62  6E                 	db	110	;'n'
  1490  007A63  61                 	db	97	;'a'
  1491  007A64  20                 	db	32
  1492  007A65  47                 	db	71	;'G'
  1493  007A66  50                 	db	80	;'P'
  1494  007A67  49                 	db	73	;'I'
  1495  007A68  4F                 	db	79	;'O'
  1496  007A69  31                 	db	49	;'1'
  1497  007A6A  32                 	db	50	;'2'
  1498  007A6B  00                 	db	0
  1499  007A6C                     STR_186:
  1500  007A6C  73                 	db	115	;'s'
  1501  007A6D  79                 	db	121	;'y'
  1502  007A6E  73                 	db	115	;'s'
  1503  007A6F  20                 	db	32
  1504  007A70  67                 	db	103	;'g'
  1505  007A71  65                 	db	101	;'e'
  1506  007A72  74                 	db	116	;'t'
  1507  007A73  20                 	db	32
  1508  007A74  70                 	db	112	;'p'
  1509  007A75  69                 	db	105	;'i'
  1510  007A76  6E                 	db	110	;'n'
  1511  007A77  61                 	db	97	;'a'
  1512  007A78  6E                 	db	110	;'n'
  1513  007A79  61                 	db	97	;'a'
  1514  007A7A  20                 	db	32
  1515  007A7B  47                 	db	71	;'G'
  1516  007A7C  50                 	db	80	;'P'
  1517  007A7D  49                 	db	73	;'I'
  1518  007A7E  4F                 	db	79	;'O'
  1519  007A7F  31                 	db	49	;'1'
  1520  007A80  33                 	db	51	;'3'
  1521  007A81  00                 	db	0
  1522  007A82                     STR_22:
  1523  007A82  73                 	db	115	;'s'
  1524  007A83  79                 	db	121	;'y'
  1525  007A84  73                 	db	115	;'s'
  1526  007A85  20                 	db	32
  1527  007A86  73                 	db	115	;'s'
  1528  007A87  6C                 	db	108	;'l'
  1529  007A88  65                 	db	101	;'e'
  1530  007A89  65                 	db	101	;'e'
  1531  007A8A  70                 	db	112	;'p'
  1532  007A8B  20                 	db	32
  1533  007A8C  39                 	db	57	;'9'
  1534  007A8D  39                 	db	57	;'9'
  1535  007A8E  39                 	db	57	;'9'
  1536  007A8F  39                 	db	57	;'9'
  1537  007A90  39                 	db	57	;'9'
  1538  007A91  39                 	db	57	;'9'
  1539  007A92  39                 	db	57	;'9'
  1540  007A93  39                 	db	57	;'9'
  1541  007A94  39                 	db	57	;'9'
  1542  007A95  00                 	db	0
  1543  007A96                     STR_96:
  1544  007A96  4D                 	db	77	;'M'
  1545  007A97  61                 	db	97	;'a'
  1546  007A98  63                 	db	99	;'c'
  1547  007A99  20                 	db	32
  1548  007A9A  45                 	db	69	;'E'
  1549  007A9B  72                 	db	114	;'r'
  1550  007A9C  72                 	db	114	;'r'
  1551  007A9D  6F                 	db	111	;'o'
  1552  007A9E  72                 	db	114	;'r'
  1553  007A9F  20                 	db	32
  1554  007AA0  4F                 	db	79	;'O'
  1555  007AA1  63                 	db	99	;'c'
  1556  007AA2  63                 	db	99	;'c'
  1557  007AA3  75                 	db	117	;'u'
  1558  007AA4  72                 	db	114	;'r'
  1559  007AA5  72                 	db	114	;'r'
  1560  007AA6  65                 	db	101	;'e'
  1561  007AA7  64                 	db	100	;'d'
  1562  007AA8  00                 	db	0
  1563  007AA9                     STR_83:
  1564  007AA9  28                 	db	40
  1565  007AAA  55                 	db	85	;'U'
  1566  007AAB  4E                 	db	78	;'N'
  1567  007AAC  43                 	db	67	;'C'
  1568  007AAD  4E                 	db	78	;'N'
  1569  007AAE  46                 	db	70	;'F'
  1570  007AAF  29                 	db	41
  1571  007AB0  20                 	db	32
  1572  007AB1  20                 	db	32
  1573  007AB2  20                 	db	32
  1574  007AB3  20                 	db	32
  1575  007AB4  28                 	db	40
  1576  007AB5  43                 	db	67	;'C'
  1577  007AB6  4E                 	db	78	;'N'
  1578  007AB7  46                 	db	70	;'F'
  1579  007AB8  29                 	db	41
  1580  007AB9  20                 	db	32
  1581  007ABA  00                 	db	0
  1582  007ABB                     STR_40:
  1583  007ABB  20                 	db	32
  1584  007ABC  20                 	db	32
  1585  007ABD  28                 	db	40
  1586  007ABE  53                 	db	83	;'S'
  1587  007ABF  32                 	db	50	;'2'
  1588  007AC0  29                 	db	41
  1589  007AC1  20                 	db	32
  1590  007AC2  20                 	db	32
  1591  007AC3  20                 	db	32
  1592  007AC4  20                 	db	32
  1593  007AC5  20                 	db	32
  1594  007AC6  20                 	db	32
  1595  007AC7  20                 	db	32
  1596  007AC8  20                 	db	32
  1597  007AC9  20                 	db	32
  1598  007ACA  20                 	db	32
  1599  007ACB  00                 	db	0
  1600  007ACC                     STR_92:
  1601  007ACC  20                 	db	32
  1602  007ACD  20                 	db	32
  1603  007ACE  20                 	db	32
  1604  007ACF  20                 	db	32
  1605  007AD0  52                 	db	82	;'R'
  1606  007AD1  65                 	db	101	;'e'
  1607  007AD2  63                 	db	99	;'c'
  1608  007AD3  65                 	db	101	;'e'
  1609  007AD4  69                 	db	105	;'i'
  1610  007AD5  76                 	db	118	;'v'
  1611  007AD6  65                 	db	101	;'e'
  1612  007AD7  64                 	db	100	;'d'
  1613  007AD8  20                 	db	32
  1614  007AD9  20                 	db	32
  1615  007ADA  20                 	db	32
  1616  007ADB  20                 	db	32
  1617  007ADC  00                 	db	0
  1618  007ADD                     STR_42:
  1619  007ADD  20                 	db	32
  1620  007ADE  20                 	db	32
  1621  007ADF  20                 	db	32
  1622  007AE0  20                 	db	32
  1623  007AE1  20                 	db	32
  1624  007AE2  20                 	db	32
  1625  007AE3  20                 	db	32
  1626  007AE4  20                 	db	32
  1627  007AE5  20                 	db	32
  1628  007AE6  28                 	db	40
  1629  007AE7  53                 	db	83	;'S'
  1630  007AE8  33                 	db	51	;'3'
  1631  007AE9  29                 	db	41
  1632  007AEA  20                 	db	32
  1633  007AEB  20                 	db	32
  1634  007AEC  20                 	db	32
  1635  007AED  00                 	db	0
  1636  007AEE                     STR_34:
  1637  007AEE  20                 	db	32
  1638  007AEF  20                 	db	32
  1639  007AF0  28                 	db	40
  1640  007AF1  53                 	db	83	;'S'
  1641  007AF2  32                 	db	50	;'2'
  1642  007AF3  29                 	db	41
  1643  007AF4  20                 	db	32
  1644  007AF5  20                 	db	32
  1645  007AF6  20                 	db	32
  1646  007AF7  28                 	db	40
  1647  007AF8  53                 	db	83	;'S'
  1648  007AF9  33                 	db	51	;'3'
  1649  007AFA  29                 	db	41
  1650  007AFB  20                 	db	32
  1651  007AFC  20                 	db	32
  1652  007AFD  20                 	db	32
  1653  007AFE  00                 	db	0
  1654  007AFF                     STR_79:
  1655  007AFF  20                 	db	32
  1656  007B00  20                 	db	32
  1657  007B01  4C                 	db	76	;'L'
  1658  007B02  61                 	db	97	;'a'
  1659  007B03  73                 	db	115	;'s'
  1660  007B04  74                 	db	116	;'t'
  1661  007B05  20                 	db	32
  1662  007B06  4D                 	db	77	;'M'
  1663  007B07  65                 	db	101	;'e'
  1664  007B08  73                 	db	115	;'s'
  1665  007B09  73                 	db	115	;'s'
  1666  007B0A  61                 	db	97	;'a'
  1667  007B0B  67                 	db	103	;'g'
  1668  007B0C  65                 	db	101	;'e'
  1669  007B0D  20                 	db	32
  1670  007B0E  20                 	db	32
  1671  007B0F  00                 	db	0
  1672  007B10                     STR_78:
  1673  007B10  20                 	db	32
  1674  007B11  56                 	db	86	;'V'
  1675  007B12  69                 	db	105	;'i'
  1676  007B13  65                 	db	101	;'e'
  1677  007B14  77                 	db	119	;'w'
  1678  007B15  20                 	db	32
  1679  007B16  44                 	db	68	;'D'
  1680  007B17  6F                 	db	111	;'o'
  1681  007B18  77                 	db	119	;'w'
  1682  007B19  6E                 	db	110	;'n'
  1683  007B1A  6C                 	db	108	;'l'
  1684  007B1B  69                 	db	105	;'i'
  1685  007B1C  6E                 	db	110	;'n'
  1686  007B1D  6B                 	db	107	;'k'
  1687  007B1E  20                 	db	32
  1688  007B1F  20                 	db	32
  1689  007B20  00                 	db	0
  1690  007B21                     STR_75:
  1691  007B21  20                 	db	32
  1692  007B22  20                 	db	32
  1693  007B23  49                 	db	73	;'I'
  1694  007B24  73                 	db	115	;'s'
  1695  007B25  73                 	db	115	;'s'
  1696  007B26  75                 	db	117	;'u'
  1697  007B27  65                 	db	101	;'e'
  1698  007B28  20                 	db	32
  1699  007B29  55                 	db	85	;'U'
  1700  007B2A  70                 	db	112	;'p'
  1701  007B2B  6C                 	db	108	;'l'
  1702  007B2C  69                 	db	105	;'i'
  1703  007B2D  6E                 	db	110	;'n'
  1704  007B2E  6B                 	db	107	;'k'
  1705  007B2F  20                 	db	32
  1706  007B30  20                 	db	32
  1707  007B31  00                 	db	0
  1708  007B32                     STR_29:
  1709  007B32  20                 	db	32
  1710  007B33  28                 	db	40
  1711  007B34  53                 	db	83	;'S'
  1712  007B35  32                 	db	50	;'2'
  1713  007B36  29                 	db	41
  1714  007B37  20                 	db	32
  1715  007B38  20                 	db	32
  1716  007B39  20                 	db	32
  1717  007B3A  20                 	db	32
  1718  007B3B  20                 	db	32
  1719  007B3C  20                 	db	32
  1720  007B3D  28                 	db	40
  1721  007B3E  53                 	db	83	;'S'
  1722  007B3F  33                 	db	51	;'3'
  1723  007B40  29                 	db	41
  1724  007B41  20                 	db	32
  1725  007B42  00                 	db	0
  1726  007B43                     STR_32:
  1727  007B43  20                 	db	32
  1728  007B44  4A                 	db	74	;'J'
  1729  007B45  6F                 	db	111	;'o'
  1730  007B46  69                 	db	105	;'i'
  1731  007B47  6E                 	db	110	;'n'
  1732  007B48  69                 	db	105	;'i'
  1733  007B49  6E                 	db	110	;'n'
  1734  007B4A  67                 	db	103	;'g'
  1735  007B4B  20                 	db	32
  1736  007B4C  4D                 	db	77	;'M'
  1737  007B4D  65                 	db	101	;'e'
  1738  007B4E  74                 	db	116	;'t'
  1739  007B4F  68                 	db	104	;'h'
  1740  007B50  6F                 	db	111	;'o'
  1741  007B51  64                 	db	100	;'d'
  1742  007B52  20                 	db	32
  1743  007B53  00                 	db	0
  1744  007B54                     STR_91:
  1745  007B54  53                 	db	83	;'S'
  1746  007B55  65                 	db	101	;'e'
  1747  007B56  72                 	db	114	;'r'
  1748  007B57  76                 	db	118	;'v'
  1749  007B58  65                 	db	101	;'e'
  1750  007B59  72                 	db	114	;'r'
  1751  007B5A  20                 	db	32
  1752  007B5B  52                 	db	82	;'R'
  1753  007B5C  65                 	db	101	;'e'
  1754  007B5D  73                 	db	115	;'s'
  1755  007B5E  70                 	db	112	;'p'
  1756  007B5F  6F                 	db	111	;'o'
  1757  007B60  6E                 	db	110	;'n'
  1758  007B61  73                 	db	115	;'s'
  1759  007B62  65                 	db	101	;'e'
  1760  007B63  20                 	db	32
  1761  007B64  00                 	db	0
  1762  007B65                     STR_120:
  1763  007B65  54                 	db	84	;'T'
  1764  007B66  78                 	db	120	;'x'
  1765  007B67  20                 	db	32
  1766  007B68  45                 	db	69	;'E'
  1767  007B69  76                 	db	118	;'v'
  1768  007B6A  65                 	db	101	;'e'
  1769  007B6B  6E                 	db	110	;'n'
  1770  007B6C  74                 	db	116	;'t'
  1771  007B6D  20                 	db	32
  1772  007B6E  54                 	db	84	;'T'
  1773  007B6F  69                 	db	105	;'i'
  1774  007B70  6D                 	db	109	;'m'
  1775  007B71  69                 	db	105	;'i'
  1776  007B72  6E                 	db	110	;'n'
  1777  007B73  67                 	db	103	;'g'
  1778  007B74  20                 	db	32
  1779  007B75  00                 	db	0
  1780  007B76                     STR_119:
  1781  007B76  50                 	db	80	;'P'
  1782  007B77  65                 	db	101	;'e'
  1783  007B78  72                 	db	114	;'r'
  1784  007B79  69                 	db	105	;'i'
  1785  007B7A  6F                 	db	111	;'o'
  1786  007B7B  64                 	db	100	;'d'
  1787  007B7C  69                 	db	105	;'i'
  1788  007B7D  63                 	db	99	;'c'
  1789  007B7E  20                 	db	32
  1790  007B7F  55                 	db	85	;'U'
  1791  007B80  70                 	db	112	;'p'
  1792  007B81  6C                 	db	108	;'l'
  1793  007B82  69                 	db	105	;'i'
  1794  007B83  6E                 	db	110	;'n'
  1795  007B84  6B                 	db	107	;'k'
  1796  007B85  20                 	db	32
  1797  007B86  00                 	db	0
  1798  007B87                     STR_76:
  1799  007B87  20                 	db	32
  1800  007B88  4C                 	db	76	;'L'
  1801  007B89  6F                 	db	111	;'o'
  1802  007B8A  52                 	db	82	;'R'
  1803  007B8B  61                 	db	97	;'a'
  1804  007B8C  57                 	db	87	;'W'
  1805  007B8D  41                 	db	65	;'A'
  1806  007B8E  4E                 	db	78	;'N'
  1807  007B8F  20                 	db	32
  1808  007B90  50                 	db	80	;'P'
  1809  007B91  61                 	db	97	;'a'
  1810  007B92  63                 	db	99	;'c'
  1811  007B93  6B                 	db	107	;'k'
  1812  007B94  65                 	db	101	;'e'
  1813  007B95  74                 	db	116	;'t'
  1814  007B96  20                 	db	32
  1815  007B97  00                 	db	0
  1816  007B98                     STR_33:
  1817  007B98  3C                 	db	60	;'<'
  1818  007B99  2D                 	db	45
  1819  007B9A  20                 	db	32
  1820  007B9B  41                 	db	65	;'A'
  1821  007B9C  42                 	db	66	;'B'
  1822  007B9D  50                 	db	80	;'P'
  1823  007B9E  20                 	db	32
  1824  007B9F  20                 	db	32
  1825  007BA0  20                 	db	32
  1826  007BA1  4F                 	db	79	;'O'
  1827  007BA2  54                 	db	84	;'T'
  1828  007BA3  41                 	db	65	;'A'
  1829  007BA4  41                 	db	65	;'A'
  1830  007BA5  20                 	db	32
  1831  007BA6  2D                 	db	45
  1832  007BA7  3E                 	db	62	;'>'
  1833  007BA8  00                 	db	0
  1834  007BA9                     STR_26:
  1835  007BA9  52                 	db	82	;'R'
  1836  007BAA  65                 	db	101	;'e'
  1837  007BAB  52                 	db	82	;'R'
  1838  007BAC  75                 	db	117	;'u'
  1839  007BAD  6E                 	db	110	;'n'
  1840  007BAE  20                 	db	32
  1841  007BAF  50                 	db	80	;'P'
  1842  007BB0  77                 	db	119	;'w'
  1843  007BB1  72                 	db	114	;'r'
  1844  007BB2  54                 	db	84	;'T'
  1845  007BB3  73                 	db	115	;'s'
  1846  007BB4  74                 	db	116	;'t'
  1847  007BB5  3C                 	db	60	;'<'
  1848  007BB6  53                 	db	83	;'S'
  1849  007BB7  32                 	db	50	;'2'
  1850  007BB8  3E                 	db	62	;'>'
  1851  007BB9  00                 	db	0
  1852  007BBA                     STR_94:
  1853  007BBA  44                 	db	68	;'D'
  1854  007BBB  61                 	db	97	;'a'
  1855  007BBC  74                 	db	116	;'t'
  1856  007BBD  61                 	db	97	;'a'
  1857  007BBE  20                 	db	32
  1858  007BBF  54                 	db	84	;'T'
  1859  007BC0  72                 	db	114	;'r'
  1860  007BC1  61                 	db	97	;'a'
  1861  007BC2  6E                 	db	110	;'n'
  1862  007BC3  73                 	db	115	;'s'
  1863  007BC4  6D                 	db	109	;'m'
  1864  007BC5  69                 	db	105	;'i'
  1865  007BC6  74                 	db	116	;'t'
  1866  007BC7  74                 	db	116	;'t'
  1867  007BC8  65                 	db	101	;'e'
  1868  007BC9  64                 	db	100	;'d'
  1869  007BCA  00                 	db	0
  1870  007BCB                     STR_151:
  1871  007BCB  45                 	db	69	;'E'
  1872  007BCC  6E                 	db	110	;'n'
  1873  007BCD  74                 	db	116	;'t'
  1874  007BCE  65                 	db	101	;'e'
  1875  007BCF  72                 	db	114	;'r'
  1876  007BD0  20                 	db	32
  1877  007BD1  53                 	db	83	;'S'
  1878  007BD2  6C                 	db	108	;'l'
  1879  007BD3  65                 	db	101	;'e'
  1880  007BD4  65                 	db	101	;'e'
  1881  007BD5  70                 	db	112	;'p'
  1882  007BD6  20                 	db	32
  1883  007BD7  4D                 	db	77	;'M'
  1884  007BD8  6F                 	db	111	;'o'
  1885  007BD9  64                 	db	100	;'d'
  1886  007BDA  65                 	db	101	;'e'
  1887  007BDB  00                 	db	0
  1888  007BDC                     STR_81:
  1889  007BDC  55                 	db	85	;'U'
  1890  007BDD  70                 	db	112	;'p'
  1891  007BDE  6C                 	db	108	;'l'
  1892  007BDF  69                 	db	105	;'i'
  1893  007BE0  6E                 	db	110	;'n'
  1894  007BE1  6B                 	db	107	;'k'
  1895  007BE2  20                 	db	32
  1896  007BE3  50                 	db	80	;'P'
  1897  007BE4  63                 	db	99	;'c'
  1898  007BE5  6B                 	db	107	;'k'
  1899  007BE6  74                 	db	116	;'t'
  1900  007BE7  20                 	db	32
  1901  007BE8  54                 	db	84	;'T'
  1902  007BE9  79                 	db	121	;'y'
  1903  007BEA  70                 	db	112	;'p'
  1904  007BEB  65                 	db	101	;'e'
  1905  007BEC  00                 	db	0
  1906  007BED                     STR_135:
  1907  007BED  53                 	db	83	;'S'
  1908  007BEE  65                 	db	101	;'e'
  1909  007BEF  6C                 	db	108	;'l'
  1910  007BF0  65                 	db	101	;'e'
  1911  007BF1  63                 	db	99	;'c'
  1912  007BF2  74                 	db	116	;'t'
  1913  007BF3  20                 	db	32
  1914  007BF4  44                 	db	68	;'D'
  1915  007BF5  61                 	db	97	;'a'
  1916  007BF6  74                 	db	116	;'t'
  1917  007BF7  61                 	db	97	;'a'
  1918  007BF8  20                 	db	32
  1919  007BF9  52                 	db	82	;'R'
  1920  007BFA  61                 	db	97	;'a'
  1921  007BFB  74                 	db	116	;'t'
  1922  007BFC  65                 	db	101	;'e'
  1923  007BFD  00                 	db	0
  1924  007BFE                     STR_27:
  1925  007BFE  4D                 	db	77	;'M'
  1926  007BFF  6F                 	db	111	;'o'
  1927  007C00  62                 	db	98	;'b'
  1928  007C01  69                 	db	105	;'i'
  1929  007C02  6C                 	db	108	;'l'
  1930  007C03  65                 	db	101	;'e'
  1931  007C04  20                 	db	32
  1932  007C05  4D                 	db	77	;'M'
  1933  007C06  6F                 	db	111	;'o'
  1934  007C07  74                 	db	116	;'t'
  1935  007C08  65                 	db	101	;'e'
  1936  007C09  20                 	db	32
  1937  007C0A  2D                 	db	45
  1938  007C0B  41                 	db	65	;'A'
  1939  007C0C  70                 	db	112	;'p'
  1940  007C0D  70                 	db	112	;'p'
  1941  007C0E  00                 	db	0
  1942  007C0F                     STR_28:
  1943  007C0F  4E                 	db	78	;'N'
  1944  007C10  61                 	db	97	;'a'
  1945  007C11  76                 	db	118	;'v'
  1946  007C12  69                 	db	105	;'i'
  1947  007C13  67                 	db	103	;'g'
  1948  007C14  61                 	db	97	;'a'
  1949  007C15  74                 	db	116	;'t'
  1950  007C16  65                 	db	101	;'e'
  1951  007C17  20                 	db	32
  1952  007C18  20                 	db	32
  1953  007C19  53                 	db	83	;'S'
  1954  007C1A  65                 	db	101	;'e'
  1955  007C1B  6C                 	db	108	;'l'
  1956  007C1C  65                 	db	101	;'e'
  1957  007C1D  63                 	db	99	;'c'
  1958  007C1E  74                 	db	116	;'t'
  1959  007C1F  00                 	db	0
  1960  007C20                     STR_111:
  1961  007C20  4D                 	db	77	;'M'
  1962  007C21  65                 	db	101	;'e'
  1963  007C22  6E                 	db	110	;'n'
  1964  007C23  75                 	db	117	;'u'
  1965  007C24  20                 	db	32
  1966  007C25  48                 	db	72	;'H'
  1967  007C26  61                 	db	97	;'a'
  1968  007C27  73                 	db	115	;'s'
  1969  007C28  20                 	db	32
  1970  007C29  54                 	db	84	;'T'
  1971  007C2A  69                 	db	105	;'i'
  1972  007C2B  6D                 	db	109	;'m'
  1973  007C2C  65                 	db	101	;'e'
  1974  007C2D  6F                 	db	111	;'o'
  1975  007C2E  75                 	db	117	;'u'
  1976  007C2F  74                 	db	116	;'t'
  1977  007C30  00                 	db	0
  1978  007C31                     STR_71:
  1979  007C31  53                 	db	83	;'S'
  1980  007C32  65                 	db	101	;'e'
  1981  007C33  6E                 	db	110	;'n'
  1982  007C34  64                 	db	100	;'d'
  1983  007C35  20                 	db	32
  1984  007C36  50                 	db	80	;'P'
  1985  007C37  65                 	db	101	;'e'
  1986  007C38  72                 	db	114	;'r'
  1987  007C39  69                 	db	105	;'i'
  1988  007C3A  6F                 	db	111	;'o'
  1989  007C3B  64                 	db	100	;'d'
  1990  007C3C  69                 	db	105	;'i'
  1991  007C3D  63                 	db	99	;'c'
  1992  007C3E  20                 	db	32
  1993  007C3F  54                 	db	84	;'T'
  1994  007C40  78                 	db	120	;'x'
  1995  007C41  00                 	db	0
  1996  007C42                     STR_105:
  1997  007C42  44                 	db	68	;'D'
  1998  007C43  6F                 	db	111	;'o'
  1999  007C44  77                 	db	119	;'w'
  2000  007C45  6E                 	db	110	;'n'
  2001  007C46  6C                 	db	108	;'l'
  2002  007C47  69                 	db	105	;'i'
  2003  007C48  6E                 	db	110	;'n'
  2004  007C49  6B                 	db	107	;'k'
  2005  007C4A  20                 	db	32
  2006  007C4B  44                 	db	68	;'D'
  2007  007C4C  69                 	db	105	;'i'
  2008  007C4D  73                 	db	115	;'s'
  2009  007C4E  70                 	db	112	;'p'
  2010  007C4F  6C                 	db	108	;'l'
  2011  007C50  61                 	db	97	;'a'
  2012  007C51  79                 	db	121	;'y'
  2013  007C52  00                 	db	0
  2014  007C53                     STR_103:
  2015  007C53  20                 	db	32
  2016  007C54  20                 	db	32
  2017  007C55  20                 	db	32
  2018  007C56  20                 	db	32
  2019  007C57  44                 	db	68	;'D'
  2020  007C58  69                 	db	105	;'i'
  2021  007C59  73                 	db	115	;'s'
  2022  007C5A  70                 	db	112	;'p'
  2023  007C5B  6C                 	db	108	;'l'
  2024  007C5C  61                 	db	97	;'a'
  2025  007C5D  79                 	db	121	;'y'
  2026  007C5E  20                 	db	32
  2027  007C5F  20                 	db	32
  2028  007C60  20                 	db	32
  2029  007C61  20                 	db	32
  2030  007C62  00                 	db	0
  2031  007C63                     STR_102:
  2032  007C63  20                 	db	32
  2033  007C64  20                 	db	32
  2034  007C65  53                 	db	83	;'S'
  2035  007C66  65                 	db	101	;'e'
  2036  007C67  6E                 	db	110	;'n'
  2037  007C68  73                 	db	115	;'s'
  2038  007C69  6F                 	db	111	;'o'
  2039  007C6A  72                 	db	114	;'r'
  2040  007C6B  20                 	db	32
  2041  007C6C  44                 	db	68	;'D'
  2042  007C6D  61                 	db	97	;'a'
  2043  007C6E  74                 	db	116	;'t'
  2044  007C6F  61                 	db	97	;'a'
  2045  007C70  20                 	db	32
  2046  007C71  20                 	db	32
  2047  007C72  00                 	db	0
  2048  007C73                     STR_114:
  2049  007C73  28                 	db	40
  2050  007C74  4E                 	db	78	;'N'
  2051  007C75  41                 	db	65	;'A'
  2052  007C76  56                 	db	86	;'V'
  2053  007C77  29                 	db	41
  2054  007C78  20                 	db	32
  2055  007C79  20                 	db	32
  2056  007C7A  20                 	db	32
  2057  007C7B  20                 	db	32
  2058  007C7C  28                 	db	40
  2059  007C7D  43                 	db	67	;'C'
  2060  007C7E  4E                 	db	78	;'N'
  2061  007C7F  47                 	db	71	;'G'
  2062  007C80  29                 	db	41
  2063  007C81  20                 	db	32
  2064  007C82  00                 	db	0
  2065  007C83                     STR_77:
  2066  007C83  28                 	db	40
  2067  007C84  4E                 	db	78	;'N'
  2068  007C85  41                 	db	65	;'A'
  2069  007C86  56                 	db	86	;'V'
  2070  007C87  29                 	db	41
  2071  007C88  20                 	db	32
  2072  007C89  20                 	db	32
  2073  007C8A  20                 	db	32
  2074  007C8B  20                 	db	32
  2075  007C8C  28                 	db	40
  2076  007C8D  53                 	db	83	;'S'
  2077  007C8E  45                 	db	69	;'E'
  2078  007C8F  4C                 	db	76	;'L'
  2079  007C90  29                 	db	41
  2080  007C91  20                 	db	32
  2081  007C92  00                 	db	0
  2082  007C93                     STR_152:
  2083  007C93  28                 	db	40
  2084  007C94  4E                 	db	78	;'N'
  2085  007C95  41                 	db	65	;'A'
  2086  007C96  56                 	db	86	;'V'
  2087  007C97  29                 	db	41
  2088  007C98  20                 	db	32
  2089  007C99  20                 	db	32
  2090  007C9A  20                 	db	32
  2091  007C9B  20                 	db	32
  2092  007C9C  28                 	db	40
  2093  007C9D  53                 	db	83	;'S'
  2094  007C9E  4C                 	db	76	;'L'
  2095  007C9F  50                 	db	80	;'P'
  2096  007CA0  29                 	db	41
  2097  007CA1  20                 	db	32
  2098  007CA2  00                 	db	0
  2099  007CA3                     STR_163:
  2100  007CA3  6D                 	db	109	;'m'
  2101  007CA4  61                 	db	97	;'a'
  2102  007CA5  63                 	db	99	;'c'
  2103  007CA6  20                 	db	32
  2104  007CA7  73                 	db	115	;'s'
  2105  007CA8  65                 	db	101	;'e'
  2106  007CA9  74                 	db	116	;'t'
  2107  007CAA  20                 	db	32
  2108  007CAB  61                 	db	97	;'a'
  2109  007CAC  64                 	db	100	;'d'
  2110  007CAD  72                 	db	114	;'r'
  2111  007CAE  20                 	db	32
  2112  007CAF  6F                 	db	111	;'o'
  2113  007CB0  66                 	db	102	;'f'
  2114  007CB1  66                 	db	102	;'f'
  2115  007CB2  00                 	db	0
  2116  007CB3                     STR_98:
  2117  007CB3  4E                 	db	78	;'N'
  2118  007CB4  6F                 	db	111	;'o'
  2119  007CB5  20                 	db	32
  2120  007CB6  46                 	db	70	;'F'
  2121  007CB7  72                 	db	114	;'r'
  2122  007CB8  65                 	db	101	;'e'
  2123  007CB9  65                 	db	101	;'e'
  2124  007CBA  20                 	db	32
  2125  007CBB  43                 	db	67	;'C'
  2126  007CBC  68                 	db	104	;'h'
  2127  007CBD  61                 	db	97	;'a'
  2128  007CBE  6E                 	db	110	;'n'
  2129  007CBF  6E                 	db	110	;'n'
  2130  007CC0  65                 	db	101	;'e'
  2131  007CC1  6C                 	db	108	;'l'
  2132  007CC2  00                 	db	0
  2133  007CC3                     STR_7:
  2134  007CC3  42                 	db	66	;'B'
  2135  007CC4  75                 	db	117	;'u'
  2136  007CC5  69                 	db	105	;'i'
  2137  007CC6  6C                 	db	108	;'l'
  2138  007CC7  64                 	db	100	;'d'
  2139  007CC8  20                 	db	32
  2140  007CC9  44                 	db	68	;'D'
  2141  007CCA  61                 	db	97	;'a'
  2142  007CCB  74                 	db	116	;'t'
  2143  007CCC  65                 	db	101	;'e'
  2144  007CCD  2F                 	db	47
  2145  007CCE  54                 	db	84	;'T'
  2146  007CCF  69                 	db	105	;'i'
  2147  007CD0  6D                 	db	109	;'m'
  2148  007CD1  65                 	db	101	;'e'
  2149  007CD2  00                 	db	0
  2150  007CD3                     STR_112:
  2151  007CD3  20                 	db	32
  2152  007CD4  20                 	db	32
  2153  007CD5  20                 	db	32
  2154  007CD6  20                 	db	32
  2155  007CD7  45                 	db	69	;'E'
  2156  007CD8  6E                 	db	110	;'n'
  2157  007CD9  61                 	db	97	;'a'
  2158  007CDA  62                 	db	98	;'b'
  2159  007CDB  6C                 	db	108	;'l'
  2160  007CDC  65                 	db	101	;'e'
  2161  007CDD  64                 	db	100	;'d'
  2162  007CDE  20                 	db	32
  2163  007CDF  20                 	db	32
  2164  007CE0  20                 	db	32
  2165  007CE1  00                 	db	0
  2166  007CE2                     STR_113:
  2167  007CE2  20                 	db	32
  2168  007CE3  20                 	db	32
  2169  007CE4  20                 	db	32
  2170  007CE5  20                 	db	32
  2171  007CE6  44                 	db	68	;'D'
  2172  007CE7  69                 	db	105	;'i'
  2173  007CE8  73                 	db	115	;'s'
  2174  007CE9  61                 	db	97	;'a'
  2175  007CEA  62                 	db	98	;'b'
  2176  007CEB  6C                 	db	108	;'l'
  2177  007CEC  65                 	db	101	;'e'
  2178  007CED  64                 	db	100	;'d'
  2179  007CEE  20                 	db	32
  2180  007CEF  20                 	db	32
  2181  007CF0  00                 	db	0
  2182  007CF1                     STR_172:
  2183  007CF1  6D                 	db	109	;'m'
  2184  007CF2  61                 	db	97	;'a'
  2185  007CF3  63                 	db	99	;'c'
  2186  007CF4  20                 	db	32
  2187  007CF5  73                 	db	115	;'s'
  2188  007CF6  65                 	db	101	;'e'
  2189  007CF7  74                 	db	116	;'t'
  2190  007CF8  20                 	db	32
  2191  007CF9  61                 	db	97	;'a'
  2192  007CFA  64                 	db	100	;'d'
  2193  007CFB  72                 	db	114	;'r'
  2194  007CFC  20                 	db	32
  2195  007CFD  6F                 	db	111	;'o'
  2196  007CFE  6E                 	db	110	;'n'
  2197  007CFF  00                 	db	0
  2198  007D00                     STR_2:
  2199  007D00  20                 	db	32
  2200  007D01  20                 	db	32
  2201  007D02  20                 	db	32
  2202  007D03  4C                 	db	76	;'L'
  2203  007D04  6F                 	db	111	;'o'
  2204  007D05  52                 	db	82	;'R'
  2205  007D06  61                 	db	97	;'a'
  2206  007D07  20                 	db	32
  2207  007D08  44                 	db	68	;'D'
  2208  007D09  65                 	db	101	;'e'
  2209  007D0A  6D                 	db	109	;'m'
  2210  007D0B  6F                 	db	111	;'o'
  2211  007D0C  20                 	db	32
  2212  007D0D  20                 	db	32
  2213  007D0E  00                 	db	0
  2214  007D0F                     STR_3:
  2215  007D0F  20                 	db	32
  2216  007D10  56                 	db	86	;'V'
  2217  007D11  20                 	db	32
  2218  007D12  31                 	db	49	;'1'
  2219  007D13  2E                 	db	46
  2220  007D14  30                 	db	48	;'0'
  2221  007D15  2E                 	db	46
  2222  007D16  31                 	db	49	;'1'
  2223  007D17  20                 	db	32
  2224  007D18  43                 	db	67	;'C'
  2225  007D19  6F                 	db	111	;'o'
  2226  007D1A  64                 	db	100	;'d'
  2227  007D1B  65                 	db	101	;'e'
  2228  007D1C  20                 	db	32
  2229  007D1D  00                 	db	0
  2230  007D1E                     STR_1:
  2231  007D1E  4D                 	db	77	;'M'
  2232  007D1F  69                 	db	105	;'i'
  2233  007D20  63                 	db	99	;'c'
  2234  007D21  72                 	db	114	;'r'
  2235  007D22  6F                 	db	111	;'o'
  2236  007D23  63                 	db	99	;'c'
  2237  007D24  68                 	db	104	;'h'
  2238  007D25  69                 	db	105	;'i'
  2239  007D26  70                 	db	112	;'p'
  2240  007D27  20                 	db	32
  2241  007D28  4D                 	db	77	;'M'
  2242  007D29  6F                 	db	111	;'o'
  2243  007D2A  74                 	db	116	;'t'
  2244  007D2B  65                 	db	101	;'e'
  2245  007D2C  00                 	db	0
  2246  007D2D                     STR_74:
  2247  007D2D  6D                 	db	109	;'m'
  2248  007D2E  61                 	db	97	;'a'
  2249  007D2F  63                 	db	99	;'c'
  2250  007D30  20                 	db	32
  2251  007D31  74                 	db	116	;'t'
  2252  007D32  78                 	db	120	;'x'
  2253  007D33  20                 	db	32
  2254  007D34  75                 	db	117	;'u'
  2255  007D35  6E                 	db	110	;'n'
  2256  007D36  63                 	db	99	;'c'
  2257  007D37  6E                 	db	110	;'n'
  2258  007D38  66                 	db	102	;'f'
  2259  007D39  20                 	db	32
  2260  007D3A  00                 	db	0
  2261  007D3B                     STR_43:
  2262  007D3B  6D                 	db	109	;'m'
  2263  007D3C  61                 	db	97	;'a'
  2264  007D3D  63                 	db	99	;'c'
  2265  007D3E  20                 	db	32
  2266  007D3F  6A                 	db	106	;'j'
  2267  007D40  6F                 	db	111	;'o'
  2268  007D41  69                 	db	105	;'i'
  2269  007D42  6E                 	db	110	;'n'
  2270  007D43  20                 	db	32
  2271  007D44  6F                 	db	111	;'o'
  2272  007D45  74                 	db	116	;'t'
  2273  007D46  61                 	db	97	;'a'
  2274  007D47  61                 	db	97	;'a'
  2275  007D48  00                 	db	0
  2276  007D49                     STR_57:
  2277  007D49  69                 	db	105	;'i'
  2278  007D4A  6E                 	db	110	;'n'
  2279  007D4B  76                 	db	118	;'v'
  2280  007D4C  61                 	db	97	;'a'
  2281  007D4D  6C                 	db	108	;'l'
  2282  007D4E  69                 	db	105	;'i'
  2283  007D4F  64                 	db	100	;'d'
  2284  007D50  5F                 	db	95	;'_'
  2285  007D51  70                 	db	112	;'p'
  2286  007D52  61                 	db	97	;'a'
  2287  007D53  72                 	db	114	;'r'
  2288  007D54  61                 	db	97	;'a'
  2289  007D55  6D                 	db	109	;'m'
  2290  007D56  00                 	db	0
  2291  007D57                     STR_45:
  2292  007D57  6B                 	db	107	;'k'
  2293  007D58  65                 	db	101	;'e'
  2294  007D59  79                 	db	121	;'y'
  2295  007D5A  73                 	db	115	;'s'
  2296  007D5B  5F                 	db	95	;'_'
  2297  007D5C  6E                 	db	110	;'n'
  2298  007D5D  6F                 	db	111	;'o'
  2299  007D5E  74                 	db	116	;'t'
  2300  007D5F  5F                 	db	95	;'_'
  2301  007D60  69                 	db	105	;'i'
  2302  007D61  6E                 	db	110	;'n'
  2303  007D62  69                 	db	105	;'i'
  2304  007D63  74                 	db	116	;'t'
  2305  007D64  00                 	db	0
  2306  007D65                     STR_82:
  2307  007D65  54                 	db	84	;'T'
  2308  007D66  68                 	db	104	;'h'
  2309  007D67  72                 	db	114	;'r'
  2310  007D68  6F                 	db	111	;'o'
  2311  007D69  75                 	db	117	;'u'
  2312  007D6A  20                 	db	32
  2313  007D6B  50                 	db	80	;'P'
  2314  007D6C  6F                 	db	111	;'o'
  2315  007D6D  72                 	db	114	;'r'
  2316  007D6E  74                 	db	116	;'t'
  2317  007D6F  23                 	db	35
  2318  007D70  20                 	db	32
  2319  007D71  00                 	db	0
  2320  007D72                     STR_73:
  2321  007D72  4C                 	db	76	;'L'
  2322  007D73  3A                 	db	58	;':'
  2323  007D74  20                 	db	32
  2324  007D75  20                 	db	32
  2325  007D76  20                 	db	32
  2326  007D77  20                 	db	32
  2327  007D78  20                 	db	32
  2328  007D79  20                 	db	32
  2329  007D7A  20                 	db	32
  2330  007D7B  54                 	db	84	;'T'
  2331  007D7C  3A                 	db	58	;':'
  2332  007D7D  20                 	db	32
  2333  007D7E  00                 	db	0
  2334  007D7F                     STR_164:
  2335  007D7F  6D                 	db	109	;'m'
  2336  007D80  61                 	db	97	;'a'
  2337  007D81  63                 	db	99	;'c'
  2338  007D82  20                 	db	32
  2339  007D83  73                 	db	115	;'s'
  2340  007D84  65                 	db	101	;'e'
  2341  007D85  74                 	db	116	;'t'
  2342  007D86  20                 	db	32
  2343  007D87  64                 	db	100	;'d'
  2344  007D88  72                 	db	114	;'r'
  2345  007D89  20                 	db	32
  2346  007D8A  30                 	db	48	;'0'
  2347  007D8B  00                 	db	0
  2348  007D8C                     STR_165:
  2349  007D8C  6D                 	db	109	;'m'
  2350  007D8D  61                 	db	97	;'a'
  2351  007D8E  63                 	db	99	;'c'
  2352  007D8F  20                 	db	32
  2353  007D90  73                 	db	115	;'s'
  2354  007D91  65                 	db	101	;'e'
  2355  007D92  74                 	db	116	;'t'
  2356  007D93  20                 	db	32
  2357  007D94  64                 	db	100	;'d'
  2358  007D95  72                 	db	114	;'r'
  2359  007D96  20                 	db	32
  2360  007D97  31                 	db	49	;'1'
  2361  007D98  00                 	db	0
  2362  007D99                     STR_166:
  2363  007D99  6D                 	db	109	;'m'
  2364  007D9A  61                 	db	97	;'a'
  2365  007D9B  63                 	db	99	;'c'
  2366  007D9C  20                 	db	32
  2367  007D9D  73                 	db	115	;'s'
  2368  007D9E  65                 	db	101	;'e'
  2369  007D9F  74                 	db	116	;'t'
  2370  007DA0  20                 	db	32
  2371  007DA1  64                 	db	100	;'d'
  2372  007DA2  72                 	db	114	;'r'
  2373  007DA3  20                 	db	32
  2374  007DA4  32                 	db	50	;'2'
  2375  007DA5  00                 	db	0
  2376  007DA6                     STR_167:
  2377  007DA6  6D                 	db	109	;'m'
  2378  007DA7  61                 	db	97	;'a'
  2379  007DA8  63                 	db	99	;'c'
  2380  007DA9  20                 	db	32
  2381  007DAA  73                 	db	115	;'s'
  2382  007DAB  65                 	db	101	;'e'
  2383  007DAC  74                 	db	116	;'t'
  2384  007DAD  20                 	db	32
  2385  007DAE  64                 	db	100	;'d'
  2386  007DAF  72                 	db	114	;'r'
  2387  007DB0  20                 	db	32
  2388  007DB1  33                 	db	51	;'3'
  2389  007DB2  00                 	db	0
  2390  007DB3                     STR_168:
  2391  007DB3  6D                 	db	109	;'m'
  2392  007DB4  61                 	db	97	;'a'
  2393  007DB5  63                 	db	99	;'c'
  2394  007DB6  20                 	db	32
  2395  007DB7  73                 	db	115	;'s'
  2396  007DB8  65                 	db	101	;'e'
  2397  007DB9  74                 	db	116	;'t'
  2398  007DBA  20                 	db	32
  2399  007DBB  64                 	db	100	;'d'
  2400  007DBC  72                 	db	114	;'r'
  2401  007DBD  20                 	db	32
  2402  007DBE  34                 	db	52	;'4'
  2403  007DBF  00                 	db	0
  2404  007DC0                     STR_169:
  2405  007DC0  6D                 	db	109	;'m'
  2406  007DC1  61                 	db	97	;'a'
  2407  007DC2  63                 	db	99	;'c'
  2408  007DC3  20                 	db	32
  2409  007DC4  73                 	db	115	;'s'
  2410  007DC5  65                 	db	101	;'e'
  2411  007DC6  74                 	db	116	;'t'
  2412  007DC7  20                 	db	32
  2413  007DC8  64                 	db	100	;'d'
  2414  007DC9  72                 	db	114	;'r'
  2415  007DCA  20                 	db	32
  2416  007DCB  35                 	db	53	;'5'
  2417  007DCC  00                 	db	0
  2418  007DCD                     STR_170:
  2419  007DCD  6D                 	db	109	;'m'
  2420  007DCE  61                 	db	97	;'a'
  2421  007DCF  63                 	db	99	;'c'
  2422  007DD0  20                 	db	32
  2423  007DD1  73                 	db	115	;'s'
  2424  007DD2  65                 	db	101	;'e'
  2425  007DD3  74                 	db	116	;'t'
  2426  007DD4  20                 	db	32
  2427  007DD5  64                 	db	100	;'d'
  2428  007DD6  72                 	db	114	;'r'
  2429  007DD7  20                 	db	32
  2430  007DD8  36                 	db	54	;'6'
  2431  007DD9  00                 	db	0
  2432  007DDA                     STR_171:
  2433  007DDA  6D                 	db	109	;'m'
  2434  007DDB  61                 	db	97	;'a'
  2435  007DDC  63                 	db	99	;'c'
  2436  007DDD  20                 	db	32
  2437  007DDE  73                 	db	115	;'s'
  2438  007DDF  65                 	db	101	;'e'
  2439  007DE0  74                 	db	116	;'t'
  2440  007DE1  20                 	db	32
  2441  007DE2  64                 	db	100	;'d'
  2442  007DE3  72                 	db	114	;'r'
  2443  007DE4  20                 	db	32
  2444  007DE5  37                 	db	55	;'7'
  2445  007DE6  00                 	db	0
  2446  007DE7                     STR_41:
  2447  007DE7  6D                 	db	109	;'m'
  2448  007DE8  61                 	db	97	;'a'
  2449  007DE9  63                 	db	99	;'c'
  2450  007DEA  20                 	db	32
  2451  007DEB  6A                 	db	106	;'j'
  2452  007DEC  6F                 	db	111	;'o'
  2453  007DED  69                 	db	105	;'i'
  2454  007DEE  6E                 	db	110	;'n'
  2455  007DEF  20                 	db	32
  2456  007DF0  61                 	db	97	;'a'
  2457  007DF1  62                 	db	98	;'b'
  2458  007DF2  70                 	db	112	;'p'
  2459  007DF3  00                 	db	0
  2460  007DF4                     STR_10:
  2461  007DF4  42                 	db	66	;'B'
  2462  007DF5  75                 	db	117	;'u'
  2463  007DF6  74                 	db	116	;'t'
  2464  007DF7  74                 	db	116	;'t'
  2465  007DF8  6F                 	db	111	;'o'
  2466  007DF9  6E                 	db	110	;'n'
  2467  007DFA  20                 	db	32
  2468  007DFB  54                 	db	84	;'T'
  2469  007DFC  65                 	db	101	;'e'
  2470  007DFD  73                 	db	115	;'s'
  2471  007DFE  74                 	db	116	;'t'
  2472  007DFF  3A                 	db	58	;':'
  2473  007E00  00                 	db	0
  2474  007E01                     STR_13:
  2475  007E01  42                 	db	66	;'B'
  2476  007E02  75                 	db	117	;'u'
  2477  007E03  74                 	db	116	;'t'
  2478  007E04  74                 	db	116	;'t'
  2479  007E05  6F                 	db	111	;'o'
  2480  007E06  6E                 	db	110	;'n'
  2481  007E07  31                 	db	49	;'1'
  2482  007E08  20                 	db	32
  2483  007E09  50                 	db	80	;'P'
  2484  007E0A  41                 	db	65	;'A'
  2485  007E0B  53                 	db	83	;'S'
  2486  007E0C  53                 	db	83	;'S'
  2487  007E0D  00                 	db	0
  2488  007E0E                     STR_14:
  2489  007E0E  42                 	db	66	;'B'
  2490  007E0F  75                 	db	117	;'u'
  2491  007E10  74                 	db	116	;'t'
  2492  007E11  74                 	db	116	;'t'
  2493  007E12  6F                 	db	111	;'o'
  2494  007E13  6E                 	db	110	;'n'
  2495  007E14  32                 	db	50	;'2'
  2496  007E15  20                 	db	32
  2497  007E16  50                 	db	80	;'P'
  2498  007E17  41                 	db	65	;'A'
  2499  007E18  53                 	db	83	;'S'
  2500  007E19  53                 	db	83	;'S'
  2501  007E1A  00                 	db	0
  2502  007E1B                     STR_12:
  2503  007E1B  50                 	db	80	;'P'
  2504  007E1C  72                 	db	114	;'r'
  2505  007E1D  65                 	db	101	;'e'
  2506  007E1E  73                 	db	115	;'s'
  2507  007E1F  73                 	db	115	;'s'
  2508  007E20  20                 	db	32
  2509  007E21  42                 	db	66	;'B'
  2510  007E22  75                 	db	117	;'u'
  2511  007E23  74                 	db	116	;'t'
  2512  007E24  74                 	db	116	;'t'
  2513  007E25  6F                 	db	111	;'o'
  2514  007E26  6E                 	db	110	;'n'
  2515  007E27  00                 	db	0
  2516  007E28                     STR_189:
  2517  007E28  55                 	db	85	;'U'
  2518  007E29  53                 	db	83	;'S'
  2519  007E2A  42                 	db	66	;'B'
  2520  007E2B  20                 	db	32
  2521  007E2C  48                 	db	72	;'H'
  2522  007E2D  61                 	db	97	;'a'
  2523  007E2E  6E                 	db	110	;'n'
  2524  007E2F  64                 	db	100	;'d'
  2525  007E30  6C                 	db	108	;'l'
  2526  007E31  65                 	db	101	;'e'
  2527  007E32  72                 	db	114	;'r'
  2528  007E33  00                 	db	0
  2529  007E34                     STR_72:
  2530  007E34  4F                 	db	79	;'O'
  2531  007E35  6E                 	db	110	;'n'
  2532  007E36  20                 	db	32
  2533  007E37  50                 	db	80	;'P'
  2534  007E38  6F                 	db	111	;'o'
  2535  007E39  72                 	db	114	;'r'
  2536  007E3A  74                 	db	116	;'t'
  2537  007E3B  20                 	db	32
  2538  007E3C  23                 	db	35
  2539  007E3D  3A                 	db	58	;':'
  2540  007E3E  20                 	db	32
  2541  007E3F  00                 	db	0
  2542  007E40                     STR_87:
  2543  007E40  54                 	db	84	;'T'
  2544  007E41  78                 	db	120	;'x'
  2545  007E42  20                 	db	32
  2546  007E43  50                 	db	80	;'P'
  2547  007E44  6F                 	db	111	;'o'
  2548  007E45  72                 	db	114	;'r'
  2549  007E46  74                 	db	116	;'t'
  2550  007E47  20                 	db	32
  2551  007E48  23                 	db	35
  2552  007E49  3A                 	db	58	;':'
  2553  007E4A  20                 	db	32
  2554  007E4B  00                 	db	0
  2555  007E4C                     STR_86:
  2556  007E4C  53                 	db	83	;'S'
  2557  007E4D  65                 	db	101	;'e'
  2558  007E4E  6E                 	db	110	;'n'
  2559  007E4F  74                 	db	116	;'t'
  2560  007E50  20                 	db	32
  2561  007E51  44                 	db	68	;'D'
  2562  007E52  61                 	db	97	;'a'
  2563  007E53  74                 	db	116	;'t'
  2564  007E54  61                 	db	97	;'a'
  2565  007E55  3A                 	db	58	;':'
  2566  007E56  20                 	db	32
  2567  007E57  00                 	db	0
  2568  007E58                     STR_136:
  2569  007E58  44                 	db	68	;'D'
  2570  007E59  61                 	db	97	;'a'
  2571  007E5A  74                 	db	116	;'t'
  2572  007E5B  61                 	db	97	;'a'
  2573  007E5C  20                 	db	32
  2574  007E5D  52                 	db	82	;'R'
  2575  007E5E  61                 	db	97	;'a'
  2576  007E5F  74                 	db	116	;'t'
  2577  007E60  65                 	db	101	;'e'
  2578  007E61  3A                 	db	58	;':'
  2579  007E62  20                 	db	32
  2580  007E63  00                 	db	0
  2581  007E64                     STR_85:
  2582  007E64  6D                 	db	109	;'m'
  2583  007E65  61                 	db	97	;'a'
  2584  007E66  63                 	db	99	;'c'
  2585  007E67  20                 	db	32
  2586  007E68  74                 	db	116	;'t'
  2587  007E69  78                 	db	120	;'x'
  2588  007E6A  20                 	db	32
  2589  007E6B  63                 	db	99	;'c'
  2590  007E6C  6E                 	db	110	;'n'
  2591  007E6D  66                 	db	102	;'f'
  2592  007E6E  20                 	db	32
  2593  007E6F  00                 	db	0
  2594  007E70                     STR_8:
  2595  007E70  4D                 	db	77	;'M'
  2596  007E71  61                 	db	97	;'a'
  2597  007E72  72                 	db	114	;'r'
  2598  007E73  20                 	db	32
  2599  007E74  33                 	db	51	;'3'
  2600  007E75  30                 	db	48	;'0'
  2601  007E76  20                 	db	32
  2602  007E77  32                 	db	50	;'2'
  2603  007E78  30                 	db	48	;'0'
  2604  007E79  31                 	db	49	;'1'
  2605  007E7A  38                 	db	56	;'8'
  2606  007E7B  00                 	db	0
  2607  007E7C                     STR_11:
  2608  007E7C  42                 	db	66	;'B'
  2609  007E7D  75                 	db	117	;'u'
  2610  007E7E  74                 	db	116	;'t'
  2611  007E7F  74                 	db	116	;'t'
  2612  007E80  6F                 	db	111	;'o'
  2613  007E81  6E                 	db	110	;'n'
  2614  007E82  20                 	db	32
  2615  007E83  46                 	db	70	;'F'
  2616  007E84  41                 	db	65	;'A'
  2617  007E85  49                 	db	73	;'I'
  2618  007E86  4C                 	db	76	;'L'
  2619  007E87  00                 	db	0
  2620  007E88                     STR_61:
  2621  007E88  4F                 	db	79	;'O'
  2622  007E89  54                 	db	84	;'T'
  2623  007E8A  41                 	db	65	;'A'
  2624  007E8B  41                 	db	65	;'A'
  2625  007E8C  20                 	db	32
  2626  007E8D  4A                 	db	74	;'J'
  2627  007E8E  6F                 	db	111	;'o'
  2628  007E8F  69                 	db	105	;'i'
  2629  007E90  6E                 	db	110	;'n'
  2630  007E91  20                 	db	32
  2631  007E92  00                 	db	0
  2632  007E93                     STR_59:
  2633  007E93  6E                 	db	110	;'n'
  2634  007E94  6F                 	db	111	;'o'
  2635  007E95  5F                 	db	95	;'_'
  2636  007E96  66                 	db	102	;'f'
  2637  007E97  72                 	db	114	;'r'
  2638  007E98  65                 	db	101	;'e'
  2639  007E99  65                 	db	101	;'e'
  2640  007E9A  5F                 	db	95	;'_'
  2641  007E9B  63                 	db	99	;'c'
  2642  007E9C  68                 	db	104	;'h'
  2643  007E9D  00                 	db	0
  2644  007E9E                     STR_51:
  2645  007E9E  53                 	db	83	;'S'
  2646  007E9F  75                 	db	117	;'u'
  2647  007EA0  63                 	db	99	;'c'
  2648  007EA1  63                 	db	99	;'c'
  2649  007EA2  65                 	db	101	;'e'
  2650  007EA3  73                 	db	115	;'s'
  2651  007EA4  73                 	db	115	;'s'
  2652  007EA5  66                 	db	102	;'f'
  2653  007EA6  75                 	db	117	;'u'
  2654  007EA7  6C                 	db	108	;'l'
  2655  007EA8  00                 	db	0
  2656  007EA9                     STR_68:
  2657  007EA9  6D                 	db	109	;'m'
  2658  007EAA  61                 	db	97	;'a'
  2659  007EAB  63                 	db	99	;'c'
  2660  007EAC  20                 	db	32
  2661  007EAD  67                 	db	103	;'g'
  2662  007EAE  65                 	db	101	;'e'
  2663  007EAF  74                 	db	116	;'t'
  2664  007EB0  20                 	db	32
  2665  007EB1  64                 	db	100	;'d'
  2666  007EB2  72                 	db	114	;'r'
  2667  007EB3  00                 	db	0
  2668  007EB4                     STR_46:
  2669  007EB4  56                 	db	86	;'V'
  2670  007EB5  61                 	db	97	;'a'
  2671  007EB6  6C                 	db	108	;'l'
  2672  007EB7  69                 	db	105	;'i'
  2673  007EB8  64                 	db	100	;'d'
  2674  007EB9  20                 	db	32
  2675  007EBA  4B                 	db	75	;'K'
  2676  007EBB  65                 	db	101	;'e'
  2677  007EBC  79                 	db	121	;'y'
  2678  007EBD  73                 	db	115	;'s'
  2679  007EBE  00                 	db	0
  2680  007EBF                     STR_15:
  2681  007EBF  43                 	db	67	;'C'
  2682  007EC0  6F                 	db	111	;'o'
  2683  007EC1  6D                 	db	109	;'m'
  2684  007EC2  6D                 	db	109	;'m'
  2685  007EC3  20                 	db	32
  2686  007EC4  54                 	db	84	;'T'
  2687  007EC5  65                 	db	101	;'e'
  2688  007EC6  73                 	db	115	;'s'
  2689  007EC7  74                 	db	116	;'t'
  2690  007EC8  3A                 	db	58	;':'
  2691  007EC9  00                 	db	0
  2692  007ECA                     STR_106:
  2693  007ECA  52                 	db	82	;'R'
  2694  007ECB  78                 	db	120	;'x'
  2695  007ECC  20                 	db	32
  2696  007ECD  50                 	db	80	;'P'
  2697  007ECE  6F                 	db	111	;'o'
  2698  007ECF  72                 	db	114	;'r'
  2699  007ED0  74                 	db	116	;'t'
  2700  007ED1  23                 	db	35
  2701  007ED2  20                 	db	32
  2702  007ED3  00                 	db	0
  2703  007ED4                     STR_50:
  2704  007ED4  41                 	db	65	;'A'
  2705  007ED5  42                 	db	66	;'B'
  2706  007ED6  50                 	db	80	;'P'
  2707  007ED7  20                 	db	32
  2708  007ED8  4A                 	db	74	;'J'
  2709  007ED9  6F                 	db	111	;'o'
  2710  007EDA  69                 	db	105	;'i'
  2711  007EDB  6E                 	db	110	;'n'
  2712  007EDC  20                 	db	32
  2713  007EDD  00                 	db	0
  2714  007EDE                     STR_24:
  2715  007EDE  4D                 	db	77	;'M'
  2716  007EDF  4F                 	db	79	;'O'
  2717  007EE0  54                 	db	84	;'T'
  2718  007EE1  45                 	db	69	;'E'
  2719  007EE2  20                 	db	32
  2720  007EE3  4D                 	db	77	;'M'
  2721  007EE4  6F                 	db	111	;'o'
  2722  007EE5  64                 	db	100	;'d'
  2723  007EE6  65                 	db	101	;'e'
  2724  007EE7  00                 	db	0
  2725  007EE8                     STR_64:
  2726  007EE8  4F                 	db	79	;'O'
  2727  007EE9  54                 	db	84	;'T'
  2728  007EEA  41                 	db	65	;'A'
  2729  007EEB  41                 	db	65	;'A'
  2730  007EEC  20                 	db	32
  2731  007EED  4A                 	db	74	;'J'
  2732  007EEE  6F                 	db	111	;'o'
  2733  007EEF  69                 	db	105	;'i'
  2734  007EF0  6E                 	db	110	;'n'
  2735  007EF1  00                 	db	0
  2736  007EF2                     STR_52:
  2737  007EF2  6D                 	db	109	;'m'
  2738  007EF3  61                 	db	97	;'a'
  2739  007EF4  63                 	db	99	;'c'
  2740  007EF5  20                 	db	32
  2741  007EF6  72                 	db	114	;'r'
  2742  007EF7  65                 	db	101	;'e'
  2743  007EF8  73                 	db	115	;'s'
  2744  007EF9  65                 	db	101	;'e'
  2745  007EFA  74                 	db	116	;'t'
  2746  007EFB  00                 	db	0
  2747  007EFC                     STR_30:
  2748  007EFC  73                 	db	115	;'s'
  2749  007EFD  79                 	db	121	;'y'
  2750  007EFE  73                 	db	115	;'s'
  2751  007EFF  20                 	db	32
  2752  007F00  72                 	db	114	;'r'
  2753  007F01  65                 	db	101	;'e'
  2754  007F02  73                 	db	115	;'s'
  2755  007F03  65                 	db	101	;'e'
  2756  007F04  74                 	db	116	;'t'
  2757  007F05  00                 	db	0
  2758  007F06                     STR_16:
  2759  007F06  4C                 	db	76	;'L'
  2760  007F07  45                 	db	69	;'E'
  2761  007F08  44                 	db	68	;'D'
  2762  007F09  20                 	db	32
  2763  007F0A  54                 	db	84	;'T'
  2764  007F0B  65                 	db	101	;'e'
  2765  007F0C  73                 	db	115	;'s'
  2766  007F0D  74                 	db	116	;'t'
  2767  007F0E  3A                 	db	58	;':'
  2768  007F0F  00                 	db	0
  2769  007F10                     STR_187:
  2770  007F10  43                 	db	67	;'C'
  2771  007F11  44                 	db	68	;'D'
  2772  007F12  43                 	db	67	;'C'
  2773  007F13  20                 	db	32
  2774  007F14  4D                 	db	77	;'M'
  2775  007F15  6F                 	db	111	;'o'
  2776  007F16  64                 	db	100	;'d'
  2777  007F17  65                 	db	101	;'e'
  2778  007F18  00                 	db	0
  2779  007F19                     STR_47:
  2780  007F19  52                 	db	82	;'R'
  2781  007F1A  65                 	db	101	;'e'
  2782  007F1B  71                 	db	113	;'q'
  2783  007F1C  75                 	db	117	;'u'
  2784  007F1D  69                 	db	105	;'i'
  2785  007F1E  72                 	db	114	;'r'
  2786  007F1F  65                 	db	101	;'e'
  2787  007F20  64                 	db	100	;'d'
  2788  007F21  00                 	db	0
  2789  007F22                     STR_49:
  2790  007F22  61                 	db	97	;'a'
  2791  007F23  63                 	db	99	;'c'
  2792  007F24  63                 	db	99	;'c'
  2793  007F25  65                 	db	101	;'e'
  2794  007F26  70                 	db	112	;'p'
  2795  007F27  74                 	db	116	;'t'
  2796  007F28  65                 	db	101	;'e'
  2797  007F29  64                 	db	100	;'d'
  2798  007F2A  00                 	db	0
  2799  007F2B                     STR_173:
  2800  007F2B  6D                 	db	109	;'m'
  2801  007F2C  61                 	db	97	;'a'
  2802  007F2D  63                 	db	99	;'c'
  2803  007F2E  20                 	db	32
  2804  007F2F  73                 	db	115	;'s'
  2805  007F30  61                 	db	97	;'a'
  2806  007F31  76                 	db	118	;'v'
  2807  007F32  65                 	db	101	;'e'
  2808  007F33  00                 	db	0
  2809  007F34                     STR_25:
  2810  007F34  53                 	db	83	;'S'
  2811  007F35  74                 	db	116	;'t'
  2812  007F36  61                 	db	97	;'a'
  2813  007F37  72                 	db	114	;'r'
  2814  007F38  74                 	db	116	;'t'
  2815  007F39  69                 	db	105	;'i'
  2816  007F3A  6E                 	db	110	;'n'
  2817  007F3B  67                 	db	103	;'g'
  2818  007F3C  00                 	db	0
  2819  007F3D                     STR_4:
  2820  007F3D  4D                 	db	77	;'M'
  2821  007F3E  6F                 	db	111	;'o'
  2822  007F3F  54                 	db	84	;'T'
  2823  007F40  65                 	db	101	;'e'
  2824  007F41  20                 	db	32
  2825  007F42  76                 	db	118	;'v'
  2826  007F43  20                 	db	32
  2827  007F44  2E                 	db	46
  2828  007F45  00                 	db	0
  2829  007F46                     STR_9:
  2830  007F46  31                 	db	49	;'1'
  2831  007F47  31                 	db	49	;'1'
  2832  007F48  3A                 	db	58	;':'
  2833  007F49  30                 	db	48	;'0'
  2834  007F4A  34                 	db	52	;'4'
  2835  007F4B  3A                 	db	58	;':'
  2836  007F4C  35                 	db	53	;'5'
  2837  007F4D  30                 	db	48	;'0'
  2838  007F4E  00                 	db	0
  2839  007F4F  52                 	db	82	;'R'
  2840  007F50  46                 	db	70	;'F'
  2841  007F51  20                 	db	32
  2842  007F52  54                 	db	84	;'T'
  2843  007F53  65                 	db	101	;'e'
  2844  007F54  73                 	db	115	;'s'
  2845  007F55  74                 	db	116	;'t'
  2846  007F56  3A                 	db	58	;':'
  2847  007F57  00                 	db	0
  2848  007F58                     STR_17:
  2849  007F58  41                 	db	65	;'A'
  2850  007F59  44                 	db	68	;'D'
  2851  007F5A  43                 	db	67	;'C'
  2852  007F5B  20                 	db	32
  2853  007F5C  54                 	db	84	;'T'
  2854  007F5D  65                 	db	101	;'e'
  2855  007F5E  73                 	db	115	;'s'
  2856  007F5F  74                 	db	116	;'t'
  2857  007F60  00                 	db	0
  2858  007F61                     STR_188:
  2859  007F61  43                 	db	67	;'C'
  2860  007F62  6F                 	db	111	;'o'
  2861  007F63  6D                 	db	109	;'m'
  2862  007F64  6D                 	db	109	;'m'
  2863  007F65  61                 	db	97	;'a'
  2864  007F66  6E                 	db	110	;'n'
  2865  007F67  64                 	db	100	;'d'
  2866  007F68  00                 	db	0
  2867  007F69                     STR_18:
  2868  007F69  54                 	db	84	;'T'
  2869  007F6A  65                 	db	101	;'e'
  2870  007F6B  6D                 	db	109	;'m'
  2871  007F6C  70                 	db	112	;'p'
  2872  007F6D  20                 	db	32
  2873  007F6E  20                 	db	32
  2874  007F6F  3D                 	db	61	;'='
  2875  007F70  00                 	db	0
  2876  007F71                     STR_19:
  2877  007F71  4C                 	db	76	;'L'
  2878  007F72  69                 	db	105	;'i'
  2879  007F73  67                 	db	103	;'g'
  2880  007F74  68                 	db	104	;'h'
  2881  007F75  74                 	db	116	;'t'
  2882  007F76  20                 	db	32
  2883  007F77  3D                 	db	61	;'='
  2884  007F78  00                 	db	0
  2885  007F79                     STR_117:
  2886  007F79  54                 	db	84	;'T'
  2887  007F7A  65                 	db	101	;'e'
  2888  007F7B  6D                 	db	109	;'m'
  2889  007F7C  70                 	db	112	;'p'
  2890  007F7D  20                 	db	32
  2891  007F7E  3A                 	db	58	;':'
  2892  007F7F  00                 	db	0
  2893  007F80                     STR_116:
  2894  007F80  4C                 	db	76	;'L'
  2895  007F81  69                 	db	105	;'i'
  2896  007F82  67                 	db	103	;'g'
  2897  007F83  68                 	db	104	;'h'
  2898  007F84  74                 	db	116	;'t'
  2899  007F85  3A                 	db	58	;':'
  2900  007F86  00                 	db	0
  2901  007F87                     STR_121:
  2902  007F87  45                 	db	69	;'E'
  2903  007F88  76                 	db	118	;'v'
  2904  007F89  65                 	db	101	;'e'
  2905  007F8A  72                 	db	114	;'r'
  2906  007F8B  79                 	db	121	;'y'
  2907  007F8C  3A                 	db	58	;':'
  2908  007F8D  00                 	db	0
  2909  007F8E                     STR_65:
  2910  007F8E  44                 	db	68	;'D'
  2911  007F8F  65                 	db	101	;'e'
  2912  007F90  6E                 	db	110	;'n'
  2913  007F91  69                 	db	105	;'i'
  2914  007F92  65                 	db	101	;'e'
  2915  007F93  64                 	db	100	;'d'
  2916  007F94  00                 	db	0
  2917  007F95                     STR_63:
  2918  007F95  64                 	db	100	;'d'
  2919  007F96  65                 	db	101	;'e'
  2920  007F97  6E                 	db	110	;'n'
  2921  007F98  69                 	db	105	;'i'
  2922  007F99  65                 	db	101	;'e'
  2923  007F9A  64                 	db	100	;'d'
  2924  007F9B  00                 	db	0
  2925  007F9C                     STR_97:
  2926  007F9C  6E                 	db	110	;'n'
  2927  007F9D  6F                 	db	111	;'o'
  2928  007F9E  5F                 	db	95	;'_'
  2929  007F9F  66                 	db	102	;'f'
  2930  007FA0  72                 	db	114	;'r'
  2931  007FA1  65                 	db	101	;'e'
  2932  007FA2  00                 	db	0
  2933  007FA3                     STR_95:
  2934  007FA3  6D                 	db	109	;'m'
  2935  007FA4  61                 	db	97	;'a'
  2936  007FA5  63                 	db	99	;'c'
  2937  007FA6  5F                 	db	95	;'_'
  2938  007FA7  65                 	db	101	;'e'
  2939  007FA8  72                 	db	114	;'r'
  2940  007FA9  00                 	db	0
  2941  007FAA                     STR_90:
  2942  007FAA  6D                 	db	109	;'m'
  2943  007FAB  61                 	db	97	;'a'
  2944  007FAC  63                 	db	99	;'c'
  2945  007FAD  5F                 	db	95	;'_'
  2946  007FAE  72                 	db	114	;'r'
  2947  007FAF  78                 	db	120	;'x'
  2948  007FB0  00                 	db	0
  2949  007FB1                     STR_93:
  2950  007FB1  6D                 	db	109	;'m'
  2951  007FB2  61                 	db	97	;'a'
  2952  007FB3  63                 	db	99	;'c'
  2953  007FB4  5F                 	db	95	;'_'
  2954  007FB5  74                 	db	116	;'t'
  2955  007FB6  78                 	db	120	;'x'
  2956  007FB7  00                 	db	0
  2957  007FB8                     STR_31:
  2958  007FB8  52                 	db	82	;'R'
  2959  007FB9  4E                 	db	78	;'N'
  2960  007FBA  32                 	db	50	;'2'
  2961  007FBB  34                 	db	52	;'4'
  2962  007FBC  00                 	db	0
  2963  007FBD                     STR_35:
  2964  007FBD  52                 	db	82	;'R'
  2965  007FBE  4E                 	db	78	;'N'
  2966  007FBF  32                 	db	50	;'2'
  2967  007FC0  39                 	db	57	;'9'
  2968  007FC1  00                 	db	0
  2969  007FC2                     STR_122:
  2970  007FC2  4D                 	db	77	;'M'
  2971  007FC3  69                 	db	105	;'i'
  2972  007FC4  6E                 	db	110	;'n'
  2973  007FC5  73                 	db	115	;'s'
  2974  007FC6  00                 	db	0
  2975  007FC7                     STR_138:
  2976  007FC7  20                 	db	32
  2977  007FC8  30                 	db	48	;'0'
  2978  007FC9  20                 	db	32
  2979  007FCA  00                 	db	0
  2980  007FCB                     STR_139:
  2981  007FCB  20                 	db	32
  2982  007FCC  31                 	db	49	;'1'
  2983  007FCD  20                 	db	32
  2984  007FCE  00                 	db	0
  2985  007FCF                     STR_140:
  2986  007FCF  20                 	db	32
  2987  007FD0  32                 	db	50	;'2'
  2988  007FD1  20                 	db	32
  2989  007FD2  00                 	db	0
  2990  007FD3                     STR_141:
  2991  007FD3  20                 	db	32
  2992  007FD4  33                 	db	51	;'3'
  2993  007FD5  20                 	db	32
  2994  007FD6  00                 	db	0
  2995  007FD7                     STR_142:
  2996  007FD7  20                 	db	32
  2997  007FD8  34                 	db	52	;'4'
  2998  007FD9  20                 	db	32
  2999  007FDA  00                 	db	0
  3000  007FDB                     STR_143:
  3001  007FDB  20                 	db	32
  3002  007FDC  35                 	db	53	;'5'
  3003  007FDD  20                 	db	32
  3004  007FDE  00                 	db	0
  3005  007FDF                     STR_146:
  3006  007FDF  20                 	db	32
  3007  007FE0  31                 	db	49	;'1'
  3008  007FE1  30                 	db	48	;'0'
  3009  007FE2  00                 	db	0
  3010  007FE3                     STR_148:
  3011  007FE3  20                 	db	32
  3012  007FE4  33                 	db	51	;'3'
  3013  007FE5  30                 	db	48	;'0'
  3014  007FE6  00                 	db	0
  3015  007FE7                     STR_149:
  3016  007FE7  20                 	db	32
  3017  007FE8  36                 	db	54	;'6'
  3018  007FE9  30                 	db	48	;'0'
  3019  007FEA  00                 	db	0
  3020  007FEB                     STR_147:
  3021  007FEB  20                 	db	32
  3022  007FEC  31                 	db	49	;'1'
  3023  007FED  35                 	db	53	;'5'
  3024  007FEE  00                 	db	0
  3025  007FEF                     STR_128:
  3026  007FEF  4F                 	db	79	;'O'
  3027  007FF0  46                 	db	70	;'F'
  3028  007FF1  46                 	db	70	;'F'
  3029  007FF2  00                 	db	0
  3030  007FF3                     STR_144:
  3031  007FF3  41                 	db	65	;'A'
  3032  007FF4  44                 	db	68	;'D'
  3033  007FF5  52                 	db	82	;'R'
  3034  007FF6  00                 	db	0
  3035  007FF7                     STR_44:
  3036  007FF7  6F                 	db	111	;'o'
  3037  007FF8  6B                 	db	107	;'k'
  3038  007FF9  00                 	db	0
  3039  007FFA                     STR_118:
  3040  007FFA  43                 	db	67	;'C'
  3041  007FFB  00                 	db	0
  3042  007FFC                     STR_21:
  3043  007FFC  7A                 	db	122	;'z'
  3044  007FFD  00                 	db	0
  3045  0000                     
  3046                           ; #config settings
  3047  007FFE  00                 	db	0	; dummy byte at the end
  3048  0000                     
  3049                           	psect	cinit
  3050  0042B4                     __pcinit:
  3051                           	opt stack 0
  3052  0042B4                     start_initialization:
  3053                           	opt stack 0
  3054  0042B4                     __initialization:
  3055                           	opt stack 0
  3056                           
  3057                           ; Initialize objects allocated to BANK1 (3 bytes)
  3058                           ; load TBLPTR registers with __pidataBANK1
  3059  0042B4  0E3A               	movlw	low __pidataBANK1
  3060  0042B6  6EF6               	movwf	tblptrl,c
  3061  0042B8  0E59               	movlw	high __pidataBANK1
  3062  0042BA  6EF7               	movwf	tblptrh,c
  3063  0042BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3064  0042BE  6EF8               	movwf	tblptru,c
  3065  0042C0  0009               	tblrd		*+	;fetch initializer
  3066  0042C2  CFF5 F1FB          	movff	tablat,__pdataBANK1
  3067  0042C6  0009               	tblrd		*+	;fetch initializer
  3068  0042C8  CFF5 F1FC          	movff	tablat,__pdataBANK1+1
  3069  0042CC  0009               	tblrd		*+	;fetch initializer
  3070  0042CE  CFF5 F1FD          	movff	tablat,__pdataBANK1+2
  3071                           
  3072                           ; Initialize objects allocated to BANK0 (7 bytes)
  3073                           ; load TBLPTR registers with __pidataBANK0
  3074  0042D2  0E02               	movlw	low __pidataBANK0
  3075  0042D4  6EF6               	movwf	tblptrl,c
  3076  0042D6  0E59               	movlw	high __pidataBANK0
  3077  0042D8  6EF7               	movwf	tblptrh,c
  3078  0042DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3079  0042DC  6EF8               	movwf	tblptru,c
  3080  0042DE  EE00  F0F9         	lfsr	0,__pdataBANK0
  3081  0042E2  EE10 F007          	lfsr	1,7
  3082  0042E6                     copy_data0:
  3083  0042E6  0009               	tblrd		*+
  3084  0042E8  CFF5 FFEE          	movff	tablat,postinc0
  3085  0042EC  50E5               	movf	postdec1,w,c
  3086  0042EE  50E1               	movf	fsr1l,w,c
  3087  0042F0  E1FA               	bnz	copy_data0
  3088                           
  3089                           ; Initialize objects allocated to COMRAM (1 bytes)
  3090                           ; load TBLPTR registers with __pidataCOMRAM
  3091  0042F2  0E3D               	movlw	low __pidataCOMRAM
  3092  0042F4  6EF6               	movwf	tblptrl,c
  3093  0042F6  0E59               	movlw	high __pidataCOMRAM
  3094  0042F8  6EF7               	movwf	tblptrh,c
  3095  0042FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3096  0042FC  6EF8               	movwf	tblptru,c
  3097  0042FE  0009               	tblrd		*+	;fetch initializer
  3098  004300  CFF5 F05D          	movff	tablat,__pdataCOMRAM
  3099                           
  3100                           ; Clear objects allocated to BANK3 (128 bytes)
  3101  004304  EE03  F000         	lfsr	0,__pbssBANK3
  3102  004308  0E80               	movlw	128
  3103  00430A                     clear_0:
  3104  00430A  6AEE               	clrf	postinc0,c
  3105  00430C  06E8               	decf	wreg,f,c
  3106  00430E  E1FD               	bnz	clear_0
  3107                           
  3108                           ; Clear objects allocated to BANK2 (192 bytes)
  3109  004310  EE02  F000         	lfsr	0,__pbssBANK2
  3110  004314  0EC0               	movlw	192
  3111  004316                     clear_1:
  3112  004316  6AEE               	clrf	postinc0,c
  3113  004318  06E8               	decf	wreg,f,c
  3114  00431A  E1FD               	bnz	clear_1
  3115                           
  3116                           ; Clear objects allocated to BANK1 (251 bytes)
  3117  00431C  EE01  F000         	lfsr	0,__pbssBANK1
  3118  004320  0EFB               	movlw	251
  3119  004322                     clear_2:
  3120  004322  6AEE               	clrf	postinc0,c
  3121  004324  06E8               	decf	wreg,f,c
  3122  004326  E1FD               	bnz	clear_2
  3123                           
  3124                           ; Clear objects allocated to BANK0 (61 bytes)
  3125  004328  EE00  F0BC         	lfsr	0,__pbssBANK0
  3126  00432C  0E3D               	movlw	61
  3127  00432E                     clear_3:
  3128  00432E  6AEE               	clrf	postinc0,c
  3129  004330  06E8               	decf	wreg,f,c
  3130  004332  E1FD               	bnz	clear_3
  3131                           
  3132                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3133  004334  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3134                           
  3135                           ; Clear objects allocated to COMRAM (40 bytes)
  3136  004336  EE00  F034         	lfsr	0,__pbssCOMRAM
  3137  00433A  0E28               	movlw	40
  3138  00433C                     clear_4:
  3139  00433C  6AEE               	clrf	postinc0,c
  3140  00433E  06E8               	decf	wreg,f,c
  3141  004340  E1FD               	bnz	clear_4
  3142  004342                     end_of_initialization:
  3143                           	opt stack 0
  3144  004342                     __end_of__initialization:
  3145                           	opt stack 0
  3146  004342  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3147  004344  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3148  004346  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3149  004348  6EF8               	movwf	tblptru,c
  3150  00434A  0100               	movlb	0
  3151  00434C  EF7D  F016         	goto	_main	;jump to C main() function
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1l	equ	0xFE1
  3160                           
  3161                           	psect	bitbssCOMRAM
  3162  0002E0                     __pbitbssCOMRAM:
  3163                           	opt stack 0
  3164  0002E0                     _log:
  3165                           	opt stack 0
  3166  0002E0                     	ds	1
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           postdec1	equ	0xFE5
  3174                           fsr1l	equ	0xFE1
  3175                           
  3176                           	psect	bssCOMRAM
  3177  000034                     __pbssCOMRAM:
  3178                           	opt stack 0
  3179  000034                     _CDCDataInHandle:
  3180                           	opt stack 0
  3181  000034                     	ds	2
  3182  000036                     _pBDTEntryEP0OutNext:
  3183                           	opt stack 0
  3184  000036                     	ds	2
  3185  000038                     _pBDTEntryEP0OutCurrent:
  3186                           	opt stack 0
  3187  000038                     	ds	2
  3188  00003A                     _timer0ReloadVal:
  3189                           	opt stack 0
  3190  00003A                     	ds	2
  3191  00003C                     _timer3ReloadVal:
  3192                           	opt stack 0
  3193  00003C                     	ds	2
  3194  00003E                     _timer1ReloadVal:
  3195                           	opt stack 0
  3196  00003E                     	ds	2
  3197  000040                     _timerMinTickCount:
  3198                           	opt stack 0
  3199  000040                     	ds	2
  3200  000042                     USBapp_LEDUpdateStatus@ledCount:
  3201                           	opt stack 0
  3202  000042                     	ds	2
  3203  000044                     _USBDeferOUTDataStagePackets:
  3204                           	opt stack 0
  3205  000044                     	ds	1
  3206  000045                     _USBDeferINDataStagePackets:
  3207                           	opt stack 0
  3208  000045                     	ds	1
  3209  000046                     _USBStatusStageEnabledFlag2:
  3210                           	opt stack 0
  3211  000046                     	ds	1
  3212  000047                     _USBStatusStageEnabledFlag1:
  3213                           	opt stack 0
  3214  000047                     	ds	1
  3215  000048                     _USBDeferStatusStagePacket:
  3216                           	opt stack 0
  3217  000048                     	ds	1
  3218  000049                     _USBStatusStageTimeoutCounter:
  3219                           	opt stack 0
  3220  000049                     	ds	1
  3221  00004A                     _BothEP0OutUOWNsSet:
  3222                           	opt stack 0
  3223  00004A                     	ds	1
  3224  00004B                     _endpoint_number:
  3225                           	opt stack 0
  3226  00004B                     	ds	1
  3227  00004C                     _RemoteWakeup:
  3228                           	opt stack 0
  3229  00004C                     	ds	1
  3230  00004D                     _controlTransferState:
  3231                           	opt stack 0
  3232  00004D                     	ds	1
  3233  00004E                     _shortPacketStatus:
  3234                           	opt stack 0
  3235  00004E                     	ds	1
  3236  00004F                     _countBitsSilent:
  3237                           	opt stack 0
  3238  00004F                     	ds	1
  3239  000050                     _countRX:
  3240                           	opt stack 0
  3241  000050                     	ds	1
  3242  000051                     _rx_data:
  3243                           	opt stack 0
  3244  000051                     	ds	1
  3245  000052                     _status:
  3246                           	opt stack 0
  3247  000052                     	ds	1
  3248  000053                     	ds	1
  3249  000054                     _moteModeState:
  3250                           	opt stack 0
  3251  000054                     	ds	1
  3252  000055                     _appState:
  3253                           	opt stack 0
  3254  000055                     	ds	1
  3255  000056                     _mainState:
  3256                           	opt stack 0
  3257  000056                     	ds	1
  3258  000057                     _USBAlternateInterface:
  3259                           	opt stack 0
  3260  000057                     	ds	2
  3261  000059                     _USTATcopy:
  3262                           	opt stack 0
  3263  000059                     	ds	1
  3264  00005A                     _USBActiveConfiguration:
  3265                           	opt stack 0
  3266  00005A                     	ds	1
  3267  00005B                     _n_bit:
  3268                           	opt stack 0
  3269  00005B                     	ds	1
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           postdec1	equ	0xFE5
  3277                           fsr1l	equ	0xFE1
  3278                           
  3279                           	psect	dataCOMRAM
  3280  00005D                     __pdataCOMRAM:
  3281                           	opt stack 0
  3282  00005D                     _Contrast_level:
  3283                           	opt stack 0
  3284  00005D                     	ds	1
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           postinc0	equ	0xFEE
  3290                           wreg	equ	0xFE8
  3291                           postdec1	equ	0xFE5
  3292                           fsr1l	equ	0xFE1
  3293                           
  3294                           	psect	bssBANK0
  3295  0000BC                     __pbssBANK0:
  3296                           	opt stack 0
  3297  0000BC                     _outPipes:
  3298                           	opt stack 0
  3299  0000BC                     	ds	8
  3300  0000C4                     _inPipes:
  3301                           	opt stack 0
  3302  0000C4                     	ds	6
  3303  0000CA                     _pBDTEntryIn:
  3304                           	opt stack 0
  3305  0000CA                     	ds	6
  3306  0000D0                     _ep_data_out:
  3307                           	opt stack 0
  3308  0000D0                     	ds	3
  3309  0000D3                     _ep_data_in:
  3310                           	opt stack 0
  3311  0000D3                     	ds	3
  3312  0000D6                     _CDCDataOutHandle:
  3313                           	opt stack 0
  3314  0000D6                     	ds	2
  3315  0000D8                     _timerMsTickCount:
  3316                           	opt stack 0
  3317  0000D8                     	ds	2
  3318  0000DA                     _temperature:
  3319                           	opt stack 0
  3320  0000DA                     	ds	2
  3321  0000DC                     _cdc_mem_type:
  3322                           	opt stack 0
  3323  0000DC                     	ds	1
  3324  0000DD                     _cdc_tx_len:
  3325                           	opt stack 0
  3326  0000DD                     	ds	1
  3327  0000DE                     _cdc_rx_len:
  3328                           	opt stack 0
  3329  0000DE                     	ds	1
  3330  0000DF                     _eusartRxTail:
  3331                           	opt stack 0
  3332  0000DF                     	ds	1
  3333  0000E0                     _eusartRxHead:
  3334                           	opt stack 0
  3335  0000E0                     	ds	1
  3336  0000E1                     _eusartTxBufferRemaining:
  3337                           	opt stack 0
  3338  0000E1                     	ds	1
  3339  0000E2                     _eusartTxTail:
  3340                           	opt stack 0
  3341  0000E2                     	ds	1
  3342  0000E3                     _eusartTxHead:
  3343                           	opt stack 0
  3344  0000E3                     	ds	1
  3345  0000E4                     service_pushbutton@Release_Timer:
  3346                           	opt stack 0
  3347  0000E4                     	ds	1
  3348  0000E5                     _RS232cp:
  3349                           	opt stack 0
  3350  0000E5                     	ds	1
  3351  0000E6                     _LastRS232Out:
  3352                           	opt stack 0
  3353  0000E6                     	ds	1
  3354  0000E7                     _RS232_Out_Data_Rdy:
  3355                           	opt stack 0
  3356  0000E7                     	ds	1
  3357  0000E8                     _NextUSBOut:
  3358                           	opt stack 0
  3359  0000E8                     	ds	1
  3360  0000E9                     _rxByteFlag:
  3361                           	opt stack 0
  3362  0000E9                     	ds	1
  3363  0000EA                     _usbState:
  3364                           	opt stack 0
  3365  0000EA                     	ds	1
  3366  0000EB                     _cdc_trf_state:
  3367                           	opt stack 0
  3368  0000EB                     	ds	1
  3369  0000EC                     _USBDeviceState:
  3370                           	opt stack 0
  3371  0000EC                     	ds	1
  3372  0000ED                     _lightStringSize:
  3373                           	opt stack 0
  3374  0000ED                     	ds	1
  3375  0000EE                     _rnModule:
  3376                           	opt stack 0
  3377  0000EE                     	ds	1
  3378  0000EF                     _sleepTicker:
  3379                           	opt stack 0
  3380  0000EF                     	ds	1
  3381  0000F0                     _secTicker:
  3382                           	opt stack 0
  3383  0000F0                     	ds	1
  3384  0000F1                     _randomPortNum:
  3385                           	opt stack 0
  3386  0000F1                     	ds	1
  3387  0000F2                     _moduleBufferIndex:
  3388                           	opt stack 0
  3389  0000F2                     	ds	1
  3390  0000F3                     _runningState:
  3391                           	opt stack 0
  3392  0000F3                     	ds	1
  3393  0000F4                     _activeState:
  3394                           	opt stack 0
  3395  0000F4                     	ds	1
  3396  0000F5                     _eusartRxCount:
  3397                           	opt stack 0
  3398  0000F5                     	ds	1
  3399  0000F6                     _powerOnStatus:
  3400                           	opt stack 0
  3401  0000F6                     	ds	1
  3402  0000F7                     _operationType:
  3403                           	opt stack 0
  3404  0000F7                     	ds	1
  3405  0000F8                     _appTimer:
  3406                           	opt stack 0
  3407  0000F8                     	ds	1
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           postinc0	equ	0xFEE
  3413                           wreg	equ	0xFE8
  3414                           postdec1	equ	0xFE5
  3415                           fsr1l	equ	0xFE1
  3416                           
  3417                           	psect	dataBANK0
  3418  0000F9                     __pdataBANK0:
  3419                           	opt stack 0
  3420  0000F9                     _exitUSB:
  3421                           	opt stack 0
  3422  0000F9                     	ds	1
  3423  0000FA                     _periodicState:
  3424                           	opt stack 0
  3425  0000FA                     	ds	1
  3426  0000FB                     _menuTimeout:
  3427                           	opt stack 0
  3428  0000FB                     	ds	1
  3429  0000FC                     _dataRateValue:
  3430                           	opt stack 0
  3431  0000FC                     	ds	1
  3432  0000FD                     _periodicTimerValue:
  3433                           	opt stack 0
  3434  0000FD                     	ds	1
  3435  0000FE                     _periodicUpValue:
  3436                           	opt stack 0
  3437  0000FE                     	ds	1
  3438  0000FF                     _moteState:
  3439                           	opt stack 0
  3440  0000FF                     	ds	1
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           postdec1	equ	0xFE5
  3448                           fsr1l	equ	0xFE1
  3449                           
  3450                           	psect	bssBANK1
  3451  000100                     __pbssBANK1:
  3452                           	opt stack 0
  3453  000100                     	ds	32
  3454  000120                     	ds	16
  3455  000130                     _responseId:
  3456                           	opt stack 0
  3457  000130                     	ds	16
  3458  000140                     _pBDTEntryOut:
  3459                           	opt stack 0
  3460  000140                     	ds	6
  3461  000146                     _BaudRateGen:
  3462                           	opt stack 0
  3463  000146                     	ds	4
  3464  00014A                     service_pushbutton@PB_Timer:
  3465                           	opt stack 0
  3466  00014A                     	ds	4
  3467  00014E                     _pCDCDst:
  3468                           	opt stack 0
  3469  00014E                     	ds	3
  3470  000151                     _pCDCSrc:
  3471                           	opt stack 0
  3472  000151                     	ds	3
  3473  000154                     _pDst:
  3474                           	opt stack 0
  3475  000154                     	ds	2
  3476  000156                     _m10SecTicker:
  3477                           	opt stack 0
  3478  000156                     	ds	2
  3479  000158                     _light:
  3480                           	opt stack 0
  3481  000158                     	ds	2
  3482  00015A                     _control_signal_bitmap:
  3483                           	opt stack 0
  3484  00015A                     	ds	1
  3485  00015B                     _USBBusIsSuspended:
  3486                           	opt stack 0
  3487  00015B                     	ds	1
  3488  00015C                     _cs:
  3489                           	opt stack 0
  3490  00015C                     	ds	1
  3491  00015D                     _stops:
  3492                           	opt stack 0
  3493  00015D                     	ds	1
  3494  00015E                     _parity:
  3495                           	opt stack 0
  3496  00015E                     	ds	1
  3497  00015F                     	ds	1
  3498  000160                     	ds	1
  3499  000161                     _minTicker:
  3500                           	opt stack 0
  3501  000161                     	ds	1
  3502  000162                     	ds	1
  3503  000163                     	ds	1
  3504  000164                     _responseReady:
  3505                           	opt stack 0
  3506  000164                     	ds	1
  3507  000165                     _moduleResonseBuffer:
  3508                           	opt stack 0
  3509  000165                     	ds	64
  3510  0001A5                     _responseData:
  3511                           	opt stack 0
  3512  0001A5                     	ds	32
  3513  0001C5                     _dataBuffer:
  3514                           	opt stack 0
  3515  0001C5                     	ds	16
  3516  0001D5                     _cdc_notice:
  3517                           	opt stack 0
  3518  0001D5                     	ds	10
  3519  0001DF                     _dummy_encapsulated_cmd_response:
  3520                           	opt stack 0
  3521  0001DF                     	ds	8
  3522  0001E7                     _line_coding:
  3523                           	opt stack 0
  3524  0001E7                     	ds	7
  3525  0001EE                     _clearLight:
  3526                           	opt stack 0
  3527  0001EE                     	ds	5
  3528  0001F3                     _storedLight:
  3529                           	opt stack 0
  3530  0001F3                     	ds	5
  3531  0001F8                     _responsePortNum:
  3532                           	opt stack 0
  3533  0001F8                     	ds	3
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           postdec1	equ	0xFE5
  3541                           fsr1l	equ	0xFE1
  3542                           
  3543                           	psect	dataBANK1
  3544  0001FB                     __pdataBANK1:
  3545                           	opt stack 0
  3546  0001FB                     _selectedFont:
  3547                           	opt stack 0
  3548  0001FB                     	ds	2
  3549  0001FD                     	ds	1
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           
  3559                           	psect	bssBANK2
  3560  000200                     __pbssBANK2:
  3561                           	opt stack 0
  3562  000200                     _eusartRxBuffer:
  3563                           	opt stack 0
  3564  000200                     	ds	64
  3565  000240                     _eusartTxBuffer:
  3566                           	opt stack 0
  3567  000240                     	ds	64
  3568  000280                     _USB_Buffer:
  3569                           	opt stack 0
  3570  000280                     	ds	64
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postdec1	equ	0xFE5
  3578                           fsr1l	equ	0xFE1
  3579                           
  3580                           	psect	bssBANK3
  3581  000300                     __pbssBANK3:
  3582                           	opt stack 0
  3583  000300                     _buffer_rx:
  3584                           	opt stack 0
  3585  000300                     	ds	128
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           postdec1	equ	0xFE5
  3593                           fsr1l	equ	0xFE1
  3594                           
  3595                           	psect	cstackBANK0
  3596  000060                     __pcstackBANK0:
  3597                           	opt stack 0
  3598  000060                     ??_TMR1_Initialize:
  3599  000060                     ?_strncmp:
  3600                           	opt stack 0
  3601  000060                     ?_strcmp:
  3602                           	opt stack 0
  3603  000060                     ?_moteApp_getLightString:
  3604                           	opt stack 0
  3605  000060                     ?_USBTransferOnePacket:
  3606                           	opt stack 0
  3607  000060                     ?___wmul:
  3608                           	opt stack 0
  3609  000060                     ?___awmod:
  3610                           	opt stack 0
  3611  000060                     ?___lwmod:
  3612                           	opt stack 0
  3613  000060                     ?___fladd:
  3614                           	opt stack 0
  3615  000060                     ?___almod:
  3616                           	opt stack 0
  3617  000060                     ?___fltol:
  3618                           	opt stack 0
  3619  000060                     ?___xxtofl:
  3620                           	opt stack 0
  3621  000060                     MOTEapp_handlerState@state:
  3622                           	opt stack 0
  3623  000060                     MOTEapp_TimerBasedTask@timerTask:
  3624                           	opt stack 0
  3625  000060                     hexToStr@character:
  3626                           	opt stack 0
  3627  000060                     moteApp_clearBuffers@counter:
  3628                           	opt stack 0
  3629  000060                     USBapp_handlerState@state:
  3630                           	opt stack 0
  3631  000060                     USBapp_exitCDCState@usbState:
  3632                           	opt stack 0
  3633  000060                     service_pushbutton@bs:
  3634                           	opt stack 0
  3635  000060                     oled_writeCommand@command:
  3636                           	opt stack 0
  3637  000060                     oled_writeData@data:
  3638                           	opt stack 0
  3639  000060                     EUSART_Read@readValue:
  3640                           	opt stack 0
  3641  000060                     EUSART_Write@txData:
  3642                           	opt stack 0
  3643  000060                     EUSART_FlushBuffer@index:
  3644                           	opt stack 0
  3645  000060                     DATAEE_WriteByte@bData:
  3646                           	opt stack 0
  3647  000060                     DATAEE_ReadByte@bAdd:
  3648                           	opt stack 0
  3649  000060                     TMR2_ReadTimer@readVal:
  3650                           	opt stack 0
  3651  000060                     USBTransferOnePacket@dir:
  3652                           	opt stack 0
  3653  000060                     ___lbdiv@divisor:
  3654                           	opt stack 0
  3655  000060                     delayms@t:
  3656                           	opt stack 0
  3657  000060                     moteApp_delayms@length:
  3658                           	opt stack 0
  3659  000060                     oled_setFont@font:
  3660                           	opt stack 0
  3661  000060                     putUSBUSART@data:
  3662                           	opt stack 0
  3663  000060                     ___wmul@multiplier:
  3664                           	opt stack 0
  3665  000060                     ___awmod@dividend:
  3666                           	opt stack 0
  3667  000060                     ___lwmod@dividend:
  3668                           	opt stack 0
  3669  000060                     memcpy@d1:
  3670                           	opt stack 0
  3671  000060                     memset@p1:
  3672                           	opt stack 0
  3673  000060                     strcmp@s1:
  3674                           	opt stack 0
  3675  000060                     strncmp@s1:
  3676                           	opt stack 0
  3677  000060                     ___almod@dividend:
  3678                           	opt stack 0
  3679  000060                     ___fltol@f1:
  3680                           	opt stack 0
  3681  000060                     ___fladd@b:
  3682                           	opt stack 0
  3683  000060                     ___xxtofl@val:
  3684                           	opt stack 0
  3685                           
  3686                           ; 4 bytes @ 0x0
  3687  000060                     	ds	1
  3688  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3689                           	opt stack 0
  3690  000061                     moteApp_clearBuffers@counter_1714:
  3691                           	opt stack 0
  3692  000061                     Set_Page_Address@address:
  3693                           	opt stack 0
  3694  000061                     Set_Column_Address@address:
  3695                           	opt stack 0
  3696  000061                     oled_setDisplay@displayType:
  3697                           	opt stack 0
  3698  000061                     oled_setContrastControlRegister@mod:
  3699                           	opt stack 0
  3700  000061                     oled_initialDispayLine@line:
  3701                           	opt stack 0
  3702  000061                     oled_powerControl@vol:
  3703                           	opt stack 0
  3704  000061                     oled_regulorResistorSelect@r:
  3705                           	opt stack 0
  3706  000061                     DATAEE_WriteByte@bAdd:
  3707                           	opt stack 0
  3708  000061                     ___lbdiv@dividend:
  3709                           	opt stack 0
  3710  000061                     sendCommand@string:
  3711                           	opt stack 0
  3712  000061                     sendDataCommand@string:
  3713                           	opt stack 0
  3714  000061                     USBTransferOnePacket@data:
  3715                           	opt stack 0
  3716                           
  3717                           ; 2 bytes @ 0x1
  3718  000061                     	ds	1
  3719  000062                     ??_moteApp_delayms:
  3720  000062                     ??_oled_devInit:
  3721  000062                     ??_delayms:
  3722  000062                     MOTEapp_getModuleResponse@bufferByte:
  3723                           	opt stack 0
  3724  000062                     moteApp_clearBuffers@counter_1715:
  3725                           	opt stack 0
  3726  000062                     oled_putChar@station_dot:
  3727                           	opt stack 0
  3728  000062                     DATAEE_WriteByte@GIEBitValue:
  3729                           	opt stack 0
  3730  000062                     putUSBUSART@length:
  3731                           	opt stack 0
  3732  000062                     ___lbdiv@counter:
  3733                           	opt stack 0
  3734  000062                     ___wmul@multiplicand:
  3735                           	opt stack 0
  3736  000062                     ___awmod@divisor:
  3737                           	opt stack 0
  3738  000062                     ___lwmod@divisor:
  3739                           	opt stack 0
  3740  000062                     memcpy@s1:
  3741                           	opt stack 0
  3742  000062                     memset@c:
  3743                           	opt stack 0
  3744  000062                     strcmp@s2:
  3745                           	opt stack 0
  3746  000062                     strncmp@s2:
  3747                           	opt stack 0
  3748                           
  3749                           ; 2 bytes @ 0x2
  3750  000062                     	ds	1
  3751  000063                     ??_moteApp_toggleLeds:
  3752  000063                     ??_MOTEapp_SetDataRateSetting:
  3753  000063                     ??_moduleSleep:
  3754  000063                     ?_moteApp_getTempValue:
  3755                           	opt stack 0
  3756  000063                     moteApp_clearBuffers@counter_1716:
  3757                           	opt stack 0
  3758  000063                     oled_putChar@start_page:
  3759                           	opt stack 0
  3760  000063                     USBTransferOnePacket@len:
  3761                           	opt stack 0
  3762  000063                     ___lbdiv@quotient:
  3763                           	opt stack 0
  3764  000063                     delayms@i:
  3765                           	opt stack 0
  3766  000063                     moteApp_delayms@counter:
  3767                           	opt stack 0
  3768  000063                     sendDataCommand@appData:
  3769                           	opt stack 0
  3770                           
  3771                           ; 2 bytes @ 0x3
  3772  000063                     	ds	1
  3773  000064                     ??_oled_putChar:
  3774  000064                     ??_strcmp:
  3775  000064                     ??___fltol:
  3776  000064                     ??___xxtofl:
  3777  000064                     MOTEapp_SetDataRateSetting@dr:
  3778                           	opt stack 0
  3779  000064                     moteApp_toggleLeds@state:
  3780                           	opt stack 0
  3781  000064                     USBTransferOnePacket@ep:
  3782                           	opt stack 0
  3783  000064                     ___awmod@counter:
  3784                           	opt stack 0
  3785  000064                     ___lwmod@counter:
  3786                           	opt stack 0
  3787  000064                     ___wmul@product:
  3788                           	opt stack 0
  3789  000064                     memcpy@n:
  3790                           	opt stack 0
  3791  000064                     memset@n:
  3792                           	opt stack 0
  3793  000064                     strncmp@len:
  3794                           	opt stack 0
  3795  000064                     ___almod@divisor:
  3796                           	opt stack 0
  3797  000064                     ___fladd@a:
  3798                           	opt stack 0
  3799                           
  3800                           ; 4 bytes @ 0x4
  3801  000064                     	ds	1
  3802  000065                     sendDataCommand@dataLength:
  3803                           	opt stack 0
  3804  000065                     ___awmod@sign:
  3805                           	opt stack 0
  3806  000065                     strcmp@r:
  3807                           	opt stack 0
  3808  000065                     moduleResync@escapeCounter:
  3809                           	opt stack 0
  3810  000065                     moteApp_setSensorsInput@escapeCounter:
  3811                           	opt stack 0
  3812  000065                     moteApp_getTempValue@escapeCounter:
  3813                           	opt stack 0
  3814  000065                     USBTransferOnePacket@handle:
  3815                           	opt stack 0
  3816                           
  3817                           ; 2 bytes @ 0x5
  3818  000065                     	ds	1
  3819  000066                     ??_strncmp:
  3820  000066                     ??_sendDataCommand:
  3821  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3822                           	opt stack 0
  3823  000066                     memcpy@d:
  3824                           	opt stack 0
  3825  000066                     memset@p:
  3826                           	opt stack 0
  3827                           
  3828                           ; 2 bytes @ 0x6
  3829  000066                     	ds	1
  3830  000067                     ??_moteApp_add8bToDataBuffer:
  3831  000067                     ??_CDCTxService:
  3832  000067                     moduleResync@escapeEvent:
  3833                           	opt stack 0
  3834  000067                     sendDataCommand@byteCount:
  3835                           	opt stack 0
  3836  000067                     getsUSBUSART@buffer:
  3837                           	opt stack 0
  3838                           
  3839                           ; 2 bytes @ 0x7
  3840  000067                     	ds	1
  3841  000068                     ??___fladd:
  3842  000068                     sendDataCommand@byteCount_1627:
  3843                           	opt stack 0
  3844  000068                     USBDeviceInit@i:
  3845                           	opt stack 0
  3846  000068                     ___almod@counter:
  3847                           	opt stack 0
  3848  000068                     ___fltol@sign1:
  3849                           	opt stack 0
  3850  000068                     ___xxtofl@sign:
  3851                           	opt stack 0
  3852  000068                     _CDCTxService$6685:
  3853                           	opt stack 0
  3854  000068                     memcpy@s:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x8
  3858  000068                     	ds	1
  3859  000069                     moteApp_add8bToDataBuffer@number:
  3860                           	opt stack 0
  3861  000069                     getsUSBUSART@len:
  3862                           	opt stack 0
  3863  000069                     ___almod@sign:
  3864                           	opt stack 0
  3865  000069                     ___fltol@exp1:
  3866                           	opt stack 0
  3867  000069                     ___xxtofl@exp:
  3868                           	opt stack 0
  3869                           
  3870                           ; 1 bytes @ 0x9
  3871  000069                     	ds	1
  3872  00006A                     ??_getsUSBUSART:
  3873  00006A                     oled_putChar@k:
  3874                           	opt stack 0
  3875  00006A                     CDCTxService@i:
  3876                           	opt stack 0
  3877  00006A                     memcpy@tmp:
  3878                           	opt stack 0
  3879  00006A                     ___xxtofl@arg:
  3880                           	opt stack 0
  3881                           
  3882                           ; 4 bytes @ 0xA
  3883  00006A                     	ds	1
  3884  00006B                     oled_putChar@index:
  3885                           	opt stack 0
  3886  00006B                     CDCTxService@byte_to_send:
  3887                           	opt stack 0
  3888  00006B                     moteApp_setLightString@lightString:
  3889                           	opt stack 0
  3890  00006B                     _getsUSBUSART$6637:
  3891                           	opt stack 0
  3892                           
  3893                           ; 2 bytes @ 0xB
  3894  00006B                     	ds	1
  3895  00006C                     oled_clearRow@page:
  3896                           	opt stack 0
  3897                           
  3898                           ; 1 bytes @ 0xC
  3899  00006C                     	ds	1
  3900  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3901  00006D                     moteApp_setLightString@stingPos:
  3902                           	opt stack 0
  3903  00006D                     oled_clearRow@index:
  3904                           	opt stack 0
  3905                           
  3906                           ; 1 bytes @ 0xD
  3907  00006D                     	ds	1
  3908  00006E                     ?_moteApp_getLightValue:
  3909                           	opt stack 0
  3910  00006E                     moteApp_GoToSleep@status:
  3911                           	opt stack 0
  3912                           
  3913                           ; 1 bytes @ 0xE
  3914  00006E                     	ds	2
  3915  000070                     ___fladd@signs:
  3916                           	opt stack 0
  3917  000070                     moteApp_getLightValue@escapeCounter:
  3918                           	opt stack 0
  3919                           
  3920                           ; 2 bytes @ 0x10
  3921  000070                     	ds	1
  3922  000071                     ___fladd@aexp:
  3923                           	opt stack 0
  3924                           
  3925                           ; 1 bytes @ 0x11
  3926  000071                     	ds	1
  3927  000072                     ?_moteApp_convertSensorValue:
  3928                           	opt stack 0
  3929  000072                     ___fladd@bexp:
  3930                           	opt stack 0
  3931  000072                     moteApp_addToDataBuffer@string:
  3932                           	opt stack 0
  3933  000072                     moteApp_convertSensorValue@string:
  3934                           	opt stack 0
  3935  000072                     oled_putString@string:
  3936                           	opt stack 0
  3937                           
  3938                           ; 2 bytes @ 0x12
  3939  000072                     	ds	1
  3940  000073                     ___fladd@grs:
  3941                           	opt stack 0
  3942                           
  3943                           ; 1 bytes @ 0x13
  3944  000073                     	ds	1
  3945  000074                     ??_moteApp_convertSensorValue:
  3946  000074                     ?___flmul:
  3947                           	opt stack 0
  3948  000074                     moteApp_addToDataBuffer@bufferLocation:
  3949                           	opt stack 0
  3950  000074                     oled_putString@station_dot:
  3951                           	opt stack 0
  3952  000074                     ___flmul@b:
  3953                           	opt stack 0
  3954                           
  3955                           ; 4 bytes @ 0x14
  3956  000074                     	ds	1
  3957  000075                     moteApp_addToDataBuffer@index:
  3958                           	opt stack 0
  3959  000075                     oled_putString@start_page:
  3960                           	opt stack 0
  3961                           
  3962                           ; 1 bytes @ 0x15
  3963  000075                     	ds	1
  3964  000076                     oled_putString@index:
  3965                           	opt stack 0
  3966                           
  3967                           ; 1 bytes @ 0x16
  3968  000076                     	ds	1
  3969  000077                     ??_test_switch:
  3970  000077                     moteJoiningProcess@changeStates:
  3971                           	opt stack 0
  3972  000077                     USBapp_Handler@buttonPress:
  3973                           	opt stack 0
  3974  000077                     oled_putUint8@station_dot:
  3975                           	opt stack 0
  3976  000077                     oled_putint8@station_dot:
  3977                           	opt stack 0
  3978  000077                     moteApp_convertSensorValue@convertedValue:
  3979                           	opt stack 0
  3980                           
  3981                           ; 2 bytes @ 0x17
  3982  000077                     	ds	1
  3983  000078                     moteJoiningProcess@selectButton:
  3984                           	opt stack 0
  3985  000078                     oled_putUint8@start_page:
  3986                           	opt stack 0
  3987  000078                     oled_putint8@start_page:
  3988                           	opt stack 0
  3989  000078                     test_switch@timeout:
  3990                           	opt stack 0
  3991  000078                     ___flmul@a:
  3992                           	opt stack 0
  3993                           
  3994                           ; 4 bytes @ 0x18
  3995  000078                     	ds	1
  3996  000079                     ??_moteJoiningProcess:
  3997  000079                     moteApp_convertSensorValue@index:
  3998                           	opt stack 0
  3999  000079                     oled_putUint8@number:
  4000                           	opt stack 0
  4001  000079                     oled_putint8@negative:
  4002                           	opt stack 0
  4003                           
  4004                           ; 1 bytes @ 0x19
  4005  000079                     	ds	1
  4006  00007A                     test_switch@buttonCheck:
  4007                           	opt stack 0
  4008  00007A                     moteJoiningProcess@readDataRate:
  4009                           	opt stack 0
  4010  00007A                     oled_putUint8@numData:
  4011                           	opt stack 0
  4012  00007A                     oled_putint8@numData:
  4013                           	opt stack 0
  4014                           
  4015                           ; 6 bytes @ 0x1A
  4016  00007A                     	ds	1
  4017  00007B                     moteJoiningProcess@joiningComplete:
  4018                           	opt stack 0
  4019                           
  4020                           ; 1 bytes @ 0x1B
  4021  00007B                     	ds	1
  4022  00007C                     ??___flmul:
  4023  00007C                     moteJoiningProcess@messageReady:
  4024                           	opt stack 0
  4025                           
  4026                           ; 1 bytes @ 0x1C
  4027  00007C                     	ds	4
  4028  000080                     oled_putint8@number:
  4029                           	opt stack 0
  4030  000080                     ___flmul@sign:
  4031                           	opt stack 0
  4032                           
  4033                           ; 1 bytes @ 0x20
  4034  000080                     	ds	1
  4035  000081                     ___flmul@grs:
  4036                           	opt stack 0
  4037                           
  4038                           ; 4 bytes @ 0x21
  4039  000081                     	ds	4
  4040  000085                     ___flmul@aexp:
  4041                           	opt stack 0
  4042                           
  4043                           ; 1 bytes @ 0x25
  4044  000085                     	ds	1
  4045  000086                     ___flmul@bexp:
  4046                           	opt stack 0
  4047                           
  4048                           ; 1 bytes @ 0x26
  4049  000086                     	ds	1
  4050  000087                     ___flmul@prod:
  4051                           	opt stack 0
  4052                           
  4053                           ; 4 bytes @ 0x27
  4054  000087                     	ds	4
  4055  00008B                     ___flmul@temp:
  4056                           	opt stack 0
  4057                           
  4058                           ; 2 bytes @ 0x2B
  4059  00008B                     	ds	2
  4060  00008D                     ?___fldiv:
  4061                           	opt stack 0
  4062  00008D                     ___fldiv@b:
  4063                           	opt stack 0
  4064                           
  4065                           ; 4 bytes @ 0x2D
  4066  00008D                     	ds	4
  4067  000091                     ___fldiv@a:
  4068                           	opt stack 0
  4069                           
  4070                           ; 4 bytes @ 0x31
  4071  000091                     	ds	4
  4072  000095                     ??___fldiv:
  4073                           
  4074                           ; 1 bytes @ 0x35
  4075  000095                     	ds	4
  4076  000099                     ___fldiv@sign:
  4077                           	opt stack 0
  4078                           
  4079                           ; 1 bytes @ 0x39
  4080  000099                     	ds	1
  4081  00009A                     ___fldiv@rem:
  4082                           	opt stack 0
  4083                           
  4084                           ; 4 bytes @ 0x3A
  4085  00009A                     	ds	4
  4086  00009E                     ___fldiv@new_exp:
  4087                           	opt stack 0
  4088                           
  4089                           ; 2 bytes @ 0x3E
  4090  00009E                     	ds	2
  4091  0000A0                     ___fldiv@grs:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x40
  4095  0000A0                     	ds	4
  4096  0000A4                     ___fldiv@bexp:
  4097                           	opt stack 0
  4098                           
  4099                           ; 1 bytes @ 0x44
  4100  0000A4                     	ds	1
  4101  0000A5                     ___fldiv@aexp:
  4102                           	opt stack 0
  4103                           
  4104                           ; 1 bytes @ 0x45
  4105  0000A5                     	ds	1
  4106  0000A6                     ADC_TempConversion@tempRaw:
  4107                           	opt stack 0
  4108                           
  4109                           ; 1 bytes @ 0x46
  4110  0000A6                     	ds	1
  4111  0000A7                     ADC_TempConversion@temp:
  4112                           	opt stack 0
  4113                           
  4114                           ; 1 bytes @ 0x47
  4115  0000A7                     	ds	1
  4116  0000A8                     ADC_TempConversion@val:
  4117                           	opt stack 0
  4118                           
  4119                           ; 4 bytes @ 0x48
  4120  0000A8                     	ds	4
  4121  0000AC                     ??_moteApp_testSensors:
  4122  0000AC                     moteRunningProcess@selectButton:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0x4C
  4126  0000AC                     	ds	1
  4127  0000AD                     moteRunningProcess@messageReady:
  4128                           	opt stack 0
  4129                           
  4130                           ; 1 bytes @ 0x4D
  4131  0000AD                     	ds	1
  4132  0000AE                     moteRunningProcess@sleepEvent:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x4E
  4136  0000AE                     	ds	1
  4137  0000AF                     ??_moteRunningProcess:
  4138                           
  4139                           ; 1 bytes @ 0x4F
  4140  0000AF                     	ds	1
  4141  0000B0                     moteRunningProcess@readByte:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0x50
  4145  0000B0                     	ds	1
  4146  0000B1                     moteRunningProcess@sizeOfUpdate:
  4147                           	opt stack 0
  4148                           
  4149                           ; 1 bytes @ 0x51
  4150  0000B1                     	ds	1
  4151  0000B2                     moteRunningProcess@sizeOfUpdate_1497:
  4152                           	opt stack 0
  4153                           
  4154                           ; 1 bytes @ 0x52
  4155  0000B2                     	ds	1
  4156  0000B3                     moteRunningProcess@counter:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0x53
  4160  0000B3                     	ds	1
  4161  0000B4                     moteRunningProcess@bufferReadPos:
  4162                           	opt stack 0
  4163                           
  4164                           ; 1 bytes @ 0x54
  4165  0000B4                     	ds	1
  4166  0000B5                     moteRunningProcess@changeStates:
  4167                           	opt stack 0
  4168                           
  4169                           ; 1 bytes @ 0x55
  4170  0000B5                     	ds	1
  4171  0000B6                     ??_moteHandler:
  4172                           
  4173                           ; 1 bytes @ 0x56
  4174  0000B6                     	ds	1
  4175  0000B7                     moteHandler@gotoSleep:
  4176                           	opt stack 0
  4177                           
  4178                           ; 1 bytes @ 0x57
  4179  0000B7                     	ds	1
  4180  0000B8                     moteHandler@gotoNextState:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x58
  4184  0000B8                     	ds	1
  4185  0000B9                     moteHandler@s2Button:
  4186                           	opt stack 0
  4187                           
  4188                           ; 1 bytes @ 0x59
  4189  0000B9                     	ds	1
  4190  0000BA                     moteHandler@buttonPress:
  4191                           	opt stack 0
  4192                           
  4193                           ; 1 bytes @ 0x5A
  4194  0000BA                     	ds	1
  4195  0000BB                     moteHandler@readMessage:
  4196                           	opt stack 0
  4197                           
  4198                           ; 1 bytes @ 0x5B
  4199  0000BB                     	ds	1
  4200  0000BC                     tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           postinc0	equ	0xFEE
  4205                           wreg	equ	0xFE8
  4206                           postdec1	equ	0xFE5
  4207                           fsr1l	equ	0xFE1
  4208                           
  4209                           ; 1 bytes @ 0x5C
  4210                           
  4211                           	psect	cstackCOMRAM
  4212  000001                     __pcstackCOMRAM:
  4213                           	opt stack 0
  4214  000001                     ??_USBStdGetDscHandler:
  4215  000001                     ??_USBStdGetStatusHandler:
  4216  000001                     ?i2_USBTransferOnePacket:
  4217                           	opt stack 0
  4218  000001                     ?___lldiv:
  4219                           	opt stack 0
  4220  000001                     reloadTimer@setTimerValue:
  4221                           	opt stack 0
  4222  000001                     USBConfigureEndpoint@direction:
  4223                           	opt stack 0
  4224  000001                     USBCtrlTrfTxService@byteToSend:
  4225                           	opt stack 0
  4226  000001                     i2USBTransferOnePacket@dir:
  4227                           	opt stack 0
  4228  000001                     i2memset@p1:
  4229                           	opt stack 0
  4230  000001                     ___lldiv@dividend:
  4231                           	opt stack 0
  4232                           
  4233                           ; 4 bytes @ 0x0
  4234  000001                     	ds	1
  4235  000002                     ??_USBConfigureEndpoint:
  4236  000002                     USBStdGetStatusHandler@p:
  4237                           	opt stack 0
  4238  000002                     i2USBTransferOnePacket@data:
  4239                           	opt stack 0
  4240                           
  4241                           ; 2 bytes @ 0x1
  4242  000002                     	ds	1
  4243  000003                     i2memset@c:
  4244                           	opt stack 0
  4245                           
  4246                           ; 2 bytes @ 0x2
  4247  000003                     	ds	1
  4248  000004                     i2USBTransferOnePacket@len:
  4249                           	opt stack 0
  4250                           
  4251                           ; 1 bytes @ 0x3
  4252  000004                     	ds	1
  4253  000005                     i2USBTransferOnePacket@ep:
  4254                           	opt stack 0
  4255  000005                     i2memset@n:
  4256                           	opt stack 0
  4257  000005                     ___lldiv@divisor:
  4258                           	opt stack 0
  4259                           
  4260                           ; 4 bytes @ 0x4
  4261  000005                     	ds	1
  4262  000006                     USBConfigureEndpoint@EPNum:
  4263                           	opt stack 0
  4264  000006                     i2USBTransferOnePacket@handle:
  4265                           	opt stack 0
  4266                           
  4267                           ; 2 bytes @ 0x5
  4268  000006                     	ds	1
  4269  000007                     USBConfigureEndpoint@handle:
  4270                           	opt stack 0
  4271  000007                     i2memset@p:
  4272                           	opt stack 0
  4273                           
  4274                           ; 2 bytes @ 0x6
  4275  000007                     	ds	2
  4276  000009                     USBEnableEndpoint@options:
  4277                           	opt stack 0
  4278  000009                     i2USBDeviceInit@i:
  4279                           	opt stack 0
  4280  000009                     ___lldiv@quotient:
  4281                           	opt stack 0
  4282                           
  4283                           ; 4 bytes @ 0x8
  4284  000009                     	ds	1
  4285  00000A                     USBEnableEndpoint@p:
  4286                           	opt stack 0
  4287                           
  4288                           ; 2 bytes @ 0x9
  4289  00000A                     	ds	2
  4290  00000C                     USBEnableEndpoint@ep:
  4291                           	opt stack 0
  4292                           
  4293                           ; 1 bytes @ 0xB
  4294  00000C                     	ds	1
  4295  00000D                     USBapp_CdcEmulatorInitialize@i:
  4296                           	opt stack 0
  4297  00000D                     ___lldiv@counter:
  4298                           	opt stack 0
  4299                           
  4300                           ; 1 bytes @ 0xC
  4301  00000D                     	ds	1
  4302  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4303                           	opt stack 0
  4304  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4305                           	opt stack 0
  4306                           
  4307                           ; 4 bytes @ 0xD
  4308  00000E                     	ds	2
  4309  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4310                           	opt stack 0
  4311                           
  4312                           ; 2 bytes @ 0xF
  4313  000010                     	ds	2
  4314  000012                     USBCtrlTrfRxService@i:
  4315                           	opt stack 0
  4316  000012                     USBCtrlTrfInHandler@lastDTS:
  4317                           	opt stack 0
  4318  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4319                           	opt stack 0
  4320                           
  4321                           ; 2 bytes @ 0x11
  4322  000012                     	ds	1
  4323  000013                     USBCtrlTrfRxService@byteToRead:
  4324                           	opt stack 0
  4325                           
  4326                           ; 1 bytes @ 0x12
  4327  000013                     	ds	1
  4328  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4329                           
  4330                           ; 1 bytes @ 0x13
  4331  000014                     	ds	2
  4332  000016                     ??_USBStdFeatureReqHandler:
  4333  000016                     USBStdSetCfgHandler@i:
  4334                           	opt stack 0
  4335                           
  4336                           ; 1 bytes @ 0x15
  4337  000016                     	ds	1
  4338  000017                     USBStdFeatureReqHandler@pUEP:
  4339                           	opt stack 0
  4340                           
  4341                           ; 2 bytes @ 0x16
  4342  000017                     	ds	2
  4343  000019                     USBStdFeatureReqHandler@current_ep_data:
  4344                           	opt stack 0
  4345                           
  4346                           ; 1 bytes @ 0x18
  4347  000019                     	ds	1
  4348  00001A                     USBStdFeatureReqHandler@p:
  4349                           	opt stack 0
  4350                           
  4351                           ; 2 bytes @ 0x19
  4352  00001A                     	ds	2
  4353  00001C                     ??_USBCtrlEPService:
  4354  00001C                     
  4355                           ; 1 bytes @ 0x1B
  4356  00001C                     	ds	2
  4357  00001E                     USBCtrlEPService@setup_cnt:
  4358                           	opt stack 0
  4359                           
  4360                           ; 1 bytes @ 0x1D
  4361  00001E                     	ds	1
  4362  00001F                     USBDeviceTasks@i:
  4363                           	opt stack 0
  4364                           
  4365                           ; 1 bytes @ 0x1E
  4366  00001F                     	ds	1
  4367  000020                     ??_INTERRUPT_InterruptManager:
  4368                           
  4369                           ; 1 bytes @ 0x1F
  4370  000020                     	ds	19
  4371  000033                     INTERRUPT_InterruptManager@tClearPin:
  4372                           	opt stack 0
  4373                           
  4374                           ; 1 bytes @ 0x32
  4375  000033                     	ds	1
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           postdec1	equ	0xFE5
  4383                           fsr1l	equ	0xFE1
  4384                           
  4385 ;;
  4386 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4387 ;;
  4388 ;; *************** function _main *****************
  4389 ;; Defined at:
  4390 ;;		line 70 in file "main.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4407 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels required when called:   20
  4410 ;; This function calls:
  4411 ;;		_DATAEE_ReadByte
  4412 ;;		_DATAEE_WriteByte
  4413 ;;		_MOTEapp_handlerState
  4414 ;;		_SYSTEM_Initialize
  4415 ;;		_USBDeviceAttach
  4416 ;;		_USBDeviceInit
  4417 ;;		_USBapp_Handler
  4418 ;;		_USBapp_handlerState
  4419 ;;		_moduleResync
  4420 ;;		_moteApp_clearCommand
  4421 ;;		_moteApp_delayms
  4422 ;;		_moteHandler
  4423 ;;		_oled_clear
  4424 ;;		_oled_init
  4425 ;;		_oled_putString
  4426 ;;		_test_powerup
  4427 ;; This function is called by:
  4428 ;;		Startup code after reset
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text0
  4433  002CFA                     __ptext0:
  4434                           	opt stack 0
  4435  002CFA                     _main:
  4436                           	opt stack 11
  4437                           
  4438                           ;main.c: 73: SYSTEM_Initialize();
  4439                           
  4440                           ;incstack = 0
  4441  002CFA  ECB4  F02A         	call	_SYSTEM_Initialize	;wreg free
  4442                           
  4443                           ;main.c: 75: oled_init();
  4444  002CFE  ECF7  F029         	call	_oled_init	;wreg free
  4445                           
  4446                           ;main.c: 76: USBDeviceInit();
  4447  002D02  ECB7  F014         	call	_USBDeviceInit	;wreg free
  4448                           
  4449                           ;main.c: 78: USBDeviceAttach();
  4450  002D06  EC79  F029         	call	_USBDeviceAttach	;wreg free
  4451                           
  4452                           ;main.c: 80: LATBbits.LATB5 = 1;
  4453  002D0A  8A8A               	bsf	3978,5,c	;volatile
  4454                           
  4455                           ;main.c: 81: moteApp_delayms(50);
  4456  002D0C  0E00               	movlw	0
  4457  002D0E  0100               	movlb	0	; () banked
  4458  002D10  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4459  002D12  0E32               	movlw	50
  4460  002D14  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4461  002D16  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4462                           
  4463                           ;main.c: 82: LATBbits.LATB5 = 0;
  4464  002D1A  9A8A               	bcf	3978,5,c	;volatile
  4465                           
  4466                           ;main.c: 83: moteApp_delayms(500);
  4467  002D1C  0E01               	movlw	1
  4468  002D1E  0100               	movlb	0	; () banked
  4469  002D20  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4470  002D22  0EF4               	movlw	244
  4471  002D24  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4472  002D26  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4473                           
  4474                           ;main.c: 85: PEIE = 1;
  4475  002D2A  8CF2               	bsf	intcon,6,c	;volatile
  4476                           
  4477                           ;main.c: 86: GIE = 1;
  4478  002D2C  8EF2               	bsf	intcon,7,c	;volatile
  4479                           
  4480                           ;main.c: 88: moduleResync();
  4481  002D2E  EC09  F023         	call	_moduleResync	;wreg free
  4482                           
  4483                           ;main.c: 89: moteApp_delayms(20);
  4484  002D32  0E00               	movlw	0
  4485  002D34  0100               	movlb	0	; () banked
  4486  002D36  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4487  002D38  0E14               	movlw	20
  4488  002D3A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4489  002D3C  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4490                           
  4491                           ;main.c: 90: moteApp_clearCommand();
  4492  002D40  EC3C  F02C         	call	_moteApp_clearCommand	;wreg free
  4493                           
  4494                           ;main.c: 91: moteApp_delayms(20);
  4495  002D44  0E00               	movlw	0
  4496  002D46  0100               	movlb	0	; () banked
  4497  002D48  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4498  002D4A  0E14               	movlw	20
  4499  002D4C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4500  002D4E  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4501                           
  4502                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4503  002D52  0E00               	movlw	0
  4504  002D54  ECE8  F02B         	call	_DATAEE_ReadByte
  4505  002D58  0100               	movlb	0	; () banked
  4506  002D5A  6FF6               	movwf	_powerOnStatus& (0+255),b
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4510  002D5C  0E55               	movlw	85
  4511  002D5E  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4512  002D60  B4D8               	btfsc	status,2,c
  4513  002D62  D008               	goto	l57
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;main.c: 95: {
  4517                           ;main.c: 96: test_powerup();
  4518  002D64  ECCA  F024         	call	_test_powerup	;wreg free
  4519                           
  4520                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4521  002D68  0E55               	movlw	85
  4522  002D6A  0100               	movlb	0	; () banked
  4523  002D6C  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4524  002D6E  0E00               	movlw	0
  4525  002D70  ECE8  F028         	call	_DATAEE_WriteByte
  4526  002D74                     l57:
  4527                           
  4528                           ;main.c: 98: }
  4529                           ;main.c: 101: operationType = USB;
  4530  002D74  0E00               	movlw	0
  4531  002D76  0100               	movlb	0	; () banked
  4532  002D78  6FF7               	movwf	_operationType& (0+255),b
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4536  002D7A  0E00               	movlw	0
  4537  002D7C  EC67  F02C         	call	_USBapp_handlerState
  4538                           
  4539                           ;main.c: 104: oled_clear();
  4540  002D80  ECAD  F02B         	call	_oled_clear	;wreg free
  4541                           
  4542                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4543  002D84  0E1E               	movlw	low STR_1
  4544  002D86  0100               	movlb	0	; () banked
  4545  002D88  6F72               	movwf	oled_putString@string& (0+255),b
  4546  002D8A  0E7D               	movlw	high STR_1
  4547  002D8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4548  002D8E  0E00               	movlw	0
  4549  002D90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4550  002D92  0E00               	movlw	0
  4551  002D94  6F75               	movwf	oled_putString@start_page& (0+255),b
  4552  002D96  EC73  F025         	call	_oled_putString	;wreg free
  4553                           
  4554                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4555  002D9A  0E00               	movlw	low STR_2
  4556  002D9C  0100               	movlb	0	; () banked
  4557  002D9E  6F72               	movwf	oled_putString@string& (0+255),b
  4558  002DA0  0E7D               	movlw	high STR_2
  4559  002DA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4560  002DA4  0E00               	movlw	0
  4561  002DA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4562  002DA8  0E01               	movlw	1
  4563  002DAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  4564  002DAC  EC73  F025         	call	_oled_putString	;wreg free
  4565                           
  4566                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4567  002DB0  0E0F               	movlw	low STR_3
  4568  002DB2  0100               	movlb	0	; () banked
  4569  002DB4  6F72               	movwf	oled_putString@string& (0+255),b
  4570  002DB6  0E7D               	movlw	high STR_3
  4571  002DB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4572  002DBA  0E00               	movlw	0
  4573  002DBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4574  002DBE  0E03               	movlw	3
  4575  002DC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  4576  002DC2  EC73  F025         	call	_oled_putString	;wreg free
  4577                           
  4578                           ;main.c: 108: moteApp_delayms(1000);
  4579  002DC6  0E03               	movlw	3
  4580  002DC8  0100               	movlb	0	; () banked
  4581  002DCA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4582  002DCC  0EE8               	movlw	232
  4583  002DCE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4584  002DD0  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4585                           
  4586                           ;main.c: 112: {
  4587                           ;main.c: 114: switch (operationType)
  4588                           
  4589                           ;main.c: 111: while(1)
  4590  002DD4  D015               	goto	l67
  4591  002DD6                     
  4592                           ;main.c: 117: while(1);
  4593  002DD6  D7FF               	goto	l60
  4594  002DD8                     
  4595                           ;main.c: 120: USBapp_Handler();
  4596  002DD8  EC5B  F01F         	call	_USBapp_Handler	;wreg free
  4597                           
  4598                           ;main.c: 122: operationType = MOTE;
  4599  002DDC  0E01               	movlw	1
  4600  002DDE  0100               	movlb	0	; () banked
  4601  002DE0  6FF7               	movwf	_operationType& (0+255),b
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4605  002DE2  0E01               	movlw	1
  4606  002DE4  EC6C  F02C         	call	_MOTEapp_handlerState
  4607                           
  4608                           ;main.c: 124: break;
  4609  002DE8  D00B               	goto	l67
  4610  002DEA                     
  4611                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4612  002DEA  EC7A  F010         	call	_moteHandler	;wreg free
  4613  002DEE  0A04               	xorlw	4
  4614  002DF0  A4D8               	btfss	status,2,c
  4615  002DF2  D006               	goto	l67
  4616                           
  4617                           ;main.c: 127: {
  4618                           ;main.c: 129: operationType = USB;
  4619  002DF4  0E00               	movlw	0
  4620  002DF6  0100               	movlb	0	; () banked
  4621  002DF8  6FF7               	movwf	_operationType& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4625  002DFA  0E00               	movlw	0
  4626  002DFC  EC67  F02C         	call	_USBapp_handlerState
  4627  002E00                     l67:
  4628                           
  4629                           ;main.c: 133: }
  4630                           
  4631                           ;main.c: 131: }
  4632                           ;main.c: 132: break;
  4633  002E00  0100               	movlb	0	; () banked
  4634  002E02  51F7               	movf	_operationType& (0+255),w,b
  4635                           
  4636                           ; Switch size 1, requested type "space"
  4637                           ; Number of cases is 2, Range of values is 0 to 1
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte            7     4 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  002E04  0A00               	xorlw	0	; case 0
  4643  002E06  B4D8               	btfsc	status,2,c
  4644  002E08  D7E7               	goto	l65
  4645  002E0A  0A01               	xorlw	1	; case 1
  4646  002E0C  B4D8               	btfsc	status,2,c
  4647  002E0E  D7ED               	goto	l66
  4648  002E10  D7E2               	goto	l60
  4649  002E12                     __end_of_main:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           intcon	equ	0xFF2
  4656                           postinc0	equ	0xFEE
  4657                           wreg	equ	0xFE8
  4658                           postdec1	equ	0xFE5
  4659                           fsr1l	equ	0xFE1
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _test_powerup *****************
  4663 ;; Defined at:
  4664 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:   17
  4685 ;; This function calls:
  4686 ;;		_EUSART_FlushBuffer
  4687 ;;		_moteApp_delayms
  4688 ;;		_moteApp_testSensors
  4689 ;;		_oled_clear
  4690 ;;		_test_comms
  4691 ;;		_test_leds
  4692 ;;		_test_oled
  4693 ;;		_test_switch
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text1
  4700  004994                     __ptext1:
  4701                           	opt stack 0
  4702  004994                     _test_powerup:
  4703                           	opt stack 13
  4704                           
  4705                           ;poweruptest.c: 65: test_oled();
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;incstack = 0
  4709  004994  EC3B  F022         	call	_test_oled	;wreg free
  4710                           
  4711                           ;poweruptest.c: 66: moteApp_delayms(20);
  4712  004998  0E00               	movlw	0
  4713  00499A  0100               	movlb	0	; () banked
  4714  00499C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4715  00499E  0E14               	movlw	20
  4716  0049A0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4717  0049A2  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4718                           
  4719                           ;poweruptest.c: 68: test_switch();
  4720  0049A6  EC5E  F01C         	call	_test_switch	;wreg free
  4721                           
  4722                           ;poweruptest.c: 70: oled_clear();
  4723  0049AA  ECAD  F02B         	call	_oled_clear	;wreg free
  4724                           
  4725                           ;poweruptest.c: 71: moteApp_delayms(20);
  4726  0049AE  0E00               	movlw	0
  4727  0049B0  0100               	movlb	0	; () banked
  4728  0049B2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4729  0049B4  0E14               	movlw	20
  4730  0049B6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4731  0049B8  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4732                           
  4733                           ;poweruptest.c: 72: test_comms();
  4734  0049BC  ECDE  F025         	call	_test_comms	;wreg free
  4735                           
  4736                           ;poweruptest.c: 73: moteApp_delayms(20);
  4737  0049C0  0E00               	movlw	0
  4738  0049C2  0100               	movlb	0	; () banked
  4739  0049C4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4740  0049C6  0E14               	movlw	20
  4741  0049C8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4742  0049CA  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4743                           
  4744                           ;poweruptest.c: 75: test_leds();
  4745  0049CE  EC78  F026         	call	_test_leds	;wreg free
  4746                           
  4747                           ;poweruptest.c: 78: moteApp_delayms(20);
  4748  0049D2  0E00               	movlw	0
  4749  0049D4  0100               	movlb	0	; () banked
  4750  0049D6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4751  0049D8  0E14               	movlw	20
  4752  0049DA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4753  0049DC  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4754                           
  4755                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4756  0049E0  EC48  F028         	call	_EUSART_FlushBuffer	;wreg free
  4757                           
  4758                           ;poweruptest.c: 80: moteApp_delayms(20);
  4759  0049E4  0E00               	movlw	0
  4760  0049E6  0100               	movlb	0	; () banked
  4761  0049E8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4762  0049EA  0E14               	movlw	20
  4763  0049EC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4764  0049EE  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4765                           
  4766                           ;poweruptest.c: 81: moteApp_testSensors();
  4767  0049F2  ECC4  F01C         	call	_moteApp_testSensors	;wreg free
  4768                           
  4769                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4770  0049F6  0E0B               	movlw	11
  4771  0049F8  0100               	movlb	0	; () banked
  4772  0049FA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4773  0049FC  0EB8               	movlw	184
  4774  0049FE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4775  004A00  ECAC  F029         	call	_moteApp_delayms	;wreg free
  4776  004A04  0012               	return		;funcret
  4777  004A06                     __end_of_test_powerup:
  4778                           	opt stack 0
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           intcon	equ	0xFF2
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           postdec1	equ	0xFE5
  4787                           fsr1l	equ	0xFE1
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function _test_switch *****************
  4791 ;; Defined at:
  4792 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  timeout         2   24[BANK0 ] unsigned int 
  4797 ;;  buttonCheck     1   26[BANK0 ] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0
  4808 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4809 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4810 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        4 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   16
  4814 ;; This function calls:
  4815 ;;		_oled_clear
  4816 ;;		_oled_putString
  4817 ;; This function is called by:
  4818 ;;		_test_powerup
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text2
  4823  0038BC                     __ptext2:
  4824                           	opt stack 0
  4825  0038BC                     _test_switch:
  4826                           	opt stack 13
  4827                           
  4828                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4829                           
  4830                           ;incstack = 0
  4831  0038BC  0E01               	movlw	1
  4832  0038BE  0100               	movlb	0	; () banked
  4833  0038C0  6F79               	movwf	(test_switch@timeout+1)& (0+255),b
  4834  0038C2  0EF4               	movlw	244
  4835  0038C4  6F78               	movwf	test_switch@timeout& (0+255),b
  4836                           
  4837                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4838  0038C6  0E00               	movlw	0
  4839  0038C8  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;poweruptest.c: 103: oled_clear();
  4843  0038CA  ECAD  F02B         	call	_oled_clear	;wreg free
  4844                           
  4845                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4846  0038CE  0EF4               	movlw	low STR_10
  4847  0038D0  0100               	movlb	0	; () banked
  4848  0038D2  6F72               	movwf	oled_putString@string& (0+255),b
  4849  0038D4  0E7D               	movlw	high STR_10
  4850  0038D6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4851  0038D8  0E00               	movlw	0
  4852  0038DA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4853  0038DC  0E00               	movlw	0
  4854  0038DE  6F75               	movwf	oled_putString@start_page& (0+255),b
  4855  0038E0  EC73  F025         	call	_oled_putString	;wreg free
  4856                           
  4857                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4858  0038E4  A281               	btfss	3969,1,c	;volatile
  4859  0038E6  D002               	goto	u8560
  4860  0038E8  B081               	btfsc	3969,0,c	;volatile
  4861  0038EA  D00C               	goto	l123
  4862  0038EC                     u8560:
  4863                           
  4864                           ;poweruptest.c: 107: {
  4865                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4866  0038EC  0E7C               	movlw	low STR_11
  4867  0038EE  0100               	movlb	0	; () banked
  4868  0038F0  6F72               	movwf	oled_putString@string& (0+255),b
  4869  0038F2  0E7E               	movlw	high STR_11
  4870  0038F4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4871  0038F6  0E00               	movlw	0
  4872  0038F8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4873  0038FA  0E03               	movlw	3
  4874  0038FC  6F75               	movwf	oled_putString@start_page& (0+255),b
  4875  0038FE  EC73  F025         	call	_oled_putString	;wreg free
  4876                           
  4877                           ;poweruptest.c: 109: }
  4878  003902  D038               	goto	l127
  4879  003904                     l123:
  4880                           
  4881                           ;poweruptest.c: 110: else
  4882                           ;poweruptest.c: 111: {
  4883                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4884  003904  0E1B               	movlw	low STR_12
  4885  003906  0100               	movlb	0	; () banked
  4886  003908  6F72               	movwf	oled_putString@string& (0+255),b
  4887  00390A  0E7E               	movlw	high STR_12
  4888  00390C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4889  00390E  0E00               	movlw	0
  4890  003910  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4891  003912  0E01               	movlw	1
  4892  003914  6F75               	movwf	oled_putString@start_page& (0+255),b
  4893  003916  EC73  F025         	call	_oled_putString	;wreg free
  4894                           
  4895                           ;poweruptest.c: 113: }
  4896                           ;poweruptest.c: 114: while(timeout--)
  4897  00391A  D02C               	goto	l127
  4898  00391C                     l128:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;poweruptest.c: 115: {
  4902                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4903  00391C  B281               	btfsc	3969,1,c	;volatile
  4904  00391E  D00E               	goto	l129
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;poweruptest.c: 117: {
  4908                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4909  003920  0E01               	movlw	low STR_13
  4910  003922  6F72               	movwf	oled_putString@string& (0+255),b
  4911  003924  0E7E               	movlw	high STR_13
  4912  003926  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4913  003928  0E00               	movlw	0
  4914  00392A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4915  00392C  0E02               	movlw	2
  4916  00392E  6F75               	movwf	oled_putString@start_page& (0+255),b
  4917  003930  EC73  F025         	call	_oled_putString	;wreg free
  4918                           
  4919                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4920  003934  0100               	movlb	0	; () banked
  4921  003936  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  4922  003938  0F08               	addlw	8
  4923  00393A  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4924  00393C                     l129:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;poweruptest.c: 120: }
  4928                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4929                           
  4930                           ; BSR set to: 0
  4931  00393C  B081               	btfsc	3969,0,c	;volatile
  4932  00393E  D00E               	goto	l130
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;poweruptest.c: 122: {
  4936                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4937  003940  0E0E               	movlw	low STR_14
  4938  003942  6F72               	movwf	oled_putString@string& (0+255),b
  4939  003944  0E7E               	movlw	high STR_14
  4940  003946  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4941  003948  0E00               	movlw	0
  4942  00394A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  4943  00394C  0E03               	movlw	3
  4944  00394E  6F75               	movwf	oled_putString@start_page& (0+255),b
  4945  003950  EC73  F025         	call	_oled_putString	;wreg free
  4946                           
  4947                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4948  003954  0100               	movlb	0	; () banked
  4949  003956  517A               	movf	test_switch@buttonCheck& (0+255),w,b
  4950  003958  0F80               	addlw	128
  4951  00395A  6F7A               	movwf	test_switch@buttonCheck& (0+255),b
  4952  00395C                     l130:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;poweruptest.c: 125: }
  4956                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4957                           
  4958                           ; BSR set to: 0
  4959  00395C  0E88               	movlw	136
  4960  00395E  197A               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4961  003960  B4D8               	btfsc	status,2,c
  4962  003962  0012               	return	
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;poweruptest.c: 129: }
  4966                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4967                           
  4968                           ; BSR set to: 0
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;poweruptest.c: 127: {
  4972                           ;poweruptest.c: 128: break;
  4973  003964  0E9C               	movlw	156
  4974  003966  0100               	movlb	0	; () banked
  4975  003968  6F77               	movwf	??_test_switch& (0+255),b
  4976  00396A  0ED7               	movlw	215
  4977  00396C                     u10827:
  4978  00396C  2EE8               	decfsz	wreg,f,c
  4979  00396E  D7FE               	bra	u10827
  4980  003970  2F77               	decfsz	??_test_switch& (0+255),f,b
  4981  003972  D7FC               	bra	u10827
  4982  003974                     l127:
  4983  003974  0100               	movlb	0	; () banked
  4984  003976  0778               	decf	test_switch@timeout& (0+255),f,b
  4985  003978  A0D8               	btfss	status,0,c
  4986  00397A  0779               	decf	(test_switch@timeout+1)& (0+255),f,b
  4987  00397C  2978               	incf	test_switch@timeout& (0+255),w,b
  4988  00397E  E1CE               	bnz	l128
  4989  003980  2979               	incf	(test_switch@timeout+1)& (0+255),w,b
  4990  003982  B4D8               	btfsc	status,2,c
  4991  003984  0012               	return	
  4992  003986  D7CA               	goto	l128
  4993  003988                     __end_of_test_switch:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           intcon	equ	0xFF2
  5000                           postinc0	equ	0xFEE
  5001                           wreg	equ	0xFE8
  5002                           postdec1	equ	0xFE5
  5003                           fsr1l	equ	0xFE1
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _test_oled *****************
  5007 ;; Defined at:
  5008 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:   16
  5029 ;; This function calls:
  5030 ;;		_oled_clear
  5031 ;;		_oled_putString
  5032 ;; This function is called by:
  5033 ;;		_test_powerup
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text3
  5038  004476                     __ptext3:
  5039                           	opt stack 0
  5040  004476                     _test_oled:
  5041                           	opt stack 13
  5042                           
  5043                           ;poweruptest.c: 88: oled_clear();
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;incstack = 0
  5047  004476  ECAD  F02B         	call	_oled_clear	;wreg free
  5048                           
  5049                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5050  00447A  0E3D               	movlw	low STR_4
  5051  00447C  0100               	movlb	0	; () banked
  5052  00447E  6F72               	movwf	oled_putString@string& (0+255),b
  5053  004480  0E7F               	movlw	high STR_4
  5054  004482  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5055  004484  0E00               	movlw	0
  5056  004486  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5057  004488  0E00               	movlw	0
  5058  00448A  6F75               	movwf	oled_putString@start_page& (0+255),b
  5059  00448C  EC73  F025         	call	_oled_putString	;wreg free
  5060                           
  5061                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5062  004490  0E8A               	movlw	low (STR_164+11)
  5063  004492  0100               	movlb	0	; () banked
  5064  004494  6F72               	movwf	oled_putString@string& (0+255),b
  5065  004496  0E7D               	movlw	high (STR_164+11)
  5066  004498  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5067  00449A  0E00               	movlw	0
  5068  00449C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5069  00449E  0E06               	movlw	6
  5070  0044A0  6F75               	movwf	oled_putString@start_page& (0+255),b
  5071  0044A2  EC73  F025         	call	_oled_putString	;wreg free
  5072                           
  5073                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5074  0044A6  0E97               	movlw	low (STR_165+11)
  5075  0044A8  0100               	movlb	0	; () banked
  5076  0044AA  6F72               	movwf	oled_putString@string& (0+255),b
  5077  0044AC  0E7D               	movlw	high (STR_165+11)
  5078  0044AE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5079  0044B0  0E00               	movlw	0
  5080  0044B2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5081  0044B4  0E08               	movlw	8
  5082  0044B6  6F75               	movwf	oled_putString@start_page& (0+255),b
  5083  0044B8  EC73  F025         	call	_oled_putString	;wreg free
  5084                           
  5085                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5086  0044BC  0EC3               	movlw	low STR_7
  5087  0044BE  0100               	movlb	0	; () banked
  5088  0044C0  6F72               	movwf	oled_putString@string& (0+255),b
  5089  0044C2  0E7C               	movlw	high STR_7
  5090  0044C4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5091  0044C6  0E00               	movlw	0
  5092  0044C8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5093  0044CA  0E01               	movlw	1
  5094  0044CC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5095  0044CE  EC73  F025         	call	_oled_putString	;wreg free
  5096                           
  5097                           ;poweruptest.c: 94: oled_putString("Mar 30 2018",0,2);
  5098  0044D2  0E70               	movlw	low STR_8
  5099  0044D4  0100               	movlb	0	; () banked
  5100  0044D6  6F72               	movwf	oled_putString@string& (0+255),b
  5101  0044D8  0E7E               	movlw	high STR_8
  5102  0044DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5103  0044DC  0E00               	movlw	0
  5104  0044DE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5105  0044E0  0E02               	movlw	2
  5106  0044E2  6F75               	movwf	oled_putString@start_page& (0+255),b
  5107  0044E4  EC73  F025         	call	_oled_putString	;wreg free
  5108                           
  5109                           ;poweruptest.c: 95: oled_putString("11:04:50",0,3);
  5110  0044E8  0E46               	movlw	low STR_9
  5111  0044EA  0100               	movlb	0	; () banked
  5112  0044EC  6F72               	movwf	oled_putString@string& (0+255),b
  5113  0044EE  0E7F               	movlw	high STR_9
  5114  0044F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5115  0044F2  0E00               	movlw	0
  5116  0044F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5117  0044F6  0E03               	movlw	3
  5118  0044F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  5119  0044FA  EC73  F025         	call	_oled_putString	;wreg free
  5120  0044FE  0012               	return		;funcret
  5121  004500                     __end_of_test_oled:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           intcon	equ	0xFF2
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           fsr1l	equ	0xFE1
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function _test_leds *****************
  5135 ;; Defined at:
  5136 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:   15
  5157 ;; This function calls:
  5158 ;;		_delayms
  5159 ;;		_oled_putString
  5160 ;; This function is called by:
  5161 ;;		_test_powerup
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text4
  5166  004CF0                     __ptext4:
  5167                           	opt stack 0
  5168  004CF0                     _test_leds:
  5169                           	opt stack 14
  5170                           
  5171                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5172                           
  5173                           ;incstack = 0
  5174  004CF0  0E06               	movlw	low STR_16
  5175  004CF2  0100               	movlb	0	; () banked
  5176  004CF4  6F72               	movwf	oled_putString@string& (0+255),b
  5177  004CF6  0E7F               	movlw	high STR_16
  5178  004CF8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5179  004CFA  0E00               	movlw	0
  5180  004CFC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5181  004CFE  0E01               	movlw	1
  5182  004D00  6F75               	movwf	oled_putString@start_page& (0+255),b
  5183  004D02  EC73  F025         	call	_oled_putString	;wreg free
  5184                           
  5185                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5186  004D06  8C89               	bsf	3977,6,c	;volatile
  5187                           
  5188                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5189  004D08  8E89               	bsf	3977,7,c	;volatile
  5190                           
  5191                           ;poweruptest.c: 153: delayms(500);
  5192  004D0A  0E01               	movlw	1
  5193  004D0C  0100               	movlb	0	; () banked
  5194  004D0E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5195  004D10  0EF4               	movlw	244
  5196  004D12  6F60               	movwf	delayms@t& (0+255),b
  5197  004D14  EC93  F029         	call	_delayms	;wreg free
  5198                           
  5199                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5200  004D18  9C89               	bcf	3977,6,c	;volatile
  5201                           
  5202                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5203  004D1A  9E89               	bcf	3977,7,c	;volatile
  5204                           
  5205                           ;poweruptest.c: 156: delayms(500);
  5206  004D1C  0E01               	movlw	1
  5207  004D1E  0100               	movlb	0	; () banked
  5208  004D20  6F61               	movwf	(delayms@t+1)& (0+255),b
  5209  004D22  0EF4               	movlw	244
  5210  004D24  6F60               	movwf	delayms@t& (0+255),b
  5211  004D26  EC93  F029         	call	_delayms	;wreg free
  5212                           
  5213                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5214  004D2A  8C89               	bsf	3977,6,c	;volatile
  5215                           
  5216                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5217  004D2C  8E89               	bsf	3977,7,c	;volatile
  5218                           
  5219                           ;poweruptest.c: 159: delayms(500);
  5220  004D2E  0E01               	movlw	1
  5221  004D30  0100               	movlb	0	; () banked
  5222  004D32  6F61               	movwf	(delayms@t+1)& (0+255),b
  5223  004D34  0EF4               	movlw	244
  5224  004D36  6F60               	movwf	delayms@t& (0+255),b
  5225  004D38  EC93  F029         	call	_delayms	;wreg free
  5226                           
  5227                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5228  004D3C  9C89               	bcf	3977,6,c	;volatile
  5229                           
  5230                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5231  004D3E  9E89               	bcf	3977,7,c	;volatile
  5232                           
  5233                           ;poweruptest.c: 162: delayms(500);
  5234  004D40  0E01               	movlw	1
  5235  004D42  0100               	movlb	0	; () banked
  5236  004D44  6F61               	movwf	(delayms@t+1)& (0+255),b
  5237  004D46  0EF4               	movlw	244
  5238  004D48  6F60               	movwf	delayms@t& (0+255),b
  5239  004D4A  EC93  F029         	call	_delayms	;wreg free
  5240  004D4E  0012               	return		;funcret
  5241  004D50                     __end_of_test_leds:
  5242                           	opt stack 0
  5243                           tblptru	equ	0xFF8
  5244                           tblptrh	equ	0xFF7
  5245                           tblptrl	equ	0xFF6
  5246                           tablat	equ	0xFF5
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1l	equ	0xFE1
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _test_comms *****************
  5255 ;; Defined at:
  5256 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:   15
  5277 ;; This function calls:
  5278 ;;		_delayms
  5279 ;;		_moteApp_toggleLeds
  5280 ;;		_oled_putString
  5281 ;; This function is called by:
  5282 ;;		_test_powerup
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text5
  5287  004BBC                     __ptext5:
  5288                           	opt stack 0
  5289  004BBC                     _test_comms:
  5290                           	opt stack 14
  5291                           
  5292                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5293                           
  5294                           ;incstack = 0
  5295  004BBC  0EBF               	movlw	low STR_15
  5296  004BBE  0100               	movlb	0	; () banked
  5297  004BC0  6F72               	movwf	oled_putString@string& (0+255),b
  5298  004BC2  0E7E               	movlw	high STR_15
  5299  004BC4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5300  004BC6  0E00               	movlw	0
  5301  004BC8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5302  004BCA  0E00               	movlw	0
  5303  004BCC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5304  004BCE  EC73  F025         	call	_oled_putString	;wreg free
  5305                           
  5306                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5307  004BD2  0E01               	movlw	1
  5308  004BD4  EC7D  F018         	call	_moteApp_toggleLeds
  5309                           
  5310                           ;poweruptest.c: 138: delayms(500);
  5311  004BD8  0E01               	movlw	1
  5312  004BDA  0100               	movlb	0	; () banked
  5313  004BDC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5314  004BDE  0EF4               	movlw	244
  5315  004BE0  6F60               	movwf	delayms@t& (0+255),b
  5316  004BE2  EC93  F029         	call	_delayms	;wreg free
  5317                           
  5318                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5319  004BE6  0E00               	movlw	0
  5320  004BE8  EC7D  F018         	call	_moteApp_toggleLeds
  5321                           
  5322                           ;poweruptest.c: 140: delayms(500);
  5323  004BEC  0E01               	movlw	1
  5324  004BEE  0100               	movlb	0	; () banked
  5325  004BF0  6F61               	movwf	(delayms@t+1)& (0+255),b
  5326  004BF2  0EF4               	movlw	244
  5327  004BF4  6F60               	movwf	delayms@t& (0+255),b
  5328  004BF6  EC93  F029         	call	_delayms	;wreg free
  5329                           
  5330                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5331  004BFA  0E01               	movlw	1
  5332  004BFC  EC7D  F018         	call	_moteApp_toggleLeds
  5333                           
  5334                           ;poweruptest.c: 142: delayms(500);
  5335  004C00  0E01               	movlw	1
  5336  004C02  0100               	movlb	0	; () banked
  5337  004C04  6F61               	movwf	(delayms@t+1)& (0+255),b
  5338  004C06  0EF4               	movlw	244
  5339  004C08  6F60               	movwf	delayms@t& (0+255),b
  5340  004C0A  EC93  F029         	call	_delayms	;wreg free
  5341                           
  5342                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5343  004C0E  0E00               	movlw	0
  5344  004C10  EC7D  F018         	call	_moteApp_toggleLeds
  5345                           
  5346                           ;poweruptest.c: 144: delayms(500);
  5347  004C14  0E01               	movlw	1
  5348  004C16  0100               	movlb	0	; () banked
  5349  004C18  6F61               	movwf	(delayms@t+1)& (0+255),b
  5350  004C1A  0EF4               	movlw	244
  5351  004C1C  6F60               	movwf	delayms@t& (0+255),b
  5352  004C1E  EC93  F029         	call	_delayms	;wreg free
  5353  004C22  0012               	return		;funcret
  5354  004C24                     __end_of_test_comms:
  5355                           	opt stack 0
  5356                           tblptru	equ	0xFF8
  5357                           tblptrh	equ	0xFF7
  5358                           tblptrl	equ	0xFF6
  5359                           tablat	equ	0xFF5
  5360                           intcon	equ	0xFF2
  5361                           postinc0	equ	0xFEE
  5362                           wreg	equ	0xFE8
  5363                           postdec1	equ	0xFE5
  5364                           fsr1l	equ	0xFE1
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _moteApp_toggleLeds *****************
  5368 ;; Defined at:
  5369 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  state           1    wreg     unsigned char 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  state           1    4[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0
  5384 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5385 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5386 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5387 ;;Total ram usage:        2 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:   14
  5390 ;; This function calls:
  5391 ;;		_sendCommand
  5392 ;; This function is called by:
  5393 ;;		_test_comms
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text6
  5398  0030FA                     __ptext6:
  5399                           	opt stack 0
  5400  0030FA                     _moteApp_toggleLeds:
  5401                           	opt stack 14
  5402                           
  5403                           ;incstack = 0
  5404                           ;moteApp_toggleLeds@state stored from wreg
  5405  0030FA  0100               	movlb	0	; () banked
  5406  0030FC  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5407                           
  5408                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5409  0030FE  0EFA               	movlw	250
  5410  003100  0100               	movlb	0	; () banked
  5411  003102  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5412  003104  0E58               	movlw	88
  5413  003106                     u10837:
  5414  003106  2EE8               	decfsz	wreg,f,c
  5415  003108  D7FE               	bra	u10837
  5416  00310A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5417  00310C  D7FC               	bra	u10837
  5418  00310E  F000               	nop	
  5419                           
  5420                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5421  003110  0EFA               	movlw	250
  5422  003112  0100               	movlb	0	; () banked
  5423  003114  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5424  003116  0E58               	movlw	88
  5425  003118                     u10847:
  5426  003118  2EE8               	decfsz	wreg,f,c
  5427  00311A  D7FE               	bra	u10847
  5428  00311C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5429  00311E  D7FC               	bra	u10847
  5430  003120  F000               	nop	
  5431                           
  5432                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5433  003122  0EFA               	movlw	250
  5434  003124  0100               	movlb	0	; () banked
  5435  003126  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5436  003128  0E58               	movlw	88
  5437  00312A                     u10857:
  5438  00312A  2EE8               	decfsz	wreg,f,c
  5439  00312C  D7FE               	bra	u10857
  5440  00312E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5441  003130  D7FC               	bra	u10857
  5442  003132  F000               	nop	
  5443                           
  5444                           ;MOTEapp.c: 1269: if (state)
  5445  003134  0100               	movlb	0	; () banked
  5446  003136  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5447  003138  B4D8               	btfsc	status,2,c
  5448  00313A  D029               	goto	l679
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;MOTEapp.c: 1270: {
  5452                           ;MOTEapp.c: 1271: sendCommand("sys set pindig GPIO10 1\r\n");
  5453  00313C  0E22               	movlw	low STR_175
  5454  00313E  6F61               	movwf	sendCommand@string& (0+255),b
  5455  003140  0E7A               	movlw	high STR_175
  5456  003142  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5457  003144  EC0F  F02A         	call	_sendCommand	;wreg free
  5458                           
  5459                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5460  003148  0EFA               	movlw	250
  5461  00314A  0100               	movlb	0	; () banked
  5462  00314C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5463  00314E  0E58               	movlw	88
  5464  003150                     u10867:
  5465  003150  2EE8               	decfsz	wreg,f,c
  5466  003152  D7FE               	bra	u10867
  5467  003154  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5468  003156  D7FC               	bra	u10867
  5469  003158  F000               	nop	
  5470                           
  5471                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5472  00315A  0EFA               	movlw	250
  5473  00315C  0100               	movlb	0	; () banked
  5474  00315E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5475  003160  0E58               	movlw	88
  5476  003162                     u10877:
  5477  003162  2EE8               	decfsz	wreg,f,c
  5478  003164  D7FE               	bra	u10877
  5479  003166  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5480  003168  D7FC               	bra	u10877
  5481  00316A  F000               	nop	
  5482                           
  5483                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5484  00316C  0EFA               	movlw	250
  5485  00316E  0100               	movlb	0	; () banked
  5486  003170  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5487  003172  0E58               	movlw	88
  5488  003174                     u10887:
  5489  003174  2EE8               	decfsz	wreg,f,c
  5490  003176  D7FE               	bra	u10887
  5491  003178  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5492  00317A  D7FC               	bra	u10887
  5493  00317C  F000               	nop	
  5494                           
  5495                           ;MOTEapp.c: 1275: sendCommand("sys set pindig GPIO11 1\r\n");
  5496  00317E  0E3C               	movlw	low STR_176
  5497  003180  0100               	movlb	0	; () banked
  5498  003182  6F61               	movwf	sendCommand@string& (0+255),b
  5499  003184  0E7A               	movlw	high STR_176
  5500  003186  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5501  003188  EC0F  F02A         	call	_sendCommand	;wreg free
  5502                           
  5503                           ;MOTEapp.c: 1276: }
  5504  00318C  0012               	return	
  5505  00318E                     l679:
  5506                           
  5507                           ;MOTEapp.c: 1277: else
  5508                           ;MOTEapp.c: 1278: {
  5509                           ;MOTEapp.c: 1279: sendCommand("sys set pindig GPIO10 0\r\n");
  5510  00318E  0EEE               	movlw	low STR_177
  5511  003190  0100               	movlb	0	; () banked
  5512  003192  6F61               	movwf	sendCommand@string& (0+255),b
  5513  003194  0E79               	movlw	high STR_177
  5514  003196  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5515  003198  EC0F  F02A         	call	_sendCommand	;wreg free
  5516                           
  5517                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5518  00319C  0EFA               	movlw	250
  5519  00319E  0100               	movlb	0	; () banked
  5520  0031A0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5521  0031A2  0E58               	movlw	88
  5522  0031A4                     u10897:
  5523  0031A4  2EE8               	decfsz	wreg,f,c
  5524  0031A6  D7FE               	bra	u10897
  5525  0031A8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5526  0031AA  D7FC               	bra	u10897
  5527  0031AC  F000               	nop	
  5528                           
  5529                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5530  0031AE  0EFA               	movlw	250
  5531  0031B0  0100               	movlb	0	; () banked
  5532  0031B2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5533  0031B4  0E58               	movlw	88
  5534  0031B6                     u10907:
  5535  0031B6  2EE8               	decfsz	wreg,f,c
  5536  0031B8  D7FE               	bra	u10907
  5537  0031BA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5538  0031BC  D7FC               	bra	u10907
  5539  0031BE  F000               	nop	
  5540                           
  5541                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5542  0031C0  0EFA               	movlw	250
  5543  0031C2  0100               	movlb	0	; () banked
  5544  0031C4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5545  0031C6  0E58               	movlw	88
  5546  0031C8                     u10917:
  5547  0031C8  2EE8               	decfsz	wreg,f,c
  5548  0031CA  D7FE               	bra	u10917
  5549  0031CC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5550  0031CE  D7FC               	bra	u10917
  5551  0031D0  F000               	nop	
  5552                           
  5553                           ;MOTEapp.c: 1283: sendCommand("sys set pindig GPIO11 0\r\n");
  5554  0031D2  0E08               	movlw	low STR_178
  5555  0031D4  0100               	movlb	0	; () banked
  5556  0031D6  6F61               	movwf	sendCommand@string& (0+255),b
  5557  0031D8  0E7A               	movlw	high STR_178
  5558  0031DA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5559  0031DC  EC0F  F02A         	call	_sendCommand	;wreg free
  5560  0031E0  0012               	return	
  5561  0031E2                     __end_of_moteApp_toggleLeds:
  5562                           	opt stack 0
  5563                           tblptru	equ	0xFF8
  5564                           tblptrh	equ	0xFF7
  5565                           tblptrl	equ	0xFF6
  5566                           tablat	equ	0xFF5
  5567                           intcon	equ	0xFF2
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           postdec1	equ	0xFE5
  5571                           fsr1l	equ	0xFE1
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function _delayms *****************
  5575 ;; Defined at:
  5576 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  t               2    0[BANK0 ] unsigned int 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  i               2    3[BANK0 ] unsigned int 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5590 ;;      Params:         0       2       0       0       0       0       0       0       0
  5591 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5592 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5593 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5594 ;;Total ram usage:        5 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:   11
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_test_comms
  5601 ;;		_test_leds
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text7
  5606  005326                     __ptext7:
  5607                           	opt stack 0
  5608  005326                     _delayms:
  5609                           	opt stack 17
  5610                           
  5611                           ;poweruptest.c: 56: uint16_t i;
  5612                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5613                           
  5614                           ;incstack = 0
  5615  005326  0E00               	movlw	0
  5616  005328  0100               	movlb	0	; () banked
  5617  00532A  6F64               	movwf	(delayms@i+1)& (0+255),b
  5618  00532C  0E00               	movlw	0
  5619  00532E  6F63               	movwf	delayms@i& (0+255),b
  5620  005330  D00C               	goto	l111
  5621  005332                     
  5622                           ; BSR set to: 0
  5623                           ;poweruptest.c: 58: {
  5624                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5625                           
  5626                           ; BSR set to: 0
  5627  005332  0E10               	movlw	16
  5628  005334  0100               	movlb	0	; () banked
  5629  005336  6F62               	movwf	??_delayms& (0+255),b
  5630  005338  0E94               	movlw	148
  5631  00533A                     u10927:
  5632  00533A  2EE8               	decfsz	wreg,f,c
  5633  00533C  D7FE               	bra	u10927
  5634  00533E  2F62               	decfsz	??_delayms& (0+255),f,b
  5635  005340  D7FC               	bra	u10927
  5636  005342  F000               	nop	
  5637  005344  0100               	movlb	0	; () banked
  5638  005346  4B63               	infsnz	delayms@i& (0+255),f,b
  5639  005348  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5640  00534A                     l111:
  5641                           
  5642                           ; BSR set to: 0
  5643  00534A  5160               	movf	delayms@t& (0+255),w,b
  5644  00534C  5D63               	subwf	delayms@i& (0+255),w,b
  5645  00534E  5161               	movf	(delayms@t+1)& (0+255),w,b
  5646  005350  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5647  005352  B0D8               	btfsc	status,0,c
  5648  005354  0012               	return	
  5649  005356  D7ED               	goto	l112
  5650  005358                     __end_of_delayms:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           postdec1	equ	0xFE5
  5660                           fsr1l	equ	0xFE1
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function _moteApp_testSensors *****************
  5664 ;; Defined at:
  5665 ;;		line 1368 in file "../Includes/Board/MOTEapp.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  dummyValue      2    0        unsigned int 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5682 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5683 ;;Total ram usage:        1 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:   16
  5686 ;; This function calls:
  5687 ;;		_ADC_TempConversion
  5688 ;;		_moteApp_convertSensorValue
  5689 ;;		_moteApp_getLightValue
  5690 ;;		_moteApp_getTempValue
  5691 ;;		_moteApp_setSensorsInput
  5692 ;;		_oled_clear
  5693 ;;		_oled_putChar
  5694 ;;		_oled_putString
  5695 ;;		_oled_putint8
  5696 ;; This function is called by:
  5697 ;;		_test_powerup
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text8
  5702  003988                     __ptext8:
  5703                           	opt stack 0
  5704  003988                     _moteApp_testSensors:
  5705                           	opt stack 13
  5706                           
  5707                           ;MOTEapp.c: 1371: moteApp_setSensorsInput();
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;incstack = 0
  5711  003988  EC8E  F024         	call	_moteApp_setSensorsInput	;wreg free
  5712                           
  5713                           ;MOTEapp.c: 1373: uint16_t dummyValue;
  5714                           ;MOTEapp.c: 1374: oled_clear();
  5715  00398C  ECAD  F02B         	call	_oled_clear	;wreg free
  5716                           
  5717                           ;MOTEapp.c: 1375: oled_putString("ADC Test",0,0);
  5718  003990  0E58               	movlw	low STR_17
  5719  003992  0100               	movlb	0	; () banked
  5720  003994  6F72               	movwf	oled_putString@string& (0+255),b
  5721  003996  0E7F               	movlw	high STR_17
  5722  003998  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5723  00399A  0E00               	movlw	0
  5724  00399C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5725  00399E  0E00               	movlw	0
  5726  0039A0  6F75               	movwf	oled_putString@start_page& (0+255),b
  5727  0039A2  EC73  F025         	call	_oled_putString	;wreg free
  5728                           
  5729                           ;MOTEapp.c: 1376: oled_putString("Light =",0,1);
  5730  0039A6  0E71               	movlw	low STR_19
  5731  0039A8  0100               	movlb	0	; () banked
  5732  0039AA  6F72               	movwf	oled_putString@string& (0+255),b
  5733  0039AC  0E7F               	movlw	high STR_19
  5734  0039AE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5735  0039B0  0E00               	movlw	0
  5736  0039B2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5737  0039B4  0E01               	movlw	1
  5738  0039B6  6F75               	movwf	oled_putString@start_page& (0+255),b
  5739  0039B8  EC73  F025         	call	_oled_putString	;wreg free
  5740                           
  5741                           ;MOTEapp.c: 1377: oled_putString("Temp  =",0,2);
  5742  0039BC  0E69               	movlw	low STR_18
  5743  0039BE  0100               	movlb	0	; () banked
  5744  0039C0  6F72               	movwf	oled_putString@string& (0+255),b
  5745  0039C2  0E7F               	movlw	high STR_18
  5746  0039C4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5747  0039C6  0E00               	movlw	0
  5748  0039C8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5749  0039CA  0E02               	movlw	2
  5750  0039CC  6F75               	movwf	oled_putString@start_page& (0+255),b
  5751  0039CE  EC73  F025         	call	_oled_putString	;wreg free
  5752                           
  5753                           ;MOTEapp.c: 1378: oled_putChar('C',14,2);
  5754  0039D2  0E0E               	movlw	14
  5755  0039D4  0100               	movlb	0	; () banked
  5756  0039D6  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5757  0039D8  0E02               	movlw	2
  5758  0039DA  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5759  0039DC  0E43               	movlw	67
  5760  0039DE  EC8D  F023         	call	_oled_putChar
  5761                           
  5762                           ;MOTEapp.c: 1379: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5763  0039E2  EC8A  F028         	call	_moteApp_getTempValue	;wreg free
  5764  0039E6  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5765  0039EA  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5766  0039EE  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  5767  0039F2  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5768  0039F6  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5769                           
  5770                           ;MOTEapp.c: 1380: temperature = ADC_TempConversion(temperature);
  5771  0039FA  0100               	movlb	0	; () banked
  5772  0039FC  51DA               	movf	_temperature& (0+255),w,b
  5773  0039FE  EC08  F018         	call	_ADC_TempConversion
  5774  003A02  0100               	movlb	0	; () banked
  5775  003A04  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5776  003A06  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5777  003A08  6FDA               	movwf	_temperature& (0+255),b
  5778  003A0A  6BDB               	clrf	(_temperature+1)& (0+255),b
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;MOTEapp.c: 1381: oled_putint8(temperature, 10, 2);
  5782  003A0C  0E0A               	movlw	10
  5783  003A0E  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  5784  003A10  0E02               	movlw	2
  5785  003A12  6F78               	movwf	oled_putint8@start_page& (0+255),b
  5786  003A14  51DA               	movf	_temperature& (0+255),w,b
  5787  003A16  ECB8  F020         	call	_oled_putint8
  5788                           
  5789                           ;MOTEapp.c: 1382: __nop();
  5790  003A1A  F000               	nop	
  5791                           
  5792                           ;MOTEapp.c: 1383: oled_putString("    ", 10, 1);
  5793  003A1C  0EC7               	movlw	low (STR_40+12)
  5794  003A1E  0100               	movlb	0	; () banked
  5795  003A20  6F72               	movwf	oled_putString@string& (0+255),b
  5796  003A22  0E7A               	movlw	high (STR_40+12)
  5797  003A24  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5798  003A26  0E0A               	movlw	10
  5799  003A28  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5800  003A2A  0E01               	movlw	1
  5801  003A2C  6F75               	movwf	oled_putString@start_page& (0+255),b
  5802  003A2E  EC73  F025         	call	_oled_putString	;wreg free
  5803                           
  5804                           ;MOTEapp.c: 1384: oled_putString(moteApp_getLightValue(), 10, 1);
  5805  003A32  ECB5  F027         	call	_moteApp_getLightValue	;wreg free
  5806  003A36  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  5807  003A3A  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5808  003A3E  0E0A               	movlw	10
  5809  003A40  0100               	movlb	0	; () banked
  5810  003A42  6F74               	movwf	oled_putString@station_dot& (0+255),b
  5811  003A44  0E01               	movlw	1
  5812  003A46  6F75               	movwf	oled_putString@start_page& (0+255),b
  5813  003A48  EC73  F025         	call	_oled_putString	;wreg free
  5814  003A4C  0012               	return		;funcret
  5815  003A4E                     __end_of_moteApp_testSensors:
  5816                           	opt stack 0
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           intcon	equ	0xFF2
  5822                           postinc0	equ	0xFEE
  5823                           wreg	equ	0xFE8
  5824                           postdec1	equ	0xFE5
  5825                           fsr1l	equ	0xFE1
  5826                           status	equ	0xFD8
  5827                           
  5828 ;; *************** function _moteHandler *****************
  5829 ;; Defined at:
  5830 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  readMessage     1   91[BANK0 ] unsigned char 
  5835 ;;  buttonPress     1   90[BANK0 ] enum E5836
  5836 ;;  s2Button        1   89[BANK0 ] unsigned char 
  5837 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  5838 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      enum E6866
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0
  5849 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5850 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5851 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5852 ;;Total ram usage:        6 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:   19
  5855 ;; This function calls:
  5856 ;;		_ADC_TempConversion
  5857 ;;		_MOTEapp_TimerBasedTask
  5858 ;;		_MOTEapp_getModuleResponse
  5859 ;;		_TMRapp_ClearBitFlags
  5860 ;;		_TMRapp_Handler
  5861 ;;		_USBapp_exitCDC
  5862 ;;		_USBapp_exitCDCState
  5863 ;;		_moteApp_convertSensorValue
  5864 ;;		_moteApp_getLightValue
  5865 ;;		_moteApp_getTempValue
  5866 ;;		_moteJoiningProcess
  5867 ;;		_moteRunningProcess
  5868 ;;		_oled_clear
  5869 ;;		_oled_putString
  5870 ;;		_oled_putint8
  5871 ;;		_service_pushbutton
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text9
  5878  0020F4                     __ptext9:
  5879                           	opt stack 0
  5880  0020F4                     _moteHandler:
  5881                           	opt stack 11
  5882                           
  5883                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  5884                           
  5885                           ;incstack = 0
  5886  0020F4  0E00               	movlw	0
  5887  0020F6  0100               	movlb	0	; () banked
  5888  0020F8  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  5889                           
  5890                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  5891  0020FA  0E00               	movlw	0
  5892  0020FC  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5893                           
  5894                           ;MOTEapp.c: 192: bool s2Button = 0;
  5895  0020FE  0E00               	movlw	0
  5896  002100  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  5897                           
  5898                           ;MOTEapp.c: 193: bool readMessage = 0;
  5899  002102  0E00               	movlw	0
  5900  002104  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  5901                           
  5902                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  5903  002106  0E03               	movlw	3
  5904  002108  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  5908  00210A  A080               	btfss	3968,0,c	;volatile
  5909  00210C  D009               	goto	l363
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;MOTEapp.c: 198: {
  5913                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  5914  00210E  EC88  F02C         	call	_USBapp_exitCDC	;wreg free
  5915  002112  0900               	iorlw	0
  5916  002114  A4D8               	btfss	status,2,c
  5917  002116  D007               	goto	l365
  5918                           
  5919                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  5920  002118  0E04               	movlw	4
  5921  00211A  0100               	movlb	0	; () banked
  5922  00211C  6FFF               	movwf	_moteState& (0+255),b
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;MOTEapp.c: 201: } else {
  5926  00211E  D003               	goto	l365
  5927  002120                     l363:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  5931                           
  5932                           ; BSR set to: 0
  5933  002120  0E00               	movlw	0
  5934  002122  EC62  F02C         	call	_USBapp_exitCDCState
  5935  002126                     l365:
  5936                           
  5937                           ;MOTEapp.c: 203: }
  5938                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  5939  002126  0100               	movlb	0	; () banked
  5940  002128  A1F8               	btfss	_appTimer& (0+255),0,b
  5941  00212A  D008               	goto	l366
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;MOTEapp.c: 207: {
  5945                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  5946  00212C  EC75  F02C         	call	_TMRapp_ClearBitFlags	;wreg free
  5947                           
  5948                           ;MOTEapp.c: 211: TMRapp_Handler();
  5949  002130  EC09  F017         	call	_TMRapp_Handler	;wreg free
  5950                           
  5951                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  5952  002134  0100               	movlb	0	; () banked
  5953  002136  51F8               	movf	_appTimer& (0+255),w,b
  5954  002138  EC63  F02B         	call	_MOTEapp_TimerBasedTask
  5955  00213C                     l366:
  5956                           
  5957                           ;MOTEapp.c: 213: }
  5958                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  5959  00213C  EC3C  F025         	call	_service_pushbutton	;wreg free
  5960  002140  0100               	movlb	0	; () banked
  5961  002142  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  5965  002144  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  5966  002146  A4D8               	btfss	status,2,c
  5967  002148  D005               	goto	l367
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;MOTEapp.c: 218: {
  5971                           ;MOTEapp.c: 219: secTicker = 0;
  5972  00214A  0E00               	movlw	0
  5973  00214C  6FF0               	movwf	_secTicker& (0+255),b
  5974                           
  5975                           ;MOTEapp.c: 220: gotoNextState = 1;
  5976  00214E  0E01               	movlw	1
  5977  002150  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  5978                           
  5979                           ;MOTEapp.c: 221: }
  5980  002152  D008               	goto	l369
  5981  002154                     l367:
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  5985                           
  5986                           ; BSR set to: 0
  5987  002154  0E02               	movlw	2
  5988  002156  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5989  002158  A4D8               	btfss	status,2,c
  5990  00215A  D004               	goto	l369
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;MOTEapp.c: 223: {
  5994                           ;MOTEapp.c: 224: secTicker = 0;
  5995  00215C  0E00               	movlw	0
  5996  00215E  6FF0               	movwf	_secTicker& (0+255),b
  5997                           
  5998                           ;MOTEapp.c: 225: s2Button = 1;
  5999  002160  0E01               	movlw	1
  6000  002162  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6001  002164                     l369:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;MOTEapp.c: 226: }
  6005                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  6006                           
  6007                           ; BSR set to: 0
  6008                           
  6009                           ; BSR set to: 0
  6010  002164  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  6011  002168  0900               	iorlw	0
  6012  00216A  B4D8               	btfsc	status,2,c
  6013  00216C  D002               	goto	l370
  6014                           
  6015                           ;MOTEapp.c: 230: readMessage = 1;
  6016  00216E  0E01               	movlw	1
  6017  002170  D001               	goto	L1
  6018  002172                     l370:
  6019                           
  6020                           ;MOTEapp.c: 231: else
  6021                           ;MOTEapp.c: 232: readMessage = 0;
  6022                           
  6023                           ; BSR set to: 0
  6024  002172  0E00               	movlw	0
  6025  002174                     L1:
  6026  002174  0100               	movlb	0	; () banked
  6027  002176  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  6031                           
  6032                           ; BSR set to: 0
  6033  002178  0E02               	movlw	2
  6034  00217A  19F3               	xorwf	_runningState& (0+255),w,b
  6035  00217C  A4D8               	btfss	status,2,c
  6036  00217E  D041               	goto	l373
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;MOTEapp.c: 236: {
  6040                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  6041  002180  0101               	movlb	1	; () banked
  6042  002182  5157               	movf	(_m10SecTicker+1)& (0+255),w,b
  6043  002184  E104               	bnz	u10000
  6044  002186  0E64               	movlw	100
  6045  002188  5D56               	subwf	_m10SecTicker& (0+255),w,b
  6046  00218A  A0D8               	btfss	status,0,c
  6047  00218C  D03A               	goto	l373
  6048  00218E                     u10000:
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;MOTEapp.c: 239: {
  6052                           ;MOTEapp.c: 240: __nop();
  6053  00218E  F000               	nop	
  6054                           
  6055                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  6056  002190  0EC7               	movlw	low (STR_40+12)
  6057  002192  0100               	movlb	0	; () banked
  6058  002194  6F72               	movwf	oled_putString@string& (0+255),b
  6059  002196  0E7A               	movlw	high (STR_40+12)
  6060  002198  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6061  00219A  0E06               	movlw	6
  6062  00219C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6063  00219E  0E01               	movlw	1
  6064  0021A0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6065  0021A2  EC73  F025         	call	_oled_putString	;wreg free
  6066                           
  6067                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  6068  0021A6  ECB5  F027         	call	_moteApp_getLightValue	;wreg free
  6069  0021AA  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6070  0021AE  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6071  0021B2  0E06               	movlw	6
  6072  0021B4  0100               	movlb	0	; () banked
  6073  0021B6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6074  0021B8  0E01               	movlw	1
  6075  0021BA  6F75               	movwf	oled_putString@start_page& (0+255),b
  6076  0021BC  EC73  F025         	call	_oled_putString	;wreg free
  6077                           
  6078                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6079  0021C0  EC8A  F028         	call	_moteApp_getTempValue	;wreg free
  6080  0021C4  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6081  0021C8  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6082  0021CC  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  6083  0021D0  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6084  0021D4  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6085                           
  6086                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  6087  0021D8  0100               	movlb	0	; () banked
  6088  0021DA  51DA               	movf	_temperature& (0+255),w,b
  6089  0021DC  EC08  F018         	call	_ADC_TempConversion
  6090  0021E0  0100               	movlb	0	; () banked
  6091  0021E2  6FB6               	movwf	??_moteHandler& (0+255),b
  6092  0021E4  51B6               	movf	??_moteHandler& (0+255),w,b
  6093  0021E6  6FDA               	movwf	_temperature& (0+255),b
  6094  0021E8  6BDB               	clrf	(_temperature+1)& (0+255),b
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  6098  0021EA  0E06               	movlw	6
  6099  0021EC  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6100  0021EE  0E02               	movlw	2
  6101  0021F0  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6102  0021F2  51DA               	movf	_temperature& (0+255),w,b
  6103  0021F4  ECB8  F020         	call	_oled_putint8
  6104                           
  6105                           ;MOTEapp.c: 246: m10SecTicker = 0;
  6106  0021F8  0E00               	movlw	0
  6107  0021FA  0101               	movlb	1	; () banked
  6108  0021FC  6F57               	movwf	(_m10SecTicker+1)& (0+255),b
  6109  0021FE  0E00               	movlw	0
  6110  002200  6F56               	movwf	_m10SecTicker& (0+255),b
  6111  002202                     l373:
  6112                           
  6113                           ;MOTEapp.c: 247: }
  6114                           ;MOTEapp.c: 248: }
  6115                           ;MOTEapp.c: 250: if(secTicker)
  6116                           
  6117                           ; BSR set to: 1
  6118                           
  6119                           ; BSR set to: 1
  6120  002202  0100               	movlb	0	; () banked
  6121  002204  51F0               	movf	_secTicker& (0+255),w,b
  6122  002206  B4D8               	btfsc	status,2,c
  6123  002208  D071               	goto	l376
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;MOTEapp.c: 251: {
  6127                           ;MOTEapp.c: 252: if ((secTicker >= 10) && (menuTimeout))
  6128  00220A  0E09               	movlw	9
  6129  00220C  65F0               	cpfsgt	_secTicker& (0+255),b
  6130  00220E  D06E               	goto	l376
  6131                           
  6132                           ; BSR set to: 0
  6133  002210  51FB               	movf	_menuTimeout& (0+255),w,b
  6134  002212  B4D8               	btfsc	status,2,c
  6135  002214  D06B               	goto	l376
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;MOTEapp.c: 253: {
  6139                           ;MOTEapp.c: 254: gotoSleep = 1;
  6140  002216  0E01               	movlw	1
  6141  002218  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6142                           
  6143                           ;MOTEapp.c: 255: secTicker = 0;
  6144  00221A  0E00               	movlw	0
  6145  00221C  6FF0               	movwf	_secTicker& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;MOTEapp.c: 256: }
  6149                           ;MOTEapp.c: 257: }
  6150                           ;MOTEapp.c: 259: switch(moteState)
  6151                           
  6152                           ; BSR set to: 0
  6153  00221E  D066               	goto	l376
  6154  002220                     
  6155                           ; BSR set to: 0
  6156                           ;MOTEapp.c: 262: while(1);
  6157  002220  D7FF               	goto	l377
  6158  002222                     
  6159                           ;MOTEapp.c: 265: oled_clear();
  6160  002222  ECAD  F02B         	call	_oled_clear	;wreg free
  6161                           
  6162                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6163  002226  0EDE               	movlw	low STR_24
  6164  002228  0100               	movlb	0	; () banked
  6165  00222A  6F72               	movwf	oled_putString@string& (0+255),b
  6166  00222C  0E7E               	movlw	high STR_24
  6167  00222E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6168  002230  0E01               	movlw	1
  6169  002232  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6170  002234  0E00               	movlw	0
  6171  002236  6F75               	movwf	oled_putString@start_page& (0+255),b
  6172  002238  EC73  F025         	call	_oled_putString	;wreg free
  6173                           
  6174                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6175  00223C  0E34               	movlw	low STR_25
  6176  00223E  0100               	movlb	0	; () banked
  6177  002240  6F72               	movwf	oled_putString@string& (0+255),b
  6178  002242  0E7F               	movlw	high STR_25
  6179  002244  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6180  002246  0E02               	movlw	2
  6181  002248  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6182  00224A  0E01               	movlw	1
  6183  00224C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6184  00224E  EC73  F025         	call	_oled_putString	;wreg free
  6185                           
  6186                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6187  002252  0EA9               	movlw	low STR_26
  6188  002254  0100               	movlb	0	; () banked
  6189  002256  6F72               	movwf	oled_putString@string& (0+255),b
  6190  002258  0E7B               	movlw	high STR_26
  6191  00225A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6192  00225C  0E00               	movlw	0
  6193  00225E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6194  002260  0E03               	movlw	3
  6195  002262  6F75               	movwf	oled_putString@start_page& (0+255),b
  6196  002264  EC73  F025         	call	_oled_putString	;wreg free
  6197                           
  6198                           ;MOTEapp.c: 269: activeState = moteStartup;
  6199  002268  0E00               	movlw	0
  6200  00226A  0100               	movlb	0	; () banked
  6201  00226C  6FF4               	movwf	_activeState& (0+255),b
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6205  00226E  0E02               	movlw	2
  6206  002270  D031               	goto	L2
  6207  002272                     
  6208                           ; BSR set to: 0
  6209                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6210                           
  6211                           ; BSR set to: 0
  6212  002272  C0B8  F077         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6213  002276  C0B9  F078         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6214  00227A  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6215  00227C  EC12  F008         	call	_moteJoiningProcess
  6216  002280  0900               	iorlw	0
  6217  002282  B4D8               	btfsc	status,2,c
  6218  002284  D041               	goto	l381
  6219                           
  6220                           ;MOTEapp.c: 274: {
  6221                           ;MOTEapp.c: 275: oled_clear();
  6222  002286  ECAD  F02B         	call	_oled_clear	;wreg free
  6223                           
  6224                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6225  00228A  0EFE               	movlw	low STR_27
  6226  00228C  0100               	movlb	0	; () banked
  6227  00228E  6F72               	movwf	oled_putString@string& (0+255),b
  6228  002290  0E7B               	movlw	high STR_27
  6229  002292  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6230  002294  0E00               	movlw	0
  6231  002296  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6232  002298  0E00               	movlw	0
  6233  00229A  6F75               	movwf	oled_putString@start_page& (0+255),b
  6234  00229C  EC73  F025         	call	_oled_putString	;wreg free
  6235                           
  6236                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6237  0022A0  0E0F               	movlw	low STR_28
  6238  0022A2  0100               	movlb	0	; () banked
  6239  0022A4  6F72               	movwf	oled_putString@string& (0+255),b
  6240  0022A6  0E7C               	movlw	high STR_28
  6241  0022A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6242  0022AA  0E00               	movlw	0
  6243  0022AC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6244  0022AE  0E02               	movlw	2
  6245  0022B0  6F75               	movwf	oled_putString@start_page& (0+255),b
  6246  0022B2  EC73  F025         	call	_oled_putString	;wreg free
  6247                           
  6248                           ;MOTEapp.c: 278: oled_putString(" (S2)      (S3) ", 0,3);
  6249  0022B6  0E32               	movlw	low STR_29
  6250  0022B8  0100               	movlb	0	; () banked
  6251  0022BA  6F72               	movwf	oled_putString@string& (0+255),b
  6252  0022BC  0E7B               	movlw	high STR_29
  6253  0022BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6254  0022C0  0E00               	movlw	0
  6255  0022C2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6256  0022C4  0E03               	movlw	3
  6257  0022C6  6F75               	movwf	oled_putString@start_page& (0+255),b
  6258  0022C8  EC73  F025         	call	_oled_putString	;wreg free
  6259                           
  6260                           ;MOTEapp.c: 279: runningState = runningEnter;
  6261  0022CC  0E00               	movlw	0
  6262  0022CE  0100               	movlb	0	; () banked
  6263  0022D0  6FF3               	movwf	_runningState& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6267  0022D2  0E03               	movlw	3
  6268  0022D4                     L2:
  6269  0022D4  6FFF               	movwf	_moteState& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;MOTEapp.c: 281: }
  6273                           ;MOTEapp.c: 282: break;
  6274  0022D6  D018               	goto	l381
  6275  0022D8                     
  6276                           ; BSR set to: 0
  6277                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6278                           
  6279                           ; BSR set to: 0
  6280  0022D8  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6281  0022DC  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6282  0022E0  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6283  0022E4  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6284  0022E6  EC91  F000         	call	_moteRunningProcess
  6285                           
  6286                           ;MOTEapp.c: 289: }
  6287                           
  6288                           ;MOTEapp.c: 288: break;
  6289                           
  6290                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6291                           
  6292                           ;MOTEapp.c: 285: break;
  6293  0022EA  D00E               	goto	l381
  6294  0022EC                     l376:
  6295  0022EC  0100               	movlb	0	; () banked
  6296  0022EE  51FF               	movf	_moteState& (0+255),w,b
  6297                           
  6298                           ; Switch size 1, requested type "space"
  6299                           ; Number of cases is 4, Range of values is 1 to 4
  6300                           ; switch strategies available:
  6301                           ; Name         Instructions Cycles
  6302                           ; simple_byte           13     7 (average)
  6303                           ;	Chosen strategy is simple_byte
  6304  0022F0  0A01               	xorlw	1	; case 1
  6305  0022F2  B4D8               	btfsc	status,2,c
  6306  0022F4  D796               	goto	l382
  6307  0022F6  0A03               	xorlw	3	; case 2
  6308  0022F8  B4D8               	btfsc	status,2,c
  6309  0022FA  D7BB               	goto	l383
  6310  0022FC  0A01               	xorlw	1	; case 3
  6311  0022FE  B4D8               	btfsc	status,2,c
  6312  002300  D7EB               	goto	l385
  6313  002302  0A07               	xorlw	7	; case 4
  6314  002304  A4D8               	btfss	status,2,c
  6315  002306  D78C               	goto	l377
  6316  002308                     l381:
  6317                           
  6318                           ;MOTEapp.c: 290: return moteState;
  6319                           
  6320                           ; BSR set to: 0
  6321  002308  0100               	movlb	0	; () banked
  6322  00230A  51FF               	movf	_moteState& (0+255),w,b
  6323  00230C  0012               	return	
  6324  00230E                     __end_of_moteHandler:
  6325                           	opt stack 0
  6326                           tblptru	equ	0xFF8
  6327                           tblptrh	equ	0xFF7
  6328                           tblptrl	equ	0xFF6
  6329                           tablat	equ	0xFF5
  6330                           intcon	equ	0xFF2
  6331                           postinc0	equ	0xFEE
  6332                           wreg	equ	0xFE8
  6333                           postdec1	equ	0xFE5
  6334                           fsr1l	equ	0xFE1
  6335                           status	equ	0xFD8
  6336                           
  6337 ;; *************** function _moteRunningProcess *****************
  6338 ;; Defined at:
  6339 ;;		line 489 in file "../Includes/Board/MOTEapp.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  changeStates    1    wreg     unsigned char 
  6342 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6343 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6344 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6347 ;;  counter         1   83[BANK0 ] unsigned char 
  6348 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6349 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6350 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6351 ;;  readByte        1   80[BANK0 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      enum E6172
  6354 ;; Registers used:
  6355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6361 ;;      Params:         0       3       0       0       0       0       0       0       0
  6362 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6363 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6364 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6365 ;;Total ram usage:       10 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:   18
  6368 ;; This function calls:
  6369 ;;		_ADC_TempConversion
  6370 ;;		_MOTEapp_SetDataRateSetting
  6371 ;;		_TMR2_ReadTimer
  6372 ;;		_moteApp_GoToSleep
  6373 ;;		_moteApp_add8bToDataBuffer
  6374 ;;		_moteApp_addToDataBuffer
  6375 ;;		_moteApp_clearBuffers
  6376 ;;		_moteApp_convertSensorValue
  6377 ;;		_moteApp_delayms
  6378 ;;		_moteApp_getLightString
  6379 ;;		_moteApp_getLightValue
  6380 ;;		_moteApp_getTempValue
  6381 ;;		_moteApp_lightStringSize
  6382 ;;		_moteApp_setSensorsInput
  6383 ;;		_oled_clear
  6384 ;;		_oled_putString
  6385 ;;		_oled_putUint8
  6386 ;;		_oled_putint8
  6387 ;;		_sendDataCommand
  6388 ;;		_strcmp
  6389 ;;		_strncmp
  6390 ;; This function is called by:
  6391 ;;		_moteHandler
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text10
  6396  000122                     __ptext10:
  6397                           	opt stack 0
  6398  000122                     _moteRunningProcess:
  6399                           	opt stack 11
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;incstack = 0
  6403                           ;moteRunningProcess@changeStates stored from wreg
  6404  000122  0100               	movlb	0	; () banked
  6405  000124  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6406                           
  6407                           ;MOTEapp.c: 491: uint8_t readByte = 0;
  6408  000126  0E00               	movlw	0
  6409  000128  0100               	movlb	0	; () banked
  6410  00012A  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;MOTEapp.c: 493: if ((sleepEvent) && (periodicState))
  6414  00012C  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6415  00012E  B4D8               	btfsc	status,2,c
  6416  000130  EFE7  F007         	goto	l466
  6417                           
  6418                           ; BSR set to: 0
  6419  000134  51FA               	movf	_periodicState& (0+255),w,b
  6420  000136  B4D8               	btfsc	status,2,c
  6421  000138  EFE7  F007         	goto	l466
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;MOTEapp.c: 494: {
  6425                           ;MOTEapp.c: 495: if (sleepTicker >= periodicTimerValue)
  6426  00013C  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6427  00013E  5DEF               	subwf	_sleepTicker& (0+255),w,b
  6428  000140  A0D8               	btfss	status,0,c
  6429  000142  D0C4               	goto	l459
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;MOTEapp.c: 496: {
  6433                           ;MOTEapp.c: 498: moteApp_clearBuffers();
  6434  000144  ECF2  F021         	call	_moteApp_clearBuffers	;wreg free
  6435                           
  6436                           ;MOTEapp.c: 501: light = 0;
  6437  000148  0E00               	movlw	0
  6438  00014A  0101               	movlb	1	; () banked
  6439  00014C  6F59               	movwf	(_light+1)& (0+255),b
  6440  00014E  0E00               	movlw	0
  6441  000150  6F58               	movwf	_light& (0+255),b
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;MOTEapp.c: 502: temperature = 0;
  6445  000152  0E00               	movlw	0
  6446  000154  0100               	movlb	0	; () banked
  6447  000156  6FDB               	movwf	(_temperature+1)& (0+255),b
  6448  000158  0E00               	movlw	0
  6449  00015A  6FDA               	movwf	_temperature& (0+255),b
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;MOTEapp.c: 503: __nop();
  6453  00015C  F000               	nop	
  6454                           
  6455                           ;MOTEapp.c: 505: moteApp_setSensorsInput();
  6456  00015E  EC8E  F024         	call	_moteApp_setSensorsInput	;wreg free
  6457                           
  6458                           ;MOTEapp.c: 506: uint8_t sizeOfUpdate = 0;
  6459  000162  0E00               	movlw	0
  6460  000164  0100               	movlb	0	; () banked
  6461  000166  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;MOTEapp.c: 507: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6465  000168  ECB5  F027         	call	_moteApp_getLightValue	;wreg free
  6466  00016C  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6467  000170  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6468  000174  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  6469  000178  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  6470  00017C  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  6471                           
  6472                           ;MOTEapp.c: 508: oled_putString(moteApp_getLightString(), 6, 1);
  6473  000180  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6474  000184  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6475  000188  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6476  00018C  0E06               	movlw	6
  6477  00018E  0100               	movlb	0	; () banked
  6478  000190  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6479  000192  0E01               	movlw	1
  6480  000194  6F75               	movwf	oled_putString@start_page& (0+255),b
  6481  000196  EC73  F025         	call	_oled_putString	;wreg free
  6482                           
  6483                           ;MOTEapp.c: 509: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6484  00019A  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6485  00019E  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6486  0001A2  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6487  0001A6  0E04               	movlw	4
  6488  0001A8  0100               	movlb	0	; () banked
  6489  0001AA  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6490  0001AC  ECA8  F026         	call	_moteApp_addToDataBuffer	;wreg free
  6491  0001B0  0100               	movlb	0	; () banked
  6492  0001B2  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;MOTEapp.c: 511: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6496  0001B4  EC8A  F028         	call	_moteApp_getTempValue	;wreg free
  6497  0001B8  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6498  0001BC  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6499  0001C0  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  6500  0001C4  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6501  0001C8  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6502                           
  6503                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(temperature);
  6504  0001CC  0100               	movlb	0	; () banked
  6505  0001CE  51DA               	movf	_temperature& (0+255),w,b
  6506  0001D0  EC08  F018         	call	_ADC_TempConversion
  6507  0001D4  0100               	movlb	0	; () banked
  6508  0001D6  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6509  0001D8  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6510  0001DA  6FDA               	movwf	_temperature& (0+255),b
  6511  0001DC  6BDB               	clrf	(_temperature+1)& (0+255),b
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;MOTEapp.c: 513: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6515  0001DE  EC85  F02C         	call	_moteApp_lightStringSize	;wreg free
  6516  0001E2  0F05               	addlw	5
  6517  0001E4  0100               	movlb	0	; () banked
  6518  0001E6  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6519  0001E8  51DA               	movf	_temperature& (0+255),w,b
  6520  0001EA  EC00  F01F         	call	_moteApp_add8bToDataBuffer
  6521                           
  6522                           ;MOTEapp.c: 516: sleepTicker = 0;
  6523  0001EE  0E00               	movlw	0
  6524  0001F0  0100               	movlb	0	; () banked
  6525  0001F2  6FEF               	movwf	_sleepTicker& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;MOTEapp.c: 517: oled_clear();
  6529  0001F4  ECAD  F02B         	call	_oled_clear	;wreg free
  6530                           
  6531                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6532  0001F8  0E31               	movlw	low STR_71
  6533  0001FA  0100               	movlb	0	; () banked
  6534  0001FC  6F72               	movwf	oled_putString@string& (0+255),b
  6535  0001FE  0E7C               	movlw	high STR_71
  6536  000200  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6537  000202  0E00               	movlw	0
  6538  000204  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6539  000206  0E00               	movlw	0
  6540  000208  6F75               	movwf	oled_putString@start_page& (0+255),b
  6541  00020A  EC73  F025         	call	_oled_putString	;wreg free
  6542                           
  6543                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6544  00020E  0E34               	movlw	low STR_72
  6545  000210  0100               	movlb	0	; () banked
  6546  000212  6F72               	movwf	oled_putString@string& (0+255),b
  6547  000214  0E7E               	movlw	high STR_72
  6548  000216  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6549  000218  0E00               	movlw	0
  6550  00021A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6551  00021C  0E01               	movlw	1
  6552  00021E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6553  000220  EC73  F025         	call	_oled_putString	;wreg free
  6554                           
  6555                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6556  000224  0E72               	movlw	low STR_73
  6557  000226  0100               	movlb	0	; () banked
  6558  000228  6F72               	movwf	oled_putString@string& (0+255),b
  6559  00022A  0E7D               	movlw	high STR_73
  6560  00022C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6561  00022E  0E00               	movlw	0
  6562  000230  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6563  000232  0E02               	movlw	2
  6564  000234  6F75               	movwf	oled_putString@start_page& (0+255),b
  6565  000236  EC73  F025         	call	_oled_putString	;wreg free
  6566                           
  6567                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6568  00023A  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  6569  00023E  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6570  000242  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6571  000246  0E03               	movlw	3
  6572  000248  0100               	movlb	0	; () banked
  6573  00024A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6574  00024C  0E02               	movlw	2
  6575  00024E  6F75               	movwf	oled_putString@start_page& (0+255),b
  6576  000250  EC73  F025         	call	_oled_putString	;wreg free
  6577                           
  6578                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6579  000254  0E0B               	movlw	11
  6580  000256  0100               	movlb	0	; () banked
  6581  000258  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  6582  00025A  0E02               	movlw	2
  6583  00025C  6F78               	movwf	oled_putint8@start_page& (0+255),b
  6584  00025E  51DA               	movf	_temperature& (0+255),w,b
  6585  000260  ECB8  F020         	call	_oled_putint8
  6586                           
  6587                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6588  000264  EC5D  F02C         	call	_TMR2_ReadTimer	;wreg free
  6589  000268  0100               	movlb	0	; () banked
  6590  00026A  6FF1               	movwf	_randomPortNum& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;MOTEapp.c: 526: if (!randomPortNum)
  6594  00026C  51F1               	movf	_randomPortNum& (0+255),w,b
  6595  00026E  A4D8               	btfss	status,2,c
  6596  000270  D002               	goto	l460
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;MOTEapp.c: 527: randomPortNum = 5;
  6600  000272  0E05               	movlw	5
  6601  000274  D005               	goto	L3
  6602  000276                     l460:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6606                           
  6607                           ; BSR set to: 0
  6608  000276  0EDF               	movlw	223
  6609  000278  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6610  00027A  D003               	goto	l462
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6614  00027C  51F1               	movf	_randomPortNum& (0+255),w,b
  6615  00027E  0FCE               	addlw	206
  6616  000280                     L3:
  6617  000280  6FF1               	movwf	_randomPortNum& (0+255),b
  6618  000282                     l462:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6622                           
  6623                           ; BSR set to: 0
  6624                           
  6625                           ; BSR set to: 0
  6626  000282  0E0A               	movlw	10
  6627  000284  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6628  000286  0E01               	movlw	1
  6629  000288  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6630  00028A  51F1               	movf	_randomPortNum& (0+255),w,b
  6631  00028C  EC80  F022         	call	_oled_putUint8
  6632                           
  6633                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6634  000290  0E00               	movlw	0
  6635  000292  0100               	movlb	0	; () banked
  6636  000294  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6637  000296  51F1               	movf	_randomPortNum& (0+255),w,b
  6638  000298  EC00  F01F         	call	_moteApp_add8bToDataBuffer
  6639                           
  6640                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6641  00029C  0E20               	movlw	32
  6642  00029E  0101               	movlb	1	; () banked
  6643  0002A0  6FC8               	movwf	(_dataBuffer+3)& (0+255),b
  6644                           
  6645                           ; BSR set to: 1
  6646                           ;MOTEapp.c: 535: __nop();
  6647  0002A2  F000               	nop	
  6648                           
  6649                           ;MOTEapp.c: 536: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6650  0002A4  0E2D               	movlw	low STR_74
  6651  0002A6  0100               	movlb	0	; () banked
  6652  0002A8  6F61               	movwf	sendDataCommand@string& (0+255),b
  6653  0002AA  0E7D               	movlw	high STR_74
  6654  0002AC  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6655  0002AE  0EC5               	movlw	low _dataBuffer
  6656  0002B0  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6657  0002B2  0E01               	movlw	high _dataBuffer
  6658  0002B4  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6659  0002B6  0E0C               	movlw	12
  6660  0002B8  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6661  0002BA  EC89  F01D         	call	_sendDataCommand	;wreg free
  6662                           
  6663                           ;MOTEapp.c: 537: secTicker = 10 - (10 / 3);
  6664  0002BE  0E07               	movlw	7
  6665  0002C0  0100               	movlb	0	; () banked
  6666  0002C2  6FF0               	movwf	_secTicker& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 538: runningState = runningUplinkTransmit;
  6670  0002C4  0E08               	movlw	8
  6671  0002C6  6FF3               	movwf	_runningState& (0+255),b
  6672                           
  6673                           ;MOTEapp.c: 539: }
  6674  0002C8  EFE7  F007         	goto	l466
  6675  0002CC                     l459:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;MOTEapp.c: 540: else
  6679                           ;MOTEapp.c: 541: {
  6680                           ;MOTEapp.c: 542: if (menuTimeout)
  6681                           
  6682                           ; BSR set to: 0
  6683  0002CC  51FB               	movf	_menuTimeout& (0+255),w,b
  6684  0002CE  B4D8               	btfsc	status,2,c
  6685  0002D0  D007               	goto	l464
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;MOTEapp.c: 543: {
  6689                           ;MOTEapp.c: 544: sleepTicker++;
  6690  0002D2  2BEF               	incf	_sleepTicker& (0+255),f,b
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;MOTEapp.c: 545: runningState = runningSleep;
  6694  0002D4  0E0F               	movlw	15
  6695  0002D6  6FF3               	movwf	_runningState& (0+255),b
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;MOTEapp.c: 546: selectButton = 1;
  6699  0002D8  0E01               	movlw	1
  6700  0002DA  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6701                           
  6702                           ;MOTEapp.c: 547: } else {
  6703  0002DC  EFE7  F007         	goto	l466
  6704  0002E0                     l464:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;MOTEapp.c: 548: sleepTicker = 0;
  6708                           
  6709                           ; BSR set to: 0
  6710  0002E0  0E00               	movlw	0
  6711  0002E2  6FEF               	movwf	_sleepTicker& (0+255),b
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;MOTEapp.c: 549: }
  6715                           ;MOTEapp.c: 550: }
  6716                           ;MOTEapp.c: 551: }
  6717                           ;MOTEapp.c: 554: switch(runningState)
  6718                           
  6719                           ; BSR set to: 0
  6720                           
  6721                           ; BSR set to: 0
  6722  0002E4  EFE7  F007         	goto	l466
  6723  0002E8                     
  6724                           ; BSR set to: 0
  6725                           ;MOTEapp.c: 557: while(1);
  6726  0002E8  D7FF               	goto	l467
  6727  0002EA                     
  6728                           ;MOTEapp.c: 560: if ( (changeStates) || (selectButton) )
  6729  0002EA  0100               	movlb	0	; () banked
  6730  0002EC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6731  0002EE  A4D8               	btfss	status,2,c
  6732  0002F0  D003               	goto	u9080
  6733                           
  6734                           ; BSR set to: 0
  6735  0002F2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6736  0002F4  B4D8               	btfsc	status,2,c
  6737  0002F6  0012               	return	
  6738  0002F8                     u9080:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;MOTEapp.c: 561: {
  6742                           ;MOTEapp.c: 562: oled_clear();
  6743                           
  6744                           ; BSR set to: 0
  6745  0002F8  ECAD  F02B         	call	_oled_clear	;wreg free
  6746                           
  6747                           ;MOTEapp.c: 563: oled_putString("  Issue Uplink  ",0,0);
  6748  0002FC  0E21               	movlw	low STR_75
  6749  0002FE  0100               	movlb	0	; () banked
  6750  000300  6F72               	movwf	oled_putString@string& (0+255),b
  6751  000302  0E7B               	movlw	high STR_75
  6752  000304  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6753  000306  0E00               	movlw	0
  6754  000308  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6755  00030A  0E00               	movlw	0
  6756  00030C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6757  00030E  EC73  F025         	call	_oled_putString	;wreg free
  6758                           
  6759                           ;MOTEapp.c: 564: oled_putString(" LoRaWAN Packet ",0,1);
  6760  000312  0E87               	movlw	low STR_76
  6761  000314  0100               	movlb	0	; () banked
  6762  000316  6F72               	movwf	oled_putString@string& (0+255),b
  6763  000318  0E7B               	movlw	high STR_76
  6764  00031A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6765  00031C  0E00               	movlw	0
  6766  00031E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6767  000320  0E01               	movlw	1
  6768  000322  6F75               	movwf	oled_putString@start_page& (0+255),b
  6769  000324  EC73  F025         	call	_oled_putString	;wreg free
  6770                           
  6771                           ;MOTEapp.c: 565: oled_putString("(NAV)    (SEL) ",0,3);
  6772  000328  0E83               	movlw	low STR_77
  6773  00032A  0100               	movlb	0	; () banked
  6774  00032C  6F72               	movwf	oled_putString@string& (0+255),b
  6775  00032E  0E7C               	movlw	high STR_77
  6776  000330  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6777  000332  0E00               	movlw	0
  6778  000334  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6779  000336  0E03               	movlw	3
  6780  000338  6F75               	movwf	oled_putString@start_page& (0+255),b
  6781  00033A  EC73  F025         	call	_oled_putString	;wreg free
  6782                           
  6783                           ;MOTEapp.c: 566: runningState = runningUplink;
  6784  00033E  0E06               	movlw	6
  6785  000340  0100               	movlb	0	; () banked
  6786  000342  6FF3               	movwf	_runningState& (0+255),b
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;MOTEapp.c: 567: }
  6790                           ;MOTEapp.c: 568: break;
  6791  000344  0012               	return	
  6792  000346                     
  6793                           ; BSR set to: 0
  6794                           ;MOTEapp.c: 570: if (changeStates)
  6795                           
  6796                           ; BSR set to: 0
  6797  000346  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6798  000348  B4D8               	btfsc	status,2,c
  6799  00034A  D027               	goto	l477
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;MOTEapp.c: 571: {
  6803                           ;MOTEapp.c: 572: oled_clear();
  6804  00034C  ECAD  F02B         	call	_oled_clear	;wreg free
  6805                           
  6806                           ;MOTEapp.c: 573: oled_putString(" View Downlink  ",0,0);
  6807  000350  0E10               	movlw	low STR_78
  6808  000352  0100               	movlb	0	; () banked
  6809  000354  6F72               	movwf	oled_putString@string& (0+255),b
  6810  000356  0E7B               	movlw	high STR_78
  6811  000358  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6812  00035A  0E00               	movlw	0
  6813  00035C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6814  00035E  0E00               	movlw	0
  6815  000360  6F75               	movwf	oled_putString@start_page& (0+255),b
  6816  000362  EC73  F025         	call	_oled_putString	;wreg free
  6817                           
  6818                           ;MOTEapp.c: 574: oled_putString("  Last Message  ",0,1);
  6819  000366  0EFF               	movlw	low STR_79
  6820  000368  0100               	movlb	0	; () banked
  6821  00036A  6F72               	movwf	oled_putString@string& (0+255),b
  6822  00036C  0E7A               	movlw	high STR_79
  6823  00036E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6824  000370  0E00               	movlw	0
  6825  000372  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6826  000374  0E01               	movlw	1
  6827  000376  6F75               	movwf	oled_putString@start_page& (0+255),b
  6828  000378  EC73  F025         	call	_oled_putString	;wreg free
  6829                           
  6830                           ;MOTEapp.c: 575: oled_putString("(NAV)    (SEL) ",0,3);
  6831  00037C  0E83               	movlw	low STR_77
  6832  00037E  0100               	movlb	0	; () banked
  6833  000380  6F72               	movwf	oled_putString@string& (0+255),b
  6834  000382  0E7C               	movlw	high STR_77
  6835  000384  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6836  000386  0E00               	movlw	0
  6837  000388  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6838  00038A  0E03               	movlw	3
  6839  00038C  6F75               	movwf	oled_putString@start_page& (0+255),b
  6840  00038E  EC73  F025         	call	_oled_putString	;wreg free
  6841                           
  6842                           ;MOTEapp.c: 576: runningState = runningDownlink;
  6843  000392  0E0A               	movlw	10
  6844  000394  0100               	movlb	0	; () banked
  6845  000396  6FF3               	movwf	_runningState& (0+255),b
  6846                           
  6847                           ;MOTEapp.c: 577: }
  6848  000398  0012               	return	
  6849  00039A                     l477:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;MOTEapp.c: 578: else if (selectButton)
  6853                           
  6854                           ; BSR set to: 0
  6855  00039A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6856  00039C  B4D8               	btfsc	status,2,c
  6857  00039E  0012               	return	
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;MOTEapp.c: 579: {
  6861                           ;MOTEapp.c: 580: sleepTicker = 0;
  6862  0003A0  0E00               	movlw	0
  6863  0003A2  6FEF               	movwf	_sleepTicker& (0+255),b
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;MOTEapp.c: 582: oled_clear();
  6867  0003A4  ECAD  F02B         	call	_oled_clear	;wreg free
  6868                           
  6869                           ;MOTEapp.c: 583: oled_putString("Uplink Pckt Type",0,0);
  6870  0003A8  0EDC               	movlw	low STR_81
  6871  0003AA  0100               	movlb	0	; () banked
  6872  0003AC  6F72               	movwf	oled_putString@string& (0+255),b
  6873  0003AE  0E7B               	movlw	high STR_81
  6874  0003B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6875  0003B2  0E00               	movlw	0
  6876  0003B4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6877  0003B6  0E00               	movlw	0
  6878  0003B8  6F75               	movwf	oled_putString@start_page& (0+255),b
  6879  0003BA  EC73  F025         	call	_oled_putString	;wreg free
  6880                           
  6881                           ;MOTEapp.c: 584: oled_putString("Throu Port# ",0,1);
  6882  0003BE  0E65               	movlw	low STR_82
  6883  0003C0  0100               	movlb	0	; () banked
  6884  0003C2  6F72               	movwf	oled_putString@string& (0+255),b
  6885  0003C4  0E7D               	movlw	high STR_82
  6886  0003C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6887  0003C8  0E00               	movlw	0
  6888  0003CA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6889  0003CC  0E01               	movlw	1
  6890  0003CE  6F75               	movwf	oled_putString@start_page& (0+255),b
  6891  0003D0  EC73  F025         	call	_oled_putString	;wreg free
  6892                           
  6893                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  6894  0003D4  0EA9               	movlw	low STR_83
  6895  0003D6  0100               	movlb	0	; () banked
  6896  0003D8  6F72               	movwf	oled_putString@string& (0+255),b
  6897  0003DA  0E7A               	movlw	high STR_83
  6898  0003DC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6899  0003DE  0E00               	movlw	0
  6900  0003E0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  6901  0003E2  0E03               	movlw	3
  6902  0003E4  6F75               	movwf	oled_putString@start_page& (0+255),b
  6903  0003E6  EC73  F025         	call	_oled_putString	;wreg free
  6904                           
  6905                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  6906  0003EA  ECF2  F021         	call	_moteApp_clearBuffers	;wreg free
  6907                           
  6908                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  6909  0003EE  EC5D  F02C         	call	_TMR2_ReadTimer	;wreg free
  6910  0003F2  0100               	movlb	0	; () banked
  6911  0003F4  6FF1               	movwf	_randomPortNum& (0+255),b
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;MOTEapp.c: 591: if (!randomPortNum)
  6915  0003F6  51F1               	movf	_randomPortNum& (0+255),w,b
  6916  0003F8  A4D8               	btfss	status,2,c
  6917  0003FA  D002               	goto	l480
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;MOTEapp.c: 592: randomPortNum = 5;
  6921  0003FC  0E05               	movlw	5
  6922  0003FE  D005               	goto	L4
  6923  000400                     l480:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  6927                           
  6928                           ; BSR set to: 0
  6929  000400  0EDF               	movlw	223
  6930  000402  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6931  000404  D003               	goto	l482
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  6935  000406  51F1               	movf	_randomPortNum& (0+255),w,b
  6936  000408  0FCE               	addlw	206
  6937  00040A                     L4:
  6938  00040A  6FF1               	movwf	_randomPortNum& (0+255),b
  6939  00040C                     l482:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  6943                           
  6944                           ; BSR set to: 0
  6945                           
  6946                           ; BSR set to: 0
  6947  00040C  0E0C               	movlw	12
  6948  00040E  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  6949  000410  0E01               	movlw	1
  6950  000412  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  6951  000414  51F1               	movf	_randomPortNum& (0+255),w,b
  6952  000416  EC80  F022         	call	_oled_putUint8
  6953                           
  6954                           ;MOTEapp.c: 596: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6955  00041A  0E00               	movlw	0
  6956  00041C  0100               	movlb	0	; () banked
  6957  00041E  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6958  000420  51F1               	movf	_randomPortNum& (0+255),w,b
  6959  000422  EC00  F01F         	call	_moteApp_add8bToDataBuffer
  6960                           
  6961                           ;MOTEapp.c: 597: dataBuffer[3] = 0x20;
  6962  000426  0E20               	movlw	32
  6963  000428  0101               	movlb	1	; () banked
  6964  00042A  6FC8               	movwf	(_dataBuffer+3)& (0+255),b
  6965                           
  6966                           ; BSR set to: 1
  6967                           ;MOTEapp.c: 599: light = 0;
  6968  00042C  0E00               	movlw	0
  6969  00042E  6F59               	movwf	(_light+1)& (0+255),b
  6970  000430  0E00               	movlw	0
  6971  000432  6F58               	movwf	_light& (0+255),b
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;MOTEapp.c: 600: temperature = 0;
  6975  000434  0E00               	movlw	0
  6976  000436  0100               	movlb	0	; () banked
  6977  000438  6FDB               	movwf	(_temperature+1)& (0+255),b
  6978  00043A  0E00               	movlw	0
  6979  00043C  6FDA               	movwf	_temperature& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;MOTEapp.c: 601: __nop();
  6983  00043E  F000               	nop	
  6984                           
  6985                           ;MOTEapp.c: 602: moteApp_setSensorsInput();
  6986  000440  EC8E  F024         	call	_moteApp_setSensorsInput	;wreg free
  6987                           
  6988                           ;MOTEapp.c: 603: moteApp_delayms(500);
  6989  000444  0E01               	movlw	1
  6990  000446  0100               	movlb	0	; () banked
  6991  000448  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6992  00044A  0EF4               	movlw	244
  6993  00044C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6994  00044E  ECAC  F029         	call	_moteApp_delayms	;wreg free
  6995                           
  6996                           ;MOTEapp.c: 604: uint8_t sizeOfUpdate = 0;
  6997  000452  0E00               	movlw	0
  6998  000454  0100               	movlb	0	; () banked
  6999  000456  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;MOTEapp.c: 605: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7003  000458  ECB5  F027         	call	_moteApp_getLightValue	;wreg free
  7004  00045C  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7005  000460  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7006  000464  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  7007  000468  C072  F158         	movff	?_moteApp_convertSensorValue,_light
  7008  00046C  C073  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  7009                           
  7010                           ;MOTEapp.c: 606: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7011  000470  ECB5  F027         	call	_moteApp_getLightValue	;wreg free
  7012  000474  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7013  000478  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7014  00047C  0E04               	movlw	4
  7015  00047E  0100               	movlb	0	; () banked
  7016  000480  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7017  000482  ECA8  F026         	call	_moteApp_addToDataBuffer	;wreg free
  7018  000486  0100               	movlb	0	; () banked
  7019  000488  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;MOTEapp.c: 607: __nop();
  7023  00048A  F000               	nop	
  7024                           
  7025                           ;MOTEapp.c: 608: __nop();
  7026  00048C  F000               	nop	
  7027                           
  7028                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7029  00048E  EC8A  F028         	call	_moteApp_getTempValue	;wreg free
  7030  000492  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7031  000496  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7032  00049A  EC4F  F024         	call	_moteApp_convertSensorValue	;wreg free
  7033  00049E  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7034  0004A2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7035                           
  7036                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7037  0004A6  0100               	movlb	0	; () banked
  7038  0004A8  51DA               	movf	_temperature& (0+255),w,b
  7039  0004AA  EC08  F018         	call	_ADC_TempConversion
  7040  0004AE  0100               	movlb	0	; () banked
  7041  0004B0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7042  0004B2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7043  0004B4  6FDA               	movwf	_temperature& (0+255),b
  7044  0004B6  6BDB               	clrf	(_temperature+1)& (0+255),b
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7048  0004B8  EC85  F02C         	call	_moteApp_lightStringSize	;wreg free
  7049  0004BC  0F05               	addlw	5
  7050  0004BE  0100               	movlb	0	; () banked
  7051  0004C0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7052  0004C2  51DA               	movf	_temperature& (0+255),w,b
  7053  0004C4  EC00  F01F         	call	_moteApp_add8bToDataBuffer
  7054                           
  7055                           ;MOTEapp.c: 612: __nop();
  7056  0004C8  F000               	nop	
  7057                           
  7058                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7059  0004CA  0E07               	movlw	7
  7060  0004CC  0100               	movlb	0	; () banked
  7061  0004CE  6FF3               	movwf	_runningState& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;MOTEapp.c: 615: }
  7065                           ;MOTEapp.c: 616: break;
  7066                           
  7067                           ; BSR set to: 0
  7068  0004D0  0012               	return	
  7069  0004D2                     
  7070                           ; BSR set to: 0
  7071                           ;MOTEapp.c: 618: if (changeStates)
  7072                           
  7073                           ; BSR set to: 0
  7074  0004D2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7075  0004D4  B4D8               	btfsc	status,2,c
  7076  0004D6  D00C               	goto	l484
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;MOTEapp.c: 619: {
  7080                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7081  0004D8  0E2D               	movlw	low STR_74
  7082  0004DA  6F61               	movwf	sendDataCommand@string& (0+255),b
  7083  0004DC  0E7D               	movlw	high STR_74
  7084  0004DE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7085  0004E0  0EC5               	movlw	low _dataBuffer
  7086  0004E2  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7087  0004E4  0E01               	movlw	high _dataBuffer
  7088  0004E6  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7089  0004E8  0E0C               	movlw	12
  7090  0004EA  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7091  0004EC  EC89  F01D         	call	_sendDataCommand	;wreg free
  7092  0004F0                     l484:
  7093                           
  7094                           ;MOTEapp.c: 622: }
  7095                           ;MOTEapp.c: 623: if (selectButton)
  7096  0004F0  0100               	movlb	0	; () banked
  7097  0004F2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7098  0004F4  B4D8               	btfsc	status,2,c
  7099  0004F6  D00C               	goto	l485
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;MOTEapp.c: 624: {
  7103                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7104  0004F8  0E64               	movlw	low STR_85
  7105  0004FA  6F61               	movwf	sendDataCommand@string& (0+255),b
  7106  0004FC  0E7E               	movlw	high STR_85
  7107  0004FE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7108  000500  0EC5               	movlw	low _dataBuffer
  7109  000502  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7110  000504  0E01               	movlw	high _dataBuffer
  7111  000506  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7112  000508  0E0C               	movlw	12
  7113  00050A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7114  00050C  EC89  F01D         	call	_sendDataCommand	;wreg free
  7115  000510                     l485:
  7116                           
  7117                           ;MOTEapp.c: 626: }
  7118                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7119  000510  0100               	movlb	0	; () banked
  7120  000512  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7121  000514  A4D8               	btfss	status,2,c
  7122  000516  D003               	goto	u9160
  7123                           
  7124                           ; BSR set to: 0
  7125  000518  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7126  00051A  B4D8               	btfsc	status,2,c
  7127  00051C  0012               	return	
  7128  00051E                     u9160:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;MOTEapp.c: 629: {
  7132                           ;MOTEapp.c: 630: oled_clear();
  7133                           
  7134                           ; BSR set to: 0
  7135  00051E  ECAD  F02B         	call	_oled_clear	;wreg free
  7136                           
  7137                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7138  000522  0E4C               	movlw	low STR_86
  7139  000524  0100               	movlb	0	; () banked
  7140  000526  6F72               	movwf	oled_putString@string& (0+255),b
  7141  000528  0E7E               	movlw	high STR_86
  7142  00052A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7143  00052C  0E00               	movlw	0
  7144  00052E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7145  000530  0E00               	movlw	0
  7146  000532  6F75               	movwf	oled_putString@start_page& (0+255),b
  7147  000534  EC73  F025         	call	_oled_putString	;wreg free
  7148                           
  7149                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7150  000538  0E40               	movlw	low STR_87
  7151  00053A  0100               	movlb	0	; () banked
  7152  00053C  6F72               	movwf	oled_putString@string& (0+255),b
  7153  00053E  0E7E               	movlw	high STR_87
  7154  000540  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7155  000542  0E00               	movlw	0
  7156  000544  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7157  000546  0E01               	movlw	1
  7158  000548  6F75               	movwf	oled_putString@start_page& (0+255),b
  7159  00054A  EC73  F025         	call	_oled_putString	;wreg free
  7160                           
  7161                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7162  00054E  0E0C               	movlw	12
  7163  000550  0100               	movlb	0	; () banked
  7164  000552  6F77               	movwf	oled_putUint8@station_dot& (0+255),b
  7165  000554  0E01               	movlw	1
  7166  000556  6F78               	movwf	oled_putUint8@start_page& (0+255),b
  7167  000558  51F1               	movf	_randomPortNum& (0+255),w,b
  7168  00055A  EC80  F022         	call	_oled_putUint8
  7169                           
  7170                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7171  00055E  0E72               	movlw	low STR_73
  7172  000560  0100               	movlb	0	; () banked
  7173  000562  6F72               	movwf	oled_putString@string& (0+255),b
  7174  000564  0E7D               	movlw	high STR_73
  7175  000566  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7176  000568  0E00               	movlw	0
  7177  00056A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7178  00056C  0E02               	movlw	2
  7179  00056E  6F75               	movwf	oled_putString@start_page& (0+255),b
  7180  000570  EC73  F025         	call	_oled_putString	;wreg free
  7181                           
  7182                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7183  000574  EC4B  F02C         	call	_moteApp_getLightString	;wreg free
  7184  000578  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7185  00057C  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7186  000580  0E03               	movlw	3
  7187  000582  0100               	movlb	0	; () banked
  7188  000584  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7189  000586  0E02               	movlw	2
  7190  000588  6F75               	movwf	oled_putString@start_page& (0+255),b
  7191  00058A  EC73  F025         	call	_oled_putString	;wreg free
  7192                           
  7193                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7194  00058E  0E0B               	movlw	11
  7195  000590  0100               	movlb	0	; () banked
  7196  000592  6F77               	movwf	oled_putint8@station_dot& (0+255),b
  7197  000594  0E02               	movlw	2
  7198  000596  6F78               	movwf	oled_putint8@start_page& (0+255),b
  7199  000598  51DA               	movf	_temperature& (0+255),w,b
  7200  00059A  ECB8  F020         	call	_oled_putint8
  7201                           
  7202                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7203  00059E  9C89               	bcf	3977,6,c	;volatile
  7204                           
  7205                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7206  0005A0  0E08               	movlw	8
  7207  0005A2  0100               	movlb	0	; () banked
  7208  0005A4  6FF3               	movwf	_runningState& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;MOTEapp.c: 639: }
  7212                           ;MOTEapp.c: 640: break;
  7213  0005A6  0012               	return	
  7214  0005A8                     
  7215                           ; BSR set to: 0
  7216                           ;MOTEapp.c: 642: if ( messageReady )
  7217                           
  7218                           ; BSR set to: 0
  7219  0005A8  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7220  0005AA  B4D8               	btfsc	status,2,c
  7221  0005AC  D103               	goto	l490
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;MOTEapp.c: 643: {
  7225                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7226  0005AE  0E65               	movlw	low _moduleResonseBuffer
  7227  0005B0  6F60               	movwf	strcmp@s1& (0+255),b
  7228  0005B2  0E01               	movlw	high _moduleResonseBuffer
  7229  0005B4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7230  0005B6  0EF7               	movlw	low STR_44
  7231  0005B8  6F62               	movwf	strcmp@s2& (0+255),b
  7232  0005BA  0E7F               	movlw	high STR_44
  7233  0005BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7234  0005BE  ECDC  F027         	call	_strcmp	;wreg free
  7235  0005C2  0100               	movlb	0	; () banked
  7236  0005C4  5160               	movf	?_strcmp& (0+255),w,b
  7237  0005C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7238  0005C8  A4D8               	btfss	status,2,c
  7239  0005CA  D003               	goto	l491
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;MOTEapp.c: 645: {
  7243                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7244  0005CC  8C89               	bsf	3977,6,c	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7248  0005CE  0E08               	movlw	8
  7249  0005D0  6FF3               	movwf	_runningState& (0+255),b
  7250  0005D2                     l491:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;MOTEapp.c: 648: }
  7254                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7255                           
  7256                           ; BSR set to: 0
  7257  0005D2  0E65               	movlw	low _moduleResonseBuffer
  7258  0005D4  6F60               	movwf	strncmp@s1& (0+255),b
  7259  0005D6  0E01               	movlw	high _moduleResonseBuffer
  7260  0005D8  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7261  0005DA  0EAA               	movlw	low STR_90
  7262  0005DC  6F62               	movwf	strncmp@s2& (0+255),b
  7263  0005DE  0E7F               	movlw	high STR_90
  7264  0005E0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7265  0005E2  0E00               	movlw	0
  7266  0005E4  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7267  0005E6  0E06               	movlw	6
  7268  0005E8  6F64               	movwf	strncmp@len& (0+255),b
  7269  0005EA  ECC5  F022         	call	_strncmp	;wreg free
  7270  0005EE  0100               	movlb	0	; () banked
  7271  0005F0  5160               	movf	?_strncmp& (0+255),w,b
  7272  0005F2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7273  0005F4  A4D8               	btfss	status,2,c
  7274  0005F6  D078               	goto	l492
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;MOTEapp.c: 650: {
  7278                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7279  0005F8  0E07               	movlw	7
  7280  0005FA  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7284  0005FC  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7285  0005FE  0D01               	mullw	1
  7286  000600  0E65               	movlw	low _moduleResonseBuffer
  7287  000602  24F3               	addwf	prodl,w,c
  7288  000604  6ED9               	movwf	fsr2l,c
  7289  000606  0E01               	movlw	high _moduleResonseBuffer
  7290  000608  20F4               	addwfc	prodh,w,c
  7291  00060A  6EDA               	movwf	fsr2h,c
  7292  00060C  50DF               	movf	indf2,w,c
  7293  00060E  0101               	movlb	1	; () banked
  7294  000610  6FF8               	movwf	_responsePortNum& (0+255),b
  7295                           
  7296                           ; BSR set to: 1
  7297  000612  0100               	movlb	0	; () banked
  7298  000614  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7302  000616  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7303  000618  0D01               	mullw	1
  7304  00061A  0E65               	movlw	low _moduleResonseBuffer
  7305  00061C  24F3               	addwf	prodl,w,c
  7306  00061E  6ED9               	movwf	fsr2l,c
  7307  000620  0E01               	movlw	high _moduleResonseBuffer
  7308  000622  20F4               	addwfc	prodh,w,c
  7309  000624  6EDA               	movwf	fsr2h,c
  7310  000626  50DF               	movf	indf2,w,c
  7311  000628  0101               	movlb	1	; () banked
  7312  00062A  6FF9               	movwf	(_responsePortNum+1)& (0+255),b
  7313                           
  7314                           ; BSR set to: 1
  7315  00062C  0100               	movlb	0	; () banked
  7316  00062E  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7320  000630  0E20               	movlw	32
  7321  000632  0101               	movlb	1	; () banked
  7322  000634  19F9               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7323  000636  B4D8               	btfsc	status,2,c
  7324  000638  D015               	goto	l494
  7325                           
  7326                           ; BSR set to: 1
  7327                           ;MOTEapp.c: 658: {
  7328                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7329  00063A  0100               	movlb	0	; () banked
  7330  00063C  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7331  00063E  0D01               	mullw	1
  7332  000640  0E65               	movlw	low _moduleResonseBuffer
  7333  000642  24F3               	addwf	prodl,w,c
  7334  000644  6ED9               	movwf	fsr2l,c
  7335  000646  0E01               	movlw	high _moduleResonseBuffer
  7336  000648  20F4               	addwfc	prodh,w,c
  7337  00064A  6EDA               	movwf	fsr2h,c
  7338  00064C  50DF               	movf	indf2,w,c
  7339  00064E  0101               	movlb	1	; () banked
  7340  000650  6FFA               	movwf	(_responsePortNum+2)& (0+255),b
  7341                           
  7342                           ; BSR set to: 1
  7343  000652  0100               	movlb	0	; () banked
  7344  000654  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7348  000656  0E20               	movlw	32
  7349  000658  0101               	movlb	1	; () banked
  7350  00065A  19FA               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7351  00065C  B4D8               	btfsc	status,2,c
  7352  00065E  D002               	goto	l494
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;MOTEapp.c: 661: {
  7356                           ;MOTEapp.c: 662: bufferReadPos++;
  7357  000660  0100               	movlb	0	; () banked
  7358  000662  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7359  000664                     l494:
  7360                           
  7361                           ;MOTEapp.c: 663: }
  7362                           ;MOTEapp.c: 664: }
  7363                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7364                           
  7365                           ; BSR set to: 0
  7366                           
  7367                           ; BSR set to: 0
  7368  000664  0E00               	movlw	0
  7369  000666  0100               	movlb	0	; () banked
  7370  000668  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7371  00066A                     l10606:
  7372                           
  7373                           ; BSR set to: 0
  7374  00066A  0E3F               	movlw	63
  7375  00066C  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7376  00066E  D001               	goto	l495
  7377  000670  D023               	goto	u9240
  7378  000672                     l495:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;MOTEapp.c: 667: {
  7382                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7383                           
  7384                           ; BSR set to: 0
  7385  000672  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7386  000674  0D01               	mullw	1
  7387  000676  0E65               	movlw	low _moduleResonseBuffer
  7388  000678  24F3               	addwf	prodl,w,c
  7389  00067A  6ED9               	movwf	fsr2l,c
  7390  00067C  0E01               	movlw	high _moduleResonseBuffer
  7391  00067E  20F4               	addwfc	prodh,w,c
  7392  000680  6EDA               	movwf	fsr2h,c
  7393  000682  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7394  000684  0D01               	mullw	1
  7395  000686  0EA5               	movlw	low _responseData
  7396  000688  24F3               	addwf	prodl,w,c
  7397  00068A  6EE1               	movwf	fsr1l,c
  7398  00068C  0E01               	movlw	high _responseData
  7399  00068E  20F4               	addwfc	prodh,w,c
  7400  000690  6EE2               	movwf	fsr1h,c
  7401  000692  CFDF FFE7          	movff	indf2,indf1
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7405  000696  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7406  000698  0D01               	mullw	1
  7407  00069A  0EA5               	movlw	low _responseData
  7408  00069C  24F3               	addwf	prodl,w,c
  7409  00069E  6ED9               	movwf	fsr2l,c
  7410  0006A0  0E01               	movlw	high _responseData
  7411  0006A2  20F4               	addwfc	prodh,w,c
  7412  0006A4  6EDA               	movwf	fsr2h,c
  7413  0006A6  50DF               	movf	indf2,w,c
  7414  0006A8  B4D8               	btfsc	status,2,c
  7415  0006AA  D002               	goto	l497
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;MOTEapp.c: 671: {
  7419                           ;MOTEapp.c: 672: bufferReadPos++;
  7420  0006AC  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7421                           
  7422                           ;MOTEapp.c: 673: } else {
  7423  0006AE  D002               	goto	l498
  7424  0006B0                     l497:
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7428                           
  7429                           ; BSR set to: 0
  7430  0006B0  0E40               	movlw	64
  7431  0006B2  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7432  0006B4                     l498:
  7433                           
  7434                           ; BSR set to: 0
  7435                           
  7436                           ; BSR set to: 0
  7437  0006B4  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7438  0006B6  D7D9               	goto	l10606
  7439  0006B8                     u9240:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;MOTEapp.c: 675: }
  7443                           ;MOTEapp.c: 676: }
  7444                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7445  0006B8  8E89               	bsf	3977,7,c	;volatile
  7446                           
  7447                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7448  0006BA  9C89               	bcf	3977,6,c	;volatile
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7452  0006BC  0E54               	movlw	low STR_91
  7453  0006BE  6F72               	movwf	oled_putString@string& (0+255),b
  7454  0006C0  0E7B               	movlw	high STR_91
  7455  0006C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7456  0006C4  0E00               	movlw	0
  7457  0006C6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7458  0006C8  0E02               	movlw	2
  7459  0006CA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7460  0006CC  EC73  F025         	call	_oled_putString	;wreg free
  7461                           
  7462                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7463  0006D0  0ECC               	movlw	low STR_92
  7464  0006D2  0100               	movlb	0	; () banked
  7465  0006D4  6F72               	movwf	oled_putString@string& (0+255),b
  7466  0006D6  0E7A               	movlw	high STR_92
  7467  0006D8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7468  0006DA  0E00               	movlw	0
  7469  0006DC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7470  0006DE  0E03               	movlw	3
  7471  0006E0  6F75               	movwf	oled_putString@start_page& (0+255),b
  7472  0006E2  EC73  F025         	call	_oled_putString	;wreg free
  7473                           
  7474                           ;MOTEapp.c: 683: }
  7475  0006E6  D05D               	goto	l504
  7476  0006E8                     l492:
  7477                           
  7478                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7479  0006E8  0E65               	movlw	low _moduleResonseBuffer
  7480  0006EA  0100               	movlb	0	; () banked
  7481  0006EC  6F60               	movwf	strncmp@s1& (0+255),b
  7482  0006EE  0E01               	movlw	high _moduleResonseBuffer
  7483  0006F0  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7484  0006F2  0EB1               	movlw	low STR_93
  7485  0006F4  6F62               	movwf	strncmp@s2& (0+255),b
  7486  0006F6  0E7F               	movlw	high STR_93
  7487  0006F8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7488  0006FA  0E00               	movlw	0
  7489  0006FC  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7490  0006FE  0E06               	movlw	6
  7491  000700  6F64               	movwf	strncmp@len& (0+255),b
  7492  000702  ECC5  F022         	call	_strncmp	;wreg free
  7493  000706  0100               	movlb	0	; () banked
  7494  000708  5160               	movf	?_strncmp& (0+255),w,b
  7495  00070A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7496  00070C  A4D8               	btfss	status,2,c
  7497  00070E  D00C               	goto	l500
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;MOTEapp.c: 685: {
  7501                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7502  000710  9C89               	bcf	3977,6,c	;volatile
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7506  000712  0EBA               	movlw	low STR_94
  7507  000714  6F72               	movwf	oled_putString@string& (0+255),b
  7508  000716  0E7B               	movlw	high STR_94
  7509  000718  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7510  00071A  0E00               	movlw	0
  7511  00071C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7512  00071E  0E03               	movlw	3
  7513  000720  6F75               	movwf	oled_putString@start_page& (0+255),b
  7514  000722  EC73  F025         	call	_oled_putString	;wreg free
  7515                           
  7516                           ;MOTEapp.c: 688: }
  7517  000726  D03D               	goto	l504
  7518  000728                     l500:
  7519                           
  7520                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7521  000728  0E65               	movlw	low _moduleResonseBuffer
  7522  00072A  0100               	movlb	0	; () banked
  7523  00072C  6F60               	movwf	strncmp@s1& (0+255),b
  7524  00072E  0E01               	movlw	high _moduleResonseBuffer
  7525  000730  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7526  000732  0EA3               	movlw	low STR_95
  7527  000734  6F62               	movwf	strncmp@s2& (0+255),b
  7528  000736  0E7F               	movlw	high STR_95
  7529  000738  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7530  00073A  0E00               	movlw	0
  7531  00073C  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7532  00073E  0E06               	movlw	6
  7533  000740  6F64               	movwf	strncmp@len& (0+255),b
  7534  000742  ECC5  F022         	call	_strncmp	;wreg free
  7535  000746  0100               	movlb	0	; () banked
  7536  000748  5160               	movf	?_strncmp& (0+255),w,b
  7537  00074A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7538  00074C  A4D8               	btfss	status,2,c
  7539  00074E  D00B               	goto	l502
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;MOTEapp.c: 690: {
  7543                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7544  000750  0E96               	movlw	low STR_96
  7545  000752  6F72               	movwf	oled_putString@string& (0+255),b
  7546  000754  0E7A               	movlw	high STR_96
  7547  000756  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7548  000758  0E00               	movlw	0
  7549  00075A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7550  00075C  0E03               	movlw	3
  7551  00075E  6F75               	movwf	oled_putString@start_page& (0+255),b
  7552  000760  EC73  F025         	call	_oled_putString	;wreg free
  7553                           
  7554                           ;MOTEapp.c: 692: }
  7555  000764  D01E               	goto	l504
  7556  000766                     l502:
  7557                           
  7558                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7559  000766  0E65               	movlw	low _moduleResonseBuffer
  7560  000768  0100               	movlb	0	; () banked
  7561  00076A  6F60               	movwf	strncmp@s1& (0+255),b
  7562  00076C  0E01               	movlw	high _moduleResonseBuffer
  7563  00076E  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7564  000770  0E9C               	movlw	low STR_97
  7565  000772  6F62               	movwf	strncmp@s2& (0+255),b
  7566  000774  0E7F               	movlw	high STR_97
  7567  000776  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7568  000778  0E00               	movlw	0
  7569  00077A  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7570  00077C  0E06               	movlw	6
  7571  00077E  6F64               	movwf	strncmp@len& (0+255),b
  7572  000780  ECC5  F022         	call	_strncmp	;wreg free
  7573  000784  0100               	movlb	0	; () banked
  7574  000786  5160               	movf	?_strncmp& (0+255),w,b
  7575  000788  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7576  00078A  A4D8               	btfss	status,2,c
  7577  00078C  D00A               	goto	l504
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;MOTEapp.c: 694: {
  7581                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7582  00078E  0EB3               	movlw	low STR_98
  7583  000790  6F72               	movwf	oled_putString@string& (0+255),b
  7584  000792  0E7C               	movlw	high STR_98
  7585  000794  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7586  000796  0E00               	movlw	0
  7587  000798  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7588  00079A  0E03               	movlw	3
  7589  00079C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7590  00079E  EC73  F025         	call	_oled_putString	;wreg free
  7591  0007A2                     l504:
  7592                           
  7593                           ;MOTEapp.c: 696: }
  7594                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7595  0007A2  0EFA               	movlw	250
  7596  0007A4  0100               	movlb	0	; () banked
  7597  0007A6  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7598  0007A8  0E58               	movlw	88
  7599  0007AA                     u10937:
  7600  0007AA  2EE8               	decfsz	wreg,f,c
  7601  0007AC  D7FE               	bra	u10937
  7602  0007AE  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7603  0007B0  D7FC               	bra	u10937
  7604  0007B2  F000               	nop	
  7605  0007B4                     l490:
  7606                           
  7607                           ;MOTEapp.c: 698: }
  7608                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7609  0007B4  0100               	movlb	0	; () banked
  7610  0007B6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7611  0007B8  A4D8               	btfss	status,2,c
  7612  0007BA  D003               	goto	u9290
  7613                           
  7614                           ; BSR set to: 0
  7615  0007BC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7616  0007BE  B4D8               	btfsc	status,2,c
  7617  0007C0  0012               	return	
  7618  0007C2                     u9290:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;MOTEapp.c: 700: {
  7622                           ;MOTEapp.c: 701: oled_clear();
  7623                           
  7624                           ; BSR set to: 0
  7625  0007C2  ECAD  F02B         	call	_oled_clear	;wreg free
  7626                           
  7627                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7628  0007C6  0E21               	movlw	low STR_75
  7629  0007C8  0100               	movlb	0	; () banked
  7630  0007CA  6F72               	movwf	oled_putString@string& (0+255),b
  7631  0007CC  0E7B               	movlw	high STR_75
  7632  0007CE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7633  0007D0  0E00               	movlw	0
  7634  0007D2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7635  0007D4  0E00               	movlw	0
  7636  0007D6  6F75               	movwf	oled_putString@start_page& (0+255),b
  7637  0007D8  EC73  F025         	call	_oled_putString	;wreg free
  7638                           
  7639                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  7640  0007DC  0E87               	movlw	low STR_76
  7641  0007DE  0100               	movlb	0	; () banked
  7642  0007E0  6F72               	movwf	oled_putString@string& (0+255),b
  7643  0007E2  0E7B               	movlw	high STR_76
  7644  0007E4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7645  0007E6  0E00               	movlw	0
  7646  0007E8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7647  0007EA  0E01               	movlw	1
  7648  0007EC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7649  0007EE  EC73  F025         	call	_oled_putString	;wreg free
  7650                           
  7651                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  7652  0007F2  0E83               	movlw	low STR_77
  7653  0007F4  0100               	movlb	0	; () banked
  7654  0007F6  6F72               	movwf	oled_putString@string& (0+255),b
  7655  0007F8  0E7C               	movlw	high STR_77
  7656  0007FA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7657  0007FC  0E00               	movlw	0
  7658  0007FE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7659  000800  0E03               	movlw	3
  7660  000802  6F75               	movwf	oled_putString@start_page& (0+255),b
  7661  000804  EC73  F025         	call	_oled_putString	;wreg free
  7662                           
  7663                           ;MOTEapp.c: 705: runningState = runningUplink;
  7664  000808  0E06               	movlw	6
  7665  00080A  0100               	movlb	0	; () banked
  7666  00080C  6FF3               	movwf	_runningState& (0+255),b
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;MOTEapp.c: 706: }
  7670                           ;MOTEapp.c: 707: break;
  7671  00080E  0012               	return	
  7672  000810                     
  7673                           ; BSR set to: 0
  7674                           ;MOTEapp.c: 709: if (changeStates)
  7675                           
  7676                           ; BSR set to: 0
  7677  000810  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7678  000812  B4D8               	btfsc	status,2,c
  7679  000814  D027               	goto	l509
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;MOTEapp.c: 710: {
  7683                           ;MOTEapp.c: 711: oled_clear();
  7684  000816  ECAD  F02B         	call	_oled_clear	;wreg free
  7685                           
  7686                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  7687  00081A  0E63               	movlw	low STR_102
  7688  00081C  0100               	movlb	0	; () banked
  7689  00081E  6F72               	movwf	oled_putString@string& (0+255),b
  7690  000820  0E7C               	movlw	high STR_102
  7691  000822  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7692  000824  0E00               	movlw	0
  7693  000826  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7694  000828  0E00               	movlw	0
  7695  00082A  6F75               	movwf	oled_putString@start_page& (0+255),b
  7696  00082C  EC73  F025         	call	_oled_putString	;wreg free
  7697                           
  7698                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  7699  000830  0E53               	movlw	low STR_103
  7700  000832  0100               	movlb	0	; () banked
  7701  000834  6F72               	movwf	oled_putString@string& (0+255),b
  7702  000836  0E7C               	movlw	high STR_103
  7703  000838  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7704  00083A  0E00               	movlw	0
  7705  00083C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7706  00083E  0E01               	movlw	1
  7707  000840  6F75               	movwf	oled_putString@start_page& (0+255),b
  7708  000842  EC73  F025         	call	_oled_putString	;wreg free
  7709                           
  7710                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  7711  000846  0E83               	movlw	low STR_77
  7712  000848  0100               	movlb	0	; () banked
  7713  00084A  6F72               	movwf	oled_putString@string& (0+255),b
  7714  00084C  0E7C               	movlw	high STR_77
  7715  00084E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7716  000850  0E00               	movlw	0
  7717  000852  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7718  000854  0E03               	movlw	3
  7719  000856  6F75               	movwf	oled_putString@start_page& (0+255),b
  7720  000858  EC73  F025         	call	_oled_putString	;wreg free
  7721                           
  7722                           ;MOTEapp.c: 715: runningState = runningSensor;
  7723  00085C  0E01               	movlw	1
  7724  00085E  0100               	movlb	0	; () banked
  7725  000860  6FF3               	movwf	_runningState& (0+255),b
  7726                           
  7727                           ;MOTEapp.c: 716: }
  7728  000862  0012               	return	
  7729  000864                     l509:
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;MOTEapp.c: 717: else if (selectButton)
  7733                           
  7734                           ; BSR set to: 0
  7735  000864  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7736  000866  B4D8               	btfsc	status,2,c
  7737  000868  0012               	return	
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;MOTEapp.c: 718: {
  7741                           ;MOTEapp.c: 720: oled_clear();
  7742  00086A  ECAD  F02B         	call	_oled_clear	;wreg free
  7743                           
  7744                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  7745  00086E  9E89               	bcf	3977,7,c	;volatile
  7746                           
  7747                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  7748  000870  0E42               	movlw	low STR_105
  7749  000872  0100               	movlb	0	; () banked
  7750  000874  6F72               	movwf	oled_putString@string& (0+255),b
  7751  000876  0E7C               	movlw	high STR_105
  7752  000878  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7753  00087A  0E00               	movlw	0
  7754  00087C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7755  00087E  0E00               	movlw	0
  7756  000880  6F75               	movwf	oled_putString@start_page& (0+255),b
  7757  000882  EC73  F025         	call	_oled_putString	;wreg free
  7758                           
  7759                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  7760  000886  0ECA               	movlw	low STR_106
  7761  000888  0100               	movlb	0	; () banked
  7762  00088A  6F72               	movwf	oled_putString@string& (0+255),b
  7763  00088C  0E7E               	movlw	high STR_106
  7764  00088E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7765  000890  0E00               	movlw	0
  7766  000892  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7767  000894  0E01               	movlw	1
  7768  000896  6F75               	movwf	oled_putString@start_page& (0+255),b
  7769  000898  EC73  F025         	call	_oled_putString	;wreg free
  7770                           
  7771                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  7772  00089C  0EF8               	movlw	low _responsePortNum
  7773  00089E  0100               	movlb	0	; () banked
  7774  0008A0  6F72               	movwf	oled_putString@string& (0+255),b
  7775  0008A2  0E01               	movlw	high _responsePortNum
  7776  0008A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7777  0008A6  0E09               	movlw	9
  7778  0008A8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7779  0008AA  0E01               	movlw	1
  7780  0008AC  6F75               	movwf	oled_putString@start_page& (0+255),b
  7781  0008AE  EC73  F025         	call	_oled_putString	;wreg free
  7782                           
  7783                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  7784  0008B2  0E51               	movlw	low (STR_86+5)
  7785  0008B4  0100               	movlb	0	; () banked
  7786  0008B6  6F72               	movwf	oled_putString@string& (0+255),b
  7787  0008B8  0E7E               	movlw	high (STR_86+5)
  7788  0008BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7789  0008BC  0E00               	movlw	0
  7790  0008BE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7791  0008C0  0E02               	movlw	2
  7792  0008C2  6F75               	movwf	oled_putString@start_page& (0+255),b
  7793  0008C4  EC73  F025         	call	_oled_putString	;wreg free
  7794                           
  7795                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  7796  0008C8  0EA5               	movlw	low _responseData
  7797  0008CA  0100               	movlb	0	; () banked
  7798  0008CC  6F72               	movwf	oled_putString@string& (0+255),b
  7799  0008CE  0E01               	movlw	high _responseData
  7800  0008D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7801  0008D2  0E06               	movlw	6
  7802  0008D4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7803  0008D6  0E02               	movlw	2
  7804  0008D8  6F75               	movwf	oled_putString@start_page& (0+255),b
  7805  0008DA  EC73  F025         	call	_oled_putString	;wreg free
  7806                           
  7807                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  7808  0008DE  0EAF               	movlw	low (_responseData+10)
  7809  0008E0  0100               	movlb	0	; () banked
  7810  0008E2  6F72               	movwf	oled_putString@string& (0+255),b
  7811  0008E4  0E01               	movlw	high (_responseData+10)
  7812  0008E6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7813  0008E8  0E00               	movlw	0
  7814  0008EA  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7815  0008EC  0E03               	movlw	3
  7816  0008EE  6F75               	movwf	oled_putString@start_page& (0+255),b
  7817  0008F0  EC73  F025         	call	_oled_putString	;wreg free
  7818                           
  7819                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  7820  0008F4  0E0B               	movlw	11
  7821  0008F6  0100               	movlb	0	; () banked
  7822  0008F8  6FF3               	movwf	_runningState& (0+255),b
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;MOTEapp.c: 735: }
  7826                           ;MOTEapp.c: 736: break;
  7827                           
  7828                           ; BSR set to: 0
  7829  0008FA  0012               	return	
  7830  0008FC                     
  7831                           ; BSR set to: 0
  7832                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  7833                           
  7834                           ; BSR set to: 0
  7835  0008FC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7836  0008FE  A4D8               	btfss	status,2,c
  7837  000900  D003               	goto	u9330
  7838                           
  7839                           ; BSR set to: 0
  7840  000902  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7841  000904  B4D8               	btfsc	status,2,c
  7842  000906  0012               	return	
  7843  000908                     u9330:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;MOTEapp.c: 739: {
  7847                           ;MOTEapp.c: 740: oled_clear();
  7848                           
  7849                           ; BSR set to: 0
  7850  000908  ECAD  F02B         	call	_oled_clear	;wreg free
  7851                           
  7852                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  7853  00090C  0E10               	movlw	low STR_78
  7854  00090E  0100               	movlb	0	; () banked
  7855  000910  6F72               	movwf	oled_putString@string& (0+255),b
  7856  000912  0E7B               	movlw	high STR_78
  7857  000914  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7858  000916  0E00               	movlw	0
  7859  000918  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7860  00091A  0E00               	movlw	0
  7861  00091C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7862  00091E  EC73  F025         	call	_oled_putString	;wreg free
  7863                           
  7864                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  7865  000922  0EFF               	movlw	low STR_79
  7866  000924  0100               	movlb	0	; () banked
  7867  000926  6F72               	movwf	oled_putString@string& (0+255),b
  7868  000928  0E7A               	movlw	high STR_79
  7869  00092A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7870  00092C  0E00               	movlw	0
  7871  00092E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7872  000930  0E01               	movlw	1
  7873  000932  6F75               	movwf	oled_putString@start_page& (0+255),b
  7874  000934  EC73  F025         	call	_oled_putString	;wreg free
  7875                           
  7876                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  7877  000938  0E83               	movlw	low STR_77
  7878  00093A  0100               	movlb	0	; () banked
  7879  00093C  6F72               	movwf	oled_putString@string& (0+255),b
  7880  00093E  0E7C               	movlw	high STR_77
  7881  000940  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7882  000942  0E00               	movlw	0
  7883  000944  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7884  000946  0E03               	movlw	3
  7885  000948  6F75               	movwf	oled_putString@start_page& (0+255),b
  7886  00094A  EC73  F025         	call	_oled_putString	;wreg free
  7887                           
  7888                           ;MOTEapp.c: 744: runningState = runningDownlink;
  7889  00094E  0E0A               	movlw	10
  7890  000950  0100               	movlb	0	; () banked
  7891  000952  6FF3               	movwf	_runningState& (0+255),b
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;MOTEapp.c: 745: }
  7895                           ;MOTEapp.c: 746: break;
  7896  000954  0012               	return	
  7897  000956                     
  7898                           ; BSR set to: 0
  7899                           ;MOTEapp.c: 748: if (changeStates)
  7900                           
  7901                           ; BSR set to: 0
  7902  000956  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7903  000958  B4D8               	btfsc	status,2,c
  7904  00095A  D036               	goto	l517
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;MOTEapp.c: 749: {
  7908                           ;MOTEapp.c: 750: oled_clear();
  7909  00095C  ECAD  F02B         	call	_oled_clear	;wreg free
  7910                           
  7911                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  7912  000960  0E20               	movlw	low STR_111
  7913  000962  0100               	movlb	0	; () banked
  7914  000964  6F72               	movwf	oled_putString@string& (0+255),b
  7915  000966  0E7C               	movlw	high STR_111
  7916  000968  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7917  00096A  0E00               	movlw	0
  7918  00096C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7919  00096E  0E00               	movlw	0
  7920  000970  6F75               	movwf	oled_putString@start_page& (0+255),b
  7921  000972  EC73  F025         	call	_oled_putString	;wreg free
  7922                           
  7923                           ;MOTEapp.c: 752: if (menuTimeout)
  7924  000976  0100               	movlb	0	; () banked
  7925  000978  51FB               	movf	_menuTimeout& (0+255),w,b
  7926  00097A  B4D8               	btfsc	status,2,c
  7927  00097C  D00B               	goto	l518
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  7931  00097E  0ED3               	movlw	low STR_112
  7932  000980  6F72               	movwf	oled_putString@string& (0+255),b
  7933  000982  0E7C               	movlw	high STR_112
  7934  000984  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7935  000986  0E00               	movlw	0
  7936  000988  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7937  00098A  0E02               	movlw	2
  7938  00098C  6F75               	movwf	oled_putString@start_page& (0+255),b
  7939  00098E  EC73  F025         	call	_oled_putString	;wreg free
  7940  000992  D00B               	goto	l519
  7941  000994                     l518:
  7942                           
  7943                           ;MOTEapp.c: 754: else
  7944                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  7945  000994  0EE2               	movlw	low STR_113
  7946  000996  0100               	movlb	0	; () banked
  7947  000998  6F72               	movwf	oled_putString@string& (0+255),b
  7948  00099A  0E7C               	movlw	high STR_113
  7949  00099C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7950  00099E  0E00               	movlw	0
  7951  0009A0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7952  0009A2  0E02               	movlw	2
  7953  0009A4  6F75               	movwf	oled_putString@start_page& (0+255),b
  7954  0009A6  EC73  F025         	call	_oled_putString	;wreg free
  7955  0009AA                     l519:
  7956                           
  7957                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  7958  0009AA  0E73               	movlw	low STR_114
  7959  0009AC  0100               	movlb	0	; () banked
  7960  0009AE  6F72               	movwf	oled_putString@string& (0+255),b
  7961  0009B0  0E7C               	movlw	high STR_114
  7962  0009B2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7963  0009B4  0E00               	movlw	0
  7964  0009B6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7965  0009B8  0E03               	movlw	3
  7966  0009BA  6F75               	movwf	oled_putString@start_page& (0+255),b
  7967  0009BC  EC73  F025         	call	_oled_putString	;wreg free
  7968                           
  7969                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  7970  0009C0  0E0C               	movlw	12
  7971  0009C2  0100               	movlb	0	; () banked
  7972  0009C4  6FF3               	movwf	_runningState& (0+255),b
  7973                           
  7974                           ;MOTEapp.c: 758: }
  7975  0009C6  0012               	return	
  7976  0009C8                     l517:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;MOTEapp.c: 759: else if (selectButton)
  7980                           
  7981                           ; BSR set to: 0
  7982  0009C8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7983  0009CA  B4D8               	btfsc	status,2,c
  7984  0009CC  0012               	return	
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;MOTEapp.c: 760: {
  7988                           ;MOTEapp.c: 761: oled_clear();
  7989  0009CE  ECAD  F02B         	call	_oled_clear	;wreg free
  7990                           
  7991                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  7992  0009D2  0E63               	movlw	low STR_102
  7993  0009D4  0100               	movlb	0	; () banked
  7994  0009D6  6F72               	movwf	oled_putString@string& (0+255),b
  7995  0009D8  0E7C               	movlw	high STR_102
  7996  0009DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7997  0009DC  0E00               	movlw	0
  7998  0009DE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  7999  0009E0  0E00               	movlw	0
  8000  0009E2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8001  0009E4  EC73  F025         	call	_oled_putString	;wreg free
  8002                           
  8003                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  8004  0009E8  0E80               	movlw	low STR_116
  8005  0009EA  0100               	movlb	0	; () banked
  8006  0009EC  6F72               	movwf	oled_putString@string& (0+255),b
  8007  0009EE  0E7F               	movlw	high STR_116
  8008  0009F0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8009  0009F2  0E00               	movlw	0
  8010  0009F4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8011  0009F6  0E01               	movlw	1
  8012  0009F8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8013  0009FA  EC73  F025         	call	_oled_putString	;wreg free
  8014                           
  8015                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8016  0009FE  0E79               	movlw	low STR_117
  8017  000A00  0100               	movlb	0	; () banked
  8018  000A02  6F72               	movwf	oled_putString@string& (0+255),b
  8019  000A04  0E7F               	movlw	high STR_117
  8020  000A06  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8021  000A08  0E00               	movlw	0
  8022  000A0A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8023  000A0C  0E02               	movlw	2
  8024  000A0E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8025  000A10  EC73  F025         	call	_oled_putString	;wreg free
  8026                           
  8027                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8028  000A14  0EFA               	movlw	low STR_118
  8029  000A16  0100               	movlb	0	; () banked
  8030  000A18  6F72               	movwf	oled_putString@string& (0+255),b
  8031  000A1A  0E7F               	movlw	high STR_118
  8032  000A1C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8033  000A1E  0E0A               	movlw	10
  8034  000A20  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8035  000A22  0E02               	movlw	2
  8036  000A24  6F75               	movwf	oled_putString@start_page& (0+255),b
  8037  000A26  EC73  F025         	call	_oled_putString	;wreg free
  8038                           
  8039                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8040  000A2A  EC8E  F024         	call	_moteApp_setSensorsInput	;wreg free
  8041                           
  8042                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8043  000A2E  0E02               	movlw	2
  8044  000A30  0100               	movlb	0	; () banked
  8045  000A32  6FF3               	movwf	_runningState& (0+255),b
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;MOTEapp.c: 769: }
  8049                           ;MOTEapp.c: 770: break;
  8050                           
  8051                           ; BSR set to: 0
  8052  000A34  0012               	return	
  8053  000A36                     
  8054                           ; BSR set to: 0
  8055                           ;MOTEapp.c: 772: if (changeStates)
  8056                           
  8057                           ; BSR set to: 0
  8058  000A36  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8059  000A38  B4D8               	btfsc	status,2,c
  8060  000A3A  D09B               	goto	l523
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;MOTEapp.c: 773: {
  8064                           ;MOTEapp.c: 774: oled_clear();
  8065  000A3C  ECAD  F02B         	call	_oled_clear	;wreg free
  8066                           
  8067                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8068  000A40  0E76               	movlw	low STR_119
  8069  000A42  0100               	movlb	0	; () banked
  8070  000A44  6F72               	movwf	oled_putString@string& (0+255),b
  8071  000A46  0E7B               	movlw	high STR_119
  8072  000A48  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8073  000A4A  0E00               	movlw	0
  8074  000A4C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8075  000A4E  0E00               	movlw	0
  8076  000A50  6F75               	movwf	oled_putString@start_page& (0+255),b
  8077  000A52  EC73  F025         	call	_oled_putString	;wreg free
  8078                           
  8079                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8080  000A56  0E65               	movlw	low STR_120
  8081  000A58  0100               	movlb	0	; () banked
  8082  000A5A  6F72               	movwf	oled_putString@string& (0+255),b
  8083  000A5C  0E7B               	movlw	high STR_120
  8084  000A5E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8085  000A60  0E00               	movlw	0
  8086  000A62  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8087  000A64  0E01               	movlw	1
  8088  000A66  6F75               	movwf	oled_putString@start_page& (0+255),b
  8089  000A68  EC73  F025         	call	_oled_putString	;wreg free
  8090                           
  8091                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8092  000A6C  0E87               	movlw	low STR_121
  8093  000A6E  0100               	movlb	0	; () banked
  8094  000A70  6F72               	movwf	oled_putString@string& (0+255),b
  8095  000A72  0E7F               	movlw	high STR_121
  8096  000A74  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8097  000A76  0E00               	movlw	0
  8098  000A78  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8099  000A7A  0E02               	movlw	2
  8100  000A7C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8101  000A7E  EC73  F025         	call	_oled_putString	;wreg free
  8102                           
  8103                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8104  000A82  0EC2               	movlw	low STR_122
  8105  000A84  0100               	movlb	0	; () banked
  8106  000A86  6F72               	movwf	oled_putString@string& (0+255),b
  8107  000A88  0E7F               	movlw	high STR_122
  8108  000A8A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8109  000A8C  0E0C               	movlw	12
  8110  000A8E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8111  000A90  0E02               	movlw	2
  8112  000A92  6F75               	movwf	oled_putString@start_page& (0+255),b
  8113  000A94  EC73  F025         	call	_oled_putString	;wreg free
  8114                           
  8115                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8116  000A98  D048               	goto	l524
  8117  000A9A                     
  8118                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8119                           
  8120                           ;MOTEapp.c: 783: case 0:
  8121  000A9A  0ECB               	movlw	low (STR_169+11)
  8122  000A9C  0100               	movlb	0	; () banked
  8123  000A9E  6F72               	movwf	oled_putString@string& (0+255),b
  8124  000AA0  0E7D               	movlw	high (STR_169+11)
  8125  000AA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8126  000AA4  0E07               	movlw	7
  8127  000AA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8128  000AA8  0E02               	movlw	2
  8129  000AAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  8130  000AAC  EC73  F025         	call	_oled_putString	;wreg free
  8131                           
  8132                           ;MOTEapp.c: 785: break;
  8133  000AB0  D051               	goto	l527
  8134  000AB2                     
  8135                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8136  000AB2  0EE0               	movlw	low (STR_146+1)
  8137  000AB4  0100               	movlb	0	; () banked
  8138  000AB6  6F72               	movwf	oled_putString@string& (0+255),b
  8139  000AB8  0E7F               	movlw	high (STR_146+1)
  8140  000ABA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8141  000ABC  0E07               	movlw	7
  8142  000ABE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8143  000AC0  0E02               	movlw	2
  8144  000AC2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8145  000AC4  EC73  F025         	call	_oled_putString	;wreg free
  8146                           
  8147                           ;MOTEapp.c: 788: break;
  8148  000AC8  D045               	goto	l527
  8149  000ACA                     
  8150                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8151  000ACA  0EEC               	movlw	low (STR_147+1)
  8152  000ACC  0100               	movlb	0	; () banked
  8153  000ACE  6F72               	movwf	oled_putString@string& (0+255),b
  8154  000AD0  0E7F               	movlw	high (STR_147+1)
  8155  000AD2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8156  000AD4  0E07               	movlw	7
  8157  000AD6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8158  000AD8  0E02               	movlw	2
  8159  000ADA  6F75               	movwf	oled_putString@start_page& (0+255),b
  8160  000ADC  EC73  F025         	call	_oled_putString	;wreg free
  8161                           
  8162                           ;MOTEapp.c: 791: break;
  8163  000AE0  D039               	goto	l527
  8164  000AE2                     
  8165                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8166  000AE2  0EE4               	movlw	low (STR_148+1)
  8167  000AE4  0100               	movlb	0	; () banked
  8168  000AE6  6F72               	movwf	oled_putString@string& (0+255),b
  8169  000AE8  0E7F               	movlw	high (STR_148+1)
  8170  000AEA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8171  000AEC  0E07               	movlw	7
  8172  000AEE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8173  000AF0  0E02               	movlw	2
  8174  000AF2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8175  000AF4  EC73  F025         	call	_oled_putString	;wreg free
  8176                           
  8177                           ;MOTEapp.c: 794: break;
  8178  000AF8  D02D               	goto	l527
  8179  000AFA                     
  8180                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8181  000AFA  0EE8               	movlw	low (STR_149+1)
  8182  000AFC  0100               	movlb	0	; () banked
  8183  000AFE  6F72               	movwf	oled_putString@string& (0+255),b
  8184  000B00  0E7F               	movlw	high (STR_149+1)
  8185  000B02  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8186  000B04  0E07               	movlw	7
  8187  000B06  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8188  000B08  0E02               	movlw	2
  8189  000B0A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8190  000B0C  EC73  F025         	call	_oled_putString	;wreg free
  8191                           
  8192                           ;MOTEapp.c: 797: break;
  8193  000B10  D021               	goto	l527
  8194  000B12                     
  8195                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8196  000B12  0EEF               	movlw	low STR_128
  8197  000B14  0100               	movlb	0	; () banked
  8198  000B16  6F72               	movwf	oled_putString@string& (0+255),b
  8199  000B18  0E7F               	movlw	high STR_128
  8200  000B1A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8201  000B1C  0E07               	movlw	7
  8202  000B1E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8203  000B20  0E02               	movlw	2
  8204  000B22  6F75               	movwf	oled_putString@start_page& (0+255),b
  8205  000B24  EC73  F025         	call	_oled_putString	;wreg free
  8206                           
  8207                           ;MOTEapp.c: 801: }
  8208                           
  8209                           ;MOTEapp.c: 800: break;
  8210  000B28  D015               	goto	l527
  8211  000B2A                     l524:
  8212  000B2A  0100               	movlb	0	; () banked
  8213  000B2C  51FE               	movf	_periodicUpValue& (0+255),w,b
  8214                           
  8215                           ; Switch size 1, requested type "space"
  8216                           ; Number of cases is 6, Range of values is 0 to 5
  8217                           ; switch strategies available:
  8218                           ; Name         Instructions Cycles
  8219                           ; simple_byte           19    10 (average)
  8220                           ;	Chosen strategy is simple_byte
  8221  000B2E  0A00               	xorlw	0	; case 0
  8222  000B30  B4D8               	btfsc	status,2,c
  8223  000B32  D7B3               	goto	l525
  8224  000B34  0A01               	xorlw	1	; case 1
  8225  000B36  B4D8               	btfsc	status,2,c
  8226  000B38  D7BC               	goto	l528
  8227  000B3A  0A03               	xorlw	3	; case 2
  8228  000B3C  B4D8               	btfsc	status,2,c
  8229  000B3E  D7C5               	goto	l529
  8230  000B40  0A01               	xorlw	1	; case 3
  8231  000B42  B4D8               	btfsc	status,2,c
  8232  000B44  D7CE               	goto	l530
  8233  000B46  0A07               	xorlw	7	; case 4
  8234  000B48  B4D8               	btfsc	status,2,c
  8235  000B4A  D7D7               	goto	l531
  8236  000B4C  0A01               	xorlw	1	; case 5
  8237  000B4E  B4D8               	btfsc	status,2,c
  8238  000B50  D7E0               	goto	l532
  8239  000B52  D7A3               	goto	l525
  8240  000B54                     l527:
  8241                           
  8242                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8243                           
  8244                           ; BSR set to: 0
  8245  000B54  0E73               	movlw	low STR_114
  8246  000B56  0100               	movlb	0	; () banked
  8247  000B58  6F72               	movwf	oled_putString@string& (0+255),b
  8248  000B5A  0E7C               	movlw	high STR_114
  8249  000B5C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8250  000B5E  0E00               	movlw	0
  8251  000B60  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8252  000B62  0E03               	movlw	3
  8253  000B64  6F75               	movwf	oled_putString@start_page& (0+255),b
  8254  000B66  EC73  F025         	call	_oled_putString	;wreg free
  8255                           
  8256                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8257  000B6A  0E0D               	movlw	13
  8258  000B6C  0100               	movlb	0	; () banked
  8259  000B6E  6FF3               	movwf	_runningState& (0+255),b
  8260                           
  8261                           ;MOTEapp.c: 804: }
  8262  000B70  0012               	return	
  8263  000B72                     l523:
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;MOTEapp.c: 805: else if (selectButton)
  8267                           
  8268                           ; BSR set to: 0
  8269  000B72  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8270  000B74  B4D8               	btfsc	status,2,c
  8271  000B76  0012               	return	
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;MOTEapp.c: 806: {
  8275                           ;MOTEapp.c: 807: if (menuTimeout)
  8276  000B78  51FB               	movf	_menuTimeout& (0+255),w,b
  8277  000B7A  B4D8               	btfsc	status,2,c
  8278  000B7C  D00D               	goto	l535
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;MOTEapp.c: 808: {
  8282                           ;MOTEapp.c: 809: menuTimeout = 0;
  8283  000B7E  0E00               	movlw	0
  8284  000B80  6FFB               	movwf	_menuTimeout& (0+255),b
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8288  000B82  0EE2               	movlw	low STR_113
  8289  000B84  6F72               	movwf	oled_putString@string& (0+255),b
  8290  000B86  0E7C               	movlw	high STR_113
  8291  000B88  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8292  000B8A  0E00               	movlw	0
  8293  000B8C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8294  000B8E  0E02               	movlw	2
  8295  000B90  6F75               	movwf	oled_putString@start_page& (0+255),b
  8296  000B92  EC73  F025         	call	_oled_putString	;wreg free
  8297                           
  8298                           ;MOTEapp.c: 811: }
  8299  000B96  0012               	return	
  8300  000B98                     l535:
  8301                           
  8302                           ;MOTEapp.c: 812: else
  8303                           ;MOTEapp.c: 813: {
  8304                           ;MOTEapp.c: 814: menuTimeout = 1;
  8305  000B98  0E01               	movlw	1
  8306  000B9A  0100               	movlb	0	; () banked
  8307  000B9C  6FFB               	movwf	_menuTimeout& (0+255),b
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8311  000B9E  0ED3               	movlw	low STR_112
  8312  000BA0  6F72               	movwf	oled_putString@string& (0+255),b
  8313  000BA2  0E7C               	movlw	high STR_112
  8314  000BA4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8315  000BA6  0E00               	movlw	0
  8316  000BA8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8317  000BAA  0E02               	movlw	2
  8318  000BAC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8319  000BAE  EC73  F025         	call	_oled_putString	;wreg free
  8320                           
  8321                           ;MOTEapp.c: 816: }
  8322                           ;MOTEapp.c: 817: }
  8323                           ;MOTEapp.c: 818: break;
  8324  000BB2  0012               	return	
  8325  000BB4                     
  8326                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8327  000BB4  0100               	movlb	0	; () banked
  8328  000BB6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8329  000BB8  A4D8               	btfss	status,2,c
  8330  000BBA  D003               	goto	u9410
  8331                           
  8332                           ; BSR set to: 0
  8333  000BBC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8334  000BBE  B4D8               	btfsc	status,2,c
  8335  000BC0  0012               	return	
  8336  000BC2                     u9410:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;MOTEapp.c: 822: {
  8340                           ;MOTEapp.c: 823: oled_clear();
  8341                           
  8342                           ; BSR set to: 0
  8343  000BC2  ECAD  F02B         	call	_oled_clear	;wreg free
  8344                           
  8345                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8346  000BC6  0E63               	movlw	low STR_102
  8347  000BC8  0100               	movlb	0	; () banked
  8348  000BCA  6F72               	movwf	oled_putString@string& (0+255),b
  8349  000BCC  0E7C               	movlw	high STR_102
  8350  000BCE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8351  000BD0  0E00               	movlw	0
  8352  000BD2  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8353  000BD4  0E00               	movlw	0
  8354  000BD6  6F75               	movwf	oled_putString@start_page& (0+255),b
  8355  000BD8  EC73  F025         	call	_oled_putString	;wreg free
  8356                           
  8357                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8358  000BDC  0E53               	movlw	low STR_103
  8359  000BDE  0100               	movlb	0	; () banked
  8360  000BE0  6F72               	movwf	oled_putString@string& (0+255),b
  8361  000BE2  0E7C               	movlw	high STR_103
  8362  000BE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8363  000BE6  0E00               	movlw	0
  8364  000BE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8365  000BEA  0E01               	movlw	1
  8366  000BEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8367  000BEE  EC73  F025         	call	_oled_putString	;wreg free
  8368                           
  8369                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8370  000BF2  0E83               	movlw	low STR_77
  8371  000BF4  0100               	movlb	0	; () banked
  8372  000BF6  6F72               	movwf	oled_putString@string& (0+255),b
  8373  000BF8  0E7C               	movlw	high STR_77
  8374  000BFA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8375  000BFC  0E00               	movlw	0
  8376  000BFE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8377  000C00  0E03               	movlw	3
  8378  000C02  6F75               	movwf	oled_putString@start_page& (0+255),b
  8379  000C04  EC73  F025         	call	_oled_putString	;wreg free
  8380                           
  8381                           ;MOTEapp.c: 827: runningState = runningSensor;
  8382  000C08  0E01               	movlw	1
  8383  000C0A  0100               	movlb	0	; () banked
  8384  000C0C  6FF3               	movwf	_runningState& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;MOTEapp.c: 828: }
  8388                           ;MOTEapp.c: 829: break;
  8389  000C0E  0012               	return	
  8390  000C10                     
  8391                           ; BSR set to: 0
  8392                           ;MOTEapp.c: 831: if (changeStates)
  8393                           
  8394                           ; BSR set to: 0
  8395  000C10  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8396  000C12  B4D8               	btfsc	status,2,c
  8397  000C14  D092               	goto	l546
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;MOTEapp.c: 832: {
  8401                           ;MOTEapp.c: 833: oled_clear();
  8402  000C16  ECAD  F02B         	call	_oled_clear	;wreg free
  8403                           
  8404                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8405  000C1A  0EED               	movlw	low STR_135
  8406  000C1C  0100               	movlb	0	; () banked
  8407  000C1E  6F72               	movwf	oled_putString@string& (0+255),b
  8408  000C20  0E7B               	movlw	high STR_135
  8409  000C22  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8410  000C24  0E00               	movlw	0
  8411  000C26  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8412  000C28  0E00               	movlw	0
  8413  000C2A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8414  000C2C  EC73  F025         	call	_oled_putString	;wreg free
  8415                           
  8416                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8417  000C30  0E58               	movlw	low STR_136
  8418  000C32  0100               	movlb	0	; () banked
  8419  000C34  6F72               	movwf	oled_putString@string& (0+255),b
  8420  000C36  0E7E               	movlw	high STR_136
  8421  000C38  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8422  000C3A  0E00               	movlw	0
  8423  000C3C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8424  000C3E  0E02               	movlw	2
  8425  000C40  6F75               	movwf	oled_putString@start_page& (0+255),b
  8426  000C42  EC73  F025         	call	_oled_putString	;wreg free
  8427                           
  8428                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8429  000C46  0E73               	movlw	low STR_114
  8430  000C48  0100               	movlb	0	; () banked
  8431  000C4A  6F72               	movwf	oled_putString@string& (0+255),b
  8432  000C4C  0E7C               	movlw	high STR_114
  8433  000C4E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8434  000C50  0E00               	movlw	0
  8435  000C52  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8436  000C54  0E03               	movlw	3
  8437  000C56  6F75               	movwf	oled_putString@start_page& (0+255),b
  8438  000C58  EC73  F025         	call	_oled_putString	;wreg free
  8439                           
  8440                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  8441  000C5C  0E03               	movlw	3
  8442  000C5E  0100               	movlb	0	; () banked
  8443  000C60  6FF3               	movwf	_runningState& (0+255),b
  8444                           
  8445                           ;MOTEapp.c: 840: switch (dataRateValue)
  8446  000C62  D053               	goto	l543
  8447  000C64                     
  8448                           ; BSR set to: 0
  8449                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  8450                           
  8451                           ; BSR set to: 0
  8452                           
  8453                           ;MOTEapp.c: 843: case 0:
  8454                           
  8455                           ; BSR set to: 0
  8456  000C64  0EC7               	movlw	low STR_138
  8457  000C66  6F72               	movwf	oled_putString@string& (0+255),b
  8458  000C68  0E7F               	movlw	high STR_138
  8459  000C6A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8460  000C6C  0E0A               	movlw	10
  8461  000C6E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8462  000C70  0E02               	movlw	2
  8463  000C72  6F75               	movwf	oled_putString@start_page& (0+255),b
  8464  000C74  EC73  F025         	call	_oled_putString	;wreg free
  8465                           
  8466                           ;MOTEapp.c: 845: break;
  8467  000C78  D060               	goto	l546
  8468  000C7A                     
  8469                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  8470  000C7A  0ECB               	movlw	low STR_139
  8471  000C7C  0100               	movlb	0	; () banked
  8472  000C7E  6F72               	movwf	oled_putString@string& (0+255),b
  8473  000C80  0E7F               	movlw	high STR_139
  8474  000C82  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8475  000C84  0E0A               	movlw	10
  8476  000C86  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8477  000C88  0E02               	movlw	2
  8478  000C8A  6F75               	movwf	oled_putString@start_page& (0+255),b
  8479  000C8C  EC73  F025         	call	_oled_putString	;wreg free
  8480                           
  8481                           ;MOTEapp.c: 848: break;
  8482  000C90  D054               	goto	l546
  8483  000C92                     
  8484                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  8485  000C92  0ECF               	movlw	low STR_140
  8486  000C94  0100               	movlb	0	; () banked
  8487  000C96  6F72               	movwf	oled_putString@string& (0+255),b
  8488  000C98  0E7F               	movlw	high STR_140
  8489  000C9A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8490  000C9C  0E0A               	movlw	10
  8491  000C9E  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8492  000CA0  0E02               	movlw	2
  8493  000CA2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8494  000CA4  EC73  F025         	call	_oled_putString	;wreg free
  8495                           
  8496                           ;MOTEapp.c: 851: break;
  8497  000CA8  D048               	goto	l546
  8498  000CAA                     
  8499                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  8500  000CAA  0ED3               	movlw	low STR_141
  8501  000CAC  0100               	movlb	0	; () banked
  8502  000CAE  6F72               	movwf	oled_putString@string& (0+255),b
  8503  000CB0  0E7F               	movlw	high STR_141
  8504  000CB2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8505  000CB4  0E0A               	movlw	10
  8506  000CB6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8507  000CB8  0E02               	movlw	2
  8508  000CBA  6F75               	movwf	oled_putString@start_page& (0+255),b
  8509  000CBC  EC73  F025         	call	_oled_putString	;wreg free
  8510                           
  8511                           ;MOTEapp.c: 854: break;
  8512  000CC0  D03C               	goto	l546
  8513  000CC2                     
  8514                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  8515  000CC2  0ED7               	movlw	low STR_142
  8516  000CC4  0100               	movlb	0	; () banked
  8517  000CC6  6F72               	movwf	oled_putString@string& (0+255),b
  8518  000CC8  0E7F               	movlw	high STR_142
  8519  000CCA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8520  000CCC  0E0A               	movlw	10
  8521  000CCE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8522  000CD0  0E02               	movlw	2
  8523  000CD2  6F75               	movwf	oled_putString@start_page& (0+255),b
  8524  000CD4  EC73  F025         	call	_oled_putString	;wreg free
  8525                           
  8526                           ;MOTEapp.c: 857: break;
  8527  000CD8  D030               	goto	l546
  8528  000CDA                     
  8529                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  8530  000CDA  0EDB               	movlw	low STR_143
  8531  000CDC  0100               	movlb	0	; () banked
  8532  000CDE  6F72               	movwf	oled_putString@string& (0+255),b
  8533  000CE0  0E7F               	movlw	high STR_143
  8534  000CE2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8535  000CE4  0E0A               	movlw	10
  8536  000CE6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8537  000CE8  0E02               	movlw	2
  8538  000CEA  6F75               	movwf	oled_putString@start_page& (0+255),b
  8539  000CEC  EC73  F025         	call	_oled_putString	;wreg free
  8540                           
  8541                           ;MOTEapp.c: 860: break;
  8542  000CF0  D024               	goto	l546
  8543  000CF2                     
  8544                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  8545  000CF2  0EF3               	movlw	low STR_144
  8546  000CF4  0100               	movlb	0	; () banked
  8547  000CF6  6F72               	movwf	oled_putString@string& (0+255),b
  8548  000CF8  0E7F               	movlw	high STR_144
  8549  000CFA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8550  000CFC  0E0A               	movlw	10
  8551  000CFE  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8552  000D00  0E02               	movlw	2
  8553  000D02  6F75               	movwf	oled_putString@start_page& (0+255),b
  8554  000D04  EC73  F025         	call	_oled_putString	;wreg free
  8555                           
  8556                           ;MOTEapp.c: 864: }
  8557                           
  8558                           ;MOTEapp.c: 863: break;
  8559  000D08  D018               	goto	l546
  8560  000D0A                     l543:
  8561  000D0A  0100               	movlb	0	; () banked
  8562  000D0C  51FC               	movf	_dataRateValue& (0+255),w,b
  8563                           
  8564                           ; Switch size 1, requested type "space"
  8565                           ; Number of cases is 7, Range of values is 0 to 6
  8566                           ; switch strategies available:
  8567                           ; Name         Instructions Cycles
  8568                           ; simple_byte           22    12 (average)
  8569                           ;	Chosen strategy is simple_byte
  8570  000D0E  0A00               	xorlw	0	; case 0
  8571  000D10  B4D8               	btfsc	status,2,c
  8572  000D12  D7A8               	goto	l544
  8573  000D14  0A01               	xorlw	1	; case 1
  8574  000D16  B4D8               	btfsc	status,2,c
  8575  000D18  D7B0               	goto	l547
  8576  000D1A  0A03               	xorlw	3	; case 2
  8577  000D1C  B4D8               	btfsc	status,2,c
  8578  000D1E  D7B9               	goto	l548
  8579  000D20  0A01               	xorlw	1	; case 3
  8580  000D22  B4D8               	btfsc	status,2,c
  8581  000D24  D7C2               	goto	l549
  8582  000D26  0A07               	xorlw	7	; case 4
  8583  000D28  B4D8               	btfsc	status,2,c
  8584  000D2A  D7CB               	goto	l550
  8585  000D2C  0A01               	xorlw	1	; case 5
  8586  000D2E  B4D8               	btfsc	status,2,c
  8587  000D30  D7D4               	goto	l551
  8588  000D32  0A03               	xorlw	3	; case 6
  8589  000D34  B4D8               	btfsc	status,2,c
  8590  000D36  D7DD               	goto	l552
  8591  000D38  D795               	goto	l544
  8592  000D3A                     l546:
  8593                           
  8594                           ;MOTEapp.c: 865: }
  8595                           ;MOTEapp.c: 866: if (selectButton)
  8596                           
  8597                           ; BSR set to: 0
  8598                           
  8599                           ; BSR set to: 0
  8600  000D3A  0100               	movlb	0	; () banked
  8601  000D3C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8602  000D3E  B4D8               	btfsc	status,2,c
  8603  000D40  0012               	return	
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;MOTEapp.c: 867: {
  8607                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  8608  000D42  0E05               	movlw	5
  8609  000D44  61FE               	cpfslt	_periodicUpValue& (0+255),b
  8610  000D46  D002               	goto	l554
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;MOTEapp.c: 869: {
  8614                           ;MOTEapp.c: 870: periodicUpValue++;
  8615  000D48  2BFE               	incf	_periodicUpValue& (0+255),f,b
  8616                           
  8617                           ;MOTEapp.c: 871: } else {
  8618  000D4A  D054               	goto	l556
  8619  000D4C                     l554:
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;MOTEapp.c: 872: periodicUpValue = 0;
  8623                           
  8624                           ; BSR set to: 0
  8625  000D4C  0E00               	movlw	0
  8626  000D4E  6FFE               	movwf	_periodicUpValue& (0+255),b
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;MOTEapp.c: 873: }
  8630                           ;MOTEapp.c: 875: switch (periodicUpValue)
  8631  000D50  D051               	goto	l556
  8632  000D52                     
  8633                           ; BSR set to: 0
  8634                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  8635                           
  8636                           ; BSR set to: 0
  8637                           
  8638                           ;MOTEapp.c: 878: case 0:
  8639                           
  8640                           ; BSR set to: 0
  8641  000D52  0E09               	movlw	9
  8642  000D54  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  8646  000D56  0EDB               	movlw	low STR_143
  8647  000D58  6F72               	movwf	oled_putString@string& (0+255),b
  8648  000D5A  0E7F               	movlw	high STR_143
  8649  000D5C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8650  000D5E  0E07               	movlw	7
  8651  000D60  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8652  000D62  0E02               	movlw	2
  8653  000D64  6F75               	movwf	oled_putString@start_page& (0+255),b
  8654  000D66  EC73  F025         	call	_oled_putString	;wreg free
  8655                           
  8656                           ;MOTEapp.c: 881: break;
  8657  000D6A  0012               	return	
  8658  000D6C                     
  8659                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  8660  000D6C  0E12               	movlw	18
  8661  000D6E  0100               	movlb	0	; () banked
  8662  000D70  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  8666  000D72  0EDF               	movlw	low STR_146
  8667  000D74  6F72               	movwf	oled_putString@string& (0+255),b
  8668  000D76  0E7F               	movlw	high STR_146
  8669  000D78  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8670  000D7A  0E07               	movlw	7
  8671  000D7C  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8672  000D7E  0E02               	movlw	2
  8673  000D80  6F75               	movwf	oled_putString@start_page& (0+255),b
  8674  000D82  EC73  F025         	call	_oled_putString	;wreg free
  8675                           
  8676                           ;MOTEapp.c: 885: break;
  8677  000D86  0012               	return	
  8678  000D88                     
  8679                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  8680  000D88  0E1B               	movlw	27
  8681  000D8A  0100               	movlb	0	; () banked
  8682  000D8C  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  8686  000D8E  0EEB               	movlw	low STR_147
  8687  000D90  6F72               	movwf	oled_putString@string& (0+255),b
  8688  000D92  0E7F               	movlw	high STR_147
  8689  000D94  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8690  000D96  0E07               	movlw	7
  8691  000D98  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8692  000D9A  0E02               	movlw	2
  8693  000D9C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8694  000D9E  EC73  F025         	call	_oled_putString	;wreg free
  8695                           
  8696                           ;MOTEapp.c: 889: break;
  8697  000DA2  0012               	return	
  8698  000DA4                     
  8699                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  8700  000DA4  0E36               	movlw	54
  8701  000DA6  0100               	movlb	0	; () banked
  8702  000DA8  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  8706  000DAA  0EE3               	movlw	low STR_148
  8707  000DAC  6F72               	movwf	oled_putString@string& (0+255),b
  8708  000DAE  0E7F               	movlw	high STR_148
  8709  000DB0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8710  000DB2  0E07               	movlw	7
  8711  000DB4  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8712  000DB6  0E02               	movlw	2
  8713  000DB8  6F75               	movwf	oled_putString@start_page& (0+255),b
  8714  000DBA  EC73  F025         	call	_oled_putString	;wreg free
  8715                           
  8716                           ;MOTEapp.c: 893: break;
  8717  000DBE  0012               	return	
  8718  000DC0                     
  8719                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  8720  000DC0  0E6C               	movlw	108
  8721  000DC2  0100               	movlb	0	; () banked
  8722  000DC4  6FFD               	movwf	_periodicTimerValue& (0+255),b
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  8726  000DC6  0EE7               	movlw	low STR_149
  8727  000DC8  6F72               	movwf	oled_putString@string& (0+255),b
  8728  000DCA  0E7F               	movlw	high STR_149
  8729  000DCC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8730  000DCE  0E07               	movlw	7
  8731  000DD0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8732  000DD2  0E02               	movlw	2
  8733  000DD4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8734  000DD6  EC73  F025         	call	_oled_putString	;wreg free
  8735                           
  8736                           ;MOTEapp.c: 897: break;
  8737  000DDA  0012               	return	
  8738  000DDC                     l564:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  8742  000DDC  69FD               	setf	_periodicTimerValue& (0+255),b
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  8746  000DDE  0EEF               	movlw	low STR_128
  8747  000DE0  6F72               	movwf	oled_putString@string& (0+255),b
  8748  000DE2  0E7F               	movlw	high STR_128
  8749  000DE4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8750  000DE6  0E07               	movlw	7
  8751  000DE8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8752  000DEA  0E02               	movlw	2
  8753  000DEC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8754  000DEE  EC73  F025         	call	_oled_putString	;wreg free
  8755                           
  8756                           ;MOTEapp.c: 902: }
  8757                           
  8758                           ;MOTEapp.c: 901: break;
  8759  000DF2  0012               	return	
  8760  000DF4                     l556:
  8761  000DF4  0100               	movlb	0	; () banked
  8762  000DF6  51FE               	movf	_periodicUpValue& (0+255),w,b
  8763                           
  8764                           ; Switch size 1, requested type "space"
  8765                           ; Number of cases is 6, Range of values is 0 to 5
  8766                           ; switch strategies available:
  8767                           ; Name         Instructions Cycles
  8768                           ; simple_byte           19    10 (average)
  8769                           ;	Chosen strategy is simple_byte
  8770  000DF8  0A00               	xorlw	0	; case 0
  8771  000DFA  B4D8               	btfsc	status,2,c
  8772  000DFC  D7AA               	goto	l557
  8773  000DFE  0A01               	xorlw	1	; case 1
  8774  000E00  B4D8               	btfsc	status,2,c
  8775  000E02  D7B4               	goto	l560
  8776  000E04  0A03               	xorlw	3	; case 2
  8777  000E06  B4D8               	btfsc	status,2,c
  8778  000E08  D7BF               	goto	l561
  8779  000E0A  0A01               	xorlw	1	; case 3
  8780  000E0C  B4D8               	btfsc	status,2,c
  8781  000E0E  D7CA               	goto	l562
  8782  000E10  0A07               	xorlw	7	; case 4
  8783  000E12  B4D8               	btfsc	status,2,c
  8784  000E14  D7D5               	goto	l563
  8785  000E16  0A01               	xorlw	1	; case 5
  8786  000E18  B4D8               	btfsc	status,2,c
  8787  000E1A  D7E0               	goto	l564
  8788  000E1C  D79A               	goto	l557
  8789  000E1E                     
  8790                           ; BSR set to: 0
  8791                           ;MOTEapp.c: 906: if (changeStates)
  8792                           
  8793                           ; BSR set to: 0
  8794  000E1E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8795  000E20  B4D8               	btfsc	status,2,c
  8796  000E22  D01E               	goto	l566
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;MOTEapp.c: 907: {
  8800                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  8801  000E24  51FC               	movf	_dataRateValue& (0+255),w,b
  8802  000E26  EC87  F011         	call	_MOTEapp_SetDataRateSetting
  8803                           
  8804                           ;MOTEapp.c: 911: oled_clear();
  8805  000E2A  ECAD  F02B         	call	_oled_clear	;wreg free
  8806                           
  8807                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  8808  000E2E  0ECB               	movlw	low STR_151
  8809  000E30  0100               	movlb	0	; () banked
  8810  000E32  6F72               	movwf	oled_putString@string& (0+255),b
  8811  000E34  0E7B               	movlw	high STR_151
  8812  000E36  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8813  000E38  0E00               	movlw	0
  8814  000E3A  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8815  000E3C  0E00               	movlw	0
  8816  000E3E  6F75               	movwf	oled_putString@start_page& (0+255),b
  8817  000E40  EC73  F025         	call	_oled_putString	;wreg free
  8818                           
  8819                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  8820  000E44  0E93               	movlw	low STR_152
  8821  000E46  0100               	movlb	0	; () banked
  8822  000E48  6F72               	movwf	oled_putString@string& (0+255),b
  8823  000E4A  0E7C               	movlw	high STR_152
  8824  000E4C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8825  000E4E  0E00               	movlw	0
  8826  000E50  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8827  000E52  0E03               	movlw	3
  8828  000E54  6F75               	movwf	oled_putString@start_page& (0+255),b
  8829  000E56  EC73  F025         	call	_oled_putString	;wreg free
  8830                           
  8831                           ;MOTEapp.c: 914: runningState = runningSleep;
  8832  000E5A  0E0F               	movlw	15
  8833  000E5C  0100               	movlb	0	; () banked
  8834  000E5E  6FF3               	movwf	_runningState& (0+255),b
  8835  000E60                     l566:
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;MOTEapp.c: 915: }
  8839                           ;MOTEapp.c: 916: if (selectButton)
  8840                           
  8841                           ; BSR set to: 0
  8842  000E60  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8843  000E62  B4D8               	btfsc	status,2,c
  8844  000E64  0012               	return	
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;MOTEapp.c: 917: {
  8848                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  8849  000E66  0E06               	movlw	6
  8850  000E68  61FC               	cpfslt	_dataRateValue& (0+255),b
  8851  000E6A  D00A               	goto	l568
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;MOTEapp.c: 919: {
  8855                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  8856  000E6C  05EE               	decf	_rnModule& (0+255),w,b
  8857  000E6E  A4D8               	btfss	status,2,c
  8858  000E70  D005               	goto	l569
  8859                           
  8860                           ; BSR set to: 0
  8861  000E72  0E03               	movlw	3
  8862  000E74  65FC               	cpfsgt	_dataRateValue& (0+255),b
  8863  000E76  D002               	goto	l569
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;MOTEapp.c: 921: dataRateValue = 6;
  8867  000E78  0E06               	movlw	6
  8868  000E7A  D003               	goto	L5
  8869  000E7C                     l569:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;MOTEapp.c: 922: else
  8873                           ;MOTEapp.c: 923: dataRateValue++;
  8874                           
  8875                           ; BSR set to: 0
  8876  000E7C  2BFC               	incf	_dataRateValue& (0+255),f,b
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;MOTEapp.c: 924: }
  8880  000E7E  D056               	goto	l572
  8881  000E80                     l568:
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;MOTEapp.c: 925: else {
  8885                           ;MOTEapp.c: 926: dataRateValue = 0;
  8886                           
  8887                           ; BSR set to: 0
  8888  000E80  0E00               	movlw	0
  8889  000E82                     L5:
  8890  000E82  6FFC               	movwf	_dataRateValue& (0+255),b
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;MOTEapp.c: 927: }
  8894                           ;MOTEapp.c: 929: switch (dataRateValue)
  8895  000E84  D053               	goto	l572
  8896  000E86                     
  8897                           ; BSR set to: 0
  8898                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  8899                           
  8900                           ; BSR set to: 0
  8901                           
  8902                           ;MOTEapp.c: 932: case 0:
  8903                           
  8904                           ; BSR set to: 0
  8905  000E86  0EC7               	movlw	low STR_138
  8906  000E88  6F72               	movwf	oled_putString@string& (0+255),b
  8907  000E8A  0E7F               	movlw	high STR_138
  8908  000E8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8909  000E8E  0E0A               	movlw	10
  8910  000E90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8911  000E92  0E02               	movlw	2
  8912  000E94  6F75               	movwf	oled_putString@start_page& (0+255),b
  8913  000E96  EC73  F025         	call	_oled_putString	;wreg free
  8914                           
  8915                           ;MOTEapp.c: 934: break;
  8916  000E9A  0012               	return	
  8917  000E9C                     
  8918                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  8919  000E9C  0ECB               	movlw	low STR_139
  8920  000E9E  0100               	movlb	0	; () banked
  8921  000EA0  6F72               	movwf	oled_putString@string& (0+255),b
  8922  000EA2  0E7F               	movlw	high STR_139
  8923  000EA4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8924  000EA6  0E0A               	movlw	10
  8925  000EA8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8926  000EAA  0E02               	movlw	2
  8927  000EAC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8928  000EAE  EC73  F025         	call	_oled_putString	;wreg free
  8929                           
  8930                           ;MOTEapp.c: 937: break;
  8931  000EB2  0012               	return	
  8932  000EB4                     
  8933                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  8934  000EB4  0ECF               	movlw	low STR_140
  8935  000EB6  0100               	movlb	0	; () banked
  8936  000EB8  6F72               	movwf	oled_putString@string& (0+255),b
  8937  000EBA  0E7F               	movlw	high STR_140
  8938  000EBC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8939  000EBE  0E0A               	movlw	10
  8940  000EC0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8941  000EC2  0E02               	movlw	2
  8942  000EC4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8943  000EC6  EC73  F025         	call	_oled_putString	;wreg free
  8944                           
  8945                           ;MOTEapp.c: 940: break;
  8946  000ECA  0012               	return	
  8947  000ECC                     
  8948                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  8949  000ECC  0ED3               	movlw	low STR_141
  8950  000ECE  0100               	movlb	0	; () banked
  8951  000ED0  6F72               	movwf	oled_putString@string& (0+255),b
  8952  000ED2  0E7F               	movlw	high STR_141
  8953  000ED4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8954  000ED6  0E0A               	movlw	10
  8955  000ED8  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8956  000EDA  0E02               	movlw	2
  8957  000EDC  6F75               	movwf	oled_putString@start_page& (0+255),b
  8958  000EDE  EC73  F025         	call	_oled_putString	;wreg free
  8959                           
  8960                           ;MOTEapp.c: 943: break;
  8961  000EE2  0012               	return	
  8962  000EE4                     
  8963                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  8964  000EE4  0ED7               	movlw	low STR_142
  8965  000EE6  0100               	movlb	0	; () banked
  8966  000EE8  6F72               	movwf	oled_putString@string& (0+255),b
  8967  000EEA  0E7F               	movlw	high STR_142
  8968  000EEC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8969  000EEE  0E0A               	movlw	10
  8970  000EF0  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8971  000EF2  0E02               	movlw	2
  8972  000EF4  6F75               	movwf	oled_putString@start_page& (0+255),b
  8973  000EF6  EC73  F025         	call	_oled_putString	;wreg free
  8974                           
  8975                           ;MOTEapp.c: 946: break;
  8976  000EFA  0012               	return	
  8977  000EFC                     
  8978                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  8979  000EFC  0EDB               	movlw	low STR_143
  8980  000EFE  0100               	movlb	0	; () banked
  8981  000F00  6F72               	movwf	oled_putString@string& (0+255),b
  8982  000F02  0E7F               	movlw	high STR_143
  8983  000F04  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8984  000F06  0E0A               	movlw	10
  8985  000F08  6F74               	movwf	oled_putString@station_dot& (0+255),b
  8986  000F0A  0E02               	movlw	2
  8987  000F0C  6F75               	movwf	oled_putString@start_page& (0+255),b
  8988  000F0E  EC73  F025         	call	_oled_putString	;wreg free
  8989                           
  8990                           ;MOTEapp.c: 949: break;
  8991  000F12  0012               	return	
  8992  000F14                     
  8993                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  8994  000F14  0EF3               	movlw	low STR_144
  8995  000F16  0100               	movlb	0	; () banked
  8996  000F18  6F72               	movwf	oled_putString@string& (0+255),b
  8997  000F1A  0E7F               	movlw	high STR_144
  8998  000F1C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8999  000F1E  0E0A               	movlw	10
  9000  000F20  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9001  000F22  0E02               	movlw	2
  9002  000F24  6F75               	movwf	oled_putString@start_page& (0+255),b
  9003  000F26  EC73  F025         	call	_oled_putString	;wreg free
  9004                           
  9005                           ;MOTEapp.c: 953: }
  9006                           
  9007                           ;MOTEapp.c: 952: break;
  9008  000F2A  0012               	return	
  9009  000F2C                     l572:
  9010  000F2C  0100               	movlb	0	; () banked
  9011  000F2E  51FC               	movf	_dataRateValue& (0+255),w,b
  9012                           
  9013                           ; Switch size 1, requested type "space"
  9014                           ; Number of cases is 7, Range of values is 0 to 6
  9015                           ; switch strategies available:
  9016                           ; Name         Instructions Cycles
  9017                           ; simple_byte           22    12 (average)
  9018                           ;	Chosen strategy is simple_byte
  9019  000F30  0A00               	xorlw	0	; case 0
  9020  000F32  B4D8               	btfsc	status,2,c
  9021  000F34  D7A8               	goto	l573
  9022  000F36  0A01               	xorlw	1	; case 1
  9023  000F38  B4D8               	btfsc	status,2,c
  9024  000F3A  D7B0               	goto	l576
  9025  000F3C  0A03               	xorlw	3	; case 2
  9026  000F3E  B4D8               	btfsc	status,2,c
  9027  000F40  D7B9               	goto	l577
  9028  000F42  0A01               	xorlw	1	; case 3
  9029  000F44  B4D8               	btfsc	status,2,c
  9030  000F46  D7C2               	goto	l578
  9031  000F48  0A07               	xorlw	7	; case 4
  9032  000F4A  B4D8               	btfsc	status,2,c
  9033  000F4C  D7CB               	goto	l579
  9034  000F4E  0A01               	xorlw	1	; case 5
  9035  000F50  B4D8               	btfsc	status,2,c
  9036  000F52  D7D4               	goto	l580
  9037  000F54  0A03               	xorlw	3	; case 6
  9038  000F56  B4D8               	btfsc	status,2,c
  9039  000F58  D7DD               	goto	l581
  9040  000F5A  D795               	goto	l573
  9041  000F5C                     
  9042                           ; BSR set to: 0
  9043                           ;MOTEapp.c: 957: if (selectButton)
  9044                           
  9045                           ; BSR set to: 0
  9046  000F5C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9047  000F5E  B4D8               	btfsc	status,2,c
  9048  000F60  D00C               	goto	l585
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;MOTEapp.c: 958: {
  9052                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9053  000F62  EC23  F01B         	call	_moteApp_GoToSleep	;wreg free
  9054  000F66  0900               	iorlw	0
  9055  000F68  B4D8               	btfsc	status,2,c
  9056  000F6A  D004               	goto	l584
  9057                           
  9058                           ;MOTEapp.c: 960: {
  9059                           ;MOTEapp.c: 961: changeStates = 1;
  9060  000F6C  0E01               	movlw	1
  9061  000F6E  0100               	movlb	0	; () banked
  9062  000F70  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9063                           
  9064                           ;MOTEapp.c: 962: }
  9065  000F72  D003               	goto	l585
  9066  000F74                     l584:
  9067                           
  9068                           ;MOTEapp.c: 963: else
  9069                           ;MOTEapp.c: 964: {
  9070                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9071                           
  9072                           ; BSR set to: 0
  9073  000F74  0E09               	movlw	9
  9074  000F76  0100               	movlb	0	; () banked
  9075  000F78  6FF0               	movwf	_secTicker& (0+255),b
  9076  000F7A                     l585:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;MOTEapp.c: 966: }
  9080                           ;MOTEapp.c: 967: }
  9081                           ;MOTEapp.c: 968: if (changeStates)
  9082                           
  9083                           ; BSR set to: 0
  9084  000F7A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9085  000F7C  B4D8               	btfsc	status,2,c
  9086  000F7E  0012               	return	
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;MOTEapp.c: 969: {
  9090                           ;MOTEapp.c: 970: oled_clear();
  9091  000F80  ECAD  F02B         	call	_oled_clear	;wreg free
  9092                           
  9093                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9094  000F84  0E21               	movlw	low STR_75
  9095  000F86  0100               	movlb	0	; () banked
  9096  000F88  6F72               	movwf	oled_putString@string& (0+255),b
  9097  000F8A  0E7B               	movlw	high STR_75
  9098  000F8C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9099  000F8E  0E00               	movlw	0
  9100  000F90  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9101  000F92  0E00               	movlw	0
  9102  000F94  6F75               	movwf	oled_putString@start_page& (0+255),b
  9103  000F96  EC73  F025         	call	_oled_putString	;wreg free
  9104                           
  9105                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9106  000F9A  0E87               	movlw	low STR_76
  9107  000F9C  0100               	movlb	0	; () banked
  9108  000F9E  6F72               	movwf	oled_putString@string& (0+255),b
  9109  000FA0  0E7B               	movlw	high STR_76
  9110  000FA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9111  000FA4  0E00               	movlw	0
  9112  000FA6  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9113  000FA8  0E01               	movlw	1
  9114  000FAA  6F75               	movwf	oled_putString@start_page& (0+255),b
  9115  000FAC  EC73  F025         	call	_oled_putString	;wreg free
  9116                           
  9117                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9118  000FB0  0E83               	movlw	low STR_77
  9119  000FB2  0100               	movlb	0	; () banked
  9120  000FB4  6F72               	movwf	oled_putString@string& (0+255),b
  9121  000FB6  0E7C               	movlw	high STR_77
  9122  000FB8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9123  000FBA  0E00               	movlw	0
  9124  000FBC  6F74               	movwf	oled_putString@station_dot& (0+255),b
  9125  000FBE  0E03               	movlw	3
  9126  000FC0  6F75               	movwf	oled_putString@start_page& (0+255),b
  9127  000FC2  EC73  F025         	call	_oled_putString	;wreg free
  9128                           
  9129                           ;MOTEapp.c: 974: runningState = runningUplink;
  9130  000FC6  0E06               	movlw	6
  9131  000FC8  0100               	movlb	0	; () banked
  9132  000FCA  6FF3               	movwf	_runningState& (0+255),b
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;MOTEapp.c: 977: }
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;MOTEapp.c: 975: }
  9139                           ;MOTEapp.c: 976: break;
  9140  000FCC  0012               	return	
  9141  000FCE                     l466:
  9142                           
  9143                           ; BSR set to: 0
  9144                           
  9145                           ; BSR set to: 0
  9146  000FCE  51F3               	movf	_runningState& (0+255),w,b
  9147                           
  9148                           ; Switch size 1, requested type "space"
  9149                           ; Number of cases is 12, Range of values is 0 to 15
  9150                           ; switch strategies available:
  9151                           ; Name         Instructions Cycles
  9152                           ; simple_byte           37    19 (average)
  9153                           ;	Chosen strategy is simple_byte
  9154  000FD0  0A00               	xorlw	0	; case 0
  9155  000FD2  B4D8               	btfsc	status,2,c
  9156  000FD4  EF75  F001         	goto	l472
  9157  000FD8  0A01               	xorlw	1	; case 1
  9158  000FDA  B4D8               	btfsc	status,2,c
  9159  000FDC  D4BC               	goto	l516
  9160  000FDE  0A03               	xorlw	3	; case 2
  9161  000FE0  B4D8               	btfsc	status,2,c
  9162  000FE2  D5E8               	goto	l537
  9163  000FE4  0A01               	xorlw	1	; case 3
  9164  000FE6  B4D8               	btfsc	status,2,c
  9165  000FE8  D71A               	goto	l565
  9166  000FEA  0A05               	xorlw	5	; case 6
  9167  000FEC  B4D8               	btfsc	status,2,c
  9168  000FEE  EFA3  F001         	goto	l476
  9169  000FF2  0A01               	xorlw	1	; case 7
  9170  000FF4  B4D8               	btfsc	status,2,c
  9171  000FF6  EF69  F002         	goto	l483
  9172  000FFA  0A0F               	xorlw	15	; case 8
  9173  000FFC  B4D8               	btfsc	status,2,c
  9174  000FFE  EFD4  F002         	goto	l489
  9175  001002  0A02               	xorlw	2	; case 10
  9176  001004  B4D8               	btfsc	status,2,c
  9177  001006  D404               	goto	l508
  9178  001008  0A01               	xorlw	1	; case 11
  9179  00100A  B4D8               	btfsc	status,2,c
  9180  00100C  D477               	goto	l512
  9181  00100E  0A07               	xorlw	7	; case 12
  9182  001010  B4D8               	btfsc	status,2,c
  9183  001012  D511               	goto	l522
  9184  001014  0A01               	xorlw	1	; case 13
  9185  001016  B4D8               	btfsc	status,2,c
  9186  001018  D5FB               	goto	l541
  9187  00101A  0A02               	xorlw	2	; case 15
  9188  00101C  B4D8               	btfsc	status,2,c
  9189  00101E  D79E               	goto	l582
  9190  001020  EF74  F001         	goto	l467
  9191  001024                     __end_of_moteRunningProcess:
  9192                           	opt stack 0
  9193                           tblptru	equ	0xFF8
  9194                           tblptrh	equ	0xFF7
  9195                           tblptrl	equ	0xFF6
  9196                           tablat	equ	0xFF5
  9197                           prodh	equ	0xFF4
  9198                           prodl	equ	0xFF3
  9199                           intcon	equ	0xFF2
  9200                           postinc0	equ	0xFEE
  9201                           wreg	equ	0xFE8
  9202                           indf1	equ	0xFE7
  9203                           postdec1	equ	0xFE5
  9204                           fsr1h	equ	0xFE2
  9205                           fsr1l	equ	0xFE1
  9206                           indf2	equ	0xFDF
  9207                           fsr2h	equ	0xFDA
  9208                           fsr2l	equ	0xFD9
  9209                           status	equ	0xFD8
  9210                           
  9211 ;; *************** function _sendDataCommand *****************
  9212 ;; Defined at:
  9213 ;;		line 1124 in file "../Includes/Board/MOTEapp.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9216 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9217 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9218 ;;		 -> dataBuffer(16), 
  9219 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9222 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9232 ;;      Params:         0       5       0       0       0       0       0       0       0
  9233 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9234 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9235 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9236 ;;Total ram usage:        8 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:   13
  9239 ;; This function calls:
  9240 ;;		_EUSART_Write
  9241 ;;		_EndLine
  9242 ;;		_hexToStr
  9243 ;; This function is called by:
  9244 ;;		_moteRunningProcess
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text11
  9249  003B12                     __ptext11:
  9250                           	opt stack 0
  9251  003B12                     _sendDataCommand:
  9252                           	opt stack 15
  9253                           
  9254                           ;MOTEapp.c: 1127: while (*string)
  9255                           
  9256                           ;incstack = 0
  9257  003B12  D00B               	goto	l642
  9258  003B14                     
  9259                           ;MOTEapp.c: 1128: {
  9260                           ;MOTEapp.c: 1129: EUSART_Write(*string++);
  9261  003B14  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9262  003B18  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9263  003B1C                     	if	0	;tblptru may be non-zero
  9264  003B1C                     	endif
  9265  003B1C                     	if	0	;tblptru may be non-zero
  9266  003B1C                     	endif
  9267  003B1C  0008               	tblrd		*
  9268  003B1E  50F5               	movf	tablat,w,c
  9269  003B20  ECC9  F028         	call	_EUSART_Write
  9270  003B24  0100               	movlb	0	; () banked
  9271  003B26  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9272  003B28  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9273  003B2A                     l642:
  9274                           
  9275                           ; BSR set to: 0
  9276  003B2A  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9277  003B2E  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9278  003B32                     	if	0	;tblptru may be non-zero
  9279  003B32                     	endif
  9280  003B32                     	if	0	;tblptru may be non-zero
  9281  003B32                     	endif
  9282  003B32  0008               	tblrd		*
  9283  003B34  50F5               	movf	tablat,w,c
  9284  003B36  0900               	iorlw	0
  9285  003B38  A4D8               	btfss	status,2,c
  9286  003B3A  D7EC               	goto	l643
  9287                           
  9288                           ;MOTEapp.c: 1130: }
  9289                           ;MOTEapp.c: 1132: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9290  003B3C  0E00               	movlw	0
  9291  003B3E  0100               	movlb	0	; () banked
  9292  003B40  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9293  003B42                     l9572:
  9294                           
  9295                           ; BSR set to: 0
  9296  003B42  0E02               	movlw	2
  9297  003B44  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9298  003B46  D001               	goto	l645
  9299  003B48  D00E               	goto	u8090
  9300  003B4A                     l645:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;MOTEapp.c: 1133: {
  9304                           ;MOTEapp.c: 1134: EUSART_Write(appData[byteCount]);
  9305                           
  9306                           ; BSR set to: 0
  9307  003B4A  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9308  003B4C  0D01               	mullw	1
  9309  003B4E  50F3               	movf	prodl,w,c
  9310  003B50  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9311  003B52  6ED9               	movwf	fsr2l,c
  9312  003B54  50F4               	movf	prodh,w,c
  9313  003B56  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9314  003B58  6EDA               	movwf	fsr2h,c
  9315  003B5A  50DF               	movf	indf2,w,c
  9316  003B5C  ECC9  F028         	call	_EUSART_Write
  9317  003B60  0100               	movlb	0	; () banked
  9318  003B62  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9319  003B64  D7EE               	goto	l9572
  9320  003B66                     u8090:
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;MOTEapp.c: 1135: }
  9324                           ;MOTEapp.c: 1137: EUSART_Write(appData[3]);
  9325                           
  9326                           ; BSR set to: 0
  9327  003B66  EE20 F003          	lfsr	2,3
  9328  003B6A  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9329  003B6C  26D9               	addwf	fsr2l,f,c
  9330  003B6E  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9331  003B70  22DA               	addwfc	fsr2h,f,c
  9332  003B72  50DF               	movf	indf2,w,c
  9333  003B74  ECC9  F028         	call	_EUSART_Write
  9334                           
  9335                           ;MOTEapp.c: 1139: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9336  003B78  0E04               	movlw	4
  9337  003B7A  0100               	movlb	0	; () banked
  9338  003B7C  6F68               	movwf	sendDataCommand@byteCount_1627& (0+255),b
  9339  003B7E  D021               	goto	l647
  9340  003B80                     
  9341                           ; BSR set to: 0
  9342                           ;MOTEapp.c: 1140: {
  9343                           ;MOTEapp.c: 1141: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9344                           
  9345                           ; BSR set to: 0
  9346  003B80  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9347  003B82  0D01               	mullw	1
  9348  003B84  50F3               	movf	prodl,w,c
  9349  003B86  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9350  003B88  6ED9               	movwf	fsr2l,c
  9351  003B8A  50F4               	movf	prodh,w,c
  9352  003B8C  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9353  003B8E  6EDA               	movwf	fsr2h,c
  9354  003B90  50DF               	movf	indf2,w,c
  9355  003B92  6F66               	movwf	??_sendDataCommand& (0+255),b
  9356  003B94  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9357  003B96  0B0F               	andlw	15
  9358  003B98  EC87  F02A         	call	_hexToStr
  9359  003B9C  ECC9  F028         	call	_EUSART_Write
  9360                           
  9361                           ;MOTEapp.c: 1142: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9362  003BA0  0100               	movlb	0	; () banked
  9363  003BA2  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
  9364  003BA4  0D01               	mullw	1
  9365  003BA6  50F3               	movf	prodl,w,c
  9366  003BA8  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9367  003BAA  6ED9               	movwf	fsr2l,c
  9368  003BAC  50F4               	movf	prodh,w,c
  9369  003BAE  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9370  003BB0  6EDA               	movwf	fsr2h,c
  9371  003BB2  50DF               	movf	indf2,w,c
  9372  003BB4  0B0F               	andlw	15
  9373  003BB6  EC87  F02A         	call	_hexToStr
  9374  003BBA  ECC9  F028         	call	_EUSART_Write
  9375  003BBE  0100               	movlb	0	; () banked
  9376  003BC0  2B68               	incf	sendDataCommand@byteCount_1627& (0+255),f,b
  9377  003BC2                     l647:
  9378                           
  9379                           ; BSR set to: 0
  9380                           
  9381                           ; BSR set to: 0
  9382  003BC2  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9383  003BC4  5D68               	subwf	sendDataCommand@byteCount_1627& (0+255),w,b
  9384  003BC6  A0D8               	btfss	status,0,c
  9385  003BC8  D7DB               	goto	l648
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;MOTEapp.c: 1143: }
  9389                           ;MOTEapp.c: 1144: EndLine();
  9390                           
  9391                           ; BSR set to: 0
  9392  003BCA  EC44  F02C         	call	_EndLine	;wreg free
  9393  003BCE  0012               	return		;funcret
  9394  003BD0                     __end_of_sendDataCommand:
  9395                           	opt stack 0
  9396                           tblptru	equ	0xFF8
  9397                           tblptrh	equ	0xFF7
  9398                           tblptrl	equ	0xFF6
  9399                           tablat	equ	0xFF5
  9400                           prodh	equ	0xFF4
  9401                           prodl	equ	0xFF3
  9402                           intcon	equ	0xFF2
  9403                           postinc0	equ	0xFEE
  9404                           wreg	equ	0xFE8
  9405                           indf1	equ	0xFE7
  9406                           postdec1	equ	0xFE5
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           indf2	equ	0xFDF
  9410                           fsr2h	equ	0xFDA
  9411                           fsr2l	equ	0xFD9
  9412                           status	equ	0xFD8
  9413                           
  9414 ;; *************** function _hexToStr *****************
  9415 ;; Defined at:
  9416 ;;		line 1156 in file "../Includes/Board/MOTEapp.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  character       1    wreg     unsigned char 
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  character       1    0[BANK0 ] unsigned char 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      unsigned char 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0
  9431 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9433 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9434 ;;Total ram usage:        1 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; Hardware stack levels required when called:   11
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		_sendDataCommand
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text12
  9445  00550E                     __ptext12:
  9446                           	opt stack 0
  9447  00550E                     _hexToStr:
  9448                           	opt stack 16
  9449                           
  9450                           ;incstack = 0
  9451                           ;hexToStr@character stored from wreg
  9452  00550E  0100               	movlb	0	; () banked
  9453  005510  6F60               	movwf	hexToStr@character& (0+255),b
  9454                           
  9455                           ;MOTEapp.c: 1159: character = character & 0x0F;
  9456  005512  0100               	movlb	0	; () banked
  9457  005514  5160               	movf	hexToStr@character& (0+255),w,b
  9458  005516  0B0F               	andlw	15
  9459  005518  6F60               	movwf	hexToStr@character& (0+255),b
  9460                           
  9461                           ;MOTEapp.c: 1161: if (character < 0x0A)
  9462  00551A  0E0A               	movlw	10
  9463  00551C  6160               	cpfslt	hexToStr@character& (0+255),b
  9464  00551E  D003               	goto	l658
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;MOTEapp.c: 1162: {
  9468                           ;MOTEapp.c: 1163: return character + '0';
  9469  005520  5160               	movf	hexToStr@character& (0+255),w,b
  9470  005522  0F30               	addlw	48
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;MOTEapp.c: 1164: }
  9474                           
  9475                           ; BSR set to: 0
  9476  005524  0012               	return	
  9477  005526                     l658:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;MOTEapp.c: 1165: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9481                           
  9482                           ; BSR set to: 0
  9483  005526  0E09               	movlw	9
  9484  005528  6560               	cpfsgt	hexToStr@character& (0+255),b
  9485  00552A  D006               	goto	l661
  9486                           
  9487                           ; BSR set to: 0
  9488  00552C  0E10               	movlw	16
  9489  00552E  6160               	cpfslt	hexToStr@character& (0+255),b
  9490  005530  D003               	goto	l661
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;MOTEapp.c: 1166: {
  9494                           ;MOTEapp.c: 1167: return character + '0' + 7;
  9495  005532  5160               	movf	hexToStr@character& (0+255),w,b
  9496  005534  0F37               	addlw	55
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;MOTEapp.c: 1168: }
  9500                           
  9501                           ; BSR set to: 0
  9502  005536  0012               	return	
  9503  005538                     l661:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;MOTEapp.c: 1169: else
  9507                           ;MOTEapp.c: 1170: {
  9508                           ;MOTEapp.c: 1171: return 0;
  9509                           
  9510                           ; BSR set to: 0
  9511  005538  0E00               	movlw	0
  9512                           
  9513                           ; BSR set to: 0
  9514                           
  9515                           ; BSR set to: 0
  9516  00553A  0012               	return	
  9517  00553C                     __end_of_hexToStr:
  9518                           	opt stack 0
  9519                           tblptru	equ	0xFF8
  9520                           tblptrh	equ	0xFF7
  9521                           tblptrl	equ	0xFF6
  9522                           tablat	equ	0xFF5
  9523                           prodh	equ	0xFF4
  9524                           prodl	equ	0xFF3
  9525                           intcon	equ	0xFF2
  9526                           postinc0	equ	0xFEE
  9527                           wreg	equ	0xFE8
  9528                           indf1	equ	0xFE7
  9529                           postdec1	equ	0xFE5
  9530                           fsr1h	equ	0xFE2
  9531                           fsr1l	equ	0xFE1
  9532                           indf2	equ	0xFDF
  9533                           fsr2h	equ	0xFDA
  9534                           fsr2l	equ	0xFD9
  9535                           status	equ	0xFD8
  9536                           
  9537 ;; *************** function _oled_putint8 *****************
  9538 ;; Defined at:
  9539 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  number          1    wreg     unsigned char 
  9542 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9543 ;;  start_page      1   24[BANK0 ] unsigned char 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  number          1   32[BANK0 ] unsigned char 
  9546 ;;  numData         6   26[BANK0 ] struct .
  9547 ;;  negative        1   25[BANK0 ] unsigned char 
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9557 ;;      Params:         0       2       0       0       0       0       0       0       0
  9558 ;;      Locals:         0       8       0       0       0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9560 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9561 ;;Total ram usage:       10 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:   15
  9564 ;; This function calls:
  9565 ;;		___awmod
  9566 ;;		___lbdiv
  9567 ;;		_oled_putString
  9568 ;; This function is called by:
  9569 ;;		_moteHandler
  9570 ;;		_moteRunningProcess
  9571 ;;		_moteApp_testSensors
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text13
  9576  004170                     __ptext13:
  9577                           	opt stack 0
  9578  004170                     _oled_putint8:
  9579                           	opt stack 13
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;incstack = 0
  9583                           ;oled_putint8@number stored from wreg
  9584  004170  0100               	movlb	0	; () banked
  9585  004172  6F80               	movwf	oled_putint8@number& (0+255),b
  9586                           
  9587                           ;SSD1306oLED.c: 280: display_data_t numData;
  9588                           ;SSD1306oLED.c: 281: bool negative = 0;
  9589  004174  0E00               	movlw	0
  9590  004176  0100               	movlb	0	; () banked
  9591  004178  6F79               	movwf	oled_putint8@negative& (0+255),b
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;SSD1306oLED.c: 283: if(number & 0x80)
  9595  00417A  AF80               	btfss	oled_putint8@number& (0+255),7,b
  9596  00417C  D002               	goto	l1032
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;SSD1306oLED.c: 284: negative = 1;
  9600  00417E  0E01               	movlw	1
  9601  004180  6F79               	movwf	oled_putint8@negative& (0+255),b
  9602  004182                     l1032:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
  9606                           
  9607                           ; BSR set to: 0
  9608  004182  5180               	movf	oled_putint8@number& (0+255),w,b
  9609  004184  0B7F               	andlw	127
  9610  004186  6F80               	movwf	oled_putint8@number& (0+255),b
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
  9614  004188  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9615  00418C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9616  00418E  0E00               	movlw	0
  9617  004190  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9618  004192  0E0A               	movlw	10
  9619  004194  6F62               	movwf	___awmod@divisor& (0+255),b
  9620  004196  EC03  F025         	call	___awmod	;wreg free
  9621  00419A  0100               	movlb	0	; () banked
  9622  00419C  5160               	movf	?___awmod& (0+255),w,b
  9623  00419E  0F30               	addlw	48
  9624  0041A0  6F7C               	movwf	(oled_putint8@numData+2)& (0+255),b
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;SSD1306oLED.c: 288: number /= 10;
  9628  0041A2  0E0A               	movlw	10
  9629  0041A4  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9630  0041A6  5180               	movf	oled_putint8@number& (0+255),w,b
  9631  0041A8  ECAA  F028         	call	___lbdiv
  9632  0041AC  0100               	movlb	0	; () banked
  9633  0041AE  6F80               	movwf	oled_putint8@number& (0+255),b
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
  9637  0041B0  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9638  0041B4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9639  0041B6  0E00               	movlw	0
  9640  0041B8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9641  0041BA  0E0A               	movlw	10
  9642  0041BC  6F62               	movwf	___awmod@divisor& (0+255),b
  9643  0041BE  EC03  F025         	call	___awmod	;wreg free
  9644  0041C2  0100               	movlb	0	; () banked
  9645  0041C4  5160               	movf	?___awmod& (0+255),w,b
  9646  0041C6  0F30               	addlw	48
  9647  0041C8  6F7B               	movwf	(oled_putint8@numData+1)& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;SSD1306oLED.c: 290: number /= 10;
  9651  0041CA  0E0A               	movlw	10
  9652  0041CC  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9653  0041CE  5180               	movf	oled_putint8@number& (0+255),w,b
  9654  0041D0  ECAA  F028         	call	___lbdiv
  9655  0041D4  0100               	movlb	0	; () banked
  9656  0041D6  6F80               	movwf	oled_putint8@number& (0+255),b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
  9660  0041D8  C080  F060         	movff	oled_putint8@number,___awmod@dividend
  9661  0041DC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9662  0041DE  0E00               	movlw	0
  9663  0041E0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9664  0041E2  0E0A               	movlw	10
  9665  0041E4  6F62               	movwf	___awmod@divisor& (0+255),b
  9666  0041E6  EC03  F025         	call	___awmod	;wreg free
  9667  0041EA  0100               	movlb	0	; () banked
  9668  0041EC  5160               	movf	?___awmod& (0+255),w,b
  9669  0041EE  0F30               	addlw	48
  9670  0041F0  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;SSD1306oLED.c: 292: if(negative)
  9674  0041F2  5179               	movf	oled_putint8@negative& (0+255),w,b
  9675  0041F4  B4D8               	btfsc	status,2,c
  9676  0041F6  D002               	goto	l1033
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;SSD1306oLED.c: 293: numData.d0 = '-';
  9680  0041F8  0E2D               	movlw	45
  9681  0041FA  6F7A               	movwf	oled_putint8@numData& (0+255),b
  9682  0041FC                     l1033:
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;SSD1306oLED.c: 295: numData.b[3]=0;
  9686  0041FC  0E00               	movlw	0
  9687  0041FE  6F7D               	movwf	(oled_putint8@numData+3)& (0+255),b
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
  9691  004200  0E7A               	movlw	low oled_putint8@numData
  9692  004202  6F72               	movwf	oled_putString@string& (0+255),b
  9693  004204  0E00               	movlw	high oled_putint8@numData
  9694  004206  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9695  004208  C077  F074         	movff	oled_putint8@station_dot,oled_putString@station_dot
  9696  00420C  C078  F075         	movff	oled_putint8@start_page,oled_putString@start_page
  9697  004210  EC73  F025         	call	_oled_putString	;wreg free
  9698  004214  0012               	return		;funcret
  9699  004216                     __end_of_oled_putint8:
  9700                           	opt stack 0
  9701                           tblptru	equ	0xFF8
  9702                           tblptrh	equ	0xFF7
  9703                           tblptrl	equ	0xFF6
  9704                           tablat	equ	0xFF5
  9705                           prodh	equ	0xFF4
  9706                           prodl	equ	0xFF3
  9707                           intcon	equ	0xFF2
  9708                           postinc0	equ	0xFEE
  9709                           wreg	equ	0xFE8
  9710                           indf1	equ	0xFE7
  9711                           postdec1	equ	0xFE5
  9712                           fsr1h	equ	0xFE2
  9713                           fsr1l	equ	0xFE1
  9714                           indf2	equ	0xFDF
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _oled_putUint8 *****************
  9720 ;; Defined at:
  9721 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  number          1    wreg     unsigned char 
  9724 ;;  station_dot     1   23[BANK0 ] unsigned char 
  9725 ;;  start_page      1   24[BANK0 ] unsigned char 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;  number          1   25[BANK0 ] unsigned char 
  9728 ;;  numData         6   26[BANK0 ] struct .
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9738 ;;      Params:         0       2       0       0       0       0       0       0       0
  9739 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9741 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9742 ;;Total ram usage:        9 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:   15
  9745 ;; This function calls:
  9746 ;;		___awmod
  9747 ;;		___lbdiv
  9748 ;;		_oled_putString
  9749 ;; This function is called by:
  9750 ;;		_moteRunningProcess
  9751 ;;		_test_adc
  9752 ;;		_ReadyByteFrame
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text14
  9757  004500                     __ptext14:
  9758                           	opt stack 0
  9759  004500                     _oled_putUint8:
  9760                           	opt stack 13
  9761                           
  9762                           ;incstack = 0
  9763                           ;oled_putUint8@number stored from wreg
  9764  004500  0100               	movlb	0	; () banked
  9765  004502  6F79               	movwf	oled_putUint8@number& (0+255),b
  9766                           
  9767                           ;SSD1306oLED.c: 266: display_data_t numData;
  9768                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
  9769  004504  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9770  004508  0100               	movlb	0	; () banked
  9771  00450A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9772  00450C  0E00               	movlw	0
  9773  00450E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9774  004510  0E0A               	movlw	10
  9775  004512  6F62               	movwf	___awmod@divisor& (0+255),b
  9776  004514  EC03  F025         	call	___awmod	;wreg free
  9777  004518  0100               	movlb	0	; () banked
  9778  00451A  5160               	movf	?___awmod& (0+255),w,b
  9779  00451C  0F30               	addlw	48
  9780  00451E  6F7C               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9781                           
  9782                           ;SSD1306oLED.c: 268: number /= 10;
  9783  004520  0E0A               	movlw	10
  9784  004522  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9785  004524  5179               	movf	oled_putUint8@number& (0+255),w,b
  9786  004526  ECAA  F028         	call	___lbdiv
  9787  00452A  0100               	movlb	0	; () banked
  9788  00452C  6F79               	movwf	oled_putUint8@number& (0+255),b
  9789                           
  9790                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
  9791  00452E  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9792  004532  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9793  004534  0E00               	movlw	0
  9794  004536  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9795  004538  0E0A               	movlw	10
  9796  00453A  6F62               	movwf	___awmod@divisor& (0+255),b
  9797  00453C  EC03  F025         	call	___awmod	;wreg free
  9798  004540  0100               	movlb	0	; () banked
  9799  004542  5160               	movf	?___awmod& (0+255),w,b
  9800  004544  0F30               	addlw	48
  9801  004546  6F7B               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9802                           
  9803                           ;SSD1306oLED.c: 270: number /= 10;
  9804  004548  0E0A               	movlw	10
  9805  00454A  6F60               	movwf	___lbdiv@divisor& (0+255),b
  9806  00454C  5179               	movf	oled_putUint8@number& (0+255),w,b
  9807  00454E  ECAA  F028         	call	___lbdiv
  9808  004552  0100               	movlb	0	; () banked
  9809  004554  6F79               	movwf	oled_putUint8@number& (0+255),b
  9810                           
  9811                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
  9812  004556  C079  F060         	movff	oled_putUint8@number,___awmod@dividend
  9813  00455A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9814  00455C  0E00               	movlw	0
  9815  00455E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9816  004560  0E0A               	movlw	10
  9817  004562  6F62               	movwf	___awmod@divisor& (0+255),b
  9818  004564  EC03  F025         	call	___awmod	;wreg free
  9819  004568  0100               	movlb	0	; () banked
  9820  00456A  5160               	movf	?___awmod& (0+255),w,b
  9821  00456C  0F30               	addlw	48
  9822  00456E  6F7A               	movwf	oled_putUint8@numData& (0+255),b
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;SSD1306oLED.c: 273: numData.b[3]=0;
  9826  004570  0E00               	movlw	0
  9827  004572  6F7D               	movwf	(oled_putUint8@numData+3)& (0+255),b
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
  9831  004574  0E7A               	movlw	low oled_putUint8@numData
  9832  004576  6F72               	movwf	oled_putString@string& (0+255),b
  9833  004578  0E00               	movlw	high oled_putUint8@numData
  9834  00457A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9835  00457C  C077  F074         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9836  004580  C078  F075         	movff	oled_putUint8@start_page,oled_putString@start_page
  9837  004584  EC73  F025         	call	_oled_putString	;wreg free
  9838  004588  0012               	return		;funcret
  9839  00458A                     __end_of_oled_putUint8:
  9840                           	opt stack 0
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           postinc0	equ	0xFEE
  9849                           wreg	equ	0xFE8
  9850                           indf1	equ	0xFE7
  9851                           postdec1	equ	0xFE5
  9852                           fsr1h	equ	0xFE2
  9853                           fsr1l	equ	0xFE1
  9854                           indf2	equ	0xFDF
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _moteApp_setSensorsInput *****************
  9860 ;; Defined at:
  9861 ;;		line 1387 in file "../Includes/Board/MOTEapp.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0
  9876 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9878 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9879 ;;Total ram usage:        2 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:   14
  9882 ;; This function calls:
  9883 ;;		_MOTEapp_getModuleResponse
  9884 ;;		_moteApp_delayms
  9885 ;;		_sendCommand
  9886 ;; This function is called by:
  9887 ;;		_moteRunningProcess
  9888 ;;		_moteApp_testSensors
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text15
  9893  00491C                     __ptext15:
  9894                           	opt stack 0
  9895  00491C                     _moteApp_setSensorsInput:
  9896                           	opt stack 14
  9897                           
  9898                           ;MOTEapp.c: 1389: uint16_t escapeCounter = 0;
  9899                           
  9900                           ;incstack = 0
  9901  00491C  0E00               	movlw	0
  9902  00491E  0100               	movlb	0	; () banked
  9903  004920  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9904  004922  0E00               	movlw	0
  9905  004924  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;MOTEapp.c: 1390: sendCommand("sys set pinmode GPIO13 ana");
  9909  004926  0ED3               	movlw	low STR_183
  9910  004928  6F61               	movwf	sendCommand@string& (0+255),b
  9911  00492A  0E79               	movlw	high STR_183
  9912  00492C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9913  00492E  EC0F  F02A         	call	_sendCommand	;wreg free
  9914                           
  9915                           ;MOTEapp.c: 1391: while ( !MOTEapp_getModuleResponse() )
  9916  004932  D009               	goto	l721
  9917  004934                     
  9918                           ;MOTEapp.c: 1392: {
  9919                           ;MOTEapp.c: 1393: if (++escapeCounter > 50000)
  9920  004934  0100               	movlb	0	; () banked
  9921  004936  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
  9922  004938  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
  9923  00493A  0E51               	movlw	81
  9924  00493C  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
  9925  00493E  0EC3               	movlw	195
  9926  004940  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
  9927  004942  B0D8               	btfsc	status,0,c
  9928  004944  D005               	goto	u8010
  9929  004946                     l721:
  9930                           
  9931                           ; BSR set to: 0
  9932                           
  9933                           ; BSR set to: 0
  9934  004946  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  9935  00494A  0900               	iorlw	0
  9936  00494C  B4D8               	btfsc	status,2,c
  9937  00494E  D7F2               	goto	l720
  9938  004950                     u8010:
  9939                           
  9940                           ;MOTEapp.c: 1395: }
  9941                           ;MOTEapp.c: 1396: escapeCounter = 0;
  9942  004950  0E00               	movlw	0
  9943  004952  0100               	movlb	0	; () banked
  9944  004954  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
  9945  004956  0E00               	movlw	0
  9946  004958  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;MOTEapp.c: 1397: sendCommand("sys set pinmode GPIO12 ana");
  9950  00495A  0EB8               	movlw	low STR_184
  9951  00495C  6F61               	movwf	sendCommand@string& (0+255),b
  9952  00495E  0E79               	movlw	high STR_184
  9953  004960  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  9954  004962  EC0F  F02A         	call	_sendCommand	;wreg free
  9955                           
  9956                           ;MOTEapp.c: 1398: while ( !MOTEapp_getModuleResponse() )
  9957  004966  D009               	goto	l725
  9958  004968                     
  9959                           ;MOTEapp.c: 1399: {
  9960                           ;MOTEapp.c: 1400: if (++escapeCounter > 50000)
  9961  004968  0100               	movlb	0	; () banked
  9962  00496A  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
  9963  00496C  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
  9964  00496E  0E51               	movlw	81
  9965  004970  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
  9966  004972  0EC3               	movlw	195
  9967  004974  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
  9968  004976  B0D8               	btfsc	status,0,c
  9969  004978  D005               	goto	u8030
  9970  00497A                     l725:
  9971                           
  9972                           ; BSR set to: 0
  9973                           
  9974                           ; BSR set to: 0
  9975  00497A  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  9976  00497E  0900               	iorlw	0
  9977  004980  B4D8               	btfsc	status,2,c
  9978  004982  D7F2               	goto	l724
  9979  004984                     u8030:
  9980                           
  9981                           ;MOTEapp.c: 1402: }
  9982                           ;MOTEapp.c: 1403: moteApp_delayms(100);
  9983  004984  0E00               	movlw	0
  9984  004986  0100               	movlb	0	; () banked
  9985  004988  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9986  00498A  0E64               	movlw	100
  9987  00498C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  9988  00498E  ECAC  F029         	call	_moteApp_delayms	;wreg free
  9989  004992  0012               	return		;funcret
  9990  004994                     __end_of_moteApp_setSensorsInput:
  9991                           	opt stack 0
  9992                           tblptru	equ	0xFF8
  9993                           tblptrh	equ	0xFF7
  9994                           tblptrl	equ	0xFF6
  9995                           tablat	equ	0xFF5
  9996                           prodh	equ	0xFF4
  9997                           prodl	equ	0xFF3
  9998                           intcon	equ	0xFF2
  9999                           postinc0	equ	0xFEE
 10000                           wreg	equ	0xFE8
 10001                           indf1	equ	0xFE7
 10002                           postdec1	equ	0xFE5
 10003                           fsr1h	equ	0xFE2
 10004                           fsr1l	equ	0xFE1
 10005                           indf2	equ	0xFDF
 10006                           fsr2h	equ	0xFDA
 10007                           fsr2l	equ	0xFD9
 10008                           status	equ	0xFD8
 10009                           
 10010 ;; *************** function _moteApp_lightStringSize *****************
 10011 ;; Defined at:
 10012 ;;		line 1452 in file "../Includes/Board/MOTEapp.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;		None
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;		None
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      unsigned char 
 10019 ;; Registers used:
 10020 ;;		wreg, status,2
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10026 ;;      Params:         0       0       0       0       0       0       0       0       0
 10027 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10028 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10029 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10030 ;;Total ram usage:        0 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:   11
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_moteRunningProcess
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text16
 10041  00590A                     __ptext16:
 10042                           	opt stack 0
 10043  00590A                     _moteApp_lightStringSize:
 10044                           	opt stack 17
 10045                           
 10046                           ;MOTEapp.c: 1454: return lightStringSize;
 10047                           
 10048                           ;incstack = 0
 10049  00590A  0100               	movlb	0	; () banked
 10050  00590C  51ED               	movf	_lightStringSize& (0+255),w,b
 10051  00590E  0012               	return	
 10052  005910                     __end_of_moteApp_lightStringSize:
 10053                           	opt stack 0
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           intcon	equ	0xFF2
 10061                           postinc0	equ	0xFEE
 10062                           wreg	equ	0xFE8
 10063                           indf1	equ	0xFE7
 10064                           postdec1	equ	0xFE5
 10065                           fsr1h	equ	0xFE2
 10066                           fsr1l	equ	0xFE1
 10067                           indf2	equ	0xFDF
 10068                           fsr2h	equ	0xFDA
 10069                           fsr2l	equ	0xFD9
 10070                           status	equ	0xFD8
 10071                           
 10072 ;; *************** function _moteApp_getTempValue *****************
 10073 ;; Defined at:
 10074 ;;		line 1405 in file "../Includes/Board/MOTEapp.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  2    3[BANK0 ] PTR unsigned char 
 10081 ;; Registers used:
 10082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10088 ;;      Params:         0       2       0       0       0       0       0       0       0
 10089 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10091 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10092 ;;Total ram usage:        4 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:   14
 10095 ;; This function calls:
 10096 ;;		_MOTEapp_getModuleResponse
 10097 ;;		_sendCommand
 10098 ;; This function is called by:
 10099 ;;		_moteHandler
 10100 ;;		_moteRunningProcess
 10101 ;;		_moteApp_testSensors
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text17
 10106  005114                     __ptext17:
 10107                           	opt stack 0
 10108  005114                     _moteApp_getTempValue:
 10109                           	opt stack 14
 10110                           
 10111                           ;MOTEapp.c: 1407: uint16_t escapeCounter = 0;
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;incstack = 0
 10115  005114  0E00               	movlw	0
 10116  005116  0100               	movlb	0	; () banked
 10117  005118  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10118  00511A  0E00               	movlw	0
 10119  00511C  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;MOTEapp.c: 1409: sendCommand("sys get pinana GPIO12");
 10123  00511E  0E56               	movlw	low STR_185
 10124  005120  6F61               	movwf	sendCommand@string& (0+255),b
 10125  005122  0E7A               	movlw	high STR_185
 10126  005124  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10127  005126  EC0F  F02A         	call	_sendCommand	;wreg free
 10128                           
 10129                           ;MOTEapp.c: 1410: while ( !MOTEapp_getModuleResponse() )
 10130  00512A  D009               	goto	l732
 10131  00512C                     
 10132                           ;MOTEapp.c: 1411: {
 10133                           ;MOTEapp.c: 1412: if (++escapeCounter > 50000)
 10134  00512C  0100               	movlb	0	; () banked
 10135  00512E  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10136  005130  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10137  005132  0E51               	movlw	81
 10138  005134  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10139  005136  0EC3               	movlw	195
 10140  005138  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10141  00513A  B0D8               	btfsc	status,0,c
 10142  00513C  D005               	goto	u7800
 10143  00513E                     l732:
 10144                           
 10145                           ; BSR set to: 0
 10146                           
 10147                           ; BSR set to: 0
 10148  00513E  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10149  005142  0900               	iorlw	0
 10150  005144  B4D8               	btfsc	status,2,c
 10151  005146  D7F2               	goto	l731
 10152  005148                     u7800:
 10153                           
 10154                           ;MOTEapp.c: 1414: }
 10155                           ;MOTEapp.c: 1416: return &moduleResonseBuffer;
 10156  005148  0E65               	movlw	low _moduleResonseBuffer
 10157  00514A  0100               	movlb	0	; () banked
 10158  00514C  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10159  00514E  0E01               	movlw	high _moduleResonseBuffer
 10160  005150  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10161  005152  0012               	return	
 10162  005154                     __end_of_moteApp_getTempValue:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodh	equ	0xFF4
 10169                           prodl	equ	0xFF3
 10170                           intcon	equ	0xFF2
 10171                           postinc0	equ	0xFEE
 10172                           wreg	equ	0xFE8
 10173                           indf1	equ	0xFE7
 10174                           postdec1	equ	0xFE5
 10175                           fsr1h	equ	0xFE2
 10176                           fsr1l	equ	0xFE1
 10177                           indf2	equ	0xFDF
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function _moteApp_getLightValue *****************
 10183 ;; Defined at:
 10184 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;		None
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  2   14[BANK0 ] PTR unsigned char 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10198 ;;      Params:         0       2       0       0       0       0       0       0       0
 10199 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10201 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10202 ;;Total ram usage:        4 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:   14
 10205 ;; This function calls:
 10206 ;;		_MOTEapp_getModuleResponse
 10207 ;;		_moteApp_setLightString
 10208 ;;		_sendCommand
 10209 ;; This function is called by:
 10210 ;;		_moteHandler
 10211 ;;		_moteRunningProcess
 10212 ;;		_moteApp_testSensors
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text18
 10217  004F6A                     __ptext18:
 10218                           	opt stack 0
 10219  004F6A                     _moteApp_getLightValue:
 10220                           	opt stack 14
 10221                           
 10222                           ;MOTEapp.c: 1421: uint16_t escapeCounter = 0;
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;incstack = 0
 10226  004F6A  0E00               	movlw	0
 10227  004F6C  0100               	movlb	0	; () banked
 10228  004F6E  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10229  004F70  0E00               	movlw	0
 10230  004F72  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;MOTEapp.c: 1423: sendCommand("sys get pinana GPIO13");
 10234  004F74  0E6C               	movlw	low STR_186
 10235  004F76  6F61               	movwf	sendCommand@string& (0+255),b
 10236  004F78  0E7A               	movlw	high STR_186
 10237  004F7A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10238  004F7C  EC0F  F02A         	call	_sendCommand	;wreg free
 10239                           
 10240                           ;MOTEapp.c: 1424: while ( !MOTEapp_getModuleResponse() )
 10241  004F80  D009               	goto	l739
 10242  004F82                     
 10243                           ;MOTEapp.c: 1425: {
 10244                           ;MOTEapp.c: 1426: if (++escapeCounter > 50000)
 10245  004F82  0100               	movlb	0	; () banked
 10246  004F84  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10247  004F86  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10248  004F88  0E51               	movlw	81
 10249  004F8A  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10250  004F8C  0EC3               	movlw	195
 10251  004F8E  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10252  004F90  B0D8               	btfsc	status,0,c
 10253  004F92  D005               	goto	u7780
 10254  004F94                     l739:
 10255                           
 10256                           ; BSR set to: 0
 10257                           
 10258                           ; BSR set to: 0
 10259  004F94  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 10260  004F98  0900               	iorlw	0
 10261  004F9A  B4D8               	btfsc	status,2,c
 10262  004F9C  D7F2               	goto	l738
 10263  004F9E                     u7780:
 10264                           
 10265                           ;MOTEapp.c: 1428: }
 10266                           ;MOTEapp.c: 1429: moteApp_setLightString(moduleResonseBuffer);
 10267  004F9E  0E65               	movlw	low _moduleResonseBuffer
 10268  004FA0  0100               	movlb	0	; () banked
 10269  004FA2  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10270  004FA4  0E01               	movlw	high _moduleResonseBuffer
 10271  004FA6  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10272  004FA8  ECA9  F025         	call	_moteApp_setLightString	;wreg free
 10273                           
 10274                           ;MOTEapp.c: 1430: return &moduleResonseBuffer;
 10275  004FAC  0E65               	movlw	low _moduleResonseBuffer
 10276  004FAE  0100               	movlb	0	; () banked
 10277  004FB0  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10278  004FB2  0E01               	movlw	high _moduleResonseBuffer
 10279  004FB4  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10280  004FB6  0012               	return	
 10281  004FB8                     __end_of_moteApp_getLightValue:
 10282                           	opt stack 0
 10283                           tblptru	equ	0xFF8
 10284                           tblptrh	equ	0xFF7
 10285                           tblptrl	equ	0xFF6
 10286                           tablat	equ	0xFF5
 10287                           prodh	equ	0xFF4
 10288                           prodl	equ	0xFF3
 10289                           intcon	equ	0xFF2
 10290                           postinc0	equ	0xFEE
 10291                           wreg	equ	0xFE8
 10292                           indf1	equ	0xFE7
 10293                           postdec1	equ	0xFE5
 10294                           fsr1h	equ	0xFE2
 10295                           fsr1l	equ	0xFE1
 10296                           indf2	equ	0xFDF
 10297                           fsr2h	equ	0xFDA
 10298                           fsr2l	equ	0xFD9
 10299                           status	equ	0xFD8
 10300                           
 10301 ;; *************** function _moteApp_setLightString *****************
 10302 ;; Defined at:
 10303 ;;		line 1437 in file "../Includes/Board/MOTEapp.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 10306 ;;		 -> moduleResonseBuffer(64), 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  stingPos        1   13[BANK0 ] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10318 ;;      Params:         0       2       0       0       0       0       0       0       0
 10319 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10321 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10322 ;;Total ram usage:        3 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:   12
 10325 ;; This function calls:
 10326 ;;		_memcpy
 10327 ;; This function is called by:
 10328 ;;		_moteApp_getLightValue
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text19
 10333  004B52                     __ptext19:
 10334                           	opt stack 0
 10335  004B52                     _moteApp_setLightString:
 10336                           	opt stack 15
 10337                           
 10338                           ;MOTEapp.c: 1439: memcpy(storedLight, clearLight, sizeof(storedLight));
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;incstack = 0
 10342  004B52  0EF3               	movlw	low _storedLight
 10343  004B54  0100               	movlb	0	; () banked
 10344  004B56  6F60               	movwf	memcpy@d1& (0+255),b
 10345  004B58  0E01               	movlw	high _storedLight
 10346  004B5A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10347  004B5C  0EEE               	movlw	low _clearLight
 10348  004B5E  6F62               	movwf	memcpy@s1& (0+255),b
 10349  004B60  0E01               	movlw	high _clearLight
 10350  004B62  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10351  004B64  0E00               	movlw	0
 10352  004B66  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10353  004B68  0E05               	movlw	5
 10354  004B6A  6F64               	movwf	memcpy@n& (0+255),b
 10355  004B6C  EC02  F028         	call	_memcpy	;wreg free
 10356                           
 10357                           ;MOTEapp.c: 1440: memcpy(storedLight, lightString, sizeof(storedLight));
 10358  004B70  0EF3               	movlw	low _storedLight
 10359  004B72  0100               	movlb	0	; () banked
 10360  004B74  6F60               	movwf	memcpy@d1& (0+255),b
 10361  004B76  0E01               	movlw	high _storedLight
 10362  004B78  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10363  004B7A  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10364  004B7E  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10365  004B82  0E00               	movlw	0
 10366  004B84  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10367  004B86  0E05               	movlw	5
 10368  004B88  6F64               	movwf	memcpy@n& (0+255),b
 10369  004B8A  EC02  F028         	call	_memcpy	;wreg free
 10370                           
 10371                           ;MOTEapp.c: 1442: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10372  004B8E  0E00               	movlw	0
 10373  004B90  0100               	movlb	0	; () banked
 10374  004B92  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10375  004B94                     l8478:
 10376                           
 10377                           ; BSR set to: 0
 10378  004B94  0E04               	movlw	4
 10379  004B96  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10380  004B98  D001               	goto	l750
 10381  004B9A  D00E               	goto	u6470
 10382  004B9C                     l750:
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;MOTEapp.c: 1443: {
 10386                           ;MOTEapp.c: 1444: if (storedLight[stingPos] == 0x00)
 10387                           
 10388                           ; BSR set to: 0
 10389  004B9C  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10390  004B9E  0D01               	mullw	1
 10391  004BA0  0EF3               	movlw	low _storedLight
 10392  004BA2  24F3               	addwf	prodl,w,c
 10393  004BA4  6ED9               	movwf	fsr2l,c
 10394  004BA6  0E01               	movlw	high _storedLight
 10395  004BA8  20F4               	addwfc	prodh,w,c
 10396  004BAA  6EDA               	movwf	fsr2h,c
 10397  004BAC  50DF               	movf	indf2,w,c
 10398  004BAE  B4D8               	btfsc	status,2,c
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;MOTEapp.c: 1445: {
 10402                           ;MOTEapp.c: 1446: lightStringSize = stingPos;
 10403  004BB0  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10404                           
 10405                           ; BSR set to: 0
 10406                           
 10407                           ; BSR set to: 0
 10408  004BB4  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10409  004BB6  D7EE               	goto	l8478
 10410  004BB8                     u6470:
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;MOTEapp.c: 1447: }
 10414                           ;MOTEapp.c: 1448: }
 10415                           ;MOTEapp.c: 1449: __nop();
 10416  004BB8  F000               	nop	
 10417  004BBA  0012               	return		;funcret
 10418  004BBC                     __end_of_moteApp_setLightString:
 10419                           	opt stack 0
 10420                           tblptru	equ	0xFF8
 10421                           tblptrh	equ	0xFF7
 10422                           tblptrl	equ	0xFF6
 10423                           tablat	equ	0xFF5
 10424                           prodh	equ	0xFF4
 10425                           prodl	equ	0xFF3
 10426                           intcon	equ	0xFF2
 10427                           postinc0	equ	0xFEE
 10428                           wreg	equ	0xFE8
 10429                           indf1	equ	0xFE7
 10430                           postdec1	equ	0xFE5
 10431                           fsr1h	equ	0xFE2
 10432                           fsr1l	equ	0xFE1
 10433                           indf2	equ	0xFDF
 10434                           fsr2h	equ	0xFDA
 10435                           fsr2l	equ	0xFD9
 10436                           status	equ	0xFD8
 10437                           
 10438 ;; *************** function _memcpy *****************
 10439 ;; Defined at:
 10440 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  d1              2    0[BANK0 ] PTR void 
 10443 ;;		 -> storedLight(5), 
 10444 ;;  s1              2    2[BANK0 ] PTR const void 
 10445 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10446 ;;  n               2    4[BANK0 ] unsigned int 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10449 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10450 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10451 ;;		 -> storedLight(5), 
 10452 ;;  tmp             1   10[BANK0 ] unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  2    0[BANK0 ] PTR void 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10462 ;;      Params:         0       6       0       0       0       0       0       0       0
 10463 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10465 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10466 ;;Total ram usage:       11 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:   11
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_moteApp_setLightString
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text20
 10477  005004                     __ptext20:
 10478                           	opt stack 0
 10479  005004                     _memcpy:
 10480                           	opt stack 15
 10481                           
 10482                           ;incstack = 0
 10483  005004  C062  F068         	movff	memcpy@s1,memcpy@s
 10484  005008  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10485  00500C  C060  F066         	movff	memcpy@d1,memcpy@d
 10486  005010  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10487  005014  D011               	goto	l2665
 10488  005016                     l8046:
 10489  005016  C068  FFD9         	movff	memcpy@s,fsr2l
 10490  00501A  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10491  00501E  50DF               	movf	indf2,w,c
 10492  005020  0100               	movlb	0	; () banked
 10493  005022  6F6A               	movwf	memcpy@tmp& (0+255),b
 10494                           
 10495                           ; BSR set to: 0
 10496  005024  4B68               	infsnz	memcpy@s& (0+255),f,b
 10497  005026  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10498                           
 10499                           ; BSR set to: 0
 10500  005028  C066  FFD9         	movff	memcpy@d,fsr2l
 10501  00502C  C067  FFDA         	movff	memcpy@d+1,fsr2h
 10502  005030  C06A  FFDF         	movff	memcpy@tmp,indf2
 10503                           
 10504                           ; BSR set to: 0
 10505  005034  4B66               	infsnz	memcpy@d& (0+255),f,b
 10506  005036  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10507  005038                     l2665:
 10508                           
 10509                           ; BSR set to: 0
 10510  005038  0100               	movlb	0	; () banked
 10511  00503A  0764               	decf	memcpy@n& (0+255),f,b
 10512  00503C  A0D8               	btfss	status,0,c
 10513  00503E  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10514  005040  2964               	incf	memcpy@n& (0+255),w,b
 10515  005042  E1E9               	bnz	l8046
 10516  005044  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10517  005046  B4D8               	btfsc	status,2,c
 10518  005048  0012               	return	
 10519  00504A  D7E5               	goto	l2666
 10520  00504C                     __end_of_memcpy:
 10521                           	opt stack 0
 10522                           tblptru	equ	0xFF8
 10523                           tblptrh	equ	0xFF7
 10524                           tblptrl	equ	0xFF6
 10525                           tablat	equ	0xFF5
 10526                           prodh	equ	0xFF4
 10527                           prodl	equ	0xFF3
 10528                           intcon	equ	0xFF2
 10529                           postinc0	equ	0xFEE
 10530                           wreg	equ	0xFE8
 10531                           indf1	equ	0xFE7
 10532                           postdec1	equ	0xFE5
 10533                           fsr1h	equ	0xFE2
 10534                           fsr1l	equ	0xFE1
 10535                           indf2	equ	0xFDF
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function _moteApp_getLightString *****************
 10541 ;; Defined at:
 10542 ;;		line 1456 in file "../Includes/Board/MOTEapp.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;		None
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  2    0[BANK0 ] PTR unsigned char 
 10549 ;; Registers used:
 10550 ;;		wreg, status,2, status,0
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10556 ;;      Params:         0       2       0       0       0       0       0       0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10559 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10560 ;;Total ram usage:        2 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; Hardware stack levels required when called:   11
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_moteRunningProcess
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text21
 10571  005896                     __ptext21:
 10572                           	opt stack 0
 10573  005896                     _moteApp_getLightString:
 10574                           	opt stack 17
 10575                           
 10576                           ;MOTEapp.c: 1458: return &storedLight;
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;incstack = 0
 10580  005896  0EF3               	movlw	low _storedLight
 10581  005898  0100               	movlb	0	; () banked
 10582  00589A  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 10583  00589C  0E01               	movlw	high _storedLight
 10584  00589E  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 10585  0058A0  0012               	return	
 10586  0058A2                     __end_of_moteApp_getLightString:
 10587                           	opt stack 0
 10588                           tblptru	equ	0xFF8
 10589                           tblptrh	equ	0xFF7
 10590                           tblptrl	equ	0xFF6
 10591                           tablat	equ	0xFF5
 10592                           prodh	equ	0xFF4
 10593                           prodl	equ	0xFF3
 10594                           intcon	equ	0xFF2
 10595                           postinc0	equ	0xFEE
 10596                           wreg	equ	0xFE8
 10597                           indf1	equ	0xFE7
 10598                           postdec1	equ	0xFE5
 10599                           fsr1h	equ	0xFE2
 10600                           fsr1l	equ	0xFE1
 10601                           indf2	equ	0xFDF
 10602                           fsr2h	equ	0xFDA
 10603                           fsr2l	equ	0xFD9
 10604                           status	equ	0xFD8
 10605                           
 10606 ;; *************** function _moteApp_convertSensorValue *****************
 10607 ;; Defined at:
 10608 ;;		line 1347 in file "../Includes/Board/MOTEapp.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 10611 ;;		 -> moduleResonseBuffer(64), 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 10614 ;;  index           1   25[BANK0 ] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  2   18[BANK0 ] unsigned int 
 10617 ;; Registers used:
 10618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10624 ;;      Params:         0       2       0       0       0       0       0       0       0
 10625 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10626 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10627 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10628 ;;Total ram usage:        8 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:   12
 10631 ;; This function calls:
 10632 ;;		___wmul
 10633 ;; This function is called by:
 10634 ;;		_moteHandler
 10635 ;;		_moteRunningProcess
 10636 ;;		_moteApp_testSensors
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text22
 10641  00489E                     __ptext22:
 10642                           	opt stack 0
 10643  00489E                     _moteApp_convertSensorValue:
 10644                           	opt stack 16
 10645                           
 10646                           ;MOTEapp.c: 1349: uint8_t index;
 10647                           ;MOTEapp.c: 1350: uint16_t convertedValue = 0;
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;incstack = 0
 10651  00489E  0E00               	movlw	0
 10652  0048A0  0100               	movlb	0	; () banked
 10653  0048A2  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10654  0048A4  0E00               	movlw	0
 10655  0048A6  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10656                           
 10657                           ;MOTEapp.c: 1351: for(index = 0; index < 4; index++)
 10658  0048A8  0E00               	movlw	0
 10659  0048AA  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 10660  0048AC                     l9374:
 10661                           
 10662                           ; BSR set to: 0
 10663  0048AC  0E03               	movlw	3
 10664  0048AE  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 10665  0048B0  D001               	goto	l708
 10666  0048B2  D02F               	goto	u7840
 10667  0048B4                     l708:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;MOTEapp.c: 1352: {
 10671                           ;MOTEapp.c: 1353: if (*string != 0)
 10672                           
 10673                           ; BSR set to: 0
 10674  0048B4  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10675  0048B8  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10676  0048BC  50DF               	movf	indf2,w,c
 10677  0048BE  B4D8               	btfsc	status,2,c
 10678  0048C0  D028               	goto	u7840
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;MOTEapp.c: 1354: {
 10682                           ;MOTEapp.c: 1355: if (index != 0)
 10683  0048C2  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 10684  0048C4  B4D8               	btfsc	status,2,c
 10685  0048C6  D00E               	goto	l711
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;MOTEapp.c: 1356: convertedValue = convertedValue * 10;
 10689  0048C8  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 10690  0048CC  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 10691  0048D0  0E00               	movlw	0
 10692  0048D2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10693  0048D4  0E0A               	movlw	10
 10694  0048D6  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10695  0048D8  ECF3  F02A         	call	___wmul	;wreg free
 10696  0048DC  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 10697  0048E0  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 10698  0048E4                     l711:
 10699                           
 10700                           ;MOTEapp.c: 1358: convertedValue = (*string++ - '0') + convertedValue;
 10701  0048E4  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 10702  0048E8  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 10703  0048EC  50DF               	movf	indf2,w,c
 10704  0048EE  0100               	movlb	0	; () banked
 10705  0048F0  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 10706  0048F2  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 10707  0048F4  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 10708  0048F6  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 10709  0048F8  0E00               	movlw	0
 10710  0048FA  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 10711  0048FC  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 10712  0048FE  0ED0               	movlw	208
 10713  004900  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 10714  004902  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 10715  004904  0EFF               	movlw	255
 10716  004906  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 10717  004908  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 10718                           
 10719                           ; BSR set to: 0
 10720  00490A  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 10721  00490C  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 10722                           
 10723                           ; BSR set to: 0
 10724                           
 10725                           ; BSR set to: 0
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;MOTEapp.c: 1360: else
 10729                           ;MOTEapp.c: 1361: {
 10730                           ;MOTEapp.c: 1362: break;
 10731                           
 10732                           ;MOTEapp.c: 1359: }
 10733  00490E  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 10734  004910  D7CD               	goto	l9374
 10735  004912                     u7840:
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;MOTEapp.c: 1363: }
 10739                           ;MOTEapp.c: 1364: }
 10740                           ;MOTEapp.c: 1365: return convertedValue;
 10741  004912  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 10742  004916  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 10743                           
 10744                           ; BSR set to: 0
 10745  00491A  0012               	return		;funcret
 10746  00491C                     __end_of_moteApp_convertSensorValue:
 10747                           	opt stack 0
 10748                           tblptru	equ	0xFF8
 10749                           tblptrh	equ	0xFF7
 10750                           tblptrl	equ	0xFF6
 10751                           tablat	equ	0xFF5
 10752                           prodh	equ	0xFF4
 10753                           prodl	equ	0xFF3
 10754                           intcon	equ	0xFF2
 10755                           postinc0	equ	0xFEE
 10756                           wreg	equ	0xFE8
 10757                           indf1	equ	0xFE7
 10758                           postdec1	equ	0xFE5
 10759                           fsr1h	equ	0xFE2
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           fsr2h	equ	0xFDA
 10763                           fsr2l	equ	0xFD9
 10764                           status	equ	0xFD8
 10765                           
 10766 ;; *************** function ___wmul *****************
 10767 ;; Defined at:
 10768 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10771 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;  product         2    4[BANK0 ] unsigned int 
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  2    0[BANK0 ] unsigned int 
 10776 ;; Registers used:
 10777 ;;		wreg, status,2, status,0, prodl, prodh
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10783 ;;      Params:         0       4       0       0       0       0       0       0       0
 10784 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10786 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10787 ;;Total ram usage:        6 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:   11
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		_moteApp_convertSensorValue
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text23
 10798  0055E6                     __ptext23:
 10799                           	opt stack 0
 10800  0055E6                     ___wmul:
 10801                           	opt stack 16
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;incstack = 0
 10805  0055E6  0100               	movlb	0	; () banked
 10806  0055E8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10807  0055EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10808  0055EC  CFF3 F064          	movff	prodl,___wmul@product
 10809  0055F0  CFF4 F065          	movff	prodh,___wmul@product+1
 10810  0055F4  5160               	movf	___wmul@multiplier& (0+255),w,b
 10811  0055F6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10812  0055F8  50F3               	movf	prodl,w,c
 10813  0055FA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10814  0055FC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10815  0055FE  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10816  005600  50F3               	movf	prodl,w,c
 10817  005602  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10818                           
 10819                           ; BSR set to: 0
 10820  005604  C064  F060         	movff	___wmul@product,?___wmul
 10821  005608  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10822  00560C  0012               	return	
 10823  00560E                     __end_of___wmul:
 10824                           	opt stack 0
 10825                           tblptru	equ	0xFF8
 10826                           tblptrh	equ	0xFF7
 10827                           tblptrl	equ	0xFF6
 10828                           tablat	equ	0xFF5
 10829                           prodh	equ	0xFF4
 10830                           prodl	equ	0xFF3
 10831                           intcon	equ	0xFF2
 10832                           postinc0	equ	0xFEE
 10833                           wreg	equ	0xFE8
 10834                           indf1	equ	0xFE7
 10835                           postdec1	equ	0xFE5
 10836                           fsr1h	equ	0xFE2
 10837                           fsr1l	equ	0xFE1
 10838                           indf2	equ	0xFDF
 10839                           fsr2h	equ	0xFDA
 10840                           fsr2l	equ	0xFD9
 10841                           status	equ	0xFD8
 10842                           
 10843 ;; *************** function _moteApp_clearBuffers *****************
 10844 ;; Defined at:
 10845 ;;		line 1287 in file "../Includes/Board/MOTEapp.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;		None
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;  counter         1    3[BANK0 ] unsigned char 
 10850 ;;  counter         1    2[BANK0 ] unsigned char 
 10851 ;;  counter         1    1[BANK0 ] unsigned char 
 10852 ;;  counter         1    0[BANK0 ] unsigned char 
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0
 10863 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10865 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10866 ;;Total ram usage:        4 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:   11
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_moteRunningProcess
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text24
 10877  0043E4                     __ptext24:
 10878                           	opt stack 0
 10879  0043E4                     _moteApp_clearBuffers:
 10880                           	opt stack 17
 10881                           
 10882                           ;MOTEapp.c: 1289: for (uint8_t counter = 0; counter < 3; counter++)
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;incstack = 0
 10886  0043E4  0E00               	movlw	0
 10887  0043E6  0100               	movlb	0	; () banked
 10888  0043E8  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 10889  0043EA                     l9448:
 10890                           
 10891                           ; BSR set to: 0
 10892  0043EA  0E02               	movlw	2
 10893  0043EC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 10894  0043EE  D001               	goto	l684
 10895  0043F0  D00C               	goto	u7930
 10896  0043F2                     l684:
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;MOTEapp.c: 1290: {
 10900                           ;MOTEapp.c: 1291: responsePortNum[counter] = 0;
 10901                           
 10902                           ; BSR set to: 0
 10903  0043F2  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 10904  0043F4  0D01               	mullw	1
 10905  0043F6  0EF8               	movlw	low _responsePortNum
 10906  0043F8  24F3               	addwf	prodl,w,c
 10907  0043FA  6ED9               	movwf	fsr2l,c
 10908  0043FC  0E01               	movlw	high _responsePortNum
 10909  0043FE  20F4               	addwfc	prodh,w,c
 10910  004400  6EDA               	movwf	fsr2h,c
 10911  004402  0E00               	movlw	0
 10912  004404  6EDF               	movwf	indf2,c
 10913                           
 10914                           ; BSR set to: 0
 10915  004406  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 10916  004408  D7F0               	goto	l9448
 10917  00440A                     u7930:
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;MOTEapp.c: 1292: }
 10921                           ;MOTEapp.c: 1293: for (uint8_t counter = 0; counter < 34; counter++)
 10922                           
 10923                           ; BSR set to: 0
 10924  00440A  0E00               	movlw	0
 10925  00440C  6F61               	movwf	moteApp_clearBuffers@counter_1714& (0+255),b
 10926  00440E                     l9460:
 10927                           
 10928                           ; BSR set to: 0
 10929  00440E  0E21               	movlw	33
 10930  004410  6561               	cpfsgt	moteApp_clearBuffers@counter_1714& (0+255),b
 10931  004412  D001               	goto	l686
 10932  004414  D00C               	goto	u7950
 10933  004416                     l686:
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;MOTEapp.c: 1294: {
 10937                           ;MOTEapp.c: 1295: responseId[counter] = 0;
 10938                           
 10939                           ; BSR set to: 0
 10940  004416  5161               	movf	moteApp_clearBuffers@counter_1714& (0+255),w,b
 10941  004418  0D01               	mullw	1
 10942  00441A  0E30               	movlw	low _responseId
 10943  00441C  24F3               	addwf	prodl,w,c
 10944  00441E  6ED9               	movwf	fsr2l,c
 10945  004420  0E01               	movlw	high _responseId
 10946  004422  20F4               	addwfc	prodh,w,c
 10947  004424  6EDA               	movwf	fsr2h,c
 10948  004426  0E00               	movlw	0
 10949  004428  6EDF               	movwf	indf2,c
 10950                           
 10951                           ; BSR set to: 0
 10952  00442A  2B61               	incf	moteApp_clearBuffers@counter_1714& (0+255),f,b
 10953  00442C  D7F0               	goto	l9460
 10954  00442E                     u7950:
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;MOTEapp.c: 1296: }
 10958                           ;MOTEapp.c: 1297: for (uint8_t counter = 0; counter < 32; counter++)
 10959                           
 10960                           ; BSR set to: 0
 10961  00442E  0E00               	movlw	0
 10962  004430  6F62               	movwf	moteApp_clearBuffers@counter_1715& (0+255),b
 10963  004432                     l9472:
 10964                           
 10965                           ; BSR set to: 0
 10966  004432  0E1F               	movlw	31
 10967  004434  6562               	cpfsgt	moteApp_clearBuffers@counter_1715& (0+255),b
 10968  004436  D001               	goto	l688
 10969  004438  D00C               	goto	u7970
 10970  00443A                     l688:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;MOTEapp.c: 1298: {
 10974                           ;MOTEapp.c: 1299: responseData[counter] = 0;
 10975                           
 10976                           ; BSR set to: 0
 10977  00443A  5162               	movf	moteApp_clearBuffers@counter_1715& (0+255),w,b
 10978  00443C  0D01               	mullw	1
 10979  00443E  0EA5               	movlw	low _responseData
 10980  004440  24F3               	addwf	prodl,w,c
 10981  004442  6ED9               	movwf	fsr2l,c
 10982  004444  0E01               	movlw	high _responseData
 10983  004446  20F4               	addwfc	prodh,w,c
 10984  004448  6EDA               	movwf	fsr2h,c
 10985  00444A  0E00               	movlw	0
 10986  00444C  6EDF               	movwf	indf2,c
 10987                           
 10988                           ; BSR set to: 0
 10989  00444E  2B62               	incf	moteApp_clearBuffers@counter_1715& (0+255),f,b
 10990  004450  D7F0               	goto	l9472
 10991  004452                     u7970:
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;MOTEapp.c: 1300: }
 10995                           ;MOTEapp.c: 1301: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 10996                           
 10997                           ; BSR set to: 0
 10998  004452  0E00               	movlw	0
 10999  004454  6F63               	movwf	moteApp_clearBuffers@counter_1716& (0+255),b
 11000  004456                     l9484:
 11001                           
 11002                           ; BSR set to: 0
 11003  004456  0E0F               	movlw	15
 11004  004458  6563               	cpfsgt	moteApp_clearBuffers@counter_1716& (0+255),b
 11005  00445A  D001               	goto	l690
 11006  00445C  0012               	return	
 11007  00445E                     l690:
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;MOTEapp.c: 1302: {
 11011                           ;MOTEapp.c: 1303: dataBuffer[counter] = 0;
 11012                           
 11013                           ; BSR set to: 0
 11014  00445E  5163               	movf	moteApp_clearBuffers@counter_1716& (0+255),w,b
 11015  004460  0D01               	mullw	1
 11016  004462  0EC5               	movlw	low _dataBuffer
 11017  004464  24F3               	addwf	prodl,w,c
 11018  004466  6ED9               	movwf	fsr2l,c
 11019  004468  0E01               	movlw	high _dataBuffer
 11020  00446A  20F4               	addwfc	prodh,w,c
 11021  00446C  6EDA               	movwf	fsr2h,c
 11022  00446E  0E00               	movlw	0
 11023  004470  6EDF               	movwf	indf2,c
 11024                           
 11025                           ; BSR set to: 0
 11026  004472  2B63               	incf	moteApp_clearBuffers@counter_1716& (0+255),f,b
 11027  004474  D7F0               	goto	l9484
 11028  004476                     __end_of_moteApp_clearBuffers:
 11029                           	opt stack 0
 11030                           tblptru	equ	0xFF8
 11031                           tblptrh	equ	0xFF7
 11032                           tblptrl	equ	0xFF6
 11033                           tablat	equ	0xFF5
 11034                           prodh	equ	0xFF4
 11035                           prodl	equ	0xFF3
 11036                           intcon	equ	0xFF2
 11037                           postinc0	equ	0xFEE
 11038                           wreg	equ	0xFE8
 11039                           indf1	equ	0xFE7
 11040                           postdec1	equ	0xFE5
 11041                           fsr1h	equ	0xFE2
 11042                           fsr1l	equ	0xFE1
 11043                           indf2	equ	0xFDF
 11044                           fsr2h	equ	0xFDA
 11045                           fsr2l	equ	0xFD9
 11046                           status	equ	0xFD8
 11047                           
 11048 ;; *************** function _moteApp_addToDataBuffer *****************
 11049 ;; Defined at:
 11050 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11053 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11054 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  index           1   21[BANK0 ] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      unsigned char 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11066 ;;      Params:         0       3       0       0       0       0       0       0       0
 11067 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11069 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        4 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:   11
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_moteRunningProcess
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text25
 11081  004D50                     __ptext25:
 11082                           	opt stack 0
 11083  004D50                     _moteApp_addToDataBuffer:
 11084                           	opt stack 17
 11085                           
 11086                           ;MOTEapp.c: 1331: uint8_t index;
 11087                           ;MOTEapp.c: 1332: for(index = 0; index < 6; index++)
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;incstack = 0
 11091  004D50  0E00               	movlw	0
 11092  004D52  0100               	movlb	0	; () banked
 11093  004D54  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11094  004D56                     l9522:
 11095                           
 11096                           ; BSR set to: 0
 11097  004D56  0E05               	movlw	5
 11098  004D58  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11099  004D5A  D001               	goto	l701
 11100  004D5C  D026               	goto	u8060
 11101  004D5E                     l701:
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;MOTEapp.c: 1333: {
 11105                           ;MOTEapp.c: 1334: if (*string != 0)
 11106                           
 11107                           ; BSR set to: 0
 11108  004D5E  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11109  004D62  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11110  004D66  50DF               	movf	indf2,w,c
 11111  004D68  B4D8               	btfsc	status,2,c
 11112  004D6A  D012               	goto	l703
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;MOTEapp.c: 1335: {
 11116                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation++] = *string++;
 11117  004D6C  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11118  004D70  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11119  004D74  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11120  004D76  0D01               	mullw	1
 11121  004D78  0EC5               	movlw	low _dataBuffer
 11122  004D7A  24F3               	addwf	prodl,w,c
 11123  004D7C  6EE1               	movwf	fsr1l,c
 11124  004D7E  0E01               	movlw	high _dataBuffer
 11125  004D80  20F4               	addwfc	prodh,w,c
 11126  004D82  6EE2               	movwf	fsr1h,c
 11127  004D84  CFDF FFE7          	movff	indf2,indf1
 11128                           
 11129                           ; BSR set to: 0
 11130  004D88  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11131  004D8A  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 0
 11134  004D8C  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11135                           
 11136                           ;MOTEapp.c: 1337: }
 11137  004D8E  D00B               	goto	l704
 11138  004D90                     l703:
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;MOTEapp.c: 1338: else
 11142                           ;MOTEapp.c: 1339: {
 11143                           ;MOTEapp.c: 1340: dataBuffer[bufferLocation] = 0x20;
 11144                           
 11145                           ; BSR set to: 0
 11146  004D90  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11147  004D92  0D01               	mullw	1
 11148  004D94  0EC5               	movlw	low _dataBuffer
 11149  004D96  24F3               	addwf	prodl,w,c
 11150  004D98  6ED9               	movwf	fsr2l,c
 11151  004D9A  0E01               	movlw	high _dataBuffer
 11152  004D9C  20F4               	addwfc	prodh,w,c
 11153  004D9E  6EDA               	movwf	fsr2h,c
 11154  004DA0  0E20               	movlw	32
 11155  004DA2  6EDF               	movwf	indf2,c
 11156                           
 11157                           ;MOTEapp.c: 1341: break;
 11158  004DA4  D002               	goto	u8060
 11159  004DA6                     l704:
 11160                           
 11161                           ; BSR set to: 0
 11162                           
 11163                           ; BSR set to: 0
 11164  004DA6  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11165  004DA8  D7D6               	goto	l9522
 11166  004DAA                     u8060:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;MOTEapp.c: 1342: }
 11170                           ;MOTEapp.c: 1343: }
 11171                           ;MOTEapp.c: 1344: return index;
 11172                           
 11173                           ; BSR set to: 0
 11174  004DAA  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11175  004DAC  0012               	return	
 11176  004DAE                     __end_of_moteApp_addToDataBuffer:
 11177                           	opt stack 0
 11178                           tblptru	equ	0xFF8
 11179                           tblptrh	equ	0xFF7
 11180                           tblptrl	equ	0xFF6
 11181                           tablat	equ	0xFF5
 11182                           prodh	equ	0xFF4
 11183                           prodl	equ	0xFF3
 11184                           intcon	equ	0xFF2
 11185                           postinc0	equ	0xFEE
 11186                           wreg	equ	0xFE8
 11187                           indf1	equ	0xFE7
 11188                           postdec1	equ	0xFE5
 11189                           fsr1h	equ	0xFE2
 11190                           fsr1l	equ	0xFE1
 11191                           indf2	equ	0xFDF
 11192                           fsr2h	equ	0xFDA
 11193                           fsr2l	equ	0xFD9
 11194                           status	equ	0xFD8
 11195                           
 11196 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11197 ;; Defined at:
 11198 ;;		line 1307 in file "../Includes/Board/MOTEapp.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  number          1    wreg     unsigned char 
 11201 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  number          1    9[BANK0 ] unsigned char 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11213 ;;      Params:         0       1       0       0       0       0       0       0       0
 11214 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11215 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11216 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11217 ;;Total ram usage:        4 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:   12
 11220 ;; This function calls:
 11221 ;;		___awmod
 11222 ;;		___lbdiv
 11223 ;; This function is called by:
 11224 ;;		_moteRunningProcess
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text26
 11229  003E00                     __ptext26:
 11230                           	opt stack 0
 11231  003E00                     _moteApp_add8bToDataBuffer:
 11232                           	opt stack 16
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;incstack = 0
 11236                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11237  003E00  0100               	movlb	0	; () banked
 11238  003E02  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11239                           
 11240                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11241  003E04  0100               	movlb	0	; () banked
 11242  003E06  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11243  003E08  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11244  003E0A  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11245  003E0C  0E02               	movlw	2
 11246  003E0E  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11247  003E10  0E00               	movlw	0
 11248  003E12  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11249  003E14  0EC5               	movlw	low _dataBuffer
 11250  003E16  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11251  003E18  6ED9               	movwf	fsr2l,c
 11252  003E1A  0E01               	movlw	high _dataBuffer
 11253  003E1C  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11254  003E1E  6EDA               	movwf	fsr2h,c
 11255  003E20  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11256  003E24  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11257  003E26  0E00               	movlw	0
 11258  003E28  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11259  003E2A  0E0A               	movlw	10
 11260  003E2C  6F62               	movwf	___awmod@divisor& (0+255),b
 11261  003E2E  EC03  F025         	call	___awmod	;wreg free
 11262  003E32  0100               	movlb	0	; () banked
 11263  003E34  5160               	movf	?___awmod& (0+255),w,b
 11264  003E36  0F30               	addlw	48
 11265  003E38  6EDF               	movwf	indf2,c
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;MOTEapp.c: 1310: number /= 10;
 11269  003E3A  0E0A               	movlw	10
 11270  003E3C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11271  003E3E  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11272  003E40  ECAA  F028         	call	___lbdiv
 11273  003E44  0100               	movlb	0	; () banked
 11274  003E46  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11278  003E48  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11279  003E4A  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11280  003E4C  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11281  003E4E  0E01               	movlw	1
 11282  003E50  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11283  003E52  0E00               	movlw	0
 11284  003E54  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11285  003E56  0EC5               	movlw	low _dataBuffer
 11286  003E58  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11287  003E5A  6ED9               	movwf	fsr2l,c
 11288  003E5C  0E01               	movlw	high _dataBuffer
 11289  003E5E  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11290  003E60  6EDA               	movwf	fsr2h,c
 11291  003E62  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11292  003E66  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11293  003E68  0E00               	movlw	0
 11294  003E6A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11295  003E6C  0E0A               	movlw	10
 11296  003E6E  6F62               	movwf	___awmod@divisor& (0+255),b
 11297  003E70  EC03  F025         	call	___awmod	;wreg free
 11298  003E74  0100               	movlb	0	; () banked
 11299  003E76  5160               	movf	?___awmod& (0+255),w,b
 11300  003E78  0F30               	addlw	48
 11301  003E7A  6EDF               	movwf	indf2,c
 11302                           
 11303                           ;MOTEapp.c: 1312: number /= 10;
 11304  003E7C  0E0A               	movlw	10
 11305  003E7E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11306  003E80  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11307  003E82  ECAA  F028         	call	___lbdiv
 11308  003E86  0100               	movlb	0	; () banked
 11309  003E88  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;MOTEapp.c: 1313: dataBuffer[bufferLocation] = '0' + (number % 10);
 11313  003E8A  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11314  003E8C  0D01               	mullw	1
 11315  003E8E  0EC5               	movlw	low _dataBuffer
 11316  003E90  24F3               	addwf	prodl,w,c
 11317  003E92  6ED9               	movwf	fsr2l,c
 11318  003E94  0E01               	movlw	high _dataBuffer
 11319  003E96  20F4               	addwfc	prodh,w,c
 11320  003E98  6EDA               	movwf	fsr2h,c
 11321  003E9A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11322  003E9E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11323  003EA0  0E00               	movlw	0
 11324  003EA2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11325  003EA4  0E0A               	movlw	10
 11326  003EA6  6F62               	movwf	___awmod@divisor& (0+255),b
 11327  003EA8  EC03  F025         	call	___awmod	;wreg free
 11328  003EAC  0100               	movlb	0	; () banked
 11329  003EAE  5160               	movf	?___awmod& (0+255),w,b
 11330  003EB0  0F30               	addlw	48
 11331  003EB2  6EDF               	movwf	indf2,c
 11332                           
 11333                           ; BSR set to: 0
 11334  003EB4  0012               	return		;funcret
 11335  003EB6                     __end_of_moteApp_add8bToDataBuffer:
 11336                           	opt stack 0
 11337                           tblptru	equ	0xFF8
 11338                           tblptrh	equ	0xFF7
 11339                           tblptrl	equ	0xFF6
 11340                           tablat	equ	0xFF5
 11341                           prodh	equ	0xFF4
 11342                           prodl	equ	0xFF3
 11343                           intcon	equ	0xFF2
 11344                           postinc0	equ	0xFEE
 11345                           wreg	equ	0xFE8
 11346                           indf1	equ	0xFE7
 11347                           postdec1	equ	0xFE5
 11348                           fsr1h	equ	0xFE2
 11349                           fsr1l	equ	0xFE1
 11350                           indf2	equ	0xFDF
 11351                           fsr2h	equ	0xFDA
 11352                           fsr2l	equ	0xFD9
 11353                           status	equ	0xFD8
 11354                           
 11355 ;; *************** function ___lbdiv *****************
 11356 ;; Defined at:
 11357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  dividend        1    wreg     unsigned char 
 11360 ;;  divisor         1    0[BANK0 ] unsigned char 
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;  dividend        1    1[BANK0 ] unsigned char 
 11363 ;;  quotient        1    3[BANK0 ] unsigned char 
 11364 ;;  counter         1    2[BANK0 ] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      unsigned char 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11374 ;;      Params:         0       1       0       0       0       0       0       0       0
 11375 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11377 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11378 ;;Total ram usage:        4 bytes
 11379 ;; Hardware stack levels used:    1
 11380 ;; Hardware stack levels required when called:   11
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_moteApp_add8bToDataBuffer
 11385 ;;		_oled_putUint8
 11386 ;;		_oled_putint8
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text27
 11391  005154                     __ptext27:
 11392                           	opt stack 0
 11393  005154                     ___lbdiv:
 11394                           	opt stack 16
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;incstack = 0
 11398                           ;___lbdiv@dividend stored from wreg
 11399  005154  0100               	movlb	0	; () banked
 11400  005156  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11401  005158  0E00               	movlw	0
 11402  00515A  0100               	movlb	0	; () banked
 11403  00515C  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11404                           
 11405                           ; BSR set to: 0
 11406  00515E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11407  005160  B4D8               	btfsc	status,2,c
 11408  005162  D015               	goto	l2572
 11409                           
 11410                           ; BSR set to: 0
 11411  005164  0E01               	movlw	1
 11412  005166  6F62               	movwf	___lbdiv@counter& (0+255),b
 11413  005168  D003               	goto	l2567
 11414  00516A                     
 11415                           ; BSR set to: 0
 11416                           
 11417                           ; BSR set to: 0
 11418  00516A  90D8               	bcf	status,0,c
 11419  00516C  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11420                           
 11421                           ; BSR set to: 0
 11422  00516E  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11423  005170                     l2567:
 11424                           
 11425                           ; BSR set to: 0
 11426                           
 11427                           ; BSR set to: 0
 11428  005170  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11429  005172  D7FB               	goto	l2568
 11430  005174                     u7610:
 11431                           
 11432                           ; BSR set to: 0
 11433                           
 11434                           ; BSR set to: 0
 11435                           
 11436                           ; BSR set to: 0
 11437  005174  90D8               	bcf	status,0,c
 11438  005176  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11439  005178  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11440  00517A  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11441  00517C  A0D8               	btfss	status,0,c
 11442  00517E  D003               	goto	l2571
 11443                           
 11444                           ; BSR set to: 0
 11445  005180  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11446  005182  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11447                           
 11448                           ; BSR set to: 0
 11449  005184  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11450  005186                     l2571:
 11451                           
 11452                           ; BSR set to: 0
 11453                           
 11454                           ; BSR set to: 0
 11455  005186  90D8               	bcf	status,0,c
 11456  005188  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11457                           
 11458                           ; BSR set to: 0
 11459  00518A  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11460  00518C  D7F3               	goto	u7610
 11461  00518E                     l2572:
 11462                           
 11463                           ; BSR set to: 0
 11464                           
 11465                           ; BSR set to: 0
 11466                           
 11467                           ; BSR set to: 0
 11468  00518E  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11469  005190  0012               	return	
 11470  005192                     __end_of___lbdiv:
 11471                           	opt stack 0
 11472                           tblptru	equ	0xFF8
 11473                           tblptrh	equ	0xFF7
 11474                           tblptrl	equ	0xFF6
 11475                           tablat	equ	0xFF5
 11476                           prodh	equ	0xFF4
 11477                           prodl	equ	0xFF3
 11478                           intcon	equ	0xFF2
 11479                           postinc0	equ	0xFEE
 11480                           wreg	equ	0xFE8
 11481                           indf1	equ	0xFE7
 11482                           postdec1	equ	0xFE5
 11483                           fsr1h	equ	0xFE2
 11484                           fsr1l	equ	0xFE1
 11485                           indf2	equ	0xFDF
 11486                           fsr2h	equ	0xFDA
 11487                           fsr2l	equ	0xFD9
 11488                           status	equ	0xFD8
 11489                           
 11490 ;; *************** function ___awmod *****************
 11491 ;; Defined at:
 11492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;  dividend        2    0[BANK0 ] int 
 11495 ;;  divisor         2    2[BANK0 ] int 
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;  sign            1    5[BANK0 ] unsigned char 
 11498 ;;  counter         1    4[BANK0 ] unsigned char 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  2    0[BANK0 ] int 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11508 ;;      Params:         0       4       0       0       0       0       0       0       0
 11509 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11511 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11512 ;;Total ram usage:        6 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; Hardware stack levels required when called:   11
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_moteApp_add8bToDataBuffer
 11519 ;;		_oled_putUint8
 11520 ;;		_oled_putint8
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text28
 11525  004A06                     __ptext28:
 11526                           	opt stack 0
 11527  004A06                     ___awmod:
 11528                           	opt stack 16
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;incstack = 0
 11532  004A06  0E00               	movlw	0
 11533  004A08  0100               	movlb	0	; () banked
 11534  004A0A  6F65               	movwf	___awmod@sign& (0+255),b
 11535                           
 11536                           ; BSR set to: 0
 11537  004A0C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11538  004A0E  D006               	goto	l2418
 11539                           
 11540                           ; BSR set to: 0
 11541  004A10  6D60               	negf	___awmod@dividend& (0+255),b
 11542  004A12  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11543  004A14  B0D8               	btfsc	status,0,c
 11544  004A16  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11545                           
 11546                           ; BSR set to: 0
 11547  004A18  0E01               	movlw	1
 11548  004A1A  6F65               	movwf	___awmod@sign& (0+255),b
 11549  004A1C                     l2418:
 11550                           
 11551                           ; BSR set to: 0
 11552                           
 11553                           ; BSR set to: 0
 11554  004A1C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11555  004A1E  D004               	goto	l2419
 11556                           
 11557                           ; BSR set to: 0
 11558  004A20  6D62               	negf	___awmod@divisor& (0+255),b
 11559  004A22  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11560  004A24  B0D8               	btfsc	status,0,c
 11561  004A26  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11562  004A28                     l2419:
 11563                           
 11564                           ; BSR set to: 0
 11565                           
 11566                           ; BSR set to: 0
 11567  004A28  5162               	movf	___awmod@divisor& (0+255),w,b
 11568  004A2A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11569  004A2C  B4D8               	btfsc	status,2,c
 11570  004A2E  D018               	goto	l2426
 11571                           
 11572                           ; BSR set to: 0
 11573  004A30  0E01               	movlw	1
 11574  004A32  6F64               	movwf	___awmod@counter& (0+255),b
 11575  004A34  D004               	goto	l2421
 11576  004A36                     
 11577                           ; BSR set to: 0
 11578                           
 11579                           ; BSR set to: 0
 11580  004A36  90D8               	bcf	status,0,c
 11581  004A38  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11582  004A3A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11583  004A3C  2B64               	incf	___awmod@counter& (0+255),f,b
 11584  004A3E                     l2421:
 11585                           
 11586                           ; BSR set to: 0
 11587                           
 11588                           ; BSR set to: 0
 11589  004A3E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11590  004A40  D7FA               	goto	l2422
 11591  004A42                     u7500:
 11592                           
 11593                           ; BSR set to: 0
 11594                           
 11595                           ; BSR set to: 0
 11596                           
 11597                           ; BSR set to: 0
 11598  004A42  5162               	movf	___awmod@divisor& (0+255),w,b
 11599  004A44  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11600  004A46  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11601  004A48  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11602  004A4A  A0D8               	btfss	status,0,c
 11603  004A4C  D004               	goto	l2425
 11604                           
 11605                           ; BSR set to: 0
 11606  004A4E  5162               	movf	___awmod@divisor& (0+255),w,b
 11607  004A50  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11608  004A52  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11609  004A54  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11610  004A56                     l2425:
 11611                           
 11612                           ; BSR set to: 0
 11613                           
 11614                           ; BSR set to: 0
 11615  004A56  90D8               	bcf	status,0,c
 11616  004A58  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11617  004A5A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11618                           
 11619                           ; BSR set to: 0
 11620  004A5C  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11621  004A5E  D7F1               	goto	u7500
 11622  004A60                     l2426:
 11623                           
 11624                           ; BSR set to: 0
 11625                           
 11626                           ; BSR set to: 0
 11627                           
 11628                           ; BSR set to: 0
 11629  004A60  5165               	movf	___awmod@sign& (0+255),w,b
 11630  004A62  B4D8               	btfsc	status,2,c
 11631  004A64  D004               	goto	l2427
 11632                           
 11633                           ; BSR set to: 0
 11634  004A66  6D60               	negf	___awmod@dividend& (0+255),b
 11635  004A68  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11636  004A6A  B0D8               	btfsc	status,0,c
 11637  004A6C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11638  004A6E                     l2427:
 11639                           
 11640                           ; BSR set to: 0
 11641                           
 11642                           ; BSR set to: 0
 11643  004A6E  C060  F060         	movff	___awmod@dividend,?___awmod
 11644  004A72  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11645  004A76  0012               	return	
 11646  004A78                     __end_of___awmod:
 11647                           	opt stack 0
 11648                           tblptru	equ	0xFF8
 11649                           tblptrh	equ	0xFF7
 11650                           tblptrl	equ	0xFF6
 11651                           tablat	equ	0xFF5
 11652                           prodh	equ	0xFF4
 11653                           prodl	equ	0xFF3
 11654                           intcon	equ	0xFF2
 11655                           postinc0	equ	0xFEE
 11656                           wreg	equ	0xFE8
 11657                           indf1	equ	0xFE7
 11658                           postdec1	equ	0xFE5
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           indf2	equ	0xFDF
 11662                           fsr2h	equ	0xFDA
 11663                           fsr2l	equ	0xFD9
 11664                           status	equ	0xFD8
 11665                           
 11666 ;; *************** function _moteApp_GoToSleep *****************
 11667 ;; Defined at:
 11668 ;;		line 1175 in file "../Includes/Board/MOTEapp.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  status          1   14[BANK0 ] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      unsigned char 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0
 11683 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11685 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11686 ;;Total ram usage:        1 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:   17
 11689 ;; This function calls:
 11690 ;;		_EUSART_FlushBuffer
 11691 ;;		_PIN_MANAGER_Initialize
 11692 ;;		_moduleResync
 11693 ;;		_moduleSleep
 11694 ;;		_moteApp_delayms
 11695 ;;		_oled_displayOff
 11696 ;;		_oled_init
 11697 ;; This function is called by:
 11698 ;;		_moteRunningProcess
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           	psect	text29
 11703  003646                     __ptext29:
 11704                           	opt stack 0
 11705  003646                     _moteApp_GoToSleep:
 11706                           	opt stack 11
 11707                           
 11708                           ;MOTEapp.c: 1177: uint8_t status = 0;
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;incstack = 0
 11712  003646  0E00               	movlw	0
 11713  003648  0100               	movlb	0	; () banked
 11714  00364A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11715  00364C                     
 11716                           ; BSR set to: 0
 11717  00364C  A081               	btfss	3969,0,c	;volatile
 11718  00364E  D7FE               	goto	l666
 11719                           
 11720                           ;MOTEapp.c: 1179: moduleSleep();
 11721  003650  EC1B  F02B         	call	_moduleSleep	;wreg free
 11722                           
 11723                           ;MOTEapp.c: 1180: oled_displayOff(1);
 11724  003654  0E01               	movlw	1
 11725  003656  EC71  F02C         	call	_oled_displayOff
 11726                           
 11727                           ;MOTEapp.c: 1181: ADCON0bits.ADON = 0;
 11728  00365A  90C2               	bcf	4034,0,c	;volatile
 11729                           
 11730                           ;MOTEapp.c: 1182: INTCONbits.GIE = 0;
 11731  00365C  9EF2               	bcf	intcon,7,c	;volatile
 11732                           
 11733                           ;MOTEapp.c: 1183: GIE = 0;
 11734  00365E  9EF2               	bcf	intcon,7,c	;volatile
 11735                           
 11736                           ;MOTEapp.c: 1184: PEIE = 0;
 11737  003660  9CF2               	bcf	intcon,6,c	;volatile
 11738                           
 11739                           ;MOTEapp.c: 1186: LATEbits.LATE2 = 0;
 11740  003662  948D               	bcf	3981,2,c	;volatile
 11741                           
 11742                           ;MOTEapp.c: 1187: PIE2bits.TMR3IE = 0;
 11743  003664  92A0               	bcf	4000,1,c	;volatile
 11744                           
 11745                           ;MOTEapp.c: 1189: ANSELAbits.ANSA0 = 1;
 11746  003666  010F               	movlb	15	; () banked
 11747  003668  815B               	bsf	91,0,b	;volatile
 11748                           
 11749                           ; BSR set to: 15
 11750                           ;MOTEapp.c: 1191: PIE2bits.C1IE = 1;
 11751  00366A  8CA0               	bsf	4000,6,c	;volatile
 11752                           
 11753                           ; BSR set to: 15
 11754                           ;MOTEapp.c: 1192: INTCON3bits.INT1IE = 1;
 11755  00366C  86F0               	bsf	intcon3,3,c	;volatile
 11756                           
 11757                           ; BSR set to: 15
 11758                           ;MOTEapp.c: 1193: INTCONbits.INT0IE = 1;
 11759  00366E  88F2               	bsf	intcon,4,c	;volatile
 11760                           
 11761                           ; BSR set to: 15
 11762                           ;MOTEapp.c: 1194: IOCCbits.IOCC2 = 1;
 11763  003670  8487               	bsf	3975,2,c	;volatile
 11764                           
 11765                           ; BSR set to: 15
 11766                           ;MOTEapp.c: 1197: status = PORTBbits.RB1;
 11767  003672  0E00               	movlw	0
 11768  003674  B281               	btfsc	3969,1,c	;volatile
 11769  003676  0E01               	movlw	1
 11770  003678  0100               	movlb	0	; () banked
 11771  00367A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11772                           
 11773                           ; BSR set to: 0
 11774                           ;MOTEapp.c: 1198: status = PORTBbits.RB0;
 11775  00367C  0E00               	movlw	0
 11776  00367E  B081               	btfsc	3969,0,c	;volatile
 11777  003680  0E01               	movlw	1
 11778  003682  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;MOTEapp.c: 1199: status = PORTCbits.RC2;
 11782  003684  0E00               	movlw	0
 11783  003686  B482               	btfsc	3970,2,c	;volatile
 11784  003688  0E01               	movlw	1
 11785  00368A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;MOTEapp.c: 1201: if (periodicState)
 11789  00368C  51FA               	movf	_periodicState& (0+255),w,b
 11790  00368E  A4D8               	btfss	status,2,c
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;MOTEapp.c: 1202: {
 11794                           ;MOTEapp.c: 1203: WDTCONbits.SWDTEN = 1;
 11795  003690  80D1               	bsf	4049,0,c	;volatile
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;MOTEapp.c: 1204: }
 11799                           ;MOTEapp.c: 1207: INTCONbits.INT0IF = 0;
 11800  003692  92F2               	bcf	intcon,1,c	;volatile
 11801                           
 11802                           ;MOTEapp.c: 1208: INTCON3bits.INT1IF = 0;
 11803  003694  90F0               	bcf	intcon3,0,c	;volatile
 11804                           
 11805                           ;MOTEapp.c: 1209: PIR2bits.C1IF = 0;
 11806  003696  9CA1               	bcf	4001,6,c	;volatile
 11807                           
 11808                           ;MOTEapp.c: 1210: __nop();
 11809  003698  F000               	nop	
 11810  00369A  0003               	sleep		;# 
 11811                           
 11812                           ;MOTEapp.c: 1212: __nop();
 11813  00369C  F000               	nop	
 11814                           
 11815                           ;MOTEapp.c: 1214: WDTCONbits.SWDTEN = 0;
 11816  00369E  90D1               	bcf	4049,0,c	;volatile
 11817                           
 11818                           ;MOTEapp.c: 1215: EUSART_FlushBuffer();
 11819  0036A0  EC48  F028         	call	_EUSART_FlushBuffer	;wreg free
 11820                           
 11821                           ;MOTEapp.c: 1218: INTCON3bits.INT1IE = 0;
 11822  0036A4  96F0               	bcf	intcon3,3,c	;volatile
 11823                           
 11824                           ;MOTEapp.c: 1219: INTCONbits.INT0IE = 0;
 11825  0036A6  98F2               	bcf	intcon,4,c	;volatile
 11826                           
 11827                           ;MOTEapp.c: 1220: IOCCbits.IOCC2 = 0;
 11828  0036A8  9487               	bcf	3975,2,c	;volatile
 11829                           
 11830                           ;MOTEapp.c: 1221: PIE2bits.C1IE = 0;
 11831  0036AA  9CA0               	bcf	4000,6,c	;volatile
 11832                           
 11833                           ;MOTEapp.c: 1222: GIE = 1;
 11834  0036AC  8EF2               	bsf	intcon,7,c	;volatile
 11835                           
 11836                           ;MOTEapp.c: 1224: PIN_MANAGER_Initialize();
 11837  0036AE  EC8B  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 11838                           
 11839                           ;MOTEapp.c: 1226: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 11840  0036B2  A2F2               	btfss	intcon,1,c	;volatile
 11841  0036B4  B0F0               	btfsc	intcon3,0,c	;volatile
 11842  0036B6  D002               	goto	u8160
 11843  0036B8  ACA1               	btfss	4001,6,c	;volatile
 11844  0036BA  D011               	goto	l669
 11845  0036BC                     u8160:
 11846                           
 11847                           ;MOTEapp.c: 1227: {
 11848                           ;MOTEapp.c: 1229: INTCONbits.INT0IF = 0;
 11849  0036BC  92F2               	bcf	intcon,1,c	;volatile
 11850                           
 11851                           ;MOTEapp.c: 1230: INTCON3bits.INT1IF = 0;
 11852  0036BE  90F0               	bcf	intcon3,0,c	;volatile
 11853                           
 11854                           ;MOTEapp.c: 1231: status = 1;
 11855  0036C0  0E01               	movlw	1
 11856  0036C2  0100               	movlb	0	; () banked
 11857  0036C4  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;MOTEapp.c: 1234: oled_displayOff(0);
 11861  0036C6  0E00               	movlw	0
 11862  0036C8  EC71  F02C         	call	_oled_displayOff
 11863                           
 11864                           ;MOTEapp.c: 1235: oled_init();
 11865  0036CC  ECF7  F029         	call	_oled_init	;wreg free
 11866                           
 11867                           ;MOTEapp.c: 1237: LATEbits.LATE2 = 1;
 11868  0036D0  848D               	bsf	3981,2,c	;volatile
 11869                           
 11870                           ;MOTEapp.c: 1238: TMR3H = 0xFB;
 11871  0036D2  0EFB               	movlw	251
 11872  0036D4  6EB3               	movwf	4019,c	;volatile
 11873                           
 11874                           ;MOTEapp.c: 1239: TMR3L = 0x50;
 11875  0036D6  0E50               	movlw	80
 11876  0036D8  6EB2               	movwf	4018,c	;volatile
 11877                           
 11878                           ;MOTEapp.c: 1240: PIE2bits.TMR3IE = 1;
 11879  0036DA  82A0               	bsf	4000,1,c	;volatile
 11880                           
 11881                           ;MOTEapp.c: 1241: }
 11882  0036DC  D007               	goto	l672
 11883  0036DE                     l669:
 11884                           
 11885                           ;MOTEapp.c: 1242: else
 11886                           ;MOTEapp.c: 1243: {
 11887                           ;MOTEapp.c: 1244: secTicker = 10;
 11888  0036DE  0E0A               	movlw	10
 11889  0036E0  0100               	movlb	0	; () banked
 11890  0036E2  6FF0               	movwf	_secTicker& (0+255),b
 11891                           
 11892                           ;MOTEapp.c: 1245: status = 0;
 11893  0036E4  0E00               	movlw	0
 11894  0036E6  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;MOTEapp.c: 1247: LATEbits.LATE2 = 0;
 11898  0036E8  948D               	bcf	3981,2,c	;volatile
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;MOTEapp.c: 1248: PIE2bits.TMR3IE = 0;
 11902  0036EA  92A0               	bcf	4000,1,c	;volatile
 11903  0036EC                     l672:
 11904                           
 11905                           ;MOTEapp.c: 1249: }
 11906                           ;MOTEapp.c: 1250: ANSELAbits.ANSA0 = 0;
 11907                           
 11908                           ; BSR set to: 0
 11909  0036EC  010F               	movlb	15	; () banked
 11910  0036EE  915B               	bcf	91,0,b	;volatile
 11911                           
 11912                           ; BSR set to: 15
 11913                           ;MOTEapp.c: 1252: moduleResync();
 11914  0036F0  EC09  F023         	call	_moduleResync	;wreg free
 11915                           
 11916                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 11917  0036F4  0E00               	movlw	0
 11918  0036F6  0100               	movlb	0	; () banked
 11919  0036F8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11920  0036FA  0E28               	movlw	40
 11921  0036FC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11922  0036FE  ECAC  F029         	call	_moteApp_delayms	;wreg free
 11923                           
 11924                           ;MOTEapp.c: 1254: moduleResync();
 11925  003702  EC09  F023         	call	_moduleResync	;wreg free
 11926                           
 11927                           ;MOTEapp.c: 1255: moteApp_delayms(40);
 11928  003706  0E00               	movlw	0
 11929  003708  0100               	movlb	0	; () banked
 11930  00370A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 11931  00370C  0E28               	movlw	40
 11932  00370E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 11933  003710  ECAC  F029         	call	_moteApp_delayms	;wreg free
 11934                           
 11935                           ;MOTEapp.c: 1256: return status;
 11936  003714  0100               	movlb	0	; () banked
 11937  003716  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 11938  003718  0012               	return	
 11939  00371A                     __end_of_moteApp_GoToSleep:
 11940                           	opt stack 0
 11941                           tblptru	equ	0xFF8
 11942                           tblptrh	equ	0xFF7
 11943                           tblptrl	equ	0xFF6
 11944                           tablat	equ	0xFF5
 11945                           prodh	equ	0xFF4
 11946                           prodl	equ	0xFF3
 11947                           intcon	equ	0xFF2
 11948                           intcon3	equ	0xFF0
 11949                           postinc0	equ	0xFEE
 11950                           wreg	equ	0xFE8
 11951                           indf1	equ	0xFE7
 11952                           postdec1	equ	0xFE5
 11953                           fsr1h	equ	0xFE2
 11954                           fsr1l	equ	0xFE1
 11955                           indf2	equ	0xFDF
 11956                           fsr2h	equ	0xFDA
 11957                           fsr2l	equ	0xFD9
 11958                           status	equ	0xFD8
 11959                           
 11960 ;; *************** function _oled_init *****************
 11961 ;; Defined at:
 11962 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;		None
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11979 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11980 ;;Total ram usage:        0 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:   16
 11983 ;; This function calls:
 11984 ;;		_oled_clear
 11985 ;;		_oled_devInit
 11986 ;;		_oled_setDisplay
 11987 ;;		_oled_setFont
 11988 ;; This function is called by:
 11989 ;;		_main
 11990 ;;		_moteApp_GoToSleep
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text30
 11995  0053EE                     __ptext30:
 11996                           	opt stack 0
 11997  0053EE                     _oled_init:
 11998                           	opt stack 14
 11999                           
 12000                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;incstack = 0
 12004  0053EE  9496               	bcf	3990,2,c	;volatile
 12005                           
 12006                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12007  0053F0  848D               	bsf	3981,2,c	;volatile
 12008                           
 12009                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12010  0053F2  9493               	bcf	3987,2,c	;volatile
 12011                           
 12012                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12013  0053F4  9693               	bcf	3987,3,c	;volatile
 12014                           
 12015                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12016  0053F6  9893               	bcf	3987,4,c	;volatile
 12017                           
 12018                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12019  0053F8  9094               	bcf	3988,0,c	;volatile
 12020                           
 12021                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12022  0053FA  9294               	bcf	3988,1,c	;volatile
 12023                           
 12024                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12025  0053FC  868A               	bsf	3978,3,c	;volatile
 12026                           
 12027                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12028  0053FE  988A               	bcf	3978,4,c	;volatile
 12029                           
 12030                           ;SSD1306oLED.c: 381: oled_devInit();
 12031  005400  EC0F  F024         	call	_oled_devInit	;wreg free
 12032                           
 12033                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12034  005404  0E01               	movlw	1
 12035  005406  EC07  F02B         	call	_oled_setDisplay
 12036                           
 12037                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12038  00540A  0EF7               	movlw	low _OledFont0
 12039  00540C  0100               	movlb	0	; () banked
 12040  00540E  6F60               	movwf	oled_setFont@font& (0+255),b
 12041  005410  0E75               	movlw	high _OledFont0
 12042  005412  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12043  005414  ECF3  F02B         	call	_oled_setFont	;wreg free
 12044                           
 12045                           ;SSD1306oLED.c: 385: oled_clear();
 12046  005418  ECAD  F02B         	call	_oled_clear	;wreg free
 12047  00541C  0012               	return		;funcret
 12048  00541E                     __end_of_oled_init:
 12049                           	opt stack 0
 12050                           tblptru	equ	0xFF8
 12051                           tblptrh	equ	0xFF7
 12052                           tblptrl	equ	0xFF6
 12053                           tablat	equ	0xFF5
 12054                           prodh	equ	0xFF4
 12055                           prodl	equ	0xFF3
 12056                           intcon	equ	0xFF2
 12057                           intcon3	equ	0xFF0
 12058                           postinc0	equ	0xFEE
 12059                           wreg	equ	0xFE8
 12060                           indf1	equ	0xFE7
 12061                           postdec1	equ	0xFE5
 12062                           fsr1h	equ	0xFE2
 12063                           fsr1l	equ	0xFE1
 12064                           indf2	equ	0xFDF
 12065                           fsr2h	equ	0xFDA
 12066                           fsr2l	equ	0xFD9
 12067                           status	equ	0xFD8
 12068                           
 12069 ;; *************** function _oled_setFont *****************
 12070 ;; Defined at:
 12071 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12074 ;;		 -> OledFont0(768), 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;		None
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  1    wreg      void 
 12079 ;; Registers used:
 12080 ;;		wreg, status,2, status,0
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12086 ;;      Params:         0       2       0       0       0       0       0       0       0
 12087 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12089 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12090 ;;Total ram usage:        2 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:   11
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		_oled_init
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text31
 12101  0057E6                     __ptext31:
 12102                           	opt stack 0
 12103  0057E6                     _oled_setFont:
 12104                           	opt stack 18
 12105                           
 12106                           ;SSD1306oLED.c: 258: if(font!=0)
 12107                           
 12108                           ;incstack = 0
 12109  0057E6  0100               	movlb	0	; () banked
 12110  0057E8  5160               	movf	oled_setFont@font& (0+255),w,b
 12111  0057EA  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12112  0057EC  B4D8               	btfsc	status,2,c
 12113  0057EE  0012               	return	
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;SSD1306oLED.c: 259: {
 12117                           ;SSD1306oLED.c: 260: selectedFont=font;
 12118  0057F0  C060  F1FB         	movff	oled_setFont@font,_selectedFont
 12119  0057F4  C061  F1FC         	movff	oled_setFont@font+1,_selectedFont+1
 12120  0057F8  0012               	return	
 12121  0057FA                     __end_of_oled_setFont:
 12122                           	opt stack 0
 12123                           tblptru	equ	0xFF8
 12124                           tblptrh	equ	0xFF7
 12125                           tblptrl	equ	0xFF6
 12126                           tablat	equ	0xFF5
 12127                           prodh	equ	0xFF4
 12128                           prodl	equ	0xFF3
 12129                           intcon	equ	0xFF2
 12130                           intcon3	equ	0xFF0
 12131                           postinc0	equ	0xFEE
 12132                           wreg	equ	0xFE8
 12133                           indf1	equ	0xFE7
 12134                           postdec1	equ	0xFE5
 12135                           fsr1h	equ	0xFE2
 12136                           fsr1l	equ	0xFE1
 12137                           indf2	equ	0xFDF
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function _oled_setDisplay *****************
 12143 ;; Defined at:
 12144 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  displayType     1    wreg     enum E5868
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  displayType     1    1[BANK0 ] enum E5868
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  1    wreg      void 
 12151 ;; Registers used:
 12152 ;;		wreg, status,2, cstack
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12158 ;;      Params:         0       0       0       0       0       0       0       0       0
 12159 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12161 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12162 ;;Total ram usage:        1 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:   12
 12165 ;; This function calls:
 12166 ;;		_oled_writeCommand
 12167 ;; This function is called by:
 12168 ;;		_oled_init
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           	psect	text32
 12173  00560E                     __ptext32:
 12174                           	opt stack 0
 12175  00560E                     _oled_setDisplay:
 12176                           	opt stack 17
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;incstack = 0
 12180                           ;oled_setDisplay@displayType stored from wreg
 12181  00560E  0100               	movlb	0	; () banked
 12182  005610  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12183                           
 12184                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12185  005612  0100               	movlb	0	; () banked
 12186  005614  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12187  005616  A4D8               	btfss	status,2,c
 12188  005618  D007               	goto	l1066
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;SSD1306oLED.c: 414: {
 12192                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12193  00561A  0EA0               	movlw	160
 12194  00561C  ECD2  F02B         	call	_oled_writeCommand
 12195                           
 12196                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12197  005620  0EC8               	movlw	200
 12198  005622  ECD2  F02B         	call	_oled_writeCommand
 12199                           
 12200                           ;SSD1306oLED.c: 417: }
 12201  005626  0012               	return	
 12202  005628                     l1066:
 12203                           
 12204                           ;SSD1306oLED.c: 418: else
 12205                           ;SSD1306oLED.c: 419: {
 12206                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12207  005628  0EA1               	movlw	161
 12208  00562A  ECD2  F02B         	call	_oled_writeCommand
 12209                           
 12210                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12211  00562E  0EC0               	movlw	192
 12212  005630  ECD2  F02B         	call	_oled_writeCommand
 12213  005634  0012               	return	
 12214  005636                     __end_of_oled_setDisplay:
 12215                           	opt stack 0
 12216                           tblptru	equ	0xFF8
 12217                           tblptrh	equ	0xFF7
 12218                           tblptrl	equ	0xFF6
 12219                           tablat	equ	0xFF5
 12220                           prodh	equ	0xFF4
 12221                           prodl	equ	0xFF3
 12222                           intcon	equ	0xFF2
 12223                           intcon3	equ	0xFF0
 12224                           postinc0	equ	0xFEE
 12225                           wreg	equ	0xFE8
 12226                           indf1	equ	0xFE7
 12227                           postdec1	equ	0xFE5
 12228                           fsr1h	equ	0xFE2
 12229                           fsr1l	equ	0xFE1
 12230                           indf2	equ	0xFDF
 12231                           fsr2h	equ	0xFDA
 12232                           fsr2l	equ	0xFD9
 12233                           status	equ	0xFD8
 12234                           
 12235 ;; *************** function _oled_devInit *****************
 12236 ;; Defined at:
 12237 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12253 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12254 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        1 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:   13
 12258 ;; This function calls:
 12259 ;;		_oled_initialDispayLine
 12260 ;;		_oled_powerControl
 12261 ;;		_oled_regulorResistorSelect
 12262 ;;		_oled_setContrastControlRegister
 12263 ;;		_oled_writeCommand
 12264 ;; This function is called by:
 12265 ;;		_oled_init
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text33
 12270  00481E                     __ptext33:
 12271                           	opt stack 0
 12272  00481E                     _oled_devInit:
 12273                           	opt stack 16
 12274                           
 12275                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12276                           
 12277                           ;incstack = 0
 12278  00481E  0EE2               	movlw	226
 12279  004820  ECD2  F02B         	call	_oled_writeCommand
 12280                           
 12281                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12282  004824  848A               	bsf	3978,2,c	;volatile
 12283                           
 12284                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12285  004826  0E04               	movlw	4
 12286  004828  0100               	movlb	0	; () banked
 12287  00482A  6F62               	movwf	??_oled_devInit& (0+255),b
 12288  00482C  0E1C               	movlw	28
 12289  00482E                     u10947:
 12290  00482E  2EE8               	decfsz	wreg,f,c
 12291  004830  D7FE               	bra	u10947
 12292  004832  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12293  004834  D7FC               	bra	u10947
 12294  004836  F000               	nop	
 12295                           
 12296                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 12297  004838  948A               	bcf	3978,2,c	;volatile
 12298                           
 12299                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12300  00483A  0E20               	movlw	32
 12301  00483C  0100               	movlb	0	; () banked
 12302  00483E  6F62               	movwf	??_oled_devInit& (0+255),b
 12303  004840  0E29               	movlw	41
 12304  004842                     u10957:
 12305  004842  2EE8               	decfsz	wreg,f,c
 12306  004844  D7FE               	bra	u10957
 12307  004846  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12308  004848  D7FC               	bra	u10957
 12309  00484A  D000               	nop2	
 12310                           
 12311                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 12312  00484C  848A               	bsf	3978,2,c	;volatile
 12313                           
 12314                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12315  00484E  0E10               	movlw	16
 12316  004850  0100               	movlb	0	; () banked
 12317  004852  6F62               	movwf	??_oled_devInit& (0+255),b
 12318  004854  0E94               	movlw	148
 12319  004856                     u10967:
 12320  004856  2EE8               	decfsz	wreg,f,c
 12321  004858  D7FE               	bra	u10967
 12322  00485A  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12323  00485C  D7FC               	bra	u10967
 12324  00485E  F000               	nop	
 12325                           
 12326                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 12327  004860  0EA1               	movlw	161
 12328  004862  ECD2  F02B         	call	_oled_writeCommand
 12329                           
 12330                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 12331  004866  0EC0               	movlw	192
 12332  004868  ECD2  F02B         	call	_oled_writeCommand
 12333                           
 12334                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 12335  00486C  0EA3               	movlw	163
 12336  00486E  ECD2  F02B         	call	_oled_writeCommand
 12337                           
 12338                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 12339  004872  0E07               	movlw	7
 12340  004874  EC2C  F02C         	call	_oled_powerControl
 12341                           
 12342                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 12343  004878  0E05               	movlw	5
 12344  00487A  EC24  F02C         	call	_oled_regulorResistorSelect
 12345                           
 12346                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 12347  00487E  505D               	movf	_Contrast_level,w,c
 12348  004880  ECFD  F02B         	call	_oled_setContrastControlRegister
 12349                           
 12350                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 12351  004884  0E00               	movlw	0
 12352  004886  EC34  F02C         	call	_oled_initialDispayLine
 12353                           
 12354                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 12355  00488A  0EF8               	movlw	248
 12356  00488C  ECD2  F02B         	call	_oled_writeCommand
 12357                           
 12358                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 12359  004890  0E00               	movlw	0
 12360  004892  ECD2  F02B         	call	_oled_writeCommand
 12361                           
 12362                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 12363  004896  0EAF               	movlw	175
 12364  004898  ECD2  F02B         	call	_oled_writeCommand
 12365  00489C  0012               	return		;funcret
 12366  00489E                     __end_of_oled_devInit:
 12367                           	opt stack 0
 12368                           tblptru	equ	0xFF8
 12369                           tblptrh	equ	0xFF7
 12370                           tblptrl	equ	0xFF6
 12371                           tablat	equ	0xFF5
 12372                           prodh	equ	0xFF4
 12373                           prodl	equ	0xFF3
 12374                           intcon	equ	0xFF2
 12375                           intcon3	equ	0xFF0
 12376                           postinc0	equ	0xFEE
 12377                           wreg	equ	0xFE8
 12378                           indf1	equ	0xFE7
 12379                           postdec1	equ	0xFE5
 12380                           fsr1h	equ	0xFE2
 12381                           fsr1l	equ	0xFE1
 12382                           indf2	equ	0xFDF
 12383                           fsr2h	equ	0xFDA
 12384                           fsr2l	equ	0xFD9
 12385                           status	equ	0xFD8
 12386                           
 12387 ;; *************** function _oled_setContrastControlRegister *****************
 12388 ;; Defined at:
 12389 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  mod             1    wreg     unsigned char 
 12392 ;; Auto vars:     Size  Location     Type
 12393 ;;  mod             1    1[BANK0 ] unsigned char 
 12394 ;; Return value:  Size  Location     Type
 12395 ;;                  1    wreg      void 
 12396 ;; Registers used:
 12397 ;;		wreg, status,2, cstack
 12398 ;; Tracked objects:
 12399 ;;		On entry : 0/0
 12400 ;;		On exit  : 0/0
 12401 ;;		Unchanged: 0/0
 12402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12403 ;;      Params:         0       0       0       0       0       0       0       0       0
 12404 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12406 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12407 ;;Total ram usage:        1 bytes
 12408 ;; Hardware stack levels used:    1
 12409 ;; Hardware stack levels required when called:   12
 12410 ;; This function calls:
 12411 ;;		_oled_writeCommand
 12412 ;; This function is called by:
 12413 ;;		_oled_devInit
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text34
 12418  0057FA                     __ptext34:
 12419                           	opt stack 0
 12420  0057FA                     _oled_setContrastControlRegister:
 12421                           	opt stack 16
 12422                           
 12423                           ;incstack = 0
 12424                           ;oled_setContrastControlRegister@mod stored from wreg
 12425  0057FA  0100               	movlb	0	; () banked
 12426  0057FC  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12427                           
 12428                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 12429  0057FE  0E81               	movlw	129
 12430  005800  ECD2  F02B         	call	_oled_writeCommand
 12431                           
 12432                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 12433  005804  0100               	movlb	0	; () banked
 12434  005806  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12435  005808  ECD2  F02B         	call	_oled_writeCommand
 12436  00580C  0012               	return	
 12437  00580E                     __end_of_oled_setContrastControlRegister:
 12438                           	opt stack 0
 12439                           tblptru	equ	0xFF8
 12440                           tblptrh	equ	0xFF7
 12441                           tblptrl	equ	0xFF6
 12442                           tablat	equ	0xFF5
 12443                           prodh	equ	0xFF4
 12444                           prodl	equ	0xFF3
 12445                           intcon	equ	0xFF2
 12446                           intcon3	equ	0xFF0
 12447                           postinc0	equ	0xFEE
 12448                           wreg	equ	0xFE8
 12449                           indf1	equ	0xFE7
 12450                           postdec1	equ	0xFE5
 12451                           fsr1h	equ	0xFE2
 12452                           fsr1l	equ	0xFE1
 12453                           indf2	equ	0xFDF
 12454                           fsr2h	equ	0xFDA
 12455                           fsr2l	equ	0xFD9
 12456                           status	equ	0xFD8
 12457                           
 12458 ;; *************** function _oled_regulorResistorSelect *****************
 12459 ;; Defined at:
 12460 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;  r               1    wreg     unsigned char 
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;  r               1    1[BANK0 ] unsigned char 
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		wreg, status,2, status,0, cstack
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0
 12475 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12477 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12478 ;;Total ram usage:        1 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:   12
 12481 ;; This function calls:
 12482 ;;		_oled_writeCommand
 12483 ;; This function is called by:
 12484 ;;		_oled_devInit
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text35
 12489  005848                     __ptext35:
 12490                           	opt stack 0
 12491  005848                     _oled_regulorResistorSelect:
 12492                           	opt stack 16
 12493                           
 12494                           ;incstack = 0
 12495                           ;oled_regulorResistorSelect@r stored from wreg
 12496  005848  0100               	movlb	0	; () banked
 12497  00584A  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12498                           
 12499                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 12500  00584C  0100               	movlb	0	; () banked
 12501  00584E  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12502  005850  0920               	iorlw	32
 12503  005852  ECD2  F02B         	call	_oled_writeCommand
 12504  005856  0012               	return	
 12505  005858                     __end_of_oled_regulorResistorSelect:
 12506                           	opt stack 0
 12507                           tblptru	equ	0xFF8
 12508                           tblptrh	equ	0xFF7
 12509                           tblptrl	equ	0xFF6
 12510                           tablat	equ	0xFF5
 12511                           prodh	equ	0xFF4
 12512                           prodl	equ	0xFF3
 12513                           intcon	equ	0xFF2
 12514                           intcon3	equ	0xFF0
 12515                           postinc0	equ	0xFEE
 12516                           wreg	equ	0xFE8
 12517                           indf1	equ	0xFE7
 12518                           postdec1	equ	0xFE5
 12519                           fsr1h	equ	0xFE2
 12520                           fsr1l	equ	0xFE1
 12521                           indf2	equ	0xFDF
 12522                           fsr2h	equ	0xFDA
 12523                           fsr2l	equ	0xFD9
 12524                           status	equ	0xFD8
 12525                           
 12526 ;; *************** function _oled_powerControl *****************
 12527 ;; Defined at:
 12528 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  vol             1    wreg     unsigned char 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;  vol             1    1[BANK0 ] unsigned char 
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      void 
 12535 ;; Registers used:
 12536 ;;		wreg, status,2, status,0, cstack
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12542 ;;      Params:         0       0       0       0       0       0       0       0       0
 12543 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12545 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12546 ;;Total ram usage:        1 bytes
 12547 ;; Hardware stack levels used:    1
 12548 ;; Hardware stack levels required when called:   12
 12549 ;; This function calls:
 12550 ;;		_oled_writeCommand
 12551 ;; This function is called by:
 12552 ;;		_oled_devInit
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           	psect	text36
 12557  005858                     __ptext36:
 12558                           	opt stack 0
 12559  005858                     _oled_powerControl:
 12560                           	opt stack 16
 12561                           
 12562                           ;incstack = 0
 12563                           ;oled_powerControl@vol stored from wreg
 12564  005858  0100               	movlb	0	; () banked
 12565  00585A  6F61               	movwf	oled_powerControl@vol& (0+255),b
 12566                           
 12567                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 12568  00585C  0100               	movlb	0	; () banked
 12569  00585E  5161               	movf	oled_powerControl@vol& (0+255),w,b
 12570  005860  0928               	iorlw	40
 12571  005862  ECD2  F02B         	call	_oled_writeCommand
 12572  005866  0012               	return	
 12573  005868                     __end_of_oled_powerControl:
 12574                           	opt stack 0
 12575                           tblptru	equ	0xFF8
 12576                           tblptrh	equ	0xFF7
 12577                           tblptrl	equ	0xFF6
 12578                           tablat	equ	0xFF5
 12579                           prodh	equ	0xFF4
 12580                           prodl	equ	0xFF3
 12581                           intcon	equ	0xFF2
 12582                           intcon3	equ	0xFF0
 12583                           postinc0	equ	0xFEE
 12584                           wreg	equ	0xFE8
 12585                           indf1	equ	0xFE7
 12586                           postdec1	equ	0xFE5
 12587                           fsr1h	equ	0xFE2
 12588                           fsr1l	equ	0xFE1
 12589                           indf2	equ	0xFDF
 12590                           fsr2h	equ	0xFDA
 12591                           fsr2l	equ	0xFD9
 12592                           status	equ	0xFD8
 12593                           
 12594 ;; *************** function _oled_initialDispayLine *****************
 12595 ;; Defined at:
 12596 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;  line            1    wreg     unsigned char 
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;  line            1    1[BANK0 ] unsigned char 
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  1    wreg      void 
 12603 ;; Registers used:
 12604 ;;		wreg, status,2, status,0, cstack
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12610 ;;      Params:         0       0       0       0       0       0       0       0       0
 12611 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12612 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12613 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12614 ;;Total ram usage:        1 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:   12
 12617 ;; This function calls:
 12618 ;;		_oled_writeCommand
 12619 ;; This function is called by:
 12620 ;;		_oled_devInit
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           	psect	text37
 12625  005868                     __ptext37:
 12626                           	opt stack 0
 12627  005868                     _oled_initialDispayLine:
 12628                           	opt stack 16
 12629                           
 12630                           ;incstack = 0
 12631                           ;oled_initialDispayLine@line stored from wreg
 12632  005868  0100               	movlb	0	; () banked
 12633  00586A  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 12634                           
 12635                           ;SSD1306oLED.c: 464: line|=0x40;
 12636  00586C  0100               	movlb	0	; () banked
 12637  00586E  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 12641  005870  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 12642  005872  ECD2  F02B         	call	_oled_writeCommand
 12643  005876  0012               	return	
 12644  005878                     __end_of_oled_initialDispayLine:
 12645                           	opt stack 0
 12646                           tblptru	equ	0xFF8
 12647                           tblptrh	equ	0xFF7
 12648                           tblptrl	equ	0xFF6
 12649                           tablat	equ	0xFF5
 12650                           prodh	equ	0xFF4
 12651                           prodl	equ	0xFF3
 12652                           intcon	equ	0xFF2
 12653                           intcon3	equ	0xFF0
 12654                           postinc0	equ	0xFEE
 12655                           wreg	equ	0xFE8
 12656                           indf1	equ	0xFE7
 12657                           postdec1	equ	0xFE5
 12658                           fsr1h	equ	0xFE2
 12659                           fsr1l	equ	0xFE1
 12660                           indf2	equ	0xFDF
 12661                           fsr2h	equ	0xFDA
 12662                           fsr2l	equ	0xFD9
 12663                           status	equ	0xFD8
 12664                           
 12665 ;; *************** function _oled_displayOff *****************
 12666 ;; Defined at:
 12667 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  state           1    wreg     unsigned char 
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;  state           1    0[COMRAM] unsigned char 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  1    wreg      void 
 12674 ;; Registers used:
 12675 ;;		wreg, cstack
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 0/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12681 ;;      Params:         0       0       0       0       0       0       0       0       0
 12682 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12683 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12684 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12685 ;;Total ram usage:        0 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:   12
 12688 ;; This function calls:
 12689 ;;		_oled_writeCommand
 12690 ;; This function is called by:
 12691 ;;		_moteApp_GoToSleep
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text38
 12696  0058E2                     __ptext38:
 12697                           	opt stack 0
 12698  0058E2                     _oled_displayOff:
 12699                           	opt stack 15
 12700                           
 12701                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 12702                           
 12703                           ;incstack = 0
 12704  0058E2  0EAE               	movlw	174
 12705  0058E4  ECD2  F02B         	call	_oled_writeCommand
 12706  0058E8  0012               	return		;funcret
 12707  0058EA                     __end_of_oled_displayOff:
 12708                           	opt stack 0
 12709                           tblptru	equ	0xFF8
 12710                           tblptrh	equ	0xFF7
 12711                           tblptrl	equ	0xFF6
 12712                           tablat	equ	0xFF5
 12713                           prodh	equ	0xFF4
 12714                           prodl	equ	0xFF3
 12715                           intcon	equ	0xFF2
 12716                           intcon3	equ	0xFF0
 12717                           postinc0	equ	0xFEE
 12718                           wreg	equ	0xFE8
 12719                           indf1	equ	0xFE7
 12720                           postdec1	equ	0xFE5
 12721                           fsr1h	equ	0xFE2
 12722                           fsr1l	equ	0xFE1
 12723                           indf2	equ	0xFDF
 12724                           fsr2h	equ	0xFDA
 12725                           fsr2l	equ	0xFD9
 12726                           status	equ	0xFD8
 12727                           
 12728 ;; *************** function _moduleSleep *****************
 12729 ;; Defined at:
 12730 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      void 
 12737 ;; Registers used:
 12738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12746 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12747 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12748 ;;Total ram usage:        1 bytes
 12749 ;; Hardware stack levels used:    1
 12750 ;; Hardware stack levels required when called:   14
 12751 ;; This function calls:
 12752 ;;		_sendCommand
 12753 ;; This function is called by:
 12754 ;;		_moteApp_GoToSleep
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text39
 12759  005636                     __ptext39:
 12760                           	opt stack 0
 12761  005636                     _moduleSleep:
 12762                           	opt stack 13
 12763                           
 12764                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 12765                           
 12766                           ;incstack = 0
 12767  005636  0E82               	movlw	low STR_22
 12768  005638  0100               	movlb	0	; () banked
 12769  00563A  6F61               	movwf	sendCommand@string& (0+255),b
 12770  00563C  0E7A               	movlw	high STR_22
 12771  00563E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12772  005640  EC0F  F02A         	call	_sendCommand	;wreg free
 12773  005644                     
 12774                           ;MOTEapp.c: 179: ;
 12775  005644  B89D               	btfsc	3997,4,c	;volatile
 12776  005646  D7FE               	goto	l355
 12777                           
 12778                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 12779  005648  0EFA               	movlw	250
 12780  00564A  0100               	movlb	0	; () banked
 12781  00564C  6F63               	movwf	??_moduleSleep& (0+255),b
 12782  00564E  0E58               	movlw	88
 12783  005650                     u10977:
 12784  005650  2EE8               	decfsz	wreg,f,c
 12785  005652  D7FE               	bra	u10977
 12786  005654  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 12787  005656  D7FC               	bra	u10977
 12788  005658  F000               	nop	
 12789  00565A  0012               	return		;funcret
 12790  00565C                     __end_of_moduleSleep:
 12791                           	opt stack 0
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           intcon	equ	0xFF2
 12799                           intcon3	equ	0xFF0
 12800                           postinc0	equ	0xFEE
 12801                           wreg	equ	0xFE8
 12802                           indf1	equ	0xFE7
 12803                           postdec1	equ	0xFE5
 12804                           fsr1h	equ	0xFE2
 12805                           fsr1l	equ	0xFE1
 12806                           indf2	equ	0xFDF
 12807                           fsr2h	equ	0xFDA
 12808                           fsr2l	equ	0xFD9
 12809                           status	equ	0xFD8
 12810                           
 12811 ;; *************** function _moduleResync *****************
 12812 ;; Defined at:
 12813 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;		None
 12816 ;; Auto vars:     Size  Location     Type
 12817 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 12818 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0
 12829 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12831 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12832 ;;Total ram usage:        3 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:   14
 12835 ;; This function calls:
 12836 ;;		_MOTEapp_getModuleResponse
 12837 ;;		_moteApp_delayms
 12838 ;;		_sendCommand
 12839 ;; This function is called by:
 12840 ;;		_main
 12841 ;;		_moteApp_GoToSleep
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text40
 12846  004612                     __ptext40:
 12847                           	opt stack 0
 12848  004612                     _moduleResync:
 12849                           	opt stack 13
 12850                           
 12851                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 12852                           
 12853                           ;incstack = 0
 12854  004612  0E00               	movlw	0
 12855  004614  0100               	movlb	0	; () banked
 12856  004616  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12857                           
 12858                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 12859  004618  0E00               	movlw	0
 12860  00461A  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 12861  00461C  0E00               	movlw	0
 12862  00461E  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 12866  004620  9AAC               	bcf	4012,5,c	;volatile
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 12870  004622  9C8B               	bcf	3979,6,c	;volatile
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;MOTEapp.c: 147: moteApp_delayms(10);
 12874  004624  0E00               	movlw	0
 12875  004626  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12876  004628  0E0A               	movlw	10
 12877  00462A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12878  00462C  ECAC  F029         	call	_moteApp_delayms	;wreg free
 12879                           
 12880                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 12881  004630  8AAC               	bsf	4012,5,c	;volatile
 12882                           
 12883                           ;MOTEapp.c: 149: moteApp_delayms(5);
 12884  004632  0E00               	movlw	0
 12885  004634  0100               	movlb	0	; () banked
 12886  004636  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12887  004638  0E05               	movlw	5
 12888  00463A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12889  00463C  ECAC  F029         	call	_moteApp_delayms	;wreg free
 12890                           
 12891                           ;MOTEapp.c: 151: TXREG = 0x55;
 12892  004640  0E55               	movlw	85
 12893  004642  6EAD               	movwf	4013,c	;volatile
 12894  004644                     
 12895                           ;MOTEapp.c: 153: {};
 12896  004644  A2AC               	btfss	4012,1,c	;volatile
 12897  004646  D7FE               	goto	l337
 12898                           
 12899                           ;MOTEapp.c: 155: sendCommand("z");
 12900  004648  0EFC               	movlw	low STR_21
 12901  00464A  0100               	movlb	0	; () banked
 12902  00464C  6F61               	movwf	sendCommand@string& (0+255),b
 12903  00464E  0E7F               	movlw	high STR_21
 12904  004650  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12905  004652  EC0F  F02A         	call	_sendCommand	;wreg free
 12906                           
 12907                           ;MOTEapp.c: 157: moteApp_delayms(40);
 12908  004656  0E00               	movlw	0
 12909  004658  0100               	movlb	0	; () banked
 12910  00465A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12911  00465C  0E28               	movlw	40
 12912  00465E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12913  004660  ECAC  F029         	call	_moteApp_delayms	;wreg free
 12914                           
 12915                           ;MOTEapp.c: 158: while (escapeEvent)
 12916  004664  D013               	goto	l343
 12917  004666                     
 12918                           ;MOTEapp.c: 159: {
 12919                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 12920  004666  EC12  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 12921  00466A  0900               	iorlw	0
 12922  00466C  B4D8               	btfsc	status,2,c
 12923  00466E  D003               	goto	l341
 12924                           
 12925                           ;MOTEapp.c: 161: escapeEvent = 1;
 12926  004670  0E01               	movlw	1
 12927  004672  0100               	movlb	0	; () banked
 12928  004674  D00A               	goto	L6
 12929  004676                     l341:
 12930                           
 12931                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 12932                           
 12933                           ; BSR set to: 0
 12934  004676  0100               	movlb	0	; () banked
 12935  004678  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 12936  00467A  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 12937  00467C  0E89               	movlw	137
 12938  00467E  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 12939  004680  0E13               	movlw	19
 12940  004682  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 12941  004684  A0D8               	btfss	status,0,c
 12942  004686  D002               	goto	l343
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;MOTEapp.c: 163: escapeEvent = 1;
 12946  004688  0E01               	movlw	1
 12947  00468A                     L6:
 12948  00468A  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 12949  00468C                     l343:
 12950                           
 12951                           ; BSR set to: 0
 12952                           
 12953                           ; BSR set to: 0
 12954  00468C  0100               	movlb	0	; () banked
 12955  00468E  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 12956  004690  B4D8               	btfsc	status,2,c
 12957  004692  0012               	return	
 12958  004694  D7E8               	goto	l340
 12959  004696                     __end_of_moduleResync:
 12960                           	opt stack 0
 12961                           tblptru	equ	0xFF8
 12962                           tblptrh	equ	0xFF7
 12963                           tblptrl	equ	0xFF6
 12964                           tablat	equ	0xFF5
 12965                           prodh	equ	0xFF4
 12966                           prodl	equ	0xFF3
 12967                           intcon	equ	0xFF2
 12968                           intcon3	equ	0xFF0
 12969                           postinc0	equ	0xFEE
 12970                           wreg	equ	0xFE8
 12971                           indf1	equ	0xFE7
 12972                           postdec1	equ	0xFE5
 12973                           fsr1h	equ	0xFE2
 12974                           fsr1l	equ	0xFE1
 12975                           indf2	equ	0xFDF
 12976                           fsr2h	equ	0xFDA
 12977                           fsr2l	equ	0xFD9
 12978                           status	equ	0xFD8
 12979                           
 12980 ;; *************** function _MOTEapp_getModuleResponse *****************
 12981 ;; Defined at:
 12982 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;		None
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 12987 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      unsigned char 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0
 12998 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13000 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13001 ;;Total ram usage:        2 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:   12
 13004 ;; This function calls:
 13005 ;;		_EUSART_Read
 13006 ;; This function is called by:
 13007 ;;		_moduleResync
 13008 ;;		_moteHandler
 13009 ;;		_moteApp_setSensorsInput
 13010 ;;		_moteApp_getTempValue
 13011 ;;		_moteApp_getLightValue
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           	psect	text41
 13016  004C24                     __ptext41:
 13017                           	opt stack 0
 13018  004C24                     _MOTEapp_getModuleResponse:
 13019                           	opt stack 15
 13020                           
 13021                           ;MOTEapp.c: 1076: bool terminatorReceived = 0;
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;incstack = 0
 13025  004C24  0E00               	movlw	0
 13026  004C26  0100               	movlb	0	; () banked
 13027  004C28  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13028                           
 13029                           ;MOTEapp.c: 1078: if ((eusartRxCount))
 13030  004C2A  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13031  004C2C  B4D8               	btfsc	status,2,c
 13032  004C2E  D02B               	goto	l626
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;MOTEapp.c: 1079: {
 13036                           ;MOTEapp.c: 1080: uint8_t bufferByte = 0;
 13037  004C30  0E00               	movlw	0
 13038  004C32  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;MOTEapp.c: 1081: bufferByte = EUSART_Read();
 13042  004C34  EC24  F029         	call	_EUSART_Read	;wreg free
 13043  004C38  0100               	movlb	0	; () banked
 13044  004C3A  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;MOTEapp.c: 1083: if (bufferByte == 0x0D)
 13048  004C3C  0E0D               	movlw	13
 13049  004C3E  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13050  004C40  A4D8               	btfss	status,2,c
 13051  004C42  D00F               	goto	l621
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;MOTEapp.c: 1084: {
 13055                           ;MOTEapp.c: 1085: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13056  004C44  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13057  004C46  0D01               	mullw	1
 13058  004C48  0E65               	movlw	low _moduleResonseBuffer
 13059  004C4A  24F3               	addwf	prodl,w,c
 13060  004C4C  6ED9               	movwf	fsr2l,c
 13061  004C4E  0E01               	movlw	high _moduleResonseBuffer
 13062  004C50  20F4               	addwfc	prodh,w,c
 13063  004C52  6EDA               	movwf	fsr2h,c
 13064  004C54  0E00               	movlw	0
 13065  004C56  6EDF               	movwf	indf2,c
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;MOTEapp.c: 1086: terminatorReceived = 1;
 13069  004C58  0E01               	movlw	1
 13070  004C5A  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;MOTEapp.c: 1087: moduleBufferIndex = 0;
 13074  004C5C  0E00               	movlw	0
 13075  004C5E  6FF2               	movwf	_moduleBufferIndex& (0+255),b
 13076                           
 13077                           ;MOTEapp.c: 1088: }
 13078  004C60  D012               	goto	l626
 13079  004C62                     l621:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;MOTEapp.c: 1089: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13083                           
 13084                           ; BSR set to: 0
 13085  004C62  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13086  004C64  B4D8               	btfsc	status,2,c
 13087  004C66  D00F               	goto	l626
 13088                           
 13089                           ; BSR set to: 0
 13090  004C68  0E0A               	movlw	10
 13091  004C6A  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13092  004C6C  B4D8               	btfsc	status,2,c
 13093  004C6E  D00B               	goto	l626
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;MOTEapp.c: 1093: else
 13097                           ;MOTEapp.c: 1094: {
 13098                           ;MOTEapp.c: 1095: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13099                           
 13100                           ; BSR set to: 0
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;MOTEapp.c: 1090: {
 13104                           ;MOTEapp.c: 1092: }
 13105  004C70  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13106  004C72  0D01               	mullw	1
 13107  004C74  0E65               	movlw	low _moduleResonseBuffer
 13108  004C76  24F3               	addwf	prodl,w,c
 13109  004C78  6ED9               	movwf	fsr2l,c
 13110  004C7A  0E01               	movlw	high _moduleResonseBuffer
 13111  004C7C  20F4               	addwfc	prodh,w,c
 13112  004C7E  6EDA               	movwf	fsr2h,c
 13113  004C80  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;MOTEapp.c: 1097: moduleBufferIndex++;
 13117  004C84  2BF2               	incf	_moduleBufferIndex& (0+255),f,b
 13118  004C86                     l626:
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;MOTEapp.c: 1098: }
 13122                           ;MOTEapp.c: 1099: }
 13123                           ;MOTEapp.c: 1100: return terminatorReceived;
 13124                           
 13125                           ; BSR set to: 0
 13126                           
 13127                           ; BSR set to: 0
 13128                           
 13129                           ; BSR set to: 0
 13130  004C86  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13131  004C88  0012               	return	
 13132  004C8A                     __end_of_MOTEapp_getModuleResponse:
 13133                           	opt stack 0
 13134                           tblptru	equ	0xFF8
 13135                           tblptrh	equ	0xFF7
 13136                           tblptrl	equ	0xFF6
 13137                           tablat	equ	0xFF5
 13138                           prodh	equ	0xFF4
 13139                           prodl	equ	0xFF3
 13140                           intcon	equ	0xFF2
 13141                           intcon3	equ	0xFF0
 13142                           postinc0	equ	0xFEE
 13143                           wreg	equ	0xFE8
 13144                           indf1	equ	0xFE7
 13145                           postdec1	equ	0xFE5
 13146                           fsr1h	equ	0xFE2
 13147                           fsr1l	equ	0xFE1
 13148                           indf2	equ	0xFDF
 13149                           fsr2h	equ	0xFDA
 13150                           fsr2l	equ	0xFD9
 13151                           status	equ	0xFD8
 13152                           
 13153 ;; *************** function _EUSART_FlushBuffer *****************
 13154 ;; Defined at:
 13155 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  index           1    0[BANK0 ] unsigned char 
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      void 
 13162 ;; Registers used:
 13163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0
 13170 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13172 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13173 ;;Total ram usage:        1 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:   11
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_test_powerup
 13180 ;;		_moteApp_GoToSleep
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text42
 13185  005090                     __ptext42:
 13186                           	opt stack 0
 13187  005090                     _EUSART_FlushBuffer:
 13188                           	opt stack 18
 13189                           
 13190                           ;eusart.c: 204: uint8_t index;
 13191                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;incstack = 0
 13195  005090  0E00               	movlw	0
 13196  005092  0100               	movlb	0	; () banked
 13197  005094  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13198  005096                     l8400:
 13199                           
 13200                           ; BSR set to: 0
 13201  005096  0E3F               	movlw	63
 13202  005098  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13203  00509A  D001               	goto	l1232
 13204  00509C  D00C               	goto	u6400
 13205  00509E                     l1232:
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;eusart.c: 206: {
 13209                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13210                           
 13211                           ; BSR set to: 0
 13212  00509E  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13213  0050A0  0D01               	mullw	1
 13214  0050A2  0E00               	movlw	low _eusartRxBuffer
 13215  0050A4  24F3               	addwf	prodl,w,c
 13216  0050A6  6ED9               	movwf	fsr2l,c
 13217  0050A8  0E02               	movlw	high _eusartRxBuffer
 13218  0050AA  20F4               	addwfc	prodh,w,c
 13219  0050AC  6EDA               	movwf	fsr2h,c
 13220  0050AE  0E00               	movlw	0
 13221  0050B0  6EDF               	movwf	indf2,c
 13222                           
 13223                           ; BSR set to: 0
 13224  0050B2  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13225  0050B4  D7F0               	goto	l8400
 13226  0050B6                     u6400:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;eusart.c: 208: }
 13230                           ;eusart.c: 209: eusartRxHead = 0;
 13231                           
 13232                           ; BSR set to: 0
 13233  0050B6  0E00               	movlw	0
 13234  0050B8  6FE0               	movwf	_eusartRxHead& (0+255),b
 13235                           
 13236                           ;eusart.c: 210: eusartRxTail = 0;
 13237  0050BA  0E00               	movlw	0
 13238  0050BC  6FDF               	movwf	_eusartRxTail& (0+255),b
 13239                           
 13240                           ;eusart.c: 211: eusartRxCount = 0;
 13241  0050BE  0E00               	movlw	0
 13242  0050C0  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13246  0050C2  989D               	bcf	3997,4,c	;volatile
 13247                           
 13248                           ;eusart.c: 214: eusartTxHead = 0;
 13249  0050C4  0E00               	movlw	0
 13250  0050C6  6FE3               	movwf	_eusartTxHead& (0+255),b
 13251                           
 13252                           ;eusart.c: 215: eusartTxTail = 0;
 13253  0050C8  0E00               	movlw	0
 13254  0050CA  6FE2               	movwf	_eusartTxTail& (0+255),b
 13255                           
 13256                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13257  0050CC  0E40               	movlw	64
 13258  0050CE  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13259                           
 13260                           ; BSR set to: 0
 13261  0050D0  0012               	return		;funcret
 13262  0050D2                     __end_of_EUSART_FlushBuffer:
 13263                           	opt stack 0
 13264                           tblptru	equ	0xFF8
 13265                           tblptrh	equ	0xFF7
 13266                           tblptrl	equ	0xFF6
 13267                           tablat	equ	0xFF5
 13268                           prodh	equ	0xFF4
 13269                           prodl	equ	0xFF3
 13270                           intcon	equ	0xFF2
 13271                           intcon3	equ	0xFF0
 13272                           postinc0	equ	0xFEE
 13273                           wreg	equ	0xFE8
 13274                           indf1	equ	0xFE7
 13275                           postdec1	equ	0xFE5
 13276                           fsr1h	equ	0xFE2
 13277                           fsr1l	equ	0xFE1
 13278                           indf2	equ	0xFDF
 13279                           fsr2h	equ	0xFDA
 13280                           fsr2l	equ	0xFD9
 13281                           status	equ	0xFD8
 13282                           
 13283 ;; *************** function _TMR2_ReadTimer *****************
 13284 ;; Defined at:
 13285 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  readVal         1    0[BANK0 ] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      unsigned char 
 13292 ;; Registers used:
 13293 ;;		wreg, status,2
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0
 13300 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13302 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13303 ;;Total ram usage:        1 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:   11
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		_moteRunningProcess
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text43
 13314  0058BA                     __ptext43:
 13315                           	opt stack 0
 13316  0058BA                     _TMR2_ReadTimer:
 13317                           	opt stack 17
 13318                           
 13319                           ;tmr2.c: 88: uint8_t readVal;
 13320                           ;tmr2.c: 90: readVal = TMR2;
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;incstack = 0
 13324  0058BA  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13325                           
 13326                           ;tmr2.c: 92: return readVal;
 13327  0058BE  0100               	movlb	0	; () banked
 13328  0058C0  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13329  0058C2  0012               	return	
 13330  0058C4                     __end_of_TMR2_ReadTimer:
 13331                           	opt stack 0
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           intcon3	equ	0xFF0
 13340                           postinc0	equ	0xFEE
 13341                           wreg	equ	0xFE8
 13342                           indf1	equ	0xFE7
 13343                           postdec1	equ	0xFE5
 13344                           fsr1h	equ	0xFE2
 13345                           fsr1l	equ	0xFE1
 13346                           indf2	equ	0xFDF
 13347                           fsr2h	equ	0xFDA
 13348                           fsr2l	equ	0xFD9
 13349                           status	equ	0xFD8
 13350                           
 13351 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13352 ;; Defined at:
 13353 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;  dr              1    wreg     unsigned char 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;  dr              1    4[BANK0 ] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1    wreg      void 
 13360 ;; Registers used:
 13361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0
 13368 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13369 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13370 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13371 ;;Total ram usage:        2 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:   14
 13374 ;; This function calls:
 13375 ;;		_sendCommand
 13376 ;; This function is called by:
 13377 ;;		_moteRunningProcess
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text44
 13382  00230E                     __ptext44:
 13383                           	opt stack 0
 13384  00230E                     _MOTEapp_SetDataRateSetting:
 13385                           	opt stack 14
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;incstack = 0
 13389                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13390  00230E  0100               	movlb	0	; () banked
 13391  002310  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13392                           
 13393                           ;MOTEapp.c: 983: if (dr != 8)
 13394  002312  0E08               	movlw	8
 13395  002314  0100               	movlb	0	; () banked
 13396  002316  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13397  002318  B4D8               	btfsc	status,2,c
 13398  00231A  D06A               	goto	l591
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;MOTEapp.c: 984: {
 13402                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 13403  00231C  0EA3               	movlw	low STR_163
 13404  00231E  6F61               	movwf	sendCommand@string& (0+255),b
 13405  002320  0E7C               	movlw	high STR_163
 13406  002322  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13407  002324  EC0F  F02A         	call	_sendCommand	;wreg free
 13408                           
 13409                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 13410  002328  0EFA               	movlw	250
 13411  00232A  0100               	movlb	0	; () banked
 13412  00232C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13413  00232E  0E58               	movlw	88
 13414  002330                     u10987:
 13415  002330  2EE8               	decfsz	wreg,f,c
 13416  002332  D7FE               	bra	u10987
 13417  002334  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13418  002336  D7FC               	bra	u10987
 13419  002338  F000               	nop	
 13420                           
 13421                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 13422  00233A  0EFA               	movlw	250
 13423  00233C  0100               	movlb	0	; () banked
 13424  00233E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13425  002340  0E58               	movlw	88
 13426  002342                     u10997:
 13427  002342  2EE8               	decfsz	wreg,f,c
 13428  002344  D7FE               	bra	u10997
 13429  002346  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13430  002348  D7FC               	bra	u10997
 13431  00234A  F000               	nop	
 13432                           
 13433                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 13434  00234C  0EFA               	movlw	250
 13435  00234E  0100               	movlb	0	; () banked
 13436  002350  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13437  002352  0E58               	movlw	88
 13438  002354                     u11007:
 13439  002354  2EE8               	decfsz	wreg,f,c
 13440  002356  D7FE               	bra	u11007
 13441  002358  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13442  00235A  D7FC               	bra	u11007
 13443  00235C  F000               	nop	
 13444                           
 13445                           ;MOTEapp.c: 989: }
 13446                           ;MOTEapp.c: 991: switch (dr)
 13447  00235E  D048               	goto	l591
 13448  002360                     
 13449                           ;MOTEapp.c: 994: sendCommand("mac set dr 0");
 13450  002360  0E7F               	movlw	low STR_164
 13451  002362  0100               	movlb	0	; () banked
 13452  002364  6F61               	movwf	sendCommand@string& (0+255),b
 13453  002366  0E7D               	movlw	high STR_164
 13454  002368  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13455  00236A  EC0F  F02A         	call	_sendCommand	;wreg free
 13456                           
 13457                           ;MOTEapp.c: 995: break;
 13458  00236E  D05D               	goto	l593
 13459  002370                     
 13460                           ;MOTEapp.c: 997: sendCommand("mac set dr 1");
 13461  002370  0E8C               	movlw	low STR_165
 13462  002372  0100               	movlb	0	; () banked
 13463  002374  6F61               	movwf	sendCommand@string& (0+255),b
 13464  002376  0E7D               	movlw	high STR_165
 13465  002378  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13466  00237A  EC0F  F02A         	call	_sendCommand	;wreg free
 13467                           
 13468                           ;MOTEapp.c: 998: break;
 13469  00237E  D055               	goto	l593
 13470  002380                     
 13471                           ;MOTEapp.c: 1000: sendCommand("mac set dr 2");
 13472  002380  0E99               	movlw	low STR_166
 13473  002382  0100               	movlb	0	; () banked
 13474  002384  6F61               	movwf	sendCommand@string& (0+255),b
 13475  002386  0E7D               	movlw	high STR_166
 13476  002388  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13477  00238A  EC0F  F02A         	call	_sendCommand	;wreg free
 13478                           
 13479                           ;MOTEapp.c: 1001: break;
 13480  00238E  D04D               	goto	l593
 13481  002390                     
 13482                           ;MOTEapp.c: 1003: sendCommand("mac set dr 3");
 13483  002390  0EA6               	movlw	low STR_167
 13484  002392  0100               	movlb	0	; () banked
 13485  002394  6F61               	movwf	sendCommand@string& (0+255),b
 13486  002396  0E7D               	movlw	high STR_167
 13487  002398  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13488  00239A  EC0F  F02A         	call	_sendCommand	;wreg free
 13489                           
 13490                           ;MOTEapp.c: 1004: break;
 13491  00239E  D045               	goto	l593
 13492  0023A0                     
 13493                           ;MOTEapp.c: 1006: sendCommand("mac set dr 4");
 13494  0023A0  0EB3               	movlw	low STR_168
 13495  0023A2  0100               	movlb	0	; () banked
 13496  0023A4  6F61               	movwf	sendCommand@string& (0+255),b
 13497  0023A6  0E7D               	movlw	high STR_168
 13498  0023A8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13499  0023AA  EC0F  F02A         	call	_sendCommand	;wreg free
 13500                           
 13501                           ;MOTEapp.c: 1007: break;
 13502  0023AE  D03D               	goto	l593
 13503  0023B0                     
 13504                           ;MOTEapp.c: 1009: sendCommand("mac set dr 5");
 13505  0023B0  0EC0               	movlw	low STR_169
 13506  0023B2  0100               	movlb	0	; () banked
 13507  0023B4  6F61               	movwf	sendCommand@string& (0+255),b
 13508  0023B6  0E7D               	movlw	high STR_169
 13509  0023B8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13510  0023BA  EC0F  F02A         	call	_sendCommand	;wreg free
 13511                           
 13512                           ;MOTEapp.c: 1010: break;
 13513  0023BE  D035               	goto	l593
 13514  0023C0                     
 13515                           ;MOTEapp.c: 1012: sendCommand("mac set dr 6");
 13516  0023C0  0ECD               	movlw	low STR_170
 13517  0023C2  0100               	movlb	0	; () banked
 13518  0023C4  6F61               	movwf	sendCommand@string& (0+255),b
 13519  0023C6  0E7D               	movlw	high STR_170
 13520  0023C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13521  0023CA  EC0F  F02A         	call	_sendCommand	;wreg free
 13522                           
 13523                           ;MOTEapp.c: 1013: break;
 13524  0023CE  D02D               	goto	l593
 13525  0023D0                     
 13526                           ;MOTEapp.c: 1015: sendCommand("mac set dr 7");
 13527  0023D0  0EDA               	movlw	low STR_171
 13528  0023D2  0100               	movlb	0	; () banked
 13529  0023D4  6F61               	movwf	sendCommand@string& (0+255),b
 13530  0023D6  0E7D               	movlw	high STR_171
 13531  0023D8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13532  0023DA  EC0F  F02A         	call	_sendCommand	;wreg free
 13533                           
 13534                           ;MOTEapp.c: 1016: break;
 13535  0023DE  D025               	goto	l593
 13536  0023E0                     
 13537                           ;MOTEapp.c: 1018: sendCommand("mac set adr on");
 13538  0023E0  0EF1               	movlw	low STR_172
 13539  0023E2  0100               	movlb	0	; () banked
 13540  0023E4  6F61               	movwf	sendCommand@string& (0+255),b
 13541  0023E6  0E7C               	movlw	high STR_172
 13542  0023E8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13543  0023EA  EC0F  F02A         	call	_sendCommand	;wreg free
 13544                           
 13545                           ;MOTEapp.c: 1020: }
 13546                           
 13547                           ;MOTEapp.c: 1019: break;
 13548  0023EE  D01D               	goto	l593
 13549  0023F0                     l591:
 13550  0023F0  0100               	movlb	0	; () banked
 13551  0023F2  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13552                           
 13553                           ; Switch size 1, requested type "space"
 13554                           ; Number of cases is 9, Range of values is 0 to 8
 13555                           ; switch strategies available:
 13556                           ; Name         Instructions Cycles
 13557                           ; simple_byte           28    15 (average)
 13558                           ;	Chosen strategy is simple_byte
 13559  0023F4  0A00               	xorlw	0	; case 0
 13560  0023F6  B4D8               	btfsc	status,2,c
 13561  0023F8  D7B3               	goto	l592
 13562  0023FA  0A01               	xorlw	1	; case 1
 13563  0023FC  B4D8               	btfsc	status,2,c
 13564  0023FE  D7B8               	goto	l594
 13565  002400  0A03               	xorlw	3	; case 2
 13566  002402  B4D8               	btfsc	status,2,c
 13567  002404  D7BD               	goto	l595
 13568  002406  0A01               	xorlw	1	; case 3
 13569  002408  B4D8               	btfsc	status,2,c
 13570  00240A  D7C2               	goto	l596
 13571  00240C  0A07               	xorlw	7	; case 4
 13572  00240E  B4D8               	btfsc	status,2,c
 13573  002410  D7C7               	goto	l597
 13574  002412  0A01               	xorlw	1	; case 5
 13575  002414  B4D8               	btfsc	status,2,c
 13576  002416  D7CC               	goto	l598
 13577  002418  0A03               	xorlw	3	; case 6
 13578  00241A  B4D8               	btfsc	status,2,c
 13579  00241C  D7D1               	goto	l599
 13580  00241E  0A01               	xorlw	1	; case 7
 13581  002420  B4D8               	btfsc	status,2,c
 13582  002422  D7D6               	goto	l600
 13583  002424  0A0F               	xorlw	15	; case 8
 13584  002426  B4D8               	btfsc	status,2,c
 13585  002428  D7DB               	goto	l601
 13586  00242A                     l593:
 13587                           
 13588                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 13589                           
 13590                           ; BSR set to: 0
 13591  00242A  0EFA               	movlw	250
 13592  00242C  0100               	movlb	0	; () banked
 13593  00242E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13594  002430  0E58               	movlw	88
 13595  002432                     u11017:
 13596  002432  2EE8               	decfsz	wreg,f,c
 13597  002434  D7FE               	bra	u11017
 13598  002436  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13599  002438  D7FC               	bra	u11017
 13600  00243A  F000               	nop	
 13601                           
 13602                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 13603  00243C  0EFA               	movlw	250
 13604  00243E  0100               	movlb	0	; () banked
 13605  002440  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13606  002442  0E58               	movlw	88
 13607  002444                     u11027:
 13608  002444  2EE8               	decfsz	wreg,f,c
 13609  002446  D7FE               	bra	u11027
 13610  002448  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13611  00244A  D7FC               	bra	u11027
 13612  00244C  F000               	nop	
 13613                           
 13614                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 13615  00244E  0EFA               	movlw	250
 13616  002450  0100               	movlb	0	; () banked
 13617  002452  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13618  002454  0E58               	movlw	88
 13619  002456                     u11037:
 13620  002456  2EE8               	decfsz	wreg,f,c
 13621  002458  D7FE               	bra	u11037
 13622  00245A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13623  00245C  D7FC               	bra	u11037
 13624  00245E  F000               	nop	
 13625                           
 13626                           ;MOTEapp.c: 1024: sendCommand("mac save");
 13627  002460  0E2B               	movlw	low STR_173
 13628  002462  0100               	movlb	0	; () banked
 13629  002464  6F61               	movwf	sendCommand@string& (0+255),b
 13630  002466  0E7F               	movlw	high STR_173
 13631  002468  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13632  00246A  EC0F  F02A         	call	_sendCommand	;wreg free
 13633  00246E  0012               	return		;funcret
 13634  002470                     __end_of_MOTEapp_SetDataRateSetting:
 13635                           	opt stack 0
 13636                           tblptru	equ	0xFF8
 13637                           tblptrh	equ	0xFF7
 13638                           tblptrl	equ	0xFF6
 13639                           tablat	equ	0xFF5
 13640                           prodh	equ	0xFF4
 13641                           prodl	equ	0xFF3
 13642                           intcon	equ	0xFF2
 13643                           intcon3	equ	0xFF0
 13644                           postinc0	equ	0xFEE
 13645                           wreg	equ	0xFE8
 13646                           indf1	equ	0xFE7
 13647                           postdec1	equ	0xFE5
 13648                           fsr1h	equ	0xFE2
 13649                           fsr1l	equ	0xFE1
 13650                           indf2	equ	0xFDF
 13651                           fsr2h	equ	0xFDA
 13652                           fsr2l	equ	0xFD9
 13653                           status	equ	0xFD8
 13654                           
 13655 ;; *************** function _ADC_TempConversion *****************
 13656 ;; Defined at:
 13657 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  tempRaw         1    wreg     enum E5749
 13660 ;; Auto vars:     Size  Location     Type
 13661 ;;  tempRaw         1   70[BANK0 ] enum E5749
 13662 ;;  val             4   72[BANK0 ] enum E5749
 13663 ;;  temp            1   71[BANK0 ] unsigned char 
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      unsigned char 
 13666 ;; Registers used:
 13667 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0
 13674 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13676 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13677 ;;Total ram usage:        6 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:   12
 13680 ;; This function calls:
 13681 ;;		___fladd
 13682 ;;		___fldiv
 13683 ;;		___flmul
 13684 ;;		___fltol
 13685 ;;		___xxtofl
 13686 ;; This function is called by:
 13687 ;;		_moteHandler
 13688 ;;		_moteRunningProcess
 13689 ;;		_moteApp_testSensors
 13690 ;;		_test_adc
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           	psect	text45
 13695  003010                     __ptext45:
 13696                           	opt stack 0
 13697  003010                     _ADC_TempConversion:
 13698                           	opt stack 16
 13699                           
 13700                           ;incstack = 0
 13701                           ;ADC_TempConversion@tempRaw stored from wreg
 13702  003010  0100               	movlb	0	; () banked
 13703  003012  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13704                           
 13705                           ;adc.c: 138: uint8_t temp;
 13706                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 13707  003014  0ECD               	movlw	205
 13708  003016  0100               	movlb	0	; () banked
 13709  003018  6F78               	movwf	___flmul@a& (0+255),b
 13710  00301A  0ECC               	movlw	204
 13711  00301C  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13712  00301E  0E4C               	movlw	76
 13713  003020  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13714  003022  0E40               	movlw	64
 13715  003024  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13716  003026  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 13717  003028  6F60               	movwf	___xxtofl@val& (0+255),b
 13718  00302A  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13719  00302C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13720  00302E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13721  003030  0E00               	movlw	0
 13722  003032  EC38  F012         	call	___xxtofl
 13723  003036  C060  F074         	movff	?___xxtofl,___flmul@b
 13724  00303A  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 13725  00303E  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 13726  003042  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 13727  003046  ECA5  F00A         	call	___flmul	;wreg free
 13728  00304A  C074  F08D         	movff	?___flmul,___fldiv@b
 13729  00304E  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 13730  003052  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 13731  003056  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 13732  00305A  0E00               	movlw	0
 13733  00305C  0100               	movlb	0	; () banked
 13734  00305E  6F91               	movwf	___fldiv@a& (0+255),b
 13735  003060  0E00               	movlw	0
 13736  003062  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 13737  003064  0E80               	movlw	128
 13738  003066  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 13739  003068  0E44               	movlw	68
 13740  00306A  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 13741  00306C  ECED  F00D         	call	___fldiv	;wreg free
 13742  003070  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 13743  003074  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 13744  003078  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 13745  00307C  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 13746                           
 13747                           ;adc.c: 141: val = ((val - 0.5)*100);
 13748  003080  0E00               	movlw	0
 13749  003082  0100               	movlb	0	; () banked
 13750  003084  6F64               	movwf	___fladd@a& (0+255),b
 13751  003086  0E00               	movlw	0
 13752  003088  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13753  00308A  0E00               	movlw	0
 13754  00308C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13755  00308E  0EBF               	movlw	191
 13756  003090  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13757  003092  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 13758  003096  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 13759  00309A  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 13760  00309E  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 13761  0030A2  EC4E  F00C         	call	___fladd	;wreg free
 13762  0030A6  C060  F074         	movff	?___fladd,___flmul@b
 13763  0030AA  C061  F075         	movff	?___fladd+1,___flmul@b+1
 13764  0030AE  C062  F076         	movff	?___fladd+2,___flmul@b+2
 13765  0030B2  C063  F077         	movff	?___fladd+3,___flmul@b+3
 13766  0030B6  0E00               	movlw	0
 13767  0030B8  0100               	movlb	0	; () banked
 13768  0030BA  6F78               	movwf	___flmul@a& (0+255),b
 13769  0030BC  0E00               	movlw	0
 13770  0030BE  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13771  0030C0  0EC8               	movlw	200
 13772  0030C2  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13773  0030C4  0E42               	movlw	66
 13774  0030C6  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13775  0030C8  ECA5  F00A         	call	___flmul	;wreg free
 13776  0030CC  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 13777  0030D0  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 13778  0030D4  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 13779  0030D8  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 13780                           
 13781                           ;adc.c: 142: temp = (uint8_t) val;
 13782  0030DC  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 13783  0030E0  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 13784  0030E4  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 13785  0030E8  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 13786  0030EC  ECB4  F01A         	call	___fltol	;wreg free
 13787  0030F0  0100               	movlb	0	; () banked
 13788  0030F2  5160               	movf	?___fltol& (0+255),w,b
 13789  0030F4  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;adc.c: 144: return temp;
 13793  0030F6  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 13794  0030F8  0012               	return	
 13795  0030FA                     __end_of_ADC_TempConversion:
 13796                           	opt stack 0
 13797                           tblptru	equ	0xFF8
 13798                           tblptrh	equ	0xFF7
 13799                           tblptrl	equ	0xFF6
 13800                           tablat	equ	0xFF5
 13801                           prodh	equ	0xFF4
 13802                           prodl	equ	0xFF3
 13803                           intcon	equ	0xFF2
 13804                           intcon3	equ	0xFF0
 13805                           postinc0	equ	0xFEE
 13806                           wreg	equ	0xFE8
 13807                           indf1	equ	0xFE7
 13808                           postdec1	equ	0xFE5
 13809                           fsr1h	equ	0xFE2
 13810                           fsr1l	equ	0xFE1
 13811                           indf2	equ	0xFDF
 13812                           fsr2h	equ	0xFDA
 13813                           fsr2l	equ	0xFD9
 13814                           status	equ	0xFD8
 13815                           
 13816 ;; *************** function ___xxtofl *****************
 13817 ;; Defined at:
 13818 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;  sign            1    wreg     unsigned char 
 13821 ;;  val             4    0[BANK0 ] long 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;  sign            1    8[BANK0 ] unsigned char 
 13824 ;;  arg             4   10[BANK0 ] unsigned long 
 13825 ;;  exp             1    9[BANK0 ] unsigned char 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  4    0[BANK0 ] unsigned char 
 13828 ;; Registers used:
 13829 ;;		wreg, status,2, status,0
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13835 ;;      Params:         0       4       0       0       0       0       0       0       0
 13836 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13837 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13838 ;;      Totals:         0      14       0       0       0       0       0       0       0
 13839 ;;Total ram usage:       14 bytes
 13840 ;; Hardware stack levels used:    1
 13841 ;; Hardware stack levels required when called:   11
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_ADC_TempConversion
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text46
 13850  002470                     __ptext46:
 13851                           	opt stack 0
 13852  002470                     ___xxtofl:
 13853                           	opt stack 16
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;incstack = 0
 13857                           ;___xxtofl@sign stored from wreg
 13858  002470  0100               	movlb	0	; () banked
 13859  002472  6F68               	movwf	___xxtofl@sign& (0+255),b
 13860  002474  0100               	movlb	0	; () banked
 13861  002476  5168               	movf	___xxtofl@sign& (0+255),w,b
 13862  002478  A4D8               	btfss	status,2,c
 13863                           
 13864                           ; BSR set to: 0
 13865  00247A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 13866  00247C  D01A               	goto	l2814
 13867                           
 13868                           ; BSR set to: 0
 13869  00247E  C060  F064         	movff	___xxtofl@val,??___xxtofl
 13870  002482  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 13871  002486  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 13872  00248A  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 13873  00248E  1F64               	comf	??___xxtofl& (0+255),f,b
 13874  002490  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 13875  002492  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 13876  002494  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 13877  002496  2B64               	incf	??___xxtofl& (0+255),f,b
 13878  002498  0E00               	movlw	0
 13879  00249A  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 13880  00249C  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 13881  00249E  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 13882  0024A0  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 13883  0024A4  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 13884  0024A8  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 13885  0024AC  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 13886  0024B0  D008               	goto	l2815
 13887  0024B2                     l2814:
 13888                           
 13889                           ; BSR set to: 0
 13890  0024B2  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 13891  0024B6  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13892  0024BA  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13893  0024BE  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13894  0024C2                     l2815:
 13895                           
 13896                           ; BSR set to: 0
 13897                           
 13898                           ; BSR set to: 0
 13899  0024C2  5160               	movf	___xxtofl@val& (0+255),w,b
 13900  0024C4  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 13901  0024C6  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 13902  0024C8  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 13903  0024CA  A4D8               	btfss	status,2,c
 13904  0024CC  D009               	goto	l2816
 13905                           
 13906                           ; BSR set to: 0
 13907  0024CE  0E00               	movlw	0
 13908  0024D0  6F60               	movwf	?___xxtofl& (0+255),b
 13909  0024D2  0E00               	movlw	0
 13910  0024D4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 13911  0024D6  0E00               	movlw	0
 13912  0024D8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 13913  0024DA  0E00               	movlw	0
 13914  0024DC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 13915                           
 13916                           ; BSR set to: 0
 13917  0024DE  0012               	return	
 13918  0024E0                     l2816:
 13919                           
 13920                           ; BSR set to: 0
 13921                           
 13922                           ; BSR set to: 0
 13923  0024E0  0E96               	movlw	150
 13924  0024E2  6F69               	movwf	___xxtofl@exp& (0+255),b
 13925  0024E4  D006               	goto	l2818
 13926  0024E6                     
 13927                           ; BSR set to: 0
 13928                           
 13929                           ; BSR set to: 0
 13930  0024E6  2B69               	incf	___xxtofl@exp& (0+255),f,b
 13931  0024E8  90D8               	bcf	status,0,c
 13932  0024EA  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 13933  0024EC  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 13934  0024EE  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 13935  0024F0  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 13936  0024F2                     l2818:
 13937                           
 13938                           ; BSR set to: 0
 13939                           
 13940                           ; BSR set to: 0
 13941  0024F2  0E00               	movlw	0
 13942  0024F4  156A               	andwf	___xxtofl@arg& (0+255),w,b
 13943  0024F6  6F64               	movwf	??___xxtofl& (0+255),b
 13944  0024F8  0E00               	movlw	0
 13945  0024FA  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 13946  0024FC  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 13947  0024FE  0E00               	movlw	0
 13948  002500  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 13949  002502  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 13950  002504  0EFE               	movlw	254
 13951  002506  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 13952  002508  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 13953  00250A  5164               	movf	??___xxtofl& (0+255),w,b
 13954  00250C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 13955  00250E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 13956  002510  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 13957  002512  B4D8               	btfsc	status,2,c
 13958  002514  D00D               	goto	l2821
 13959  002516  D7E7               	goto	l2819
 13960  002518                     
 13961                           ; BSR set to: 0
 13962                           
 13963                           ; BSR set to: 0
 13964  002518  2B69               	incf	___xxtofl@exp& (0+255),f,b
 13965                           
 13966                           ; BSR set to: 0
 13967  00251A  0E01               	movlw	1
 13968  00251C  276A               	addwf	___xxtofl@arg& (0+255),f,b
 13969  00251E  0E00               	movlw	0
 13970  002520  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 13971  002522  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 13972  002524  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 13973                           
 13974                           ; BSR set to: 0
 13975  002526  90D8               	bcf	status,0,c
 13976  002528  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 13977  00252A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 13978  00252C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 13979  00252E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 13980  002530                     l2821:
 13981                           
 13982                           ; BSR set to: 0
 13983  002530  0E00               	movlw	0
 13984  002532  156A               	andwf	___xxtofl@arg& (0+255),w,b
 13985  002534  6F64               	movwf	??___xxtofl& (0+255),b
 13986  002536  0E00               	movlw	0
 13987  002538  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 13988  00253A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 13989  00253C  0E00               	movlw	0
 13990  00253E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 13991  002540  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 13992  002542  0EFF               	movlw	255
 13993  002544  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 13994  002546  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 13995  002548  5164               	movf	??___xxtofl& (0+255),w,b
 13996  00254A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 13997  00254C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 13998  00254E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 13999  002550  B4D8               	btfsc	status,2,c
 14000  002552  D007               	goto	l2824
 14001  002554  D7E1               	goto	l2822
 14002  002556                     
 14003                           ; BSR set to: 0
 14004                           
 14005                           ; BSR set to: 0
 14006  002556  0769               	decf	___xxtofl@exp& (0+255),f,b
 14007  002558  90D8               	bcf	status,0,c
 14008  00255A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14009  00255C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14010  00255E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14011  002560  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14012  002562                     l2824:
 14013                           
 14014                           ; BSR set to: 0
 14015                           
 14016                           ; BSR set to: 0
 14017  002562  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14018  002564  D003               	goto	u7690
 14019                           
 14020                           ; BSR set to: 0
 14021  002566  0E02               	movlw	2
 14022  002568  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14023  00256A  D7F5               	goto	l2825
 14024  00256C                     u7690:
 14025                           
 14026                           ; BSR set to: 0
 14027                           
 14028                           ; BSR set to: 0
 14029  00256C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14030  00256E  D008               	goto	l2829
 14031                           
 14032                           ; BSR set to: 0
 14033  002570  0EFF               	movlw	255
 14034  002572  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14035  002574  0EFF               	movlw	255
 14036  002576  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14037  002578  0E7F               	movlw	127
 14038  00257A  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14039  00257C  0EFF               	movlw	255
 14040  00257E  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14041  002580                     l2829:
 14042                           
 14043                           ; BSR set to: 0
 14044  002580  90D8               	bcf	status,0,c
 14045  002582  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14046  002584  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14047  002588  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14048  00258A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14049  00258C  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14050  00258E  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14051  002592  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14052  002594  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14053  002596  6B64               	clrf	??___xxtofl& (0+255),b
 14054  002598  5164               	movf	??___xxtofl& (0+255),w,b
 14055  00259A  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14056  00259C  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14057  00259E  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14058  0025A0  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14059  0025A2  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14060  0025A4  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14061  0025A6  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14062                           
 14063                           ; BSR set to: 0
 14064  0025A8  5168               	movf	___xxtofl@sign& (0+255),w,b
 14065  0025AA  A4D8               	btfss	status,2,c
 14066                           
 14067                           ; BSR set to: 0
 14068  0025AC  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14069  0025AE  D001               	goto	l2830
 14070                           
 14071                           ; BSR set to: 0
 14072  0025B0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14073  0025B2                     l2830:
 14074                           
 14075                           ; BSR set to: 0
 14076                           
 14077                           ; BSR set to: 0
 14078  0025B2  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14079  0025B6  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14080  0025BA  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14081  0025BE  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14082  0025C2  0012               	return	
 14083  0025C4                     __end_of___xxtofl:
 14084                           	opt stack 0
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           intcon3	equ	0xFF0
 14093                           postinc0	equ	0xFEE
 14094                           wreg	equ	0xFE8
 14095                           indf1	equ	0xFE7
 14096                           postdec1	equ	0xFE5
 14097                           fsr1h	equ	0xFE2
 14098                           fsr1l	equ	0xFE1
 14099                           indf2	equ	0xFDF
 14100                           fsr2h	equ	0xFDA
 14101                           fsr2l	equ	0xFD9
 14102                           status	equ	0xFD8
 14103                           
 14104 ;; *************** function ___fltol *****************
 14105 ;; Defined at:
 14106 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  f1              4    0[BANK0 ] unsigned char 
 14109 ;; Auto vars:     Size  Location     Type
 14110 ;;  exp1            1    9[BANK0 ] unsigned char 
 14111 ;;  sign1           1    8[BANK0 ] unsigned char 
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  4    0[BANK0 ] long 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2, status,0
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14121 ;;      Params:         0       4       0       0       0       0       0       0       0
 14122 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14123 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14124 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14125 ;;Total ram usage:       10 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:   11
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_ADC_TempConversion
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text47
 14136  003568                     __ptext47:
 14137                           	opt stack 0
 14138  003568                     ___fltol:
 14139                           	opt stack 16
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;incstack = 0
 14143  003568  0100               	movlb	0	; () banked
 14144  00356A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14145  00356C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14146  00356E  6F69               	movwf	___fltol@exp1& (0+255),b
 14147  003570  5169               	movf	___fltol@exp1& (0+255),w,b
 14148  003572  A4D8               	btfss	status,2,c
 14149  003574  D009               	goto	l2467
 14150                           
 14151                           ; BSR set to: 0
 14152  003576  0E00               	movlw	0
 14153  003578  6F60               	movwf	?___fltol& (0+255),b
 14154  00357A  0E00               	movlw	0
 14155  00357C  6F61               	movwf	(?___fltol+1)& (0+255),b
 14156  00357E  0E00               	movlw	0
 14157  003580  6F62               	movwf	(?___fltol+2)& (0+255),b
 14158  003582  0E00               	movlw	0
 14159  003584  6F63               	movwf	(?___fltol+3)& (0+255),b
 14160                           
 14161                           ; BSR set to: 0
 14162  003586  0012               	return	
 14163  003588                     l2467:
 14164                           
 14165                           ; BSR set to: 0
 14166                           
 14167                           ; BSR set to: 0
 14168  003588  C060  F064         	movff	___fltol@f1,??___fltol
 14169  00358C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14170  003590  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14171  003594  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14172  003598  0E20               	movlw	32
 14173  00359A  D005               	goto	u7540
 14174  00359C                     u7545:
 14175  00359C  90D8               	bcf	status,0,c
 14176  00359E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14177  0035A0  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14178  0035A2  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14179  0035A4  3364               	rrcf	??___fltol& (0+255),f,b
 14180  0035A6                     u7540:
 14181  0035A6  2EE8               	decfsz	wreg,f,c
 14182  0035A8  D7F9               	goto	u7545
 14183  0035AA  5164               	movf	??___fltol& (0+255),w,b
 14184  0035AC  6F68               	movwf	___fltol@sign1& (0+255),b
 14185                           
 14186                           ; BSR set to: 0
 14187  0035AE  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14188                           
 14189                           ; BSR set to: 0
 14190  0035B0  0EFF               	movlw	255
 14191  0035B2  1760               	andwf	___fltol@f1& (0+255),f,b
 14192  0035B4  0EFF               	movlw	255
 14193  0035B6  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14194  0035B8  0EFF               	movlw	255
 14195  0035BA  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14196  0035BC  0E00               	movlw	0
 14197  0035BE  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14198                           
 14199                           ; BSR set to: 0
 14200  0035C0  0E96               	movlw	150
 14201  0035C2  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14202                           
 14203                           ; BSR set to: 0
 14204  0035C4  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14205  0035C6  D016               	goto	l2469
 14206                           
 14207                           ; BSR set to: 0
 14208  0035C8  5169               	movf	___fltol@exp1& (0+255),w,b
 14209  0035CA  0A80               	xorlw	128
 14210  0035CC  0F97               	addlw	151
 14211  0035CE  B0D8               	btfsc	status,0,c
 14212  0035D0  D009               	goto	l2470
 14213                           
 14214                           ; BSR set to: 0
 14215  0035D2  0E00               	movlw	0
 14216  0035D4  6F60               	movwf	?___fltol& (0+255),b
 14217  0035D6  0E00               	movlw	0
 14218  0035D8  6F61               	movwf	(?___fltol+1)& (0+255),b
 14219  0035DA  0E00               	movlw	0
 14220  0035DC  6F62               	movwf	(?___fltol+2)& (0+255),b
 14221  0035DE  0E00               	movlw	0
 14222  0035E0  6F63               	movwf	(?___fltol+3)& (0+255),b
 14223                           
 14224                           ; BSR set to: 0
 14225  0035E2  0012               	return	
 14226  0035E4                     l2470:
 14227                           
 14228                           ; BSR set to: 0
 14229                           
 14230                           ; BSR set to: 0
 14231                           
 14232                           ; BSR set to: 0
 14233  0035E4  90D8               	bcf	status,0,c
 14234  0035E6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14235  0035E8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14236  0035EA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14237  0035EC  3360               	rrcf	___fltol@f1& (0+255),f,b
 14238                           
 14239                           ; BSR set to: 0
 14240  0035EE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14241  0035F0  D7F9               	goto	l2470
 14242                           
 14243                           ; BSR set to: 0
 14244  0035F2  D015               	goto	u7580
 14245  0035F4                     l2469:
 14246                           
 14247                           ; BSR set to: 0
 14248                           
 14249                           ; BSR set to: 0
 14250  0035F4  0E1F               	movlw	31
 14251  0035F6  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14252  0035F8  D00F               	goto	l2475
 14253                           
 14254                           ; BSR set to: 0
 14255  0035FA  0E00               	movlw	0
 14256  0035FC  6F60               	movwf	?___fltol& (0+255),b
 14257  0035FE  0E00               	movlw	0
 14258  003600  6F61               	movwf	(?___fltol+1)& (0+255),b
 14259  003602  0E00               	movlw	0
 14260  003604  6F62               	movwf	(?___fltol+2)& (0+255),b
 14261  003606  0E00               	movlw	0
 14262  003608  6F63               	movwf	(?___fltol+3)& (0+255),b
 14263                           
 14264                           ; BSR set to: 0
 14265  00360A  0012               	return	
 14266  00360C                     
 14267                           ; BSR set to: 0
 14268                           
 14269                           ; BSR set to: 0
 14270  00360C  90D8               	bcf	status,0,c
 14271  00360E  3760               	rlcf	___fltol@f1& (0+255),f,b
 14272  003610  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14273  003612  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14274  003614  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14275  003616  0769               	decf	___fltol@exp1& (0+255),f,b
 14276  003618                     l2475:
 14277                           
 14278                           ; BSR set to: 0
 14279                           
 14280                           ; BSR set to: 0
 14281  003618  5169               	movf	___fltol@exp1& (0+255),w,b
 14282  00361A  A4D8               	btfss	status,2,c
 14283  00361C  D7F7               	goto	l2476
 14284  00361E                     u7580:
 14285                           
 14286                           ; BSR set to: 0
 14287                           
 14288                           ; BSR set to: 0
 14289                           
 14290                           ; BSR set to: 0
 14291  00361E  5168               	movf	___fltol@sign1& (0+255),w,b
 14292  003620  B4D8               	btfsc	status,2,c
 14293  003622  D008               	goto	l2478
 14294                           
 14295                           ; BSR set to: 0
 14296  003624  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14297  003626  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14298  003628  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14299  00362A  6D60               	negf	___fltol@f1& (0+255),b
 14300  00362C  0E00               	movlw	0
 14301  00362E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14302  003630  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14303  003632  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14304  003634                     l2478:
 14305                           
 14306                           ; BSR set to: 0
 14307                           
 14308                           ; BSR set to: 0
 14309  003634  C060  F060         	movff	___fltol@f1,?___fltol
 14310  003638  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14311  00363C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14312  003640  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14313  003644  0012               	return	
 14314  003646                     __end_of___fltol:
 14315                           	opt stack 0
 14316                           tblptru	equ	0xFF8
 14317                           tblptrh	equ	0xFF7
 14318                           tblptrl	equ	0xFF6
 14319                           tablat	equ	0xFF5
 14320                           prodh	equ	0xFF4
 14321                           prodl	equ	0xFF3
 14322                           intcon	equ	0xFF2
 14323                           intcon3	equ	0xFF0
 14324                           postinc0	equ	0xFEE
 14325                           wreg	equ	0xFE8
 14326                           indf1	equ	0xFE7
 14327                           postdec1	equ	0xFE5
 14328                           fsr1h	equ	0xFE2
 14329                           fsr1l	equ	0xFE1
 14330                           indf2	equ	0xFDF
 14331                           fsr2h	equ	0xFDA
 14332                           fsr2l	equ	0xFD9
 14333                           status	equ	0xFD8
 14334                           
 14335 ;; *************** function ___flmul *****************
 14336 ;; Defined at:
 14337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;  b               4   20[BANK0 ] long 
 14340 ;;  a               4   24[BANK0 ] long 
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;  prod            4   39[BANK0 ] struct .
 14343 ;;  grs             4   33[BANK0 ] unsigned long 
 14344 ;;  temp            2   43[BANK0 ] struct .
 14345 ;;  bexp            1   38[BANK0 ] unsigned char 
 14346 ;;  aexp            1   37[BANK0 ] unsigned char 
 14347 ;;  sign            1   32[BANK0 ] unsigned char 
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  4   20[BANK0 ] unsigned char 
 14350 ;; Registers used:
 14351 ;;		wreg, status,2, status,0, prodl, prodh
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14357 ;;      Params:         0       8       0       0       0       0       0       0       0
 14358 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14359 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14360 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14361 ;;Total ram usage:       25 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; Hardware stack levels required when called:   11
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_ADC_TempConversion
 14368 ;; This function uses a non-reentrant model
 14369 ;;
 14370                           
 14371                           	psect	text48
 14372  00154A                     __ptext48:
 14373                           	opt stack 0
 14374  00154A                     ___flmul:
 14375                           	opt stack 16
 14376                           
 14377                           ; BSR set to: 0
 14378                           ;incstack = 0
 14379  00154A  0100               	movlb	0	; () banked
 14380  00154C  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14381  00154E  0B80               	andlw	128
 14382  001550  6F80               	movwf	___flmul@sign& (0+255),b
 14383  001552  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14384  001554  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14385  001556  6F86               	movwf	___flmul@bexp& (0+255),b
 14386                           
 14387                           ; BSR set to: 0
 14388  001558  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14389                           
 14390                           ; BSR set to: 0
 14391  00155A  8186               	bsf	___flmul@bexp& (0+255),0,b
 14392                           
 14393                           ; BSR set to: 0
 14394                           
 14395                           ; BSR set to: 0
 14396  00155C  5186               	movf	___flmul@bexp& (0+255),w,b
 14397  00155E  B4D8               	btfsc	status,2,c
 14398  001560  D00D               	goto	l2769
 14399                           
 14400                           ; BSR set to: 0
 14401  001562  2986               	incf	___flmul@bexp& (0+255),w,b
 14402  001564  A4D8               	btfss	status,2,c
 14403  001566  D008               	goto	l2770
 14404                           
 14405                           ; BSR set to: 0
 14406  001568  0E00               	movlw	0
 14407  00156A  6F74               	movwf	___flmul@b& (0+255),b
 14408  00156C  0E00               	movlw	0
 14409  00156E  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14410  001570  0E00               	movlw	0
 14411  001572  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14412  001574  0E00               	movlw	0
 14413  001576  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14414  001578                     l2770:
 14415                           
 14416                           ; BSR set to: 0
 14417                           
 14418                           ; BSR set to: 0
 14419  001578  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 14420  00157A  D008               	goto	l2771
 14421  00157C                     l2769:
 14422                           
 14423                           ; BSR set to: 0
 14424                           
 14425                           ; BSR set to: 0
 14426  00157C  0E00               	movlw	0
 14427  00157E  6F74               	movwf	___flmul@b& (0+255),b
 14428  001580  0E00               	movlw	0
 14429  001582  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14430  001584  0E00               	movlw	0
 14431  001586  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14432  001588  0E00               	movlw	0
 14433  00158A  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14434  00158C                     l2771:
 14435                           
 14436                           ; BSR set to: 0
 14437                           
 14438                           ; BSR set to: 0
 14439  00158C  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14440  00158E  0B80               	andlw	128
 14441  001590  1B80               	xorwf	___flmul@sign& (0+255),f,b
 14442                           
 14443                           ; BSR set to: 0
 14444  001592  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14445  001594  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 14446  001596  6F85               	movwf	___flmul@aexp& (0+255),b
 14447                           
 14448                           ; BSR set to: 0
 14449  001598  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 14450                           
 14451                           ; BSR set to: 0
 14452  00159A  8185               	bsf	___flmul@aexp& (0+255),0,b
 14453                           
 14454                           ; BSR set to: 0
 14455                           
 14456                           ; BSR set to: 0
 14457  00159C  5185               	movf	___flmul@aexp& (0+255),w,b
 14458  00159E  B4D8               	btfsc	status,2,c
 14459  0015A0  D00D               	goto	l2773
 14460                           
 14461                           ; BSR set to: 0
 14462  0015A2  2985               	incf	___flmul@aexp& (0+255),w,b
 14463  0015A4  A4D8               	btfss	status,2,c
 14464  0015A6  D008               	goto	l2774
 14465                           
 14466                           ; BSR set to: 0
 14467  0015A8  0E00               	movlw	0
 14468  0015AA  6F78               	movwf	___flmul@a& (0+255),b
 14469  0015AC  0E00               	movlw	0
 14470  0015AE  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14471  0015B0  0E00               	movlw	0
 14472  0015B2  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14473  0015B4  0E00               	movlw	0
 14474  0015B6  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14475  0015B8                     l2774:
 14476                           
 14477                           ; BSR set to: 0
 14478                           
 14479                           ; BSR set to: 0
 14480  0015B8  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 14481  0015BA  D008               	goto	l2775
 14482  0015BC                     l2773:
 14483                           
 14484                           ; BSR set to: 0
 14485                           
 14486                           ; BSR set to: 0
 14487  0015BC  0E00               	movlw	0
 14488  0015BE  6F78               	movwf	___flmul@a& (0+255),b
 14489  0015C0  0E00               	movlw	0
 14490  0015C2  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14491  0015C4  0E00               	movlw	0
 14492  0015C6  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14493  0015C8  0E00               	movlw	0
 14494  0015CA  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14495  0015CC                     l2775:
 14496                           
 14497                           ; BSR set to: 0
 14498  0015CC  5185               	movf	___flmul@aexp& (0+255),w,b
 14499  0015CE  B4D8               	btfsc	status,2,c
 14500  0015D0  D003               	goto	u7350
 14501                           
 14502                           ; BSR set to: 0
 14503  0015D2  5186               	movf	___flmul@bexp& (0+255),w,b
 14504  0015D4  A4D8               	btfss	status,2,c
 14505  0015D6  D009               	goto	l2776
 14506  0015D8                     u7350:
 14507                           
 14508                           ; BSR set to: 0
 14509                           
 14510                           ; BSR set to: 0
 14511  0015D8  0E00               	movlw	0
 14512  0015DA  6F74               	movwf	?___flmul& (0+255),b
 14513  0015DC  0E00               	movlw	0
 14514  0015DE  6F75               	movwf	(?___flmul+1)& (0+255),b
 14515  0015E0  0E00               	movlw	0
 14516  0015E2  6F76               	movwf	(?___flmul+2)& (0+255),b
 14517  0015E4  0E00               	movlw	0
 14518  0015E6  6F77               	movwf	(?___flmul+3)& (0+255),b
 14519                           
 14520                           ; BSR set to: 0
 14521  0015E8  0012               	return	
 14522  0015EA                     l2776:
 14523                           
 14524                           ; BSR set to: 0
 14525                           
 14526                           ; BSR set to: 0
 14527  0015EA  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14528  0015EC  0374               	mulwf	___flmul@b& (0+255),b
 14529  0015EE  CFF3 F08B          	movff	prodl,___flmul@temp
 14530  0015F2  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14531                           
 14532                           ; BSR set to: 0
 14533  0015F6  518B               	movf	___flmul@temp& (0+255),w,b
 14534  0015F8  6F81               	movwf	___flmul@grs& (0+255),b
 14535  0015FA  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 14536  0015FC  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 14537  0015FE  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 14538                           
 14539                           ; BSR set to: 0
 14540  001600  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14541  001602  6F87               	movwf	___flmul@prod& (0+255),b
 14542  001604  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 14543  001606  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 14544  001608  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 14545  00160A  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14546  00160C  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14547  00160E  CFF3 F08B          	movff	prodl,___flmul@temp
 14548  001612  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14549                           
 14550                           ; BSR set to: 0
 14551  001616  518B               	movf	___flmul@temp& (0+255),w,b
 14552  001618  2781               	addwf	___flmul@grs& (0+255),f,b
 14553  00161A  0E00               	movlw	0
 14554  00161C  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14555  00161E  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14556  001620  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14557                           
 14558                           ; BSR set to: 0
 14559  001622  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14560  001624  2787               	addwf	___flmul@prod& (0+255),f,b
 14561  001626  0E00               	movlw	0
 14562  001628  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14563  00162A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14564  00162C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14565  00162E  5178               	movf	___flmul@a& (0+255),w,b
 14566  001630  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14567  001632  CFF3 F08B          	movff	prodl,___flmul@temp
 14568  001636  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14569                           
 14570                           ; BSR set to: 0
 14571  00163A  518B               	movf	___flmul@temp& (0+255),w,b
 14572  00163C  2781               	addwf	___flmul@grs& (0+255),f,b
 14573  00163E  0E00               	movlw	0
 14574  001640  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14575  001642  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14576  001644  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14577                           
 14578                           ; BSR set to: 0
 14579  001646  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14580  001648  2787               	addwf	___flmul@prod& (0+255),f,b
 14581  00164A  0E00               	movlw	0
 14582  00164C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14583  00164E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14584  001650  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14585                           
 14586                           ; BSR set to: 0
 14587  001652  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14588  001656  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14589  00165A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14590  00165E  6B81               	clrf	___flmul@grs& (0+255),b
 14591                           
 14592                           ; BSR set to: 0
 14593  001660  5178               	movf	___flmul@a& (0+255),w,b
 14594  001662  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14595  001664  CFF3 F08B          	movff	prodl,___flmul@temp
 14596  001668  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14597                           
 14598                           ; BSR set to: 0
 14599  00166C  518B               	movf	___flmul@temp& (0+255),w,b
 14600  00166E  2781               	addwf	___flmul@grs& (0+255),f,b
 14601  001670  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14602  001672  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14603  001674  0E00               	movlw	0
 14604  001676  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14605  001678  0E00               	movlw	0
 14606  00167A  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14607                           
 14608                           ; BSR set to: 0
 14609  00167C  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14610  00167E  0374               	mulwf	___flmul@b& (0+255),b
 14611  001680  CFF3 F08B          	movff	prodl,___flmul@temp
 14612  001684  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14613                           
 14614                           ; BSR set to: 0
 14615  001688  518B               	movf	___flmul@temp& (0+255),w,b
 14616  00168A  2781               	addwf	___flmul@grs& (0+255),f,b
 14617  00168C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14618  00168E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14619  001690  0E00               	movlw	0
 14620  001692  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14621  001694  0E00               	movlw	0
 14622  001696  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14623                           
 14624                           ; BSR set to: 0
 14625  001698  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14626  00169C  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14627  0016A0  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14628  0016A4  6B81               	clrf	___flmul@grs& (0+255),b
 14629  0016A6  5178               	movf	___flmul@a& (0+255),w,b
 14630  0016A8  0374               	mulwf	___flmul@b& (0+255),b
 14631  0016AA  CFF3 F08B          	movff	prodl,___flmul@temp
 14632  0016AE  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14633                           
 14634                           ; BSR set to: 0
 14635  0016B2  518B               	movf	___flmul@temp& (0+255),w,b
 14636  0016B4  2781               	addwf	___flmul@grs& (0+255),f,b
 14637  0016B6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14638  0016B8  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14639  0016BA  0E00               	movlw	0
 14640  0016BC  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14641  0016BE  0E00               	movlw	0
 14642  0016C0  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14643                           
 14644                           ; BSR set to: 0
 14645  0016C2  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14646  0016C4  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14647  0016C6  CFF3 F08B          	movff	prodl,___flmul@temp
 14648  0016CA  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14649  0016CE  518B               	movf	___flmul@temp& (0+255),w,b
 14650  0016D0  2787               	addwf	___flmul@prod& (0+255),f,b
 14651  0016D2  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14652  0016D4  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14653  0016D6  0E00               	movlw	0
 14654  0016D8  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14655  0016DA  0E00               	movlw	0
 14656  0016DC  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14657                           
 14658                           ; BSR set to: 0
 14659  0016DE  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14660  0016E0  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14661  0016E2  CFF3 F08B          	movff	prodl,___flmul@temp
 14662  0016E6  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14663                           
 14664                           ; BSR set to: 0
 14665  0016EA  518B               	movf	___flmul@temp& (0+255),w,b
 14666  0016EC  2787               	addwf	___flmul@prod& (0+255),f,b
 14667  0016EE  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14668  0016F0  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14669  0016F2  0E00               	movlw	0
 14670  0016F4  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14671  0016F6  0E00               	movlw	0
 14672  0016F8  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14673  0016FA  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14674  0016FC  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14675  0016FE  CFF3 F08B          	movff	prodl,___flmul@temp
 14676  001702  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14677                           
 14678                           ; BSR set to: 0
 14679  001706  518B               	movf	___flmul@temp& (0+255),w,b
 14680  001708  6F7C               	movwf	??___flmul& (0+255),b
 14681  00170A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14682  00170C  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14683  00170E  6B7E               	clrf	(??___flmul+2)& (0+255),b
 14684  001710  6B7F               	clrf	(??___flmul+3)& (0+255),b
 14685  001712  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 14686  001716  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 14687  00171A  C07C  F07D         	movff	??___flmul,??___flmul+1
 14688  00171E  6B7C               	clrf	??___flmul& (0+255),b
 14689  001720  517C               	movf	??___flmul& (0+255),w,b
 14690  001722  2787               	addwf	___flmul@prod& (0+255),f,b
 14691  001724  517D               	movf	(??___flmul+1)& (0+255),w,b
 14692  001726  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14693  001728  517E               	movf	(??___flmul+2)& (0+255),w,b
 14694  00172A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14695  00172C  517F               	movf	(??___flmul+3)& (0+255),w,b
 14696  00172E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14697                           
 14698                           ; BSR set to: 0
 14699  001730  C081  F07C         	movff	___flmul@grs,??___flmul
 14700  001734  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 14701  001738  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 14702  00173C  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 14703  001740  0E19               	movlw	25
 14704  001742  D005               	goto	u7360
 14705  001744                     u7365:
 14706  001744  90D8               	bcf	status,0,c
 14707  001746  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14708  001748  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14709  00174A  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14710  00174C  337C               	rrcf	??___flmul& (0+255),f,b
 14711  00174E                     u7360:
 14712  00174E  2EE8               	decfsz	wreg,f,c
 14713  001750  D7F9               	goto	u7365
 14714  001752  517C               	movf	??___flmul& (0+255),w,b
 14715  001754  2787               	addwf	___flmul@prod& (0+255),f,b
 14716  001756  517D               	movf	(??___flmul+1)& (0+255),w,b
 14717  001758  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14718  00175A  517E               	movf	(??___flmul+2)& (0+255),w,b
 14719  00175C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14720  00175E  517F               	movf	(??___flmul+3)& (0+255),w,b
 14721  001760  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14722                           
 14723                           ; BSR set to: 0
 14724  001762  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14725  001766  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14726  00176A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14727  00176E  6B81               	clrf	___flmul@grs& (0+255),b
 14728                           
 14729                           ; BSR set to: 0
 14730  001770  5185               	movf	___flmul@aexp& (0+255),w,b
 14731  001772  C086  F07C         	movff	___flmul@bexp,??___flmul
 14732  001776  6B7D               	clrf	(??___flmul+1)& (0+255),b
 14733  001778  277C               	addwf	??___flmul& (0+255),f,b
 14734  00177A  0E00               	movlw	0
 14735  00177C  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 14736  00177E  0E82               	movlw	130
 14737  001780  257C               	addwf	??___flmul& (0+255),w,b
 14738  001782  6F8B               	movwf	___flmul@temp& (0+255),b
 14739  001784  0EFF               	movlw	255
 14740  001786  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 14741  001788  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 14742  00178A  D00F               	goto	l2780
 14743  00178C                     
 14744                           ; BSR set to: 0
 14745                           
 14746                           ; BSR set to: 0
 14747  00178C  90D8               	bcf	status,0,c
 14748  00178E  3787               	rlcf	___flmul@prod& (0+255),f,b
 14749  001790  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14750  001792  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14751  001794  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14752                           
 14753                           ; BSR set to: 0
 14754  001796  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14755                           
 14756                           ; BSR set to: 0
 14757  001798  8187               	bsf	___flmul@prod& (0+255),0,b
 14758                           
 14759                           ; BSR set to: 0
 14760  00179A  90D8               	bcf	status,0,c
 14761  00179C  3781               	rlcf	___flmul@grs& (0+255),f,b
 14762  00179E  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14763  0017A0  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14764  0017A2  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14765  0017A4  078B               	decf	___flmul@temp& (0+255),f,b
 14766  0017A6  A0D8               	btfss	status,0,c
 14767  0017A8  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 14768  0017AA                     l2780:
 14769                           
 14770                           ; BSR set to: 0
 14771                           
 14772                           ; BSR set to: 0
 14773  0017AA  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 14774  0017AC  D7EF               	goto	l2781
 14775                           
 14776                           ; BSR set to: 0
 14777                           
 14778                           ; BSR set to: 0
 14779  0017AE  0E00               	movlw	0
 14780  0017B0  6F85               	movwf	___flmul@aexp& (0+255),b
 14781                           
 14782                           ; BSR set to: 0
 14783  0017B2  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 14784  0017B4  D016               	goto	l2787
 14785                           
 14786                           ; BSR set to: 0
 14787  0017B6  0EFF               	movlw	255
 14788  0017B8  1581               	andwf	___flmul@grs& (0+255),w,b
 14789  0017BA  6F7C               	movwf	??___flmul& (0+255),b
 14790  0017BC  0EFF               	movlw	255
 14791  0017BE  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 14792  0017C0  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14793  0017C2  0EFF               	movlw	255
 14794  0017C4  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 14795  0017C6  6F7E               	movwf	(??___flmul+2)& (0+255),b
 14796  0017C8  0E7F               	movlw	127
 14797  0017CA  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 14798  0017CC  6F7F               	movwf	(??___flmul+3)& (0+255),b
 14799  0017CE  517C               	movf	??___flmul& (0+255),w,b
 14800  0017D0  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 14801  0017D2  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 14802  0017D4  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 14803  0017D6  A4D8               	btfss	status,2,c
 14804  0017D8  D002               	goto	u7410
 14805                           
 14806                           ; BSR set to: 0
 14807                           
 14808                           ; BSR set to: 0
 14809  0017DA  A187               	btfss	___flmul@prod& (0+255),0,b
 14810  0017DC  D002               	goto	l2787
 14811  0017DE                     u7410:
 14812                           
 14813                           ; BSR set to: 0
 14814  0017DE  0E01               	movlw	1
 14815  0017E0  6F85               	movwf	___flmul@aexp& (0+255),b
 14816  0017E2                     l2787:
 14817                           
 14818                           ; BSR set to: 0
 14819                           
 14820                           ; BSR set to: 0
 14821                           
 14822                           ; BSR set to: 0
 14823  0017E2  5185               	movf	___flmul@aexp& (0+255),w,b
 14824  0017E4  B4D8               	btfsc	status,2,c
 14825  0017E6  D01F               	goto	l2789
 14826                           
 14827                           ; BSR set to: 0
 14828  0017E8  0E01               	movlw	1
 14829  0017EA  2787               	addwf	___flmul@prod& (0+255),f,b
 14830  0017EC  0E00               	movlw	0
 14831  0017EE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14832  0017F0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14833  0017F2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14834                           
 14835                           ; BSR set to: 0
 14836  0017F4  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 14837  0017F6  D017               	goto	l2789
 14838                           
 14839                           ; BSR set to: 0
 14840  0017F8  C087  F07C         	movff	___flmul@prod,??___flmul
 14841  0017FC  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 14842  001800  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 14843  001804  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 14844  001808  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 14845  00180A  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14846  00180C  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14847  00180E  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14848  001810  337C               	rrcf	??___flmul& (0+255),f,b
 14849  001812  C07C  F087         	movff	??___flmul,___flmul@prod
 14850  001816  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 14851  00181A  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 14852  00181E  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 14853                           
 14854                           ; BSR set to: 0
 14855  001822  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 14856  001824  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 14857  001826                     l2789:
 14858                           
 14859                           ; BSR set to: 0
 14860                           
 14861                           ; BSR set to: 0
 14862                           
 14863                           ; BSR set to: 0
 14864  001826  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14865  001828  D00D               	goto	l2790
 14866  00182A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14867  00182C  E103               	bnz	u7440
 14868  00182E  298B               	incf	___flmul@temp& (0+255),w,b
 14869  001830  A0D8               	btfss	status,0,c
 14870  001832  D008               	goto	l2790
 14871  001834                     u7440:
 14872                           
 14873                           ; BSR set to: 0
 14874  001834  0E00               	movlw	0
 14875  001836  6F87               	movwf	___flmul@prod& (0+255),b
 14876  001838  0E00               	movlw	0
 14877  00183A  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14878  00183C  0E80               	movlw	128
 14879  00183E  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14880  001840  0E7F               	movlw	127
 14881  001842  D020               	goto	L7
 14882  001844                     l2790:
 14883                           
 14884                           ; BSR set to: 0
 14885                           
 14886                           ; BSR set to: 0
 14887  001844  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14888  001846  D005               	goto	u7450
 14889  001848  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14890  00184A  E10E               	bnz	l2792
 14891  00184C  058B               	decf	___flmul@temp& (0+255),w,b
 14892  00184E  B0D8               	btfsc	status,0,c
 14893  001850  D00B               	goto	l2792
 14894  001852                     u7450:
 14895                           
 14896                           ; BSR set to: 0
 14897  001852  0E00               	movlw	0
 14898  001854  6F87               	movwf	___flmul@prod& (0+255),b
 14899  001856  0E00               	movlw	0
 14900  001858  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 14901  00185A  0E00               	movlw	0
 14902  00185C  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 14903  00185E  0E00               	movlw	0
 14904  001860  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14905  001862  0E00               	movlw	0
 14906  001864  6F80               	movwf	___flmul@sign& (0+255),b
 14907  001866  D00F               	goto	l2793
 14908  001868                     l2792:
 14909                           
 14910                           ; BSR set to: 0
 14911  001868  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 14912                           
 14913                           ; BSR set to: 0
 14914  00186C  0EFF               	movlw	255
 14915  00186E  1787               	andwf	___flmul@prod& (0+255),f,b
 14916  001870  0EFF               	movlw	255
 14917  001872  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 14918  001874  0E7F               	movlw	127
 14919  001876  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 14920  001878  0E00               	movlw	0
 14921  00187A  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 14922                           
 14923                           ; BSR set to: 0
 14924  00187C  B186               	btfsc	___flmul@bexp& (0+255),0,b
 14925                           
 14926                           ; BSR set to: 0
 14927  00187E  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 14928                           
 14929                           ; BSR set to: 0
 14930                           
 14931                           ; BSR set to: 0
 14932  001880  90D8               	bcf	status,0,c
 14933  001882  3186               	rrcf	___flmul@bexp& (0+255),w,b
 14934  001884                     L7:
 14935  001884  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 14936  001886                     l2793:
 14937                           
 14938                           ; BSR set to: 0
 14939                           
 14940                           ; BSR set to: 0
 14941                           
 14942                           ; BSR set to: 0
 14943  001886  5180               	movf	___flmul@sign& (0+255),w,b
 14944  001888  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 14945                           
 14946                           ; BSR set to: 0
 14947  00188A  C087  F074         	movff	___flmul@prod,?___flmul
 14948  00188E  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 14949  001892  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 14950  001896  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 14951  00189A  0012               	return	
 14952  00189C                     __end_of___flmul:
 14953                           	opt stack 0
 14954                           tblptru	equ	0xFF8
 14955                           tblptrh	equ	0xFF7
 14956                           tblptrl	equ	0xFF6
 14957                           tablat	equ	0xFF5
 14958                           prodh	equ	0xFF4
 14959                           prodl	equ	0xFF3
 14960                           intcon	equ	0xFF2
 14961                           intcon3	equ	0xFF0
 14962                           postinc0	equ	0xFEE
 14963                           wreg	equ	0xFE8
 14964                           indf1	equ	0xFE7
 14965                           postdec1	equ	0xFE5
 14966                           fsr1h	equ	0xFE2
 14967                           fsr1l	equ	0xFE1
 14968                           indf2	equ	0xFDF
 14969                           fsr2h	equ	0xFDA
 14970                           fsr2l	equ	0xFD9
 14971                           status	equ	0xFD8
 14972                           
 14973 ;; *************** function ___fldiv *****************
 14974 ;; Defined at:
 14975 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  b               4   45[BANK0 ] unsigned char 
 14978 ;;  a               4   49[BANK0 ] unsigned char 
 14979 ;; Auto vars:     Size  Location     Type
 14980 ;;  grs             4   64[BANK0 ] unsigned long 
 14981 ;;  rem             4   58[BANK0 ] unsigned long 
 14982 ;;  new_exp         2   62[BANK0 ] int 
 14983 ;;  aexp            1   69[BANK0 ] unsigned char 
 14984 ;;  bexp            1   68[BANK0 ] unsigned char 
 14985 ;;  sign            1   57[BANK0 ] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  4   45[BANK0 ] unsigned char 
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, status,0
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14995 ;;      Params:         0       8       0       0       0       0       0       0       0
 14996 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14997 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14998 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14999 ;;Total ram usage:       25 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:   11
 15002 ;; This function calls:
 15003 ;;		Nothing
 15004 ;; This function is called by:
 15005 ;;		_ADC_TempConversion
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text49
 15010  001BDA                     __ptext49:
 15011                           	opt stack 0
 15012  001BDA                     ___fldiv:
 15013                           	opt stack 16
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;incstack = 0
 15017  001BDA  0100               	movlb	0	; () banked
 15018  001BDC  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15019  001BDE  0B80               	andlw	128
 15020  001BE0  6F99               	movwf	___fldiv@sign& (0+255),b
 15021  001BE2  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15022  001BE4  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15023  001BE6  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15024                           
 15025                           ; BSR set to: 0
 15026  001BE8  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15027                           
 15028                           ; BSR set to: 0
 15029  001BEA  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15030                           
 15031                           ; BSR set to: 0
 15032                           
 15033                           ; BSR set to: 0
 15034  001BEC  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15035  001BEE  B4D8               	btfsc	status,2,c
 15036  001BF0  D00D               	goto	l2735
 15037                           
 15038                           ; BSR set to: 0
 15039  001BF2  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15040  001BF4  A4D8               	btfss	status,2,c
 15041  001BF6  D008               	goto	l2736
 15042                           
 15043                           ; BSR set to: 0
 15044  001BF8  0E00               	movlw	0
 15045  001BFA  6F8D               	movwf	___fldiv@b& (0+255),b
 15046  001BFC  0E00               	movlw	0
 15047  001BFE  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15048  001C00  0E00               	movlw	0
 15049  001C02  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15050  001C04  0E00               	movlw	0
 15051  001C06  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15052  001C08                     l2736:
 15053                           
 15054                           ; BSR set to: 0
 15055                           
 15056                           ; BSR set to: 0
 15057  001C08  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15058  001C0A  D006               	goto	L8
 15059  001C0C                     l2735:
 15060                           
 15061                           ; BSR set to: 0
 15062                           
 15063                           ; BSR set to: 0
 15064  001C0C  0E00               	movlw	0
 15065  001C0E  6F8D               	movwf	___fldiv@b& (0+255),b
 15066  001C10  0E00               	movlw	0
 15067  001C12  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15068  001C14  0E00               	movlw	0
 15069  001C16  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15070  001C18                     L8:
 15071  001C18  0E00               	movlw	0
 15072  001C1A  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15073                           
 15074                           ; BSR set to: 0
 15075                           
 15076                           ; BSR set to: 0
 15077  001C1C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15078  001C1E  0B80               	andlw	128
 15079  001C20  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15080                           
 15081                           ; BSR set to: 0
 15082  001C22  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15083  001C24  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15084  001C26  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15085                           
 15086                           ; BSR set to: 0
 15087  001C28  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15088                           
 15089                           ; BSR set to: 0
 15090  001C2A  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15091                           
 15092                           ; BSR set to: 0
 15093                           
 15094                           ; BSR set to: 0
 15095  001C2C  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15096  001C2E  B4D8               	btfsc	status,2,c
 15097  001C30  D00D               	goto	l2739
 15098                           
 15099                           ; BSR set to: 0
 15100  001C32  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15101  001C34  A4D8               	btfss	status,2,c
 15102  001C36  D008               	goto	l2740
 15103                           
 15104                           ; BSR set to: 0
 15105  001C38  0E00               	movlw	0
 15106  001C3A  6F91               	movwf	___fldiv@a& (0+255),b
 15107  001C3C  0E00               	movlw	0
 15108  001C3E  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15109  001C40  0E00               	movlw	0
 15110  001C42  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15111  001C44  0E00               	movlw	0
 15112  001C46  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15113  001C48                     l2740:
 15114                           
 15115                           ; BSR set to: 0
 15116                           
 15117                           ; BSR set to: 0
 15118  001C48  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15119  001C4A  D006               	goto	L9
 15120  001C4C                     l2739:
 15121                           
 15122                           ; BSR set to: 0
 15123                           
 15124                           ; BSR set to: 0
 15125  001C4C  0E00               	movlw	0
 15126  001C4E  6F91               	movwf	___fldiv@a& (0+255),b
 15127  001C50  0E00               	movlw	0
 15128  001C52  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15129  001C54  0E00               	movlw	0
 15130  001C56  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15131  001C58                     L9:
 15132  001C58  0E00               	movlw	0
 15133  001C5A  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15134                           
 15135                           ; BSR set to: 0
 15136                           
 15137                           ; BSR set to: 0
 15138  001C5C  5191               	movf	___fldiv@a& (0+255),w,b
 15139  001C5E  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15140  001C60  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15141  001C62  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15142  001C64  A4D8               	btfss	status,2,c
 15143  001C66  D015               	goto	l2742
 15144                           
 15145                           ; BSR set to: 0
 15146  001C68  0E00               	movlw	0
 15147  001C6A  6F8D               	movwf	___fldiv@b& (0+255),b
 15148  001C6C  0E00               	movlw	0
 15149  001C6E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15150  001C70  0E00               	movlw	0
 15151  001C72  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15152  001C74  0E00               	movlw	0
 15153  001C76  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15154                           
 15155                           ; BSR set to: 0
 15156  001C78  0E80               	movlw	128
 15157  001C7A  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15158  001C7C  0E7F               	movlw	127
 15159  001C7E  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15160                           
 15161                           ; BSR set to: 0
 15162  001C80  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15163  001C84  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15164  001C88  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15165  001C8C  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15166                           
 15167                           ; BSR set to: 0
 15168  001C90  0012               	return	
 15169  001C92                     l2742:
 15170                           
 15171                           ; BSR set to: 0
 15172                           
 15173                           ; BSR set to: 0
 15174  001C92  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15175  001C94  A4D8               	btfss	status,2,c
 15176  001C96  D011               	goto	l2744
 15177                           
 15178                           ; BSR set to: 0
 15179  001C98  0E00               	movlw	0
 15180  001C9A  6F8D               	movwf	___fldiv@b& (0+255),b
 15181  001C9C  0E00               	movlw	0
 15182  001C9E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15183  001CA0  0E00               	movlw	0
 15184  001CA2  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15185  001CA4  0E00               	movlw	0
 15186  001CA6  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15187                           
 15188                           ; BSR set to: 0
 15189  001CA8  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15190  001CAC  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15191  001CB0  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15192  001CB4  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15193                           
 15194                           ; BSR set to: 0
 15195  001CB8  0012               	return	
 15196  001CBA                     l2744:
 15197                           
 15198                           ; BSR set to: 0
 15199                           
 15200                           ; BSR set to: 0
 15201  001CBA  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15202  001CBC  6F95               	movwf	??___fldiv& (0+255),b
 15203  001CBE  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15204  001CC0  1F95               	comf	??___fldiv& (0+255),f,b
 15205  001CC2  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15206  001CC4  4B95               	infsnz	??___fldiv& (0+255),f,b
 15207  001CC6  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15208  001CC8  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15209  001CCA  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15210  001CCC  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15211  001CCE  5195               	movf	??___fldiv& (0+255),w,b
 15212  001CD0  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15213  001CD2  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15214  001CD4  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15215  001CD6  0E7F               	movlw	127
 15216  001CD8  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15217  001CDA  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15218  001CDC  0E00               	movlw	0
 15219  001CDE  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15220  001CE0  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15221                           
 15222                           ; BSR set to: 0
 15223  001CE2  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15224  001CE6  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15225  001CEA  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15226  001CEE  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15227                           
 15228                           ; BSR set to: 0
 15229  001CF2  0E00               	movlw	0
 15230  001CF4  6F8D               	movwf	___fldiv@b& (0+255),b
 15231  001CF6  0E00               	movlw	0
 15232  001CF8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15233  001CFA  0E00               	movlw	0
 15234  001CFC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15235  001CFE  0E00               	movlw	0
 15236  001D00  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15237                           
 15238                           ; BSR set to: 0
 15239  001D02  0E00               	movlw	0
 15240  001D04  6FA0               	movwf	___fldiv@grs& (0+255),b
 15241  001D06  0E00               	movlw	0
 15242  001D08  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15243  001D0A  0E00               	movlw	0
 15244  001D0C  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15245  001D0E  0E00               	movlw	0
 15246  001D10  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15247                           
 15248                           ; BSR set to: 0
 15249  001D12  0E00               	movlw	0
 15250  001D14  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15251  001D16  D028               	goto	l2745
 15252  001D18                     
 15253                           ; BSR set to: 0
 15254                           
 15255                           ; BSR set to: 0
 15256  001D18  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15257  001D1A  B4D8               	btfsc	status,2,c
 15258  001D1C  D011               	goto	l2747
 15259                           
 15260                           ; BSR set to: 0
 15261  001D1E  90D8               	bcf	status,0,c
 15262  001D20  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15263  001D22  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15264  001D24  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15265  001D26  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15266  001D28  90D8               	bcf	status,0,c
 15267  001D2A  378D               	rlcf	___fldiv@b& (0+255),f,b
 15268  001D2C  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15269  001D2E  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15270  001D30  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15271                           
 15272                           ; BSR set to: 0
 15273  001D32  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15274                           
 15275                           ; BSR set to: 0
 15276  001D34  818D               	bsf	___fldiv@b& (0+255),0,b
 15277                           
 15278                           ; BSR set to: 0
 15279  001D36  90D8               	bcf	status,0,c
 15280  001D38  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15281  001D3A  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15282  001D3C  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15283  001D3E  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15284  001D40                     l2747:
 15285                           
 15286                           ; BSR set to: 0
 15287                           
 15288                           ; BSR set to: 0
 15289  001D40  5191               	movf	___fldiv@a& (0+255),w,b
 15290  001D42  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15291  001D44  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15292  001D46  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15293  001D48  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15294  001D4A  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15295  001D4C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15296  001D4E  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15297  001D50  A0D8               	btfss	status,0,c
 15298  001D52  D009               	goto	l2749
 15299                           
 15300                           ; BSR set to: 0
 15301  001D54  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15302                           
 15303                           ; BSR set to: 0
 15304  001D56  5191               	movf	___fldiv@a& (0+255),w,b
 15305  001D58  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15306  001D5A  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15307  001D5C  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15308  001D5E  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15309  001D60  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15310  001D62  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15311  001D64  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15312  001D66                     l2749:
 15313                           
 15314                           ; BSR set to: 0
 15315                           
 15316                           ; BSR set to: 0
 15317  001D66  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15318  001D68                     l2745:
 15319                           
 15320                           ; BSR set to: 0
 15321  001D68  0E19               	movlw	25
 15322  001D6A  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15323  001D6C  D7D5               	goto	l2746
 15324                           
 15325                           ; BSR set to: 0
 15326                           
 15327                           ; BSR set to: 0
 15328  001D6E  519A               	movf	___fldiv@rem& (0+255),w,b
 15329  001D70  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15330  001D72  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15331  001D74  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15332  001D76  B4D8               	btfsc	status,2,c
 15333  001D78  D011               	goto	l2752
 15334                           
 15335                           ; BSR set to: 0
 15336  001D7A  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15337                           
 15338                           ; BSR set to: 0
 15339  001D7C  D00F               	goto	l2752
 15340  001D7E                     
 15341                           ; BSR set to: 0
 15342                           
 15343                           ; BSR set to: 0
 15344  001D7E  90D8               	bcf	status,0,c
 15345  001D80  378D               	rlcf	___fldiv@b& (0+255),f,b
 15346  001D82  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15347  001D84  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15348  001D86  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  001D88  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15352                           
 15353                           ; BSR set to: 0
 15354  001D8A  818D               	bsf	___fldiv@b& (0+255),0,b
 15355                           
 15356                           ; BSR set to: 0
 15357  001D8C  90D8               	bcf	status,0,c
 15358  001D8E  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15359  001D90  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15360  001D92  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15361  001D94  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15362  001D96  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15363  001D98  A0D8               	btfss	status,0,c
 15364  001D9A  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15365  001D9C                     l2752:
 15366                           
 15367                           ; BSR set to: 0
 15368                           
 15369                           ; BSR set to: 0
 15370  001D9C  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15371  001D9E  D7EF               	goto	l2753
 15372                           
 15373                           ; BSR set to: 0
 15374                           
 15375                           ; BSR set to: 0
 15376  001DA0  0E00               	movlw	0
 15377  001DA2  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15378                           
 15379                           ; BSR set to: 0
 15380  001DA4  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15381  001DA6  D016               	goto	l2759
 15382                           
 15383                           ; BSR set to: 0
 15384  001DA8  0EFF               	movlw	255
 15385  001DAA  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15386  001DAC  6F95               	movwf	??___fldiv& (0+255),b
 15387  001DAE  0EFF               	movlw	255
 15388  001DB0  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15389  001DB2  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15390  001DB4  0EFF               	movlw	255
 15391  001DB6  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15392  001DB8  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15393  001DBA  0E7F               	movlw	127
 15394  001DBC  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15395  001DBE  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15396  001DC0  5195               	movf	??___fldiv& (0+255),w,b
 15397  001DC2  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15398  001DC4  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15399  001DC6  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15400  001DC8  A4D8               	btfss	status,2,c
 15401  001DCA  D002               	goto	u7220
 15402                           
 15403                           ; BSR set to: 0
 15404                           
 15405                           ; BSR set to: 0
 15406  001DCC  A18D               	btfss	___fldiv@b& (0+255),0,b
 15407  001DCE  D002               	goto	l2759
 15408  001DD0                     u7220:
 15409                           
 15410                           ; BSR set to: 0
 15411  001DD0  0E01               	movlw	1
 15412  001DD2  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15413  001DD4                     l2759:
 15414                           
 15415                           ; BSR set to: 0
 15416                           
 15417                           ; BSR set to: 0
 15418                           
 15419                           ; BSR set to: 0
 15420  001DD4  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15421  001DD6  B4D8               	btfsc	status,2,c
 15422  001DD8  D01F               	goto	l2761
 15423                           
 15424                           ; BSR set to: 0
 15425  001DDA  0E01               	movlw	1
 15426  001DDC  278D               	addwf	___fldiv@b& (0+255),f,b
 15427  001DDE  0E00               	movlw	0
 15428  001DE0  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15429  001DE2  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15430  001DE4  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15431                           
 15432                           ; BSR set to: 0
 15433  001DE6  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 15434  001DE8  D017               	goto	l2761
 15435                           
 15436                           ; BSR set to: 0
 15437  001DEA  C08D  F095         	movff	___fldiv@b,??___fldiv
 15438  001DEE  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 15439  001DF2  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 15440  001DF6  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 15441  001DFA  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 15442  001DFC  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 15443  001DFE  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 15444  001E00  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 15445  001E02  3395               	rrcf	??___fldiv& (0+255),f,b
 15446  001E04  C095  F08D         	movff	??___fldiv,___fldiv@b
 15447  001E08  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 15448  001E0C  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 15449  001E10  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 15450                           
 15451                           ; BSR set to: 0
 15452  001E14  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15453  001E16  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15454  001E18                     l2761:
 15455                           
 15456                           ; BSR set to: 0
 15457                           
 15458                           ; BSR set to: 0
 15459                           
 15460                           ; BSR set to: 0
 15461  001E18  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15462  001E1A  D010               	goto	l2762
 15463  001E1C  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15464  001E1E  E103               	bnz	u7250
 15465  001E20  299E               	incf	___fldiv@new_exp& (0+255),w,b
 15466  001E22  A0D8               	btfss	status,0,c
 15467  001E24  D00B               	goto	l2762
 15468  001E26                     u7250:
 15469                           
 15470                           ; BSR set to: 0
 15471  001E26  0E00               	movlw	0
 15472  001E28  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15473  001E2A  699E               	setf	___fldiv@new_exp& (0+255),b
 15474  001E2C  0E00               	movlw	0
 15475  001E2E  6F8D               	movwf	___fldiv@b& (0+255),b
 15476  001E30  0E00               	movlw	0
 15477  001E32  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15478  001E34  0E00               	movlw	0
 15479  001E36  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15480  001E38  0E00               	movlw	0
 15481  001E3A  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15482  001E3C                     l2762:
 15483                           
 15484                           ; BSR set to: 0
 15485                           
 15486                           ; BSR set to: 0
 15487  001E3C  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15488  001E3E  D005               	goto	u7260
 15489  001E40  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15490  001E42  E111               	bnz	l8984
 15491  001E44  059E               	decf	___fldiv@new_exp& (0+255),w,b
 15492  001E46  B0D8               	btfsc	status,0,c
 15493  001E48  D00E               	goto	l2763
 15494  001E4A                     u7260:
 15495                           
 15496                           ; BSR set to: 0
 15497  001E4A  0E00               	movlw	0
 15498  001E4C  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15499  001E4E  0E00               	movlw	0
 15500  001E50  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15501  001E52  0E00               	movlw	0
 15502  001E54  6F8D               	movwf	___fldiv@b& (0+255),b
 15503  001E56  0E00               	movlw	0
 15504  001E58  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15505  001E5A  0E00               	movlw	0
 15506  001E5C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15507  001E5E  0E00               	movlw	0
 15508  001E60  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15509  001E62  0E00               	movlw	0
 15510  001E64  6F99               	movwf	___fldiv@sign& (0+255),b
 15511  001E66                     l2763:
 15512  001E66                     l8984:
 15513                           
 15514                           ; BSR set to: 0
 15515  001E66  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 15516                           
 15517                           ; BSR set to: 0
 15518  001E6A  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 15519  001E6C  D002               	goto	l2764
 15520                           
 15521                           ; BSR set to: 0
 15522  001E6E  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15523  001E70  D001               	goto	l2765
 15524  001E72                     l2764:
 15525                           
 15526                           ; BSR set to: 0
 15527                           
 15528                           ; BSR set to: 0
 15529  001E72  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 15530  001E74                     l2765:
 15531                           
 15532                           ; BSR set to: 0
 15533                           
 15534                           ; BSR set to: 0
 15535  001E74  90D8               	bcf	status,0,c
 15536  001E76  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 15537  001E78  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15538                           
 15539                           ; BSR set to: 0
 15540  001E7A  5199               	movf	___fldiv@sign& (0+255),w,b
 15541  001E7C  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15542                           
 15543                           ; BSR set to: 0
 15544  001E7E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15545  001E82  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15546  001E86  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15547  001E8A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15548  001E8E  0012               	return	
 15549  001E90                     __end_of___fldiv:
 15550                           	opt stack 0
 15551                           tblptru	equ	0xFF8
 15552                           tblptrh	equ	0xFF7
 15553                           tblptrl	equ	0xFF6
 15554                           tablat	equ	0xFF5
 15555                           prodh	equ	0xFF4
 15556                           prodl	equ	0xFF3
 15557                           intcon	equ	0xFF2
 15558                           intcon3	equ	0xFF0
 15559                           postinc0	equ	0xFEE
 15560                           wreg	equ	0xFE8
 15561                           indf1	equ	0xFE7
 15562                           postdec1	equ	0xFE5
 15563                           fsr1h	equ	0xFE2
 15564                           fsr1l	equ	0xFE1
 15565                           indf2	equ	0xFDF
 15566                           fsr2h	equ	0xFDA
 15567                           fsr2l	equ	0xFD9
 15568                           status	equ	0xFD8
 15569                           
 15570 ;; *************** function ___fladd *****************
 15571 ;; Defined at:
 15572 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;  b               4    0[BANK0 ] unsigned char 
 15575 ;;  a               4    4[BANK0 ] unsigned char 
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;  grs             1   19[BANK0 ] unsigned char 
 15578 ;;  bexp            1   18[BANK0 ] unsigned char 
 15579 ;;  aexp            1   17[BANK0 ] unsigned char 
 15580 ;;  signs           1   16[BANK0 ] unsigned char 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  4    0[BANK0 ] unsigned char 
 15583 ;; Registers used:
 15584 ;;		wreg, status,2, status,0
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15590 ;;      Params:         0       8       0       0       0       0       0       0       0
 15591 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15592 ;;      Temps:          0       8       0       0       0       0       0       0       0
 15593 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15594 ;;Total ram usage:       20 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:   11
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_ADC_TempConversion
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text50
 15605  00189C                     __ptext50:
 15606                           	opt stack 0
 15607  00189C                     ___fladd:
 15608                           	opt stack 16
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;incstack = 0
 15612  00189C  0100               	movlb	0	; () banked
 15613  00189E  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15614  0018A0  0B80               	andlw	128
 15615  0018A2  6F70               	movwf	___fladd@signs& (0+255),b
 15616  0018A4  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15617  0018A6  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 15618  0018A8  6F72               	movwf	___fladd@bexp& (0+255),b
 15619                           
 15620                           ; BSR set to: 0
 15621  0018AA  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 15622                           
 15623                           ; BSR set to: 0
 15624  0018AC  8172               	bsf	___fladd@bexp& (0+255),0,b
 15625                           
 15626                           ; BSR set to: 0
 15627                           
 15628                           ; BSR set to: 0
 15629  0018AE  5172               	movf	___fladd@bexp& (0+255),w,b
 15630  0018B0  B4D8               	btfsc	status,2,c
 15631  0018B2  D00D               	goto	l2678
 15632                           
 15633                           ; BSR set to: 0
 15634  0018B4  2972               	incf	___fladd@bexp& (0+255),w,b
 15635  0018B6  A4D8               	btfss	status,2,c
 15636  0018B8  D008               	goto	l2679
 15637                           
 15638                           ; BSR set to: 0
 15639  0018BA  0E00               	movlw	0
 15640  0018BC  6F60               	movwf	___fladd@b& (0+255),b
 15641  0018BE  0E00               	movlw	0
 15642  0018C0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15643  0018C2  0E00               	movlw	0
 15644  0018C4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15645  0018C6  0E00               	movlw	0
 15646  0018C8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15647  0018CA                     l2679:
 15648                           
 15649                           ; BSR set to: 0
 15650                           
 15651                           ; BSR set to: 0
 15652  0018CA  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15653  0018CC  D006               	goto	L10
 15654  0018CE                     l2678:
 15655                           
 15656                           ; BSR set to: 0
 15657                           
 15658                           ; BSR set to: 0
 15659  0018CE  0E00               	movlw	0
 15660  0018D0  6F60               	movwf	___fladd@b& (0+255),b
 15661  0018D2  0E00               	movlw	0
 15662  0018D4  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15663  0018D6  0E00               	movlw	0
 15664  0018D8  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15665  0018DA                     L10:
 15666  0018DA  0E00               	movlw	0
 15667  0018DC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15668                           
 15669                           ; BSR set to: 0
 15670                           
 15671                           ; BSR set to: 0
 15672  0018DE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15673  0018E0  0B80               	andlw	128
 15674  0018E2  6F71               	movwf	___fladd@aexp& (0+255),b
 15675                           
 15676                           ; BSR set to: 0
 15677  0018E4  5170               	movf	___fladd@signs& (0+255),w,b
 15678  0018E6  1971               	xorwf	___fladd@aexp& (0+255),w,b
 15679  0018E8  A4D8               	btfss	status,2,c
 15680                           
 15681                           ; BSR set to: 0
 15682  0018EA  8D70               	bsf	___fladd@signs& (0+255),6,b
 15683                           
 15684                           ; BSR set to: 0
 15685                           
 15686                           ; BSR set to: 0
 15687  0018EC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15688  0018EE  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 15689  0018F0  6F71               	movwf	___fladd@aexp& (0+255),b
 15690                           
 15691                           ; BSR set to: 0
 15692  0018F2  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 15693                           
 15694                           ; BSR set to: 0
 15695  0018F4  8171               	bsf	___fladd@aexp& (0+255),0,b
 15696                           
 15697                           ; BSR set to: 0
 15698                           
 15699                           ; BSR set to: 0
 15700  0018F6  5171               	movf	___fladd@aexp& (0+255),w,b
 15701  0018F8  B4D8               	btfsc	status,2,c
 15702  0018FA  D00D               	goto	l2683
 15703                           
 15704                           ; BSR set to: 0
 15705  0018FC  2971               	incf	___fladd@aexp& (0+255),w,b
 15706  0018FE  A4D8               	btfss	status,2,c
 15707  001900  D008               	goto	l2684
 15708                           
 15709                           ; BSR set to: 0
 15710  001902  0E00               	movlw	0
 15711  001904  6F64               	movwf	___fladd@a& (0+255),b
 15712  001906  0E00               	movlw	0
 15713  001908  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15714  00190A  0E00               	movlw	0
 15715  00190C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15716  00190E  0E00               	movlw	0
 15717  001910  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15718  001912                     l2684:
 15719                           
 15720                           ; BSR set to: 0
 15721                           
 15722                           ; BSR set to: 0
 15723  001912  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 15724  001914  D006               	goto	L11
 15725  001916                     l2683:
 15726                           
 15727                           ; BSR set to: 0
 15728                           
 15729                           ; BSR set to: 0
 15730  001916  0E00               	movlw	0
 15731  001918  6F64               	movwf	___fladd@a& (0+255),b
 15732  00191A  0E00               	movlw	0
 15733  00191C  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15734  00191E  0E00               	movlw	0
 15735  001920  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15736  001922                     L11:
 15737  001922  0E00               	movlw	0
 15738  001924  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15739                           
 15740                           ; BSR set to: 0
 15741                           
 15742                           ; BSR set to: 0
 15743  001926  5172               	movf	___fladd@bexp& (0+255),w,b
 15744  001928  5D71               	subwf	___fladd@aexp& (0+255),w,b
 15745  00192A  B0D8               	btfsc	status,0,c
 15746  00192C  D022               	goto	l2686
 15747                           
 15748                           ; BSR set to: 0
 15749  00192E  AD70               	btfss	___fladd@signs& (0+255),6,b
 15750  001930  D002               	goto	l2687
 15751                           
 15752                           ; BSR set to: 0
 15753  001932  0E80               	movlw	128
 15754  001934  1B70               	xorwf	___fladd@signs& (0+255),f,b
 15755  001936                     l2687:
 15756                           
 15757                           ; BSR set to: 0
 15758                           
 15759                           ; BSR set to: 0
 15760  001936  C072  F073         	movff	___fladd@bexp,___fladd@grs
 15761                           
 15762                           ; BSR set to: 0
 15763  00193A  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15764                           
 15765                           ; BSR set to: 0
 15766  00193E  C073  F071         	movff	___fladd@grs,___fladd@aexp
 15767                           
 15768                           ; BSR set to: 0
 15769  001942  C060  F073         	movff	___fladd@b,___fladd@grs
 15770                           
 15771                           ; BSR set to: 0
 15772  001946  C064  F060         	movff	___fladd@a,___fladd@b
 15773                           
 15774                           ; BSR set to: 0
 15775  00194A  C073  F064         	movff	___fladd@grs,___fladd@a
 15776                           
 15777                           ; BSR set to: 0
 15778  00194E  C061  F073         	movff	___fladd@b+1,___fladd@grs
 15779                           
 15780                           ; BSR set to: 0
 15781  001952  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 15782                           
 15783                           ; BSR set to: 0
 15784  001956  C073  F065         	movff	___fladd@grs,___fladd@a+1
 15785                           
 15786                           ; BSR set to: 0
 15787  00195A  C062  F073         	movff	___fladd@b+2,___fladd@grs
 15788                           
 15789                           ; BSR set to: 0
 15790  00195E  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 15791                           
 15792                           ; BSR set to: 0
 15793  001962  C073  F066         	movff	___fladd@grs,___fladd@a+2
 15794                           
 15795                           ; BSR set to: 0
 15796  001966  C063  F073         	movff	___fladd@b+3,___fladd@grs
 15797                           
 15798                           ; BSR set to: 0
 15799  00196A  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 15800                           
 15801                           ; BSR set to: 0
 15802  00196E  C073  F067         	movff	___fladd@grs,___fladd@a+3
 15803  001972                     l2686:
 15804                           
 15805                           ; BSR set to: 0
 15806                           
 15807                           ; BSR set to: 0
 15808  001972  0E00               	movlw	0
 15809  001974  6F73               	movwf	___fladd@grs& (0+255),b
 15810                           
 15811                           ; BSR set to: 0
 15812  001976  5172               	movf	___fladd@bexp& (0+255),w,b
 15813  001978  6F68               	movwf	??___fladd& (0+255),b
 15814  00197A  6B69               	clrf	(??___fladd+1)& (0+255),b
 15815  00197C  1F68               	comf	??___fladd& (0+255),f,b
 15816  00197E  1F69               	comf	(??___fladd+1)& (0+255),f,b
 15817  001980  4B68               	infsnz	??___fladd& (0+255),f,b
 15818  001982  2B69               	incf	(??___fladd+1)& (0+255),f,b
 15819  001984  5171               	movf	___fladd@aexp& (0+255),w,b
 15820  001986  6F6A               	movwf	(??___fladd+2)& (0+255),b
 15821  001988  6B6B               	clrf	(??___fladd+3)& (0+255),b
 15822  00198A  5168               	movf	??___fladd& (0+255),w,b
 15823  00198C  276A               	addwf	(??___fladd+2)& (0+255),f,b
 15824  00198E  5169               	movf	(??___fladd+1)& (0+255),w,b
 15825  001990  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 15826  001992  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 15827  001994  D02C               	goto	l2690
 15828  001996  516B               	movf	(??___fladd+3)& (0+255),w,b
 15829  001998  E104               	bnz	u6750
 15830  00199A  0E1A               	movlw	26
 15831  00199C  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 15832  00199E  A0D8               	btfss	status,0,c
 15833  0019A0  D026               	goto	l2690
 15834  0019A2                     u6750:
 15835                           
 15836                           ; BSR set to: 0
 15837  0019A2  5160               	movf	___fladd@b& (0+255),w,b
 15838  0019A4  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 15839  0019A6  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 15840  0019A8  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 15841  0019AA  B4D8               	btfsc	status,2,c
 15842  0019AC  D002               	goto	u6760
 15843  0019AE  0E01               	movlw	1
 15844  0019B0  D001               	goto	u6770
 15845  0019B2                     u6760:
 15846  0019B2  0E00               	movlw	0
 15847  0019B4                     u6770:
 15848  0019B4  6F73               	movwf	___fladd@grs& (0+255),b
 15849                           
 15850                           ; BSR set to: 0
 15851  0019B6  0E00               	movlw	0
 15852  0019B8  6F60               	movwf	___fladd@b& (0+255),b
 15853  0019BA  0E00               	movlw	0
 15854  0019BC  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15855  0019BE  0E00               	movlw	0
 15856  0019C0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15857  0019C2  0E00               	movlw	0
 15858  0019C4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15859                           
 15860                           ; BSR set to: 0
 15861  0019C6  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15862  0019CA  D015               	goto	u6800
 15863  0019CC                     l2691:
 15864                           
 15865                           ; BSR set to: 0
 15866  0019CC  A173               	btfss	___fladd@grs& (0+255),0,b
 15867  0019CE  D005               	goto	l2692
 15868                           
 15869                           ; BSR set to: 0
 15870  0019D0  90D8               	bcf	status,0,c
 15871  0019D2  3173               	rrcf	___fladd@grs& (0+255),w,b
 15872  0019D4  0901               	iorlw	1
 15873  0019D6  6F73               	movwf	___fladd@grs& (0+255),b
 15874  0019D8  D002               	goto	l2693
 15875  0019DA                     l2692:
 15876                           
 15877                           ; BSR set to: 0
 15878                           
 15879                           ; BSR set to: 0
 15880  0019DA  90D8               	bcf	status,0,c
 15881  0019DC  3373               	rrcf	___fladd@grs& (0+255),f,b
 15882  0019DE                     l2693:
 15883                           
 15884                           ; BSR set to: 0
 15885                           
 15886                           ; BSR set to: 0
 15887  0019DE  B160               	btfsc	___fladd@b& (0+255),0,b
 15888                           
 15889                           ; BSR set to: 0
 15890  0019E0  8F73               	bsf	___fladd@grs& (0+255),7,b
 15891                           
 15892                           ; BSR set to: 0
 15893                           
 15894                           ; BSR set to: 0
 15895  0019E2  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15896  0019E4  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15897  0019E6  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15898  0019E8  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15899  0019EA  3360               	rrcf	___fladd@b& (0+255),f,b
 15900                           
 15901                           ; BSR set to: 0
 15902  0019EC  2B72               	incf	___fladd@bexp& (0+255),f,b
 15903  0019EE                     l2690:
 15904                           
 15905                           ; BSR set to: 0
 15906  0019EE  5171               	movf	___fladd@aexp& (0+255),w,b
 15907  0019F0  5D72               	subwf	___fladd@bexp& (0+255),w,b
 15908  0019F2  A0D8               	btfss	status,0,c
 15909  0019F4  D7EB               	goto	l2691
 15910  0019F6                     u6800:
 15911                           
 15912                           ; BSR set to: 0
 15913                           
 15914                           ; BSR set to: 0
 15915  0019F6  BD70               	btfsc	___fladd@signs& (0+255),6,b
 15916  0019F8  D029               	goto	l2696
 15917                           
 15918                           ; BSR set to: 0
 15919  0019FA  5172               	movf	___fladd@bexp& (0+255),w,b
 15920  0019FC  A4D8               	btfss	status,2,c
 15921  0019FE  D009               	goto	l2697
 15922                           
 15923                           ; BSR set to: 0
 15924  001A00  0E00               	movlw	0
 15925  001A02  6F60               	movwf	?___fladd& (0+255),b
 15926  001A04  0E00               	movlw	0
 15927  001A06  6F61               	movwf	(?___fladd+1)& (0+255),b
 15928  001A08  0E00               	movlw	0
 15929  001A0A  6F62               	movwf	(?___fladd+2)& (0+255),b
 15930  001A0C  0E00               	movlw	0
 15931  001A0E  6F63               	movwf	(?___fladd+3)& (0+255),b
 15932                           
 15933                           ; BSR set to: 0
 15934  001A10  0012               	return	
 15935  001A12                     l2697:
 15936                           
 15937                           ; BSR set to: 0
 15938                           
 15939                           ; BSR set to: 0
 15940  001A12  5164               	movf	___fladd@a& (0+255),w,b
 15941  001A14  2760               	addwf	___fladd@b& (0+255),f,b
 15942  001A16  5165               	movf	(___fladd@a+1)& (0+255),w,b
 15943  001A18  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 15944  001A1A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 15945  001A1C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 15946  001A1E  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15947  001A20  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 15948                           
 15949                           ; BSR set to: 0
 15950  001A22  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 15951  001A24  D083               	goto	u6930
 15952                           
 15953                           ; BSR set to: 0
 15954  001A26  A173               	btfss	___fladd@grs& (0+255),0,b
 15955  001A28  D006               	goto	l2700
 15956                           
 15957                           ; BSR set to: 0
 15958  001A2A  90D8               	bcf	status,0,c
 15959  001A2C  3373               	rrcf	___fladd@grs& (0+255),f,b
 15960  001A2E  5173               	movf	___fladd@grs& (0+255),w,b
 15961  001A30  0901               	iorlw	1
 15962  001A32  6F73               	movwf	___fladd@grs& (0+255),b
 15963  001A34  D002               	goto	l2701
 15964  001A36                     l2700:
 15965                           
 15966                           ; BSR set to: 0
 15967                           
 15968                           ; BSR set to: 0
 15969  001A36  90D8               	bcf	status,0,c
 15970  001A38  3373               	rrcf	___fladd@grs& (0+255),f,b
 15971  001A3A                     l2701:
 15972                           
 15973                           ; BSR set to: 0
 15974                           
 15975                           ; BSR set to: 0
 15976  001A3A  B160               	btfsc	___fladd@b& (0+255),0,b
 15977                           
 15978                           ; BSR set to: 0
 15979  001A3C  8F73               	bsf	___fladd@grs& (0+255),7,b
 15980                           
 15981                           ; BSR set to: 0
 15982                           
 15983                           ; BSR set to: 0
 15984  001A3E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15985  001A40  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15986  001A42  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15987  001A44  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15988  001A46  3360               	rrcf	___fladd@b& (0+255),f,b
 15989                           
 15990                           ; BSR set to: 0
 15991  001A48  2B72               	incf	___fladd@bexp& (0+255),f,b
 15992                           
 15993                           ; BSR set to: 0
 15994  001A4A  D070               	goto	u6930
 15995  001A4C                     l2696:
 15996                           
 15997                           ; BSR set to: 0
 15998                           
 15999                           ; BSR set to: 0
 16000  001A4C  5164               	movf	___fladd@a& (0+255),w,b
 16001  001A4E  5D60               	subwf	___fladd@b& (0+255),w,b
 16002  001A50  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16003  001A52  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16004  001A54  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16005  001A56  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16006  001A58  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16007  001A5A  0A80               	xorlw	128
 16008  001A5C  6F68               	movwf	??___fladd& (0+255),b
 16009  001A5E  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16010  001A60  0A80               	xorlw	128
 16011  001A62  5968               	subwfb	??___fladd& (0+255),w,b
 16012  001A64  B0D8               	btfsc	status,0,c
 16013  001A66  D036               	goto	l2704
 16014                           
 16015                           ; BSR set to: 0
 16016  001A68  C060  F068         	movff	___fladd@b,??___fladd
 16017  001A6C  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16018  001A70  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16019  001A74  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16020  001A78  1F68               	comf	??___fladd& (0+255),f,b
 16021  001A7A  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16022  001A7C  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16023  001A7E  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16024  001A80  2B68               	incf	??___fladd& (0+255),f,b
 16025  001A82  0E00               	movlw	0
 16026  001A84  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16027  001A86  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16028  001A88  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16029  001A8A  5164               	movf	___fladd@a& (0+255),w,b
 16030  001A8C  2568               	addwf	??___fladd& (0+255),w,b
 16031  001A8E  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16032  001A90  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16033  001A92  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16034  001A94  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16035  001A96  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16036  001A98  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16037  001A9A  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16038  001A9C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16039  001A9E  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16040  001AA0  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16041  001AA2  0EFF               	movlw	255
 16042  001AA4  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16043  001AA6  6F60               	movwf	___fladd@b& (0+255),b
 16044  001AA8  0EFF               	movlw	255
 16045  001AAA  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16046  001AAC  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16047  001AAE  0EFF               	movlw	255
 16048  001AB0  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16049  001AB2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16050  001AB4  0EFF               	movlw	255
 16051  001AB6  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16052  001AB8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16053  001ABA  0E80               	movlw	128
 16054  001ABC  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16055                           
 16056                           ; BSR set to: 0
 16057  001ABE  6D73               	negf	___fladd@grs& (0+255),b
 16058                           
 16059                           ; BSR set to: 0
 16060  001AC0  5173               	movf	___fladd@grs& (0+255),w,b
 16061  001AC2  A4D8               	btfss	status,2,c
 16062  001AC4  D00F               	goto	l2706
 16063                           
 16064                           ; BSR set to: 0
 16065  001AC6  0E01               	movlw	1
 16066  001AC8  2760               	addwf	___fladd@b& (0+255),f,b
 16067  001ACA  0E00               	movlw	0
 16068  001ACC  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16069  001ACE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16070  001AD0  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16071                           
 16072                           ; BSR set to: 0
 16073  001AD2  D008               	goto	l2706
 16074  001AD4                     l2704:
 16075                           
 16076                           ; BSR set to: 0
 16077                           
 16078                           ; BSR set to: 0
 16079  001AD4  5164               	movf	___fladd@a& (0+255),w,b
 16080  001AD6  5F60               	subwf	___fladd@b& (0+255),f,b
 16081  001AD8  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16082  001ADA  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16083  001ADC  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16084  001ADE  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16085  001AE0  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16086  001AE2  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16087  001AE4                     l2706:
 16088                           
 16089                           ; BSR set to: 0
 16090  001AE4  5160               	movf	___fladd@b& (0+255),w,b
 16091  001AE6  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16092  001AE8  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16093  001AEA  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16094  001AEC  A4D8               	btfss	status,2,c
 16095  001AEE  D01C               	goto	l2713
 16096                           
 16097                           ; BSR set to: 0
 16098  001AF0  5173               	movf	___fladd@grs& (0+255),w,b
 16099  001AF2  A4D8               	btfss	status,2,c
 16100  001AF4  D019               	goto	l2713
 16101                           
 16102                           ; BSR set to: 0
 16103  001AF6  0E00               	movlw	0
 16104  001AF8  6F60               	movwf	?___fladd& (0+255),b
 16105  001AFA  0E00               	movlw	0
 16106  001AFC  6F61               	movwf	(?___fladd+1)& (0+255),b
 16107  001AFE  0E00               	movlw	0
 16108  001B00  6F62               	movwf	(?___fladd+2)& (0+255),b
 16109  001B02  0E00               	movlw	0
 16110  001B04  6F63               	movwf	(?___fladd+3)& (0+255),b
 16111                           
 16112                           ; BSR set to: 0
 16113  001B06  0012               	return	
 16114  001B08                     
 16115                           ; BSR set to: 0
 16116                           
 16117                           ; BSR set to: 0
 16118  001B08  90D8               	bcf	status,0,c
 16119  001B0A  3760               	rlcf	___fladd@b& (0+255),f,b
 16120  001B0C  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16121  001B0E  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16122  001B10  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16123                           
 16124                           ; BSR set to: 0
 16125  001B12  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16126                           
 16127                           ; BSR set to: 0
 16128  001B14  8160               	bsf	___fladd@b& (0+255),0,b
 16129                           
 16130                           ; BSR set to: 0
 16131                           
 16132                           ; BSR set to: 0
 16133  001B16  A173               	btfss	___fladd@grs& (0+255),0,b
 16134  001B18  D002               	goto	l2711
 16135                           
 16136                           ; BSR set to: 0
 16137  001B1A  80D8               	bsf	status,0,c
 16138  001B1C  D001               	goto	L12
 16139  001B1E                     l2711:
 16140                           
 16141                           ; BSR set to: 0
 16142                           
 16143                           ; BSR set to: 0
 16144  001B1E  90D8               	bcf	status,0,c
 16145  001B20                     L12:
 16146  001B20  3773               	rlcf	___fladd@grs& (0+255),f,b
 16147                           
 16148                           ; BSR set to: 0
 16149                           
 16150                           ; BSR set to: 0
 16151  001B22  5172               	movf	___fladd@bexp& (0+255),w,b
 16152  001B24  A4D8               	btfss	status,2,c
 16153                           
 16154                           ; BSR set to: 0
 16155  001B26  0772               	decf	___fladd@bexp& (0+255),f,b
 16156  001B28                     l2713:
 16157                           
 16158                           ; BSR set to: 0
 16159                           
 16160                           ; BSR set to: 0
 16161                           
 16162                           ; BSR set to: 0
 16163  001B28  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16164  001B2A  D7EE               	goto	l2709
 16165  001B2C                     u6930:
 16166                           
 16167                           ; BSR set to: 0
 16168                           
 16169                           ; BSR set to: 0
 16170                           
 16171                           ; BSR set to: 0
 16172  001B2C  0E00               	movlw	0
 16173  001B2E  6F71               	movwf	___fladd@aexp& (0+255),b
 16174                           
 16175                           ; BSR set to: 0
 16176  001B30  AF73               	btfss	___fladd@grs& (0+255),7,b
 16177  001B32  D00A               	goto	l2718
 16178                           
 16179                           ; BSR set to: 0
 16180  001B34  C073  F068         	movff	___fladd@grs,??___fladd
 16181  001B38  0E7F               	movlw	127
 16182  001B3A  1768               	andwf	??___fladd& (0+255),f,b
 16183  001B3C  A4D8               	btfss	status,2,c
 16184  001B3E  D002               	goto	u6960
 16185                           
 16186                           ; BSR set to: 0
 16187                           
 16188                           ; BSR set to: 0
 16189  001B40  A160               	btfss	___fladd@b& (0+255),0,b
 16190  001B42  D002               	goto	l2718
 16191  001B44                     u6960:
 16192                           
 16193                           ; BSR set to: 0
 16194  001B44  0E01               	movlw	1
 16195  001B46  6F71               	movwf	___fladd@aexp& (0+255),b
 16196  001B48                     l2718:
 16197                           
 16198                           ; BSR set to: 0
 16199                           
 16200                           ; BSR set to: 0
 16201                           
 16202                           ; BSR set to: 0
 16203  001B48  5171               	movf	___fladd@aexp& (0+255),w,b
 16204  001B4A  B4D8               	btfsc	status,2,c
 16205  001B4C  D020               	goto	l2721
 16206                           
 16207                           ; BSR set to: 0
 16208  001B4E  0E01               	movlw	1
 16209  001B50  2760               	addwf	___fladd@b& (0+255),f,b
 16210  001B52  0E00               	movlw	0
 16211  001B54  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16212  001B56  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16213  001B58  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16214                           
 16215                           ; BSR set to: 0
 16216  001B5A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16217  001B5C  D018               	goto	l2721
 16218                           
 16219                           ; BSR set to: 0
 16220  001B5E  C060  F068         	movff	___fladd@b,??___fladd
 16221  001B62  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16222  001B66  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16223  001B6A  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16224  001B6E  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16225  001B70  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16226  001B72  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16227  001B74  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16228  001B76  3368               	rrcf	??___fladd& (0+255),f,b
 16229  001B78  C068  F060         	movff	??___fladd,___fladd@b
 16230  001B7C  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16231  001B80  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16232  001B84  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16233  001B88  2972               	incf	___fladd@bexp& (0+255),w,b
 16234  001B8A  A4D8               	btfss	status,2,c
 16235                           
 16236                           ; BSR set to: 0
 16237  001B8C  2B72               	incf	___fladd@bexp& (0+255),f,b
 16238  001B8E                     l2721:
 16239                           
 16240                           ; BSR set to: 0
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245                           
 16246                           ; BSR set to: 0
 16247  001B8E  2972               	incf	___fladd@bexp& (0+255),w,b
 16248  001B90  B4D8               	btfsc	status,2,c
 16249  001B92  D003               	goto	u7010
 16250                           
 16251                           ; BSR set to: 0
 16252  001B94  5172               	movf	___fladd@bexp& (0+255),w,b
 16253  001B96  A4D8               	btfss	status,2,c
 16254  001B98  D00D               	goto	l2725
 16255  001B9A                     u7010:
 16256                           
 16257                           ; BSR set to: 0
 16258                           
 16259                           ; BSR set to: 0
 16260  001B9A  0E00               	movlw	0
 16261  001B9C  6F60               	movwf	___fladd@b& (0+255),b
 16262  001B9E  0E00               	movlw	0
 16263  001BA0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16264  001BA2  0E00               	movlw	0
 16265  001BA4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16266  001BA6  0E00               	movlw	0
 16267  001BA8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16268  001BAA  5172               	movf	___fladd@bexp& (0+255),w,b
 16269  001BAC  A4D8               	btfss	status,2,c
 16270  001BAE  D002               	goto	l2725
 16271                           
 16272                           ; BSR set to: 0
 16273  001BB0  0E00               	movlw	0
 16274  001BB2  6F70               	movwf	___fladd@signs& (0+255),b
 16275  001BB4                     l2725:
 16276                           
 16277                           ; BSR set to: 0
 16278                           
 16279                           ; BSR set to: 0
 16280                           
 16281                           ; BSR set to: 0
 16282  001BB4  A172               	btfss	___fladd@bexp& (0+255),0,b
 16283  001BB6  D002               	goto	l2726
 16284                           
 16285                           ; BSR set to: 0
 16286  001BB8  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16287  001BBA  D001               	goto	l2727
 16288  001BBC                     l2726:
 16289                           
 16290                           ; BSR set to: 0
 16291                           
 16292                           ; BSR set to: 0
 16293  001BBC  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16294  001BBE                     l2727:
 16295                           
 16296                           ; BSR set to: 0
 16297                           
 16298                           ; BSR set to: 0
 16299  001BBE  90D8               	bcf	status,0,c
 16300  001BC0  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16301  001BC2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16302                           
 16303                           ; BSR set to: 0
 16304  001BC4  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16305                           
 16306                           ; BSR set to: 0
 16307  001BC6  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16308                           
 16309                           ; BSR set to: 0
 16310                           
 16311                           ; BSR set to: 0
 16312  001BC8  C060  F060         	movff	___fladd@b,?___fladd
 16313  001BCC  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16314  001BD0  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16315  001BD4  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16316  001BD8  0012               	return	
 16317  001BDA                     __end_of___fladd:
 16318                           	opt stack 0
 16319                           tblptru	equ	0xFF8
 16320                           tblptrh	equ	0xFF7
 16321                           tblptrl	equ	0xFF6
 16322                           tablat	equ	0xFF5
 16323                           prodh	equ	0xFF4
 16324                           prodl	equ	0xFF3
 16325                           intcon	equ	0xFF2
 16326                           intcon3	equ	0xFF0
 16327                           postinc0	equ	0xFEE
 16328                           wreg	equ	0xFE8
 16329                           indf1	equ	0xFE7
 16330                           postdec1	equ	0xFE5
 16331                           fsr1h	equ	0xFE2
 16332                           fsr1l	equ	0xFE1
 16333                           indf2	equ	0xFDF
 16334                           fsr2h	equ	0xFDA
 16335                           fsr2l	equ	0xFD9
 16336                           status	equ	0xFD8
 16337                           
 16338 ;; *************** function _moteJoiningProcess *****************
 16339 ;; Defined at:
 16340 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;  messageReady    1    wreg     unsigned char 
 16343 ;;  changeStates    1   23[BANK0 ] unsigned char 
 16344 ;;  selectButton    1   24[BANK0 ] unsigned char 
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;  messageReady    1   28[BANK0 ] unsigned char 
 16347 ;;  readDataRate    1   26[BANK0 ] unsigned char 
 16348 ;;  joiningCompl    1   27[BANK0 ] unsigned char 
 16349 ;; Return value:  Size  Location     Type
 16350 ;;                  1    wreg      enum E6152
 16351 ;; Registers used:
 16352 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16353 ;; Tracked objects:
 16354 ;;		On entry : 0/0
 16355 ;;		On exit  : 0/0
 16356 ;;		Unchanged: 0/0
 16357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16358 ;;      Params:         0       2       0       0       0       0       0       0       0
 16359 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16360 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16361 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16362 ;;Total ram usage:        6 bytes
 16363 ;; Hardware stack levels used:    1
 16364 ;; Hardware stack levels required when called:   16
 16365 ;; This function calls:
 16366 ;;		_DATAEE_WriteByte
 16367 ;;		_moteApp_delayms
 16368 ;;		_oled_clear
 16369 ;;		_oled_putString
 16370 ;;		_sendCommand
 16371 ;;		_strcmp
 16372 ;;		_strncmp
 16373 ;; This function is called by:
 16374 ;;		_moteHandler
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text51
 16379  001024                     __ptext51:
 16380                           	opt stack 0
 16381  001024                     _moteJoiningProcess:
 16382                           	opt stack 13
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;incstack = 0
 16386                           ;moteJoiningProcess@messageReady stored from wreg
 16387  001024  0100               	movlb	0	; () banked
 16388  001026  6F7C               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16389                           
 16390                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 16391  001028  0E00               	movlw	0
 16392  00102A  0100               	movlb	0	; () banked
 16393  00102C  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16394                           
 16395                           ;MOTEapp.c: 297: switch (activeState)
 16396  00102E  D266               	goto	l390
 16397  001030                     
 16398                           ; BSR set to: 0
 16399                           ;MOTEapp.c: 300: while(1);
 16400  001030  D7FF               	goto	l391
 16401  001032                     
 16402                           ;MOTEapp.c: 303: sendCommand("sys reset");
 16403  001032  0EFC               	movlw	low STR_30
 16404  001034  0100               	movlb	0	; () banked
 16405  001036  6F61               	movwf	sendCommand@string& (0+255),b
 16406  001038  0E7E               	movlw	high STR_30
 16407  00103A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16408  00103C  EC0F  F02A         	call	_sendCommand	;wreg free
 16409  001040  D13A               	goto	l10286
 16410  001042                     
 16411                           ; BSR set to: 0
 16412                           ;MOTEapp.c: 307: if (selectButton)
 16413                           
 16414                           ; BSR set to: 0
 16415  001042  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16416  001044  B4D8               	btfsc	status,2,c
 16417  001046  D002               	goto	l398
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;MOTEapp.c: 308: {
 16421                           ;MOTEapp.c: 309: activeState = moteComFailure;
 16422  001048  0E0A               	movlw	10
 16423  00104A  6FF4               	movwf	_activeState& (0+255),b
 16424  00104C                     l398:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;MOTEapp.c: 310: }
 16428                           ;MOTEapp.c: 311: if ( messageReady )
 16429  00104C  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16430  00104E  B4D8               	btfsc	status,2,c
 16431  001050  D279               	goto	l395
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;MOTEapp.c: 312: {
 16435                           ;MOTEapp.c: 313: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16436  001052  0E65               	movlw	low _moduleResonseBuffer
 16437  001054  6F60               	movwf	strncmp@s1& (0+255),b
 16438  001056  0E01               	movlw	high _moduleResonseBuffer
 16439  001058  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16440  00105A  0EB8               	movlw	low STR_31
 16441  00105C  6F62               	movwf	strncmp@s2& (0+255),b
 16442  00105E  0E7F               	movlw	high STR_31
 16443  001060  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16444  001062  0E00               	movlw	0
 16445  001064  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16446  001066  0E04               	movlw	4
 16447  001068  6F64               	movwf	strncmp@len& (0+255),b
 16448  00106A  ECC5  F022         	call	_strncmp	;wreg free
 16449  00106E  0100               	movlb	0	; () banked
 16450  001070  5160               	movf	?_strncmp& (0+255),w,b
 16451  001072  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16452  001074  A4D8               	btfss	status,2,c
 16453  001076  D029               	goto	l400
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;MOTEapp.c: 314: {
 16457                           ;MOTEapp.c: 315: rnModule = rn2483;
 16458  001078  0E00               	movlw	0
 16459  00107A  6FEE               	movwf	_rnModule& (0+255),b
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;MOTEapp.c: 316: oled_clear();
 16463  00107C  ECAD  F02B         	call	_oled_clear	;wreg free
 16464                           
 16465                           ;MOTEapp.c: 317: oled_putString(" Joining Method ",0,0);
 16466  001080  0E43               	movlw	low STR_32
 16467  001082  0100               	movlb	0	; () banked
 16468  001084  6F72               	movwf	oled_putString@string& (0+255),b
 16469  001086  0E7B               	movlw	high STR_32
 16470  001088  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16471  00108A  0E00               	movlw	0
 16472  00108C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16473  00108E  0E00               	movlw	0
 16474  001090  6F75               	movwf	oled_putString@start_page& (0+255),b
 16475  001092  EC73  F025         	call	_oled_putString	;wreg free
 16476                           
 16477                           ;MOTEapp.c: 318: oled_putString("<- ABP   OTAA ->", 0,2);
 16478  001096  0E98               	movlw	low STR_33
 16479  001098  0100               	movlb	0	; () banked
 16480  00109A  6F72               	movwf	oled_putString@string& (0+255),b
 16481  00109C  0E7B               	movlw	high STR_33
 16482  00109E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16483  0010A0  0E00               	movlw	0
 16484  0010A2  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16485  0010A4  0E02               	movlw	2
 16486  0010A6  6F75               	movwf	oled_putString@start_page& (0+255),b
 16487  0010A8  EC73  F025         	call	_oled_putString	;wreg free
 16488                           
 16489                           ;MOTEapp.c: 319: oled_putString("  (S2)   (S3)   ", 0,3);
 16490  0010AC  0EEE               	movlw	low STR_34
 16491  0010AE  0100               	movlb	0	; () banked
 16492  0010B0  6F72               	movwf	oled_putString@string& (0+255),b
 16493  0010B2  0E7A               	movlw	high STR_34
 16494  0010B4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16495  0010B6  0E00               	movlw	0
 16496  0010B8  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16497  0010BA  0E03               	movlw	3
 16498  0010BC  6F75               	movwf	oled_putString@start_page& (0+255),b
 16499  0010BE  EC73  F025         	call	_oled_putString	;wreg free
 16500  0010C2  D03B               	goto	l10224
 16501  0010C4                     L13:
 16502  0010C4  0100               	movlb	0	; () banked
 16503  0010C6                     L14:
 16504  0010C6  6FF4               	movwf	_activeState& (0+255),b
 16505                           
 16506                           ;MOTEapp.c: 321: }
 16507  0010C8  D23D               	goto	l395
 16508  0010CA                     l400:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;MOTEapp.c: 322: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16512                           
 16513                           ; BSR set to: 0
 16514  0010CA  0E65               	movlw	low _moduleResonseBuffer
 16515  0010CC  6F60               	movwf	strncmp@s1& (0+255),b
 16516  0010CE  0E01               	movlw	high _moduleResonseBuffer
 16517  0010D0  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16518  0010D2  0EBD               	movlw	low STR_35
 16519  0010D4  6F62               	movwf	strncmp@s2& (0+255),b
 16520  0010D6  0E7F               	movlw	high STR_35
 16521  0010D8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16522  0010DA  0E00               	movlw	0
 16523  0010DC  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16524  0010DE  0E04               	movlw	4
 16525  0010E0  6F64               	movwf	strncmp@len& (0+255),b
 16526  0010E2  ECC5  F022         	call	_strncmp	;wreg free
 16527  0010E6  0100               	movlb	0	; () banked
 16528  0010E8  5160               	movf	?_strncmp& (0+255),w,b
 16529  0010EA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16530  0010EC  A4D8               	btfss	status,2,c
 16531  0010EE  D027               	goto	l402
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;MOTEapp.c: 323: {
 16535                           ;MOTEapp.c: 324: rnModule = rn2903;
 16536  0010F0  0E01               	movlw	1
 16537  0010F2  6FEE               	movwf	_rnModule& (0+255),b
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;MOTEapp.c: 325: oled_clear();
 16541  0010F4  ECAD  F02B         	call	_oled_clear	;wreg free
 16542                           
 16543                           ;MOTEapp.c: 326: oled_putString(" Joining Method ",0,0);
 16544  0010F8  0E43               	movlw	low STR_32
 16545  0010FA  0100               	movlb	0	; () banked
 16546  0010FC  6F72               	movwf	oled_putString@string& (0+255),b
 16547  0010FE  0E7B               	movlw	high STR_32
 16548  001100  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16549  001102  0E00               	movlw	0
 16550  001104  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16551  001106  0E00               	movlw	0
 16552  001108  6F75               	movwf	oled_putString@start_page& (0+255),b
 16553  00110A  EC73  F025         	call	_oled_putString	;wreg free
 16554                           
 16555                           ;MOTEapp.c: 327: oled_putString("<- ABP   OTAA ->", 0,2);
 16556  00110E  0E98               	movlw	low STR_33
 16557  001110  0100               	movlb	0	; () banked
 16558  001112  6F72               	movwf	oled_putString@string& (0+255),b
 16559  001114  0E7B               	movlw	high STR_33
 16560  001116  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16561  001118  0E00               	movlw	0
 16562  00111A  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16563  00111C  0E02               	movlw	2
 16564  00111E  6F75               	movwf	oled_putString@start_page& (0+255),b
 16565  001120  EC73  F025         	call	_oled_putString	;wreg free
 16566                           
 16567                           ;MOTEapp.c: 328: oled_putString("  (S2)   (S3)   ", 0,3);
 16568  001124  0EEE               	movlw	low STR_34
 16569  001126  0100               	movlb	0	; () banked
 16570  001128  6F72               	movwf	oled_putString@string& (0+255),b
 16571  00112A  0E7A               	movlw	high STR_34
 16572  00112C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16573  00112E  0E00               	movlw	0
 16574  001130  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16575  001132  0E03               	movlw	3
 16576  001134  6F75               	movwf	oled_putString@start_page& (0+255),b
 16577  001136  EC73  F025         	call	_oled_putString	;wreg free
 16578  00113A                     l10224:
 16579                           
 16580                           ;MOTEapp.c: 329: activeState = moteJoinMethod;
 16581  00113A  0E02               	movlw	2
 16582  00113C  D7C3               	goto	L13
 16583  00113E                     l402:
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;MOTEapp.c: 331: else
 16587                           ;MOTEapp.c: 332: {
 16588                           ;MOTEapp.c: 333: sendCommand("sys reset");
 16589                           
 16590                           ; BSR set to: 0
 16591  00113E  0EFC               	movlw	low STR_30
 16592  001140  6F61               	movwf	sendCommand@string& (0+255),b
 16593  001142  0E7E               	movlw	high STR_30
 16594  001144  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16595  001146  EC0F  F02A         	call	_sendCommand	;wreg free
 16596                           
 16597                           ;MOTEapp.c: 334: moteApp_delayms(25);
 16598  00114A  0E00               	movlw	0
 16599  00114C  0100               	movlb	0	; () banked
 16600  00114E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16601  001150  0E19               	movlw	25
 16602  001152  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16603  001154  ECAC  F029         	call	_moteApp_delayms	;wreg free
 16604                           
 16605                           ;MOTEapp.c: 335: activeState = moteStartup;
 16606  001158  0E00               	movlw	0
 16607  00115A  D7B4               	goto	L13
 16608  00115C                     
 16609                           ; BSR set to: 0
 16610                           ;MOTEapp.c: 340: if (changeStates)
 16611                           
 16612                           ; BSR set to: 0
 16613  00115C  5177               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16614  00115E  B4D8               	btfsc	status,2,c
 16615  001160  D019               	goto	l405
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;MOTEapp.c: 341: {
 16619                           ;MOTEapp.c: 342: oled_putString("  (S2)          ", 0,3);
 16620  001162  0EBB               	movlw	low STR_40
 16621  001164  6F72               	movwf	oled_putString@string& (0+255),b
 16622  001166  0E7A               	movlw	high STR_40
 16623  001168  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16624  00116A  0E00               	movlw	0
 16625  00116C  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16626  00116E  0E03               	movlw	3
 16627  001170  6F75               	movwf	oled_putString@start_page& (0+255),b
 16628  001172  EC73  F025         	call	_oled_putString	;wreg free
 16629                           
 16630                           ;MOTEapp.c: 343: moteApp_delayms(500);
 16631  001176  0E01               	movlw	1
 16632  001178  0100               	movlb	0	; () banked
 16633  00117A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16634  00117C  0EF4               	movlw	244
 16635  00117E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16636  001180  ECAC  F029         	call	_moteApp_delayms	;wreg free
 16637                           
 16638                           ;MOTEapp.c: 344: sendCommand("mac join abp");
 16639  001184  0EE7               	movlw	low STR_41
 16640  001186  0100               	movlb	0	; () banked
 16641  001188  6F61               	movwf	sendCommand@string& (0+255),b
 16642  00118A  0E7D               	movlw	high STR_41
 16643  00118C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16644  00118E  EC0F  F02A         	call	_sendCommand	;wreg free
 16645  001192  D05E               	goto	l10270
 16646  001194                     l405:
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;MOTEapp.c: 347: else if (selectButton)
 16650                           
 16651                           ; BSR set to: 0
 16652  001194  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16653  001196  B4D8               	btfsc	status,2,c
 16654  001198  D1D5               	goto	l395
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;MOTEapp.c: 348: {
 16658                           ;MOTEapp.c: 349: oled_putString("         (S3)   ", 0,3);
 16659  00119A  0EDD               	movlw	low STR_42
 16660  00119C  6F72               	movwf	oled_putString@string& (0+255),b
 16661  00119E  0E7A               	movlw	high STR_42
 16662  0011A0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16663  0011A2  0E00               	movlw	0
 16664  0011A4  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16665  0011A6  0E03               	movlw	3
 16666  0011A8  6F75               	movwf	oled_putString@start_page& (0+255),b
 16667  0011AA  EC73  F025         	call	_oled_putString	;wreg free
 16668                           
 16669                           ;MOTEapp.c: 350: moteApp_delayms(500);
 16670  0011AE  0E01               	movlw	1
 16671  0011B0  0100               	movlb	0	; () banked
 16672  0011B2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16673  0011B4  0EF4               	movlw	244
 16674  0011B6  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16675  0011B8  ECAC  F029         	call	_moteApp_delayms	;wreg free
 16676                           
 16677                           ;MOTEapp.c: 351: sendCommand("mac join otaa");
 16678  0011BC  0E3B               	movlw	low STR_43
 16679  0011BE  0100               	movlb	0	; () banked
 16680  0011C0  6F61               	movwf	sendCommand@string& (0+255),b
 16681  0011C2  0E7D               	movlw	high STR_43
 16682  0011C4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16683  0011C6  EC0F  F02A         	call	_sendCommand	;wreg free
 16684  0011CA  D12F               	goto	l10336
 16685  0011CC                     
 16686                           ; BSR set to: 0
 16687                           ;MOTEapp.c: 356: if ( messageReady )
 16688                           
 16689                           ; BSR set to: 0
 16690  0011CC  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16691  0011CE  B4D8               	btfsc	status,2,c
 16692  0011D0  D1B9               	goto	l395
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;MOTEapp.c: 357: {
 16696                           ;MOTEapp.c: 358: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16697  0011D2  0E65               	movlw	low _moduleResonseBuffer
 16698  0011D4  6F60               	movwf	strcmp@s1& (0+255),b
 16699  0011D6  0E01               	movlw	high _moduleResonseBuffer
 16700  0011D8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16701  0011DA  0EF7               	movlw	low STR_44
 16702  0011DC  6F62               	movwf	strcmp@s2& (0+255),b
 16703  0011DE  0E7F               	movlw	high STR_44
 16704  0011E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16705  0011E2  ECDC  F027         	call	_strcmp	;wreg free
 16706  0011E6  0100               	movlb	0	; () banked
 16707  0011E8  5160               	movf	?_strcmp& (0+255),w,b
 16708  0011EA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16709  0011EC  A4D8               	btfss	status,2,c
 16710  0011EE  D002               	goto	l410
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;MOTEapp.c: 359: {
 16714                           ;MOTEapp.c: 360: activeState = moteWaitAbp;
 16715  0011F0  0E04               	movlw	4
 16716  0011F2  D769               	goto	L14
 16717  0011F4                     l410:
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;MOTEapp.c: 362: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16721                           
 16722                           ; BSR set to: 0
 16723  0011F4  0E65               	movlw	low _moduleResonseBuffer
 16724  0011F6  6F60               	movwf	strcmp@s1& (0+255),b
 16725  0011F8  0E01               	movlw	high _moduleResonseBuffer
 16726  0011FA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16727  0011FC  0E57               	movlw	low STR_45
 16728  0011FE  6F62               	movwf	strcmp@s2& (0+255),b
 16729  001200  0E7D               	movlw	high STR_45
 16730  001202  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16731  001204  ECDC  F027         	call	_strcmp	;wreg free
 16732  001208  0100               	movlb	0	; () banked
 16733  00120A  5160               	movf	?_strcmp& (0+255),w,b
 16734  00120C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16735  00120E  A4D8               	btfss	status,2,c
 16736  001210  D019               	goto	l412
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;MOTEapp.c: 363: {
 16740                           ;MOTEapp.c: 364: oled_clear();
 16741  001212  ECAD  F02B         	call	_oled_clear	;wreg free
 16742                           
 16743                           ;MOTEapp.c: 365: oled_putString("Valid Keys",0,0);
 16744  001216  0EB4               	movlw	low STR_46
 16745  001218  0100               	movlb	0	; () banked
 16746  00121A  6F72               	movwf	oled_putString@string& (0+255),b
 16747  00121C  0E7E               	movlw	high STR_46
 16748  00121E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16749  001220  0E00               	movlw	0
 16750  001222  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16751  001224  0E00               	movlw	0
 16752  001226  6F75               	movwf	oled_putString@start_page& (0+255),b
 16753  001228  EC73  F025         	call	_oled_putString	;wreg free
 16754                           
 16755                           ;MOTEapp.c: 366: oled_putString("Required",0,1);
 16756  00122C  0E19               	movlw	low STR_47
 16757  00122E  0100               	movlb	0	; () banked
 16758  001230  6F72               	movwf	oled_putString@string& (0+255),b
 16759  001232  0E7F               	movlw	high STR_47
 16760  001234  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16761  001236  0E00               	movlw	0
 16762  001238  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16763  00123A  0E01               	movlw	1
 16764  00123C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16765  00123E  EC73  F025         	call	_oled_putString	;wreg free
 16766  001242  D076               	goto	l10302
 16767  001244                     l412:
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;MOTEapp.c: 369: else
 16771                           ;MOTEapp.c: 370: {
 16772                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 16773                           
 16774                           ; BSR set to: 0
 16775  001244  0EE7               	movlw	low STR_41
 16776  001246  6F61               	movwf	sendCommand@string& (0+255),b
 16777  001248  0E7D               	movlw	high STR_41
 16778  00124A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16779  00124C  EC0F  F02A         	call	_sendCommand	;wreg free
 16780  001250                     l10270:
 16781                           
 16782                           ;MOTEapp.c: 372: activeState = moteCheckAbp;
 16783  001250  0E03               	movlw	3
 16784  001252  D738               	goto	L13
 16785  001254                     
 16786                           ; BSR set to: 0
 16787                           ;MOTEapp.c: 377: if ( messageReady )
 16788                           
 16789                           ; BSR set to: 0
 16790  001254  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16791  001256  B4D8               	btfsc	status,2,c
 16792  001258  D175               	goto	l395
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;MOTEapp.c: 378: {
 16796                           ;MOTEapp.c: 379: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 16797  00125A  0E65               	movlw	low _moduleResonseBuffer
 16798  00125C  6F60               	movwf	strcmp@s1& (0+255),b
 16799  00125E  0E01               	movlw	high _moduleResonseBuffer
 16800  001260  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16801  001262  0E22               	movlw	low STR_49
 16802  001264  6F62               	movwf	strcmp@s2& (0+255),b
 16803  001266  0E7F               	movlw	high STR_49
 16804  001268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16805  00126A  ECDC  F027         	call	_strcmp	;wreg free
 16806  00126E  0100               	movlb	0	; () banked
 16807  001270  5160               	movf	?_strcmp& (0+255),w,b
 16808  001272  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16809  001274  A4D8               	btfss	status,2,c
 16810  001276  D019               	goto	l416
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;MOTEapp.c: 380: {
 16814                           ;MOTEapp.c: 381: oled_clear();
 16815  001278  ECAD  F02B         	call	_oled_clear	;wreg free
 16816                           
 16817                           ;MOTEapp.c: 382: oled_putString("ABP Join ",0,0);
 16818  00127C  0ED4               	movlw	low STR_50
 16819  00127E  0100               	movlb	0	; () banked
 16820  001280  6F72               	movwf	oled_putString@string& (0+255),b
 16821  001282  0E7E               	movlw	high STR_50
 16822  001284  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16823  001286  0E00               	movlw	0
 16824  001288  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16825  00128A  0E00               	movlw	0
 16826  00128C  6F75               	movwf	oled_putString@start_page& (0+255),b
 16827  00128E  EC73  F025         	call	_oled_putString	;wreg free
 16828                           
 16829                           ;MOTEapp.c: 383: oled_putString("Successful",0,1);
 16830  001292  0E9E               	movlw	low STR_51
 16831  001294  0100               	movlb	0	; () banked
 16832  001296  6F72               	movwf	oled_putString@string& (0+255),b
 16833  001298  0E7E               	movlw	high STR_51
 16834  00129A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16835  00129C  0E00               	movlw	0
 16836  00129E  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16837  0012A0  0E01               	movlw	1
 16838  0012A2  6F75               	movwf	oled_putString@start_page& (0+255),b
 16839  0012A4  EC73  F025         	call	_oled_putString	;wreg free
 16840  0012A8  D090               	goto	l10324
 16841  0012AA                     l416:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;MOTEapp.c: 386: else
 16845                           ;MOTEapp.c: 387: {
 16846                           ;MOTEapp.c: 388: sendCommand("mac reset");
 16847                           
 16848                           ; BSR set to: 0
 16849  0012AA  0EF2               	movlw	low STR_52
 16850  0012AC  6F61               	movwf	sendCommand@string& (0+255),b
 16851  0012AE  0E7E               	movlw	high STR_52
 16852  0012B0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16853  0012B2  EC0F  F02A         	call	_sendCommand	;wreg free
 16854  0012B6                     l10286:
 16855                           
 16856                           ;MOTEapp.c: 389: activeState = moteReset;
 16857  0012B6  0E01               	movlw	1
 16858  0012B8  D705               	goto	L13
 16859  0012BA                     
 16860                           ; BSR set to: 0
 16861                           ;MOTEapp.c: 395: if ( messageReady )
 16862                           
 16863                           ; BSR set to: 0
 16864  0012BA  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16865  0012BC  B4D8               	btfsc	status,2,c
 16866  0012BE  D142               	goto	l395
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;MOTEapp.c: 396: {
 16870                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16871  0012C0  0E65               	movlw	low _moduleResonseBuffer
 16872  0012C2  6F60               	movwf	strcmp@s1& (0+255),b
 16873  0012C4  0E01               	movlw	high _moduleResonseBuffer
 16874  0012C6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16875  0012C8  0EF7               	movlw	low STR_44
 16876  0012CA  6F62               	movwf	strcmp@s2& (0+255),b
 16877  0012CC  0E7F               	movlw	high STR_44
 16878  0012CE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16879  0012D0  ECDC  F027         	call	_strcmp	;wreg free
 16880  0012D4  0100               	movlb	0	; () banked
 16881  0012D6  5160               	movf	?_strcmp& (0+255),w,b
 16882  0012D8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16883  0012DA  A4D8               	btfss	status,2,c
 16884  0012DC  D002               	goto	l420
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;MOTEapp.c: 398: {
 16888                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 16889  0012DE  0E06               	movlw	6
 16890  0012E0  D6F2               	goto	L14
 16891  0012E2                     l420:
 16892                           
 16893                           ; BSR set to: 0
 16894                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16895                           
 16896                           ; BSR set to: 0
 16897  0012E2  0E65               	movlw	low _moduleResonseBuffer
 16898  0012E4  6F60               	movwf	strcmp@s1& (0+255),b
 16899  0012E6  0E01               	movlw	high _moduleResonseBuffer
 16900  0012E8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16901  0012EA  0E57               	movlw	low STR_45
 16902  0012EC  6F62               	movwf	strcmp@s2& (0+255),b
 16903  0012EE  0E7D               	movlw	high STR_45
 16904  0012F0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16905  0012F2  ECDC  F027         	call	_strcmp	;wreg free
 16906  0012F6  0100               	movlb	0	; () banked
 16907  0012F8  5160               	movf	?_strcmp& (0+255),w,b
 16908  0012FA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16909  0012FC  A4D8               	btfss	status,2,c
 16910  0012FE  D01A               	goto	l422
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;MOTEapp.c: 402: {
 16914                           ;MOTEapp.c: 403: oled_clear();
 16915  001300  ECAD  F02B         	call	_oled_clear	;wreg free
 16916                           
 16917                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 16918  001304  0EB4               	movlw	low STR_46
 16919  001306  0100               	movlb	0	; () banked
 16920  001308  6F72               	movwf	oled_putString@string& (0+255),b
 16921  00130A  0E7E               	movlw	high STR_46
 16922  00130C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16923  00130E  0E00               	movlw	0
 16924  001310  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16925  001312  0E00               	movlw	0
 16926  001314  6F75               	movwf	oled_putString@start_page& (0+255),b
 16927  001316  EC73  F025         	call	_oled_putString	;wreg free
 16928                           
 16929                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 16930  00131A  0E19               	movlw	low STR_47
 16931  00131C  0100               	movlb	0	; () banked
 16932  00131E  6F72               	movwf	oled_putString@string& (0+255),b
 16933  001320  0E7F               	movlw	high STR_47
 16934  001322  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16935  001324  0E00               	movlw	0
 16936  001326  6F74               	movwf	oled_putString@station_dot& (0+255),b
 16937  001328  0E01               	movlw	1
 16938  00132A  6F75               	movwf	oled_putString@start_page& (0+255),b
 16939  00132C  EC73  F025         	call	_oled_putString	;wreg free
 16940  001330                     l10302:
 16941                           
 16942                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 16943  001330  0E09               	movlw	9
 16944  001332  D6C8               	goto	L13
 16945  001334                     l422:
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 16949                           
 16950                           ; BSR set to: 0
 16951  001334  0E65               	movlw	low _moduleResonseBuffer
 16952  001336  6F60               	movwf	strcmp@s1& (0+255),b
 16953  001338  0E01               	movlw	high _moduleResonseBuffer
 16954  00133A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16955  00133C  0E49               	movlw	low STR_57
 16956  00133E  6F62               	movwf	strcmp@s2& (0+255),b
 16957  001340  0E7D               	movlw	high STR_57
 16958  001342  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16959  001344  ECDC  F027         	call	_strcmp	;wreg free
 16960  001348  0100               	movlb	0	; () banked
 16961  00134A  5160               	movf	?_strcmp& (0+255),w,b
 16962  00134C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16963  00134E  A4D8               	btfss	status,2,c
 16964  001350  D007               	goto	l424
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;MOTEapp.c: 409: {
 16968                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 16969  001352  0E3B               	movlw	low STR_43
 16970  001354  6F61               	movwf	sendCommand@string& (0+255),b
 16971  001356  0E7D               	movlw	high STR_43
 16972  001358  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16973  00135A  EC0F  F02A         	call	_sendCommand	;wreg free
 16974  00135E  D065               	goto	l10336
 16975  001360                     l424:
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 16979                           
 16980                           ; BSR set to: 0
 16981  001360  0E65               	movlw	low _moduleResonseBuffer
 16982  001362  6F60               	movwf	strcmp@s1& (0+255),b
 16983  001364  0E01               	movlw	high _moduleResonseBuffer
 16984  001366  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16985  001368  0E93               	movlw	low STR_59
 16986  00136A  6F62               	movwf	strcmp@s2& (0+255),b
 16987  00136C  0E7E               	movlw	high STR_59
 16988  00136E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16989  001370  ECDC  F027         	call	_strcmp	;wreg free
 16990  001374  D066               	goto	L15
 16991  001376                     
 16992                           ; BSR set to: 0
 16993                           ;MOTEapp.c: 420: if ( messageReady )
 16994                           
 16995                           ; BSR set to: 0
 16996  001376  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16997  001378  B4D8               	btfsc	status,2,c
 16998  00137A  D0E4               	goto	l395
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;MOTEapp.c: 421: {
 17002                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17003  00137C  0E65               	movlw	low _moduleResonseBuffer
 17004  00137E  6F60               	movwf	strcmp@s1& (0+255),b
 17005  001380  0E01               	movlw	high _moduleResonseBuffer
 17006  001382  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17007  001384  0E22               	movlw	low STR_49
 17008  001386  6F62               	movwf	strcmp@s2& (0+255),b
 17009  001388  0E7F               	movlw	high STR_49
 17010  00138A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17011  00138C  ECDC  F027         	call	_strcmp	;wreg free
 17012  001390  0100               	movlb	0	; () banked
 17013  001392  5160               	movf	?_strcmp& (0+255),w,b
 17014  001394  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17015  001396  A4D8               	btfss	status,2,c
 17016  001398  D01A               	goto	l429
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;MOTEapp.c: 423: {
 17020                           ;MOTEapp.c: 424: oled_clear();
 17021  00139A  ECAD  F02B         	call	_oled_clear	;wreg free
 17022                           
 17023                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 17024  00139E  0E88               	movlw	low STR_61
 17025  0013A0  0100               	movlb	0	; () banked
 17026  0013A2  6F72               	movwf	oled_putString@string& (0+255),b
 17027  0013A4  0E7E               	movlw	high STR_61
 17028  0013A6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17029  0013A8  0E00               	movlw	0
 17030  0013AA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17031  0013AC  0E00               	movlw	0
 17032  0013AE  6F75               	movwf	oled_putString@start_page& (0+255),b
 17033  0013B0  EC73  F025         	call	_oled_putString	;wreg free
 17034                           
 17035                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 17036  0013B4  0E9E               	movlw	low STR_51
 17037  0013B6  0100               	movlb	0	; () banked
 17038  0013B8  6F72               	movwf	oled_putString@string& (0+255),b
 17039  0013BA  0E7E               	movlw	high STR_51
 17040  0013BC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17041  0013BE  0E00               	movlw	0
 17042  0013C0  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17043  0013C2  0E01               	movlw	1
 17044  0013C4  6F75               	movwf	oled_putString@start_page& (0+255),b
 17045  0013C6  EC73  F025         	call	_oled_putString	;wreg free
 17046  0013CA                     l10324:
 17047                           
 17048                           ;MOTEapp.c: 427: activeState = moteJoined;
 17049  0013CA  0E07               	movlw	7
 17050  0013CC  D67B               	goto	L13
 17051  0013CE                     l429:
 17052                           
 17053                           ; BSR set to: 0
 17054                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17055                           
 17056                           ; BSR set to: 0
 17057  0013CE  0E65               	movlw	low _moduleResonseBuffer
 17058  0013D0  6F60               	movwf	strcmp@s1& (0+255),b
 17059  0013D2  0E01               	movlw	high _moduleResonseBuffer
 17060  0013D4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17061  0013D6  0E95               	movlw	low STR_63
 17062  0013D8  6F62               	movwf	strcmp@s2& (0+255),b
 17063  0013DA  0E7F               	movlw	high STR_63
 17064  0013DC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17065  0013DE  ECDC  F027         	call	_strcmp	;wreg free
 17066  0013E2  0100               	movlb	0	; () banked
 17067  0013E4  5160               	movf	?_strcmp& (0+255),w,b
 17068  0013E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17069  0013E8  A4D8               	btfss	status,2,c
 17070  0013EA  D021               	goto	l431
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;MOTEapp.c: 430: {
 17074                           ;MOTEapp.c: 431: oled_clear();
 17075  0013EC  ECAD  F02B         	call	_oled_clear	;wreg free
 17076                           
 17077                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 17078  0013F0  0EE8               	movlw	low STR_64
 17079  0013F2  0100               	movlb	0	; () banked
 17080  0013F4  6F72               	movwf	oled_putString@string& (0+255),b
 17081  0013F6  0E7E               	movlw	high STR_64
 17082  0013F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17083  0013FA  0E01               	movlw	1
 17084  0013FC  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17085  0013FE  0E00               	movlw	0
 17086  001400  6F75               	movwf	oled_putString@start_page& (0+255),b
 17087  001402  EC73  F025         	call	_oled_putString	;wreg free
 17088                           
 17089                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 17090  001406  0E8E               	movlw	low STR_65
 17091  001408  0100               	movlb	0	; () banked
 17092  00140A  6F72               	movwf	oled_putString@string& (0+255),b
 17093  00140C  0E7F               	movlw	high STR_65
 17094  00140E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17095  001410  0E02               	movlw	2
 17096  001412  6F74               	movwf	oled_putString@station_dot& (0+255),b
 17097  001414  0E01               	movlw	1
 17098  001416  6F75               	movwf	oled_putString@start_page& (0+255),b
 17099  001418  EC73  F025         	call	_oled_putString	;wreg free
 17100                           
 17101                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 17102  00141C  0E3B               	movlw	low STR_43
 17103  00141E  0100               	movlb	0	; () banked
 17104  001420  6F61               	movwf	sendCommand@string& (0+255),b
 17105  001422  0E7D               	movlw	high STR_43
 17106  001424  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17107  001426  EC0F  F02A         	call	_sendCommand	;wreg free
 17108  00142A                     l10336:
 17109                           
 17110                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 17111  00142A  0E05               	movlw	5
 17112  00142C  D64B               	goto	L13
 17113  00142E                     l431:
 17114                           
 17115                           ; BSR set to: 0
 17116                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17117                           
 17118                           ; BSR set to: 0
 17119  00142E  0E65               	movlw	low _moduleResonseBuffer
 17120  001430  6F60               	movwf	strcmp@s1& (0+255),b
 17121  001432  0E01               	movlw	high _moduleResonseBuffer
 17122  001434  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17123  001436  0E93               	movlw	low STR_59
 17124  001438  6F62               	movwf	strcmp@s2& (0+255),b
 17125  00143A  0E7E               	movlw	high STR_59
 17126  00143C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17127  00143E  ECDC  F027         	call	_strcmp	;wreg free
 17128  001442                     L15:
 17129  001442  0100               	movlb	0	; () banked
 17130  001444  5160               	movf	?_strcmp& (0+255),w,b
 17131  001446  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17132  001448  A4D8               	btfss	status,2,c
 17133  00144A  D07C               	goto	l395
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;MOTEapp.c: 438: {
 17137                           ;MOTEapp.c: 439: activeState = moteStartup;
 17138  00144C  0E00               	movlw	0
 17139  00144E  D63B               	goto	L14
 17140  001450                     
 17141                           ; BSR set to: 0
 17142                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 17143                           
 17144                           ; BSR set to: 0
 17145  001450  0EA9               	movlw	low STR_68
 17146  001452  6F61               	movwf	sendCommand@string& (0+255),b
 17147  001454  0E7E               	movlw	high STR_68
 17148  001456  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17149  001458  EC0F  F02A         	call	_sendCommand	;wreg free
 17150  00145C  D018               	goto	l10352
 17151  00145E                     
 17152                           ; BSR set to: 0
 17153                           ;MOTEapp.c: 448: if ( messageReady )
 17154                           
 17155                           ; BSR set to: 0
 17156  00145E  517C               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17157  001460  B4D8               	btfsc	status,2,c
 17158  001462  D070               	goto	l395
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;MOTEapp.c: 449: {
 17162                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17163  001464  0E65               	movlw	low _moduleResonseBuffer
 17164  001466  6F60               	movwf	strcmp@s1& (0+255),b
 17165  001468  0E01               	movlw	high _moduleResonseBuffer
 17166  00146A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17167  00146C  0E49               	movlw	low STR_57
 17168  00146E  6F62               	movwf	strcmp@s2& (0+255),b
 17169  001470  0E7D               	movlw	high STR_57
 17170  001472  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17171  001474  ECDC  F027         	call	_strcmp	;wreg free
 17172  001478  0100               	movlb	0	; () banked
 17173  00147A  5160               	movf	?_strcmp& (0+255),w,b
 17174  00147C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17175  00147E  A4D8               	btfss	status,2,c
 17176  001480  D008               	goto	l437
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;MOTEapp.c: 451: {
 17180                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 17181  001482  0EA9               	movlw	low STR_68
 17182  001484  6F61               	movwf	sendCommand@string& (0+255),b
 17183  001486  0E7E               	movlw	high STR_68
 17184  001488  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17185  00148A  EC0F  F02A         	call	_sendCommand	;wreg free
 17186  00148E                     l10352:
 17187                           
 17188                           ;MOTEapp.c: 453: activeState = moteGetDr;
 17189  00148E  0E08               	movlw	8
 17190  001490  D619               	goto	L13
 17191  001492                     l437:
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;MOTEapp.c: 455: else
 17195                           ;MOTEapp.c: 456: {
 17196                           ;MOTEapp.c: 457: uint8_t readDataRate;
 17197                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 17198                           
 17199                           ; BSR set to: 0
 17200  001492  0101               	movlb	1	; () banked
 17201  001494  5165               	movf	_moduleResonseBuffer& (0+255),w,b
 17202  001496  0FD0               	addlw	208
 17203  001498  0100               	movlb	0	; () banked
 17204  00149A  6F7A               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 17208  00149C  C07A  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;MOTEapp.c: 460: joiningComplete = 1;
 17212  0014A0  0E01               	movlw	1
 17213  0014A2  6F7B               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;MOTEapp.c: 461: }
 17217                           ;MOTEapp.c: 462: }
 17218                           ;MOTEapp.c: 463: break;
 17219                           
 17220                           ; BSR set to: 0
 17221  0014A4  D04F               	goto	l395
 17222  0014A6                     
 17223                           ; BSR set to: 0
 17224                           ;MOTEapp.c: 465: if (selectButton)
 17225                           
 17226                           ; BSR set to: 0
 17227  0014A6  5178               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17228  0014A8  B4D8               	btfsc	status,2,c
 17229  0014AA  D04C               	goto	l395
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;MOTEapp.c: 466: {
 17233                           ;MOTEapp.c: 467: activeState = moteComFailure;
 17234  0014AC  0E0A               	movlw	10
 17235  0014AE  D60B               	goto	L14
 17236  0014B0                     
 17237                           ; BSR set to: 0
 17238                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 17239                           
 17240                           ; BSR set to: 0
 17241  0014B0  0E00               	movlw	0
 17242  0014B2  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17243  0014B4  0E00               	movlw	0
 17244  0014B6  ECE8  F028         	call	_DATAEE_WriteByte
 17245  0014BA  B281               	btfsc	3969,1,c	;volatile
 17246  0014BC  D002               	goto	u9000
 17247  0014BE  A081               	btfss	3969,0,c	;volatile
 17248  0014C0  D7FC               	goto	l443
 17249  0014C2                     u9000:
 17250                           
 17251                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 17252  0014C2  0EFA               	movlw	250
 17253  0014C4  0100               	movlb	0	; () banked
 17254  0014C6  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17255  0014C8  0E58               	movlw	88
 17256  0014CA                     u11047:
 17257  0014CA  2EE8               	decfsz	wreg,f,c
 17258  0014CC  D7FE               	bra	u11047
 17259  0014CE  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17260  0014D0  D7FC               	bra	u11047
 17261  0014D2  F000               	nop	
 17262                           
 17263                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 17264  0014D4  0EFA               	movlw	250
 17265  0014D6  0100               	movlb	0	; () banked
 17266  0014D8  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17267  0014DA  0E58               	movlw	88
 17268  0014DC                     u11057:
 17269  0014DC  2EE8               	decfsz	wreg,f,c
 17270  0014DE  D7FE               	bra	u11057
 17271  0014E0  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17272  0014E2  D7FC               	bra	u11057
 17273  0014E4  F000               	nop	
 17274                           
 17275                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 17276  0014E6  0EFA               	movlw	250
 17277  0014E8  0100               	movlb	0	; () banked
 17278  0014EA  6F79               	movwf	??_moteJoiningProcess& (0+255),b
 17279  0014EC  0E58               	movlw	88
 17280  0014EE                     u11067:
 17281  0014EE  2EE8               	decfsz	wreg,f,c
 17282  0014F0  D7FE               	bra	u11067
 17283  0014F2  2F79               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17284  0014F4  D7FC               	bra	u11067
 17285  0014F6  F000               	nop	
 17286  0014F8  00FF               	reset		;# 
 17287                           
 17288                           ;MOTEapp.c: 480: }
 17289                           
 17290                           ;MOTEapp.c: 479: break;
 17291  0014FA  D024               	goto	l395
 17292  0014FC                     l390:
 17293  0014FC  0100               	movlb	0	; () banked
 17294  0014FE  51F4               	movf	_activeState& (0+255),w,b
 17295                           
 17296                           ; Switch size 1, requested type "space"
 17297                           ; Number of cases is 11, Range of values is 0 to 10
 17298                           ; switch strategies available:
 17299                           ; Name         Instructions Cycles
 17300                           ; simple_byte           34    18 (average)
 17301                           ;	Chosen strategy is simple_byte
 17302  001500  0A00               	xorlw	0	; case 0
 17303  001502  B4D8               	btfsc	status,2,c
 17304  001504  D596               	goto	l396
 17305  001506  0A01               	xorlw	1	; case 1
 17306  001508  B4D8               	btfsc	status,2,c
 17307  00150A  D59B               	goto	l397
 17308  00150C  0A03               	xorlw	3	; case 2
 17309  00150E  B4D8               	btfsc	status,2,c
 17310  001510  D625               	goto	l404
 17311  001512  0A01               	xorlw	1	; case 3
 17312  001514  B4D8               	btfsc	status,2,c
 17313  001516  D65A               	goto	l408
 17314  001518  0A07               	xorlw	7	; case 4
 17315  00151A  B4D8               	btfsc	status,2,c
 17316  00151C  D69B               	goto	l414
 17317  00151E  0A01               	xorlw	1	; case 5
 17318  001520  B4D8               	btfsc	status,2,c
 17319  001522  D6CB               	goto	l418
 17320  001524  0A03               	xorlw	3	; case 6
 17321  001526  B4D8               	btfsc	status,2,c
 17322  001528  D726               	goto	l427
 17323  00152A  0A01               	xorlw	1	; case 7
 17324  00152C  B4D8               	btfsc	status,2,c
 17325  00152E  D790               	goto	l434
 17326  001530  0A0F               	xorlw	15	; case 8
 17327  001532  B4D8               	btfsc	status,2,c
 17328  001534  D794               	goto	l435
 17329  001536  0A01               	xorlw	1	; case 9
 17330  001538  B4D8               	btfsc	status,2,c
 17331  00153A  D7B5               	goto	l439
 17332  00153C  0A03               	xorlw	3	; case 10
 17333  00153E  B4D8               	btfsc	status,2,c
 17334  001540  D7B7               	goto	l441
 17335  001542  D576               	goto	l391
 17336  001544                     l395:
 17337                           
 17338                           ;MOTEapp.c: 481: return joiningComplete;
 17339                           
 17340                           ; BSR set to: 0
 17341  001544  0100               	movlb	0	; () banked
 17342  001546  517B               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17343  001548  0012               	return	
 17344  00154A                     __end_of_moteJoiningProcess:
 17345                           	opt stack 0
 17346                           tblptru	equ	0xFF8
 17347                           tblptrh	equ	0xFF7
 17348                           tblptrl	equ	0xFF6
 17349                           tablat	equ	0xFF5
 17350                           prodh	equ	0xFF4
 17351                           prodl	equ	0xFF3
 17352                           intcon	equ	0xFF2
 17353                           intcon3	equ	0xFF0
 17354                           postinc0	equ	0xFEE
 17355                           wreg	equ	0xFE8
 17356                           indf1	equ	0xFE7
 17357                           postdec1	equ	0xFE5
 17358                           fsr1h	equ	0xFE2
 17359                           fsr1l	equ	0xFE1
 17360                           indf2	equ	0xFDF
 17361                           fsr2h	equ	0xFDA
 17362                           fsr2l	equ	0xFD9
 17363                           status	equ	0xFD8
 17364                           
 17365 ;; *************** function _strncmp *****************
 17366 ;; Defined at:
 17367 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17368 ;; Parameters:    Size  Location     Type
 17369 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17370 ;;		 -> moduleResonseBuffer(64), 
 17371 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17372 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17373 ;;		 -> STR_35(5), STR_31(5), 
 17374 ;;  len             2    4[BANK0 ] unsigned int 
 17375 ;; Auto vars:     Size  Location     Type
 17376 ;;		None
 17377 ;; Return value:  Size  Location     Type
 17378 ;;                  2    0[BANK0 ] int 
 17379 ;; Registers used:
 17380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17381 ;; Tracked objects:
 17382 ;;		On entry : 0/0
 17383 ;;		On exit  : 0/0
 17384 ;;		Unchanged: 0/0
 17385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17386 ;;      Params:         0       6       0       0       0       0       0       0       0
 17387 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17388 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17389 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17390 ;;Total ram usage:        9 bytes
 17391 ;; Hardware stack levels used:    1
 17392 ;; Hardware stack levels required when called:   11
 17393 ;; This function calls:
 17394 ;;		Nothing
 17395 ;; This function is called by:
 17396 ;;		_moteJoiningProcess
 17397 ;;		_moteRunningProcess
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           	psect	text52
 17402  00458A                     __ptext52:
 17403                           	opt stack 0
 17404  00458A                     _strncmp:
 17405                           	opt stack 17
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;incstack = 0
 17409  00458A  D035               	goto	l2805
 17410  00458C                     l9418:
 17411  00458C  C060  FFD9         	movff	strncmp@s1,fsr2l
 17412  004590  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17413  004594  50DF               	movf	indf2,w,c
 17414  004596  B4D8               	btfsc	status,2,c
 17415  004598  D010               	goto	u7880
 17416  00459A  C060  FFD9         	movff	strncmp@s1,fsr2l
 17417  00459E  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17418  0045A2  50DF               	movf	indf2,w,c
 17419  0045A4  0100               	movlb	0	; () banked
 17420  0045A6  6F66               	movwf	??_strncmp& (0+255),b
 17421  0045A8  C062  FFF6         	movff	strncmp@s2,tblptrl
 17422  0045AC  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17423  0045B0                     	if	0	;tblptru may be non-zero
 17424  0045B0                     	endif
 17425  0045B0                     	if	0	;tblptru may be non-zero
 17426  0045B0                     	endif
 17427  0045B0  0008               	tblrd		*
 17428  0045B2  50F5               	movf	tablat,w,c
 17429  0045B4  1966               	xorwf	??_strncmp& (0+255),w,b
 17430  0045B6  B4D8               	btfsc	status,2,c
 17431  0045B8  D01A               	goto	l2807
 17432  0045BA                     u7880:
 17433                           
 17434                           ; BSR set to: 0
 17435  0045BA  C062  FFF6         	movff	strncmp@s2,tblptrl
 17436  0045BE  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17437  0045C2                     	if	0	;tblptru may be non-zero
 17438  0045C2                     	endif
 17439  0045C2                     	if	0	;tblptru may be non-zero
 17440  0045C2                     	endif
 17441  0045C2  0008               	tblrd		*
 17442  0045C4  50F5               	movf	tablat,w,c
 17443  0045C6  0100               	movlb	0	; () banked
 17444  0045C8  6F66               	movwf	??_strncmp& (0+255),b
 17445  0045CA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17446  0045CC  1F66               	comf	??_strncmp& (0+255),f,b
 17447  0045CE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17448  0045D0  4B66               	infsnz	??_strncmp& (0+255),f,b
 17449  0045D2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17450  0045D4  C060  FFD9         	movff	strncmp@s1,fsr2l
 17451  0045D8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17452  0045DC  50DF               	movf	indf2,w,c
 17453  0045DE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17454  0045E0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17455  0045E2  2566               	addwf	??_strncmp& (0+255),w,b
 17456  0045E4  6F60               	movwf	?_strncmp& (0+255),b
 17457  0045E6  0E00               	movlw	0
 17458  0045E8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17459  0045EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17460                           
 17461                           ; BSR set to: 0
 17462  0045EC  0012               	return	
 17463  0045EE                     l2807:
 17464                           
 17465                           ; BSR set to: 0
 17466                           
 17467                           ; BSR set to: 0
 17468  0045EE  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17469  0045F0  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17470  0045F2  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17471  0045F4  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17472  0045F6                     l2805:
 17473                           
 17474                           ; BSR set to: 0
 17475  0045F6  0100               	movlb	0	; () banked
 17476  0045F8  0764               	decf	strncmp@len& (0+255),f,b
 17477  0045FA  A0D8               	btfss	status,0,c
 17478  0045FC  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17479  0045FE  2964               	incf	strncmp@len& (0+255),w,b
 17480  004600  E1C5               	bnz	l9418
 17481  004602  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17482  004604  A4D8               	btfss	status,2,c
 17483  004606  D7C2               	goto	l2806
 17484                           
 17485                           ; BSR set to: 0
 17486                           
 17487                           ; BSR set to: 0
 17488  004608  0E00               	movlw	0
 17489  00460A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17490  00460C  0E00               	movlw	0
 17491  00460E  6F60               	movwf	?_strncmp& (0+255),b
 17492  004610  0012               	return	
 17493  004612                     __end_of_strncmp:
 17494                           	opt stack 0
 17495                           tblptru	equ	0xFF8
 17496                           tblptrh	equ	0xFF7
 17497                           tblptrl	equ	0xFF6
 17498                           tablat	equ	0xFF5
 17499                           prodh	equ	0xFF4
 17500                           prodl	equ	0xFF3
 17501                           intcon	equ	0xFF2
 17502                           intcon3	equ	0xFF0
 17503                           postinc0	equ	0xFEE
 17504                           wreg	equ	0xFE8
 17505                           indf1	equ	0xFE7
 17506                           postdec1	equ	0xFE5
 17507                           fsr1h	equ	0xFE2
 17508                           fsr1l	equ	0xFE1
 17509                           indf2	equ	0xFDF
 17510                           fsr2h	equ	0xFDA
 17511                           fsr2l	equ	0xFD9
 17512                           status	equ	0xFD8
 17513                           
 17514 ;; *************** function _strcmp *****************
 17515 ;; Defined at:
 17516 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17519 ;;		 -> moduleResonseBuffer(64), 
 17520 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17521 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17522 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17523 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;  r               1    5[BANK0 ] char 
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  2    0[BANK0 ] int 
 17528 ;; Registers used:
 17529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17530 ;; Tracked objects:
 17531 ;;		On entry : 0/0
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17535 ;;      Params:         0       4       0       0       0       0       0       0       0
 17536 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17537 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17538 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17539 ;;Total ram usage:        6 bytes
 17540 ;; Hardware stack levels used:    1
 17541 ;; Hardware stack levels required when called:   11
 17542 ;; This function calls:
 17543 ;;		Nothing
 17544 ;; This function is called by:
 17545 ;;		_moteJoiningProcess
 17546 ;;		_moteRunningProcess
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text53
 17551  004FB8                     __ptext53:
 17552                           	opt stack 0
 17553  004FB8                     _strcmp:
 17554                           	opt stack 17
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;incstack = 0
 17558  004FB8  D005               	goto	l2797
 17559  004FBA  0100               	movlb	0	; () banked
 17560  004FBC  4B60               	infsnz	strcmp@s1& (0+255),f,b
 17561  004FBE  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 17562  004FC0  4B62               	infsnz	strcmp@s2& (0+255),f,b
 17563  004FC2  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 17564  004FC4                     l2797:
 17565                           
 17566                           ; BSR set to: 0
 17567  004FC4  C060  FFD9         	movff	strcmp@s1,fsr2l
 17568  004FC8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17569  004FCC  50DF               	movf	indf2,w,c
 17570  004FCE  0100               	movlb	0	; () banked
 17571  004FD0  6F64               	movwf	??_strcmp& (0+255),b
 17572  004FD2  C062  FFF6         	movff	strcmp@s2,tblptrl
 17573  004FD6  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 17574  004FDA                     	if	0	;tblptru may be non-zero
 17575  004FDA                     	endif
 17576  004FDA                     	if	0	;tblptru may be non-zero
 17577  004FDA                     	endif
 17578  004FDA  0008               	tblrd		*
 17579  004FDC  50F5               	movf	tablat,w,c
 17580  004FDE  0800               	sublw	0
 17581  004FE0  2564               	addwf	??_strcmp& (0+255),w,b
 17582  004FE2  6F65               	movwf	strcmp@r& (0+255),b
 17583  004FE4  5165               	movf	strcmp@r& (0+255),w,b
 17584  004FE6  A4D8               	btfss	status,2,c
 17585  004FE8  D007               	goto	u7910
 17586                           
 17587                           ; BSR set to: 0
 17588  004FEA  C060  FFD9         	movff	strcmp@s1,fsr2l
 17589  004FEE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17590  004FF2  50DF               	movf	indf2,w,c
 17591  004FF4  A4D8               	btfss	status,2,c
 17592  004FF6  D7E1               	goto	l2798
 17593  004FF8                     u7910:
 17594                           
 17595                           ; BSR set to: 0
 17596                           
 17597                           ; BSR set to: 0
 17598                           
 17599                           ; BSR set to: 0
 17600  004FF8  5165               	movf	strcmp@r& (0+255),w,b
 17601  004FFA  6F60               	movwf	?_strcmp& (0+255),b
 17602  004FFC  6B61               	clrf	(?_strcmp+1)& (0+255),b
 17603  004FFE  BF60               	btfsc	?_strcmp& (0+255),7,b
 17604  005000  0761               	decf	(?_strcmp+1)& (0+255),f,b
 17605  005002  0012               	return	
 17606  005004                     __end_of_strcmp:
 17607                           	opt stack 0
 17608                           tblptru	equ	0xFF8
 17609                           tblptrh	equ	0xFF7
 17610                           tblptrl	equ	0xFF6
 17611                           tablat	equ	0xFF5
 17612                           prodh	equ	0xFF4
 17613                           prodl	equ	0xFF3
 17614                           intcon	equ	0xFF2
 17615                           intcon3	equ	0xFF0
 17616                           postinc0	equ	0xFEE
 17617                           wreg	equ	0xFE8
 17618                           indf1	equ	0xFE7
 17619                           postdec1	equ	0xFE5
 17620                           fsr1h	equ	0xFE2
 17621                           fsr1l	equ	0xFE1
 17622                           indf2	equ	0xFDF
 17623                           fsr2h	equ	0xFDA
 17624                           fsr2l	equ	0xFD9
 17625                           status	equ	0xFD8
 17626                           
 17627 ;; *************** function _moteApp_delayms *****************
 17628 ;; Defined at:
 17629 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  length          2    0[BANK0 ] unsigned int 
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;  counter         2    3[BANK0 ] unsigned int 
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  1    wreg      void 
 17636 ;; Registers used:
 17637 ;;		wreg, status,2, status,0
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17643 ;;      Params:         0       2       0       0       0       0       0       0       0
 17644 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17645 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17646 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17647 ;;Total ram usage:        5 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:   11
 17650 ;; This function calls:
 17651 ;;		Nothing
 17652 ;; This function is called by:
 17653 ;;		_main
 17654 ;;		_test_powerup
 17655 ;;		_moduleResync
 17656 ;;		_moteJoiningProcess
 17657 ;;		_moteRunningProcess
 17658 ;;		_moteApp_GoToSleep
 17659 ;;		_moteApp_setSensorsInput
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text54
 17664  005358                     __ptext54:
 17665                           	opt stack 0
 17666  005358                     _moteApp_delayms:
 17667                           	opt stack 16
 17668                           
 17669                           ;MOTEapp.c: 169: uint16_t counter;
 17670                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;incstack = 0
 17674  005358  0E00               	movlw	0
 17675  00535A  0100               	movlb	0	; () banked
 17676  00535C  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17677  00535E  0E00               	movlw	0
 17678  005360  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 17679  005362  D00C               	goto	l348
 17680  005364                     
 17681                           ; BSR set to: 0
 17682                           ;MOTEapp.c: 171: {
 17683                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 17684                           
 17685                           ; BSR set to: 0
 17686  005364  0E10               	movlw	16
 17687  005366  0100               	movlb	0	; () banked
 17688  005368  6F62               	movwf	??_moteApp_delayms& (0+255),b
 17689  00536A  0E94               	movlw	148
 17690  00536C                     u11077:
 17691  00536C  2EE8               	decfsz	wreg,f,c
 17692  00536E  D7FE               	bra	u11077
 17693  005370  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 17694  005372  D7FC               	bra	u11077
 17695  005374  F000               	nop	
 17696  005376  0100               	movlb	0	; () banked
 17697  005378  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 17698  00537A  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 17699  00537C                     l348:
 17700                           
 17701                           ; BSR set to: 0
 17702  00537C  5160               	movf	moteApp_delayms@length& (0+255),w,b
 17703  00537E  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 17704  005380  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 17705  005382  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 17706  005384  B0D8               	btfsc	status,0,c
 17707  005386  0012               	return	
 17708  005388  D7ED               	goto	l349
 17709  00538A                     __end_of_moteApp_delayms:
 17710                           	opt stack 0
 17711                           tblptru	equ	0xFF8
 17712                           tblptrh	equ	0xFF7
 17713                           tblptrl	equ	0xFF6
 17714                           tablat	equ	0xFF5
 17715                           prodh	equ	0xFF4
 17716                           prodl	equ	0xFF3
 17717                           intcon	equ	0xFF2
 17718                           intcon3	equ	0xFF0
 17719                           postinc0	equ	0xFEE
 17720                           wreg	equ	0xFE8
 17721                           indf1	equ	0xFE7
 17722                           postdec1	equ	0xFE5
 17723                           fsr1h	equ	0xFE2
 17724                           fsr1l	equ	0xFE1
 17725                           indf2	equ	0xFDF
 17726                           fsr2h	equ	0xFDA
 17727                           fsr2l	equ	0xFD9
 17728                           status	equ	0xFD8
 17729                           
 17730 ;; *************** function _DATAEE_WriteByte *****************
 17731 ;; Defined at:
 17732 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 17733 ;; Parameters:    Size  Location     Type
 17734 ;;  bAdd            1    wreg     unsigned char 
 17735 ;;  bData           1    0[BANK0 ] unsigned char 
 17736 ;; Auto vars:     Size  Location     Type
 17737 ;;  bAdd            1    1[BANK0 ] unsigned char 
 17738 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		wreg, status,2
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17748 ;;      Params:         0       1       0       0       0       0       0       0       0
 17749 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17751 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17752 ;;Total ram usage:        3 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:   11
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_main
 17759 ;;		_moteJoiningProcess
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           	psect	text55
 17764  0051D0                     __ptext55:
 17765                           	opt stack 0
 17766  0051D0                     _DATAEE_WriteByte:
 17767                           	opt stack 17
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;incstack = 0
 17771                           ;DATAEE_WriteByte@bAdd stored from wreg
 17772  0051D0  0100               	movlb	0	; () banked
 17773  0051D2  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17774                           
 17775                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 17776  0051D4  0E00               	movlw	0
 17777  0051D6  BEF2               	btfsc	intcon,7,c	;volatile
 17778  0051D8  0E01               	movlw	1
 17779  0051DA  0100               	movlb	0	; () banked
 17780  0051DC  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 17784  0051DE  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;memory.c: 171: EEDATA = bData;
 17788  0051E2  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 17789                           
 17790                           ; BSR set to: 0
 17791                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 17792  0051E6  9EA6               	bcf	4006,7,c	;volsfr
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;memory.c: 173: EECON1bits.CFGS = 0;
 17796  0051E8  9CA6               	bcf	4006,6,c	;volsfr
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;memory.c: 174: EECON1bits.WREN = 1;
 17800  0051EA  84A6               	bsf	4006,2,c	;volsfr
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;memory.c: 175: INTCONbits.GIE = 0;
 17804  0051EC  9EF2               	bcf	intcon,7,c	;volatile
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;memory.c: 176: EECON2 = 0x55;
 17808  0051EE  0E55               	movlw	85
 17809  0051F0  6EA7               	movwf	4007,c	;volsfr
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;memory.c: 177: EECON2 = 0xAA;
 17813  0051F2  0EAA               	movlw	170
 17814  0051F4  6EA7               	movwf	4007,c	;volsfr
 17815                           
 17816                           ; BSR set to: 0
 17817                           ;memory.c: 178: EECON1bits.WR = 1;
 17818  0051F6  82A6               	bsf	4006,1,c	;volsfr
 17819  0051F8                     
 17820                           ; BSR set to: 0
 17821                           ;memory.c: 181: {
 17822  0051F8  B2A6               	btfsc	4006,1,c	;volsfr
 17823  0051FA  D7FE               	goto	l1542
 17824                           
 17825                           ;memory.c: 182: }
 17826                           ;memory.c: 184: EECON1bits.WREN = 0;
 17827  0051FC  94A6               	bcf	4006,2,c	;volsfr
 17828                           
 17829                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 17830  0051FE  0100               	movlb	0	; () banked
 17831  005200  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 17832  005202  D002               	bra	u7745
 17833  005204  9EF2               	bcf	intcon,7,c	;volatile
 17834  005206  D001               	bra	u7746
 17835  005208                     u7745:
 17836  005208  8EF2               	bsf	intcon,7,c	;volatile
 17837  00520A                     u7746:
 17838  00520A  0012               	return		;funcret
 17839  00520C                     __end_of_DATAEE_WriteByte:
 17840                           	opt stack 0
 17841                           tblptru	equ	0xFF8
 17842                           tblptrh	equ	0xFF7
 17843                           tblptrl	equ	0xFF6
 17844                           tablat	equ	0xFF5
 17845                           prodh	equ	0xFF4
 17846                           prodl	equ	0xFF3
 17847                           intcon	equ	0xFF2
 17848                           intcon3	equ	0xFF0
 17849                           postinc0	equ	0xFEE
 17850                           wreg	equ	0xFE8
 17851                           indf1	equ	0xFE7
 17852                           postdec1	equ	0xFE5
 17853                           fsr1h	equ	0xFE2
 17854                           fsr1l	equ	0xFE1
 17855                           indf2	equ	0xFDF
 17856                           fsr2h	equ	0xFDA
 17857                           fsr2l	equ	0xFD9
 17858                           status	equ	0xFD8
 17859                           
 17860 ;; *************** function _USBapp_exitCDCState *****************
 17861 ;; Defined at:
 17862 ;;		line 139 in file "../Includes/Board/USBapp.c"
 17863 ;; Parameters:    Size  Location     Type
 17864 ;;  usbState        1    wreg     enum E5838
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;  usbState        1    0[BANK0 ] enum E5838
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  1    wreg      void 
 17869 ;; Registers used:
 17870 ;;		wreg
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17876 ;;      Params:         0       0       0       0       0       0       0       0       0
 17877 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17878 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17879 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17880 ;;Total ram usage:        1 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:   11
 17883 ;; This function calls:
 17884 ;;		Nothing
 17885 ;; This function is called by:
 17886 ;;		_moteHandler
 17887 ;; This function uses a non-reentrant model
 17888 ;;
 17889                           
 17890                           	psect	text56
 17891  0058C4                     __ptext56:
 17892                           	opt stack 0
 17893  0058C4                     _USBapp_exitCDCState:
 17894                           	opt stack 18
 17895                           
 17896                           ;incstack = 0
 17897                           ;USBapp_exitCDCState@usbState stored from wreg
 17898  0058C4  0100               	movlb	0	; () banked
 17899  0058C6  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 17900                           
 17901                           ;USBapp.c: 141: exitUSB = usbState;
 17902  0058C8  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 17903  0058CC  0012               	return		;funcret
 17904  0058CE                     __end_of_USBapp_exitCDCState:
 17905                           	opt stack 0
 17906                           tblptru	equ	0xFF8
 17907                           tblptrh	equ	0xFF7
 17908                           tblptrl	equ	0xFF6
 17909                           tablat	equ	0xFF5
 17910                           prodh	equ	0xFF4
 17911                           prodl	equ	0xFF3
 17912                           intcon	equ	0xFF2
 17913                           intcon3	equ	0xFF0
 17914                           postinc0	equ	0xFEE
 17915                           wreg	equ	0xFE8
 17916                           indf1	equ	0xFE7
 17917                           postdec1	equ	0xFE5
 17918                           fsr1h	equ	0xFE2
 17919                           fsr1l	equ	0xFE1
 17920                           indf2	equ	0xFDF
 17921                           fsr2h	equ	0xFDA
 17922                           fsr2l	equ	0xFD9
 17923                           status	equ	0xFD8
 17924                           
 17925 ;; *************** function _USBapp_exitCDC *****************
 17926 ;; Defined at:
 17927 ;;		line 134 in file "../Includes/Board/USBapp.c"
 17928 ;; Parameters:    Size  Location     Type
 17929 ;;		None
 17930 ;; Auto vars:     Size  Location     Type
 17931 ;;		None
 17932 ;; Return value:  Size  Location     Type
 17933 ;;                  1    wreg      enum E5902
 17934 ;; Registers used:
 17935 ;;		wreg, status,2
 17936 ;; Tracked objects:
 17937 ;;		On entry : 0/0
 17938 ;;		On exit  : 0/0
 17939 ;;		Unchanged: 0/0
 17940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17941 ;;      Params:         0       0       0       0       0       0       0       0       0
 17942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17944 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17945 ;;Total ram usage:        0 bytes
 17946 ;; Hardware stack levels used:    1
 17947 ;; Hardware stack levels required when called:   11
 17948 ;; This function calls:
 17949 ;;		Nothing
 17950 ;; This function is called by:
 17951 ;;		_moteHandler
 17952 ;; This function uses a non-reentrant model
 17953 ;;
 17954                           
 17955                           	psect	text57
 17956  005910                     __ptext57:
 17957                           	opt stack 0
 17958  005910                     _USBapp_exitCDC:
 17959                           	opt stack 18
 17960                           
 17961                           ;USBapp.c: 136: return exitUSB;
 17962                           
 17963                           ;incstack = 0
 17964  005910  0100               	movlb	0	; () banked
 17965  005912  51F9               	movf	_exitUSB& (0+255),w,b
 17966  005914  0012               	return	
 17967  005916                     __end_of_USBapp_exitCDC:
 17968                           	opt stack 0
 17969                           tblptru	equ	0xFF8
 17970                           tblptrh	equ	0xFF7
 17971                           tblptrl	equ	0xFF6
 17972                           tablat	equ	0xFF5
 17973                           prodh	equ	0xFF4
 17974                           prodl	equ	0xFF3
 17975                           intcon	equ	0xFF2
 17976                           intcon3	equ	0xFF0
 17977                           postinc0	equ	0xFEE
 17978                           wreg	equ	0xFE8
 17979                           indf1	equ	0xFE7
 17980                           postdec1	equ	0xFE5
 17981                           fsr1h	equ	0xFE2
 17982                           fsr1l	equ	0xFE1
 17983                           indf2	equ	0xFDF
 17984                           fsr2h	equ	0xFDA
 17985                           fsr2l	equ	0xFD9
 17986                           status	equ	0xFD8
 17987                           
 17988 ;; *************** function _TMRapp_Handler *****************
 17989 ;; Defined at:
 17990 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 17991 ;; Parameters:    Size  Location     Type
 17992 ;;		None
 17993 ;; Auto vars:     Size  Location     Type
 17994 ;;		None
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      void 
 17997 ;; Registers used:
 17998 ;;		wreg, status,2, status,0, cstack
 17999 ;; Tracked objects:
 18000 ;;		On entry : 0/0
 18001 ;;		On exit  : 0/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18004 ;;      Params:         0       0       0       0       0       0       0       0       0
 18005 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18007 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18008 ;;Total ram usage:        0 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; Hardware stack levels required when called:   12
 18011 ;; This function calls:
 18012 ;;		___almod
 18013 ;;		___lwmod
 18014 ;; This function is called by:
 18015 ;;		_moteHandler
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           	psect	text58
 18020  002E12                     __ptext58:
 18021                           	opt stack 0
 18022  002E12                     _TMRapp_Handler:
 18023                           	opt stack 17
 18024                           
 18025                           ;TMRapp.c: 60: timerMsTickCount++;
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;incstack = 0
 18029  002E12  0100               	movlb	0	; () banked
 18030  002E14  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 18031  002E16  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18035  002E18  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18036  002E1C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18037  002E20  0E00               	movlw	0
 18038  002E22  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18039  002E24  0E0A               	movlw	10
 18040  002E26  6F62               	movwf	___lwmod@divisor& (0+255),b
 18041  002E28  EC26  F028         	call	___lwmod	;wreg free
 18042  002E2C  0100               	movlb	0	; () banked
 18043  002E2E  5160               	movf	?___lwmod& (0+255),w,b
 18044  002E30  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18045  002E32  A4D8               	btfss	status,2,c
 18046  002E34  0012               	return	
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;TMRapp.c: 63: {
 18050                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18051  002E36  83F8               	bsf	_appTimer& (0+255),1,b
 18052                           
 18053                           ; BSR set to: 0
 18054                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18055  002E38  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18056  002E3C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18057  002E40  0E00               	movlw	0
 18058  002E42  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18059  002E44  0E64               	movlw	100
 18060  002E46  6F62               	movwf	___lwmod@divisor& (0+255),b
 18061  002E48  EC26  F028         	call	___lwmod	;wreg free
 18062  002E4C  0100               	movlb	0	; () banked
 18063  002E4E  5160               	movf	?___lwmod& (0+255),w,b
 18064  002E50  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18065  002E52  A4D8               	btfss	status,2,c
 18066  002E54  0012               	return	
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;TMRapp.c: 66: {
 18070                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18071  002E56  85F8               	bsf	_appTimer& (0+255),2,b
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18075  002E58  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18076  002E5C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18077  002E60  0E03               	movlw	3
 18078  002E62  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18079  002E64  0EE8               	movlw	232
 18080  002E66  6F62               	movwf	___lwmod@divisor& (0+255),b
 18081  002E68  EC26  F028         	call	___lwmod	;wreg free
 18082  002E6C  0100               	movlb	0	; () banked
 18083  002E6E  5160               	movf	?___lwmod& (0+255),w,b
 18084  002E70  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18085  002E72  A4D8               	btfss	status,2,c
 18086  002E74  0012               	return	
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;TMRapp.c: 69: {
 18090                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18091  002E76  87F8               	bsf	_appTimer& (0+255),3,b
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18095  002E78  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 18096  002E7C  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 18097  002E80  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 18098  002E82  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 18099  002E84  0E60               	movlw	96
 18100  002E86  6F64               	movwf	___almod@divisor& (0+255),b
 18101  002E88  0EEA               	movlw	234
 18102  002E8A  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 18103  002E8C  0E00               	movlw	0
 18104  002E8E  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 18105  002E90  0E00               	movlw	0
 18106  002E92  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 18107  002E94  EC0D  F020         	call	___almod	;wreg free
 18108  002E98  0100               	movlb	0	; () banked
 18109  002E9A  5160               	movf	?___almod& (0+255),w,b
 18110  002E9C  1161               	iorwf	(?___almod+1)& (0+255),w,b
 18111  002E9E  1162               	iorwf	(?___almod+2)& (0+255),w,b
 18112  002EA0  1163               	iorwf	(?___almod+3)& (0+255),w,b
 18113  002EA2  A4D8               	btfss	status,2,c
 18114  002EA4  0012               	return	
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;TMRapp.c: 72: {
 18118                           ;TMRapp.c: 73: timerMinTickCount++;
 18119  002EA6  4A40               	infsnz	_timerMinTickCount,f,c
 18120  002EA8  2A41               	incf	_timerMinTickCount+1,f,c
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18124  002EAA  89F8               	bsf	_appTimer& (0+255),4,b
 18125                           
 18126                           ; BSR set to: 0
 18127                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18128  002EAC  C040  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18129  002EB0  C041  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18130  002EB4  0E00               	movlw	0
 18131  002EB6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18132  002EB8  0E3C               	movlw	60
 18133  002EBA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18134  002EBC  EC26  F028         	call	___lwmod	;wreg free
 18135  002EC0  0100               	movlb	0	; () banked
 18136  002EC2  5160               	movf	?___lwmod& (0+255),w,b
 18137  002EC4  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18138  002EC6  A4D8               	btfss	status,2,c
 18139  002EC8  0012               	return	
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;TMRapp.c: 76: {
 18143                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18144  002ECA  8BF8               	bsf	_appTimer& (0+255),5,b
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18148  002ECC  C040  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18149  002ED0  C041  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18150  002ED4  0E02               	movlw	2
 18151  002ED6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18152  002ED8  0ED0               	movlw	208
 18153  002EDA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18154  002EDC  EC26  F028         	call	___lwmod	;wreg free
 18155  002EE0  0100               	movlb	0	; () banked
 18156  002EE2  5160               	movf	?___lwmod& (0+255),w,b
 18157  002EE4  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18158  002EE6  A4D8               	btfss	status,2,c
 18159  002EE8  0012               	return	
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;TMRapp.c: 79: {
 18163                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18164  002EEA  8DF8               	bsf	_appTimer& (0+255),6,b
 18165                           
 18166                           ; BSR set to: 0
 18167                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18168  002EEC  C040  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18169  002EF0  C041  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18170  002EF4  0E05               	movlw	5
 18171  002EF6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18172  002EF8  0EA0               	movlw	160
 18173  002EFA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18174  002EFC  EC26  F028         	call	___lwmod	;wreg free
 18175  002F00  0100               	movlb	0	; () banked
 18176  002F02  5160               	movf	?___lwmod& (0+255),w,b
 18177  002F04  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18178  002F06  A4D8               	btfss	status,2,c
 18179  002F08  0012               	return	
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;TMRapp.c: 82: {
 18183                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18184  002F0A  8FF8               	bsf	_appTimer& (0+255),7,b
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18188  002F0C  0E00               	movlw	0
 18189  002F0E  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 18190  002F10  0E00               	movlw	0
 18191  002F12  6FD8               	movwf	_timerMsTickCount& (0+255),b
 18192                           
 18193                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18194  002F14  0E00               	movlw	0
 18195  002F16  6E41               	movwf	_timerMinTickCount+1,c
 18196  002F18  0E00               	movlw	0
 18197  002F1A  6E40               	movwf	_timerMinTickCount,c
 18198                           
 18199                           ; BSR set to: 0
 18200                           
 18201                           ; BSR set to: 0
 18202                           
 18203                           ; BSR set to: 0
 18204                           
 18205                           ; BSR set to: 0
 18206                           
 18207                           ; BSR set to: 0
 18208                           
 18209                           ; BSR set to: 0
 18210  002F1C  0012               	return	
 18211  002F1E                     __end_of_TMRapp_Handler:
 18212                           	opt stack 0
 18213                           tblptru	equ	0xFF8
 18214                           tblptrh	equ	0xFF7
 18215                           tblptrl	equ	0xFF6
 18216                           tablat	equ	0xFF5
 18217                           prodh	equ	0xFF4
 18218                           prodl	equ	0xFF3
 18219                           intcon	equ	0xFF2
 18220                           intcon3	equ	0xFF0
 18221                           postinc0	equ	0xFEE
 18222                           wreg	equ	0xFE8
 18223                           indf1	equ	0xFE7
 18224                           postdec1	equ	0xFE5
 18225                           fsr1h	equ	0xFE2
 18226                           fsr1l	equ	0xFE1
 18227                           indf2	equ	0xFDF
 18228                           fsr2h	equ	0xFDA
 18229                           fsr2l	equ	0xFD9
 18230                           status	equ	0xFD8
 18231                           
 18232 ;; *************** function ___lwmod *****************
 18233 ;; Defined at:
 18234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;  dividend        2    0[BANK0 ] unsigned int 
 18237 ;;  divisor         2    2[BANK0 ] unsigned int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;  counter         1    4[BANK0 ] unsigned char 
 18240 ;; Return value:  Size  Location     Type
 18241 ;;                  2    0[BANK0 ] unsigned int 
 18242 ;; Registers used:
 18243 ;;		wreg, status,2, status,0
 18244 ;; Tracked objects:
 18245 ;;		On entry : 0/0
 18246 ;;		On exit  : 0/0
 18247 ;;		Unchanged: 0/0
 18248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18249 ;;      Params:         0       4       0       0       0       0       0       0       0
 18250 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18252 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18253 ;;Total ram usage:        5 bytes
 18254 ;; Hardware stack levels used:    1
 18255 ;; Hardware stack levels required when called:   11
 18256 ;; This function calls:
 18257 ;;		Nothing
 18258 ;; This function is called by:
 18259 ;;		_TMRapp_Handler
 18260 ;;		_moteApp_add16bToDataBuffer
 18261 ;;		_oled_putUint16
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265                           	psect	text59
 18266  00504C                     __ptext59:
 18267                           	opt stack 0
 18268  00504C                     ___lwmod:
 18269                           	opt stack 17
 18270                           
 18271                           ; BSR set to: 0
 18272                           ;incstack = 0
 18273  00504C  0100               	movlb	0	; () banked
 18274  00504E  5162               	movf	___lwmod@divisor& (0+255),w,b
 18275  005050  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18276  005052  B4D8               	btfsc	status,2,c
 18277  005054  D018               	goto	l2656
 18278                           
 18279                           ; BSR set to: 0
 18280  005056  0E01               	movlw	1
 18281  005058  6F64               	movwf	___lwmod@counter& (0+255),b
 18282  00505A  D004               	goto	l2651
 18283  00505C                     
 18284                           ; BSR set to: 0
 18285                           
 18286                           ; BSR set to: 0
 18287  00505C  90D8               	bcf	status,0,c
 18288  00505E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18289  005060  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18290  005062  2B64               	incf	___lwmod@counter& (0+255),f,b
 18291  005064                     l2651:
 18292                           
 18293                           ; BSR set to: 0
 18294                           
 18295                           ; BSR set to: 0
 18296  005064  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18297  005066  D7FA               	goto	l2652
 18298  005068                     u8530:
 18299                           
 18300                           ; BSR set to: 0
 18301                           
 18302                           ; BSR set to: 0
 18303                           
 18304                           ; BSR set to: 0
 18305  005068  5162               	movf	___lwmod@divisor& (0+255),w,b
 18306  00506A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18307  00506C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18308  00506E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18309  005070  A0D8               	btfss	status,0,c
 18310  005072  D004               	goto	l2655
 18311                           
 18312                           ; BSR set to: 0
 18313  005074  5162               	movf	___lwmod@divisor& (0+255),w,b
 18314  005076  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18315  005078  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18316  00507A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18317  00507C                     l2655:
 18318                           
 18319                           ; BSR set to: 0
 18320                           
 18321                           ; BSR set to: 0
 18322  00507C  90D8               	bcf	status,0,c
 18323  00507E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18324  005080  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18325                           
 18326                           ; BSR set to: 0
 18327  005082  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18328  005084  D7F1               	goto	u8530
 18329  005086                     l2656:
 18330                           
 18331                           ; BSR set to: 0
 18332                           
 18333                           ; BSR set to: 0
 18334  005086  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18335  00508A  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18336                           
 18337                           ; BSR set to: 0
 18338  00508E  0012               	return		;funcret
 18339  005090                     __end_of___lwmod:
 18340                           	opt stack 0
 18341                           tblptru	equ	0xFF8
 18342                           tblptrh	equ	0xFF7
 18343                           tblptrl	equ	0xFF6
 18344                           tablat	equ	0xFF5
 18345                           prodh	equ	0xFF4
 18346                           prodl	equ	0xFF3
 18347                           intcon	equ	0xFF2
 18348                           intcon3	equ	0xFF0
 18349                           postinc0	equ	0xFEE
 18350                           wreg	equ	0xFE8
 18351                           indf1	equ	0xFE7
 18352                           postdec1	equ	0xFE5
 18353                           fsr1h	equ	0xFE2
 18354                           fsr1l	equ	0xFE1
 18355                           indf2	equ	0xFDF
 18356                           fsr2h	equ	0xFDA
 18357                           fsr2l	equ	0xFD9
 18358                           status	equ	0xFD8
 18359                           
 18360 ;; *************** function ___almod *****************
 18361 ;; Defined at:
 18362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 18363 ;; Parameters:    Size  Location     Type
 18364 ;;  dividend        4    0[BANK0 ] long 
 18365 ;;  divisor         4    4[BANK0 ] long 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  sign            1    9[BANK0 ] unsigned char 
 18368 ;;  counter         1    8[BANK0 ] unsigned char 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  4    0[BANK0 ] long 
 18371 ;; Registers used:
 18372 ;;		wreg, status,2, status,0
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18378 ;;      Params:         0       8       0       0       0       0       0       0       0
 18379 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18381 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18382 ;;Total ram usage:       10 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:   11
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_TMRapp_Handler
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text60
 18393  00401A                     __ptext60:
 18394                           	opt stack 0
 18395  00401A                     ___almod:
 18396                           	opt stack 17
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;incstack = 0
 18400  00401A  0E00               	movlw	0
 18401  00401C  0100               	movlb	0	; () banked
 18402  00401E  6F69               	movwf	___almod@sign& (0+255),b
 18403                           
 18404                           ; BSR set to: 0
 18405  004020  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18406  004022  D00A               	goto	l2306
 18407                           
 18408                           ; BSR set to: 0
 18409  004024  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18410  004026  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18411  004028  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18412  00402A  6D60               	negf	___almod@dividend& (0+255),b
 18413  00402C  0E00               	movlw	0
 18414  00402E  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18415  004030  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18416  004032  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18417                           
 18418                           ; BSR set to: 0
 18419  004034  0E01               	movlw	1
 18420  004036  6F69               	movwf	___almod@sign& (0+255),b
 18421  004038                     l2306:
 18422                           
 18423                           ; BSR set to: 0
 18424                           
 18425                           ; BSR set to: 0
 18426  004038  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18427  00403A  D008               	goto	l2307
 18428                           
 18429                           ; BSR set to: 0
 18430  00403C  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18431  00403E  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18432  004040  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18433  004042  6D64               	negf	___almod@divisor& (0+255),b
 18434  004044  0E00               	movlw	0
 18435  004046  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18436  004048  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18437  00404A  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18438  00404C                     l2307:
 18439                           
 18440                           ; BSR set to: 0
 18441                           
 18442                           ; BSR set to: 0
 18443  00404C  5164               	movf	___almod@divisor& (0+255),w,b
 18444  00404E  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18445  004050  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18446  004052  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18447  004054  B4D8               	btfsc	status,2,c
 18448  004056  D024               	goto	l2314
 18449                           
 18450                           ; BSR set to: 0
 18451  004058  0E01               	movlw	1
 18452  00405A  6F68               	movwf	___almod@counter& (0+255),b
 18453  00405C  D006               	goto	l2309
 18454  00405E                     
 18455                           ; BSR set to: 0
 18456                           
 18457                           ; BSR set to: 0
 18458  00405E  90D8               	bcf	status,0,c
 18459  004060  3764               	rlcf	___almod@divisor& (0+255),f,b
 18460  004062  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18461  004064  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18462  004066  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18463  004068  2B68               	incf	___almod@counter& (0+255),f,b
 18464  00406A                     l2309:
 18465                           
 18466                           ; BSR set to: 0
 18467                           
 18468                           ; BSR set to: 0
 18469  00406A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18470  00406C  D7F8               	goto	l2310
 18471  00406E                     u8490:
 18472                           
 18473                           ; BSR set to: 0
 18474                           
 18475                           ; BSR set to: 0
 18476                           
 18477                           ; BSR set to: 0
 18478  00406E  5164               	movf	___almod@divisor& (0+255),w,b
 18479  004070  5D60               	subwf	___almod@dividend& (0+255),w,b
 18480  004072  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18481  004074  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18482  004076  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18483  004078  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18484  00407A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18485  00407C  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18486  00407E  A0D8               	btfss	status,0,c
 18487  004080  D008               	goto	l2313
 18488                           
 18489                           ; BSR set to: 0
 18490  004082  5164               	movf	___almod@divisor& (0+255),w,b
 18491  004084  5F60               	subwf	___almod@dividend& (0+255),f,b
 18492  004086  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18493  004088  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18494  00408A  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18495  00408C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18496  00408E  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18497  004090  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18498  004092                     l2313:
 18499                           
 18500                           ; BSR set to: 0
 18501                           
 18502                           ; BSR set to: 0
 18503  004092  90D8               	bcf	status,0,c
 18504  004094  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18505  004096  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18506  004098  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18507  00409A  3364               	rrcf	___almod@divisor& (0+255),f,b
 18508                           
 18509                           ; BSR set to: 0
 18510  00409C  2F68               	decfsz	___almod@counter& (0+255),f,b
 18511  00409E  D7E7               	goto	u8490
 18512  0040A0                     l2314:
 18513                           
 18514                           ; BSR set to: 0
 18515                           
 18516                           ; BSR set to: 0
 18517                           
 18518                           ; BSR set to: 0
 18519  0040A0  5169               	movf	___almod@sign& (0+255),w,b
 18520  0040A2  B4D8               	btfsc	status,2,c
 18521  0040A4  D008               	goto	l2315
 18522                           
 18523                           ; BSR set to: 0
 18524  0040A6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18525  0040A8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18526  0040AA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18527  0040AC  6D60               	negf	___almod@dividend& (0+255),b
 18528  0040AE  0E00               	movlw	0
 18529  0040B0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18530  0040B2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18531  0040B4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18532  0040B6                     l2315:
 18533                           
 18534                           ; BSR set to: 0
 18535                           
 18536                           ; BSR set to: 0
 18537  0040B6  C060  F060         	movff	___almod@dividend,?___almod
 18538  0040BA  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18539  0040BE  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18540  0040C2  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18541  0040C6  0012               	return	
 18542  0040C8                     __end_of___almod:
 18543                           	opt stack 0
 18544                           tblptru	equ	0xFF8
 18545                           tblptrh	equ	0xFF7
 18546                           tblptrl	equ	0xFF6
 18547                           tablat	equ	0xFF5
 18548                           prodh	equ	0xFF4
 18549                           prodl	equ	0xFF3
 18550                           intcon	equ	0xFF2
 18551                           intcon3	equ	0xFF0
 18552                           postinc0	equ	0xFEE
 18553                           wreg	equ	0xFE8
 18554                           indf1	equ	0xFE7
 18555                           postdec1	equ	0xFE5
 18556                           fsr1h	equ	0xFE2
 18557                           fsr1l	equ	0xFE1
 18558                           indf2	equ	0xFDF
 18559                           fsr2h	equ	0xFDA
 18560                           fsr2l	equ	0xFD9
 18561                           status	equ	0xFD8
 18562                           
 18563 ;; *************** function _TMRapp_ClearBitFlags *****************
 18564 ;; Defined at:
 18565 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 18566 ;; Parameters:    Size  Location     Type
 18567 ;;		None
 18568 ;; Auto vars:     Size  Location     Type
 18569 ;;		None
 18570 ;; Return value:  Size  Location     Type
 18571 ;;                  1    wreg      void 
 18572 ;; Registers used:
 18573 ;;		wreg, status,2
 18574 ;; Tracked objects:
 18575 ;;		On entry : 0/0
 18576 ;;		On exit  : 0/0
 18577 ;;		Unchanged: 0/0
 18578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18579 ;;      Params:         0       0       0       0       0       0       0       0       0
 18580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18582 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18583 ;;Total ram usage:        0 bytes
 18584 ;; Hardware stack levels used:    1
 18585 ;; Hardware stack levels required when called:   11
 18586 ;; This function calls:
 18587 ;;		Nothing
 18588 ;; This function is called by:
 18589 ;;		_moteHandler
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593                           	psect	text61
 18594  0058EA                     __ptext61:
 18595                           	opt stack 0
 18596  0058EA                     _TMRapp_ClearBitFlags:
 18597                           	opt stack 18
 18598                           
 18599                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;incstack = 0
 18603  0058EA  0E00               	movlw	0
 18604  0058EC  0100               	movlb	0	; () banked
 18605  0058EE  6FF8               	movwf	_appTimer& (0+255),b
 18606                           
 18607                           ; BSR set to: 0
 18608  0058F0  0012               	return		;funcret
 18609  0058F2                     __end_of_TMRapp_ClearBitFlags:
 18610                           	opt stack 0
 18611                           tblptru	equ	0xFF8
 18612                           tblptrh	equ	0xFF7
 18613                           tblptrl	equ	0xFF6
 18614                           tablat	equ	0xFF5
 18615                           prodh	equ	0xFF4
 18616                           prodl	equ	0xFF3
 18617                           intcon	equ	0xFF2
 18618                           intcon3	equ	0xFF0
 18619                           postinc0	equ	0xFEE
 18620                           wreg	equ	0xFE8
 18621                           indf1	equ	0xFE7
 18622                           postdec1	equ	0xFE5
 18623                           fsr1h	equ	0xFE2
 18624                           fsr1l	equ	0xFE1
 18625                           indf2	equ	0xFDF
 18626                           fsr2h	equ	0xFDA
 18627                           fsr2l	equ	0xFD9
 18628                           status	equ	0xFD8
 18629                           
 18630 ;; *************** function _MOTEapp_TimerBasedTask *****************
 18631 ;; Defined at:
 18632 ;;		line 1027 in file "../Includes/Board/MOTEapp.c"
 18633 ;; Parameters:    Size  Location     Type
 18634 ;;  timerTask       1    wreg     struct .
 18635 ;; Auto vars:     Size  Location     Type
 18636 ;;  timerTask       1    0[BANK0 ] struct .
 18637 ;; Return value:  Size  Location     Type
 18638 ;;                  1    wreg      void 
 18639 ;; Registers used:
 18640 ;;		wreg, status,2, status,0
 18641 ;; Tracked objects:
 18642 ;;		On entry : 0/0
 18643 ;;		On exit  : 0/0
 18644 ;;		Unchanged: 0/0
 18645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18646 ;;      Params:         0       0       0       0       0       0       0       0       0
 18647 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18649 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18650 ;;Total ram usage:        1 bytes
 18651 ;; Hardware stack levels used:    1
 18652 ;; Hardware stack levels required when called:   11
 18653 ;; This function calls:
 18654 ;;		Nothing
 18655 ;; This function is called by:
 18656 ;;		_moteHandler
 18657 ;; This function uses a non-reentrant model
 18658 ;;
 18659                           
 18660                           	psect	text62
 18661  0056C6                     __ptext62:
 18662                           	opt stack 0
 18663  0056C6                     _MOTEapp_TimerBasedTask:
 18664                           	opt stack 18
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;incstack = 0
 18668                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 18669  0056C6  0100               	movlb	0	; () banked
 18670  0056C8  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 18671                           
 18672                           ;MOTEapp.c: 1032: if (timerTask.mSecTenTick)
 18673  0056CA  0100               	movlb	0	; () banked
 18674  0056CC  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 18675  0056CE  D003               	goto	l605
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;MOTEapp.c: 1033: {
 18679                           ;MOTEapp.c: 1035: m10SecTicker++;
 18680  0056D0  0101               	movlb	1	; () banked
 18681  0056D2  4B56               	infsnz	_m10SecTicker& (0+255),f,b
 18682  0056D4  2B57               	incf	(_m10SecTicker+1)& (0+255),f,b
 18683  0056D6                     l605:
 18684                           
 18685                           ;MOTEapp.c: 1041: }
 18686                           ;MOTEapp.c: 1042: if (timerTask.SecTick)
 18687                           
 18688                           ; BSR set to: 1
 18689                           
 18690                           ;MOTEapp.c: 1038: {
 18691                           
 18692                           ; BSR set to: 1
 18693                           
 18694                           ; BSR set to: 1
 18695  0056D6  0100               	movlb	0	; () banked
 18696  0056D8  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;MOTEapp.c: 1043: {
 18700                           ;MOTEapp.c: 1045: secTicker++;
 18701  0056DA  2BF0               	incf	_secTicker& (0+255),f,b
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;MOTEapp.c: 1046: }
 18705                           ;MOTEapp.c: 1047: if (timerTask.MinTick)
 18706                           
 18707                           ; BSR set to: 0
 18708  0056DC  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 18709  0056DE  0012               	return	
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;MOTEapp.c: 1048: {
 18713                           ;MOTEapp.c: 1050: minTicker++;
 18714  0056E0  0101               	movlb	1	; () banked
 18715  0056E2  2B61               	incf	_minTicker& (0+255),f,b
 18716                           
 18717                           ; BSR set to: 1
 18718                           
 18719                           ; BSR set to: 1
 18720                           
 18721                           ;MOTEapp.c: 1057: {
 18722                           
 18723                           ; BSR set to: 1
 18724                           
 18725                           ; BSR set to: 1
 18726                           
 18727                           ;MOTEapp.c: 1053: {
 18728                           
 18729                           ; BSR set to: 1
 18730                           
 18731                           ; BSR set to: 1
 18732  0056E4  0012               	return	
 18733  0056E6                     __end_of_MOTEapp_TimerBasedTask:
 18734                           	opt stack 0
 18735                           tblptru	equ	0xFF8
 18736                           tblptrh	equ	0xFF7
 18737                           tblptrl	equ	0xFF6
 18738                           tablat	equ	0xFF5
 18739                           prodh	equ	0xFF4
 18740                           prodl	equ	0xFF3
 18741                           intcon	equ	0xFF2
 18742                           intcon3	equ	0xFF0
 18743                           postinc0	equ	0xFEE
 18744                           wreg	equ	0xFE8
 18745                           indf1	equ	0xFE7
 18746                           postdec1	equ	0xFE5
 18747                           fsr1h	equ	0xFE2
 18748                           fsr1l	equ	0xFE1
 18749                           indf2	equ	0xFDF
 18750                           fsr2h	equ	0xFDA
 18751                           fsr2l	equ	0xFD9
 18752                           status	equ	0xFD8
 18753                           
 18754 ;; *************** function _moteApp_clearCommand *****************
 18755 ;; Defined at:
 18756 ;;		line 1259 in file "../Includes/Board/MOTEapp.c"
 18757 ;; Parameters:    Size  Location     Type
 18758 ;;		None
 18759 ;; Auto vars:     Size  Location     Type
 18760 ;;		None
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  1    wreg      void 
 18763 ;; Registers used:
 18764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18765 ;; Tracked objects:
 18766 ;;		On entry : 0/0
 18767 ;;		On exit  : 0/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18770 ;;      Params:         0       0       0       0       0       0       0       0       0
 18771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18773 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18774 ;;Total ram usage:        0 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:   14
 18777 ;; This function calls:
 18778 ;;		_sendCommand
 18779 ;; This function is called by:
 18780 ;;		_main
 18781 ;; This function uses a non-reentrant model
 18782 ;;
 18783                           
 18784                           	psect	text63
 18785  005878                     __ptext63:
 18786                           	opt stack 0
 18787  005878                     _moteApp_clearCommand:
 18788                           	opt stack 16
 18789                           
 18790                           ;MOTEapp.c: 1261: sendCommand("\r\n");
 18791                           
 18792                           ;incstack = 0
 18793  005878  0E05               	movlw	low (STR_177+23)
 18794  00587A  0100               	movlb	0	; () banked
 18795  00587C  6F61               	movwf	sendCommand@string& (0+255),b
 18796  00587E  0E7A               	movlw	high (STR_177+23)
 18797  005880  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18798  005882  EC0F  F02A         	call	_sendCommand	;wreg free
 18799  005886  0012               	return		;funcret
 18800  005888                     __end_of_moteApp_clearCommand:
 18801                           	opt stack 0
 18802                           tblptru	equ	0xFF8
 18803                           tblptrh	equ	0xFF7
 18804                           tblptrl	equ	0xFF6
 18805                           tablat	equ	0xFF5
 18806                           prodh	equ	0xFF4
 18807                           prodl	equ	0xFF3
 18808                           intcon	equ	0xFF2
 18809                           intcon3	equ	0xFF0
 18810                           postinc0	equ	0xFEE
 18811                           wreg	equ	0xFE8
 18812                           indf1	equ	0xFE7
 18813                           postdec1	equ	0xFE5
 18814                           fsr1h	equ	0xFE2
 18815                           fsr1l	equ	0xFE1
 18816                           indf2	equ	0xFDF
 18817                           fsr2h	equ	0xFDA
 18818                           fsr2l	equ	0xFD9
 18819                           status	equ	0xFD8
 18820                           
 18821 ;; *************** function _sendCommand *****************
 18822 ;; Defined at:
 18823 ;;		line 1114 in file "../Includes/Board/MOTEapp.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 18826 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 18827 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 18828 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 18829 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 18830 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 18831 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 18832 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 18833 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 18834 ;; Auto vars:     Size  Location     Type
 18835 ;;		None
 18836 ;; Return value:  Size  Location     Type
 18837 ;;                  1    wreg      void 
 18838 ;; Registers used:
 18839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18840 ;; Tracked objects:
 18841 ;;		On entry : 0/0
 18842 ;;		On exit  : 0/0
 18843 ;;		Unchanged: 0/0
 18844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18845 ;;      Params:         0       2       0       0       0       0       0       0       0
 18846 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18848 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18849 ;;Total ram usage:        2 bytes
 18850 ;; Hardware stack levels used:    1
 18851 ;; Hardware stack levels required when called:   13
 18852 ;; This function calls:
 18853 ;;		_EUSART_Write
 18854 ;;		_EndLine
 18855 ;; This function is called by:
 18856 ;;		_moduleResync
 18857 ;;		_moduleSleep
 18858 ;;		_moteJoiningProcess
 18859 ;;		_MOTEapp_SetDataRateSetting
 18860 ;;		_moteApp_clearCommand
 18861 ;;		_moteApp_toggleLeds
 18862 ;;		_moteApp_setSensorsInput
 18863 ;;		_moteApp_getTempValue
 18864 ;;		_moteApp_getLightValue
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           	psect	text64
 18869  00541E                     __ptext64:
 18870                           	opt stack 0
 18871  00541E                     _sendCommand:
 18872                           	opt stack 14
 18873                           
 18874                           ;MOTEapp.c: 1117: while (*string)
 18875                           
 18876                           ;incstack = 0
 18877  00541E  D00B               	goto	l636
 18878  005420                     
 18879                           ;MOTEapp.c: 1118: {
 18880                           ;MOTEapp.c: 1119: EUSART_Write(*string++);
 18881  005420  C061  FFF6         	movff	sendCommand@string,tblptrl
 18882  005424  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18883  005428                     	if	0	;tblptru may be non-zero
 18884  005428                     	endif
 18885  005428                     	if	0	;tblptru may be non-zero
 18886  005428                     	endif
 18887  005428  0008               	tblrd		*
 18888  00542A  50F5               	movf	tablat,w,c
 18889  00542C  ECC9  F028         	call	_EUSART_Write
 18890  005430  0100               	movlb	0	; () banked
 18891  005432  4B61               	infsnz	sendCommand@string& (0+255),f,b
 18892  005434  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 18893  005436                     l636:
 18894                           
 18895                           ; BSR set to: 0
 18896  005436  C061  FFF6         	movff	sendCommand@string,tblptrl
 18897  00543A  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 18898  00543E                     	if	0	;tblptru may be non-zero
 18899  00543E                     	endif
 18900  00543E                     	if	0	;tblptru may be non-zero
 18901  00543E                     	endif
 18902  00543E  0008               	tblrd		*
 18903  005440  50F5               	movf	tablat,w,c
 18904  005442  0900               	iorlw	0
 18905  005444  A4D8               	btfss	status,2,c
 18906  005446  D7EC               	goto	l637
 18907                           
 18908                           ;MOTEapp.c: 1120: }
 18909                           ;MOTEapp.c: 1121: EndLine();
 18910  005448  EC44  F02C         	call	_EndLine	;wreg free
 18911  00544C  0012               	return		;funcret
 18912  00544E                     __end_of_sendCommand:
 18913                           	opt stack 0
 18914                           tblptru	equ	0xFF8
 18915                           tblptrh	equ	0xFF7
 18916                           tblptrl	equ	0xFF6
 18917                           tablat	equ	0xFF5
 18918                           prodh	equ	0xFF4
 18919                           prodl	equ	0xFF3
 18920                           intcon	equ	0xFF2
 18921                           intcon3	equ	0xFF0
 18922                           postinc0	equ	0xFEE
 18923                           wreg	equ	0xFE8
 18924                           indf1	equ	0xFE7
 18925                           postdec1	equ	0xFE5
 18926                           fsr1h	equ	0xFE2
 18927                           fsr1l	equ	0xFE1
 18928                           indf2	equ	0xFDF
 18929                           fsr2h	equ	0xFDA
 18930                           fsr2l	equ	0xFD9
 18931                           status	equ	0xFD8
 18932                           
 18933 ;; *************** function _EndLine *****************
 18934 ;; Defined at:
 18935 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
 18936 ;; Parameters:    Size  Location     Type
 18937 ;;		None
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;		None
 18940 ;; Return value:  Size  Location     Type
 18941 ;;                  1    wreg      void 
 18942 ;; Registers used:
 18943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18949 ;;      Params:         0       0       0       0       0       0       0       0       0
 18950 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18952 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18953 ;;Total ram usage:        0 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:   12
 18956 ;; This function calls:
 18957 ;;		_EUSART_Write
 18958 ;; This function is called by:
 18959 ;;		_sendCommand
 18960 ;;		_sendDataCommand
 18961 ;; This function uses a non-reentrant model
 18962 ;;
 18963                           
 18964                           	psect	text65
 18965  005888                     __ptext65:
 18966                           	opt stack 0
 18967  005888                     _EndLine:
 18968                           	opt stack 14
 18969                           
 18970                           ;MOTEapp.c: 1110: EUSART_Write(0x0D);
 18971                           
 18972                           ;incstack = 0
 18973  005888  0E0D               	movlw	13
 18974  00588A  ECC9  F028         	call	_EUSART_Write
 18975                           
 18976                           ;MOTEapp.c: 1111: EUSART_Write(0x0A);
 18977  00588E  0E0A               	movlw	10
 18978  005890  ECC9  F028         	call	_EUSART_Write
 18979  005894  0012               	return		;funcret
 18980  005896                     __end_of_EndLine:
 18981                           	opt stack 0
 18982                           tblptru	equ	0xFF8
 18983                           tblptrh	equ	0xFF7
 18984                           tblptrl	equ	0xFF6
 18985                           tablat	equ	0xFF5
 18986                           prodh	equ	0xFF4
 18987                           prodl	equ	0xFF3
 18988                           intcon	equ	0xFF2
 18989                           intcon3	equ	0xFF0
 18990                           postinc0	equ	0xFEE
 18991                           wreg	equ	0xFE8
 18992                           indf1	equ	0xFE7
 18993                           postdec1	equ	0xFE5
 18994                           fsr1h	equ	0xFE2
 18995                           fsr1l	equ	0xFE1
 18996                           indf2	equ	0xFDF
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8
 19000                           
 19001 ;; *************** function _USBapp_handlerState *****************
 19002 ;; Defined at:
 19003 ;;		line 78 in file "../Includes/Board/USBapp.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;  state           1    wreg     enum E5833
 19006 ;; Auto vars:     Size  Location     Type
 19007 ;;  state           1    0[BANK0 ] enum E5833
 19008 ;; Return value:  Size  Location     Type
 19009 ;;                  1    wreg      void 
 19010 ;; Registers used:
 19011 ;;		wreg
 19012 ;; Tracked objects:
 19013 ;;		On entry : 0/0
 19014 ;;		On exit  : 0/0
 19015 ;;		Unchanged: 0/0
 19016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19017 ;;      Params:         0       0       0       0       0       0       0       0       0
 19018 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19020 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19021 ;;Total ram usage:        1 bytes
 19022 ;; Hardware stack levels used:    1
 19023 ;; Hardware stack levels required when called:   11
 19024 ;; This function calls:
 19025 ;;		Nothing
 19026 ;; This function is called by:
 19027 ;;		_main
 19028 ;; This function uses a non-reentrant model
 19029 ;;
 19030                           
 19031                           	psect	text66
 19032  0058CE                     __ptext66:
 19033                           	opt stack 0
 19034  0058CE                     _USBapp_handlerState:
 19035                           	opt stack 19
 19036                           
 19037                           ;incstack = 0
 19038                           ;USBapp_handlerState@state stored from wreg
 19039  0058CE  0100               	movlb	0	; () banked
 19040  0058D0  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 19041                           
 19042                           ;USBapp.c: 80: usbState = state;
 19043  0058D2  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 19044  0058D6  0012               	return		;funcret
 19045  0058D8                     __end_of_USBapp_handlerState:
 19046                           	opt stack 0
 19047                           tblptru	equ	0xFF8
 19048                           tblptrh	equ	0xFF7
 19049                           tblptrl	equ	0xFF6
 19050                           tablat	equ	0xFF5
 19051                           prodh	equ	0xFF4
 19052                           prodl	equ	0xFF3
 19053                           intcon	equ	0xFF2
 19054                           intcon3	equ	0xFF0
 19055                           postinc0	equ	0xFEE
 19056                           wreg	equ	0xFE8
 19057                           indf1	equ	0xFE7
 19058                           postdec1	equ	0xFE5
 19059                           fsr1h	equ	0xFE2
 19060                           fsr1l	equ	0xFE1
 19061                           indf2	equ	0xFDF
 19062                           fsr2h	equ	0xFDA
 19063                           fsr2l	equ	0xFD9
 19064                           status	equ	0xFD8
 19065                           
 19066 ;; *************** function _USBapp_Handler *****************
 19067 ;; Defined at:
 19068 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19069 ;; Parameters:    Size  Location     Type
 19070 ;;		None
 19071 ;; Auto vars:     Size  Location     Type
 19072 ;;  buttonPress     1   23[BANK0 ] enum E5867
 19073 ;; Return value:  Size  Location     Type
 19074 ;;                  1    wreg      void 
 19075 ;; Registers used:
 19076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19077 ;; Tracked objects:
 19078 ;;		On entry : 0/0
 19079 ;;		On exit  : 0/0
 19080 ;;		Unchanged: 0/0
 19081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19082 ;;      Params:         0       0       0       0       0       0       0       0       0
 19083 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19085 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19086 ;;Total ram usage:        1 bytes
 19087 ;; Hardware stack levels used:    1
 19088 ;; Hardware stack levels required when called:   16
 19089 ;; This function calls:
 19090 ;;		_USBapp_DeviceCdcEmulatorHandler
 19091 ;;		_oled_clear
 19092 ;;		_oled_putString
 19093 ;;		_service_pushbutton
 19094 ;; This function is called by:
 19095 ;;		_main
 19096 ;; This function uses a non-reentrant model
 19097 ;;
 19098                           
 19099                           	psect	text67
 19100  003EB6                     __ptext67:
 19101                           	opt stack 0
 19102  003EB6                     _USBapp_Handler:
 19103                           	opt stack 14
 19104                           
 19105                           ;USBapp.c: 90: {
 19106                           ;USBapp.c: 91: switch(usbState)
 19107                           
 19108                           ;incstack = 0
 19109                           ;USBapp.c: 89: do
 19110  003EB6  D03E               	goto	l845
 19111  003EB8                     
 19112                           ;USBapp.c: 94: while(1);
 19113  003EB8  D7FF               	goto	l846
 19114  003EBA                     
 19115                           ;USBapp.c: 98: oled_clear();
 19116  003EBA  ECAD  F02B         	call	_oled_clear	;wreg free
 19117                           
 19118                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19119  003EBE  0E10               	movlw	low STR_187
 19120  003EC0  0100               	movlb	0	; () banked
 19121  003EC2  6F72               	movwf	oled_putString@string& (0+255),b
 19122  003EC4  0E7F               	movlw	high STR_187
 19123  003EC6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19124  003EC8  0E01               	movlw	1
 19125  003ECA  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19126  003ECC  0E00               	movlw	0
 19127  003ECE  6F75               	movwf	oled_putString@start_page& (0+255),b
 19128  003ED0  EC73  F025         	call	_oled_putString	;wreg free
 19129                           
 19130                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19131  003ED4  0E61               	movlw	low STR_188
 19132  003ED6  0100               	movlb	0	; () banked
 19133  003ED8  6F72               	movwf	oled_putString@string& (0+255),b
 19134  003EDA  0E7F               	movlw	high STR_188
 19135  003EDC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19136  003EDE  0E02               	movlw	2
 19137  003EE0  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19138  003EE2  0E01               	movlw	1
 19139  003EE4  6F75               	movwf	oled_putString@start_page& (0+255),b
 19140  003EE6  EC73  F025         	call	_oled_putString	;wreg free
 19141                           
 19142                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19143  003EEA  0E28               	movlw	low STR_189
 19144  003EEC  0100               	movlb	0	; () banked
 19145  003EEE  6F72               	movwf	oled_putString@string& (0+255),b
 19146  003EF0  0E7E               	movlw	high STR_189
 19147  003EF2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19148  003EF4  0E00               	movlw	0
 19149  003EF6  6F74               	movwf	oled_putString@station_dot& (0+255),b
 19150  003EF8  0E02               	movlw	2
 19151  003EFA  6F75               	movwf	oled_putString@start_page& (0+255),b
 19152  003EFC  EC73  F025         	call	_oled_putString	;wreg free
 19153                           
 19154                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19155  003F00  0E01               	movlw	1
 19156  003F02  0100               	movlb	0	; () banked
 19157  003F04  D005               	goto	L16
 19158  003F06                     
 19159                           ; BSR set to: 0
 19160                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19161                           
 19162                           ; BSR set to: 0
 19163  003F06  0E20               	movlw	32
 19164  003F08  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19165  003F0A  D001               	goto	l853
 19166  003F0C  D01F               	goto	l850
 19167  003F0E                     l853:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;USBapp.c: 111: }
 19171                           ;USBapp.c: 112: usbState = USB_CDC;
 19172                           
 19173                           ; BSR set to: 0
 19174  003F0E  0E02               	movlw	2
 19175  003F10                     L16:
 19176  003F10  6FEA               	movwf	_usbState& (0+255),b
 19177                           
 19178                           ;USBapp.c: 113: break;
 19179  003F12  D01C               	goto	l850
 19180  003F14                     
 19181                           ; BSR set to: 0
 19182                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19183                           
 19184                           ; BSR set to: 0
 19185  003F14  EC44  F01A         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 19186                           
 19187                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 19188  003F18  0E03               	movlw	3
 19189  003F1A  0100               	movlb	0	; () banked
 19190  003F1C  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 19194  003F1E  EC3C  F025         	call	_service_pushbutton	;wreg free
 19195  003F22  0100               	movlb	0	; () banked
 19196  003F24  6F77               	movwf	USBapp_Handler@buttonPress& (0+255),b
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;USBapp.c: 122: if (buttonPress != Released )
 19200  003F26  0E03               	movlw	3
 19201  003F28  1977               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 19202  003F2A  B4D8               	btfsc	status,2,c
 19203  003F2C  D00F               	goto	l850
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;USBapp.c: 123: {
 19207                           ;USBapp.c: 124: exitUSB = USB_BAT;
 19208  003F2E  0E02               	movlw	2
 19209  003F30  6FF9               	movwf	_exitUSB& (0+255),b
 19210                           
 19211                           ; BSR set to: 0
 19212                           ;USBapp.c: 127: }
 19213                           
 19214                           ; BSR set to: 0
 19215                           ;USBapp.c: 125: }
 19216                           ;USBapp.c: 126: break;
 19217  003F32  D00C               	goto	l850
 19218  003F34                     l845:
 19219                           
 19220                           ; BSR set to: 0
 19221  003F34  0100               	movlb	0	; () banked
 19222  003F36  51EA               	movf	_usbState& (0+255),w,b
 19223                           
 19224                           ; Switch size 1, requested type "space"
 19225                           ; Number of cases is 3, Range of values is 0 to 2
 19226                           ; switch strategies available:
 19227                           ; Name         Instructions Cycles
 19228                           ; simple_byte           10     6 (average)
 19229                           ;	Chosen strategy is simple_byte
 19230  003F38  0A00               	xorlw	0	; case 0
 19231  003F3A  B4D8               	btfsc	status,2,c
 19232  003F3C  D7BE               	goto	l851
 19233  003F3E  0A01               	xorlw	1	; case 1
 19234  003F40  B4D8               	btfsc	status,2,c
 19235  003F42  D7E1               	goto	l852
 19236  003F44  0A03               	xorlw	3	; case 2
 19237  003F46  B4D8               	btfsc	status,2,c
 19238  003F48  D7E5               	goto	l855
 19239  003F4A  D7B6               	goto	l846
 19240  003F4C                     l850:
 19241                           
 19242                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 19243                           
 19244                           ; BSR set to: 0
 19245  003F4C  A080               	btfss	3968,0,c	;volatile
 19246  003F4E  D004               	goto	u9910
 19247  003F50  0100               	movlb	0	; () banked
 19248  003F52  51F9               	movf	_exitUSB& (0+255),w,b
 19249  003F54  B4D8               	btfsc	status,2,c
 19250  003F56  D7EE               	goto	l845
 19251  003F58                     u9910:
 19252                           
 19253                           ;USBapp.c: 129: __nop();
 19254                           
 19255                           ; BSR set to: 0
 19256  003F58  F000               	nop	
 19257                           
 19258                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 19259  003F5A  0E02               	movlw	2
 19260  003F5C  0100               	movlb	0	; () banked
 19261  003F5E  19F9               	xorwf	_exitUSB& (0+255),w,b
 19262  003F60  B4D8               	btfsc	status,2,c
 19263  003F62  0012               	return	
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;USBapp.c: 131: exitUSB = NO_USB;
 19267  003F64  0E00               	movlw	0
 19268  003F66  6FF9               	movwf	_exitUSB& (0+255),b
 19269  003F68  0012               	return	
 19270  003F6A                     __end_of_USBapp_Handler:
 19271                           	opt stack 0
 19272                           tblptru	equ	0xFF8
 19273                           tblptrh	equ	0xFF7
 19274                           tblptrl	equ	0xFF6
 19275                           tablat	equ	0xFF5
 19276                           prodh	equ	0xFF4
 19277                           prodl	equ	0xFF3
 19278                           intcon	equ	0xFF2
 19279                           intcon3	equ	0xFF0
 19280                           postinc0	equ	0xFEE
 19281                           wreg	equ	0xFE8
 19282                           indf1	equ	0xFE7
 19283                           postdec1	equ	0xFE5
 19284                           fsr1h	equ	0xFE2
 19285                           fsr1l	equ	0xFE1
 19286                           indf2	equ	0xFDF
 19287                           fsr2h	equ	0xFDA
 19288                           fsr2l	equ	0xFD9
 19289                           status	equ	0xFD8
 19290                           
 19291 ;; *************** function _service_pushbutton *****************
 19292 ;; Defined at:
 19293 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 19294 ;; Parameters:    Size  Location     Type
 19295 ;;		None
 19296 ;; Auto vars:     Size  Location     Type
 19297 ;;  bs              1    0[BANK0 ] enum E5748
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  1    wreg      enum E5836
 19300 ;; Registers used:
 19301 ;;		wreg, status,2, status,0
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19307 ;;      Params:         0       0       0       0       0       0       0       0       0
 19308 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19310 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19311 ;;Total ram usage:        1 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:   11
 19314 ;; This function calls:
 19315 ;;		Nothing
 19316 ;; This function is called by:
 19317 ;;		_moteHandler
 19318 ;;		_USBapp_Handler
 19319 ;; This function uses a non-reentrant model
 19320 ;;
 19321                           
 19322                           	psect	text68
 19323  004A78                     __ptext68:
 19324                           	opt stack 0
 19325  004A78                     _service_pushbutton:
 19326                           	opt stack 18
 19327                           
 19328                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 19329                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 19330                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;incstack = 0
 19334  004A78  0E00               	movlw	0
 19335  004A7A  0100               	movlb	0	; () banked
 19336  004A7C  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 19340  004A7E  A281               	btfss	3969,1,c	;volatile
 19341  004A80  D002               	goto	u8720
 19342                           
 19343                           ; BSR set to: 0
 19344  004A82  B081               	btfsc	3969,0,c	;volatile
 19345  004A84  D01A               	goto	l938
 19346  004A86                     u8720:
 19347                           
 19348                           ; BSR set to: 0
 19349                           ;buttons.c: 56: {
 19350                           ;buttons.c: 57: ++PB_Timer;
 19351                           
 19352                           ; BSR set to: 0
 19353  004A86  0E01               	movlw	1
 19354  004A88  0101               	movlb	1	; () banked
 19355  004A8A  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 19356  004A8C  0E00               	movlw	0
 19357  004A8E  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 19358  004A90  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 19359  004A92  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 19360                           
 19361                           ;buttons.c: 61: if (PB_Timer == 55)
 19362  004A94  0E37               	movlw	55
 19363  004A96  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 19364  004A98  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 19365  004A9A  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 19366  004A9C  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 19367  004A9E  A4D8               	btfss	status,2,c
 19368  004AA0  D009               	goto	l941
 19369                           
 19370                           ; BSR set to: 1
 19371                           ;buttons.c: 62: {
 19372                           ;buttons.c: 63: Release_Timer = 0;
 19373  004AA2  0E00               	movlw	0
 19374  004AA4  0100               	movlb	0	; () banked
 19375  004AA6  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 19379  004AA8  B281               	btfsc	3969,1,c	;volatile
 19380  004AAA  D002               	goto	l942
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;buttons.c: 66: {
 19384                           ;buttons.c: 67: bs = ShortPress1;
 19385  004AAC  0E01               	movlw	1
 19386  004AAE  D018               	goto	L19
 19387  004AB0                     l942:
 19388                           
 19389                           ; BSR set to: 0
 19390                           ;buttons.c: 69: else
 19391                           ;buttons.c: 70: {
 19392                           ;buttons.c: 71: bs = ShortPress2;
 19393                           
 19394                           ; BSR set to: 0
 19395  004AB0  0E02               	movlw	2
 19396  004AB2  D016               	goto	L19
 19397  004AB4                     l941:
 19398                           
 19399                           ;buttons.c: 74: else
 19400                           ;buttons.c: 75: {
 19401                           ;buttons.c: 76: bs = NoButton;
 19402                           
 19403                           ; BSR set to: 0
 19404  004AB4  0E00               	movlw	0
 19405  004AB6  0100               	movlb	0	; () banked
 19406  004AB8  D013               	goto	L19
 19407  004ABA                     l938:
 19408                           
 19409                           ; BSR set to: 0
 19410                           ;buttons.c: 79: else
 19411                           ;buttons.c: 80: {
 19412                           ;buttons.c: 81: if (Release_Timer == 20)
 19413                           
 19414                           ; BSR set to: 0
 19415  004ABA  0E14               	movlw	20
 19416  004ABC  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 19417  004ABE  A4D8               	btfss	status,2,c
 19418  004AC0  D00D               	goto	l946
 19419                           
 19420                           ; BSR set to: 0
 19421                           ;buttons.c: 82: {
 19422                           ;buttons.c: 83: PB_Timer = 0;
 19423  004AC2  0E00               	movlw	0
 19424  004AC4  0101               	movlb	1	; () banked
 19425  004AC6  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 19426  004AC8  0E00               	movlw	0
 19427  004ACA  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 19428  004ACC  0E00               	movlw	0
 19429  004ACE  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 19430  004AD0  0E00               	movlw	0
 19431  004AD2  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 19432                           
 19433                           ;buttons.c: 84: Release_Timer = 0;
 19434  004AD4  0E00               	movlw	0
 19435  004AD6  0100               	movlb	0	; () banked
 19436  004AD8  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 19437                           
 19438                           ;buttons.c: 85: }
 19439  004ADA  D001               	goto	l947
 19440  004ADC                     l946:
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;buttons.c: 86: else
 19444                           ;buttons.c: 87: {
 19445                           ;buttons.c: 88: Release_Timer++;
 19446                           
 19447                           ; BSR set to: 0
 19448  004ADC  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 19449  004ADE                     l947:
 19450                           
 19451                           ; BSR set to: 0
 19452                           ;buttons.c: 89: }
 19453                           ;buttons.c: 90: bs = Released;
 19454                           
 19455                           ; BSR set to: 0
 19456  004ADE  0E03               	movlw	3
 19457  004AE0                     L19:
 19458  004AE0  6F60               	movwf	service_pushbutton@bs& (0+255),b
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;buttons.c: 91: }
 19462                           ;buttons.c: 93: return bs;
 19463                           
 19464                           ; BSR set to: 0
 19465  004AE2  5160               	movf	service_pushbutton@bs& (0+255),w,b
 19466  004AE4  0012               	return	
 19467  004AE6                     __end_of_service_pushbutton:
 19468                           	opt stack 0
 19469                           tblptru	equ	0xFF8
 19470                           tblptrh	equ	0xFF7
 19471                           tblptrl	equ	0xFF6
 19472                           tablat	equ	0xFF5
 19473                           prodh	equ	0xFF4
 19474                           prodl	equ	0xFF3
 19475                           intcon	equ	0xFF2
 19476                           intcon3	equ	0xFF0
 19477                           postinc0	equ	0xFEE
 19478                           wreg	equ	0xFE8
 19479                           indf1	equ	0xFE7
 19480                           postdec1	equ	0xFE5
 19481                           fsr1h	equ	0xFE2
 19482                           fsr1l	equ	0xFE1
 19483                           indf2	equ	0xFDF
 19484                           fsr2h	equ	0xFDA
 19485                           fsr2l	equ	0xFD9
 19486                           status	equ	0xFD8
 19487                           
 19488 ;; *************** function _oled_putString *****************
 19489 ;; Defined at:
 19490 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19491 ;; Parameters:    Size  Location     Type
 19492 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 19493 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 19494 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 19495 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 19496 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 19497 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 19498 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 19499 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 19500 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 19501 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 19502 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 19503 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 19504 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 19505 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 19506 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 19507 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 19508 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 19509 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 19510 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 19511 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 19512 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 19513 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 19514 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 19515 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 19516 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 19517 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 19518 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 19519 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 19520 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 19521 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 19522 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 19523 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 19524 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 19525 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 19526 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 19527 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 19528 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 19529 ;;  station_dot     1   20[BANK0 ] unsigned char 
 19530 ;;  start_page      1   21[BANK0 ] unsigned char 
 19531 ;; Auto vars:     Size  Location     Type
 19532 ;;  index           1   22[BANK0 ] unsigned char 
 19533 ;; Return value:  Size  Location     Type
 19534 ;;                  1    wreg      void 
 19535 ;; Registers used:
 19536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19537 ;; Tracked objects:
 19538 ;;		On entry : 0/0
 19539 ;;		On exit  : 0/0
 19540 ;;		Unchanged: 0/0
 19541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19542 ;;      Params:         0       4       0       0       0       0       0       0       0
 19543 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19545 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19546 ;;Total ram usage:        5 bytes
 19547 ;; Hardware stack levels used:    1
 19548 ;; Hardware stack levels required when called:   14
 19549 ;; This function calls:
 19550 ;;		_oled_putChar
 19551 ;; This function is called by:
 19552 ;;		_main
 19553 ;;		_test_oled
 19554 ;;		_test_switch
 19555 ;;		_test_comms
 19556 ;;		_test_leds
 19557 ;;		_moteHandler
 19558 ;;		_moteJoiningProcess
 19559 ;;		_moteRunningProcess
 19560 ;;		_moteApp_testSensors
 19561 ;;		_USBapp_Handler
 19562 ;;		_oled_putUint8
 19563 ;;		_oled_putint8
 19564 ;;		_test_adc
 19565 ;;		_test_rf
 19566 ;;		_oled_putUint16
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570                           	psect	text69
 19571  004AE6                     __ptext69:
 19572                           	opt stack 0
 19573  004AE6                     _oled_putString:
 19574                           	opt stack 14
 19575                           
 19576                           ;SSD1306oLED.c: 333: uint8_t index;
 19577                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;incstack = 0
 19581  004AE6  C074  F076         	movff	oled_putString@station_dot,oled_putString@index
 19582  004AEA  0E0F               	movlw	15
 19583  004AEC  0100               	movlb	0	; () banked
 19584  004AEE  6576               	cpfsgt	oled_putString@index& (0+255),b
 19585  004AF0  D001               	goto	l1045
 19586  004AF2  0012               	return	
 19587  004AF4                     l1045:
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;SSD1306oLED.c: 335: {
 19591                           ;SSD1306oLED.c: 336: if (*string != 0)
 19592                           
 19593                           ; BSR set to: 0
 19594  004AF4  C072  FFF6         	movff	oled_putString@string,tblptrl
 19595  004AF8  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19596  004AFC  6AF8               	clrf	tblptru,c
 19597  004AFE  0E07               	movlw	(high __ramtop+-1)
 19598  004B00  64F7               	cpfsgt	tblptrh,c
 19599  004B02  D003               	bra	u6357
 19600  004B04  0008               	tblrd		*
 19601  004B06  50F5               	movf	tablat,w,c
 19602  004B08  D005               	bra	u6350
 19603  004B0A                     u6357:
 19604  004B0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19605  004B0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19606  004B12  50EF               	movf	indf0,w,c
 19607  004B14                     u6350:
 19608  004B14  0900               	iorlw	0
 19609  004B16  B4D8               	btfsc	status,2,c
 19610  004B18  0012               	return	
 19611                           
 19612                           ;SSD1306oLED.c: 337: {
 19613                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 19614  004B1A  C076  F062         	movff	oled_putString@index,oled_putChar@station_dot
 19615  004B1E  C075  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 19616  004B22  C072  FFF6         	movff	oled_putString@string,tblptrl
 19617  004B26  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 19618  004B2A  6AF8               	clrf	tblptru,c
 19619  004B2C  0E07               	movlw	(high __ramtop+-1)
 19620  004B2E  64F7               	cpfsgt	tblptrh,c
 19621  004B30  D003               	bra	u6377
 19622  004B32  0008               	tblrd		*
 19623  004B34  50F5               	movf	tablat,w,c
 19624  004B36  D005               	bra	u6370
 19625  004B38                     u6377:
 19626  004B38  CFF6 FFE9          	movff	tblptrl,fsr0l
 19627  004B3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19628  004B40  50EF               	movf	indf0,w,c
 19629  004B42                     u6370:
 19630  004B42  EC8D  F023         	call	_oled_putChar
 19631                           
 19632                           ;SSD1306oLED.c: 339: *string++;
 19633  004B46  0100               	movlb	0	; () banked
 19634  004B48  4B72               	infsnz	oled_putString@string& (0+255),f,b
 19635  004B4A  2B73               	incf	(oled_putString@string+1)& (0+255),f,b
 19636                           
 19637                           ; BSR set to: 0
 19638                           
 19639                           ; BSR set to: 0
 19640                           
 19641                           ; BSR set to: 0
 19642                           ;SSD1306oLED.c: 341: else
 19643                           ;SSD1306oLED.c: 342: {
 19644                           ;SSD1306oLED.c: 343: break;
 19645                           
 19646                           ;SSD1306oLED.c: 340: }
 19647  004B4C  2B76               	incf	oled_putString@index& (0+255),f,b
 19648                           
 19649                           ; BSR set to: 0
 19650  004B4E  0E0F               	movlw	15
 19651  004B50  D7CE               	goto	L20
 19652  004B52                     __end_of_oled_putString:
 19653                           	opt stack 0
 19654                           tblptru	equ	0xFF8
 19655                           tblptrh	equ	0xFF7
 19656                           tblptrl	equ	0xFF6
 19657                           tablat	equ	0xFF5
 19658                           prodh	equ	0xFF4
 19659                           prodl	equ	0xFF3
 19660                           intcon	equ	0xFF2
 19661                           intcon3	equ	0xFF0
 19662                           indf0	equ	0xFEF
 19663                           postinc0	equ	0xFEE
 19664                           fsr0h	equ	0xFEA
 19665                           fsr0l	equ	0xFE9
 19666                           wreg	equ	0xFE8
 19667                           indf1	equ	0xFE7
 19668                           postdec1	equ	0xFE5
 19669                           fsr1h	equ	0xFE2
 19670                           fsr1l	equ	0xFE1
 19671                           indf2	equ	0xFDF
 19672                           fsr2h	equ	0xFDA
 19673                           fsr2l	equ	0xFD9
 19674                           status	equ	0xFD8
 19675                           
 19676 ;; *************** function _oled_clear *****************
 19677 ;; Defined at:
 19678 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 19679 ;; Parameters:    Size  Location     Type
 19680 ;;		None
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;		None
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  1    wreg      void 
 19685 ;; Registers used:
 19686 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19692 ;;      Params:         0       0       0       0       0       0       0       0       0
 19693 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19695 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19696 ;;Total ram usage:        0 bytes
 19697 ;; Hardware stack levels used:    1
 19698 ;; Hardware stack levels required when called:   15
 19699 ;; This function calls:
 19700 ;;		_oled_clearRow
 19701 ;; This function is called by:
 19702 ;;		_main
 19703 ;;		_test_powerup
 19704 ;;		_test_oled
 19705 ;;		_test_switch
 19706 ;;		_moteHandler
 19707 ;;		_moteJoiningProcess
 19708 ;;		_moteRunningProcess
 19709 ;;		_moteApp_testSensors
 19710 ;;		_USBapp_Handler
 19711 ;;		_oled_init
 19712 ;;		_test_adc
 19713 ;;		_test_rf
 19714 ;; This function uses a non-reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text70
 19718  00575A                     __ptext70:
 19719                           	opt stack 0
 19720  00575A                     _oled_clear:
 19721                           	opt stack 13
 19722                           
 19723                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 19724                           
 19725                           ;incstack = 0
 19726  00575A  0E00               	movlw	0
 19727  00575C  EC2E  F02B         	call	_oled_clearRow
 19728                           
 19729                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 19730  005760  0E01               	movlw	1
 19731  005762  EC2E  F02B         	call	_oled_clearRow
 19732                           
 19733                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 19734  005766  0E02               	movlw	2
 19735  005768  EC2E  F02B         	call	_oled_clearRow
 19736                           
 19737                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 19738  00576C  0E03               	movlw	3
 19739  00576E  EC2E  F02B         	call	_oled_clearRow
 19740  005772  0012               	return		;funcret
 19741  005774                     __end_of_oled_clear:
 19742                           	opt stack 0
 19743                           tblptru	equ	0xFF8
 19744                           tblptrh	equ	0xFF7
 19745                           tblptrl	equ	0xFF6
 19746                           tablat	equ	0xFF5
 19747                           prodh	equ	0xFF4
 19748                           prodl	equ	0xFF3
 19749                           intcon	equ	0xFF2
 19750                           intcon3	equ	0xFF0
 19751                           indf0	equ	0xFEF
 19752                           postinc0	equ	0xFEE
 19753                           fsr0h	equ	0xFEA
 19754                           fsr0l	equ	0xFE9
 19755                           wreg	equ	0xFE8
 19756                           indf1	equ	0xFE7
 19757                           postdec1	equ	0xFE5
 19758                           fsr1h	equ	0xFE2
 19759                           fsr1l	equ	0xFE1
 19760                           indf2	equ	0xFDF
 19761                           fsr2h	equ	0xFDA
 19762                           fsr2l	equ	0xFD9
 19763                           status	equ	0xFD8
 19764                           
 19765 ;; *************** function _oled_clearRow *****************
 19766 ;; Defined at:
 19767 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 19768 ;; Parameters:    Size  Location     Type
 19769 ;;  page            1    wreg     unsigned char 
 19770 ;; Auto vars:     Size  Location     Type
 19771 ;;  page            1   12[BANK0 ] unsigned char 
 19772 ;;  index           1   13[BANK0 ] unsigned char 
 19773 ;; Return value:  Size  Location     Type
 19774 ;;                  1    wreg      void 
 19775 ;; Registers used:
 19776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19777 ;; Tracked objects:
 19778 ;;		On entry : 0/0
 19779 ;;		On exit  : 0/0
 19780 ;;		Unchanged: 0/0
 19781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19782 ;;      Params:         0       0       0       0       0       0       0       0       0
 19783 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19784 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19785 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19786 ;;Total ram usage:        2 bytes
 19787 ;; Hardware stack levels used:    1
 19788 ;; Hardware stack levels required when called:   14
 19789 ;; This function calls:
 19790 ;;		_oled_putChar
 19791 ;; This function is called by:
 19792 ;;		_oled_clear
 19793 ;; This function uses a non-reentrant model
 19794 ;;
 19795                           
 19796                           	psect	text71
 19797  00565C                     __ptext71:
 19798                           	opt stack 0
 19799  00565C                     _oled_clearRow:
 19800                           	opt stack 13
 19801                           
 19802                           ;incstack = 0
 19803                           ;oled_clearRow@page stored from wreg
 19804  00565C  0100               	movlb	0	; () banked
 19805  00565E  6F6C               	movwf	oled_clearRow@page& (0+255),b
 19806                           
 19807                           ;SSD1306oLED.c: 358: uint8_t index;
 19808                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 19809  005660  0E00               	movlw	0
 19810  005662  0100               	movlb	0	; () banked
 19811  005664  6F6D               	movwf	oled_clearRow@index& (0+255),b
 19812  005666                     l7896:
 19813                           
 19814                           ; BSR set to: 0
 19815  005666  0E0F               	movlw	15
 19816  005668  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 19817  00566A  D001               	goto	l1055
 19818  00566C  0012               	return	
 19819  00566E                     l1055:
 19820                           
 19821                           ; BSR set to: 0
 19822                           ;SSD1306oLED.c: 361: {
 19823                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 19824                           
 19825                           ; BSR set to: 0
 19826  00566E  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 19827  005672  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 19828  005676  0E20               	movlw	32
 19829  005678  EC8D  F023         	call	_oled_putChar
 19830  00567C  0100               	movlb	0	; () banked
 19831  00567E  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 19832  005680  D7F2               	goto	l7896
 19833  005682                     __end_of_oled_clearRow:
 19834                           	opt stack 0
 19835                           tblptru	equ	0xFF8
 19836                           tblptrh	equ	0xFF7
 19837                           tblptrl	equ	0xFF6
 19838                           tablat	equ	0xFF5
 19839                           prodh	equ	0xFF4
 19840                           prodl	equ	0xFF3
 19841                           intcon	equ	0xFF2
 19842                           intcon3	equ	0xFF0
 19843                           indf0	equ	0xFEF
 19844                           postinc0	equ	0xFEE
 19845                           fsr0h	equ	0xFEA
 19846                           fsr0l	equ	0xFE9
 19847                           wreg	equ	0xFE8
 19848                           indf1	equ	0xFE7
 19849                           postdec1	equ	0xFE5
 19850                           fsr1h	equ	0xFE2
 19851                           fsr1l	equ	0xFE1
 19852                           indf2	equ	0xFDF
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8
 19856                           
 19857 ;; *************** function _oled_putChar *****************
 19858 ;; Defined at:
 19859 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;  k               1    wreg     unsigned char 
 19862 ;;  station_dot     1    2[BANK0 ] unsigned char 
 19863 ;;  start_page      1    3[BANK0 ] unsigned char 
 19864 ;; Auto vars:     Size  Location     Type
 19865 ;;  k               1   10[BANK0 ] unsigned char 
 19866 ;;  index           1   11[BANK0 ] unsigned char 
 19867 ;; Return value:  Size  Location     Type
 19868 ;;                  1    wreg      void 
 19869 ;; Registers used:
 19870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19871 ;; Tracked objects:
 19872 ;;		On entry : 0/0
 19873 ;;		On exit  : 0/0
 19874 ;;		Unchanged: 0/0
 19875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19876 ;;      Params:         0       2       0       0       0       0       0       0       0
 19877 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19878 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19879 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19880 ;;Total ram usage:       10 bytes
 19881 ;; Hardware stack levels used:    1
 19882 ;; Hardware stack levels required when called:   13
 19883 ;; This function calls:
 19884 ;;		_Set_Column_Address
 19885 ;;		_Set_Page_Address
 19886 ;;		_oled_writeData
 19887 ;; This function is called by:
 19888 ;;		_moteApp_testSensors
 19889 ;;		_oled_putString
 19890 ;;		_oled_clearRow
 19891 ;;		_test_adc
 19892 ;; This function uses a non-reentrant model
 19893 ;;
 19894                           
 19895                           	psect	text72
 19896  00471A                     __ptext72:
 19897                           	opt stack 0
 19898  00471A                     _oled_putChar:
 19899                           	opt stack 14
 19900                           
 19901                           ; BSR set to: 0
 19902                           ;incstack = 0
 19903                           ;oled_putChar@k stored from wreg
 19904  00471A  0100               	movlb	0	; () banked
 19905  00471C  6F6A               	movwf	oled_putChar@k& (0+255),b
 19906                           
 19907                           ;SSD1306oLED.c: 320: uint8_t index;
 19908                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 19909  00471E  0100               	movlb	0	; () banked
 19910  004720  5163               	movf	oled_putChar@start_page& (0+255),w,b
 19911  004722  EC07  F02C         	call	_Set_Page_Address
 19912                           
 19913                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 19914  004726  0100               	movlb	0	; () banked
 19915  004728  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 19916  00472A  0D08               	mullw	8
 19917  00472C  50F3               	movf	prodl,w,c
 19918  00472E  0F04               	addlw	4
 19919  004730  EC91  F02B         	call	_Set_Column_Address
 19920                           
 19921                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 19922  004734  0E00               	movlw	0
 19923  004736  0100               	movlb	0	; () banked
 19924  004738  6F6B               	movwf	oled_putChar@index& (0+255),b
 19925  00473A                     l7760:
 19926                           
 19927                           ; BSR set to: 0
 19928  00473A  0E07               	movlw	7
 19929  00473C  656B               	cpfsgt	oled_putChar@index& (0+255),b
 19930  00473E  D001               	goto	l1040
 19931  004740  0012               	return	
 19932  004742                     l1040:
 19933                           
 19934                           ; BSR set to: 0
 19935                           ;SSD1306oLED.c: 326: {
 19936                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 19937                           
 19938                           ; BSR set to: 0
 19939  004742  516B               	movf	oled_putChar@index& (0+255),w,b
 19940  004744  0D01               	mullw	1
 19941  004746  0E00               	movlw	0
 19942  004748  6F64               	movwf	??_oled_putChar& (0+255),b
 19943  00474A  0EFF               	movlw	255
 19944  00474C  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 19945  00474E  516A               	movf	oled_putChar@k& (0+255),w,b
 19946  004750  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 19947  004752  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 19948  004754  90D8               	bcf	status,0,c
 19949  004756  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19950  004758  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19951  00475A  90D8               	bcf	status,0,c
 19952  00475C  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19953  00475E  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19954  004760  90D8               	bcf	status,0,c
 19955  004762  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 19956  004764  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 19957  004766  5164               	movf	??_oled_putChar& (0+255),w,b
 19958  004768  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 19959  00476A  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 19960  00476C  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 19961  00476E  C1FB  F068         	movff	_selectedFont,??_oled_putChar+4
 19962  004772  C1FC  F069         	movff	_selectedFont+1,??_oled_putChar+5
 19963  004776  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 19964  004778  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19965  00477A  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 19966  00477C  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19967  00477E  50F3               	movf	prodl,w,c
 19968  004780  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 19969  004782  50F4               	movf	prodh,w,c
 19970  004784  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 19971  004786  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 19972  00478A  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 19973  00478E                     	if	0	;tblptru may be non-zero
 19974  00478E                     	endif
 19975  00478E                     	if	0	;tblptru may be non-zero
 19976  00478E                     	endif
 19977  00478E  0008               	tblrd		*
 19978  004790  50F5               	movf	tablat,w,c
 19979  004792  ECC7  F02B         	call	_oled_writeData
 19980  004796  0100               	movlb	0	; () banked
 19981  004798  2B6B               	incf	oled_putChar@index& (0+255),f,b
 19982  00479A  D7CF               	goto	l7760
 19983  00479C                     __end_of_oled_putChar:
 19984                           	opt stack 0
 19985                           tblptru	equ	0xFF8
 19986                           tblptrh	equ	0xFF7
 19987                           tblptrl	equ	0xFF6
 19988                           tablat	equ	0xFF5
 19989                           prodh	equ	0xFF4
 19990                           prodl	equ	0xFF3
 19991                           intcon	equ	0xFF2
 19992                           intcon3	equ	0xFF0
 19993                           indf0	equ	0xFEF
 19994                           postinc0	equ	0xFEE
 19995                           fsr0h	equ	0xFEA
 19996                           fsr0l	equ	0xFE9
 19997                           wreg	equ	0xFE8
 19998                           indf1	equ	0xFE7
 19999                           postdec1	equ	0xFE5
 20000                           fsr1h	equ	0xFE2
 20001                           fsr1l	equ	0xFE1
 20002                           indf2	equ	0xFDF
 20003                           fsr2h	equ	0xFDA
 20004                           fsr2l	equ	0xFD9
 20005                           status	equ	0xFD8
 20006                           
 20007 ;; *************** function _oled_writeData *****************
 20008 ;; Defined at:
 20009 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20010 ;; Parameters:    Size  Location     Type
 20011 ;;  data            1    wreg     unsigned char 
 20012 ;; Auto vars:     Size  Location     Type
 20013 ;;  data            1    0[BANK0 ] unsigned char 
 20014 ;; Return value:  Size  Location     Type
 20015 ;;                  1    wreg      void 
 20016 ;; Registers used:
 20017 ;;		wreg
 20018 ;; Tracked objects:
 20019 ;;		On entry : 0/0
 20020 ;;		On exit  : 0/0
 20021 ;;		Unchanged: 0/0
 20022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20023 ;;      Params:         0       0       0       0       0       0       0       0       0
 20024 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20025 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20026 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20027 ;;Total ram usage:        1 bytes
 20028 ;; Hardware stack levels used:    1
 20029 ;; Hardware stack levels required when called:   11
 20030 ;; This function calls:
 20031 ;;		Nothing
 20032 ;; This function is called by:
 20033 ;;		_oled_putChar
 20034 ;; This function uses a non-reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text73
 20038  00578E                     __ptext73:
 20039                           	opt stack 0
 20040  00578E                     _oled_writeData:
 20041                           	opt stack 15
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;incstack = 0
 20045                           ;oled_writeData@data stored from wreg
 20046  00578E  0100               	movlb	0	; () banked
 20047  005790  6F60               	movwf	oled_writeData@data& (0+255),b
 20048                           
 20049                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20050  005792  988A               	bcf	3978,4,c	;volatile
 20051                           
 20052                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20053  005794  808B               	bsf	3979,0,c	;volatile
 20054                           
 20055                           ;SSD1306oLED.c: 446: LATD=data;
 20056  005796  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 20057                           
 20058                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20059  00579A  928B               	bcf	3979,1,c	;volatile
 20060                           
 20061                           ;SSD1306oLED.c: 448: __nop();
 20062  00579C  F000               	nop	
 20063                           
 20064                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20065  00579E  828B               	bsf	3979,1,c	;volatile
 20066                           
 20067                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20068  0057A0  888A               	bsf	3978,4,c	;volatile
 20069  0057A2  0012               	return	
 20070  0057A4                     __end_of_oled_writeData:
 20071                           	opt stack 0
 20072                           tblptru	equ	0xFF8
 20073                           tblptrh	equ	0xFF7
 20074                           tblptrl	equ	0xFF6
 20075                           tablat	equ	0xFF5
 20076                           prodh	equ	0xFF4
 20077                           prodl	equ	0xFF3
 20078                           intcon	equ	0xFF2
 20079                           intcon3	equ	0xFF0
 20080                           indf0	equ	0xFEF
 20081                           postinc0	equ	0xFEE
 20082                           fsr0h	equ	0xFEA
 20083                           fsr0l	equ	0xFE9
 20084                           wreg	equ	0xFE8
 20085                           indf1	equ	0xFE7
 20086                           postdec1	equ	0xFE5
 20087                           fsr1h	equ	0xFE2
 20088                           fsr1l	equ	0xFE1
 20089                           indf2	equ	0xFDF
 20090                           fsr2h	equ	0xFDA
 20091                           fsr2l	equ	0xFD9
 20092                           status	equ	0xFD8
 20093                           
 20094 ;; *************** function _Set_Page_Address *****************
 20095 ;; Defined at:
 20096 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;  address         1    wreg     unsigned char 
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;  address         1    1[BANK0 ] unsigned char 
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1    wreg      void 
 20103 ;; Registers used:
 20104 ;;		wreg, status,2, status,0, cstack
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/0
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0
 20111 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20113 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20114 ;;Total ram usage:        1 bytes
 20115 ;; Hardware stack levels used:    1
 20116 ;; Hardware stack levels required when called:   12
 20117 ;; This function calls:
 20118 ;;		_oled_writeCommand
 20119 ;; This function is called by:
 20120 ;;		_oled_putChar
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text74
 20125  00580E                     __ptext74:
 20126                           	opt stack 0
 20127  00580E                     _Set_Page_Address:
 20128                           	opt stack 14
 20129                           
 20130                           ;incstack = 0
 20131                           ;Set_Page_Address@address stored from wreg
 20132  00580E  0100               	movlb	0	; () banked
 20133  005810  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20134                           
 20135                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20136  005812  0100               	movlb	0	; () banked
 20137  005814  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20138  005816  09B0               	iorlw	176
 20139  005818  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20143  00581A  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20144  00581C  ECD2  F02B         	call	_oled_writeCommand
 20145  005820  0012               	return	
 20146  005822                     __end_of_Set_Page_Address:
 20147                           	opt stack 0
 20148                           tblptru	equ	0xFF8
 20149                           tblptrh	equ	0xFF7
 20150                           tblptrl	equ	0xFF6
 20151                           tablat	equ	0xFF5
 20152                           prodh	equ	0xFF4
 20153                           prodl	equ	0xFF3
 20154                           intcon	equ	0xFF2
 20155                           intcon3	equ	0xFF0
 20156                           indf0	equ	0xFEF
 20157                           postinc0	equ	0xFEE
 20158                           fsr0h	equ	0xFEA
 20159                           fsr0l	equ	0xFE9
 20160                           wreg	equ	0xFE8
 20161                           indf1	equ	0xFE7
 20162                           postdec1	equ	0xFE5
 20163                           fsr1h	equ	0xFE2
 20164                           fsr1l	equ	0xFE1
 20165                           indf2	equ	0xFDF
 20166                           fsr2h	equ	0xFDA
 20167                           fsr2l	equ	0xFD9
 20168                           status	equ	0xFD8
 20169                           
 20170 ;; *************** function _Set_Column_Address *****************
 20171 ;; Defined at:
 20172 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20173 ;; Parameters:    Size  Location     Type
 20174 ;;  address         1    wreg     unsigned char 
 20175 ;; Auto vars:     Size  Location     Type
 20176 ;;  address         1    1[BANK0 ] unsigned char 
 20177 ;; Return value:  Size  Location     Type
 20178 ;;                  1    wreg      void 
 20179 ;; Registers used:
 20180 ;;		wreg, status,2, status,0, cstack
 20181 ;; Tracked objects:
 20182 ;;		On entry : 0/0
 20183 ;;		On exit  : 0/0
 20184 ;;		Unchanged: 0/0
 20185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20186 ;;      Params:         0       0       0       0       0       0       0       0       0
 20187 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20189 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20190 ;;Total ram usage:        1 bytes
 20191 ;; Hardware stack levels used:    1
 20192 ;; Hardware stack levels required when called:   12
 20193 ;; This function calls:
 20194 ;;		_oled_writeCommand
 20195 ;; This function is called by:
 20196 ;;		_oled_putChar
 20197 ;; This function uses a non-reentrant model
 20198 ;;
 20199                           
 20200                           	psect	text75
 20201  005722                     __ptext75:
 20202                           	opt stack 0
 20203  005722                     _Set_Column_Address:
 20204                           	opt stack 14
 20205                           
 20206                           ;incstack = 0
 20207                           ;Set_Column_Address@address stored from wreg
 20208  005722  0100               	movlb	0	; () banked
 20209  005724  6F61               	movwf	Set_Column_Address@address& (0+255),b
 20210                           
 20211                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 20212  005726  0100               	movlb	0	; () banked
 20213  005728  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 20214  00572A  0B0F               	andlw	15
 20215  00572C  0910               	iorlw	16
 20216  00572E  ECD2  F02B         	call	_oled_writeCommand
 20217                           
 20218                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 20219  005732  0100               	movlb	0	; () banked
 20220  005734  5161               	movf	Set_Column_Address@address& (0+255),w,b
 20221  005736  0B0F               	andlw	15
 20222  005738  ECD2  F02B         	call	_oled_writeCommand
 20223  00573C  0012               	return	
 20224  00573E                     __end_of_Set_Column_Address:
 20225                           	opt stack 0
 20226                           tblptru	equ	0xFF8
 20227                           tblptrh	equ	0xFF7
 20228                           tblptrl	equ	0xFF6
 20229                           tablat	equ	0xFF5
 20230                           prodh	equ	0xFF4
 20231                           prodl	equ	0xFF3
 20232                           intcon	equ	0xFF2
 20233                           intcon3	equ	0xFF0
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           fsr0h	equ	0xFEA
 20237                           fsr0l	equ	0xFE9
 20238                           wreg	equ	0xFE8
 20239                           indf1	equ	0xFE7
 20240                           postdec1	equ	0xFE5
 20241                           fsr1h	equ	0xFE2
 20242                           fsr1l	equ	0xFE1
 20243                           indf2	equ	0xFDF
 20244                           fsr2h	equ	0xFDA
 20245                           fsr2l	equ	0xFD9
 20246                           status	equ	0xFD8
 20247                           
 20248 ;; *************** function _oled_writeCommand *****************
 20249 ;; Defined at:
 20250 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  command         1    wreg     unsigned char 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  command         1    0[BANK0 ] unsigned char 
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0
 20265 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20266 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20267 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20268 ;;Total ram usage:        1 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:   11
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_Set_Page_Address
 20275 ;;		_Set_Column_Address
 20276 ;;		_oled_devInit
 20277 ;;		_oled_setDisplay
 20278 ;;		_oled_displayOff
 20279 ;;		_oled_setContrastControlRegister
 20280 ;;		_oled_initialDispayLine
 20281 ;;		_oled_powerControl
 20282 ;;		_oled_regulorResistorSelect
 20283 ;; This function uses a non-reentrant model
 20284 ;;
 20285                           
 20286                           	psect	text76
 20287  0057A4                     __ptext76:
 20288                           	opt stack 0
 20289  0057A4                     _oled_writeCommand:
 20290                           	opt stack 14
 20291                           
 20292                           ;incstack = 0
 20293                           ;oled_writeCommand@command stored from wreg
 20294  0057A4  0100               	movlb	0	; () banked
 20295  0057A6  6F60               	movwf	oled_writeCommand@command& (0+255),b
 20296                           
 20297                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 20298  0057A8  988A               	bcf	3978,4,c	;volatile
 20299                           
 20300                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 20301  0057AA  908B               	bcf	3979,0,c	;volatile
 20302                           
 20303                           ;SSD1306oLED.c: 434: LATD=command;
 20304  0057AC  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 20305                           
 20306                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 20307  0057B0  928B               	bcf	3979,1,c	;volatile
 20308                           
 20309                           ;SSD1306oLED.c: 436: __nop();
 20310  0057B2  F000               	nop	
 20311                           
 20312                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 20313  0057B4  828B               	bsf	3979,1,c	;volatile
 20314                           
 20315                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 20316  0057B6  888A               	bsf	3978,4,c	;volatile
 20317  0057B8  0012               	return	
 20318  0057BA                     __end_of_oled_writeCommand:
 20319                           	opt stack 0
 20320                           tblptru	equ	0xFF8
 20321                           tblptrh	equ	0xFF7
 20322                           tblptrl	equ	0xFF6
 20323                           tablat	equ	0xFF5
 20324                           prodh	equ	0xFF4
 20325                           prodl	equ	0xFF3
 20326                           intcon	equ	0xFF2
 20327                           intcon3	equ	0xFF0
 20328                           indf0	equ	0xFEF
 20329                           postinc0	equ	0xFEE
 20330                           fsr0h	equ	0xFEA
 20331                           fsr0l	equ	0xFE9
 20332                           wreg	equ	0xFE8
 20333                           indf1	equ	0xFE7
 20334                           postdec1	equ	0xFE5
 20335                           fsr1h	equ	0xFE2
 20336                           fsr1l	equ	0xFE1
 20337                           indf2	equ	0xFDF
 20338                           fsr2h	equ	0xFDA
 20339                           fsr2l	equ	0xFD9
 20340                           status	equ	0xFD8
 20341                           
 20342 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 20343 ;; Defined at:
 20344 ;;		line 162 in file "../Includes/Board/USBapp.c"
 20345 ;; Parameters:    Size  Location     Type
 20346 ;;		None
 20347 ;; Auto vars:     Size  Location     Type
 20348 ;;		None
 20349 ;; Return value:  Size  Location     Type
 20350 ;;                  1    wreg      void 
 20351 ;; Registers used:
 20352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20353 ;; Tracked objects:
 20354 ;;		On entry : 0/0
 20355 ;;		On exit  : 0/0
 20356 ;;		Unchanged: 0/0
 20357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20358 ;;      Params:         0       0       0       0       0       0       0       0       0
 20359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20360 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20361 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20362 ;;Total ram usage:        1 bytes
 20363 ;; Hardware stack levels used:    1
 20364 ;; Hardware stack levels required when called:   13
 20365 ;; This function calls:
 20366 ;;		_CDCTxService
 20367 ;;		_EUSART_Read
 20368 ;;		_EUSART_Write
 20369 ;;		_MOTEapp_setResponseReady
 20370 ;;		_USBapp_getrxByteFlag
 20371 ;;		_getsUSBUSART
 20372 ;;		_putUSBUSART
 20373 ;; This function is called by:
 20374 ;;		_USBapp_Handler
 20375 ;; This function uses a non-reentrant model
 20376 ;;
 20377                           
 20378                           	psect	text77
 20379  003488                     __ptext77:
 20380                           	opt stack 0
 20381  003488                     _USBapp_DeviceCdcEmulatorHandler:
 20382                           	opt stack 16
 20383                           
 20384                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 20385                           
 20386                           ;incstack = 0
 20387  003488  0E1F               	movlw	31
 20388  00348A  0100               	movlb	0	; () banked
 20389  00348C  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 20390  00348E  0012               	return	
 20391                           
 20392                           ; BSR set to: 0
 20393  003490  B260               	btfsc	3936,1,c	;volatile
 20394  003492  0012               	return	
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 20398                           
 20399                           ; BSR set to: 0
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;USBapp.c: 166: return;
 20403  003494  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20404  003496  A4D8               	btfss	status,2,c
 20405  003498  D011               	goto	l880
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;USBapp.c: 169: {
 20409                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 20410  00349A  0E80               	movlw	low _USB_Buffer
 20411  00349C  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20412  00349E  0E02               	movlw	high _USB_Buffer
 20413  0034A0  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20414  0034A2  0E40               	movlw	64
 20415  0034A4  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20416  0034A6  ECA4  F01E         	call	_getsUSBUSART	;wreg free
 20417  0034AA  0100               	movlb	0	; () banked
 20418  0034AC  6FE6               	movwf	_LastRS232Out& (0+255),b
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;USBapp.c: 171: if(LastRS232Out > 0)
 20422  0034AE  51E6               	movf	_LastRS232Out& (0+255),w,b
 20423  0034B0  B4D8               	btfsc	status,2,c
 20424  0034B2  D004               	goto	l880
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;USBapp.c: 172: {
 20428                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 20429  0034B4  0E01               	movlw	1
 20430  0034B6  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20431                           
 20432                           ;USBapp.c: 174: RS232cp = 0;
 20433  0034B8  0E00               	movlw	0
 20434  0034BA  6FE5               	movwf	_RS232cp& (0+255),b
 20435  0034BC                     l880:
 20436                           
 20437                           ; BSR set to: 0
 20438                           ;USBapp.c: 175: }
 20439                           ;USBapp.c: 176: }
 20440                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 20441                           
 20442                           ; BSR set to: 0
 20443  0034BC  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 20444  0034BE  A4D8               	btfss	status,2,c
 20445                           
 20446                           ; BSR set to: 0
 20447  0034C0  A2AC               	btfss	4012,1,c	;volatile
 20448  0034C2  D013               	goto	l882
 20449                           
 20450                           ; BSR set to: 0
 20451                           ;USBapp.c: 180: {
 20452                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 20453  0034C4  51E5               	movf	_RS232cp& (0+255),w,b
 20454  0034C6  0D01               	mullw	1
 20455  0034C8  0E80               	movlw	low _USB_Buffer
 20456  0034CA  24F3               	addwf	prodl,w,c
 20457  0034CC  6ED9               	movwf	fsr2l,c
 20458  0034CE  0E02               	movlw	high _USB_Buffer
 20459  0034D0  20F4               	addwfc	prodh,w,c
 20460  0034D2  6EDA               	movwf	fsr2h,c
 20461  0034D4  50DF               	movf	indf2,w,c
 20462  0034D6  ECC9  F028         	call	_EUSART_Write
 20463                           
 20464                           ;USBapp.c: 183: ++RS232cp;
 20465  0034DA  0100               	movlb	0	; () banked
 20466  0034DC  2BE5               	incf	_RS232cp& (0+255),f,b
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 20470  0034DE  51E6               	movf	_LastRS232Out& (0+255),w,b
 20471  0034E0  19E5               	xorwf	_RS232cp& (0+255),w,b
 20472  0034E2  A4D8               	btfss	status,2,c
 20473  0034E4  D002               	goto	l882
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 20477  0034E6  0E00               	movlw	0
 20478  0034E8  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 20479  0034EA                     l882:
 20480                           
 20481                           ; BSR set to: 0
 20482                           ;USBapp.c: 186: }
 20483                           ;USBapp.c: 189: if ((eusartRxCount))
 20484                           
 20485                           ; BSR set to: 0
 20486  0034EA  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 20487  0034EC  B4D8               	btfsc	status,2,c
 20488  0034EE  D025               	goto	l884
 20489                           
 20490                           ; BSR set to: 0
 20491                           ;USBapp.c: 190: {
 20492                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 20493  0034F0  EC8B  F02C         	call	_USBapp_getrxByteFlag	;wreg free
 20494  0034F4  0900               	iorlw	0
 20495  0034F6  B4D8               	btfsc	status,2,c
 20496  0034F8  D020               	goto	l884
 20497  0034FA  0E3F               	movlw	63
 20498  0034FC  0100               	movlb	0	; () banked
 20499  0034FE  61E8               	cpfslt	_NextUSBOut& (0+255),b
 20500  003500  D01C               	goto	l884
 20501                           
 20502                           ; BSR set to: 0
 20503                           ;USBapp.c: 192: {
 20504                           ;USBapp.c: 193: __nop();
 20505  003502  F000               	nop	
 20506                           
 20507                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 20508  003504  EC24  F029         	call	_EUSART_Read	;wreg free
 20509  003508  0100               	movlb	0	; () banked
 20510  00350A  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 20511  00350C  51E8               	movf	_NextUSBOut& (0+255),w,b
 20512  00350E  0D01               	mullw	1
 20513  003510  0E80               	movlw	low _USB_Buffer
 20514  003512  24F3               	addwf	prodl,w,c
 20515  003514  6ED9               	movwf	fsr2l,c
 20516  003516  0E02               	movlw	high _USB_Buffer
 20517  003518  20F4               	addwfc	prodh,w,c
 20518  00351A  6EDA               	movwf	fsr2h,c
 20519  00351C  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;USBapp.c: 195: ++NextUSBOut;
 20523  003520  2BE8               	incf	_NextUSBOut& (0+255),f,b
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 20527  003522  51E8               	movf	_NextUSBOut& (0+255),w,b
 20528  003524  0D01               	mullw	1
 20529  003526  0E80               	movlw	low _USB_Buffer
 20530  003528  24F3               	addwf	prodl,w,c
 20531  00352A  6ED9               	movwf	fsr2l,c
 20532  00352C  0E02               	movlw	high _USB_Buffer
 20533  00352E  20F4               	addwfc	prodh,w,c
 20534  003530  6EDA               	movwf	fsr2h,c
 20535  003532  0E00               	movlw	0
 20536  003534  6EDF               	movwf	indf2,c
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;USBapp.c: 197: rxByteFlag = 0;
 20540  003536  0E00               	movlw	0
 20541  003538  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 20542  00353A                     l884:
 20543                           
 20544                           ;USBapp.c: 198: }
 20545                           ;USBapp.c: 199: }
 20546                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 20547                           
 20548                           ; BSR set to: 0
 20549                           
 20550                           ; BSR set to: 0
 20551  00353A  0100               	movlb	0	; () banked
 20552  00353C  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20553  00353E  A4D8               	btfss	status,2,c
 20554  003540  D010               	goto	l885
 20555                           
 20556                           ; BSR set to: 0
 20557  003542  51E8               	movf	_NextUSBOut& (0+255),w,b
 20558  003544  B4D8               	btfsc	status,2,c
 20559  003546  D00D               	goto	l885
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;USBapp.c: 204: {
 20563                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 20564  003548  0E80               	movlw	low _USB_Buffer
 20565  00354A  6F60               	movwf	putUSBUSART@data& (0+255),b
 20566  00354C  0E02               	movlw	high _USB_Buffer
 20567  00354E  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20568  003550  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 20569  003554  EC41  F02B         	call	_putUSBUSART	;wreg free
 20570                           
 20571                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 20572  003558  EC79  F02C         	call	_MOTEapp_setResponseReady	;wreg free
 20573                           
 20574                           ;USBapp.c: 207: NextUSBOut = 0;
 20575  00355C  0E00               	movlw	0
 20576  00355E  0100               	movlb	0	; () banked
 20577  003560  6FE8               	movwf	_NextUSBOut& (0+255),b
 20578  003562                     l885:
 20579                           
 20580                           ; BSR set to: 0
 20581                           ;USBapp.c: 208: }
 20582                           ;USBapp.c: 210: CDCTxService();
 20583                           
 20584                           ; BSR set to: 0
 20585  003562  ECE2  F012         	call	_CDCTxService	;wreg free
 20586  003566  0012               	return		;funcret
 20587  003568                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 20588                           	opt stack 0
 20589                           tblptru	equ	0xFF8
 20590                           tblptrh	equ	0xFF7
 20591                           tblptrl	equ	0xFF6
 20592                           tablat	equ	0xFF5
 20593                           prodh	equ	0xFF4
 20594                           prodl	equ	0xFF3
 20595                           intcon	equ	0xFF2
 20596                           intcon3	equ	0xFF0
 20597                           indf0	equ	0xFEF
 20598                           postinc0	equ	0xFEE
 20599                           fsr0h	equ	0xFEA
 20600                           fsr0l	equ	0xFE9
 20601                           wreg	equ	0xFE8
 20602                           indf1	equ	0xFE7
 20603                           postdec1	equ	0xFE5
 20604                           fsr1h	equ	0xFE2
 20605                           fsr1l	equ	0xFE1
 20606                           indf2	equ	0xFDF
 20607                           fsr2h	equ	0xFDA
 20608                           fsr2l	equ	0xFD9
 20609                           status	equ	0xFD8
 20610                           
 20611 ;; *************** function _putUSBUSART *****************
 20612 ;; Defined at:
 20613 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20614 ;; Parameters:    Size  Location     Type
 20615 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20616 ;;		 -> USB_Buffer(64), 
 20617 ;;  length          1    2[BANK0 ] unsigned char 
 20618 ;; Auto vars:     Size  Location     Type
 20619 ;;		None
 20620 ;; Return value:  Size  Location     Type
 20621 ;;                  1    wreg      void 
 20622 ;; Registers used:
 20623 ;;		wreg, status,2, status,0
 20624 ;; Tracked objects:
 20625 ;;		On entry : 0/0
 20626 ;;		On exit  : 0/0
 20627 ;;		Unchanged: 0/0
 20628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20629 ;;      Params:         0       3       0       0       0       0       0       0       0
 20630 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20632 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20633 ;;Total ram usage:        3 bytes
 20634 ;; Hardware stack levels used:    1
 20635 ;; Hardware stack levels required when called:   11
 20636 ;; This function calls:
 20637 ;;		Nothing
 20638 ;; This function is called by:
 20639 ;;		_USBapp_DeviceCdcEmulatorHandler
 20640 ;; This function uses a non-reentrant model
 20641 ;;
 20642                           
 20643                           	psect	text78
 20644  005682                     __ptext78:
 20645                           	opt stack 0
 20646  005682                     _putUSBUSART:
 20647                           	opt stack 17
 20648                           
 20649                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 20650                           
 20651                           ;incstack = 0
 20652  005682  94A3               	bcf	4003,2,c	;volatile
 20653                           
 20654                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 20655  005684  0100               	movlb	0	; () banked
 20656  005686  51EB               	movf	_cdc_trf_state& (0+255),w,b
 20657  005688  A4D8               	btfss	status,2,c
 20658  00568A  D00A               	goto	l2182
 20659                           
 20660                           ; BSR set to: 0
 20661                           ;usb_device_cdc.c: 530: {
 20662                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20663  00568C  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 20664  005690  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20665                           
 20666                           ; BSR set to: 0
 20667  005694  C062  F0DD         	movff	putUSBUSART@length,_cdc_tx_len
 20668                           
 20669                           ; BSR set to: 0
 20670  005698  0E01               	movlw	1
 20671  00569A  6FDC               	movwf	_cdc_mem_type& (0+255),b
 20672                           
 20673                           ; BSR set to: 0
 20674  00569C  0E01               	movlw	1
 20675  00569E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 20676  0056A0                     l2182:
 20677                           
 20678                           ; BSR set to: 0
 20679                           ;usb_device_cdc.c: 532: }
 20680                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 20681                           
 20682                           ; BSR set to: 0
 20683  0056A0  84A3               	bsf	4003,2,c	;volatile
 20684                           
 20685                           ; BSR set to: 0
 20686  0056A2  0012               	return		;funcret
 20687  0056A4                     __end_of_putUSBUSART:
 20688                           	opt stack 0
 20689                           tblptru	equ	0xFF8
 20690                           tblptrh	equ	0xFF7
 20691                           tblptrl	equ	0xFF6
 20692                           tablat	equ	0xFF5
 20693                           prodh	equ	0xFF4
 20694                           prodl	equ	0xFF3
 20695                           intcon	equ	0xFF2
 20696                           intcon3	equ	0xFF0
 20697                           indf0	equ	0xFEF
 20698                           postinc0	equ	0xFEE
 20699                           fsr0h	equ	0xFEA
 20700                           fsr0l	equ	0xFE9
 20701                           wreg	equ	0xFE8
 20702                           indf1	equ	0xFE7
 20703                           postdec1	equ	0xFE5
 20704                           fsr1h	equ	0xFE2
 20705                           fsr1l	equ	0xFE1
 20706                           indf2	equ	0xFDF
 20707                           fsr2h	equ	0xFDA
 20708                           fsr2l	equ	0xFD9
 20709                           status	equ	0xFD8
 20710                           
 20711 ;; *************** function _getsUSBUSART *****************
 20712 ;; Defined at:
 20713 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 20714 ;; Parameters:    Size  Location     Type
 20715 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20716 ;;		 -> USB_Buffer(64), 
 20717 ;;  len             1    9[BANK0 ] unsigned char 
 20718 ;; Auto vars:     Size  Location     Type
 20719 ;;		None
 20720 ;; Return value:  Size  Location     Type
 20721 ;;                  1    wreg      unsigned char 
 20722 ;; Registers used:
 20723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20724 ;; Tracked objects:
 20725 ;;		On entry : 0/0
 20726 ;;		On exit  : 0/0
 20727 ;;		Unchanged: 0/0
 20728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20729 ;;      Params:         0       3       0       0       0       0       0       0       0
 20730 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20731 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20732 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20733 ;;Total ram usage:        6 bytes
 20734 ;; Hardware stack levels used:    1
 20735 ;; Hardware stack levels required when called:   12
 20736 ;; This function calls:
 20737 ;;		_USBTransferOnePacket
 20738 ;; This function is called by:
 20739 ;;		_USBapp_DeviceCdcEmulatorHandler
 20740 ;; This function uses a non-reentrant model
 20741 ;;
 20742                           
 20743                           	psect	text79
 20744  003D48                     __ptext79:
 20745                           	opt stack 0
 20746  003D48                     _getsUSBUSART:
 20747                           	opt stack 16
 20748                           
 20749                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;incstack = 0
 20753  003D48  0E00               	movlw	0
 20754  003D4A  0100               	movlb	0	; () banked
 20755  003D4C  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20756                           
 20757                           ; BSR set to: 0
 20758                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20759  003D4E  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20760  003D50  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 20761  003D52  B4D8               	btfsc	status,2,c
 20762  003D54  D00F               	goto	l2172
 20763                           
 20764                           ; BSR set to: 0
 20765  003D56  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20766  003D5A  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20767  003D5E  AEDF               	btfss	indf2,7,c
 20768  003D60  D003               	goto	u8180
 20769  003D62  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20770  003D64  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20771  003D66  D002               	goto	u8188
 20772  003D68                     u8180:
 20773  003D68  0100               	movlb	0	; () banked
 20774  003D6A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20775  003D6C                     u8188:
 20776  003D6C  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20777  003D6E  6F6B               	movwf	_getsUSBUSART$6637& (0+255),b
 20778  003D70  6B6C               	clrf	(_getsUSBUSART$6637+1)& (0+255),b
 20779  003D72  D004               	goto	l2174
 20780  003D74                     l2172:
 20781                           
 20782                           ; BSR set to: 0
 20783                           
 20784                           ; BSR set to: 0
 20785  003D74  0E00               	movlw	0
 20786  003D76  6F6C               	movwf	(_getsUSBUSART$6637+1)& (0+255),b
 20787  003D78  0E00               	movlw	0
 20788  003D7A  6F6B               	movwf	_getsUSBUSART$6637& (0+255),b
 20789  003D7C                     l2174:
 20790                           
 20791                           ; BSR set to: 0
 20792                           
 20793                           ; BSR set to: 0
 20794  003D7C  516B               	movf	_getsUSBUSART$6637& (0+255),w,b
 20795  003D7E  116C               	iorwf	(_getsUSBUSART$6637+1)& (0+255),w,b
 20796  003D80  A4D8               	btfss	status,2,c
 20797  003D82  D03B               	goto	l2170
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;usb_device_cdc.c: 437: {
 20801                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20802  003D84  EE20 F001          	lfsr	2,1
 20803  003D88  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20804  003D8A  26D9               	addwf	fsr2l,f,c
 20805  003D8C  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20806  003D8E  22DA               	addwfc	fsr2h,f,c
 20807  003D90  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20808  003D92  5CDE               	subwf	postinc2,w,c
 20809  003D94  B0D8               	btfsc	status,0,c
 20810  003D96  D008               	goto	l2175
 20811                           
 20812                           ; BSR set to: 0
 20813                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20814  003D98  EE20 F001          	lfsr	2,1
 20815  003D9C  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 20816  003D9E  26D9               	addwf	fsr2l,f,c
 20817  003DA0  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 20818  003DA2  22DA               	addwfc	fsr2h,f,c
 20819  003DA4  50DF               	movf	indf2,w,c
 20820  003DA6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20821  003DA8                     l2175:
 20822                           
 20823                           ; BSR set to: 0
 20824                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20825                           
 20826                           ; BSR set to: 0
 20827  003DA8  0E00               	movlw	0
 20828  003DAA  6FDE               	movwf	_cdc_rx_len& (0+255),b
 20829  003DAC  D013               	goto	l2176
 20830  003DAE                     
 20831                           ; BSR set to: 0
 20832                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20833                           
 20834                           ; BSR set to: 0
 20835  003DAE  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20836  003DB0  0D01               	mullw	1
 20837  003DB2  0E40               	movlw	64
 20838  003DB4  24F3               	addwf	prodl,w,c
 20839  003DB6  6ED9               	movwf	fsr2l,c
 20840  003DB8  0E05               	movlw	5
 20841  003DBA  20F4               	addwfc	prodh,w,c
 20842  003DBC  6EDA               	movwf	fsr2h,c
 20843  003DBE  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20844  003DC0  0D01               	mullw	1
 20845  003DC2  50F3               	movf	prodl,w,c
 20846  003DC4  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20847  003DC6  6EE1               	movwf	fsr1l,c
 20848  003DC8  50F4               	movf	prodh,w,c
 20849  003DCA  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20850  003DCC  6EE2               	movwf	fsr1h,c
 20851  003DCE  CFDF FFE7          	movff	indf2,indf1
 20852                           
 20853                           ; BSR set to: 0
 20854  003DD2  2BDE               	incf	_cdc_rx_len& (0+255),f,b
 20855  003DD4                     l2176:
 20856                           
 20857                           ; BSR set to: 0
 20858                           
 20859                           ; BSR set to: 0
 20860  003DD4  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20861  003DD6  5DDE               	subwf	_cdc_rx_len& (0+255),w,b
 20862  003DD8  A0D8               	btfss	status,0,c
 20863  003DDA  D7E9               	goto	l2177
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20867                           
 20868                           ; BSR set to: 0
 20869  003DDC  0E00               	movlw	0
 20870  003DDE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20871  003DE0  0E40               	movlw	64
 20872  003DE2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20873  003DE4  0E05               	movlw	5
 20874  003DE6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20875  003DE8  0E40               	movlw	64
 20876  003DEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20877  003DEC  0E02               	movlw	2
 20878  003DEE  ECE8  F01D         	call	_USBTransferOnePacket
 20879  003DF2  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20880  003DF6  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20881  003DFA                     l2170:
 20882                           
 20883                           ;usb_device_cdc.c: 457: }
 20884                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 20885  003DFA  0100               	movlb	0	; () banked
 20886  003DFC  51DE               	movf	_cdc_rx_len& (0+255),w,b
 20887  003DFE  0012               	return	
 20888  003E00                     __end_of_getsUSBUSART:
 20889                           	opt stack 0
 20890                           tblptru	equ	0xFF8
 20891                           tblptrh	equ	0xFF7
 20892                           tblptrl	equ	0xFF6
 20893                           tablat	equ	0xFF5
 20894                           prodh	equ	0xFF4
 20895                           prodl	equ	0xFF3
 20896                           intcon	equ	0xFF2
 20897                           intcon3	equ	0xFF0
 20898                           indf0	equ	0xFEF
 20899                           postinc0	equ	0xFEE
 20900                           fsr0h	equ	0xFEA
 20901                           fsr0l	equ	0xFE9
 20902                           wreg	equ	0xFE8
 20903                           indf1	equ	0xFE7
 20904                           postdec1	equ	0xFE5
 20905                           fsr1h	equ	0xFE2
 20906                           fsr1l	equ	0xFE1
 20907                           indf2	equ	0xFDF
 20908                           postinc2	equ	0xFDE
 20909                           fsr2h	equ	0xFDA
 20910                           fsr2l	equ	0xFD9
 20911                           status	equ	0xFD8
 20912                           
 20913 ;; *************** function _USBapp_getrxByteFlag *****************
 20914 ;; Defined at:
 20915 ;;		line 268 in file "../Includes/Board/USBapp.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;		None
 20918 ;; Auto vars:     Size  Location     Type
 20919 ;;		None
 20920 ;; Return value:  Size  Location     Type
 20921 ;;                  1    wreg      unsigned char 
 20922 ;; Registers used:
 20923 ;;		wreg, status,2
 20924 ;; Tracked objects:
 20925 ;;		On entry : 0/0
 20926 ;;		On exit  : 0/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20929 ;;      Params:         0       0       0       0       0       0       0       0       0
 20930 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20932 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20933 ;;Total ram usage:        0 bytes
 20934 ;; Hardware stack levels used:    1
 20935 ;; Hardware stack levels required when called:   11
 20936 ;; This function calls:
 20937 ;;		Nothing
 20938 ;; This function is called by:
 20939 ;;		_USBapp_DeviceCdcEmulatorHandler
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text80
 20944  005916                     __ptext80:
 20945                           	opt stack 0
 20946  005916                     _USBapp_getrxByteFlag:
 20947                           	opt stack 17
 20948                           
 20949                           ;USBapp.c: 270: return rxByteFlag;
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;incstack = 0
 20953  005916  0100               	movlb	0	; () banked
 20954  005918  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 20955  00591A  0012               	return	
 20956  00591C                     __end_of_USBapp_getrxByteFlag:
 20957                           	opt stack 0
 20958                           tblptru	equ	0xFF8
 20959                           tblptrh	equ	0xFF7
 20960                           tblptrl	equ	0xFF6
 20961                           tablat	equ	0xFF5
 20962                           prodh	equ	0xFF4
 20963                           prodl	equ	0xFF3
 20964                           intcon	equ	0xFF2
 20965                           intcon3	equ	0xFF0
 20966                           indf0	equ	0xFEF
 20967                           postinc0	equ	0xFEE
 20968                           fsr0h	equ	0xFEA
 20969                           fsr0l	equ	0xFE9
 20970                           wreg	equ	0xFE8
 20971                           indf1	equ	0xFE7
 20972                           postdec1	equ	0xFE5
 20973                           fsr1h	equ	0xFE2
 20974                           fsr1l	equ	0xFE1
 20975                           indf2	equ	0xFDF
 20976                           postinc2	equ	0xFDE
 20977                           fsr2h	equ	0xFDA
 20978                           fsr2l	equ	0xFD9
 20979                           status	equ	0xFD8
 20980                           
 20981 ;; *************** function _MOTEapp_setResponseReady *****************
 20982 ;; Defined at:
 20983 ;;		line 1103 in file "../Includes/Board/MOTEapp.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;		None
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;		None
 20988 ;; Return value:  Size  Location     Type
 20989 ;;                  1    wreg      void 
 20990 ;; Registers used:
 20991 ;;		wreg, status,2
 20992 ;; Tracked objects:
 20993 ;;		On entry : 0/0
 20994 ;;		On exit  : 0/0
 20995 ;;		Unchanged: 0/0
 20996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20997 ;;      Params:         0       0       0       0       0       0       0       0       0
 20998 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21000 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21001 ;;Total ram usage:        0 bytes
 21002 ;; Hardware stack levels used:    1
 21003 ;; Hardware stack levels required when called:   11
 21004 ;; This function calls:
 21005 ;;		Nothing
 21006 ;; This function is called by:
 21007 ;;		_USBapp_DeviceCdcEmulatorHandler
 21008 ;; This function uses a non-reentrant model
 21009 ;;
 21010                           
 21011                           	psect	text81
 21012  0058F2                     __ptext81:
 21013                           	opt stack 0
 21014  0058F2                     _MOTEapp_setResponseReady:
 21015                           	opt stack 17
 21016                           
 21017                           ;MOTEapp.c: 1105: responseReady = 1;
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;incstack = 0
 21021  0058F2  0E01               	movlw	1
 21022  0058F4  0101               	movlb	1	; () banked
 21023  0058F6  6F64               	movwf	_responseReady& (0+255),b
 21024                           
 21025                           ; BSR set to: 1
 21026  0058F8  0012               	return		;funcret
 21027  0058FA                     __end_of_MOTEapp_setResponseReady:
 21028                           	opt stack 0
 21029                           tblptru	equ	0xFF8
 21030                           tblptrh	equ	0xFF7
 21031                           tblptrl	equ	0xFF6
 21032                           tablat	equ	0xFF5
 21033                           prodh	equ	0xFF4
 21034                           prodl	equ	0xFF3
 21035                           intcon	equ	0xFF2
 21036                           intcon3	equ	0xFF0
 21037                           indf0	equ	0xFEF
 21038                           postinc0	equ	0xFEE
 21039                           fsr0h	equ	0xFEA
 21040                           fsr0l	equ	0xFE9
 21041                           wreg	equ	0xFE8
 21042                           indf1	equ	0xFE7
 21043                           postdec1	equ	0xFE5
 21044                           fsr1h	equ	0xFE2
 21045                           fsr1l	equ	0xFE1
 21046                           indf2	equ	0xFDF
 21047                           postinc2	equ	0xFDE
 21048                           fsr2h	equ	0xFDA
 21049                           fsr2l	equ	0xFD9
 21050                           status	equ	0xFD8
 21051                           
 21052 ;; *************** function _EUSART_Write *****************
 21053 ;; Defined at:
 21054 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;  txData          1    wreg     unsigned char 
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;  txData          1    0[BANK0 ] unsigned char 
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21068 ;;      Params:         0       0       0       0       0       0       0       0       0
 21069 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21070 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21071 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21072 ;;Total ram usage:        1 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:   11
 21075 ;; This function calls:
 21076 ;;		Nothing
 21077 ;; This function is called by:
 21078 ;;		_EndLine
 21079 ;;		_sendCommand
 21080 ;;		_sendDataCommand
 21081 ;;		_USBapp_DeviceCdcEmulatorHandler
 21082 ;; This function uses a non-reentrant model
 21083 ;;
 21084                           
 21085                           	psect	text82
 21086  005192                     __ptext82:
 21087                           	opt stack 0
 21088  005192                     _EUSART_Write:
 21089                           	opt stack 14
 21090                           
 21091                           ; BSR set to: 1
 21092                           ;incstack = 0
 21093                           ;EUSART_Write@txData stored from wreg
 21094  005192  0100               	movlb	0	; () banked
 21095  005194  6F60               	movwf	EUSART_Write@txData& (0+255),b
 21096  005196                     
 21097                           ;eusart.c: 142: {
 21098                           
 21099                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21100  005196  0100               	movlb	0	; () banked
 21101  005198  51E1               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 21102  00519A  B4D8               	btfsc	status,2,c
 21103  00519C  D7FC               	goto	l7770
 21104                           
 21105                           ; BSR set to: 0
 21106                           ;eusart.c: 143: }
 21107                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21108  00519E  B89D               	btfsc	3997,4,c	;volatile
 21109  0051A0  D003               	goto	l1214
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;eusart.c: 146: {
 21113                           ;eusart.c: 147: TXREG = txData;
 21114  0051A2  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21115                           
 21116                           ;eusart.c: 148: }
 21117  0051A6  D012               	goto	l1215
 21118  0051A8                     l1214:
 21119                           
 21120                           ; BSR set to: 0
 21121                           ;eusart.c: 149: else
 21122                           ;eusart.c: 150: {
 21123                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21124  0051A8  989D               	bcf	3997,4,c	;volatile
 21125                           
 21126                           ; BSR set to: 0
 21127                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21128  0051AA  51E3               	movf	_eusartTxHead& (0+255),w,b
 21129  0051AC  0D01               	mullw	1
 21130  0051AE  0E40               	movlw	low _eusartTxBuffer
 21131  0051B0  24F3               	addwf	prodl,w,c
 21132  0051B2  6ED9               	movwf	fsr2l,c
 21133  0051B4  0E02               	movlw	high _eusartTxBuffer
 21134  0051B6  20F4               	addwfc	prodh,w,c
 21135  0051B8  6EDA               	movwf	fsr2h,c
 21136  0051BA  C060  FFDF         	movff	EUSART_Write@txData,indf2
 21137                           
 21138                           ; BSR set to: 0
 21139  0051BE  2BE3               	incf	_eusartTxHead& (0+255),f,b
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21143  0051C0  0E3F               	movlw	63
 21144  0051C2  65E3               	cpfsgt	_eusartTxHead& (0+255),b
 21145  0051C4  D002               	goto	l1216
 21146                           
 21147                           ; BSR set to: 0
 21148                           ;eusart.c: 154: {
 21149                           ;eusart.c: 155: eusartTxHead = 0;
 21150  0051C6  0E00               	movlw	0
 21151  0051C8  6FE3               	movwf	_eusartTxHead& (0+255),b
 21152  0051CA                     l1216:
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;eusart.c: 156: }
 21156                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21157                           
 21158                           ; BSR set to: 0
 21159  0051CA  07E1               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 21160  0051CC                     l1215:
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;eusart.c: 158: }
 21164                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21165                           
 21166                           ; BSR set to: 0
 21167  0051CC  889D               	bsf	3997,4,c	;volatile
 21168                           
 21169                           ; BSR set to: 0
 21170  0051CE  0012               	return		;funcret
 21171  0051D0                     __end_of_EUSART_Write:
 21172                           	opt stack 0
 21173                           tblptru	equ	0xFF8
 21174                           tblptrh	equ	0xFF7
 21175                           tblptrl	equ	0xFF6
 21176                           tablat	equ	0xFF5
 21177                           prodh	equ	0xFF4
 21178                           prodl	equ	0xFF3
 21179                           intcon	equ	0xFF2
 21180                           intcon3	equ	0xFF0
 21181                           indf0	equ	0xFEF
 21182                           postinc0	equ	0xFEE
 21183                           fsr0h	equ	0xFEA
 21184                           fsr0l	equ	0xFE9
 21185                           wreg	equ	0xFE8
 21186                           indf1	equ	0xFE7
 21187                           postdec1	equ	0xFE5
 21188                           fsr1h	equ	0xFE2
 21189                           fsr1l	equ	0xFE1
 21190                           indf2	equ	0xFDF
 21191                           postinc2	equ	0xFDE
 21192                           fsr2h	equ	0xFDA
 21193                           fsr2l	equ	0xFD9
 21194                           status	equ	0xFD8
 21195                           
 21196 ;; *************** function _EUSART_Read *****************
 21197 ;; Defined at:
 21198 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 21199 ;; Parameters:    Size  Location     Type
 21200 ;;		None
 21201 ;; Auto vars:     Size  Location     Type
 21202 ;;  readValue       1    0[BANK0 ] unsigned char 
 21203 ;; Return value:  Size  Location     Type
 21204 ;;                  1    wreg      unsigned char 
 21205 ;; Registers used:
 21206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21207 ;; Tracked objects:
 21208 ;;		On entry : 0/0
 21209 ;;		On exit  : 0/0
 21210 ;;		Unchanged: 0/0
 21211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21212 ;;      Params:         0       0       0       0       0       0       0       0       0
 21213 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21215 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21216 ;;Total ram usage:        1 bytes
 21217 ;; Hardware stack levels used:    1
 21218 ;; Hardware stack levels required when called:   11
 21219 ;; This function calls:
 21220 ;;		Nothing
 21221 ;; This function is called by:
 21222 ;;		_MOTEapp_getModuleResponse
 21223 ;;		_USBapp_DeviceCdcEmulatorHandler
 21224 ;; This function uses a non-reentrant model
 21225 ;;
 21226                           
 21227                           	psect	text83
 21228  005248                     __ptext83:
 21229                           	opt stack 0
 21230  005248                     _EUSART_Read:
 21231                           	opt stack 15
 21232                           
 21233                           ;eusart.c: 119: uint8_t readValue = 0;
 21234                           
 21235                           ; BSR set to: 0
 21236                           ;incstack = 0
 21237  005248  0E00               	movlw	0
 21238  00524A  0100               	movlb	0	; () banked
 21239  00524C  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21240                           
 21241                           ;eusart.c: 121: while(0 == eusartRxCount)
 21242  00524E  D001               	goto	l1204
 21243  005250                     l1205:
 21244                           
 21245                           ; BSR set to: 0
 21246                           ;eusart.c: 122: {
 21247                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 21248  005250  8E89               	bsf	3977,7,c	;volatile
 21249  005252                     l1204:
 21250                           
 21251                           ; BSR set to: 0
 21252                           
 21253                           ; BSR set to: 0
 21254  005252  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 21255  005254  B4D8               	btfsc	status,2,c
 21256  005256  D7FC               	goto	l1205
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;eusart.c: 124: }
 21260                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 21261  005258  9A9D               	bcf	3997,5,c	;volatile
 21262                           
 21263                           ; BSR set to: 0
 21264                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 21265  00525A  51DF               	movf	_eusartRxTail& (0+255),w,b
 21266  00525C  0D01               	mullw	1
 21267  00525E  0E00               	movlw	low _eusartRxBuffer
 21268  005260  24F3               	addwf	prodl,w,c
 21269  005262  6ED9               	movwf	fsr2l,c
 21270  005264  0E02               	movlw	high _eusartRxBuffer
 21271  005266  20F4               	addwfc	prodh,w,c
 21272  005268  6EDA               	movwf	fsr2h,c
 21273  00526A  50DF               	movf	indf2,w,c
 21274  00526C  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 21275                           
 21276                           ; BSR set to: 0
 21277  00526E  2BDF               	incf	_eusartRxTail& (0+255),f,b
 21278                           
 21279                           ; BSR set to: 0
 21280                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21281  005270  0E3F               	movlw	63
 21282  005272  65DF               	cpfsgt	_eusartRxTail& (0+255),b
 21283  005274  D002               	goto	l1207
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;eusart.c: 130: {
 21287                           ;eusart.c: 131: eusartRxTail = 0;
 21288  005276  0E00               	movlw	0
 21289  005278  6FDF               	movwf	_eusartRxTail& (0+255),b
 21290  00527A                     l1207:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;eusart.c: 132: }
 21294                           ;eusart.c: 133: eusartRxCount--;
 21295                           
 21296                           ; BSR set to: 0
 21297  00527A  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 21301  00527C  8A9D               	bsf	3997,5,c	;volatile
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;eusart.c: 136: return readValue;
 21305  00527E  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 21306  005280  0012               	return	
 21307  005282                     __end_of_EUSART_Read:
 21308                           	opt stack 0
 21309                           tblptru	equ	0xFF8
 21310                           tblptrh	equ	0xFF7
 21311                           tblptrl	equ	0xFF6
 21312                           tablat	equ	0xFF5
 21313                           prodh	equ	0xFF4
 21314                           prodl	equ	0xFF3
 21315                           intcon	equ	0xFF2
 21316                           intcon3	equ	0xFF0
 21317                           indf0	equ	0xFEF
 21318                           postinc0	equ	0xFEE
 21319                           fsr0h	equ	0xFEA
 21320                           fsr0l	equ	0xFE9
 21321                           wreg	equ	0xFE8
 21322                           indf1	equ	0xFE7
 21323                           postdec1	equ	0xFE5
 21324                           fsr1h	equ	0xFE2
 21325                           fsr1l	equ	0xFE1
 21326                           indf2	equ	0xFDF
 21327                           postinc2	equ	0xFDE
 21328                           fsr2h	equ	0xFDA
 21329                           fsr2l	equ	0xFD9
 21330                           status	equ	0xFD8
 21331                           
 21332 ;; *************** function _CDCTxService *****************
 21333 ;; Defined at:
 21334 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21335 ;; Parameters:    Size  Location     Type
 21336 ;;		None
 21337 ;; Auto vars:     Size  Location     Type
 21338 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21339 ;;  i               1   10[BANK0 ] unsigned char 
 21340 ;; Return value:  Size  Location     Type
 21341 ;;                  1    wreg      void 
 21342 ;; Registers used:
 21343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21344 ;; Tracked objects:
 21345 ;;		On entry : 0/0
 21346 ;;		On exit  : 0/0
 21347 ;;		Unchanged: 0/0
 21348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21349 ;;      Params:         0       0       0       0       0       0       0       0       0
 21350 ;;      Locals:         0       4       0       0       0       0       0       0       0
 21351 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21352 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21353 ;;Total ram usage:        5 bytes
 21354 ;; Hardware stack levels used:    1
 21355 ;; Hardware stack levels required when called:   12
 21356 ;; This function calls:
 21357 ;;		_USBTransferOnePacket
 21358 ;; This function is called by:
 21359 ;;		_USBapp_DeviceCdcEmulatorHandler
 21360 ;; This function uses a non-reentrant model
 21361 ;;
 21362                           
 21363                           	psect	text84
 21364  0025C4                     __ptext84:
 21365                           	opt stack 0
 21366  0025C4                     _CDCTxService:
 21367                           	opt stack 16
 21368                           
 21369                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 21370                           ;usb_device_cdc.c: 786: uint8_t i;
 21371                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;incstack = 0
 21375  0025C4  94A3               	bcf	4003,2,c	;volatile
 21376                           
 21377                           ;usb_device_cdc.c: 790: {};
 21378                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21379  0025C6  5034               	movf	_CDCDataInHandle,w,c
 21380  0025C8  1035               	iorwf	_CDCDataInHandle+1,w,c
 21381  0025CA  B4D8               	btfsc	status,2,c
 21382  0025CC  D010               	goto	l2202
 21383  0025CE  C034  FFD9         	movff	_CDCDataInHandle,fsr2l
 21384  0025D2  C035  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21385  0025D6  AEDF               	btfss	indf2,7,c
 21386  0025D8  D004               	goto	u8240
 21387  0025DA  0100               	movlb	0	; () banked
 21388  0025DC  6B67               	clrf	??_CDCTxService& (0+255),b
 21389  0025DE  2B67               	incf	??_CDCTxService& (0+255),f,b
 21390  0025E0  D002               	goto	u8248
 21391  0025E2                     u8240:
 21392  0025E2  0100               	movlb	0	; () banked
 21393  0025E4  6B67               	clrf	??_CDCTxService& (0+255),b
 21394  0025E6                     u8248:
 21395  0025E6  5167               	movf	??_CDCTxService& (0+255),w,b
 21396  0025E8  6F68               	movwf	_CDCTxService$6685& (0+255),b
 21397  0025EA  6B69               	clrf	(_CDCTxService$6685+1)& (0+255),b
 21398  0025EC  D005               	goto	l2204
 21399  0025EE                     l2202:
 21400                           
 21401                           ; BSR set to: 0
 21402  0025EE  0E00               	movlw	0
 21403  0025F0  0100               	movlb	0	; () banked
 21404  0025F2  6F69               	movwf	(_CDCTxService$6685+1)& (0+255),b
 21405  0025F4  0E00               	movlw	0
 21406  0025F6  6F68               	movwf	_CDCTxService$6685& (0+255),b
 21407  0025F8                     l2204:
 21408                           
 21409                           ; BSR set to: 0
 21410                           
 21411                           ; BSR set to: 0
 21412  0025F8  5168               	movf	_CDCTxService$6685& (0+255),w,b
 21413  0025FA  1169               	iorwf	(_CDCTxService$6685+1)& (0+255),w,b
 21414  0025FC  B4D8               	btfsc	status,2,c
 21415  0025FE  D002               	goto	l2200
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;usb_device_cdc.c: 793: {
 21419                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 21420  002600  84A3               	bsf	4003,2,c	;volatile
 21421                           
 21422                           ;usb_device_cdc.c: 795: return;
 21423  002602  0012               	return	
 21424  002604                     l2200:
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;usb_device_cdc.c: 796: }
 21428                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 21429                           
 21430                           ; BSR set to: 0
 21431  002604  0E03               	movlw	3
 21432  002606  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21433  002608  A4D8               	btfss	status,2,c
 21434  00260A  D002               	goto	l2206
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 21438  00260C  0E00               	movlw	0
 21439  00260E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21440  002610                     l2206:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 21444  002610  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21445  002612  A4D8               	btfss	status,2,c
 21446  002614  D002               	goto	l2207
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;usb_device_cdc.c: 810: {
 21450                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 21451  002616  84A3               	bsf	4003,2,c	;volatile
 21452                           
 21453                           ;usb_device_cdc.c: 812: return;
 21454  002618  0012               	return	
 21455  00261A                     l2207:
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;usb_device_cdc.c: 813: }
 21459                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 21460                           
 21461                           ; BSR set to: 0
 21462  00261A  0E02               	movlw	2
 21463  00261C  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 21464  00261E  A4D8               	btfss	status,2,c
 21465  002620  D013               	goto	l2208
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;usb_device_cdc.c: 819: {
 21469                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21470  002622  0E01               	movlw	1
 21471  002624  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21472  002626  0E00               	movlw	0
 21473  002628  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21474  00262A  0E00               	movlw	0
 21475  00262C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21476  00262E  0E00               	movlw	0
 21477  002630  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21478  002632  0E02               	movlw	2
 21479  002634  ECE8  F01D         	call	_USBTransferOnePacket
 21480  002638  C060  F034         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21481  00263C  C061  F035         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21482                           
 21483                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 21484  002640  0E03               	movlw	3
 21485  002642  0100               	movlb	0	; () banked
 21486  002644  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21487                           
 21488                           ;usb_device_cdc.c: 823: }
 21489  002646  D05E               	goto	l2210
 21490  002648                     l2208:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 21494                           
 21495                           ; BSR set to: 0
 21496  002648  05EB               	decf	_cdc_trf_state& (0+255),w,b
 21497  00264A  A4D8               	btfss	status,2,c
 21498  00264C  D05B               	goto	l2210
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;usb_device_cdc.c: 825: {
 21502                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 21503  00264E  0E40               	movlw	64
 21504  002650  65DD               	cpfsgt	_cdc_tx_len& (0+255),b
 21505  002652  D003               	goto	l2211
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 21509  002654  0E40               	movlw	64
 21510  002656  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21511  002658  D002               	goto	l2212
 21512  00265A                     l2211:
 21513                           
 21514                           ; BSR set to: 0
 21515                           ;usb_device_cdc.c: 831: else
 21516                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 21517  00265A  C0DD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21518  00265E                     l2212:
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 21522                           
 21523                           ; BSR set to: 0
 21524  00265E  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21525  002660  0800               	sublw	0
 21526  002662  25DD               	addwf	_cdc_tx_len& (0+255),w,b
 21527  002664  6FDD               	movwf	_cdc_tx_len& (0+255),b
 21528                           
 21529                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21530  002666  0E00               	movlw	0
 21531  002668  0101               	movlb	1	; () banked
 21532  00266A  6F4E               	movwf	_pCDCDst& (0+255),b
 21533  00266C  0E05               	movlw	5
 21534  00266E  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 21535                           
 21536                           ; BSR set to: 1
 21537                           ;usb_device_cdc.c: 841: i = byte_to_send;
 21538  002670  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21539                           
 21540                           ; BSR set to: 1
 21541                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 21542  002674  0100               	movlb	0	; () banked
 21543  002676  51DC               	movf	_cdc_mem_type& (0+255),w,b
 21544  002678  B4D8               	btfsc	status,2,c
 21545  00267A  D012               	goto	l2214
 21546  00267C  D026               	goto	l2218
 21547  00267E                     
 21548                           ; BSR set to: 0
 21549                           ;usb_device_cdc.c: 845: {
 21550                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 21551                           
 21552                           ; BSR set to: 0
 21553  00267E  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21554  002682  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21555  002686  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21556  00268A  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21557  00268E  CFDF FFE7          	movff	indf2,indf1
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 21561  002692  0101               	movlb	1	; () banked
 21562  002694  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21563  002696  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21564                           
 21565                           ; BSR set to: 1
 21566                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 21567  002698  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21568  00269A  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21569                           
 21570                           ; BSR set to: 1
 21571                           ;usb_device_cdc.c: 849: i--;
 21572  00269C  0100               	movlb	0	; () banked
 21573  00269E  076A               	decf	CDCTxService@i& (0+255),f,b
 21574  0026A0                     l2214:
 21575                           
 21576                           ; BSR set to: 0
 21577                           
 21578                           ; BSR set to: 0
 21579  0026A0  516A               	movf	CDCTxService@i& (0+255),w,b
 21580  0026A2  B4D8               	btfsc	status,2,c
 21581  0026A4  D015               	goto	u8330
 21582  0026A6  D7EB               	goto	l2215
 21583  0026A8                     
 21584                           ; BSR set to: 0
 21585                           ;usb_device_cdc.c: 855: {
 21586                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 21587                           
 21588                           ; BSR set to: 0
 21589  0026A8  C151  FFD9         	movff	_pCDCSrc,fsr2l
 21590  0026AC  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 21591  0026B0  C14E  FFE1         	movff	_pCDCDst,fsr1l
 21592  0026B4  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 21593  0026B8  CFDF FFE7          	movff	indf2,indf1
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 21597  0026BC  0101               	movlb	1	; () banked
 21598  0026BE  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 21599  0026C0  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 21603  0026C2  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 21604  0026C4  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;usb_device_cdc.c: 859: i--;
 21608  0026C6  0100               	movlb	0	; () banked
 21609  0026C8  076A               	decf	CDCTxService@i& (0+255),f,b
 21610  0026CA                     l2218:
 21611                           
 21612                           ; BSR set to: 0
 21613                           
 21614                           ; BSR set to: 0
 21615  0026CA  516A               	movf	CDCTxService@i& (0+255),w,b
 21616  0026CC  A4D8               	btfss	status,2,c
 21617  0026CE  D7EC               	goto	l2219
 21618  0026D0                     u8330:
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;usb_device_cdc.c: 860: }
 21622                           ;usb_device_cdc.c: 861: }
 21623                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 21624                           
 21625                           ; BSR set to: 0
 21626                           
 21627                           ; BSR set to: 0
 21628  0026D0  51DD               	movf	_cdc_tx_len& (0+255),w,b
 21629  0026D2  A4D8               	btfss	status,2,c
 21630  0026D4  D008               	goto	l2223
 21631                           
 21632                           ; BSR set to: 0
 21633                           ;usb_device_cdc.c: 868: {
 21634                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 21635  0026D6  0E40               	movlw	64
 21636  0026D8  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21637  0026DA  A4D8               	btfss	status,2,c
 21638  0026DC  D002               	goto	l2222
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 21642  0026DE  0E02               	movlw	2
 21643  0026E0  D001               	goto	L21
 21644  0026E2                     l2222:
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;usb_device_cdc.c: 871: else
 21648                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 21649                           
 21650                           ; BSR set to: 0
 21651  0026E2  0E03               	movlw	3
 21652  0026E4                     L21:
 21653  0026E4  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21654  0026E6                     l2223:
 21655                           
 21656                           ; BSR set to: 0
 21657                           ;usb_device_cdc.c: 873: }
 21658                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21659                           
 21660                           ; BSR set to: 0
 21661                           
 21662                           ; BSR set to: 0
 21663  0026E6  0E01               	movlw	1
 21664  0026E8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21665  0026EA  0E00               	movlw	0
 21666  0026EC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21667  0026EE  0E05               	movlw	5
 21668  0026F0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21669  0026F2  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21670  0026F6  0E02               	movlw	2
 21671  0026F8  ECE8  F01D         	call	_USBTransferOnePacket
 21672  0026FC  C060  F034         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21673  002700  C061  F035         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21674  002704                     l2210:
 21675                           
 21676                           ;usb_device_cdc.c: 876: }
 21677                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 21678  002704  84A3               	bsf	4003,2,c	;volatile
 21679  002706  0012               	return		;funcret
 21680  002708                     __end_of_CDCTxService:
 21681                           	opt stack 0
 21682                           tblptru	equ	0xFF8
 21683                           tblptrh	equ	0xFF7
 21684                           tblptrl	equ	0xFF6
 21685                           tablat	equ	0xFF5
 21686                           prodh	equ	0xFF4
 21687                           prodl	equ	0xFF3
 21688                           intcon	equ	0xFF2
 21689                           intcon3	equ	0xFF0
 21690                           indf0	equ	0xFEF
 21691                           postinc0	equ	0xFEE
 21692                           fsr0h	equ	0xFEA
 21693                           fsr0l	equ	0xFE9
 21694                           wreg	equ	0xFE8
 21695                           indf1	equ	0xFE7
 21696                           postdec1	equ	0xFE5
 21697                           fsr1h	equ	0xFE2
 21698                           fsr1l	equ	0xFE1
 21699                           indf2	equ	0xFDF
 21700                           postinc2	equ	0xFDE
 21701                           fsr2h	equ	0xFDA
 21702                           fsr2l	equ	0xFD9
 21703                           status	equ	0xFD8
 21704                           
 21705 ;; *************** function _USBTransferOnePacket *****************
 21706 ;; Defined at:
 21707 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 21708 ;; Parameters:    Size  Location     Type
 21709 ;;  ep              1    wreg     unsigned char 
 21710 ;;  dir             1    0[BANK0 ] unsigned char 
 21711 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21712 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21713 ;;  len             1    3[BANK0 ] unsigned char 
 21714 ;; Auto vars:     Size  Location     Type
 21715 ;;  ep              1    4[BANK0 ] unsigned char 
 21716 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21717 ;;		 -> BDT(48), NULL(0), 
 21718 ;; Return value:  Size  Location     Type
 21719 ;;                  2    0[BANK0 ] PTR void 
 21720 ;; Registers used:
 21721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21722 ;; Tracked objects:
 21723 ;;		On entry : 0/0
 21724 ;;		On exit  : 0/0
 21725 ;;		Unchanged: 0/0
 21726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21727 ;;      Params:         0       4       0       0       0       0       0       0       0
 21728 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21730 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21731 ;;Total ram usage:        7 bytes
 21732 ;; Hardware stack levels used:    1
 21733 ;; Hardware stack levels required when called:   11
 21734 ;; This function calls:
 21735 ;;		Nothing
 21736 ;; This function is called by:
 21737 ;;		_getsUSBUSART
 21738 ;;		_CDCTxService
 21739 ;;		_USBCDCEventHandler
 21740 ;; This function uses a non-reentrant model
 21741 ;;
 21742                           
 21743                           	psect	text85
 21744  003BD0                     __ptext85:
 21745                           	opt stack 0
 21746  003BD0                     _USBTransferOnePacket:
 21747                           	opt stack 16
 21748                           
 21749                           ;incstack = 0
 21750                           ;USBTransferOnePacket@ep stored from wreg
 21751  003BD0  0100               	movlb	0	; () banked
 21752  003BD2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21753                           
 21754                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 21755                           ;usb_device.c: 762: if(dir != 0)
 21756  003BD4  0100               	movlb	0	; () banked
 21757  003BD6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21758  003BD8  B4D8               	btfsc	status,2,c
 21759  003BDA  D007               	goto	l1885
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;usb_device.c: 763: {
 21763                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 21764  003BDC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21765  003BDE  0D02               	mullw	2
 21766  003BE0  0ECA               	movlw	low _pBDTEntryIn
 21767  003BE2  24F3               	addwf	prodl,w,c
 21768  003BE4  6ED9               	movwf	fsr2l,c
 21769  003BE6  0E00               	movlw	high _pBDTEntryIn
 21770  003BE8  D006               	goto	L22
 21771  003BEA                     l1885:
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;usb_device.c: 767: else
 21775                           ;usb_device.c: 768: {
 21776                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 21777                           
 21778                           ; BSR set to: 0
 21779  003BEA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21780  003BEC  0D02               	mullw	2
 21781  003BEE  0E40               	movlw	low _pBDTEntryOut
 21782  003BF0  24F3               	addwf	prodl,w,c
 21783  003BF2  6ED9               	movwf	fsr2l,c
 21784  003BF4  0E01               	movlw	high _pBDTEntryOut
 21785  003BF6                     L22:
 21786  003BF6  20F4               	addwfc	prodh,w,c
 21787  003BF8  6EDA               	movwf	fsr2h,c
 21788  003BFA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21789  003BFE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;usb_device.c: 771: }
 21793                           ;usb_device.c: 775: if(handle == 0)
 21794                           
 21795                           ; BSR set to: 0
 21796  003C02  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21797  003C04  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21798  003C06  A4D8               	btfss	status,2,c
 21799  003C08  D005               	goto	l1887
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;usb_device.c: 776: {
 21803                           ;usb_device.c: 777: return 0;
 21804  003C0A  0E00               	movlw	0
 21805  003C0C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21806  003C0E  0E00               	movlw	0
 21807  003C10  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21808                           
 21809                           ; BSR set to: 0
 21810  003C12  0012               	return	
 21811  003C14                     l1887:
 21812                           
 21813                           ; BSR set to: 0
 21814                           ;usb_device.c: 778: }
 21815                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 21816                           
 21817                           ; BSR set to: 0
 21818  003C14  EE20 F002          	lfsr	2,2
 21819  003C18  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21820  003C1A  26D9               	addwf	fsr2l,f,c
 21821  003C1C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21822  003C1E  22DA               	addwfc	fsr2h,f,c
 21823  003C20  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21824  003C24  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21825                           
 21826                           ;usb_device.c: 781: handle->CNT = len;
 21827  003C28  EE20 F001          	lfsr	2,1
 21828  003C2C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21829  003C2E  26D9               	addwf	fsr2l,f,c
 21830  003C30  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21831  003C32  22DA               	addwfc	fsr2h,f,c
 21832  003C34  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21833                           
 21834                           ; BSR set to: 0
 21835                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 21836  003C38  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21837  003C3C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21838  003C40  0E40               	movlw	64
 21839  003C42  16DF               	andwf	indf2,f,c
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 21843  003C44  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21844  003C48  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21845  003C4C  0E00               	movlw	0
 21846  003C4E  86DB               	bsf	plusw2,3,c
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 21850  003C50  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21851  003C54  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21852  003C58  0E00               	movlw	0
 21853  003C5A  8EDB               	bsf	plusw2,7,c
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;usb_device.c: 787: if(dir != 0)
 21857  003C5C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21858  003C5E  B4D8               	btfsc	status,2,c
 21859  003C60  D007               	goto	l1889
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;usb_device.c: 788: {
 21863                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21864  003C62  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21865  003C64  0D02               	mullw	2
 21866  003C66  0ECA               	movlw	low _pBDTEntryIn
 21867  003C68  24F3               	addwf	prodl,w,c
 21868  003C6A  6ED9               	movwf	fsr2l,c
 21869  003C6C  0E00               	movlw	high _pBDTEntryIn
 21870  003C6E  D006               	goto	L23
 21871  003C70                     l1889:
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;usb_device.c: 792: else
 21875                           ;usb_device.c: 793: {
 21876                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21877                           
 21878                           ; BSR set to: 0
 21879  003C70  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21880  003C72  0D02               	mullw	2
 21881  003C74  0E40               	movlw	low _pBDTEntryOut
 21882  003C76  24F3               	addwf	prodl,w,c
 21883  003C78  6ED9               	movwf	fsr2l,c
 21884  003C7A  0E01               	movlw	high _pBDTEntryOut
 21885  003C7C                     L23:
 21886  003C7C  20F4               	addwfc	prodh,w,c
 21887  003C7E  6EDA               	movwf	fsr2h,c
 21888  003C80  0E04               	movlw	4
 21889  003C82  1ADF               	xorwf	indf2,f,c
 21890                           
 21891                           ; BSR set to: 0
 21892                           ;usb_device.c: 796: }
 21893                           ;usb_device.c: 797: return (void*)handle;
 21894                           
 21895                           ; BSR set to: 0
 21896  003C84  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21897  003C88  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21898  003C8C  0012               	return	
 21899  003C8E                     __end_of_USBTransferOnePacket:
 21900                           	opt stack 0
 21901                           tblptru	equ	0xFF8
 21902                           tblptrh	equ	0xFF7
 21903                           tblptrl	equ	0xFF6
 21904                           tablat	equ	0xFF5
 21905                           prodh	equ	0xFF4
 21906                           prodl	equ	0xFF3
 21907                           intcon	equ	0xFF2
 21908                           intcon3	equ	0xFF0
 21909                           indf0	equ	0xFEF
 21910                           postinc0	equ	0xFEE
 21911                           fsr0h	equ	0xFEA
 21912                           fsr0l	equ	0xFE9
 21913                           wreg	equ	0xFE8
 21914                           indf1	equ	0xFE7
 21915                           postdec1	equ	0xFE5
 21916                           fsr1h	equ	0xFE2
 21917                           fsr1l	equ	0xFE1
 21918                           indf2	equ	0xFDF
 21919                           postinc2	equ	0xFDE
 21920                           postdec2	equ	0xFDD
 21921                           plusw2	equ	0xFDB
 21922                           fsr2h	equ	0xFDA
 21923                           fsr2l	equ	0xFD9
 21924                           status	equ	0xFD8
 21925                           
 21926 ;; *************** function _USBDeviceInit *****************
 21927 ;; Defined at:
 21928 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;		None
 21931 ;; Auto vars:     Size  Location     Type
 21932 ;;  i               1    8[BANK0 ] unsigned char 
 21933 ;; Return value:  Size  Location     Type
 21934 ;;                  1    wreg      void 
 21935 ;; Registers used:
 21936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21937 ;; Tracked objects:
 21938 ;;		On entry : 0/0
 21939 ;;		On exit  : 0/0
 21940 ;;		Unchanged: 0/0
 21941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21942 ;;      Params:         0       0       0       0       0       0       0       0       0
 21943 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21944 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21945 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21946 ;;Total ram usage:        1 bytes
 21947 ;; Hardware stack levels used:    1
 21948 ;; Hardware stack levels required when called:   12
 21949 ;; This function calls:
 21950 ;;		_memset
 21951 ;; This function is called by:
 21952 ;;		_main
 21953 ;; This function uses a non-reentrant model
 21954 ;;
 21955                           
 21956                           	psect	text86
 21957  00296E                     __ptext86:
 21958                           	opt stack 0
 21959  00296E                     _USBDeviceInit:
 21960                           	opt stack 18
 21961                           
 21962                           ;usb_device.c: 239: uint8_t i;
 21963                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;incstack = 0
 21967  00296E  94A3               	bcf	4003,2,c	;volatile
 21968                           
 21969                           ;usb_device.c: 244: {UEIR = 0;};
 21970  002970  0E00               	movlw	0
 21971  002972  6E67               	movwf	3943,c	;volatile
 21972                           
 21973                           ;usb_device.c: 247: {UIR = 0;};
 21974  002974  0E00               	movlw	0
 21975  002976  6E65               	movwf	3941,c	;volatile
 21976                           
 21977                           ;usb_device.c: 250: UEP0 = 0;
 21978  002978  0E00               	movlw	0
 21979  00297A  6E6A               	movwf	3946,c	;volatile
 21980                           
 21981                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 21982  00297C  0E6B               	movlw	107
 21983  00297E  0100               	movlb	0	; () banked
 21984  002980  6F60               	movwf	memset@p1& (0+255),b
 21985  002982  0E0F               	movlw	15
 21986  002984  6F61               	movwf	(memset@p1+1)& (0+255),b
 21987  002986  0E00               	movlw	0
 21988  002988  6F63               	movwf	(memset@c+1)& (0+255),b
 21989  00298A  0E00               	movlw	0
 21990  00298C  6F62               	movwf	memset@c& (0+255),b
 21991  00298E  0E00               	movlw	0
 21992  002990  6F65               	movwf	(memset@n+1)& (0+255),b
 21993  002992  0E02               	movlw	2
 21994  002994  6F64               	movwf	memset@n& (0+255),b
 21995  002996  EC27  F02A         	call	_memset	;wreg free
 21996                           
 21997                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 21998  00299A  0E16               	movlw	22
 21999  00299C  6E62               	movwf	3938,c	;volatile
 22000  00299E  0E9F               	movlw	159
 22001  0029A0  6E66               	movwf	3942,c	;volatile
 22002  0029A2  0E7B               	movlw	123
 22003  0029A4  6E64               	movwf	3940,c	;volatile
 22004                           
 22005                           ;usb_device.c: 257: ;
 22006                           ;usb_device.c: 260: ;
 22007                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22008  0029A6  0E00               	movlw	0
 22009  0029A8  0100               	movlb	0	; () banked
 22010  0029AA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22011  0029AC                     l11224:
 22012                           
 22013                           ; BSR set to: 0
 22014  0029AC  0E0B               	movlw	11
 22015  0029AE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22016  0029B0  D001               	goto	l1845
 22017  0029B2  D00E               	goto	u9820
 22018  0029B4                     l1845:
 22019                           
 22020                           ; BSR set to: 0
 22021                           ;usb_device.c: 264: {
 22022                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22023                           
 22024                           ; BSR set to: 0
 22025  0029B4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22026  0029B6  0D04               	mullw	4
 22027  0029B8  0E00               	movlw	0
 22028  0029BA  24F3               	addwf	prodl,w,c
 22029  0029BC  6ED9               	movwf	fsr2l,c
 22030  0029BE  0E04               	movlw	4
 22031  0029C0  20F4               	addwfc	prodh,w,c
 22032  0029C2  6EDA               	movwf	fsr2h,c
 22033  0029C4  6ADE               	clrf	postinc2,c
 22034  0029C6  6ADE               	clrf	postinc2,c
 22035  0029C8  6ADE               	clrf	postinc2,c
 22036  0029CA  6ADD               	clrf	postdec2,c
 22037                           
 22038                           ; BSR set to: 0
 22039  0029CC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22040  0029CE  D7EE               	goto	l11224
 22041  0029D0                     u9820:
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;usb_device.c: 266: }
 22045                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22046  0029D0  8C60               	bsf	3936,6,c	;volatile
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;usb_device.c: 272: UADDR = 0x00;
 22050  0029D2  0E00               	movlw	0
 22051  0029D4  6E63               	movwf	3939,c	;volatile
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22055  0029D6  9860               	bcf	3936,4,c	;volatile
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22059  0029D8  9C60               	bcf	3936,6,c	;volatile
 22060                           
 22061                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22062  0029DA  D009               	goto	l1847
 22063  0029DC                     
 22064                           ; BSR set to: 0
 22065                           ;usb_device.c: 282: {
 22066                           ;usb_device.c: 283: (UIR &= 0xF7);
 22067                           
 22068                           ; BSR set to: 0
 22069  0029DC  9665               	bcf	3941,3,c	;volatile
 22070                           
 22071                           ; BSR set to: 0
 22072                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22073  0029DE  0E00               	movlw	0
 22074  0029E0  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22078  0029E2  0E00               	movlw	0
 22079  0029E4  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22080                           
 22081                           ; BSR set to: 0
 22082                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22083  0029E6  0E00               	movlw	0
 22084  0029E8  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22085  0029EA  0E00               	movlw	0
 22086  0029EC  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22087  0029EE                     l1847:
 22088                           
 22089                           ; BSR set to: 0
 22090                           
 22091                           ; BSR set to: 0
 22092  0029EE  B665               	btfsc	3941,3,c	;volatile
 22093  0029F0  D7F5               	goto	l1848
 22094                           
 22095                           ; BSR set to: 0
 22096                           ;usb_device.c: 288: }
 22097                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22098                           
 22099                           ; BSR set to: 0
 22100  0029F2  0E01               	movlw	1
 22101  0029F4  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22102                           
 22103                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22104  0029F6  0E01               	movlw	1
 22105  0029F8  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22106                           
 22107                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22108  0029FA  0E00               	movlw	0
 22109  0029FC  6E45               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22110                           
 22111                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22112  0029FE  0E00               	movlw	0
 22113  002A00  6E44               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22114                           
 22115                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22116  002A02  0E00               	movlw	0
 22117  002A04  0101               	movlb	1	; () banked
 22118  002A06  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22119                           
 22120                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22121  002A08  0E00               	movlw	0
 22122  002A0A  0100               	movlb	0	; () banked
 22123  002A0C  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22124  002A0E                     l11252:
 22125                           
 22126                           ; BSR set to: 0
 22127  002A0E  0E02               	movlw	2
 22128  002A10  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22129  002A12  D001               	goto	l1850
 22130  002A14  D02E               	goto	u9850
 22131  002A16                     l1850:
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;usb_device.c: 302: {
 22135                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22136                           
 22137                           ; BSR set to: 0
 22138  002A16  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22139  002A18  0D02               	mullw	2
 22140  002A1A  0ECA               	movlw	low _pBDTEntryIn
 22141  002A1C  24F3               	addwf	prodl,w,c
 22142  002A1E  6ED9               	movwf	fsr2l,c
 22143  002A20  0E00               	movlw	high _pBDTEntryIn
 22144  002A22  20F4               	addwfc	prodh,w,c
 22145  002A24  6EDA               	movwf	fsr2h,c
 22146  002A26  0E00               	movlw	0
 22147  002A28  6EDE               	movwf	postinc2,c
 22148  002A2A  0E00               	movlw	0
 22149  002A2C  6EDD               	movwf	postdec2,c
 22150                           
 22151                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22152  002A2E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22153  002A30  0D02               	mullw	2
 22154  002A32  0E40               	movlw	low _pBDTEntryOut
 22155  002A34  24F3               	addwf	prodl,w,c
 22156  002A36  6ED9               	movwf	fsr2l,c
 22157  002A38  0E01               	movlw	high _pBDTEntryOut
 22158  002A3A  20F4               	addwfc	prodh,w,c
 22159  002A3C  6EDA               	movwf	fsr2h,c
 22160  002A3E  0E00               	movlw	0
 22161  002A40  6EDE               	movwf	postinc2,c
 22162  002A42  0E00               	movlw	0
 22163  002A44  6EDD               	movwf	postdec2,c
 22164                           
 22165                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22166  002A46  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22167  002A48  0D01               	mullw	1
 22168  002A4A  0ED3               	movlw	low _ep_data_in
 22169  002A4C  24F3               	addwf	prodl,w,c
 22170  002A4E  6ED9               	movwf	fsr2l,c
 22171  002A50  0E00               	movlw	high _ep_data_in
 22172  002A52  20F4               	addwfc	prodh,w,c
 22173  002A54  6EDA               	movwf	fsr2h,c
 22174  002A56  0E00               	movlw	0
 22175  002A58  6EDF               	movwf	indf2,c
 22176                           
 22177                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22178  002A5A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22179  002A5C  0D01               	mullw	1
 22180  002A5E  0ED0               	movlw	low _ep_data_out
 22181  002A60  24F3               	addwf	prodl,w,c
 22182  002A62  6ED9               	movwf	fsr2l,c
 22183  002A64  0E00               	movlw	high _ep_data_out
 22184  002A66  20F4               	addwfc	prodh,w,c
 22185  002A68  6EDA               	movwf	fsr2h,c
 22186  002A6A  0E00               	movlw	0
 22187  002A6C  6EDF               	movwf	indf2,c
 22188                           
 22189                           ; BSR set to: 0
 22190  002A6E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22191  002A70  D7CE               	goto	l11252
 22192  002A72                     u9850:
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;usb_device.c: 307: }
 22196                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22197                           
 22198                           ; BSR set to: 0
 22199  002A72  0E08               	movlw	8
 22200  002A74  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 22201  002A76  0E04               	movlw	4
 22202  002A78  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22206  002A7A  0E16               	movlw	22
 22207  002A7C  6E6A               	movwf	3946,c	;volatile
 22208                           
 22209                           ; BSR set to: 0
 22210                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22211  002A7E  0E04               	movlw	4
 22212  002A80  0104               	movlb	4	; () banked
 22213  002A82  6F03               	movwf	3,b	;volatile
 22214  002A84  0E30               	movlw	48
 22215  002A86  6F02               	movwf	2,b	;volatile
 22216                           
 22217                           ; BSR set to: 4
 22218                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22219  002A88  0E08               	movlw	8
 22220  002A8A  6F01               	movwf	1,b	;volatile
 22221                           
 22222                           ; BSR set to: 4
 22223                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22224  002A8C  0E04               	movlw	4
 22225  002A8E  6F00               	movwf	0,b	;volatile
 22226                           
 22227                           ; BSR set to: 4
 22228                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22229  002A90  8F00               	bsf	0,7,b	;volatile
 22230                           
 22231                           ; BSR set to: 4
 22232                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22233  002A92  0E00               	movlw	0
 22234  002A94  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 22235                           
 22236                           ; BSR set to: 4
 22237                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22238  002A96  0E00               	movlw	0
 22239  002A98  0100               	movlb	0	; () banked
 22240  002A9A  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22241                           
 22242                           ; BSR set to: 0
 22243  002A9C  0012               	return		;funcret
 22244  002A9E                     __end_of_USBDeviceInit:
 22245                           	opt stack 0
 22246                           tblptru	equ	0xFF8
 22247                           tblptrh	equ	0xFF7
 22248                           tblptrl	equ	0xFF6
 22249                           tablat	equ	0xFF5
 22250                           prodh	equ	0xFF4
 22251                           prodl	equ	0xFF3
 22252                           intcon	equ	0xFF2
 22253                           intcon3	equ	0xFF0
 22254                           indf0	equ	0xFEF
 22255                           postinc0	equ	0xFEE
 22256                           fsr0h	equ	0xFEA
 22257                           fsr0l	equ	0xFE9
 22258                           wreg	equ	0xFE8
 22259                           indf1	equ	0xFE7
 22260                           postdec1	equ	0xFE5
 22261                           fsr1h	equ	0xFE2
 22262                           fsr1l	equ	0xFE1
 22263                           indf2	equ	0xFDF
 22264                           postinc2	equ	0xFDE
 22265                           postdec2	equ	0xFDD
 22266                           plusw2	equ	0xFDB
 22267                           fsr2h	equ	0xFDA
 22268                           fsr2l	equ	0xFD9
 22269                           status	equ	0xFD8
 22270                           
 22271 ;; *************** function _memset *****************
 22272 ;; Defined at:
 22273 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 22274 ;; Parameters:    Size  Location     Type
 22275 ;;  p1              2    0[BANK0 ] PTR void 
 22276 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22277 ;;  c               2    2[BANK0 ] int 
 22278 ;;  n               2    4[BANK0 ] unsigned int 
 22279 ;; Auto vars:     Size  Location     Type
 22280 ;;  p               2    6[BANK0 ] PTR unsigned char 
 22281 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22282 ;; Return value:  Size  Location     Type
 22283 ;;                  2    0[BANK0 ] PTR void 
 22284 ;; Registers used:
 22285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22286 ;; Tracked objects:
 22287 ;;		On entry : 0/0
 22288 ;;		On exit  : 0/0
 22289 ;;		Unchanged: 0/0
 22290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22291 ;;      Params:         0       6       0       0       0       0       0       0       0
 22292 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22293 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22294 ;;      Totals:         0       8       0       0       0       0       0       0       0
 22295 ;;Total ram usage:        8 bytes
 22296 ;; Hardware stack levels used:    1
 22297 ;; Hardware stack levels required when called:   11
 22298 ;; This function calls:
 22299 ;;		Nothing
 22300 ;; This function is called by:
 22301 ;;		_USBDeviceInit
 22302 ;; This function uses a non-reentrant model
 22303 ;;
 22304                           
 22305                           	psect	text87
 22306  00544E                     __ptext87:
 22307                           	opt stack 0
 22308  00544E                     _memset:
 22309                           	opt stack 18
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;incstack = 0
 22313  00544E  C060  F066         	movff	memset@p1,memset@p
 22314  005452  C061  F067         	movff	memset@p1+1,memset@p+1
 22315  005456  D009               	goto	l2671
 22316  005458                     l11048:
 22317  005458  C066  FFD9         	movff	memset@p,fsr2l
 22318  00545C  C067  FFDA         	movff	memset@p+1,fsr2h
 22319  005460  C062  FFDF         	movff	memset@c,indf2
 22320  005464  0100               	movlb	0	; () banked
 22321  005466  4B66               	infsnz	memset@p& (0+255),f,b
 22322  005468  2B67               	incf	(memset@p+1)& (0+255),f,b
 22323  00546A                     l2671:
 22324                           
 22325                           ; BSR set to: 0
 22326  00546A  0100               	movlb	0	; () banked
 22327  00546C  0764               	decf	memset@n& (0+255),f,b
 22328  00546E  A0D8               	btfss	status,0,c
 22329  005470  0765               	decf	(memset@n+1)& (0+255),f,b
 22330  005472  2964               	incf	memset@n& (0+255),w,b
 22331  005474  E1F1               	bnz	l11048
 22332  005476  2965               	incf	(memset@n+1)& (0+255),w,b
 22333  005478  B4D8               	btfsc	status,2,c
 22334  00547A  0012               	return	
 22335  00547C  D7ED               	goto	l2672
 22336  00547E                     __end_of_memset:
 22337                           	opt stack 0
 22338                           tblptru	equ	0xFF8
 22339                           tblptrh	equ	0xFF7
 22340                           tblptrl	equ	0xFF6
 22341                           tablat	equ	0xFF5
 22342                           prodh	equ	0xFF4
 22343                           prodl	equ	0xFF3
 22344                           intcon	equ	0xFF2
 22345                           intcon3	equ	0xFF0
 22346                           indf0	equ	0xFEF
 22347                           postinc0	equ	0xFEE
 22348                           fsr0h	equ	0xFEA
 22349                           fsr0l	equ	0xFE9
 22350                           wreg	equ	0xFE8
 22351                           indf1	equ	0xFE7
 22352                           postdec1	equ	0xFE5
 22353                           fsr1h	equ	0xFE2
 22354                           fsr1l	equ	0xFE1
 22355                           indf2	equ	0xFDF
 22356                           postinc2	equ	0xFDE
 22357                           postdec2	equ	0xFDD
 22358                           plusw2	equ	0xFDB
 22359                           fsr2h	equ	0xFDA
 22360                           fsr2l	equ	0xFD9
 22361                           status	equ	0xFD8
 22362                           
 22363 ;; *************** function _USBDeviceAttach *****************
 22364 ;; Defined at:
 22365 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 22366 ;; Parameters:    Size  Location     Type
 22367 ;;		None
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;		None
 22370 ;; Return value:  Size  Location     Type
 22371 ;;                  1    wreg      void 
 22372 ;; Registers used:
 22373 ;;		wreg, status,2
 22374 ;; Tracked objects:
 22375 ;;		On entry : 0/0
 22376 ;;		On exit  : 0/0
 22377 ;;		Unchanged: 0/0
 22378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22379 ;;      Params:         0       0       0       0       0       0       0       0       0
 22380 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22382 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22383 ;;Total ram usage:        0 bytes
 22384 ;; Hardware stack levels used:    1
 22385 ;; Hardware stack levels required when called:   11
 22386 ;; This function calls:
 22387 ;;		Nothing
 22388 ;; This function is called by:
 22389 ;;		_main
 22390 ;; This function uses a non-reentrant model
 22391 ;;
 22392                           
 22393                           	psect	text88
 22394  0052F2                     __ptext88:
 22395                           	opt stack 0
 22396  0052F2                     _USBDeviceAttach:
 22397                           	opt stack 19
 22398                           
 22399                           ;usb_device.c: 1050: {
 22400                           ;usb_device.c: 1051: if(1 == 1)
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;incstack = 0
 22404  0052F2  0100               	movlb	0	; () banked
 22405  0052F4  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 22406  0052F6  A4D8               	btfss	status,2,c
 22407  0052F8  0012               	return	
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;usb_device.c: 1052: {
 22411                           ;usb_device.c: 1054: UCON = 0;
 22412  0052FA  0E00               	movlw	0
 22413  0052FC  6E60               	movwf	3936,c	;volatile
 22414                           
 22415                           ;usb_device.c: 1057: UIE = 0;
 22416  0052FE  0E00               	movlw	0
 22417  005300  6E64               	movwf	3940,c	;volatile
 22418                           
 22419                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 22420  005302  0E16               	movlw	22
 22421  005304  6E62               	movwf	3938,c	;volatile
 22422  005306  0E9F               	movlw	159
 22423  005308  6E66               	movwf	3942,c	;volatile
 22424  00530A  0E7B               	movlw	123
 22425  00530C  6E64               	movwf	3940,c	;volatile
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 22429  00530E  8ED0               	bsf	4048,7,c	;volatile
 22430                           
 22431                           ; BSR set to: 0
 22432  005310  84A5               	bsf	4005,2,c	;volatile
 22433                           
 22434                           ; BSR set to: 0
 22435  005312  84A3               	bsf	4003,2,c	;volatile
 22436                           
 22437                           ; BSR set to: 0
 22438  005314  8EF2               	bsf	intcon,7,c	;volatile
 22439                           
 22440                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 22441  005316  D001               	goto	l1907
 22442  005318                     l1908:
 22443  005318  8660               	bsf	3936,3,c	;volatile
 22444  00531A                     l1907:
 22445  00531A  A660               	btfss	3936,3,c	;volatile
 22446  00531C  D7FD               	goto	l1908
 22447                           
 22448                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 22449  00531E  0E01               	movlw	1
 22450  005320  0100               	movlb	0	; () banked
 22451  005322  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 22452                           
 22453                           ; BSR set to: 0
 22454  005324  0012               	return	
 22455  005326                     __end_of_USBDeviceAttach:
 22456                           	opt stack 0
 22457                           tblptru	equ	0xFF8
 22458                           tblptrh	equ	0xFF7
 22459                           tblptrl	equ	0xFF6
 22460                           tablat	equ	0xFF5
 22461                           prodh	equ	0xFF4
 22462                           prodl	equ	0xFF3
 22463                           intcon	equ	0xFF2
 22464                           intcon3	equ	0xFF0
 22465                           indf0	equ	0xFEF
 22466                           postinc0	equ	0xFEE
 22467                           fsr0h	equ	0xFEA
 22468                           fsr0l	equ	0xFE9
 22469                           wreg	equ	0xFE8
 22470                           indf1	equ	0xFE7
 22471                           postdec1	equ	0xFE5
 22472                           fsr1h	equ	0xFE2
 22473                           fsr1l	equ	0xFE1
 22474                           indf2	equ	0xFDF
 22475                           postinc2	equ	0xFDE
 22476                           postdec2	equ	0xFDD
 22477                           plusw2	equ	0xFDB
 22478                           fsr2h	equ	0xFDA
 22479                           fsr2l	equ	0xFD9
 22480                           status	equ	0xFD8
 22481                           
 22482 ;; *************** function _SYSTEM_Initialize *****************
 22483 ;; Defined at:
 22484 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 22485 ;; Parameters:    Size  Location     Type
 22486 ;;		None
 22487 ;; Auto vars:     Size  Location     Type
 22488 ;;		None
 22489 ;; Return value:  Size  Location     Type
 22490 ;;                  1    wreg      void 
 22491 ;; Registers used:
 22492 ;;		wreg, status,2, status,0, cstack
 22493 ;; Tracked objects:
 22494 ;;		On entry : 0/0
 22495 ;;		On exit  : 0/0
 22496 ;;		Unchanged: 0/0
 22497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22498 ;;      Params:         0       0       0       0       0       0       0       0       0
 22499 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22501 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22502 ;;Total ram usage:        0 bytes
 22503 ;; Hardware stack levels used:    1
 22504 ;; Hardware stack levels required when called:   13
 22505 ;; This function calls:
 22506 ;;		_ADC_Initialize
 22507 ;;		_CMP1_Initialize
 22508 ;;		_EUSART_Initialize
 22509 ;;		_InitSwUart
 22510 ;;		_OSCILLATOR_Initialize
 22511 ;;		_PIN_MANAGER_Initialize
 22512 ;;		_TMR0_Initialize
 22513 ;;		_TMR1_Initialize
 22514 ;;		_TMR2_Initialize
 22515 ;;		_TMR3_Initialize
 22516 ;; This function is called by:
 22517 ;;		_main
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text89
 22522  005568                     __ptext89:
 22523                           	opt stack 0
 22524  005568                     _SYSTEM_Initialize:
 22525                           	opt stack 17
 22526                           
 22527                           ;mcc.c: 96: OSCILLATOR_Initialize();
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;incstack = 0
 22531  005568  ECDD  F02B         	call	_OSCILLATOR_Initialize	;wreg free
 22532                           
 22533                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 22534  00556C  EC8B  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 22535                           
 22536                           ;mcc.c: 99: TMR1_Initialize();
 22537  005570  ECC5  F029         	call	_TMR1_Initialize	;wreg free
 22538                           
 22539                           ;mcc.c: 100: TMR2_Initialize();
 22540  005574  EC11  F02C         	call	_TMR2_Initialize	;wreg free
 22541                           
 22542                           ;mcc.c: 101: TMR3_Initialize();
 22543  005578  EC52  F02B         	call	_TMR3_Initialize	;wreg free
 22544                           
 22545                           ;mcc.c: 102: EUSART_Initialize();
 22546  00557C  EC41  F029         	call	_EUSART_Initialize	;wreg free
 22547                           
 22548                           ;mcc.c: 103: TMR0_Initialize();
 22549  005580  EC73  F02B         	call	_TMR0_Initialize	;wreg free
 22550                           
 22551                           ;mcc.c: 104: ADC_Initialize();
 22552  005584  ECBA  F02B         	call	_ADC_Initialize	;wreg free
 22553                           
 22554                           ;mcc.c: 105: CMP1_Initialize();
 22555  005588  EC1B  F02C         	call	_CMP1_Initialize	;wreg free
 22556                           
 22557                           ;mcc.c: 107: InitSwUart();
 22558  00558C  EC9F  F02B         	call	_InitSwUart	;wreg free
 22559  005590  0012               	return		;funcret
 22560  005592                     __end_of_SYSTEM_Initialize:
 22561                           	opt stack 0
 22562                           tblptru	equ	0xFF8
 22563                           tblptrh	equ	0xFF7
 22564                           tblptrl	equ	0xFF6
 22565                           tablat	equ	0xFF5
 22566                           prodh	equ	0xFF4
 22567                           prodl	equ	0xFF3
 22568                           intcon	equ	0xFF2
 22569                           intcon3	equ	0xFF0
 22570                           indf0	equ	0xFEF
 22571                           postinc0	equ	0xFEE
 22572                           fsr0h	equ	0xFEA
 22573                           fsr0l	equ	0xFE9
 22574                           wreg	equ	0xFE8
 22575                           indf1	equ	0xFE7
 22576                           postdec1	equ	0xFE5
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _TMR3_Initialize *****************
 22588 ;; Defined at:
 22589 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;		None
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;		None
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1    wreg      void 
 22596 ;; Registers used:
 22597 ;;		wreg, status,2, cstack
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22605 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22606 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22607 ;;Total ram usage:        0 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:   12
 22610 ;; This function calls:
 22611 ;;		_TMR3_StartTimer
 22612 ;; This function is called by:
 22613 ;;		_SYSTEM_Initialize
 22614 ;; This function uses a non-reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text90
 22618  0056A4                     __ptext90:
 22619                           	opt stack 0
 22620  0056A4                     _TMR3_Initialize:
 22621                           	opt stack 17
 22622                           
 22623                           ;tmr3.c: 72: T3CON = 0x04;
 22624                           
 22625                           ;incstack = 0
 22626  0056A4  0E04               	movlw	4
 22627  0056A6  6EB1               	movwf	4017,c	;volatile
 22628                           
 22629                           ;tmr3.c: 75: T3GCON = 0x00;
 22630  0056A8  0E00               	movlw	0
 22631  0056AA  6EB4               	movwf	4020,c	;volatile
 22632                           
 22633                           ;tmr3.c: 78: TMR3H = 0xD5;
 22634  0056AC  0ED5               	movlw	213
 22635  0056AE  6EB3               	movwf	4019,c	;volatile
 22636                           
 22637                           ;tmr3.c: 81: TMR3L = 0xD0;
 22638  0056B0  0ED0               	movlw	208
 22639  0056B2  6EB2               	movwf	4018,c	;volatile
 22640                           
 22641                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 22642  0056B4  CFB2 F03C          	movff	4018,_timer3ReloadVal	;volatile
 22643  0056B8  CFB3 F03D          	movff	4019,_timer3ReloadVal+1	;volatile
 22644                           
 22645                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 22646  0056BC  92A1               	bcf	4001,1,c	;volatile
 22647                           
 22648                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 22649  0056BE  82A0               	bsf	4000,1,c	;volatile
 22650                           
 22651                           ;tmr3.c: 93: TMR3_StartTimer();
 22652  0056C0  EC91  F02C         	call	_TMR3_StartTimer	;wreg free
 22653  0056C4  0012               	return		;funcret
 22654  0056C6                     __end_of_TMR3_Initialize:
 22655                           	opt stack 0
 22656                           tblptru	equ	0xFF8
 22657                           tblptrh	equ	0xFF7
 22658                           tblptrl	equ	0xFF6
 22659                           tablat	equ	0xFF5
 22660                           prodh	equ	0xFF4
 22661                           prodl	equ	0xFF3
 22662                           intcon	equ	0xFF2
 22663                           intcon3	equ	0xFF0
 22664                           indf0	equ	0xFEF
 22665                           postinc0	equ	0xFEE
 22666                           fsr0h	equ	0xFEA
 22667                           fsr0l	equ	0xFE9
 22668                           wreg	equ	0xFE8
 22669                           indf1	equ	0xFE7
 22670                           postdec1	equ	0xFE5
 22671                           fsr1h	equ	0xFE2
 22672                           fsr1l	equ	0xFE1
 22673                           indf2	equ	0xFDF
 22674                           postinc2	equ	0xFDE
 22675                           postdec2	equ	0xFDD
 22676                           plusw2	equ	0xFDB
 22677                           fsr2h	equ	0xFDA
 22678                           fsr2l	equ	0xFD9
 22679                           status	equ	0xFD8
 22680                           
 22681 ;; *************** function _TMR3_StartTimer *****************
 22682 ;; Defined at:
 22683 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 22684 ;; Parameters:    Size  Location     Type
 22685 ;;		None
 22686 ;; Auto vars:     Size  Location     Type
 22687 ;;		None
 22688 ;; Return value:  Size  Location     Type
 22689 ;;                  1    wreg      void 
 22690 ;; Registers used:
 22691 ;;		None
 22692 ;; Tracked objects:
 22693 ;;		On entry : 0/0
 22694 ;;		On exit  : 0/0
 22695 ;;		Unchanged: 0/0
 22696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22697 ;;      Params:         0       0       0       0       0       0       0       0       0
 22698 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22700 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22701 ;;Total ram usage:        0 bytes
 22702 ;; Hardware stack levels used:    1
 22703 ;; Hardware stack levels required when called:   11
 22704 ;; This function calls:
 22705 ;;		Nothing
 22706 ;; This function is called by:
 22707 ;;		_TMR3_Initialize
 22708 ;; This function uses a non-reentrant model
 22709 ;;
 22710                           
 22711                           	psect	text91
 22712  005922                     __ptext91:
 22713                           	opt stack 0
 22714  005922                     _TMR3_StartTimer:
 22715                           	opt stack 17
 22716                           
 22717                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 22718                           
 22719                           ;incstack = 0
 22720  005922  80B1               	bsf	4017,0,c	;volatile
 22721  005924  0012               	return		;funcret
 22722  005926                     __end_of_TMR3_StartTimer:
 22723                           	opt stack 0
 22724                           tblptru	equ	0xFF8
 22725                           tblptrh	equ	0xFF7
 22726                           tblptrl	equ	0xFF6
 22727                           tablat	equ	0xFF5
 22728                           prodh	equ	0xFF4
 22729                           prodl	equ	0xFF3
 22730                           intcon	equ	0xFF2
 22731                           intcon3	equ	0xFF0
 22732                           indf0	equ	0xFEF
 22733                           postinc0	equ	0xFEE
 22734                           fsr0h	equ	0xFEA
 22735                           fsr0l	equ	0xFE9
 22736                           wreg	equ	0xFE8
 22737                           indf1	equ	0xFE7
 22738                           postdec1	equ	0xFE5
 22739                           fsr1h	equ	0xFE2
 22740                           fsr1l	equ	0xFE1
 22741                           indf2	equ	0xFDF
 22742                           postinc2	equ	0xFDE
 22743                           postdec2	equ	0xFDD
 22744                           plusw2	equ	0xFDB
 22745                           fsr2h	equ	0xFDA
 22746                           fsr2l	equ	0xFD9
 22747                           status	equ	0xFD8
 22748                           
 22749 ;; *************** function _TMR2_Initialize *****************
 22750 ;; Defined at:
 22751 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;		None
 22754 ;; Auto vars:     Size  Location     Type
 22755 ;;		None
 22756 ;; Return value:  Size  Location     Type
 22757 ;;                  1    wreg      void 
 22758 ;; Registers used:
 22759 ;;		wreg, status,2, cstack
 22760 ;; Tracked objects:
 22761 ;;		On entry : 0/0
 22762 ;;		On exit  : 0/0
 22763 ;;		Unchanged: 0/0
 22764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22765 ;;      Params:         0       0       0       0       0       0       0       0       0
 22766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22768 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22769 ;;Total ram usage:        0 bytes
 22770 ;; Hardware stack levels used:    1
 22771 ;; Hardware stack levels required when called:   12
 22772 ;; This function calls:
 22773 ;;		_TMR2_StartTimer
 22774 ;; This function is called by:
 22775 ;;		_SYSTEM_Initialize
 22776 ;; This function uses a non-reentrant model
 22777 ;;
 22778                           
 22779                           	psect	text92
 22780  005822                     __ptext92:
 22781                           	opt stack 0
 22782  005822                     _TMR2_Initialize:
 22783                           	opt stack 17
 22784                           
 22785                           ;tmr2.c: 62: T2CON = 0x7A;
 22786                           
 22787                           ;incstack = 0
 22788  005822  0E7A               	movlw	122
 22789  005824  6EBA               	movwf	4026,c	;volatile
 22790                           
 22791                           ;tmr2.c: 65: PR2 = 0x9B;
 22792  005826  0E9B               	movlw	155
 22793  005828  6EBB               	movwf	4027,c	;volatile
 22794                           
 22795                           ;tmr2.c: 68: TMR2 = 0x00;
 22796  00582A  0E00               	movlw	0
 22797  00582C  6EBC               	movwf	4028,c	;volatile
 22798                           
 22799                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 22800  00582E  929E               	bcf	3998,1,c	;volatile
 22801                           
 22802                           ;tmr2.c: 74: TMR2_StartTimer();
 22803  005830  EC93  F02C         	call	_TMR2_StartTimer	;wreg free
 22804  005834  0012               	return		;funcret
 22805  005836                     __end_of_TMR2_Initialize:
 22806                           	opt stack 0
 22807                           tblptru	equ	0xFF8
 22808                           tblptrh	equ	0xFF7
 22809                           tblptrl	equ	0xFF6
 22810                           tablat	equ	0xFF5
 22811                           prodh	equ	0xFF4
 22812                           prodl	equ	0xFF3
 22813                           intcon	equ	0xFF2
 22814                           intcon3	equ	0xFF0
 22815                           indf0	equ	0xFEF
 22816                           postinc0	equ	0xFEE
 22817                           fsr0h	equ	0xFEA
 22818                           fsr0l	equ	0xFE9
 22819                           wreg	equ	0xFE8
 22820                           indf1	equ	0xFE7
 22821                           postdec1	equ	0xFE5
 22822                           fsr1h	equ	0xFE2
 22823                           fsr1l	equ	0xFE1
 22824                           indf2	equ	0xFDF
 22825                           postinc2	equ	0xFDE
 22826                           postdec2	equ	0xFDD
 22827                           plusw2	equ	0xFDB
 22828                           fsr2h	equ	0xFDA
 22829                           fsr2l	equ	0xFD9
 22830                           status	equ	0xFD8
 22831                           
 22832 ;; *************** function _TMR2_StartTimer *****************
 22833 ;; Defined at:
 22834 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 22835 ;; Parameters:    Size  Location     Type
 22836 ;;		None
 22837 ;; Auto vars:     Size  Location     Type
 22838 ;;		None
 22839 ;; Return value:  Size  Location     Type
 22840 ;;                  1    wreg      void 
 22841 ;; Registers used:
 22842 ;;		None
 22843 ;; Tracked objects:
 22844 ;;		On entry : 0/0
 22845 ;;		On exit  : 0/0
 22846 ;;		Unchanged: 0/0
 22847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22848 ;;      Params:         0       0       0       0       0       0       0       0       0
 22849 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22850 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22851 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22852 ;;Total ram usage:        0 bytes
 22853 ;; Hardware stack levels used:    1
 22854 ;; Hardware stack levels required when called:   11
 22855 ;; This function calls:
 22856 ;;		Nothing
 22857 ;; This function is called by:
 22858 ;;		_TMR2_Initialize
 22859 ;; This function uses a non-reentrant model
 22860 ;;
 22861                           
 22862                           	psect	text93
 22863  005926                     __ptext93:
 22864                           	opt stack 0
 22865  005926                     _TMR2_StartTimer:
 22866                           	opt stack 17
 22867                           
 22868                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 22869                           
 22870                           ;incstack = 0
 22871  005926  84BA               	bsf	4026,2,c	;volatile
 22872  005928  0012               	return		;funcret
 22873  00592A                     __end_of_TMR2_StartTimer:
 22874                           	opt stack 0
 22875                           tblptru	equ	0xFF8
 22876                           tblptrh	equ	0xFF7
 22877                           tblptrl	equ	0xFF6
 22878                           tablat	equ	0xFF5
 22879                           prodh	equ	0xFF4
 22880                           prodl	equ	0xFF3
 22881                           intcon	equ	0xFF2
 22882                           intcon3	equ	0xFF0
 22883                           indf0	equ	0xFEF
 22884                           postinc0	equ	0xFEE
 22885                           fsr0h	equ	0xFEA
 22886                           fsr0l	equ	0xFE9
 22887                           wreg	equ	0xFE8
 22888                           indf1	equ	0xFE7
 22889                           postdec1	equ	0xFE5
 22890                           fsr1h	equ	0xFE2
 22891                           fsr1l	equ	0xFE1
 22892                           indf2	equ	0xFDF
 22893                           postinc2	equ	0xFDE
 22894                           postdec2	equ	0xFDD
 22895                           plusw2	equ	0xFDB
 22896                           fsr2h	equ	0xFDA
 22897                           fsr2l	equ	0xFD9
 22898                           status	equ	0xFD8
 22899                           
 22900 ;; *************** function _TMR1_Initialize *****************
 22901 ;; Defined at:
 22902 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 22903 ;; Parameters:    Size  Location     Type
 22904 ;;		None
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;		None
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1    wreg      void 
 22909 ;; Registers used:
 22910 ;;		wreg, status,2, status,0, cstack
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22916 ;;      Params:         0       0       0       0       0       0       0       0       0
 22917 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22918 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22919 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22920 ;;Total ram usage:        2 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:   12
 22923 ;; This function calls:
 22924 ;;		_TMR1_StartTimer
 22925 ;; This function is called by:
 22926 ;;		_SYSTEM_Initialize
 22927 ;; This function uses a non-reentrant model
 22928 ;;
 22929                           
 22930                           	psect	text94
 22931  00538A                     __ptext94:
 22932                           	opt stack 0
 22933  00538A                     _TMR1_Initialize:
 22934                           	opt stack 17
 22935                           
 22936                           ;tmr1.c: 68: T1CON = 0x00;
 22937                           
 22938                           ;incstack = 0
 22939  00538A  0E00               	movlw	0
 22940  00538C  6ECD               	movwf	4045,c	;volatile
 22941                           
 22942                           ;tmr1.c: 71: T1GCON = 0x00;
 22943  00538E  0E00               	movlw	0
 22944  005390  6ECC               	movwf	4044,c	;volatile
 22945                           
 22946                           ;tmr1.c: 74: TMR1H = 0xD0;
 22947  005392  0ED0               	movlw	208
 22948  005394  6ECF               	movwf	4047,c	;volatile
 22949                           
 22950                           ;tmr1.c: 77: TMR1L = 0x20;
 22951  005396  0E20               	movlw	32
 22952  005398  6ECE               	movwf	4046,c	;volatile
 22953                           
 22954                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 22955  00539A  50CE               	movf	4046,w,c	;volatile
 22956  00539C  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 22957  0053A0  0100               	movlb	0	; () banked
 22958  0053A2  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 22959  0053A4  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 22960  0053A8  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 22961  0053AA  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 22962  0053AC  6E3E               	movwf	_timer1ReloadVal,c	;volatile
 22963  0053AE  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 22964  0053B0  6E3F               	movwf	_timer1ReloadVal+1,c	;volatile
 22965                           
 22966                           ; BSR set to: 0
 22967                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 22968  0053B2  909E               	bcf	3998,0,c	;volatile
 22969                           
 22970                           ; BSR set to: 0
 22971                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 22972  0053B4  809D               	bsf	3997,0,c	;volatile
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;tmr1.c: 89: TMR1_StartTimer();
 22976  0053B6  EC95  F02C         	call	_TMR1_StartTimer	;wreg free
 22977  0053BA  0012               	return		;funcret
 22978  0053BC                     __end_of_TMR1_Initialize:
 22979                           	opt stack 0
 22980                           tblptru	equ	0xFF8
 22981                           tblptrh	equ	0xFF7
 22982                           tblptrl	equ	0xFF6
 22983                           tablat	equ	0xFF5
 22984                           prodh	equ	0xFF4
 22985                           prodl	equ	0xFF3
 22986                           intcon	equ	0xFF2
 22987                           intcon3	equ	0xFF0
 22988                           indf0	equ	0xFEF
 22989                           postinc0	equ	0xFEE
 22990                           fsr0h	equ	0xFEA
 22991                           fsr0l	equ	0xFE9
 22992                           wreg	equ	0xFE8
 22993                           indf1	equ	0xFE7
 22994                           postdec1	equ	0xFE5
 22995                           fsr1h	equ	0xFE2
 22996                           fsr1l	equ	0xFE1
 22997                           indf2	equ	0xFDF
 22998                           postinc2	equ	0xFDE
 22999                           postdec2	equ	0xFDD
 23000                           plusw2	equ	0xFDB
 23001                           fsr2h	equ	0xFDA
 23002                           fsr2l	equ	0xFD9
 23003                           status	equ	0xFD8
 23004                           
 23005 ;; *************** function _TMR1_StartTimer *****************
 23006 ;; Defined at:
 23007 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23008 ;; Parameters:    Size  Location     Type
 23009 ;;		None
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;		None
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1    wreg      void 
 23014 ;; Registers used:
 23015 ;;		None
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0
 23022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23025 ;;Total ram usage:        0 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; Hardware stack levels required when called:   11
 23028 ;; This function calls:
 23029 ;;		Nothing
 23030 ;; This function is called by:
 23031 ;;		_TMR1_Initialize
 23032 ;; This function uses a non-reentrant model
 23033 ;;
 23034                           
 23035                           	psect	text95
 23036  00592A                     __ptext95:
 23037                           	opt stack 0
 23038  00592A                     _TMR1_StartTimer:
 23039                           	opt stack 17
 23040                           
 23041                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23042                           
 23043                           ;incstack = 0
 23044  00592A  80CD               	bsf	4045,0,c	;volatile
 23045  00592C  0012               	return		;funcret
 23046  00592E                     __end_of_TMR1_StartTimer:
 23047                           	opt stack 0
 23048                           tblptru	equ	0xFF8
 23049                           tblptrh	equ	0xFF7
 23050                           tblptrl	equ	0xFF6
 23051                           tablat	equ	0xFF5
 23052                           prodh	equ	0xFF4
 23053                           prodl	equ	0xFF3
 23054                           intcon	equ	0xFF2
 23055                           intcon3	equ	0xFF0
 23056                           indf0	equ	0xFEF
 23057                           postinc0	equ	0xFEE
 23058                           fsr0h	equ	0xFEA
 23059                           fsr0l	equ	0xFE9
 23060                           wreg	equ	0xFE8
 23061                           indf1	equ	0xFE7
 23062                           postdec1	equ	0xFE5
 23063                           fsr1h	equ	0xFE2
 23064                           fsr1l	equ	0xFE1
 23065                           indf2	equ	0xFDF
 23066                           postinc2	equ	0xFDE
 23067                           postdec2	equ	0xFDD
 23068                           plusw2	equ	0xFDB
 23069                           fsr2h	equ	0xFDA
 23070                           fsr2l	equ	0xFD9
 23071                           status	equ	0xFD8
 23072                           
 23073 ;; *************** function _TMR0_Initialize *****************
 23074 ;; Defined at:
 23075 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 23076 ;; Parameters:    Size  Location     Type
 23077 ;;		None
 23078 ;; Auto vars:     Size  Location     Type
 23079 ;;		None
 23080 ;; Return value:  Size  Location     Type
 23081 ;;                  1    wreg      void 
 23082 ;; Registers used:
 23083 ;;		wreg, status,2, cstack
 23084 ;; Tracked objects:
 23085 ;;		On entry : 0/0
 23086 ;;		On exit  : 0/0
 23087 ;;		Unchanged: 0/0
 23088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23089 ;;      Params:         0       0       0       0       0       0       0       0       0
 23090 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23092 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23093 ;;Total ram usage:        0 bytes
 23094 ;; Hardware stack levels used:    1
 23095 ;; Hardware stack levels required when called:   12
 23096 ;; This function calls:
 23097 ;;		_TMR0_StartTimer
 23098 ;; This function is called by:
 23099 ;;		_SYSTEM_Initialize
 23100 ;; This function uses a non-reentrant model
 23101 ;;
 23102                           
 23103                           	psect	text96
 23104  0056E6                     __ptext96:
 23105                           	opt stack 0
 23106  0056E6                     _TMR0_Initialize:
 23107                           	opt stack 17
 23108                           
 23109                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 23110                           
 23111                           ;incstack = 0
 23112  0056E6  9AD5               	bcf	4053,5,c	;volatile
 23113                           
 23114                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 23115  0056E8  98D5               	bcf	4053,4,c	;volatile
 23116                           
 23117                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 23118  0056EA  96D5               	bcf	4053,3,c	;volatile
 23119                           
 23120                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 23121  0056EC  94D5               	bcf	4053,2,c	;volatile
 23122                           
 23123                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 23124  0056EE  82D5               	bsf	4053,1,c	;volatile
 23125                           
 23126                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 23127  0056F0  90D5               	bcf	4053,0,c	;volatile
 23128                           
 23129                           ;tmr0.c: 77: timer0ReloadVal=110;
 23130  0056F2  0E00               	movlw	0
 23131  0056F4  6E3B               	movwf	_timer0ReloadVal+1,c	;volatile
 23132  0056F6  0E6E               	movlw	110
 23133  0056F8  6E3A               	movwf	_timer0ReloadVal,c	;volatile
 23134                           
 23135                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 23136  0056FA  94F2               	bcf	intcon,2,c	;volatile
 23137                           
 23138                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 23139  0056FC  8AF2               	bsf	intcon,5,c	;volatile
 23140                           
 23141                           ;tmr0.c: 86: TMR0_StartTimer();
 23142  0056FE  EC97  F02C         	call	_TMR0_StartTimer	;wreg free
 23143  005702  0012               	return		;funcret
 23144  005704                     __end_of_TMR0_Initialize:
 23145                           	opt stack 0
 23146                           tblptru	equ	0xFF8
 23147                           tblptrh	equ	0xFF7
 23148                           tblptrl	equ	0xFF6
 23149                           tablat	equ	0xFF5
 23150                           prodh	equ	0xFF4
 23151                           prodl	equ	0xFF3
 23152                           intcon	equ	0xFF2
 23153                           intcon3	equ	0xFF0
 23154                           indf0	equ	0xFEF
 23155                           postinc0	equ	0xFEE
 23156                           fsr0h	equ	0xFEA
 23157                           fsr0l	equ	0xFE9
 23158                           wreg	equ	0xFE8
 23159                           indf1	equ	0xFE7
 23160                           postdec1	equ	0xFE5
 23161                           fsr1h	equ	0xFE2
 23162                           fsr1l	equ	0xFE1
 23163                           indf2	equ	0xFDF
 23164                           postinc2	equ	0xFDE
 23165                           postdec2	equ	0xFDD
 23166                           plusw2	equ	0xFDB
 23167                           fsr2h	equ	0xFDA
 23168                           fsr2l	equ	0xFD9
 23169                           status	equ	0xFD8
 23170                           
 23171 ;; *************** function _TMR0_StartTimer *****************
 23172 ;; Defined at:
 23173 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 23174 ;; Parameters:    Size  Location     Type
 23175 ;;		None
 23176 ;; Auto vars:     Size  Location     Type
 23177 ;;		None
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  1    wreg      void 
 23180 ;; Registers used:
 23181 ;;		None
 23182 ;; Tracked objects:
 23183 ;;		On entry : 0/0
 23184 ;;		On exit  : 0/0
 23185 ;;		Unchanged: 0/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23187 ;;      Params:         0       0       0       0       0       0       0       0       0
 23188 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23189 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23190 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23191 ;;Total ram usage:        0 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:   11
 23194 ;; This function calls:
 23195 ;;		Nothing
 23196 ;; This function is called by:
 23197 ;;		_TMR0_Initialize
 23198 ;; This function uses a non-reentrant model
 23199 ;;
 23200                           
 23201                           	psect	text97
 23202  00592E                     __ptext97:
 23203                           	opt stack 0
 23204  00592E                     _TMR0_StartTimer:
 23205                           	opt stack 17
 23206                           
 23207                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 23208                           
 23209                           ;incstack = 0
 23210  00592E  8ED5               	bsf	4053,7,c	;volatile
 23211  005930  0012               	return		;funcret
 23212  005932                     __end_of_TMR0_StartTimer:
 23213                           	opt stack 0
 23214                           tblptru	equ	0xFF8
 23215                           tblptrh	equ	0xFF7
 23216                           tblptrl	equ	0xFF6
 23217                           tablat	equ	0xFF5
 23218                           prodh	equ	0xFF4
 23219                           prodl	equ	0xFF3
 23220                           intcon	equ	0xFF2
 23221                           intcon3	equ	0xFF0
 23222                           indf0	equ	0xFEF
 23223                           postinc0	equ	0xFEE
 23224                           fsr0h	equ	0xFEA
 23225                           fsr0l	equ	0xFE9
 23226                           wreg	equ	0xFE8
 23227                           indf1	equ	0xFE7
 23228                           postdec1	equ	0xFE5
 23229                           fsr1h	equ	0xFE2
 23230                           fsr1l	equ	0xFE1
 23231                           indf2	equ	0xFDF
 23232                           postinc2	equ	0xFDE
 23233                           postdec2	equ	0xFDD
 23234                           plusw2	equ	0xFDB
 23235                           fsr2h	equ	0xFDA
 23236                           fsr2l	equ	0xFD9
 23237                           status	equ	0xFD8
 23238                           
 23239 ;; *************** function _PIN_MANAGER_Initialize *****************
 23240 ;; Defined at:
 23241 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 23242 ;; Parameters:    Size  Location     Type
 23243 ;;		None
 23244 ;; Auto vars:     Size  Location     Type
 23245 ;;		None
 23246 ;; Return value:  Size  Location     Type
 23247 ;;                  1    wreg      void 
 23248 ;; Registers used:
 23249 ;;		wreg, status,2
 23250 ;; Tracked objects:
 23251 ;;		On entry : 0/0
 23252 ;;		On exit  : 0/0
 23253 ;;		Unchanged: 0/0
 23254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23255 ;;      Params:         0       0       0       0       0       0       0       0       0
 23256 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23257 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23258 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23259 ;;Total ram usage:        0 bytes
 23260 ;; Hardware stack levels used:    1
 23261 ;; Hardware stack levels required when called:   11
 23262 ;; This function calls:
 23263 ;;		Nothing
 23264 ;; This function is called by:
 23265 ;;		_moteApp_GoToSleep
 23266 ;;		_SYSTEM_Initialize
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           	psect	text98
 23271  004F16                     __ptext98:
 23272                           	opt stack 0
 23273  004F16                     _PIN_MANAGER_Initialize:
 23274                           	opt stack 16
 23275                           
 23276                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 23277                           
 23278                           ;incstack = 0
 23279  004F16  8092               	bsf	3986,0,c	;volatile
 23280                           
 23281                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 23282  004F18  8292               	bsf	3986,1,c	;volatile
 23283                           
 23284                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 23285  004F1A  8492               	bsf	3986,2,c	;volatile
 23286                           
 23287                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 23288  004F1C  8692               	bsf	3986,3,c	;volatile
 23289                           
 23290                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 23291  004F1E  948D               	bcf	3981,2,c	;volatile
 23292                           
 23293                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 23294  004F20  9496               	bcf	3990,2,c	;volatile
 23295                           
 23296                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 23297  004F22  9A92               	bcf	3986,5,c	;volatile
 23298                           
 23299                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 23300  004F24  9C92               	bcf	3986,6,c	;volatile
 23301                           
 23302                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 23303  004F26  9E92               	bcf	3986,7,c	;volatile
 23304                           
 23305                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 23306  004F28  9EF1               	bcf	intcon2,7,c	;volatile
 23307                           
 23308                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 23309  004F2A  8E86               	bsf	3974,7,c	;volatile
 23310                           
 23311                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 23312  004F2C  86F2               	bsf	intcon,3,c	;volatile
 23313                           
 23314                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 23315  004F2E  8293               	bsf	3987,1,c	;volatile
 23316                           
 23317                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 23318  004F30  8093               	bsf	3987,0,c	;volatile
 23319                           
 23320                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 23321  004F32  8E93               	bsf	3987,7,c	;volatile
 23322                           
 23323                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 23324  004F34  9493               	bcf	3987,2,c	;volatile
 23325                           
 23326                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 23327  004F36  9693               	bcf	3987,3,c	;volatile
 23328                           
 23329                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 23330  004F38  9893               	bcf	3987,4,c	;volatile
 23331                           
 23332                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 23333  004F3A  9A93               	bcf	3987,5,c	;volatile
 23334                           
 23335                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 23336  004F3C  9094               	bcf	3988,0,c	;volatile
 23337                           
 23338                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 23339  004F3E  9294               	bcf	3988,1,c	;volatile
 23340                           
 23341                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 23342  004F40  8494               	bsf	3988,2,c	;volatile
 23343                           
 23344                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 23345  004F42  9C94               	bcf	3988,6,c	;volatile
 23346                           
 23347                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 23348  004F44  8E94               	bsf	3988,7,c	;volatile
 23349                           
 23350                           ;pin_manager.c: 83: TRISD = 0b00000000;
 23351  004F46  0E00               	movlw	0
 23352  004F48  6E95               	movwf	3989,c	;volatile
 23353                           
 23354                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 23355  004F4A  9496               	bcf	3990,2,c	;volatile
 23356                           
 23357                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 23358  004F4C  9A89               	bcf	3977,5,c	;volatile
 23359                           
 23360                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 23361  004F4E  9C89               	bcf	3977,6,c	;volatile
 23362                           
 23363                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 23364  004F50  9E89               	bcf	3977,7,c	;volatile
 23365                           
 23366                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 23367  004F52  948A               	bcf	3978,2,c	;volatile
 23368                           
 23369                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 23370  004F54  948B               	bcf	3979,2,c	;volatile
 23371                           
 23372                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 23373  004F56  9C8B               	bcf	3979,6,c	;volatile
 23374                           
 23375                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 23376  004F58  848D               	bsf	3981,2,c	;volatile
 23377                           
 23378                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 23379  004F5A  010F               	movlb	15	; () banked
 23380  004F5C  915B               	bcf	91,0,b	;volatile
 23381                           
 23382                           ; BSR set to: 15
 23383                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 23384  004F5E  835B               	bsf	91,1,b	;volatile
 23385                           
 23386                           ; BSR set to: 15
 23387                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 23388  004F60  855B               	bsf	91,2,b	;volatile
 23389                           
 23390                           ; BSR set to: 15
 23391                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 23392  004F62  875B               	bsf	91,3,b	;volatile
 23393                           
 23394                           ; BSR set to: 15
 23395                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 23396  004F64  9F5D               	bcf	93,7,b	;volatile
 23397                           
 23398                           ; BSR set to: 15
 23399                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 23400  004F66  9D5D               	bcf	93,6,b	;volatile
 23401                           
 23402                           ; BSR set to: 15
 23403  004F68  0012               	return		;funcret
 23404  004F6A                     __end_of_PIN_MANAGER_Initialize:
 23405                           	opt stack 0
 23406                           tblptru	equ	0xFF8
 23407                           tblptrh	equ	0xFF7
 23408                           tblptrl	equ	0xFF6
 23409                           tablat	equ	0xFF5
 23410                           prodh	equ	0xFF4
 23411                           prodl	equ	0xFF3
 23412                           intcon	equ	0xFF2
 23413                           intcon2	equ	0xFF1
 23414                           intcon3	equ	0xFF0
 23415                           indf0	equ	0xFEF
 23416                           postinc0	equ	0xFEE
 23417                           fsr0h	equ	0xFEA
 23418                           fsr0l	equ	0xFE9
 23419                           wreg	equ	0xFE8
 23420                           indf1	equ	0xFE7
 23421                           postdec1	equ	0xFE5
 23422                           fsr1h	equ	0xFE2
 23423                           fsr1l	equ	0xFE1
 23424                           indf2	equ	0xFDF
 23425                           postinc2	equ	0xFDE
 23426                           postdec2	equ	0xFDD
 23427                           plusw2	equ	0xFDB
 23428                           fsr2h	equ	0xFDA
 23429                           fsr2l	equ	0xFD9
 23430                           status	equ	0xFD8
 23431                           
 23432 ;; *************** function _OSCILLATOR_Initialize *****************
 23433 ;; Defined at:
 23434 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 23435 ;; Parameters:    Size  Location     Type
 23436 ;;		None
 23437 ;; Auto vars:     Size  Location     Type
 23438 ;;		None
 23439 ;; Return value:  Size  Location     Type
 23440 ;;                  1    wreg      void 
 23441 ;; Registers used:
 23442 ;;		wreg, status,2
 23443 ;; Tracked objects:
 23444 ;;		On entry : 0/0
 23445 ;;		On exit  : 0/0
 23446 ;;		Unchanged: 0/0
 23447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23448 ;;      Params:         0       0       0       0       0       0       0       0       0
 23449 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23451 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23452 ;;Total ram usage:        0 bytes
 23453 ;; Hardware stack levels used:    1
 23454 ;; Hardware stack levels required when called:   11
 23455 ;; This function calls:
 23456 ;;		Nothing
 23457 ;; This function is called by:
 23458 ;;		_SYSTEM_Initialize
 23459 ;; This function uses a non-reentrant model
 23460 ;;
 23461                           
 23462                           	psect	text99
 23463  0057BA                     __ptext99:
 23464                           	opt stack 0
 23465  0057BA                     _OSCILLATOR_Initialize:
 23466                           	opt stack 18
 23467                           
 23468                           ;mcc.c: 113: OSCTUNE = 0x80;
 23469                           
 23470                           ; BSR set to: 15
 23471                           ;incstack = 0
 23472  0057BA  0E80               	movlw	128
 23473  0057BC  6E9B               	movwf	3995,c	;volatile
 23474                           
 23475                           ;mcc.c: 114: OSCCON = 0x70;
 23476  0057BE  0E70               	movlw	112
 23477  0057C0  6ED3               	movwf	4051,c	;volatile
 23478                           
 23479                           ;mcc.c: 115: OSCCON2 = 0x10;
 23480  0057C2  0E10               	movlw	16
 23481  0057C4  6ED2               	movwf	4050,c	;volatile
 23482  0057C6  AED2               	btfss	4050,7,c	;volatile
 23483  0057C8  D7FE               	goto	l1324
 23484                           
 23485                           ;mcc.c: 117: ACTCON = 0x90;
 23486  0057CA  0E90               	movlw	144
 23487  0057CC  6EB5               	movwf	4021,c	;volatile
 23488  0057CE  0012               	return		;funcret
 23489  0057D0                     __end_of_OSCILLATOR_Initialize:
 23490                           	opt stack 0
 23491                           tblptru	equ	0xFF8
 23492                           tblptrh	equ	0xFF7
 23493                           tblptrl	equ	0xFF6
 23494                           tablat	equ	0xFF5
 23495                           prodh	equ	0xFF4
 23496                           prodl	equ	0xFF3
 23497                           intcon	equ	0xFF2
 23498                           intcon2	equ	0xFF1
 23499                           intcon3	equ	0xFF0
 23500                           indf0	equ	0xFEF
 23501                           postinc0	equ	0xFEE
 23502                           fsr0h	equ	0xFEA
 23503                           fsr0l	equ	0xFE9
 23504                           wreg	equ	0xFE8
 23505                           indf1	equ	0xFE7
 23506                           postdec1	equ	0xFE5
 23507                           fsr1h	equ	0xFE2
 23508                           fsr1l	equ	0xFE1
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           plusw2	equ	0xFDB
 23513                           fsr2h	equ	0xFDA
 23514                           fsr2l	equ	0xFD9
 23515                           status	equ	0xFD8
 23516                           
 23517 ;; *************** function _InitSwUart *****************
 23518 ;; Defined at:
 23519 ;;		line 69 in file "../Includes/Drivers/swUart.c"
 23520 ;; Parameters:    Size  Location     Type
 23521 ;;		None
 23522 ;; Auto vars:     Size  Location     Type
 23523 ;;		None
 23524 ;; Return value:  Size  Location     Type
 23525 ;;                  1    wreg      void 
 23526 ;; Registers used:
 23527 ;;		wreg, status,2
 23528 ;; Tracked objects:
 23529 ;;		On entry : 0/0
 23530 ;;		On exit  : 0/0
 23531 ;;		Unchanged: 0/0
 23532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23533 ;;      Params:         0       0       0       0       0       0       0       0       0
 23534 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23535 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23536 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23537 ;;Total ram usage:        0 bytes
 23538 ;; Hardware stack levels used:    1
 23539 ;; Hardware stack levels required when called:   11
 23540 ;; This function calls:
 23541 ;;		Nothing
 23542 ;; This function is called by:
 23543 ;;		_SYSTEM_Initialize
 23544 ;; This function uses a non-reentrant model
 23545 ;;
 23546                           
 23547                           	psect	text100
 23548  00573E                     __ptext100:
 23549                           	opt stack 0
 23550  00573E                     _InitSwUart:
 23551                           	opt stack 18
 23552                           
 23553                           ;swUart.c: 71: status = SILENT;
 23554                           
 23555                           ;incstack = 0
 23556  00573E  0E00               	movlw	0
 23557  005740  6E52               	movwf	_status,c
 23558                           
 23559                           ;swUart.c: 72: n_bit = 0;
 23560  005742  0E00               	movlw	0
 23561  005744  6E5B               	movwf	_n_bit,c
 23562                           
 23563                           ;swUart.c: 73: rx_data = 0;
 23564  005746  0E00               	movlw	0
 23565  005748  6E51               	movwf	_rx_data,c
 23566                           
 23567                           ;swUart.c: 74: cs = 0;
 23568  00574A  0E00               	movlw	0
 23569  00574C  0101               	movlb	1	; () banked
 23570  00574E  6F5C               	movwf	_cs& (0+255),b
 23571                           
 23572                           ;swUart.c: 75: countRX = 0;
 23573  005750  0E00               	movlw	0
 23574  005752  6E50               	movwf	_countRX,c
 23575                           
 23576                           ;swUart.c: 76: countBitsSilent = 0;
 23577  005754  0E00               	movlw	0
 23578  005756  6E4F               	movwf	_countBitsSilent,c
 23579                           
 23580                           ; BSR set to: 1
 23581  005758  0012               	return		;funcret
 23582  00575A                     __end_of_InitSwUart:
 23583                           	opt stack 0
 23584                           tblptru	equ	0xFF8
 23585                           tblptrh	equ	0xFF7
 23586                           tblptrl	equ	0xFF6
 23587                           tablat	equ	0xFF5
 23588                           prodh	equ	0xFF4
 23589                           prodl	equ	0xFF3
 23590                           intcon	equ	0xFF2
 23591                           intcon2	equ	0xFF1
 23592                           intcon3	equ	0xFF0
 23593                           indf0	equ	0xFEF
 23594                           postinc0	equ	0xFEE
 23595                           fsr0h	equ	0xFEA
 23596                           fsr0l	equ	0xFE9
 23597                           wreg	equ	0xFE8
 23598                           indf1	equ	0xFE7
 23599                           postdec1	equ	0xFE5
 23600                           fsr1h	equ	0xFE2
 23601                           fsr1l	equ	0xFE1
 23602                           indf2	equ	0xFDF
 23603                           postinc2	equ	0xFDE
 23604                           postdec2	equ	0xFDD
 23605                           plusw2	equ	0xFDB
 23606                           fsr2h	equ	0xFDA
 23607                           fsr2l	equ	0xFD9
 23608                           status	equ	0xFD8
 23609                           
 23610 ;; *************** function _EUSART_Initialize *****************
 23611 ;; Defined at:
 23612 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23613 ;; Parameters:    Size  Location     Type
 23614 ;;		None
 23615 ;; Auto vars:     Size  Location     Type
 23616 ;;		None
 23617 ;; Return value:  Size  Location     Type
 23618 ;;                  1    wreg      void 
 23619 ;; Registers used:
 23620 ;;		wreg, status,2
 23621 ;; Tracked objects:
 23622 ;;		On entry : 0/0
 23623 ;;		On exit  : 0/0
 23624 ;;		Unchanged: 0/0
 23625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23626 ;;      Params:         0       0       0       0       0       0       0       0       0
 23627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23629 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23630 ;;Total ram usage:        0 bytes
 23631 ;; Hardware stack levels used:    1
 23632 ;; Hardware stack levels required when called:   11
 23633 ;; This function calls:
 23634 ;;		Nothing
 23635 ;; This function is called by:
 23636 ;;		_SYSTEM_Initialize
 23637 ;; This function uses a non-reentrant model
 23638 ;;
 23639                           
 23640                           	psect	text101
 23641  005282                     __ptext101:
 23642                           	opt stack 0
 23643  005282                     _EUSART_Initialize:
 23644                           	opt stack 18
 23645                           
 23646                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23647                           
 23648                           ; BSR set to: 1
 23649                           ;incstack = 0
 23650  005282  9A9D               	bcf	3997,5,c	;volatile
 23651                           
 23652                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23653  005284  989D               	bcf	3997,4,c	;volatile
 23654                           
 23655                           ;eusart.c: 85: BAUDCON = 0x48;
 23656  005286  0E48               	movlw	72
 23657  005288  6EB8               	movwf	4024,c	;volatile
 23658                           
 23659                           ;eusart.c: 88: RCSTA = 0x90;
 23660  00528A  0E90               	movlw	144
 23661  00528C  6EAB               	movwf	4011,c	;volatile
 23662                           
 23663                           ;eusart.c: 91: TXSTA = 0x26;
 23664  00528E  0E26               	movlw	38
 23665  005290  6EAC               	movwf	4012,c	;volatile
 23666                           
 23667                           ;eusart.c: 95: SPBRG = 0xD0;
 23668  005292  0ED0               	movlw	208
 23669  005294  6EAF               	movwf	4015,c	;volatile
 23670                           
 23671                           ;eusart.c: 100: SPBRGH = 0x00;
 23672  005296  0E00               	movlw	0
 23673  005298  6EB0               	movwf	4016,c	;volatile
 23674                           
 23675                           ;eusart.c: 103: eusartTxHead = 0;
 23676  00529A  0E00               	movlw	0
 23677  00529C  0100               	movlb	0	; () banked
 23678  00529E  6FE3               	movwf	_eusartTxHead& (0+255),b
 23679                           
 23680                           ;eusart.c: 104: eusartTxTail = 0;
 23681  0052A0  0E00               	movlw	0
 23682  0052A2  6FE2               	movwf	_eusartTxTail& (0+255),b
 23683                           
 23684                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23685  0052A4  0E40               	movlw	64
 23686  0052A6  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 23687                           
 23688                           ;eusart.c: 107: eusartRxHead = 0;
 23689  0052A8  0E00               	movlw	0
 23690  0052AA  6FE0               	movwf	_eusartRxHead& (0+255),b
 23691                           
 23692                           ;eusart.c: 108: eusartRxTail = 0;
 23693  0052AC  0E00               	movlw	0
 23694  0052AE  6FDF               	movwf	_eusartRxTail& (0+255),b
 23695                           
 23696                           ;eusart.c: 109: eusartRxCount = 0;
 23697  0052B0  0E00               	movlw	0
 23698  0052B2  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23702  0052B4  8A9D               	bsf	3997,5,c	;volatile
 23703                           
 23704                           ; BSR set to: 0
 23705                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23706  0052B6  88AB               	bsf	4011,4,c	;volatile
 23707                           
 23708                           ; BSR set to: 0
 23709  0052B8  0012               	return		;funcret
 23710  0052BA                     __end_of_EUSART_Initialize:
 23711                           	opt stack 0
 23712                           tblptru	equ	0xFF8
 23713                           tblptrh	equ	0xFF7
 23714                           tblptrl	equ	0xFF6
 23715                           tablat	equ	0xFF5
 23716                           prodh	equ	0xFF4
 23717                           prodl	equ	0xFF3
 23718                           intcon	equ	0xFF2
 23719                           intcon2	equ	0xFF1
 23720                           intcon3	equ	0xFF0
 23721                           indf0	equ	0xFEF
 23722                           postinc0	equ	0xFEE
 23723                           fsr0h	equ	0xFEA
 23724                           fsr0l	equ	0xFE9
 23725                           wreg	equ	0xFE8
 23726                           indf1	equ	0xFE7
 23727                           postdec1	equ	0xFE5
 23728                           fsr1h	equ	0xFE2
 23729                           fsr1l	equ	0xFE1
 23730                           indf2	equ	0xFDF
 23731                           postinc2	equ	0xFDE
 23732                           postdec2	equ	0xFDD
 23733                           plusw2	equ	0xFDB
 23734                           fsr2h	equ	0xFDA
 23735                           fsr2l	equ	0xFD9
 23736                           status	equ	0xFD8
 23737                           
 23738 ;; *************** function _CMP1_Initialize *****************
 23739 ;; Defined at:
 23740 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 23741 ;; Parameters:    Size  Location     Type
 23742 ;;		None
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;		None
 23745 ;; Return value:  Size  Location     Type
 23746 ;;                  1    wreg      void 
 23747 ;; Registers used:
 23748 ;;		wreg, status,2
 23749 ;; Tracked objects:
 23750 ;;		On entry : 0/0
 23751 ;;		On exit  : 0/0
 23752 ;;		Unchanged: 0/0
 23753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23754 ;;      Params:         0       0       0       0       0       0       0       0       0
 23755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23757 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23758 ;;Total ram usage:        0 bytes
 23759 ;; Hardware stack levels used:    1
 23760 ;; Hardware stack levels required when called:   11
 23761 ;; This function calls:
 23762 ;;		Nothing
 23763 ;; This function is called by:
 23764 ;;		_SYSTEM_Initialize
 23765 ;; This function uses a non-reentrant model
 23766 ;;
 23767                           
 23768                           	psect	text102
 23769  005836                     __ptext102:
 23770                           	opt stack 0
 23771  005836                     _CMP1_Initialize:
 23772                           	opt stack 18
 23773                           
 23774                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 23775                           
 23776                           ; BSR set to: 0
 23777                           ;incstack = 0
 23778  005836  9CA0               	bcf	4000,6,c	;volatile
 23779                           
 23780                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 23781  005838  0E9C               	movlw	156
 23782  00583A  6E98               	movwf	3992,c	;volatile
 23783                           
 23784                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 23785  00583C  8A9A               	bsf	3994,5,c	;volatile
 23786                           
 23787                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 23788  00583E  929A               	bcf	3994,1,c	;volatile
 23789                           
 23790                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 23791  005840  969A               	bcf	3994,3,c	;volatile
 23792                           
 23793                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 23794  005842  9CA1               	bcf	4001,6,c	;volatile
 23795                           
 23796                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 23797  005844  9CA0               	bcf	4000,6,c	;volatile
 23798  005846  0012               	return		;funcret
 23799  005848                     __end_of_CMP1_Initialize:
 23800                           	opt stack 0
 23801                           tblptru	equ	0xFF8
 23802                           tblptrh	equ	0xFF7
 23803                           tblptrl	equ	0xFF6
 23804                           tablat	equ	0xFF5
 23805                           prodh	equ	0xFF4
 23806                           prodl	equ	0xFF3
 23807                           intcon	equ	0xFF2
 23808                           intcon2	equ	0xFF1
 23809                           intcon3	equ	0xFF0
 23810                           indf0	equ	0xFEF
 23811                           postinc0	equ	0xFEE
 23812                           fsr0h	equ	0xFEA
 23813                           fsr0l	equ	0xFE9
 23814                           wreg	equ	0xFE8
 23815                           indf1	equ	0xFE7
 23816                           postdec1	equ	0xFE5
 23817                           fsr1h	equ	0xFE2
 23818                           fsr1l	equ	0xFE1
 23819                           indf2	equ	0xFDF
 23820                           postinc2	equ	0xFDE
 23821                           postdec2	equ	0xFDD
 23822                           plusw2	equ	0xFDB
 23823                           fsr2h	equ	0xFDA
 23824                           fsr2l	equ	0xFD9
 23825                           status	equ	0xFD8
 23826                           
 23827 ;; *************** function _ADC_Initialize *****************
 23828 ;; Defined at:
 23829 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 23830 ;; Parameters:    Size  Location     Type
 23831 ;;		None
 23832 ;; Auto vars:     Size  Location     Type
 23833 ;;		None
 23834 ;; Return value:  Size  Location     Type
 23835 ;;                  1    wreg      void 
 23836 ;; Registers used:
 23837 ;;		wreg, status,2
 23838 ;; Tracked objects:
 23839 ;;		On entry : 0/0
 23840 ;;		On exit  : 0/0
 23841 ;;		Unchanged: 0/0
 23842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23843 ;;      Params:         0       0       0       0       0       0       0       0       0
 23844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23846 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23847 ;;Total ram usage:        0 bytes
 23848 ;; Hardware stack levels used:    1
 23849 ;; Hardware stack levels required when called:   11
 23850 ;; This function calls:
 23851 ;;		Nothing
 23852 ;; This function is called by:
 23853 ;;		_SYSTEM_Initialize
 23854 ;; This function uses a non-reentrant model
 23855 ;;
 23856                           
 23857                           	psect	text103
 23858  005774                     __ptext103:
 23859                           	opt stack 0
 23860  005774                     _ADC_Initialize:
 23861                           	opt stack 18
 23862                           
 23863                           ;adc.c: 68: VREFCON0 = 0b10100000;
 23864                           
 23865                           ;incstack = 0
 23866  005774  0EA0               	movlw	160
 23867  005776  6E7D               	movwf	3965,c	;volatile
 23868                           
 23869                           ;adc.c: 70: ADCON0 = 0x01;
 23870  005778  0E01               	movlw	1
 23871  00577A  6EC2               	movwf	4034,c	;volatile
 23872                           
 23873                           ;adc.c: 73: ADCON1 = 0x08;
 23874  00577C  0E08               	movlw	8
 23875  00577E  6EC1               	movwf	4033,c	;volatile
 23876                           
 23877                           ;adc.c: 76: ADCON2 = 0b10001110;
 23878  005780  0E8E               	movlw	142
 23879  005782  6EC0               	movwf	4032,c	;volatile
 23880                           
 23881                           ;adc.c: 79: ADRESL = 0x00;
 23882  005784  0E00               	movlw	0
 23883  005786  6EC3               	movwf	4035,c	;volatile
 23884                           
 23885                           ;adc.c: 82: ADRESH = 0x00;
 23886  005788  0E00               	movlw	0
 23887  00578A  6EC4               	movwf	4036,c	;volatile
 23888  00578C  0012               	return		;funcret
 23889  00578E                     __end_of_ADC_Initialize:
 23890                           	opt stack 0
 23891                           tblptru	equ	0xFF8
 23892                           tblptrh	equ	0xFF7
 23893                           tblptrl	equ	0xFF6
 23894                           tablat	equ	0xFF5
 23895                           prodh	equ	0xFF4
 23896                           prodl	equ	0xFF3
 23897                           intcon	equ	0xFF2
 23898                           intcon2	equ	0xFF1
 23899                           intcon3	equ	0xFF0
 23900                           indf0	equ	0xFEF
 23901                           postinc0	equ	0xFEE
 23902                           fsr0h	equ	0xFEA
 23903                           fsr0l	equ	0xFE9
 23904                           wreg	equ	0xFE8
 23905                           indf1	equ	0xFE7
 23906                           postdec1	equ	0xFE5
 23907                           fsr1h	equ	0xFE2
 23908                           fsr1l	equ	0xFE1
 23909                           indf2	equ	0xFDF
 23910                           postinc2	equ	0xFDE
 23911                           postdec2	equ	0xFDD
 23912                           plusw2	equ	0xFDB
 23913                           fsr2h	equ	0xFDA
 23914                           fsr2l	equ	0xFD9
 23915                           status	equ	0xFD8
 23916                           
 23917 ;; *************** function _MOTEapp_handlerState *****************
 23918 ;; Defined at:
 23919 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;  state           1    wreg     enum E5864
 23922 ;; Auto vars:     Size  Location     Type
 23923 ;;  state           1    0[BANK0 ] enum E5864
 23924 ;; Return value:  Size  Location     Type
 23925 ;;                  1    wreg      void 
 23926 ;; Registers used:
 23927 ;;		wreg
 23928 ;; Tracked objects:
 23929 ;;		On entry : 0/0
 23930 ;;		On exit  : 0/0
 23931 ;;		Unchanged: 0/0
 23932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23933 ;;      Params:         0       0       0       0       0       0       0       0       0
 23934 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23936 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23937 ;;Total ram usage:        1 bytes
 23938 ;; Hardware stack levels used:    1
 23939 ;; Hardware stack levels required when called:   11
 23940 ;; This function calls:
 23941 ;;		Nothing
 23942 ;; This function is called by:
 23943 ;;		_main
 23944 ;; This function uses a non-reentrant model
 23945 ;;
 23946                           
 23947                           	psect	text104
 23948  0058D8                     __ptext104:
 23949                           	opt stack 0
 23950  0058D8                     _MOTEapp_handlerState:
 23951                           	opt stack 19
 23952                           
 23953                           ;incstack = 0
 23954                           ;MOTEapp_handlerState@state stored from wreg
 23955  0058D8  0100               	movlb	0	; () banked
 23956  0058DA  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 23957                           
 23958                           ;MOTEapp.c: 185: moteState = state;
 23959  0058DC  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 23960  0058E0  0012               	return		;funcret
 23961  0058E2                     __end_of_MOTEapp_handlerState:
 23962                           	opt stack 0
 23963                           tblptru	equ	0xFF8
 23964                           tblptrh	equ	0xFF7
 23965                           tblptrl	equ	0xFF6
 23966                           tablat	equ	0xFF5
 23967                           prodh	equ	0xFF4
 23968                           prodl	equ	0xFF3
 23969                           intcon	equ	0xFF2
 23970                           intcon2	equ	0xFF1
 23971                           intcon3	equ	0xFF0
 23972                           indf0	equ	0xFEF
 23973                           postinc0	equ	0xFEE
 23974                           fsr0h	equ	0xFEA
 23975                           fsr0l	equ	0xFE9
 23976                           wreg	equ	0xFE8
 23977                           indf1	equ	0xFE7
 23978                           postdec1	equ	0xFE5
 23979                           fsr1h	equ	0xFE2
 23980                           fsr1l	equ	0xFE1
 23981                           indf2	equ	0xFDF
 23982                           postinc2	equ	0xFDE
 23983                           postdec2	equ	0xFDD
 23984                           plusw2	equ	0xFDB
 23985                           fsr2h	equ	0xFDA
 23986                           fsr2l	equ	0xFD9
 23987                           status	equ	0xFD8
 23988                           
 23989 ;; *************** function _DATAEE_ReadByte *****************
 23990 ;; Defined at:
 23991 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;  bAdd            1    wreg     unsigned char 
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;  bAdd            1    0[BANK0 ] unsigned char 
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      unsigned char 
 23998 ;; Registers used:
 23999 ;;		wreg, status,2
 24000 ;; Tracked objects:
 24001 ;;		On entry : 0/0
 24002 ;;		On exit  : 0/0
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0
 24006 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24008 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24009 ;;Total ram usage:        1 bytes
 24010 ;; Hardware stack levels used:    1
 24011 ;; Hardware stack levels required when called:   11
 24012 ;; This function calls:
 24013 ;;		Nothing
 24014 ;; This function is called by:
 24015 ;;		_main
 24016 ;; This function uses a non-reentrant model
 24017 ;;
 24018                           
 24019                           	psect	text105
 24020  0057D0                     __ptext105:
 24021                           	opt stack 0
 24022  0057D0                     _DATAEE_ReadByte:
 24023                           	opt stack 19
 24024                           
 24025                           ;incstack = 0
 24026                           ;DATAEE_ReadByte@bAdd stored from wreg
 24027  0057D0  0100               	movlb	0	; () banked
 24028  0057D2  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24029                           
 24030                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24031  0057D4  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24032                           
 24033                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24034  0057D8  9CA6               	bcf	4006,6,c	;volsfr
 24035                           
 24036                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24037  0057DA  9EA6               	bcf	4006,7,c	;volsfr
 24038                           
 24039                           ;memory.c: 193: EECON1bits.RD = 1;
 24040  0057DC  80A6               	bsf	4006,0,c	;volsfr
 24041                           
 24042                           ;memory.c: 194: __nop();
 24043  0057DE  F000               	nop	
 24044                           
 24045                           ;memory.c: 195: __nop();
 24046  0057E0  F000               	nop	
 24047                           
 24048                           ;memory.c: 197: return (EEDATA);
 24049  0057E2  50A8               	movf	4008,w,c	;volatile
 24050  0057E4  0012               	return	
 24051  0057E6                     __end_of_DATAEE_ReadByte:
 24052                           	opt stack 0
 24053                           tblptru	equ	0xFF8
 24054                           tblptrh	equ	0xFF7
 24055                           tblptrl	equ	0xFF6
 24056                           tablat	equ	0xFF5
 24057                           prodh	equ	0xFF4
 24058                           prodl	equ	0xFF3
 24059                           intcon	equ	0xFF2
 24060                           intcon2	equ	0xFF1
 24061                           intcon3	equ	0xFF0
 24062                           indf0	equ	0xFEF
 24063                           postinc0	equ	0xFEE
 24064                           fsr0h	equ	0xFEA
 24065                           fsr0l	equ	0xFE9
 24066                           wreg	equ	0xFE8
 24067                           indf1	equ	0xFE7
 24068                           postdec1	equ	0xFE5
 24069                           fsr1h	equ	0xFE2
 24070                           fsr1l	equ	0xFE1
 24071                           indf2	equ	0xFDF
 24072                           postinc2	equ	0xFDE
 24073                           postdec2	equ	0xFDD
 24074                           plusw2	equ	0xFDB
 24075                           fsr2h	equ	0xFDA
 24076                           fsr2l	equ	0xFD9
 24077                           status	equ	0xFD8
 24078                           
 24079 ;; *************** function _INTERRUPT_InterruptManager *****************
 24080 ;; Defined at:
 24081 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 24082 ;; Parameters:    Size  Location     Type
 24083 ;;		None
 24084 ;; Auto vars:     Size  Location     Type
 24085 ;;  tClearPin       1   50[COMRAM] unsigned char 
 24086 ;; Return value:  Size  Location     Type
 24087 ;;                  1    wreg      void 
 24088 ;; Registers used:
 24089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24090 ;; Tracked objects:
 24091 ;;		On entry : 0/0
 24092 ;;		On exit  : 0/0
 24093 ;;		Unchanged: 0/0
 24094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24095 ;;      Params:         0       0       0       0       0       0       0       0       0
 24096 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24097 ;;      Temps:         19       0       0       0       0       0       0       0       0
 24098 ;;      Totals:        20       0       0       0       0       0       0       0       0
 24099 ;;Total ram usage:       20 bytes
 24100 ;; Hardware stack levels used:    1
 24101 ;; Hardware stack levels required when called:   10
 24102 ;; This function calls:
 24103 ;;		_CMP1_ISR
 24104 ;;		_EUSART_Receive_ISR
 24105 ;;		_EUSART_Transmit_ISR
 24106 ;;		_InterruptPinRX
 24107 ;;		_TMR0_ISR
 24108 ;;		_TMR1_ISR
 24109 ;;		_TMR3_ISR
 24110 ;;		_TMRapp_Tick
 24111 ;;		_USBDeviceTasks
 24112 ;;		_USBapp_setrxByteFlag
 24113 ;; This function is called by:
 24114 ;;		Interrupt level 2
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	intcode
 24119  000008                     __pintcode:
 24120                           	opt stack 0
 24121  000008                     _INTERRUPT_InterruptManager:
 24122                           	opt stack 11
 24123                           
 24124                           ;incstack = 0
 24125  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24126  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager+1
 24127  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+2
 24128  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+3
 24129  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+4
 24130  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+5
 24131  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+6
 24132  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+7
 24133  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+8
 24134  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+9
 24135  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+10
 24136  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+11
 24137  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+12
 24138  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+13
 24139  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+14
 24140  000042  C05E  F02F         	movff	btemp,??_INTERRUPT_InterruptManager+15
 24141  000046  C05F  F030         	movff	btemp+1,??_INTERRUPT_InterruptManager+16
 24142  00004A  C060  F031         	movff	btemp+2,??_INTERRUPT_InterruptManager+17
 24143  00004E  C061  F032         	movff	btemp+3,??_INTERRUPT_InterruptManager+18
 24144                           
 24145                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24146  000052  B09D               	btfsc	3997,0,c	;volatile
 24147  000054  A09E               	btfss	3998,0,c	;volatile
 24148  000056  D004               	goto	i2l1275
 24149                           
 24150                           ;interrupt_manager.c: 60: {
 24151                           ;interrupt_manager.c: 61: TMR1_ISR();
 24152  000058  EC51  F02C         	call	_TMR1_ISR	;wreg free
 24153                           
 24154                           ;interrupt_manager.c: 63: TMRapp_Tick();
 24155  00005C  EC8E  F02C         	call	_TMRapp_Tick	;wreg free
 24156  000060                     i2l1275:
 24157                           
 24158                           ;interrupt_manager.c: 64: }
 24159                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24160  000060  B2A0               	btfsc	4000,1,c	;volatile
 24161  000062  A2A1               	btfss	4001,1,c	;volatile
 24162  000064  D003               	goto	i2l1276
 24163                           
 24164                           ;interrupt_manager.c: 66: {
 24165                           ;interrupt_manager.c: 67: TMR3_ISR();
 24166  000066  EC82  F02B         	call	_TMR3_ISR	;wreg free
 24167                           
 24168                           ;interrupt_manager.c: 68: }
 24169  00006A  D013               	goto	i2l1282
 24170  00006C                     i2l1276:
 24171                           
 24172                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24173  00006C  BA9D               	btfsc	3997,5,c	;volatile
 24174  00006E  AA9E               	btfss	3998,5,c	;volatile
 24175  000070  D005               	goto	i2l1278
 24176                           
 24177                           ;interrupt_manager.c: 70: {
 24178                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 24179  000072  EC7D  F02C         	call	_USBapp_setrxByteFlag	;wreg free
 24180                           
 24181                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 24182  000076  EC6F  F02A         	call	_EUSART_Receive_ISR	;wreg free
 24183                           
 24184                           ;interrupt_manager.c: 73: }
 24185  00007A  D00B               	goto	i2l1282
 24186  00007C                     i2l1278:
 24187                           
 24188                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 24189  00007C  B89D               	btfsc	3997,4,c	;volatile
 24190  00007E  A89E               	btfss	3998,4,c	;volatile
 24191  000080  D003               	goto	i2l1280
 24192                           
 24193                           ;interrupt_manager.c: 75: {
 24194                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 24195  000082  EC57  F02A         	call	_EUSART_Transmit_ISR	;wreg free
 24196                           
 24197                           ;interrupt_manager.c: 77: }
 24198  000086  D005               	goto	i2l1282
 24199  000088                     i2l1280:
 24200                           
 24201                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 24202  000088  BCA0               	btfsc	4000,6,c	;volatile
 24203  00008A  ACA1               	btfss	4001,6,c	;volatile
 24204  00008C  D002               	goto	i2l1282
 24205                           
 24206                           ;interrupt_manager.c: 79: {
 24207                           ;interrupt_manager.c: 80: CMP1_ISR();
 24208  00008E  EC9B  F02C         	call	_CMP1_ISR	;wreg free
 24209  000092                     i2l1282:
 24210                           
 24211                           ;interrupt_manager.c: 81: }
 24212                           ;interrupt_manager.c: 82: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 24213  000092  BAF2               	btfsc	intcon,5,c	;volatile
 24214  000094  A4F2               	btfss	intcon,2,c	;volatile
 24215  000096  D003               	goto	i2l1283
 24216                           
 24217                           ;interrupt_manager.c: 83: {
 24218                           ;interrupt_manager.c: 84: TMR0_ISR();
 24219  000098  EC57  F02C         	call	_TMR0_ISR	;wreg free
 24220                           
 24221                           ;interrupt_manager.c: 87: }
 24222  00009C  D01A               	goto	i2l1286
 24223  00009E                     i2l1283:
 24224                           
 24225                           ;interrupt_manager.c: 88: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 24226  00009E  B6F2               	btfsc	intcon,3,c	;volatile
 24227  0000A0  A0F2               	btfss	intcon,0,c	;volatile
 24228  0000A2  D015               	goto	i2l1285
 24229                           
 24230                           ;interrupt_manager.c: 89: {
 24231                           ;interrupt_manager.c: 90: bool tClearPin;
 24232                           ;interrupt_manager.c: 92: INTCONbits.IOCIF = 0;
 24233  0000A4  90F2               	bcf	intcon,0,c	;volatile
 24234                           
 24235                           ;interrupt_manager.c: 94: tClearPin = PORTBbits.RB7;
 24236  0000A6  0E00               	movlw	0
 24237  0000A8  BE81               	btfsc	3969,7,c	;volatile
 24238  0000AA  0E01               	movlw	1
 24239  0000AC  6E33               	movwf	INTERRUPT_InterruptManager@tClearPin,c
 24240                           
 24241                           ;interrupt_manager.c: 99: InterruptPinRX();
 24242  0000AE  ECDE  F02A         	call	_InterruptPinRX	;wreg free
 24243                           
 24244                           ;interrupt_manager.c: 100: PORTAbits.RA7 = !PORTAbits.RA7;
 24245  0000B2  BE80               	btfsc	3968,7,c	;volatile
 24246  0000B4  D003               	goto	i2u1067_40
 24247  0000B6  6A20               	clrf	??_INTERRUPT_InterruptManager& (0+255),c
 24248  0000B8  2A20               	incf	??_INTERRUPT_InterruptManager& (0+255),f,c
 24249  0000BA  D001               	goto	i2u1068_48
 24250  0000BC                     i2u1067_40:
 24251  0000BC  6A20               	clrf	??_INTERRUPT_InterruptManager& (0+255),c
 24252  0000BE                     i2u1068_48:
 24253  0000BE  3220               	rrcf	??_INTERRUPT_InterruptManager,f,c
 24254  0000C0  3220               	rrcf	??_INTERRUPT_InterruptManager,f,c
 24255  0000C2  5080               	movf	3968,w,c	;volatile
 24256  0000C4  1820               	xorwf	??_INTERRUPT_InterruptManager,w,c
 24257  0000C6  0B7F               	andlw	-129
 24258  0000C8  1820               	xorwf	??_INTERRUPT_InterruptManager,w,c
 24259  0000CA  6E80               	movwf	3968,c	;volatile
 24260                           
 24261                           ;interrupt_manager.c: 112: }
 24262  0000CC  D002               	goto	i2l1286
 24263  0000CE                     i2l1285:
 24264                           
 24265                           ;interrupt_manager.c: 113: else
 24266                           ;interrupt_manager.c: 114: {
 24267                           ;interrupt_manager.c: 116: USBDeviceTasks();
 24268  0000CE  EC1E  F014         	call	_USBDeviceTasks	;wreg free
 24269  0000D2                     i2l1286:
 24270  0000D2  C032  F061         	movff	??_INTERRUPT_InterruptManager+18,btemp+3
 24271  0000D6  C031  F060         	movff	??_INTERRUPT_InterruptManager+17,btemp+2
 24272  0000DA  C030  F05F         	movff	??_INTERRUPT_InterruptManager+16,btemp+1
 24273  0000DE  C02F  F05E         	movff	??_INTERRUPT_InterruptManager+15,btemp
 24274  0000E2  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+14,tablat
 24275  0000E6  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+13,tblptru
 24276  0000EA  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+12,tblptrh
 24277  0000EE  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+11,tblptrl
 24278  0000F2  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+10,prodh
 24279  0000F6  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+9,prodl
 24280  0000FA  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+8,fsr2h
 24281  0000FE  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+7,fsr2l
 24282  000102  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+6,fsr1h
 24283  000106  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+5,fsr1l
 24284  00010A  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+4,fsr0h
 24285  00010E  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+3,fsr0l
 24286  000112  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+2,pclatu
 24287  000116  C021  FFFA         	movff	??_INTERRUPT_InterruptManager+1,pclath
 24288  00011A  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24289  00011C  0011               	retfie		f
 24290  00011E                     __end_of_INTERRUPT_InterruptManager:
 24291                           	opt stack 0
 24292                           pclatu	equ	0xFFB
 24293                           pclath	equ	0xFFA
 24294                           tblptru	equ	0xFF8
 24295                           tblptrh	equ	0xFF7
 24296                           tblptrl	equ	0xFF6
 24297                           tablat	equ	0xFF5
 24298                           prodh	equ	0xFF4
 24299                           prodl	equ	0xFF3
 24300                           intcon	equ	0xFF2
 24301                           intcon2	equ	0xFF1
 24302                           intcon3	equ	0xFF0
 24303                           indf0	equ	0xFEF
 24304                           postinc0	equ	0xFEE
 24305                           fsr0h	equ	0xFEA
 24306                           fsr0l	equ	0xFE9
 24307                           wreg	equ	0xFE8
 24308                           indf1	equ	0xFE7
 24309                           postdec1	equ	0xFE5
 24310                           fsr1h	equ	0xFE2
 24311                           fsr1l	equ	0xFE1
 24312                           indf2	equ	0xFDF
 24313                           postinc2	equ	0xFDE
 24314                           postdec2	equ	0xFDD
 24315                           plusw2	equ	0xFDB
 24316                           fsr2h	equ	0xFDA
 24317                           fsr2l	equ	0xFD9
 24318                           status	equ	0xFD8
 24319                           
 24320 ;; *************** function _USBapp_setrxByteFlag *****************
 24321 ;; Defined at:
 24322 ;;		line 263 in file "../Includes/Board/USBapp.c"
 24323 ;; Parameters:    Size  Location     Type
 24324 ;;		None
 24325 ;; Auto vars:     Size  Location     Type
 24326 ;;		None
 24327 ;; Return value:  Size  Location     Type
 24328 ;;                  1    wreg      void 
 24329 ;; Registers used:
 24330 ;;		wreg, status,2
 24331 ;; Tracked objects:
 24332 ;;		On entry : 0/0
 24333 ;;		On exit  : 0/0
 24334 ;;		Unchanged: 0/0
 24335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24336 ;;      Params:         0       0       0       0       0       0       0       0       0
 24337 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24339 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24340 ;;Total ram usage:        0 bytes
 24341 ;; Hardware stack levels used:    1
 24342 ;; This function calls:
 24343 ;;		Nothing
 24344 ;; This function is called by:
 24345 ;;		_INTERRUPT_InterruptManager
 24346 ;; This function uses a non-reentrant model
 24347 ;;
 24348                           
 24349                           	psect	text107
 24350  0058FA                     __ptext107:
 24351                           	opt stack 0
 24352  0058FA                     _USBapp_setrxByteFlag:
 24353                           	opt stack 20
 24354                           
 24355                           ;USBapp.c: 265: rxByteFlag = 1;
 24356                           
 24357                           ;incstack = 0
 24358  0058FA  0E01               	movlw	1
 24359  0058FC  0100               	movlb	0	; () banked
 24360  0058FE  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 24361                           
 24362                           ; BSR set to: 0
 24363  005900  0012               	return		;funcret
 24364  005902                     __end_of_USBapp_setrxByteFlag:
 24365                           	opt stack 0
 24366                           pclatu	equ	0xFFB
 24367                           pclath	equ	0xFFA
 24368                           tblptru	equ	0xFF8
 24369                           tblptrh	equ	0xFF7
 24370                           tblptrl	equ	0xFF6
 24371                           tablat	equ	0xFF5
 24372                           prodh	equ	0xFF4
 24373                           prodl	equ	0xFF3
 24374                           intcon	equ	0xFF2
 24375                           intcon2	equ	0xFF1
 24376                           intcon3	equ	0xFF0
 24377                           indf0	equ	0xFEF
 24378                           postinc0	equ	0xFEE
 24379                           fsr0h	equ	0xFEA
 24380                           fsr0l	equ	0xFE9
 24381                           wreg	equ	0xFE8
 24382                           indf1	equ	0xFE7
 24383                           postdec1	equ	0xFE5
 24384                           fsr1h	equ	0xFE2
 24385                           fsr1l	equ	0xFE1
 24386                           indf2	equ	0xFDF
 24387                           postinc2	equ	0xFDE
 24388                           postdec2	equ	0xFDD
 24389                           plusw2	equ	0xFDB
 24390                           fsr2h	equ	0xFDA
 24391                           fsr2l	equ	0xFD9
 24392                           status	equ	0xFD8
 24393                           
 24394 ;; *************** function _USBDeviceTasks *****************
 24395 ;; Defined at:
 24396 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 24397 ;; Parameters:    Size  Location     Type
 24398 ;;		None
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;  i               1   30[COMRAM] unsigned char 
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  1    wreg      void 
 24403 ;; Registers used:
 24404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24405 ;; Tracked objects:
 24406 ;;		On entry : 0/0
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24410 ;;      Params:         0       0       0       0       0       0       0       0       0
 24411 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24413 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24414 ;;Total ram usage:        1 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; Hardware stack levels required when called:    9
 24417 ;; This function calls:
 24418 ;;		_USBCtrlEPAllowStatusStage
 24419 ;;		_USBCtrlEPService
 24420 ;;		_USBStallHandler
 24421 ;;		_USBSuspend
 24422 ;;		_USBWakeFromSuspend
 24423 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24424 ;;		i2_USBDeviceInit
 24425 ;; This function is called by:
 24426 ;;		_INTERRUPT_InterruptManager
 24427 ;; This function uses a non-reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text108
 24431  00283C                     __ptext108:
 24432                           	opt stack 0
 24433  00283C                     _USBDeviceTasks:
 24434                           	opt stack 11
 24435                           
 24436                           ;usb_device.c: 430: uint8_t i;
 24437                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 24438                           
 24439                           ; BSR set to: 0
 24440                           ;incstack = 0
 24441  00283C  0100               	movlb	0	; () banked
 24442  00283E  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 24443  002840  B4D8               	btfsc	status,2,c
 24444                           
 24445                           ; BSR set to: 0
 24446                           ;usb_device.c: 433: {
 24447                           ;usb_device.c: 443: if(!UCONbits.SE0)
 24448  002842  BA60               	btfsc	3936,5,c	;volatile
 24449  002844  D006               	goto	i2l1856
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;usb_device.c: 444: {
 24453                           ;usb_device.c: 445: {UIR = 0;};
 24454  002846  0E00               	movlw	0
 24455  002848  6E65               	movwf	3941,c	;volatile
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 24459  00284A  8064               	bsf	3940,0,c	;volatile
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 24463  00284C  8864               	bsf	3940,4,c	;volatile
 24464                           
 24465                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 24466  00284E  0E02               	movlw	2
 24467  002850  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24468  002852                     i2l1856:
 24469                           
 24470                           ; BSR set to: 0
 24471                           ;usb_device.c: 449: }
 24472                           ;usb_device.c: 450: }
 24473                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24474                           
 24475                           ; BSR set to: 0
 24476                           
 24477                           ; BSR set to: 0
 24478  002852  B465               	btfsc	3941,2,c	;volatile
 24479                           
 24480                           ; BSR set to: 0
 24481  002854  A464               	btfss	3940,2,c	;volatile
 24482  002856  D003               	goto	i2l1857
 24483                           
 24484                           ; BSR set to: 0
 24485                           ;usb_device.c: 455: {
 24486                           ;usb_device.c: 456: (UIR &= 0xFB);
 24487  002858  9465               	bcf	3941,2,c	;volatile
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;usb_device.c: 457: USBWakeFromSuspend();
 24491  00285A  EC3F  F02A         	call	_USBWakeFromSuspend	;wreg free
 24492  00285E                     i2l1857:
 24493                           
 24494                           ;usb_device.c: 458: }
 24495                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 24496  00285E  A260               	btfss	3936,1,c	;volatile
 24497  002860  D002               	goto	i2l1858
 24498                           
 24499                           ;usb_device.c: 464: {
 24500                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 24501  002862  94A4               	bcf	4004,2,c	;volatile
 24502                           
 24503                           ;usb_device.c: 466: return;
 24504  002864  0012               	return	
 24505  002866                     i2l1858:
 24506                           
 24507                           ;usb_device.c: 467: }
 24508                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24509  002866  B065               	btfsc	3941,0,c	;volatile
 24510  002868  A064               	btfss	3940,0,c	;volatile
 24511  00286A  D007               	goto	i2l1860
 24512                           
 24513                           ;usb_device.c: 480: {
 24514                           ;usb_device.c: 481: USBDeviceInit();
 24515  00286C  EC4F  F015         	call	i2_USBDeviceInit	;wreg free
 24516                           
 24517                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 24518  002870  84A3               	bsf	4003,2,c	;volatile
 24519                           
 24520                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 24521  002872  0E04               	movlw	4
 24522  002874  0100               	movlb	0	; () banked
 24523  002876  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 24524                           
 24525                           ; BSR set to: 0
 24526                           ;usb_device.c: 489: (UIR &= 0xFE);
 24527  002878  9065               	bcf	3941,0,c	;volatile
 24528  00287A                     i2l1860:
 24529                           
 24530                           ;usb_device.c: 490: }
 24531                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24532                           
 24533                           ; BSR set to: 0
 24534  00287A  B865               	btfsc	3941,4,c	;volatile
 24535  00287C  A864               	btfss	3940,4,c	;volatile
 24536  00287E  D003               	goto	i2l1861
 24537                           
 24538                           ;usb_device.c: 496: {
 24539                           ;usb_device.c: 497: USBSuspend();
 24540  002880  ECC9  F02A         	call	_USBSuspend	;wreg free
 24541                           
 24542                           ;usb_device.c: 498: (UIR &= 0xEF);
 24543  002884  9865               	bcf	3941,4,c	;volatile
 24544  002886                     i2l1861:
 24545                           
 24546                           ;usb_device.c: 499: }
 24547                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 24548  002886  AC65               	btfss	3941,6,c	;volatile
 24549  002888  D018               	goto	i2l1865
 24550                           
 24551                           ;usb_device.c: 502: {
 24552                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 24553  00288A  AC64               	btfss	3940,6,c	;volatile
 24554  00288C  D00E               	goto	i2l1863
 24555                           
 24556                           ;usb_device.c: 504: {
 24557                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24558  00288E  0E00               	movlw	0
 24559  002890  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24560  002892  0E73               	movlw	115
 24561  002894  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24562  002896  0E00               	movlw	0
 24563  002898  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24564  00289A  0E00               	movlw	0
 24565  00289C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24566  00289E  0E00               	movlw	0
 24567  0028A0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24568  0028A2  0E01               	movlw	1
 24569  0028A4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24570  0028A6  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24571  0028AA                     i2l1863:
 24572                           
 24573                           ;usb_device.c: 506: }
 24574                           ;usb_device.c: 507: (UIR &= 0xBF);
 24575  0028AA  9C65               	bcf	3941,6,c	;volatile
 24576                           
 24577                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 24578  0028AC  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24579  0028AE  A4D8               	btfss	status,2,c
 24580                           
 24581                           ;usb_device.c: 513: {
 24582                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 24583  0028B0  0649               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24584                           
 24585                           ;usb_device.c: 515: }
 24586                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 24587  0028B2  5049               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24588  0028B4  B4D8               	btfsc	status,2,c
 24589                           
 24590                           ;usb_device.c: 522: {
 24591                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 24592  0028B6  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24593  0028BA                     i2l1865:
 24594                           
 24595                           ;usb_device.c: 524: }
 24596                           ;usb_device.c: 525: }
 24597                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24598  0028BA  BA65               	btfsc	3941,5,c	;volatile
 24599  0028BC  AA64               	btfss	3940,5,c	;volatile
 24600  0028BE  D002               	goto	i2l1866
 24601                           
 24602                           ;usb_device.c: 528: {
 24603                           ;usb_device.c: 529: USBStallHandler();
 24604  0028C0  EC69  F028         	call	_USBStallHandler	;wreg free
 24605  0028C4                     i2l1866:
 24606                           
 24607                           ;usb_device.c: 530: }
 24608                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24609  0028C4  B265               	btfsc	3941,1,c	;volatile
 24610  0028C6  A264               	btfss	3940,1,c	;volatile
 24611  0028C8  D00F               	goto	i2l1867
 24612                           
 24613                           ;usb_device.c: 533: {
 24614                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24615  0028CA  0E7F               	movlw	127
 24616  0028CC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24617  0028CE  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24618  0028D0  0E00               	movlw	0
 24619  0028D2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24620  0028D4  0E00               	movlw	0
 24621  0028D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24622  0028D8  0E00               	movlw	0
 24623  0028DA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24624  0028DC  0E01               	movlw	1
 24625  0028DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24626  0028E0  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24627                           
 24628                           ;usb_device.c: 535: {UEIR = 0;};
 24629  0028E4  0E00               	movlw	0
 24630  0028E6  6E67               	movwf	3943,c	;volatile
 24631  0028E8                     i2l1867:
 24632                           
 24633                           ;usb_device.c: 536: }
 24634                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 24635  0028E8  0E04               	movlw	4
 24636  0028EA  0100               	movlb	0	; () banked
 24637  0028EC  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 24638  0028EE  D002               	goto	i2l1868
 24639                           
 24640                           ; BSR set to: 0
 24641                           ;usb_device.c: 544: {
 24642                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 24643  0028F0  94A4               	bcf	4004,2,c	;volatile
 24644                           
 24645                           ;usb_device.c: 546: return;
 24646  0028F2  0012               	return	
 24647  0028F4                     i2l1868:
 24648                           
 24649                           ; BSR set to: 0
 24650                           ;usb_device.c: 547: }
 24651                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 24652  0028F4  A664               	btfss	3940,3,c	;volatile
 24653  0028F6  D039               	goto	i2u1034_40
 24654                           
 24655                           ; BSR set to: 0
 24656                           ;usb_device.c: 553: {
 24657                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 24658  0028F8  0E00               	movlw	0
 24659  0028FA  6E1F               	movwf	USBDeviceTasks@i,c
 24660  0028FC                     i2l11598:
 24661                           
 24662                           ; BSR set to: 0
 24663  0028FC  0E03               	movlw	3
 24664  0028FE  641F               	cpfsgt	USBDeviceTasks@i,c
 24665  002900  D001               	goto	i2l1870
 24666  002902  D033               	goto	i2u1034_40
 24667  002904                     i2l1870:
 24668                           
 24669                           ;usb_device.c: 555: {
 24670                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 24671  002904  A665               	btfss	3941,3,c	;volatile
 24672  002906  D031               	goto	i2u1034_40
 24673                           
 24674                           ;usb_device.c: 557: {
 24675                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 24676  002908  CF61 F059          	movff	3937,_USTATcopy	;volatile
 24677                           
 24678                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 24679  00290C  3059               	rrcf	_USTATcopy,w,c	;volatile
 24680  00290E  32E8               	rrcf	wreg,f,c
 24681  002910  32E8               	rrcf	wreg,f,c
 24682  002912  0B0F               	andlw	15
 24683  002914  6E4B               	movwf	_endpoint_number,c	;volatile
 24684                           
 24685                           ;usb_device.c: 562: (UIR &= 0xF7);
 24686  002916  9665               	bcf	3941,3,c	;volatile
 24687                           
 24688                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 24689  002918  B459               	btfsc	_USTATcopy,2,c	;volatile
 24690  00291A  D007               	goto	i2l1873
 24691                           
 24692                           ;usb_device.c: 567: {
 24693                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24694  00291C  504B               	movf	_endpoint_number,w,c	;volatile
 24695  00291E  0D01               	mullw	1
 24696  002920  0ED0               	movlw	low _ep_data_out
 24697  002922  24F3               	addwf	prodl,w,c
 24698  002924  6ED9               	movwf	fsr2l,c
 24699  002926  0E00               	movlw	high _ep_data_out
 24700  002928  D006               	goto	L24
 24701  00292A                     i2l1873:
 24702                           
 24703                           ;usb_device.c: 570: else
 24704                           ;usb_device.c: 571: {
 24705                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24706                           
 24707                           ; BSR set to: 0
 24708  00292A  504B               	movf	_endpoint_number,w,c	;volatile
 24709  00292C  0D01               	mullw	1
 24710  00292E  0ED3               	movlw	low _ep_data_in
 24711  002930  24F3               	addwf	prodl,w,c
 24712  002932  6ED9               	movwf	fsr2l,c
 24713  002934  0E00               	movlw	high _ep_data_in
 24714  002936                     L24:
 24715  002936  20F4               	addwfc	prodh,w,c
 24716  002938  6EDA               	movwf	fsr2h,c
 24717  00293A  0100               	movlb	0	; () banked
 24718  00293C  70DF               	btg	indf2,0,c
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;usb_device.c: 573: }
 24722                           ;usb_device.c: 577: if(endpoint_number == 0)
 24723                           
 24724                           ; BSR set to: 0
 24725  00293E  504B               	movf	_endpoint_number,w,c	;volatile
 24726  002940  A4D8               	btfss	status,2,c
 24727  002942  D003               	goto	i2l1875
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;usb_device.c: 578: {
 24731                           ;usb_device.c: 579: USBCtrlEPService();
 24732  002944  ECF7  F01B         	call	_USBCtrlEPService	;wreg free
 24733                           
 24734                           ;usb_device.c: 580: }
 24735  002948  D00E               	goto	i2l1877
 24736  00294A                     i2l1875:
 24737                           
 24738                           ;usb_device.c: 581: else
 24739                           ;usb_device.c: 582: {
 24740                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24741  00294A  0E00               	movlw	0
 24742  00294C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24743  00294E  0E72               	movlw	114
 24744  002950  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24745  002952  0E59               	movlw	low _USTATcopy
 24746  002954  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24747  002956  0E00               	movlw	high _USTATcopy
 24748  002958  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24749  00295A  0E00               	movlw	0
 24750  00295C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24751  00295E  0E00               	movlw	0
 24752  002960  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24753  002962  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24754  002966                     i2l1877:
 24755  002966  2A1F               	incf	USBDeviceTasks@i,f,c
 24756  002968  D7C9               	goto	i2l11598
 24757  00296A                     i2u1034_40:
 24758                           
 24759                           ;usb_device.c: 589: }
 24760                           ;usb_device.c: 590: }
 24761                           ;usb_device.c: 591: }
 24762                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 24763  00296A  94A4               	bcf	4004,2,c	;volatile
 24764  00296C  0012               	return		;funcret
 24765  00296E                     __end_of_USBDeviceTasks:
 24766                           	opt stack 0
 24767                           pclatu	equ	0xFFB
 24768                           pclath	equ	0xFFA
 24769                           tblptru	equ	0xFF8
 24770                           tblptrh	equ	0xFF7
 24771                           tblptrl	equ	0xFF6
 24772                           tablat	equ	0xFF5
 24773                           prodh	equ	0xFF4
 24774                           prodl	equ	0xFF3
 24775                           intcon	equ	0xFF2
 24776                           intcon2	equ	0xFF1
 24777                           intcon3	equ	0xFF0
 24778                           indf0	equ	0xFEF
 24779                           postinc0	equ	0xFEE
 24780                           fsr0h	equ	0xFEA
 24781                           fsr0l	equ	0xFE9
 24782                           wreg	equ	0xFE8
 24783                           indf1	equ	0xFE7
 24784                           postdec1	equ	0xFE5
 24785                           fsr1h	equ	0xFE2
 24786                           fsr1l	equ	0xFE1
 24787                           indf2	equ	0xFDF
 24788                           postinc2	equ	0xFDE
 24789                           postdec2	equ	0xFDD
 24790                           plusw2	equ	0xFDB
 24791                           fsr2h	equ	0xFDA
 24792                           fsr2l	equ	0xFD9
 24793                           status	equ	0xFD8
 24794                           
 24795 ;; *************** function i2_USBDeviceInit *****************
 24796 ;; Defined at:
 24797 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 24798 ;; Parameters:    Size  Location     Type
 24799 ;;		None
 24800 ;; Auto vars:     Size  Location     Type
 24801 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24802 ;; Return value:  Size  Location     Type
 24803 ;;                  1    wreg      void 
 24804 ;; Registers used:
 24805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24806 ;; Tracked objects:
 24807 ;;		On entry : 0/0
 24808 ;;		On exit  : 0/0
 24809 ;;		Unchanged: 0/0
 24810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24811 ;;      Params:         0       0       0       0       0       0       0       0       0
 24812 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24814 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24815 ;;Total ram usage:        1 bytes
 24816 ;; Hardware stack levels used:    1
 24817 ;; Hardware stack levels required when called:    1
 24818 ;; This function calls:
 24819 ;;		i2_memset
 24820 ;; This function is called by:
 24821 ;;		_USBDeviceTasks
 24822 ;; This function uses a non-reentrant model
 24823 ;;
 24824                           
 24825                           	psect	text109
 24826  002A9E                     __ptext109:
 24827                           	opt stack 0
 24828  002A9E                     i2_USBDeviceInit:
 24829                           	opt stack 18
 24830                           
 24831                           ;usb_device.c: 239: uint8_t i;
 24832                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 24833                           
 24834                           ;incstack = 0
 24835  002A9E  94A3               	bcf	4003,2,c	;volatile
 24836                           
 24837                           ;usb_device.c: 244: {UEIR = 0;};
 24838  002AA0  0E00               	movlw	0
 24839  002AA2  6E67               	movwf	3943,c	;volatile
 24840                           
 24841                           ;usb_device.c: 247: {UIR = 0;};
 24842  002AA4  0E00               	movlw	0
 24843  002AA6  6E65               	movwf	3941,c	;volatile
 24844                           
 24845                           ;usb_device.c: 250: UEP0 = 0;
 24846  002AA8  0E00               	movlw	0
 24847  002AAA  6E6A               	movwf	3946,c	;volatile
 24848                           
 24849                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 24850  002AAC  0E6B               	movlw	107
 24851  002AAE  6E01               	movwf	i2memset@p1,c
 24852  002AB0  0E0F               	movlw	15
 24853  002AB2  6E02               	movwf	i2memset@p1+1,c
 24854  002AB4  0E00               	movlw	0
 24855  002AB6  6E04               	movwf	i2memset@c+1,c
 24856  002AB8  0E00               	movlw	0
 24857  002ABA  6E03               	movwf	i2memset@c,c
 24858  002ABC  0E00               	movlw	0
 24859  002ABE  6E06               	movwf	i2memset@n+1,c
 24860  002AC0  0E02               	movlw	2
 24861  002AC2  6E05               	movwf	i2memset@n,c
 24862  002AC4  EC9E  F02A         	call	i2_memset	;wreg free
 24863                           
 24864                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24865  002AC8  0E16               	movlw	22
 24866  002ACA  6E62               	movwf	3938,c	;volatile
 24867  002ACC  0E9F               	movlw	159
 24868  002ACE  6E66               	movwf	3942,c	;volatile
 24869  002AD0  0E7B               	movlw	123
 24870  002AD2  6E64               	movwf	3940,c	;volatile
 24871                           
 24872                           ;usb_device.c: 257: ;
 24873                           ;usb_device.c: 260: ;
 24874                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24875  002AD4  0E00               	movlw	0
 24876  002AD6  6E09               	movwf	i2USBDeviceInit@i,c
 24877  002AD8                     i2l11138:
 24878  002AD8  0E0B               	movlw	11
 24879  002ADA  6409               	cpfsgt	i2USBDeviceInit@i,c
 24880  002ADC  D001               	goto	i2l1845
 24881  002ADE  D00E               	goto	i2u977_40
 24882  002AE0                     i2l1845:
 24883                           
 24884                           ;usb_device.c: 264: {
 24885                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24886  002AE0  5009               	movf	i2USBDeviceInit@i,w,c
 24887  002AE2  0D04               	mullw	4
 24888  002AE4  0E00               	movlw	0
 24889  002AE6  24F3               	addwf	prodl,w,c
 24890  002AE8  6ED9               	movwf	fsr2l,c
 24891  002AEA  0E04               	movlw	4
 24892  002AEC  20F4               	addwfc	prodh,w,c
 24893  002AEE  6EDA               	movwf	fsr2h,c
 24894  002AF0  6ADE               	clrf	postinc2,c
 24895  002AF2  6ADE               	clrf	postinc2,c
 24896  002AF4  6ADE               	clrf	postinc2,c
 24897  002AF6  6ADD               	clrf	postdec2,c
 24898  002AF8  2A09               	incf	i2USBDeviceInit@i,f,c
 24899  002AFA  D7EE               	goto	i2l11138
 24900  002AFC                     i2u977_40:
 24901                           
 24902                           ;usb_device.c: 266: }
 24903                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24904  002AFC  8C60               	bsf	3936,6,c	;volatile
 24905                           
 24906                           ;usb_device.c: 272: UADDR = 0x00;
 24907  002AFE  0E00               	movlw	0
 24908  002B00  6E63               	movwf	3939,c	;volatile
 24909                           
 24910                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24911  002B02  9860               	bcf	3936,4,c	;volatile
 24912                           
 24913                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24914  002B04  9C60               	bcf	3936,6,c	;volatile
 24915                           
 24916                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24917  002B06  D00A               	goto	i2l1847
 24918  002B08                     
 24919                           ;usb_device.c: 282: {
 24920                           ;usb_device.c: 283: (UIR &= 0xF7);
 24921  002B08  9665               	bcf	3941,3,c	;volatile
 24922                           
 24923                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24924  002B0A  0E00               	movlw	0
 24925  002B0C  0100               	movlb	0	; () banked
 24926  002B0E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24927                           
 24928                           ; BSR set to: 0
 24929                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24930  002B10  0E00               	movlw	0
 24931  002B12  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24935  002B14  0E00               	movlw	0
 24936  002B16  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24937  002B18  0E00               	movlw	0
 24938  002B1A  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24939  002B1C                     i2l1847:
 24940                           
 24941                           ; BSR set to: 0
 24942  002B1C  B665               	btfsc	3941,3,c	;volatile
 24943  002B1E  D7F4               	goto	i2l1848
 24944                           
 24945                           ;usb_device.c: 288: }
 24946                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24947  002B20  0E01               	movlw	1
 24948  002B22  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24949                           
 24950                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24951  002B24  0E01               	movlw	1
 24952  002B26  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24953                           
 24954                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24955  002B28  0E00               	movlw	0
 24956  002B2A  6E45               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24957                           
 24958                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24959  002B2C  0E00               	movlw	0
 24960  002B2E  6E44               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24961                           
 24962                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24963  002B30  0E00               	movlw	0
 24964  002B32  0101               	movlb	1	; () banked
 24965  002B34  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24966                           
 24967                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24968  002B36  0E00               	movlw	0
 24969  002B38  6E09               	movwf	i2USBDeviceInit@i,c
 24970  002B3A                     i2l11166:
 24971                           
 24972                           ; BSR set to: 1
 24973  002B3A  0E02               	movlw	2
 24974  002B3C  6409               	cpfsgt	i2USBDeviceInit@i,c
 24975  002B3E  D001               	goto	i2l1850
 24976  002B40  D02E               	goto	i2u980_40
 24977  002B42                     i2l1850:
 24978                           
 24979                           ;usb_device.c: 302: {
 24980                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24981                           
 24982                           ; BSR set to: 1
 24983  002B42  5009               	movf	i2USBDeviceInit@i,w,c
 24984  002B44  0D02               	mullw	2
 24985  002B46  0ECA               	movlw	low _pBDTEntryIn
 24986  002B48  24F3               	addwf	prodl,w,c
 24987  002B4A  6ED9               	movwf	fsr2l,c
 24988  002B4C  0E00               	movlw	high _pBDTEntryIn
 24989  002B4E  20F4               	addwfc	prodh,w,c
 24990  002B50  6EDA               	movwf	fsr2h,c
 24991  002B52  0E00               	movlw	0
 24992  002B54  6EDE               	movwf	postinc2,c
 24993  002B56  0E00               	movlw	0
 24994  002B58  6EDD               	movwf	postdec2,c
 24995                           
 24996                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24997  002B5A  5009               	movf	i2USBDeviceInit@i,w,c
 24998  002B5C  0D02               	mullw	2
 24999  002B5E  0E40               	movlw	low _pBDTEntryOut
 25000  002B60  24F3               	addwf	prodl,w,c
 25001  002B62  6ED9               	movwf	fsr2l,c
 25002  002B64  0E01               	movlw	high _pBDTEntryOut
 25003  002B66  20F4               	addwfc	prodh,w,c
 25004  002B68  6EDA               	movwf	fsr2h,c
 25005  002B6A  0E00               	movlw	0
 25006  002B6C  6EDE               	movwf	postinc2,c
 25007  002B6E  0E00               	movlw	0
 25008  002B70  6EDD               	movwf	postdec2,c
 25009                           
 25010                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25011  002B72  5009               	movf	i2USBDeviceInit@i,w,c
 25012  002B74  0D01               	mullw	1
 25013  002B76  0ED3               	movlw	low _ep_data_in
 25014  002B78  24F3               	addwf	prodl,w,c
 25015  002B7A  6ED9               	movwf	fsr2l,c
 25016  002B7C  0E00               	movlw	high _ep_data_in
 25017  002B7E  20F4               	addwfc	prodh,w,c
 25018  002B80  6EDA               	movwf	fsr2h,c
 25019  002B82  0E00               	movlw	0
 25020  002B84  6EDF               	movwf	indf2,c
 25021                           
 25022                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25023  002B86  5009               	movf	i2USBDeviceInit@i,w,c
 25024  002B88  0D01               	mullw	1
 25025  002B8A  0ED0               	movlw	low _ep_data_out
 25026  002B8C  24F3               	addwf	prodl,w,c
 25027  002B8E  6ED9               	movwf	fsr2l,c
 25028  002B90  0E00               	movlw	high _ep_data_out
 25029  002B92  20F4               	addwfc	prodh,w,c
 25030  002B94  6EDA               	movwf	fsr2h,c
 25031  002B96  0E00               	movlw	0
 25032  002B98  6EDF               	movwf	indf2,c
 25033  002B9A  2A09               	incf	i2USBDeviceInit@i,f,c
 25034  002B9C  D7CE               	goto	i2l11166
 25035  002B9E                     i2u980_40:
 25036                           
 25037                           ;usb_device.c: 307: }
 25038                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25039  002B9E  0E08               	movlw	8
 25040  002BA0  0100               	movlb	0	; () banked
 25041  002BA2  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 25042  002BA4  0E04               	movlw	4
 25043  002BA6  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25044                           
 25045                           ; BSR set to: 0
 25046                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25047  002BA8  0E16               	movlw	22
 25048  002BAA  6E6A               	movwf	3946,c	;volatile
 25049                           
 25050                           ; BSR set to: 0
 25051                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25052  002BAC  0E04               	movlw	4
 25053  002BAE  0104               	movlb	4	; () banked
 25054  002BB0  6F03               	movwf	3,b	;volatile
 25055  002BB2  0E30               	movlw	48
 25056  002BB4  6F02               	movwf	2,b	;volatile
 25057                           
 25058                           ; BSR set to: 4
 25059                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25060  002BB6  0E08               	movlw	8
 25061  002BB8  6F01               	movwf	1,b	;volatile
 25062                           
 25063                           ; BSR set to: 4
 25064                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25065  002BBA  0E04               	movlw	4
 25066  002BBC  6F00               	movwf	0,b	;volatile
 25067                           
 25068                           ; BSR set to: 4
 25069                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25070  002BBE  8F00               	bsf	0,7,b	;volatile
 25071                           
 25072                           ; BSR set to: 4
 25073                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25074  002BC0  0E00               	movlw	0
 25075  002BC2  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 25076                           
 25077                           ; BSR set to: 4
 25078                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25079  002BC4  0E00               	movlw	0
 25080  002BC6  0100               	movlb	0	; () banked
 25081  002BC8  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25082                           
 25083                           ; BSR set to: 0
 25084  002BCA  0012               	return		;funcret
 25085  002BCC                     __end_ofi2_USBDeviceInit:
 25086                           	opt stack 0
 25087                           pclatu	equ	0xFFB
 25088                           pclath	equ	0xFFA
 25089                           tblptru	equ	0xFF8
 25090                           tblptrh	equ	0xFF7
 25091                           tblptrl	equ	0xFF6
 25092                           tablat	equ	0xFF5
 25093                           prodh	equ	0xFF4
 25094                           prodl	equ	0xFF3
 25095                           intcon	equ	0xFF2
 25096                           intcon2	equ	0xFF1
 25097                           intcon3	equ	0xFF0
 25098                           indf0	equ	0xFEF
 25099                           postinc0	equ	0xFEE
 25100                           fsr0h	equ	0xFEA
 25101                           fsr0l	equ	0xFE9
 25102                           wreg	equ	0xFE8
 25103                           indf1	equ	0xFE7
 25104                           postdec1	equ	0xFE5
 25105                           fsr1h	equ	0xFE2
 25106                           fsr1l	equ	0xFE1
 25107                           indf2	equ	0xFDF
 25108                           postinc2	equ	0xFDE
 25109                           postdec2	equ	0xFDD
 25110                           plusw2	equ	0xFDB
 25111                           fsr2h	equ	0xFDA
 25112                           fsr2l	equ	0xFD9
 25113                           status	equ	0xFD8
 25114                           
 25115 ;; *************** function _USBWakeFromSuspend *****************
 25116 ;; Defined at:
 25117 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;		None
 25120 ;; Auto vars:     Size  Location     Type
 25121 ;;		None
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      void 
 25124 ;; Registers used:
 25125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25131 ;;      Params:         0       0       0       0       0       0       0       0       0
 25132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25134 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25135 ;;Total ram usage:        0 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; Hardware stack levels required when called:    5
 25138 ;; This function calls:
 25139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25140 ;; This function is called by:
 25141 ;;		_USBDeviceTasks
 25142 ;; This function uses a non-reentrant model
 25143 ;;
 25144                           
 25145                           	psect	text110
 25146  00547E                     __ptext110:
 25147                           	opt stack 0
 25148  00547E                     _USBWakeFromSuspend:
 25149                           	opt stack 14
 25150                           
 25151                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25152                           
 25153                           ; BSR set to: 0
 25154                           ;incstack = 0
 25155  00547E  0E00               	movlw	0
 25156  005480  0101               	movlb	1	; () banked
 25157  005482  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25161  005484  0E00               	movlw	0
 25162  005486  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25163  005488  0E74               	movlw	116
 25164  00548A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25165  00548C  0E00               	movlw	0
 25166  00548E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25167  005490  0E00               	movlw	0
 25168  005492  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25169  005494  0E00               	movlw	0
 25170  005496  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25171  005498  0E00               	movlw	0
 25172  00549A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25173  00549C  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25174                           
 25175                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25176  0054A0  9260               	bcf	3936,1,c	;volatile
 25177                           
 25178                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25179  0054A2  9464               	bcf	3940,2,c	;volatile
 25180                           
 25181                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25182  0054A4  D001               	goto	i2l2016
 25183  0054A6                     
 25184                           ;usb_device.c: 1977: {
 25185                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25186  0054A6  9465               	bcf	3941,2,c	;volatile
 25187  0054A8                     i2l2016:
 25188  0054A8  A465               	btfss	3941,2,c	;volatile
 25189  0054AA  0012               	return	
 25190  0054AC  D7FC               	goto	i2l2017
 25191  0054AE                     __end_of_USBWakeFromSuspend:
 25192                           	opt stack 0
 25193                           pclatu	equ	0xFFB
 25194                           pclath	equ	0xFFA
 25195                           tblptru	equ	0xFF8
 25196                           tblptrh	equ	0xFF7
 25197                           tblptrl	equ	0xFF6
 25198                           tablat	equ	0xFF5
 25199                           prodh	equ	0xFF4
 25200                           prodl	equ	0xFF3
 25201                           intcon	equ	0xFF2
 25202                           intcon2	equ	0xFF1
 25203                           intcon3	equ	0xFF0
 25204                           indf0	equ	0xFEF
 25205                           postinc0	equ	0xFEE
 25206                           fsr0h	equ	0xFEA
 25207                           fsr0l	equ	0xFE9
 25208                           wreg	equ	0xFE8
 25209                           indf1	equ	0xFE7
 25210                           postdec1	equ	0xFE5
 25211                           fsr1h	equ	0xFE2
 25212                           fsr1l	equ	0xFE1
 25213                           indf2	equ	0xFDF
 25214                           postinc2	equ	0xFDE
 25215                           postdec2	equ	0xFDD
 25216                           plusw2	equ	0xFDB
 25217                           fsr2h	equ	0xFDA
 25218                           fsr2l	equ	0xFD9
 25219                           status	equ	0xFD8
 25220                           
 25221 ;; *************** function _USBSuspend *****************
 25222 ;; Defined at:
 25223 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;		None
 25226 ;; Auto vars:     Size  Location     Type
 25227 ;;		None
 25228 ;; Return value:  Size  Location     Type
 25229 ;;                  1    wreg      void 
 25230 ;; Registers used:
 25231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25232 ;; Tracked objects:
 25233 ;;		On entry : 0/0
 25234 ;;		On exit  : 0/0
 25235 ;;		Unchanged: 0/0
 25236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25237 ;;      Params:         0       0       0       0       0       0       0       0       0
 25238 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25240 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25241 ;;Total ram usage:        0 bytes
 25242 ;; Hardware stack levels used:    1
 25243 ;; Hardware stack levels required when called:    5
 25244 ;; This function calls:
 25245 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25246 ;; This function is called by:
 25247 ;;		_USBDeviceTasks
 25248 ;; This function uses a non-reentrant model
 25249 ;;
 25250                           
 25251                           	psect	text111
 25252  005592                     __ptext111:
 25253                           	opt stack 0
 25254  005592                     _USBSuspend:
 25255                           	opt stack 14
 25256                           
 25257                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 25258                           
 25259                           ;incstack = 0
 25260  005592  8464               	bsf	3940,2,c	;volatile
 25261                           
 25262                           ;usb_device.c: 1915: (UIR &= 0xEF);
 25263  005594  9865               	bcf	3941,4,c	;volatile
 25264                           
 25265                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 25266  005596  8260               	bsf	3936,1,c	;volatile
 25267                           
 25268                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 25269  005598  0E01               	movlw	1
 25270  00559A  0101               	movlb	1	; () banked
 25271  00559C  6F5B               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25272                           
 25273                           ; BSR set to: 1
 25274                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25275  00559E  0E00               	movlw	0
 25276  0055A0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25277  0055A2  0E75               	movlw	117
 25278  0055A4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25279  0055A6  0E00               	movlw	0
 25280  0055A8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25281  0055AA  0E00               	movlw	0
 25282  0055AC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25283  0055AE  0E00               	movlw	0
 25284  0055B0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25285  0055B2  0E00               	movlw	0
 25286  0055B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25287  0055B6  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25288  0055BA  0012               	return		;funcret
 25289  0055BC                     __end_of_USBSuspend:
 25290                           	opt stack 0
 25291                           pclatu	equ	0xFFB
 25292                           pclath	equ	0xFFA
 25293                           tblptru	equ	0xFF8
 25294                           tblptrh	equ	0xFF7
 25295                           tblptrl	equ	0xFF6
 25296                           tablat	equ	0xFF5
 25297                           prodh	equ	0xFF4
 25298                           prodl	equ	0xFF3
 25299                           intcon	equ	0xFF2
 25300                           intcon2	equ	0xFF1
 25301                           intcon3	equ	0xFF0
 25302                           indf0	equ	0xFEF
 25303                           postinc0	equ	0xFEE
 25304                           fsr0h	equ	0xFEA
 25305                           fsr0l	equ	0xFE9
 25306                           wreg	equ	0xFE8
 25307                           indf1	equ	0xFE7
 25308                           postdec1	equ	0xFE5
 25309                           fsr1h	equ	0xFE2
 25310                           fsr1l	equ	0xFE1
 25311                           indf2	equ	0xFDF
 25312                           postinc2	equ	0xFDE
 25313                           postdec2	equ	0xFDD
 25314                           plusw2	equ	0xFDB
 25315                           fsr2h	equ	0xFDA
 25316                           fsr2l	equ	0xFD9
 25317                           status	equ	0xFD8
 25318                           
 25319 ;; *************** function _USBStallHandler *****************
 25320 ;; Defined at:
 25321 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 25322 ;; Parameters:    Size  Location     Type
 25323 ;;		None
 25324 ;; Auto vars:     Size  Location     Type
 25325 ;;		None
 25326 ;; Return value:  Size  Location     Type
 25327 ;;                  1    wreg      void 
 25328 ;; Registers used:
 25329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25330 ;; Tracked objects:
 25331 ;;		On entry : 0/0
 25332 ;;		On exit  : 0/0
 25333 ;;		Unchanged: 0/0
 25334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25335 ;;      Params:         0       0       0       0       0       0       0       0       0
 25336 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25337 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25338 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25339 ;;Total ram usage:        1 bytes
 25340 ;; Hardware stack levels used:    1
 25341 ;; This function calls:
 25342 ;;		Nothing
 25343 ;; This function is called by:
 25344 ;;		_USBDeviceTasks
 25345 ;; This function uses a non-reentrant model
 25346 ;;
 25347                           
 25348                           	psect	text112
 25349  0050D2                     __ptext112:
 25350                           	opt stack 0
 25351  0050D2                     _USBStallHandler:
 25352                           	opt stack 19
 25353                           
 25354                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 25355                           
 25356                           ;incstack = 0
 25357  0050D2  A06A               	btfss	3946,0,c	;volatile
 25358  0050D4  D01D               	goto	i2l2008
 25359                           
 25360                           ;usb_device.c: 1859: {
 25361                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25362  0050D6  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25363  0050DA  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25364  0050DE  0E80               	movlw	128
 25365  0050E0  18DE               	xorwf	postinc2,w,c
 25366  0050E2  A4D8               	btfss	status,2,c
 25367  0050E4  D014               	goto	i2l2009
 25368  0050E6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25369  0050EA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25370  0050EE  0E84               	movlw	132
 25371  0050F0  18DE               	xorwf	postinc2,w,c
 25372  0050F2  A4D8               	btfss	status,2,c
 25373  0050F4  D00C               	goto	i2l2009
 25374                           
 25375                           ;usb_device.c: 1862: {
 25376                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25377  0050F6  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25378  0050FA  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25379  0050FE  0E0C               	movlw	12
 25380  005100  6EDF               	movwf	indf2,c
 25381                           
 25382                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25383  005102  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25384  005106  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25385  00510A  0E00               	movlw	0
 25386  00510C  8EDB               	bsf	plusw2,7,c
 25387  00510E                     i2l2009:
 25388                           
 25389                           ;usb_device.c: 1866: }
 25390                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 25391  00510E  906A               	bcf	3946,0,c	;volatile
 25392  005110                     i2l2008:
 25393                           
 25394                           ;usb_device.c: 1868: }
 25395                           ;usb_device.c: 1870: (UIR &= 0xDF);
 25396  005110  9A65               	bcf	3941,5,c	;volatile
 25397  005112  0012               	return		;funcret
 25398  005114                     __end_of_USBStallHandler:
 25399                           	opt stack 0
 25400                           pclatu	equ	0xFFB
 25401                           pclath	equ	0xFFA
 25402                           tblptru	equ	0xFF8
 25403                           tblptrh	equ	0xFF7
 25404                           tblptrl	equ	0xFF6
 25405                           tablat	equ	0xFF5
 25406                           prodh	equ	0xFF4
 25407                           prodl	equ	0xFF3
 25408                           intcon	equ	0xFF2
 25409                           intcon2	equ	0xFF1
 25410                           intcon3	equ	0xFF0
 25411                           indf0	equ	0xFEF
 25412                           postinc0	equ	0xFEE
 25413                           fsr0h	equ	0xFEA
 25414                           fsr0l	equ	0xFE9
 25415                           wreg	equ	0xFE8
 25416                           indf1	equ	0xFE7
 25417                           postdec1	equ	0xFE5
 25418                           fsr1h	equ	0xFE2
 25419                           fsr1l	equ	0xFE1
 25420                           indf2	equ	0xFDF
 25421                           postinc2	equ	0xFDE
 25422                           postdec2	equ	0xFDD
 25423                           plusw2	equ	0xFDB
 25424                           fsr2h	equ	0xFDA
 25425                           fsr2l	equ	0xFD9
 25426                           status	equ	0xFD8
 25427                           
 25428 ;; *************** function _USBCtrlEPService *****************
 25429 ;; Defined at:
 25430 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;		None
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 25435 ;; Return value:  Size  Location     Type
 25436 ;;                  1    wreg      void 
 25437 ;; Registers used:
 25438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25439 ;; Tracked objects:
 25440 ;;		On entry : 0/0
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25444 ;;      Params:         0       0       0       0       0       0       0       0       0
 25445 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25446 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25447 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25448 ;;Total ram usage:        3 bytes
 25449 ;; Hardware stack levels used:    1
 25450 ;; Hardware stack levels required when called:    8
 25451 ;; This function calls:
 25452 ;;		_USBCtrlTrfInHandler
 25453 ;;		_USBCtrlTrfOutHandler
 25454 ;;		_USBCtrlTrfSetupHandler
 25455 ;; This function is called by:
 25456 ;;		_USBDeviceTasks
 25457 ;; This function uses a non-reentrant model
 25458 ;;
 25459                           
 25460                           	psect	text113
 25461  0037EE                     __ptext113:
 25462                           	opt stack 0
 25463  0037EE                     _USBCtrlEPService:
 25464                           	opt stack 11
 25465                           
 25466                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 25467                           
 25468                           ;incstack = 0
 25469  0037EE  0E2D               	movlw	45
 25470  0037F0  6E49               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25471                           
 25472                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 25473  0037F2  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25474  0037F6  0EFD               	movlw	253
 25475  0037F8  161C               	andwf	??_USBCtrlEPService,f,c
 25476  0037FA  A4D8               	btfss	status,2,c
 25477  0037FC  D057               	goto	i2l2022
 25478                           
 25479                           ;usb_device.c: 2013: {
 25480                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25481  0037FE  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25482  003802  90D8               	bcf	status,0,c
 25483  003804  321C               	rrcf	??_USBCtrlEPService,f,c
 25484  003806  0E3F               	movlw	63
 25485  003808  161C               	andwf	??_USBCtrlEPService,f,c
 25486  00380A  501C               	movf	??_USBCtrlEPService,w,c
 25487  00380C  0D04               	mullw	4
 25488  00380E  0E00               	movlw	0
 25489  003810  24F3               	addwf	prodl,w,c
 25490  003812  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 25491  003814  0E04               	movlw	4
 25492  003816  20F4               	addwfc	prodh,w,c
 25493  003818  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25494                           
 25495                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25496  00381A  C038  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25497  00381E  C039  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25498                           
 25499                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25500  003822  0E04               	movlw	4
 25501  003824  1A36               	xorwf	_pBDTEntryEP0OutNext,f,c
 25502                           
 25503                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25504  003826  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25505  00382A  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25506  00382E  30DF               	rrcf	indf2,w,c
 25507  003830  32E8               	rrcf	wreg,f,c
 25508  003832  0B0F               	andlw	15
 25509  003834  0A0D               	xorlw	13
 25510  003836  A4D8               	btfss	status,2,c
 25511  003838  D036               	goto	i2l2023
 25512                           
 25513                           ;usb_device.c: 2025: {
 25514                           ;usb_device.c: 2026: unsigned char setup_cnt;
 25515                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25516  00383A  0E00               	movlw	0
 25517  00383C  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 25518  00383E                     i2l11102:
 25519  00383E  0E07               	movlw	7
 25520  003840  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25521  003842  D001               	goto	i2l2024
 25522  003844  D023               	goto	i2u974_40
 25523  003846                     i2l2024:
 25524                           
 25525                           ;usb_device.c: 2033: {
 25526                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25527  003846  EE20 F002          	lfsr	2,2
 25528  00384A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 25529  00384C  26D9               	addwf	fsr2l,f,c
 25530  00384E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25531  003850  22DA               	addwfc	fsr2h,f,c
 25532  003852  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 25533  003856  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 25534  00385A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25535  00385E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25536  003862  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 25537  003864  0D01               	mullw	1
 25538  003866  0E30               	movlw	48
 25539  003868  24F3               	addwf	prodl,w,c
 25540  00386A  6EE1               	movwf	fsr1l,c
 25541  00386C  0E04               	movlw	4
 25542  00386E  20F4               	addwfc	prodh,w,c
 25543  003870  6EE2               	movwf	fsr1h,c
 25544  003872  CFDF FFE7          	movff	indf2,indf1
 25545                           
 25546                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 25547  003876  EE20 F002          	lfsr	2,2
 25548  00387A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 25549  00387C  26D9               	addwf	fsr2l,f,c
 25550  00387E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25551  003880  22DA               	addwfc	fsr2h,f,c
 25552  003882  2ADE               	incf	postinc2,f,c
 25553  003884  0E00               	movlw	0
 25554  003886  22DD               	addwfc	postdec2,f,c
 25555  003888  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 25556  00388A  D7D9               	goto	i2l11102
 25557  00388C                     i2u974_40:
 25558                           
 25559                           ;usb_device.c: 2036: }
 25560                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25561  00388C  EE20 F002          	lfsr	2,2
 25562  003890  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 25563  003892  26D9               	addwf	fsr2l,f,c
 25564  003894  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25565  003896  22DA               	addwfc	fsr2h,f,c
 25566  003898  0E30               	movlw	48
 25567  00389A  6EDE               	movwf	postinc2,c
 25568  00389C  0E04               	movlw	4
 25569  00389E  6EDD               	movwf	postdec2,c
 25570                           
 25571                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 25572  0038A0  EC4B  F023         	call	_USBCtrlTrfSetupHandler	;wreg free
 25573                           
 25574                           ;usb_device.c: 2041: }
 25575  0038A4  0012               	return	
 25576  0038A6                     i2l2023:
 25577                           
 25578                           ;usb_device.c: 2042: else
 25579                           ;usb_device.c: 2043: {
 25580                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 25581  0038A6  EC05  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 25582                           
 25583                           ;usb_device.c: 2046: }
 25584                           ;usb_device.c: 2047: }
 25585  0038AA  0012               	return	
 25586  0038AC                     i2l2022:
 25587                           
 25588                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 25589  0038AC  5059               	movf	_USTATcopy,w,c	;volatile
 25590  0038AE  0BFD               	andlw	253
 25591  0038B0  0A04               	xorlw	4
 25592  0038B2  A4D8               	btfss	status,2,c
 25593  0038B4  0012               	return	
 25594                           
 25595                           ;usb_device.c: 2049: {
 25596                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 25597  0038B6  ECD3  F019         	call	_USBCtrlTrfInHandler	;wreg free
 25598  0038BA  0012               	return	
 25599  0038BC                     __end_of_USBCtrlEPService:
 25600                           	opt stack 0
 25601                           pclatu	equ	0xFFB
 25602                           pclath	equ	0xFFA
 25603                           tblptru	equ	0xFF8
 25604                           tblptrh	equ	0xFF7
 25605                           tblptrl	equ	0xFF6
 25606                           tablat	equ	0xFF5
 25607                           prodh	equ	0xFF4
 25608                           prodl	equ	0xFF3
 25609                           intcon	equ	0xFF2
 25610                           intcon2	equ	0xFF1
 25611                           intcon3	equ	0xFF0
 25612                           indf0	equ	0xFEF
 25613                           postinc0	equ	0xFEE
 25614                           fsr0h	equ	0xFEA
 25615                           fsr0l	equ	0xFE9
 25616                           wreg	equ	0xFE8
 25617                           indf1	equ	0xFE7
 25618                           postdec1	equ	0xFE5
 25619                           fsr1h	equ	0xFE2
 25620                           fsr1l	equ	0xFE1
 25621                           indf2	equ	0xFDF
 25622                           postinc2	equ	0xFDE
 25623                           postdec2	equ	0xFDD
 25624                           plusw2	equ	0xFDB
 25625                           fsr2h	equ	0xFDA
 25626                           fsr2l	equ	0xFD9
 25627                           status	equ	0xFD8
 25628                           
 25629 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25630 ;; Defined at:
 25631 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 25632 ;; Parameters:    Size  Location     Type
 25633 ;;		None
 25634 ;; Auto vars:     Size  Location     Type
 25635 ;;		None
 25636 ;; Return value:  Size  Location     Type
 25637 ;;                  1    wreg      void 
 25638 ;; Registers used:
 25639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25640 ;; Tracked objects:
 25641 ;;		On entry : 0/0
 25642 ;;		On exit  : 0/0
 25643 ;;		Unchanged: 0/0
 25644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25645 ;;      Params:         0       0       0       0       0       0       0       0       0
 25646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25649 ;;Total ram usage:        0 bytes
 25650 ;; Hardware stack levels used:    1
 25651 ;; Hardware stack levels required when called:    7
 25652 ;; This function calls:
 25653 ;;		_USBCheckStdRequest
 25654 ;;		_USBCtrlEPServiceComplete
 25655 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25656 ;; This function is called by:
 25657 ;;		_USBCtrlEPService
 25658 ;; This function uses a non-reentrant model
 25659 ;;
 25660                           
 25661                           	psect	text114
 25662  004696                     __ptext114:
 25663                           	opt stack 0
 25664  004696                     _USBCtrlTrfSetupHandler:
 25665                           	opt stack 11
 25666                           
 25667                           ;usb_device.c: 2102: shortPacketStatus = 0;
 25668                           
 25669                           ;incstack = 0
 25670  004696  0E00               	movlw	0
 25671  004698  6E4E               	movwf	_shortPacketStatus,c	;volatile
 25672                           
 25673                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 25674  00469A  0E00               	movlw	0
 25675  00469C  6E48               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25676                           
 25677                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 25678  00469E  0E00               	movlw	0
 25679  0046A0  6E45               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25680                           
 25681                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 25682  0046A2  0E00               	movlw	0
 25683  0046A4  6E44               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25684                           
 25685                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 25686  0046A6  0E00               	movlw	0
 25687  0046A8  6E4A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25688                           
 25689                           ;usb_device.c: 2107: controlTransferState = 0;
 25690  0046AA  0E00               	movlw	0
 25691  0046AC  6E4D               	movwf	_controlTransferState,c	;volatile
 25692                           
 25693                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25694  0046AE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25695  0046B2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25696  0046B6  0E7F               	movlw	127
 25697  0046B8  16DF               	andwf	indf2,f,c
 25698                           
 25699                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25700  0046BA  0E04               	movlw	4
 25701  0046BC  0100               	movlb	0	; () banked
 25702  0046BE  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25706  0046C0  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25707  0046C4  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25708  0046C8  0E7F               	movlw	127
 25709  0046CA  16DF               	andwf	indf2,f,c
 25710                           
 25711                           ; BSR set to: 0
 25712                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25713  0046CC  0E04               	movlw	4
 25714  0046CE  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 25715                           
 25716                           ; BSR set to: 0
 25717                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25718  0046D0  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25719  0046D4  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25720  0046D8  0E7F               	movlw	127
 25721  0046DA  16DF               	andwf	indf2,f,c
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 25725  0046DC  0E00               	movlw	0
 25726  0046DE  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 25730  0046E0  0E00               	movlw	0
 25731  0046E2  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25732  0046E4  0E00               	movlw	0
 25733  0046E6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 25737  0046E8  0E00               	movlw	0
 25738  0046EA  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25739                           
 25740                           ; BSR set to: 0
 25741                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 25742  0046EC  0E00               	movlw	0
 25743  0046EE  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25744  0046F0  0E00               	movlw	0
 25745  0046F2  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25746                           
 25747                           ; BSR set to: 0
 25748                           ;usb_device.c: 2131: USBCheckStdRequest();
 25749  0046F4  ECF1  F018         	call	_USBCheckStdRequest	;wreg free
 25750                           
 25751                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25752  0046F8  0E00               	movlw	0
 25753  0046FA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25754  0046FC  0E03               	movlw	3
 25755  0046FE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25756  004700  0E00               	movlw	0
 25757  004702  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25758  004704  0E00               	movlw	0
 25759  004706  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25760  004708  0E00               	movlw	0
 25761  00470A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25762  00470C  0E00               	movlw	0
 25763  00470E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25764  004710  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25765                           
 25766                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 25767  004714  EC8F  F017         	call	_USBCtrlEPServiceComplete	;wreg free
 25768  004718  0012               	return		;funcret
 25769  00471A                     __end_of_USBCtrlTrfSetupHandler:
 25770                           	opt stack 0
 25771                           pclatu	equ	0xFFB
 25772                           pclath	equ	0xFFA
 25773                           tblptru	equ	0xFF8
 25774                           tblptrh	equ	0xFF7
 25775                           tblptrl	equ	0xFF6
 25776                           tablat	equ	0xFF5
 25777                           prodh	equ	0xFF4
 25778                           prodl	equ	0xFF3
 25779                           intcon	equ	0xFF2
 25780                           intcon2	equ	0xFF1
 25781                           intcon3	equ	0xFF0
 25782                           indf0	equ	0xFEF
 25783                           postinc0	equ	0xFEE
 25784                           fsr0h	equ	0xFEA
 25785                           fsr0l	equ	0xFE9
 25786                           wreg	equ	0xFE8
 25787                           indf1	equ	0xFE7
 25788                           postdec1	equ	0xFE5
 25789                           fsr1h	equ	0xFE2
 25790                           fsr1l	equ	0xFE1
 25791                           indf2	equ	0xFDF
 25792                           postinc2	equ	0xFDE
 25793                           postdec2	equ	0xFDD
 25794                           plusw2	equ	0xFDB
 25795                           fsr2h	equ	0xFDA
 25796                           fsr2l	equ	0xFD9
 25797                           status	equ	0xFD8
 25798                           
 25799 ;; *************** function _USBCtrlEPServiceComplete *****************
 25800 ;; Defined at:
 25801 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 25802 ;; Parameters:    Size  Location     Type
 25803 ;;		None
 25804 ;; Auto vars:     Size  Location     Type
 25805 ;;		None
 25806 ;; Return value:  Size  Location     Type
 25807 ;;                  1    wreg      void 
 25808 ;; Registers used:
 25809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25810 ;; Tracked objects:
 25811 ;;		On entry : 0/0
 25812 ;;		On exit  : 0/0
 25813 ;;		Unchanged: 0/0
 25814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25815 ;;      Params:         0       0       0       0       0       0       0       0       0
 25816 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25817 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25818 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25819 ;;Total ram usage:        0 bytes
 25820 ;; Hardware stack levels used:    1
 25821 ;; Hardware stack levels required when called:    2
 25822 ;; This function calls:
 25823 ;;		_USBCtrlEPAllowDataStage
 25824 ;;		_USBCtrlEPAllowStatusStage
 25825 ;; This function is called by:
 25826 ;;		_USBCtrlTrfSetupHandler
 25827 ;; This function uses a non-reentrant model
 25828 ;;
 25829                           
 25830                           	psect	text115
 25831  002F1E                     __ptext115:
 25832                           	opt stack 0
 25833  002F1E                     _USBCtrlEPServiceComplete:
 25834                           	opt stack 15
 25835                           
 25836                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 25837                           
 25838                           ;incstack = 0
 25839  002F1E  9860               	bcf	3936,4,c	;volatile
 25840                           
 25841                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 25842  002F20  0100               	movlb	0	; () banked
 25843  002F22  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25844  002F24  D038               	goto	i2l1932
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;usb_device.c: 1295: {
 25848                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 25849  002F26  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25850  002F28  D00B               	goto	i2l1933
 25851                           
 25852                           ; BSR set to: 0
 25853                           ;usb_device.c: 1297: {
 25854                           ;usb_device.c: 1298: controlTransferState = 2;
 25855  002F2A  0E02               	movlw	2
 25856  002F2C  6E4D               	movwf	_controlTransferState,c	;volatile
 25857                           
 25858                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 25859  002F2E  5044               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25860  002F30  B4D8               	btfsc	status,2,c
 25861                           
 25862                           ; BSR set to: 0
 25863                           ;usb_device.c: 1310: {
 25864                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 25865  002F32  EC0B  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25866                           
 25867                           ;usb_device.c: 1312: }
 25868                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 25869  002F36  0E00               	movlw	0
 25870  002F38  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25871                           
 25872                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 25873  002F3A  0E00               	movlw	0
 25874  002F3C  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25875                           
 25876                           ;usb_device.c: 1318: }
 25877  002F3E  0012               	return	
 25878  002F40                     i2l1933:
 25879                           
 25880                           ;usb_device.c: 1319: else
 25881                           ;usb_device.c: 1320: {
 25882                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 25883  002F40  EE20 F001          	lfsr	2,1
 25884  002F44  5036               	movf	_pBDTEntryEP0OutNext,w,c
 25885  002F46  26D9               	addwf	fsr2l,f,c
 25886  002F48  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 25887  002F4A  22DA               	addwfc	fsr2h,f,c
 25888  002F4C  0E08               	movlw	8
 25889  002F4E  6EDF               	movwf	indf2,c
 25890                           
 25891                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25892  002F50  EE20 F002          	lfsr	2,2
 25893  002F54  5036               	movf	_pBDTEntryEP0OutNext,w,c
 25894  002F56  26D9               	addwf	fsr2l,f,c
 25895  002F58  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 25896  002F5A  22DA               	addwfc	fsr2h,f,c
 25897  002F5C  0E30               	movlw	48
 25898  002F5E  6EDE               	movwf	postinc2,c
 25899  002F60  0E04               	movlw	4
 25900  002F62  6EDD               	movwf	postdec2,c
 25901                           
 25902                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25903  002F64  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25904  002F68  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25905  002F6C  0E0C               	movlw	12
 25906  002F6E  6EDF               	movwf	indf2,c
 25907                           
 25908                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25909  002F70  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25910  002F74  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25911  002F78  0E00               	movlw	0
 25912  002F7A  8EDB               	bsf	plusw2,7,c
 25913                           
 25914                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 25915  002F7C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25916  002F80  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25917  002F84  0E04               	movlw	4
 25918  002F86  6EDF               	movwf	indf2,c
 25919                           
 25920                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25921  002F88  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 25922  002F8C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25923  002F90  0E00               	movlw	0
 25924  002F92  8EDB               	bsf	plusw2,7,c
 25925                           
 25926                           ;usb_device.c: 1331: }
 25927                           ;usb_device.c: 1332: }
 25928  002F94  0012               	return	
 25929  002F96                     i2l1932:
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;usb_device.c: 1333: else
 25933                           ;usb_device.c: 1334: {
 25934                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 25935  002F96  0104               	movlb	4	; () banked
 25936  002F98  AF30               	btfss	48,7,b	;volatile
 25937  002F9A  D010               	goto	i2l1937
 25938                           
 25939                           ; BSR set to: 4
 25940                           ;usb_device.c: 1336: {
 25941                           ;usb_device.c: 1337: controlTransferState = 1;
 25942  002F9C  0E01               	movlw	1
 25943  002F9E  6E4D               	movwf	_controlTransferState,c	;volatile
 25944                           
 25945                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 25946  002FA0  5045               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25947  002FA2  B4D8               	btfsc	status,2,c
 25948                           
 25949                           ; BSR set to: 4
 25950                           ;usb_device.c: 1352: {
 25951                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 25952  002FA4  EC0B  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
 25953                           
 25954                           ;usb_device.c: 1354: }
 25955                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 25956  002FA8  0E00               	movlw	0
 25957  002FAA  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25958                           
 25959                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 25960  002FAC  0E00               	movlw	0
 25961  002FAE  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25962                           
 25963                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 25964  002FB0  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25965  002FB2  A4D8               	btfss	status,2,c
 25966  002FB4  0012               	return	
 25967                           
 25968                           ;usb_device.c: 1379: {
 25969                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 25970  002FB6  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25971                           
 25972                           ;usb_device.c: 1381: }
 25973                           ;usb_device.c: 1382: }
 25974  002FBA  0012               	return	
 25975  002FBC                     i2l1937:
 25976                           
 25977                           ;usb_device.c: 1383: else
 25978                           ;usb_device.c: 1384: {
 25979                           ;usb_device.c: 1395: controlTransferState = 2;
 25980  002FBC  0E02               	movlw	2
 25981  002FBE  6E4D               	movwf	_controlTransferState,c	;volatile
 25982                           
 25983                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 25984  002FC0  EE20 F001          	lfsr	2,1
 25985  002FC4  5036               	movf	_pBDTEntryEP0OutNext,w,c
 25986  002FC6  26D9               	addwf	fsr2l,f,c
 25987  002FC8  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 25988  002FCA  22DA               	addwfc	fsr2h,f,c
 25989  002FCC  0E08               	movlw	8
 25990  002FCE  6EDF               	movwf	indf2,c
 25991                           
 25992                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25993  002FD0  EE20 F002          	lfsr	2,2
 25994  002FD4  5036               	movf	_pBDTEntryEP0OutNext,w,c
 25995  002FD6  26D9               	addwf	fsr2l,f,c
 25996  002FD8  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 25997  002FDA  22DA               	addwfc	fsr2h,f,c
 25998  002FDC  0E30               	movlw	48
 25999  002FDE  6EDE               	movwf	postinc2,c
 26000  002FE0  0E04               	movlw	4
 26001  002FE2  6EDD               	movwf	postdec2,c
 26002                           
 26003                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26004  002FE4  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26005  002FE8  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26006  002FEC  0E04               	movlw	4
 26007  002FEE  6EDF               	movwf	indf2,c
 26008                           
 26009                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26010  002FF0  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26011  002FF4  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26012  002FF8  0E00               	movlw	0
 26013  002FFA  8EDB               	bsf	plusw2,7,c
 26014                           
 26015                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26016  002FFC  0E00               	movlw	0
 26017  002FFE  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26018                           
 26019                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26020  003000  0E00               	movlw	0
 26021  003002  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26022                           
 26023                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26024  003004  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26025  003006  A4D8               	btfss	status,2,c
 26026  003008  0012               	return	
 26027                           
 26028                           ;usb_device.c: 1407: {
 26029                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26030  00300A  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26031  00300E  0012               	return	
 26032  003010                     __end_of_USBCtrlEPServiceComplete:
 26033                           	opt stack 0
 26034                           pclatu	equ	0xFFB
 26035                           pclath	equ	0xFFA
 26036                           tblptru	equ	0xFF8
 26037                           tblptrh	equ	0xFF7
 26038                           tblptrl	equ	0xFF6
 26039                           tablat	equ	0xFF5
 26040                           prodh	equ	0xFF4
 26041                           prodl	equ	0xFF3
 26042                           intcon	equ	0xFF2
 26043                           intcon2	equ	0xFF1
 26044                           intcon3	equ	0xFF0
 26045                           indf0	equ	0xFEF
 26046                           postinc0	equ	0xFEE
 26047                           fsr0h	equ	0xFEA
 26048                           fsr0l	equ	0xFE9
 26049                           wreg	equ	0xFE8
 26050                           indf1	equ	0xFE7
 26051                           postdec1	equ	0xFE5
 26052                           fsr1h	equ	0xFE2
 26053                           fsr1l	equ	0xFE1
 26054                           indf2	equ	0xFDF
 26055                           postinc2	equ	0xFDE
 26056                           postdec2	equ	0xFDD
 26057                           plusw2	equ	0xFDB
 26058                           fsr2h	equ	0xFDA
 26059                           fsr2l	equ	0xFD9
 26060                           status	equ	0xFD8
 26061                           
 26062 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26063 ;; Defined at:
 26064 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26065 ;; Parameters:    Size  Location     Type
 26066 ;;		None
 26067 ;; Auto vars:     Size  Location     Type
 26068 ;;		None
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      void 
 26071 ;; Registers used:
 26072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26078 ;;      Params:         0       0       0       0       0       0       0       0       0
 26079 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26080 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26081 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26082 ;;Total ram usage:        0 bytes
 26083 ;; Hardware stack levels used:    1
 26084 ;; Hardware stack levels required when called:    1
 26085 ;; This function calls:
 26086 ;;		_USBCtrlTrfTxService
 26087 ;; This function is called by:
 26088 ;;		_USBCtrlEPServiceComplete
 26089 ;; This function uses a non-reentrant model
 26090 ;;
 26091                           
 26092                           	psect	text116
 26093  004216                     __ptext116:
 26094                           	opt stack 0
 26095  004216                     _USBCtrlEPAllowDataStage:
 26096                           	opt stack 15
 26097                           
 26098                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26099                           
 26100                           ;incstack = 0
 26101  004216  0E00               	movlw	0
 26102  004218  6E45               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26103                           
 26104                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26105  00421A  0E00               	movlw	0
 26106  00421C  6E44               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26107                           
 26108                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26109  00421E  0E02               	movlw	2
 26110  004220  184D               	xorwf	_controlTransferState,w,c	;volatile
 26111  004222  A4D8               	btfss	status,2,c
 26112  004224  D01F               	goto	i2l1921
 26113                           
 26114                           ;usb_device.c: 1179: {
 26115                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26116  004226  EE20 F001          	lfsr	2,1
 26117  00422A  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26118  00422C  26D9               	addwf	fsr2l,f,c
 26119  00422E  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26120  004230  22DA               	addwfc	fsr2h,f,c
 26121  004232  0E08               	movlw	8
 26122  004234  6EDF               	movwf	indf2,c
 26123                           
 26124                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26125  004236  EE20 F002          	lfsr	2,2
 26126  00423A  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26127  00423C  26D9               	addwf	fsr2l,f,c
 26128  00423E  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26129  004240  22DA               	addwfc	fsr2h,f,c
 26130  004242  0E38               	movlw	56
 26131  004244  6EDE               	movwf	postinc2,c
 26132  004246  0E04               	movlw	4
 26133  004248  6EDD               	movwf	postdec2,c
 26134                           
 26135                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26136  00424A  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26137  00424E  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26138  004252  0E48               	movlw	72
 26139  004254  6EDF               	movwf	indf2,c
 26140                           
 26141                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26142  004256  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26143  00425A  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26144  00425E  0E00               	movlw	0
 26145  004260  8EDB               	bsf	plusw2,7,c
 26146                           
 26147                           ;usb_device.c: 1185: }
 26148  004262  0012               	return	
 26149  004264                     i2l1921:
 26150                           
 26151                           ;usb_device.c: 1186: else
 26152                           ;usb_device.c: 1187: {
 26153                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26154  004264  0100               	movlb	0	; () banked
 26155  004266  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26156  004268  0104               	movlb	4	; () banked
 26157  00426A  5D36               	subwf	54,w,b	;volatile
 26158  00426C  0100               	movlb	0	; () banked
 26159  00426E  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26160  004270  0104               	movlb	4	; () banked
 26161  004272  5937               	subwfb	55,w,b	;volatile
 26162  004274  B0D8               	btfsc	status,0,c
 26163  004276  D004               	goto	i2l1923
 26164                           
 26165                           ; BSR set to: 4
 26166                           ;usb_device.c: 1191: {
 26167                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26168  004278  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 26169  00427C  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 26170  004280                     i2l1923:
 26171                           
 26172                           ; BSR set to: 4
 26173                           ;usb_device.c: 1193: }
 26174                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26175                           
 26176                           ; BSR set to: 4
 26177  004280  EC8D  F01B         	call	_USBCtrlTrfTxService	;wreg free
 26178                           
 26179                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26180  004284  0100               	movlb	0	; () banked
 26181  004286  EE20 F002          	lfsr	2,2
 26182  00428A  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 26183  00428C  26D9               	addwf	fsr2l,f,c
 26184  00428E  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26185  004290  22DA               	addwfc	fsr2h,f,c
 26186  004292  0E38               	movlw	56
 26187  004294  6EDE               	movwf	postinc2,c
 26188  004296  0E04               	movlw	4
 26189  004298  6EDD               	movwf	postdec2,c
 26190                           
 26191                           ; BSR set to: 0
 26192                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26193  00429A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26194  00429E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26195  0042A2  0E48               	movlw	72
 26196  0042A4  6EDF               	movwf	indf2,c
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26200  0042A6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26201  0042AA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26202  0042AE  0E00               	movlw	0
 26203  0042B0  8EDB               	bsf	plusw2,7,c
 26204  0042B2  0012               	return	
 26205  0042B4                     __end_of_USBCtrlEPAllowDataStage:
 26206                           	opt stack 0
 26207                           pclatu	equ	0xFFB
 26208                           pclath	equ	0xFFA
 26209                           tblptru	equ	0xFF8
 26210                           tblptrh	equ	0xFF7
 26211                           tblptrl	equ	0xFF6
 26212                           tablat	equ	0xFF5
 26213                           prodh	equ	0xFF4
 26214                           prodl	equ	0xFF3
 26215                           intcon	equ	0xFF2
 26216                           intcon2	equ	0xFF1
 26217                           intcon3	equ	0xFF0
 26218                           indf0	equ	0xFEF
 26219                           postinc0	equ	0xFEE
 26220                           fsr0h	equ	0xFEA
 26221                           fsr0l	equ	0xFE9
 26222                           wreg	equ	0xFE8
 26223                           indf1	equ	0xFE7
 26224                           postdec1	equ	0xFE5
 26225                           fsr1h	equ	0xFE2
 26226                           fsr1l	equ	0xFE1
 26227                           indf2	equ	0xFDF
 26228                           postinc2	equ	0xFDE
 26229                           postdec2	equ	0xFDD
 26230                           plusw2	equ	0xFDB
 26231                           fsr2h	equ	0xFDA
 26232                           fsr2l	equ	0xFD9
 26233                           status	equ	0xFD8
 26234                           
 26235 ;; *************** function _USBCheckStdRequest *****************
 26236 ;; Defined at:
 26237 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 26238 ;; Parameters:    Size  Location     Type
 26239 ;;		None
 26240 ;; Auto vars:     Size  Location     Type
 26241 ;;		None
 26242 ;; Return value:  Size  Location     Type
 26243 ;;                  1    wreg      void 
 26244 ;; Registers used:
 26245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26246 ;; Tracked objects:
 26247 ;;		On entry : 0/0
 26248 ;;		On exit  : 0/0
 26249 ;;		Unchanged: 0/0
 26250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26251 ;;      Params:         0       0       0       0       0       0       0       0       0
 26252 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26253 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26254 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26255 ;;Total ram usage:        0 bytes
 26256 ;; Hardware stack levels used:    1
 26257 ;; Hardware stack levels required when called:    6
 26258 ;; This function calls:
 26259 ;;		_USBStdFeatureReqHandler
 26260 ;;		_USBStdGetDscHandler
 26261 ;;		_USBStdGetStatusHandler
 26262 ;;		_USBStdSetCfgHandler
 26263 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26264 ;; This function is called by:
 26265 ;;		_USBCtrlTrfSetupHandler
 26266 ;; This function uses a non-reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text117
 26270  0031E2                     __ptext117:
 26271                           	opt stack 0
 26272  0031E2                     _USBCheckStdRequest:
 26273                           	opt stack 11
 26274                           
 26275                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 26276                           
 26277                           ;incstack = 0
 26278  0031E2  0104               	movlb	4	; () banked
 26279  0031E4  3930               	swapf	48,w,b	;volatile
 26280  0031E6  32E8               	rrcf	wreg,f,c
 26281  0031E8  0B03               	andlw	3
 26282  0031EA  0900               	iorlw	0
 26283  0031EC  A4D8               	btfss	status,2,c
 26284  0031EE  0012               	return	
 26285  0031F0  D047               	goto	i2l2058
 26286  0031F2                     i2l2059:
 26287                           
 26288                           ; BSR set to: 4
 26289                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 26290  0031F2  0100               	movlb	0	; () banked
 26291  0031F4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 26295  0031F6  0E08               	movlw	8
 26296  0031F8  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26297                           
 26298                           ;usb_device.c: 2327: break;
 26299  0031FA  0012               	return	
 26300  0031FC                     
 26301                           ;usb_device.c: 2329: USBStdGetDscHandler();
 26302                           
 26303                           ; BSR set to: 0
 26304  0031FC  ECE6  F015         	call	_USBStdGetDscHandler	;wreg free
 26305                           
 26306                           ;usb_device.c: 2330: break;
 26307  003200  0012               	return	
 26308  003202                     
 26309                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 26310  003202  EC62  F019         	call	_USBStdSetCfgHandler	;wreg free
 26311                           
 26312                           ;usb_device.c: 2333: break;
 26313  003206  0012               	return	
 26314  003208                     
 26315                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26316  003208  0E5A               	movlw	low _USBActiveConfiguration
 26317  00320A  0100               	movlb	0	; () banked
 26318  00320C  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26319  00320E  0E00               	movlw	high _USBActiveConfiguration
 26320  003210  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26324  003212  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26325                           
 26326                           ; BSR set to: 0
 26327                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 26328  003214  0E01               	movlw	1
 26329  003216  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26330                           
 26331                           ; BSR set to: 0
 26332                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 26333  003218  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26334                           
 26335                           ;usb_device.c: 2339: break;
 26336  00321A  0012               	return	
 26337  00321C                     
 26338                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 26339                           
 26340                           ; BSR set to: 0
 26341  00321C  EC64  F020         	call	_USBStdGetStatusHandler	;wreg free
 26342                           
 26343                           ;usb_device.c: 2342: break;
 26344  003220  0012               	return	
 26345  003222                     
 26346                           ;usb_device.c: 2344: case 3:
 26347                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 26348  003222  EC48  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 26349                           
 26350                           ;usb_device.c: 2346: break;
 26351  003226  0012               	return	
 26352  003228                     
 26353                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26354  003228  0104               	movlb	4	; () banked
 26355  00322A  5134               	movf	52,w,b	;volatile
 26356  00322C  0D01               	mullw	1
 26357  00322E  0E57               	movlw	low _USBAlternateInterface
 26358  003230  24F3               	addwf	prodl,w,c
 26359  003232  0100               	movlb	0	; () banked
 26360  003234  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 26361  003236  0E00               	movlw	high _USBAlternateInterface
 26362  003238  20F4               	addwfc	prodh,w,c
 26363  00323A  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26364                           
 26365                           ; BSR set to: 0
 26366                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26367  00323C  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26368                           
 26369                           ; BSR set to: 0
 26370                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 26371  00323E  0E01               	movlw	1
 26372  003240  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26373                           
 26374                           ; BSR set to: 0
 26375                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 26376  003242  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26377                           
 26378                           ;usb_device.c: 2352: break;
 26379  003244  0012               	return	
 26380  003246                     i2l2068:
 26381                           
 26382                           ; BSR set to: 4
 26383                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 26384  003246  0100               	movlb	0	; () banked
 26385  003248  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26386                           
 26387                           ; BSR set to: 0
 26388                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26389  00324A  0104               	movlb	4	; () banked
 26390  00324C  5134               	movf	52,w,b	;volatile
 26391  00324E  0D01               	mullw	1
 26392  003250  0E57               	movlw	low _USBAlternateInterface
 26393  003252  24F3               	addwf	prodl,w,c
 26394  003254  6ED9               	movwf	fsr2l,c
 26395  003256  0E00               	movlw	high _USBAlternateInterface
 26396  003258  20F4               	addwfc	prodh,w,c
 26397  00325A  6EDA               	movwf	fsr2h,c
 26398  00325C  C432 FFDF          	movff	1074,indf2	;volatile
 26399                           
 26400                           ;usb_device.c: 2356: break;
 26401  003260  0012               	return	
 26402  003262                     
 26403                           ; BSR set to: 4
 26404                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26405                           
 26406                           ; BSR set to: 4
 26407  003262  0E00               	movlw	0
 26408  003264  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26409  003266  0E02               	movlw	2
 26410  003268  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26411  00326A  0E00               	movlw	0
 26412  00326C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26413  00326E  0E00               	movlw	0
 26414  003270  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26415  003272  0E00               	movlw	0
 26416  003274  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26417  003276  0E00               	movlw	0
 26418  003278  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26419  00327A  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26420                           
 26421                           ;usb_device.c: 2363: }
 26422                           
 26423                           ;usb_device.c: 2362: break;
 26424                           
 26425                           ;usb_device.c: 2361: default:
 26426                           
 26427                           ;usb_device.c: 2360: case 12:
 26428                           
 26429                           ;usb_device.c: 2359: break;
 26430  00327E  0012               	return	
 26431  003280                     i2l2058:
 26432  003280  0104               	movlb	4	; () banked
 26433  003282  5131               	movf	49,w,b	;volatile
 26434                           
 26435                           ; Switch size 1, requested type "space"
 26436                           ; Number of cases is 11, Range of values is 0 to 12
 26437                           ; switch strategies available:
 26438                           ; Name         Instructions Cycles
 26439                           ; simple_byte           34    18 (average)
 26440                           ;	Chosen strategy is simple_byte
 26441  003284  0A00               	xorlw	0	; case 0
 26442  003286  B4D8               	btfsc	status,2,c
 26443  003288  D7C9               	goto	i2l2064
 26444  00328A  0A01               	xorlw	1	; case 1
 26445  00328C  B4D8               	btfsc	status,2,c
 26446  00328E  D7C9               	goto	i2l2065
 26447  003290  0A02               	xorlw	2	; case 3
 26448  003292  B4D8               	btfsc	status,2,c
 26449  003294  D7C6               	goto	i2l2065
 26450  003296  0A06               	xorlw	6	; case 5
 26451  003298  B4D8               	btfsc	status,2,c
 26452  00329A  D7AB               	goto	i2l2059
 26453  00329C  0A03               	xorlw	3	; case 6
 26454  00329E  B4D8               	btfsc	status,2,c
 26455  0032A0  D7AD               	goto	i2l2061
 26456  0032A2  0A01               	xorlw	1	; case 7
 26457  0032A4  B4D8               	btfsc	status,2,c
 26458  0032A6  D7DD               	goto	i2l2069
 26459  0032A8  0A0F               	xorlw	15	; case 8
 26460  0032AA  B4D8               	btfsc	status,2,c
 26461  0032AC  D7AD               	goto	i2l2063
 26462  0032AE  0A01               	xorlw	1	; case 9
 26463  0032B0  B4D8               	btfsc	status,2,c
 26464  0032B2  D7A7               	goto	i2l2062
 26465  0032B4  0A03               	xorlw	3	; case 10
 26466  0032B6  B4D8               	btfsc	status,2,c
 26467  0032B8  D7B7               	goto	i2l2067
 26468  0032BA  0A01               	xorlw	1	; case 11
 26469  0032BC  B4D8               	btfsc	status,2,c
 26470  0032BE  D7C3               	goto	i2l2068
 26471  0032C0  0A07               	xorlw	7	; case 12
 26472  0032C2  0012               	return	
 26473  0032C4                     __end_of_USBCheckStdRequest:
 26474                           	opt stack 0
 26475                           pclatu	equ	0xFFB
 26476                           pclath	equ	0xFFA
 26477                           tblptru	equ	0xFF8
 26478                           tblptrh	equ	0xFF7
 26479                           tblptrl	equ	0xFF6
 26480                           tablat	equ	0xFF5
 26481                           prodh	equ	0xFF4
 26482                           prodl	equ	0xFF3
 26483                           intcon	equ	0xFF2
 26484                           intcon2	equ	0xFF1
 26485                           intcon3	equ	0xFF0
 26486                           indf0	equ	0xFEF
 26487                           postinc0	equ	0xFEE
 26488                           fsr0h	equ	0xFEA
 26489                           fsr0l	equ	0xFE9
 26490                           wreg	equ	0xFE8
 26491                           indf1	equ	0xFE7
 26492                           postdec1	equ	0xFE5
 26493                           fsr1h	equ	0xFE2
 26494                           fsr1l	equ	0xFE1
 26495                           indf2	equ	0xFDF
 26496                           postinc2	equ	0xFDE
 26497                           postdec2	equ	0xFDD
 26498                           plusw2	equ	0xFDB
 26499                           fsr2h	equ	0xFDA
 26500                           fsr2l	equ	0xFD9
 26501                           status	equ	0xFD8
 26502                           
 26503 ;; *************** function _USBStdSetCfgHandler *****************
 26504 ;; Defined at:
 26505 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 26506 ;; Parameters:    Size  Location     Type
 26507 ;;		None
 26508 ;; Auto vars:     Size  Location     Type
 26509 ;;  i               1   21[COMRAM] unsigned char 
 26510 ;; Return value:  Size  Location     Type
 26511 ;;                  1    wreg      void 
 26512 ;; Registers used:
 26513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26514 ;; Tracked objects:
 26515 ;;		On entry : 0/0
 26516 ;;		On exit  : 0/0
 26517 ;;		Unchanged: 0/0
 26518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26519 ;;      Params:         0       0       0       0       0       0       0       0       0
 26520 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26522 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26523 ;;Total ram usage:        1 bytes
 26524 ;; Hardware stack levels used:    1
 26525 ;; Hardware stack levels required when called:    5
 26526 ;; This function calls:
 26527 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26528 ;;		i2_memset
 26529 ;; This function is called by:
 26530 ;;		_USBCheckStdRequest
 26531 ;; This function uses a non-reentrant model
 26532 ;;
 26533                           
 26534                           	psect	text118
 26535  0032C4                     __ptext118:
 26536                           	opt stack 0
 26537  0032C4                     _USBStdSetCfgHandler:
 26538                           	opt stack 11
 26539                           
 26540                           ;usb_device.c: 1631: uint8_t i;
 26541                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 26542                           
 26543                           ;incstack = 0
 26544  0032C4  0100               	movlb	0	; () banked
 26545  0032C6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26546                           
 26547                           ; BSR set to: 0
 26548                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 26549  0032C8  0E6B               	movlw	107
 26550  0032CA  6E01               	movwf	i2memset@p1,c
 26551  0032CC  0E0F               	movlw	15
 26552  0032CE  6E02               	movwf	i2memset@p1+1,c
 26553  0032D0  0E00               	movlw	0
 26554  0032D2  6E04               	movwf	i2memset@c+1,c
 26555  0032D4  0E00               	movlw	0
 26556  0032D6  6E03               	movwf	i2memset@c,c
 26557  0032D8  0E00               	movlw	0
 26558  0032DA  6E06               	movwf	i2memset@n+1,c
 26559  0032DC  0E02               	movlw	2
 26560  0032DE  6E05               	movwf	i2memset@n,c
 26561  0032E0  EC9E  F02A         	call	i2_memset	;wreg free
 26562                           
 26563                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26564  0032E4  0E00               	movlw	0
 26565  0032E6  6E01               	movwf	i2memset@p1,c
 26566  0032E8  0E04               	movlw	4
 26567  0032EA  6E02               	movwf	i2memset@p1+1,c
 26568  0032EC  0E00               	movlw	0
 26569  0032EE  6E04               	movwf	i2memset@c+1,c
 26570  0032F0  0E00               	movlw	0
 26571  0032F2  6E03               	movwf	i2memset@c,c
 26572  0032F4  0E00               	movlw	0
 26573  0032F6  6E06               	movwf	i2memset@n+1,c
 26574  0032F8  0E30               	movlw	48
 26575  0032FA  6E05               	movwf	i2memset@n,c
 26576  0032FC  EC9E  F02A         	call	i2_memset	;wreg free
 26577                           
 26578                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 26579  003300  8C60               	bsf	3936,6,c	;volatile
 26580                           
 26581                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 26582  003302  0E00               	movlw	0
 26583  003304  6E16               	movwf	USBStdSetCfgHandler@i,c
 26584  003306                     i2l8174:
 26585  003306  0E02               	movlw	2
 26586  003308  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 26587  00330A  D001               	goto	i2l1973
 26588  00330C  D016               	goto	i2u599_40
 26589  00330E                     i2l1973:
 26590                           
 26591                           ;usb_device.c: 1649: {
 26592                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 26593  00330E  5016               	movf	USBStdSetCfgHandler@i,w,c
 26594  003310  0D01               	mullw	1
 26595  003312  0ED3               	movlw	low _ep_data_in
 26596  003314  24F3               	addwf	prodl,w,c
 26597  003316  6ED9               	movwf	fsr2l,c
 26598  003318  0E00               	movlw	high _ep_data_in
 26599  00331A  20F4               	addwfc	prodh,w,c
 26600  00331C  6EDA               	movwf	fsr2h,c
 26601  00331E  0E00               	movlw	0
 26602  003320  6EDF               	movwf	indf2,c
 26603                           
 26604                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 26605  003322  5016               	movf	USBStdSetCfgHandler@i,w,c
 26606  003324  0D01               	mullw	1
 26607  003326  0ED0               	movlw	low _ep_data_out
 26608  003328  24F3               	addwf	prodl,w,c
 26609  00332A  6ED9               	movwf	fsr2l,c
 26610  00332C  0E00               	movlw	high _ep_data_out
 26611  00332E  20F4               	addwfc	prodh,w,c
 26612  003330  6EDA               	movwf	fsr2h,c
 26613  003332  0E00               	movlw	0
 26614  003334  6EDF               	movwf	indf2,c
 26615  003336  2A16               	incf	USBStdSetCfgHandler@i,f,c
 26616  003338  D7E6               	goto	i2l8174
 26617  00333A                     i2u599_40:
 26618                           
 26619                           ;usb_device.c: 1652: }
 26620                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 26621  00333A  0E57               	movlw	low _USBAlternateInterface
 26622  00333C  6E01               	movwf	i2memset@p1,c
 26623  00333E  0E00               	movlw	high _USBAlternateInterface
 26624  003340  6E02               	movwf	i2memset@p1+1,c
 26625  003342  0E00               	movlw	0
 26626  003344  6E04               	movwf	i2memset@c+1,c
 26627  003346  0E00               	movlw	0
 26628  003348  6E03               	movwf	i2memset@c,c
 26629  00334A  0E00               	movlw	0
 26630  00334C  6E06               	movwf	i2memset@n+1,c
 26631  00334E  0E02               	movlw	2
 26632  003350  6E05               	movwf	i2memset@n,c
 26633  003352  EC9E  F02A         	call	i2_memset	;wreg free
 26634                           
 26635                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 26636  003356  9C60               	bcf	3936,6,c	;volatile
 26637                           
 26638                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26639  003358  0E08               	movlw	8
 26640  00335A  0100               	movlb	0	; () banked
 26641  00335C  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 26642  00335E  0E04               	movlw	4
 26643  003360  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26644                           
 26645                           ; BSR set to: 0
 26646                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26647  003362  0E00               	movlw	0
 26648  003364  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 26649  003366  0E04               	movlw	4
 26650  003368  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26654  00336A  C038  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26655  00336E  C039  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26656                           
 26657                           ; BSR set to: 0
 26658                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26659  003372  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 26660                           
 26661                           ; BSR set to: 0
 26662                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 26663  003376  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 26664  003378  A4D8               	btfss	status,2,c
 26665  00337A  D003               	goto	i2l1975
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;usb_device.c: 1671: {
 26669                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 26670  00337C  0E10               	movlw	16
 26671  00337E  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26672                           
 26673                           ;usb_device.c: 1674: }
 26674  003380  0012               	return	
 26675  003382                     i2l1975:
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;usb_device.c: 1675: else
 26679                           ;usb_device.c: 1676: {
 26680                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26681                           
 26682                           ; BSR set to: 0
 26683  003382  0E00               	movlw	0
 26684  003384  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26685  003386  0E01               	movlw	1
 26686  003388  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26687  00338A  0E5A               	movlw	low _USBActiveConfiguration
 26688  00338C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26689  00338E  0E00               	movlw	high _USBActiveConfiguration
 26690  003390  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26691  003392  0E00               	movlw	0
 26692  003394  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26693  003396  0E01               	movlw	1
 26694  003398  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26695  00339A  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26696                           
 26697                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 26698  00339E  0E20               	movlw	32
 26699  0033A0  0100               	movlb	0	; () banked
 26700  0033A2  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 26701  0033A4  0012               	return	
 26702  0033A6                     __end_of_USBStdSetCfgHandler:
 26703                           	opt stack 0
 26704                           pclatu	equ	0xFFB
 26705                           pclath	equ	0xFFA
 26706                           tblptru	equ	0xFF8
 26707                           tblptrh	equ	0xFF7
 26708                           tblptrl	equ	0xFF6
 26709                           tablat	equ	0xFF5
 26710                           prodh	equ	0xFF4
 26711                           prodl	equ	0xFF3
 26712                           intcon	equ	0xFF2
 26713                           intcon2	equ	0xFF1
 26714                           intcon3	equ	0xFF0
 26715                           indf0	equ	0xFEF
 26716                           postinc0	equ	0xFEE
 26717                           fsr0h	equ	0xFEA
 26718                           fsr0l	equ	0xFE9
 26719                           wreg	equ	0xFE8
 26720                           indf1	equ	0xFE7
 26721                           postdec1	equ	0xFE5
 26722                           fsr1h	equ	0xFE2
 26723                           fsr1l	equ	0xFE1
 26724                           indf2	equ	0xFDF
 26725                           postinc2	equ	0xFDE
 26726                           postdec2	equ	0xFDD
 26727                           plusw2	equ	0xFDB
 26728                           fsr2h	equ	0xFDA
 26729                           fsr2l	equ	0xFD9
 26730                           status	equ	0xFD8
 26731                           
 26732 ;; *************** function i2_memset *****************
 26733 ;; Defined at:
 26734 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 26735 ;; Parameters:    Size  Location     Type
 26736 ;;  p1              2    0[COMRAM] PTR void 
 26737 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26738 ;;  c               2    2[COMRAM] int 
 26739 ;;  n               2    4[COMRAM] unsigned int 
 26740 ;; Auto vars:     Size  Location     Type
 26741 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26742 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26743 ;; Return value:  Size  Location     Type
 26744 ;;                  2    0[COMRAM] PTR void 
 26745 ;; Registers used:
 26746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26747 ;; Tracked objects:
 26748 ;;		On entry : 0/0
 26749 ;;		On exit  : 0/0
 26750 ;;		Unchanged: 0/0
 26751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26752 ;;      Params:         6       0       0       0       0       0       0       0       0
 26753 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26755 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26756 ;;Total ram usage:        8 bytes
 26757 ;; Hardware stack levels used:    1
 26758 ;; This function calls:
 26759 ;;		Nothing
 26760 ;; This function is called by:
 26761 ;;		_USBStdSetCfgHandler
 26762 ;;		i2_USBDeviceInit
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text119
 26767  00553C                     __ptext119:
 26768                           	opt stack 0
 26769  00553C                     i2_memset:
 26770                           	opt stack 18
 26771                           
 26772                           ; BSR set to: 0
 26773                           ;incstack = 0
 26774  00553C  C001  F007         	movff	i2memset@p1,i2memset@p
 26775  005540  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 26776  005544  D008               	goto	i2l2671
 26777  005546                     i2l7994:
 26778  005546  C007  FFD9         	movff	i2memset@p,fsr2l
 26779  00554A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 26780  00554E  C003  FFDF         	movff	i2memset@c,indf2
 26781  005552  4A07               	infsnz	i2memset@p,f,c
 26782  005554  2A08               	incf	i2memset@p+1,f,c
 26783  005556                     i2l2671:
 26784  005556  0605               	decf	i2memset@n,f,c
 26785  005558  A0D8               	btfss	status,0,c
 26786  00555A  0606               	decf	i2memset@n+1,f,c
 26787  00555C  2805               	incf	i2memset@n,w,c
 26788  00555E  E1F3               	bnz	i2l7994
 26789  005560  2806               	incf	i2memset@n+1,w,c
 26790  005562  B4D8               	btfsc	status,2,c
 26791  005564  0012               	return	
 26792  005566  D7EF               	goto	i2l2672
 26793  005568                     __end_ofi2_memset:
 26794                           	opt stack 0
 26795                           pclatu	equ	0xFFB
 26796                           pclath	equ	0xFFA
 26797                           tblptru	equ	0xFF8
 26798                           tblptrh	equ	0xFF7
 26799                           tblptrl	equ	0xFF6
 26800                           tablat	equ	0xFF5
 26801                           prodh	equ	0xFF4
 26802                           prodl	equ	0xFF3
 26803                           intcon	equ	0xFF2
 26804                           intcon2	equ	0xFF1
 26805                           intcon3	equ	0xFF0
 26806                           indf0	equ	0xFEF
 26807                           postinc0	equ	0xFEE
 26808                           fsr0h	equ	0xFEA
 26809                           fsr0l	equ	0xFE9
 26810                           wreg	equ	0xFE8
 26811                           indf1	equ	0xFE7
 26812                           postdec1	equ	0xFE5
 26813                           fsr1h	equ	0xFE2
 26814                           fsr1l	equ	0xFE1
 26815                           indf2	equ	0xFDF
 26816                           postinc2	equ	0xFDE
 26817                           postdec2	equ	0xFDD
 26818                           plusw2	equ	0xFDB
 26819                           fsr2h	equ	0xFDA
 26820                           fsr2l	equ	0xFD9
 26821                           status	equ	0xFD8
 26822                           
 26823 ;; *************** function _USBStdGetStatusHandler *****************
 26824 ;; Defined at:
 26825 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 26826 ;; Parameters:    Size  Location     Type
 26827 ;;		None
 26828 ;; Auto vars:     Size  Location     Type
 26829 ;;  p               2    1[COMRAM] PTR struct __BDT
 26830 ;;		 -> BDT(48), NULL(0), 
 26831 ;; Return value:  Size  Location     Type
 26832 ;;                  1    wreg      void 
 26833 ;; Registers used:
 26834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26835 ;; Tracked objects:
 26836 ;;		On entry : 0/0
 26837 ;;		On exit  : 0/0
 26838 ;;		Unchanged: 0/0
 26839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26840 ;;      Params:         0       0       0       0       0       0       0       0       0
 26841 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26842 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26843 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26844 ;;Total ram usage:        3 bytes
 26845 ;; Hardware stack levels used:    1
 26846 ;; This function calls:
 26847 ;;		Nothing
 26848 ;; This function is called by:
 26849 ;;		_USBCheckStdRequest
 26850 ;; This function uses a non-reentrant model
 26851 ;;
 26852                           
 26853                           	psect	text120
 26854  0040C8                     __ptext120:
 26855                           	opt stack 0
 26856  0040C8                     _USBStdGetStatusHandler:
 26857                           	opt stack 16
 26858                           
 26859                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 26860                           
 26861                           ;incstack = 0
 26862  0040C8  0E00               	movlw	0
 26863  0040CA  0104               	movlb	4	; () banked
 26864  0040CC  6F38               	movwf	56,b	;volatile
 26865                           
 26866                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 26867  0040CE  0E00               	movlw	0
 26868  0040D0  6F39               	movwf	57,b	;volatile
 26869                           
 26870                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 26871  0040D2  D038               	goto	i2l1994
 26872  0040D4                     i2l1995:
 26873                           
 26874                           ; BSR set to: 4
 26875                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 26876  0040D4  0100               	movlb	0	; () banked
 26877  0040D6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26878                           
 26879                           ;usb_device.c: 1789: }
 26880                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 26881                           
 26882                           ; BSR set to: 4
 26883                           
 26884                           ; BSR set to: 0
 26885                           ;usb_device.c: 1787: {
 26886                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 26887                           
 26888                           ;usb_device.c: 1786: if(0 == 1)
 26889  0040D8  044C               	decf	_RemoteWakeup,w,c	;volatile
 26890  0040DA  A4D8               	btfss	status,2,c
 26891  0040DC  D03E               	goto	i2l1998
 26892                           
 26893                           ;usb_device.c: 1792: {
 26894                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 26895  0040DE  0104               	movlb	4	; () banked
 26896  0040E0  8338               	bsf	56,1,b	;volatile
 26897                           
 26898                           ; BSR set to: 4
 26899                           ;usb_device.c: 1794: }
 26900                           ;usb_device.c: 1795: break;
 26901  0040E2  D03B               	goto	i2l1998
 26902  0040E4                     i2l1999:
 26903                           
 26904                           ; BSR set to: 4
 26905                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 26906  0040E4  0100               	movlb	0	; () banked
 26907  0040E6  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26908                           
 26909                           ;usb_device.c: 1798: break;
 26910  0040E8  D038               	goto	i2l1998
 26911  0040EA                     i2l2000:
 26912                           
 26913                           ; BSR set to: 4
 26914                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 26915  0040EA  0100               	movlb	0	; () banked
 26916  0040EC  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26917                           
 26918                           ;usb_device.c: 1804: {
 26919                           ;usb_device.c: 1805: BDT_ENTRY *p;
 26920                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 26921  0040EE  0104               	movlb	4	; () banked
 26922  0040F0  BF34               	btfsc	52,7,b	;volatile
 26923  0040F2  D00A               	goto	i2l2001
 26924                           
 26925                           ; BSR set to: 4
 26926                           ;usb_device.c: 1808: {
 26927                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26928  0040F4  5134               	movf	52,w,b	;volatile
 26929  0040F6  0B0F               	andlw	15
 26930  0040F8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26931  0040FA  5001               	movf	??_USBStdGetStatusHandler,w,c
 26932  0040FC  0D02               	mullw	2
 26933  0040FE  0E40               	movlw	low _pBDTEntryOut
 26934  004100  24F3               	addwf	prodl,w,c
 26935  004102  6ED9               	movwf	fsr2l,c
 26936  004104  0E01               	movlw	high _pBDTEntryOut
 26937  004106  D009               	goto	L25
 26938  004108                     i2l2001:
 26939                           
 26940                           ; BSR set to: 4
 26941                           ;usb_device.c: 1811: else
 26942                           ;usb_device.c: 1812: {
 26943                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26944                           
 26945                           ; BSR set to: 4
 26946  004108  5134               	movf	52,w,b	;volatile
 26947  00410A  0B0F               	andlw	15
 26948  00410C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26949  00410E  5001               	movf	??_USBStdGetStatusHandler,w,c
 26950  004110  0D02               	mullw	2
 26951  004112  0ECA               	movlw	low _pBDTEntryIn
 26952  004114  24F3               	addwf	prodl,w,c
 26953  004116  6ED9               	movwf	fsr2l,c
 26954  004118  0E00               	movlw	high _pBDTEntryIn
 26955  00411A                     L25:
 26956  00411A  20F4               	addwfc	prodh,w,c
 26957  00411C  6EDA               	movwf	fsr2h,c
 26958  00411E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 26959  004122  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 26960                           
 26961                           ; BSR set to: 4
 26962                           ;usb_device.c: 1814: }
 26963                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26964                           
 26965                           ; BSR set to: 4
 26966  004126  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26967  00412A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26968  00412E  AEDF               	btfss	indf2,7,c
 26969  004130  D014               	goto	i2l1998
 26970                           
 26971                           ; BSR set to: 4
 26972  004132  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26973  004136  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26974  00413A  A4DF               	btfss	indf2,2,c
 26975  00413C  D00E               	goto	i2l1998
 26976                           
 26977                           ; BSR set to: 4
 26978                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 26979  00413E  0E01               	movlw	1
 26980  004140  6F38               	movwf	56,b	;volatile
 26981                           
 26982                           ; BSR set to: 4
 26983                           ;usb_device.c: 1819: }
 26984                           ;usb_device.c: 1820: }
 26985                           
 26986                           ; BSR set to: 4
 26987                           ;usb_device.c: 1818: break;
 26988  004142  D00B               	goto	i2l1998
 26989  004144                     i2l1994:
 26990                           
 26991                           ; BSR set to: 4
 26992                           
 26993                           ; BSR set to: 4
 26994  004144  5130               	movf	48,w,b	;volatile
 26995  004146  0B1F               	andlw	31
 26996                           
 26997                           ; Switch size 1, requested type "space"
 26998                           ; Number of cases is 3, Range of values is 0 to 2
 26999                           ; switch strategies available:
 27000                           ; Name         Instructions Cycles
 27001                           ; simple_byte           10     6 (average)
 27002                           ;	Chosen strategy is simple_byte
 27003  004148  0A00               	xorlw	0	; case 0
 27004  00414A  B4D8               	btfsc	status,2,c
 27005  00414C  D7C3               	goto	i2l1995
 27006  00414E  0A01               	xorlw	1	; case 1
 27007  004150  B4D8               	btfsc	status,2,c
 27008  004152  D7C8               	goto	i2l1999
 27009  004154  0A03               	xorlw	3	; case 2
 27010  004156  B4D8               	btfsc	status,2,c
 27011  004158  D7C8               	goto	i2l2000
 27012  00415A                     i2l1998:
 27013                           
 27014                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27015  00415A  0100               	movlb	0	; () banked
 27016  00415C  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27017  00415E  0012               	return	
 27018                           
 27019                           ; BSR set to: 0
 27020                           ;usb_device.c: 1823: {
 27021                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27022  004160  0E38               	movlw	56
 27023  004162  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27024  004164  0E04               	movlw	4
 27025  004166  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27026                           
 27027                           ; BSR set to: 0
 27028                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27029  004168  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27030                           
 27031                           ; BSR set to: 0
 27032                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27033  00416A  0E02               	movlw	2
 27034  00416C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27035  00416E  0012               	return	
 27036  004170                     __end_of_USBStdGetStatusHandler:
 27037                           	opt stack 0
 27038                           pclatu	equ	0xFFB
 27039                           pclath	equ	0xFFA
 27040                           tblptru	equ	0xFF8
 27041                           tblptrh	equ	0xFF7
 27042                           tblptrl	equ	0xFF6
 27043                           tablat	equ	0xFF5
 27044                           prodh	equ	0xFF4
 27045                           prodl	equ	0xFF3
 27046                           intcon	equ	0xFF2
 27047                           intcon2	equ	0xFF1
 27048                           intcon3	equ	0xFF0
 27049                           indf0	equ	0xFEF
 27050                           postinc0	equ	0xFEE
 27051                           fsr0h	equ	0xFEA
 27052                           fsr0l	equ	0xFE9
 27053                           wreg	equ	0xFE8
 27054                           indf1	equ	0xFE7
 27055                           postdec1	equ	0xFE5
 27056                           fsr1h	equ	0xFE2
 27057                           fsr1l	equ	0xFE1
 27058                           indf2	equ	0xFDF
 27059                           postinc2	equ	0xFDE
 27060                           postdec2	equ	0xFDD
 27061                           plusw2	equ	0xFDB
 27062                           fsr2h	equ	0xFDA
 27063                           fsr2l	equ	0xFD9
 27064                           status	equ	0xFD8
 27065                           
 27066 ;; *************** function _USBStdGetDscHandler *****************
 27067 ;; Defined at:
 27068 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27069 ;; Parameters:    Size  Location     Type
 27070 ;;		None
 27071 ;; Auto vars:     Size  Location     Type
 27072 ;;		None
 27073 ;; Return value:  Size  Location     Type
 27074 ;;                  1    wreg      void 
 27075 ;; Registers used:
 27076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27077 ;; Tracked objects:
 27078 ;;		On entry : 0/0
 27079 ;;		On exit  : 0/0
 27080 ;;		Unchanged: 0/0
 27081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27082 ;;      Params:         0       0       0       0       0       0       0       0       0
 27083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27084 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27085 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27086 ;;Total ram usage:        2 bytes
 27087 ;; Hardware stack levels used:    1
 27088 ;; This function calls:
 27089 ;;		Nothing
 27090 ;; This function is called by:
 27091 ;;		_USBCheckStdRequest
 27092 ;; This function uses a non-reentrant model
 27093 ;;
 27094                           
 27095                           	psect	text121
 27096  002BCC                     __ptext121:
 27097                           	opt stack 0
 27098  002BCC                     _USBStdGetDscHandler:
 27099                           	opt stack 16
 27100                           
 27101                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27102                           
 27103                           ; BSR set to: 0
 27104                           ;incstack = 0
 27105  002BCC  0E80               	movlw	128
 27106  002BCE  0104               	movlb	4	; () banked
 27107  002BD0  1930               	xorwf	48,w,b	;volatile
 27108  002BD2  A4D8               	btfss	status,2,c
 27109  002BD4  0012               	return	
 27110                           
 27111                           ; BSR set to: 4
 27112                           ;usb_device.c: 1707: {
 27113                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27114  002BD6  0EC0               	movlw	192
 27115  002BD8  0100               	movlb	0	; () banked
 27116  002BDA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27117                           
 27118                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27119  002BDC  D082               	goto	i2l1981
 27120  002BDE                     
 27121                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27122                           
 27123                           ; BSR set to: 0
 27124  002BDE  0EA2               	movlw	low _device_dsc
 27125  002BE0  0100               	movlb	0	; () banked
 27126  002BE2  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27127  002BE4  0E79               	movlw	high _device_dsc
 27128  002BE6  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27129                           
 27130                           ; BSR set to: 0
 27131                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27132  002BE8  0E00               	movlw	0
 27133  002BEA  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27134  002BEC  0E12               	movlw	18
 27135  002BEE  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27136                           
 27137                           ;usb_device.c: 1715: break;
 27138  002BF0  0012               	return	
 27139  002BF2                     
 27140                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27141                           
 27142                           ; BSR set to: 0
 27143  002BF2  0104               	movlb	4	; () banked
 27144  002BF4  5132               	movf	50,w,b	;volatile
 27145  002BF6  A4D8               	btfss	status,2,c
 27146  002BF8  D040               	goto	i2l1985
 27147                           
 27148                           ; BSR set to: 4
 27149                           ;usb_device.c: 1721: {
 27150                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27151  002BFA  5132               	movf	50,w,b	;volatile
 27152  002BFC  0D02               	mullw	2
 27153  002BFE  0EF5               	movlw	low _USB_CD_Ptr
 27154  002C00  24F3               	addwf	prodl,w,c
 27155  002C02  6EF6               	movwf	tblptrl,c
 27156  002C04  0E75               	movlw	high _USB_CD_Ptr
 27157  002C06  20F4               	addwfc	prodh,w,c
 27158  002C08  6EF7               	movwf	tblptrh,c
 27159  002C0A                     	if	0	;There are less than 3 active tblptr bytes
 27160  002C0A                     	endif
 27161  002C0A  0009               	tblrd		*+
 27162  002C0C  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27163  002C10  000A               	tblrd		*-
 27164  002C12  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27165                           
 27166                           ; BSR set to: 4
 27167                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27168  002C16  0E02               	movlw	2
 27169  002C18  0100               	movlb	0	; () banked
 27170  002C1A  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27171  002C1C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27172  002C1E  0E00               	movlw	0
 27173  002C20  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27174  002C22  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27175  002C24  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27176  002C28  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27177  002C2C  6AF8               	clrf	tblptru,c
 27178  002C2E  0E07               	movlw	(high __ramtop+-1)
 27179  002C30  64F7               	cpfsgt	tblptrh,c
 27180  002C32  D003               	bra	i2u603_47
 27181  002C34  0008               	tblrd		*
 27182  002C36  50F5               	movf	tablat,w,c
 27183  002C38  D005               	bra	i2u603_40
 27184  002C3A                     i2u603_47:
 27185  002C3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27186  002C3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27187  002C42  50EF               	movf	indf0,w,c
 27188  002C44                     i2u603_40:
 27189  002C44  0100               	movlb	0	; () banked
 27190  002C46  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27191                           
 27192                           ; BSR set to: 0
 27193                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27194  002C48  0E03               	movlw	3
 27195  002C4A  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27196  002C4C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27197  002C4E  0E00               	movlw	0
 27198  002C50  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27199  002C52  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27200  002C54  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27201  002C58  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27202  002C5C  6AF8               	clrf	tblptru,c
 27203  002C5E  0E07               	movlw	(high __ramtop+-1)
 27204  002C60  64F7               	cpfsgt	tblptrh,c
 27205  002C62  D003               	bra	i2u604_47
 27206  002C64  0008               	tblrd		*
 27207  002C66  50F5               	movf	tablat,w,c
 27208  002C68  D005               	bra	i2u604_40
 27209  002C6A                     i2u604_47:
 27210  002C6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27211  002C6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27212  002C72  50EF               	movf	indf0,w,c
 27213  002C74                     i2u604_40:
 27214  002C74  0100               	movlb	0	; () banked
 27215  002C76  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27216                           
 27217                           ;usb_device.c: 1729: }
 27218  002C78  0012               	return	
 27219  002C7A                     i2l1985:
 27220                           
 27221                           ;usb_device.c: 1730: else
 27222                           ;usb_device.c: 1731: {
 27223                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 27224                           
 27225                           ; BSR set to: 0
 27226  002C7A  0E00               	movlw	0
 27227  002C7C  0100               	movlb	0	; () banked
 27228  002C7E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27229                           
 27230                           ; BSR set to: 0
 27231                           ;usb_device.c: 1733: }
 27232                           ;usb_device.c: 1734: break;
 27233  002C80  0012               	return	
 27234  002C82                     
 27235                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 27236                           
 27237                           ; BSR set to: 0
 27238  002C82  0E03               	movlw	3
 27239  002C84  0104               	movlb	4	; () banked
 27240  002C86  6132               	cpfslt	50,b	;volatile
 27241  002C88  D024               	goto	i2l1988
 27242                           
 27243                           ; BSR set to: 4
 27244                           ;usb_device.c: 1740: {
 27245                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27246  002C8A  5132               	movf	50,w,b	;volatile
 27247  002C8C  0D02               	mullw	2
 27248  002C8E  0EEF               	movlw	low _USB_SD_Ptr
 27249  002C90  24F3               	addwf	prodl,w,c
 27250  002C92  6EF6               	movwf	tblptrl,c
 27251  002C94  0E75               	movlw	high _USB_SD_Ptr
 27252  002C96  20F4               	addwfc	prodh,w,c
 27253  002C98  6EF7               	movwf	tblptrh,c
 27254  002C9A                     	if	0	;There are less than 3 active tblptr bytes
 27255  002C9A                     	endif
 27256  002C9A  0009               	tblrd		*+
 27257  002C9C  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27258  002CA0  000A               	tblrd		*-
 27259  002CA2  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27260                           
 27261                           ; BSR set to: 4
 27262                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27263  002CA6  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 27264  002CAA  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27265  002CAE  6AF8               	clrf	tblptru,c
 27266  002CB0  0E07               	movlw	(high __ramtop+-1)
 27267  002CB2  64F7               	cpfsgt	tblptrh,c
 27268  002CB4  D003               	bra	i2u606_47
 27269  002CB6  0008               	tblrd		*
 27270  002CB8  50F5               	movf	tablat,w,c
 27271  002CBA  D005               	bra	i2u606_40
 27272  002CBC                     i2u606_47:
 27273  002CBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27274  002CC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27275  002CC4  50EF               	movf	indf0,w,c
 27276  002CC6                     i2u606_40:
 27277  002CC6  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27278  002CC8  5001               	movf	??_USBStdGetDscHandler,w,c
 27279  002CCA  0100               	movlb	0	; () banked
 27280  002CCC  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27281  002CCE  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27282                           
 27283                           ;usb_device.c: 1745: }
 27284  002CD0  0012               	return	
 27285  002CD2                     i2l1988:
 27286                           
 27287                           ;usb_device.c: 1746: else
 27288                           ;usb_device.c: 1747: {
 27289                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 27290                           
 27291                           ; BSR set to: 0
 27292  002CD2  0E00               	movlw	0
 27293  002CD4  0100               	movlb	0	; () banked
 27294  002CD6  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;usb_device.c: 1749: }
 27298                           ;usb_device.c: 1750: break;
 27299  002CD8  0012               	return	
 27300  002CDA                     
 27301                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 27302                           
 27303                           ; BSR set to: 0
 27304  002CDA  0E00               	movlw	0
 27305  002CDC  0100               	movlb	0	; () banked
 27306  002CDE  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27307                           
 27308                           ; BSR set to: 0
 27309                           ;usb_device.c: 1754: }
 27310                           
 27311                           ;usb_device.c: 1753: break;
 27312  002CE0  0012               	return	
 27313  002CE2                     i2l1981:
 27314                           
 27315                           ; BSR set to: 0
 27316                           
 27317                           ; BSR set to: 0
 27318  002CE2  0104               	movlb	4	; () banked
 27319  002CE4  5133               	movf	51,w,b	;volatile
 27320                           
 27321                           ; Switch size 1, requested type "space"
 27322                           ; Number of cases is 3, Range of values is 1 to 3
 27323                           ; switch strategies available:
 27324                           ; Name         Instructions Cycles
 27325                           ; simple_byte           10     6 (average)
 27326                           ;	Chosen strategy is simple_byte
 27327  002CE6  0A01               	xorlw	1	; case 1
 27328  002CE8  B4D8               	btfsc	status,2,c
 27329  002CEA  D779               	goto	i2l1982
 27330  002CEC  0A03               	xorlw	3	; case 2
 27331  002CEE  B4D8               	btfsc	status,2,c
 27332  002CF0  D780               	goto	i2l1984
 27333  002CF2  0A01               	xorlw	1	; case 3
 27334  002CF4  B4D8               	btfsc	status,2,c
 27335  002CF6  D7C5               	goto	i2l1987
 27336  002CF8  D7F0               	goto	i2l1990
 27337  002CFA                     __end_of_USBStdGetDscHandler:
 27338                           	opt stack 0
 27339                           pclatu	equ	0xFFB
 27340                           pclath	equ	0xFFA
 27341                           tblptru	equ	0xFF8
 27342                           tblptrh	equ	0xFF7
 27343                           tblptrl	equ	0xFF6
 27344                           tablat	equ	0xFF5
 27345                           prodh	equ	0xFF4
 27346                           prodl	equ	0xFF3
 27347                           intcon	equ	0xFF2
 27348                           intcon2	equ	0xFF1
 27349                           intcon3	equ	0xFF0
 27350                           indf0	equ	0xFEF
 27351                           postinc0	equ	0xFEE
 27352                           fsr0h	equ	0xFEA
 27353                           fsr0l	equ	0xFE9
 27354                           wreg	equ	0xFE8
 27355                           indf1	equ	0xFE7
 27356                           postdec1	equ	0xFE5
 27357                           fsr1h	equ	0xFE2
 27358                           fsr1l	equ	0xFE1
 27359                           indf2	equ	0xFDF
 27360                           postinc2	equ	0xFDE
 27361                           postdec2	equ	0xFDD
 27362                           plusw2	equ	0xFDB
 27363                           fsr2h	equ	0xFDA
 27364                           fsr2l	equ	0xFD9
 27365                           status	equ	0xFD8
 27366                           
 27367 ;; *************** function _USBStdFeatureReqHandler *****************
 27368 ;; Defined at:
 27369 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 27370 ;; Parameters:    Size  Location     Type
 27371 ;;		None
 27372 ;; Auto vars:     Size  Location     Type
 27373 ;;  p               2   25[COMRAM] PTR struct __BDT
 27374 ;;		 -> BDT(48), NULL(0), 
 27375 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 27376 ;;		 -> UEP0(1), 
 27377 ;;  current_ep_d    1   24[COMRAM] struct .
 27378 ;; Return value:  Size  Location     Type
 27379 ;;                  1    wreg      void 
 27380 ;; Registers used:
 27381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27382 ;; Tracked objects:
 27383 ;;		On entry : 0/0
 27384 ;;		On exit  : 0/0
 27385 ;;		Unchanged: 0/0
 27386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27387 ;;      Params:         0       0       0       0       0       0       0       0       0
 27388 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27389 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27390 ;;      Totals:         6       0       0       0       0       0       0       0       0
 27391 ;;Total ram usage:        6 bytes
 27392 ;; Hardware stack levels used:    1
 27393 ;; Hardware stack levels required when called:    5
 27394 ;; This function calls:
 27395 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27396 ;; This function is called by:
 27397 ;;		_USBCheckStdRequest
 27398 ;; This function uses a non-reentrant model
 27399 ;;
 27400                           
 27401                           	psect	text122
 27402  001E90                     __ptext122:
 27403                           	opt stack 0
 27404  001E90                     _USBStdFeatureReqHandler:
 27405                           	opt stack 11
 27406                           
 27407                           ;usb_device.c: 2387: BDT_ENTRY *p;
 27408                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 27409                           ;usb_device.c: 2390: unsigned char* pUEP;
 27410                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 27411                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 27412                           
 27413                           ;incstack = 0
 27414  001E90  0104               	movlb	4	; () banked
 27415  001E92  0532               	decf	50,w,b	;volatile
 27416  001E94  A4D8               	btfss	status,2,c
 27417  001E96  D010               	goto	i2l2076
 27418                           
 27419                           ; BSR set to: 4
 27420  001E98  5130               	movf	48,w,b	;volatile
 27421  001E9A  0B1F               	andlw	31
 27422  001E9C  0900               	iorlw	0
 27423  001E9E  A4D8               	btfss	status,2,c
 27424  001EA0  D00B               	goto	i2l2076
 27425                           
 27426                           ; BSR set to: 4
 27427                           ;usb_device.c: 2395: {
 27428                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 27429  001EA2  0100               	movlb	0	; () banked
 27430  001EA4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27431                           
 27432                           ; BSR set to: 0
 27433                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 27434  001EA6  0E03               	movlw	3
 27435  001EA8  0104               	movlb	4	; () banked
 27436  001EAA  1931               	xorwf	49,w,b	;volatile
 27437  001EAC  A4D8               	btfss	status,2,c
 27438  001EAE  D002               	goto	i2l2075
 27439                           
 27440                           ; BSR set to: 4
 27441                           ;usb_device.c: 2398: RemoteWakeup = 1;
 27442  001EB0  0E01               	movlw	1
 27443  001EB2  D001               	goto	L26
 27444  001EB4                     i2l2075:
 27445                           
 27446                           ; BSR set to: 4
 27447                           ;usb_device.c: 2399: else
 27448                           ;usb_device.c: 2400: RemoteWakeup = 0;
 27449                           
 27450                           ; BSR set to: 4
 27451  001EB4  0E00               	movlw	0
 27452  001EB6                     L26:
 27453  001EB6  6E4C               	movwf	_RemoteWakeup,c	;volatile
 27454  001EB8                     i2l2076:
 27455                           
 27456                           ; BSR set to: 4
 27457                           ;usb_device.c: 2401: }
 27458                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 27459                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 27460                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27461                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 27462                           
 27463                           ; BSR set to: 4
 27464  001EB8  5132               	movf	50,w,b	;volatile
 27465  001EBA  A4D8               	btfss	status,2,c
 27466  001EBC  0012               	return	
 27467                           
 27468                           ; BSR set to: 4
 27469  001EBE  5130               	movf	48,w,b	;volatile
 27470  001EC0  0B1F               	andlw	31
 27471  001EC2  0A02               	xorlw	2
 27472  001EC4  A4D8               	btfss	status,2,c
 27473  001EC6  0012               	return	
 27474                           
 27475                           ; BSR set to: 4
 27476  001EC8  5134               	movf	52,w,b	;volatile
 27477  001ECA  0B0F               	andlw	15
 27478  001ECC  0900               	iorlw	0
 27479  001ECE  B4D8               	btfsc	status,2,c
 27480  001ED0  0012               	return	
 27481                           
 27482                           ; BSR set to: 4
 27483  001ED2  5134               	movf	52,w,b	;volatile
 27484  001ED4  0B0F               	andlw	15
 27485  001ED6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27486  001ED8  0E03               	movlw	3
 27487  001EDA  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 27488  001EDC  0012               	return	
 27489                           
 27490                           ; BSR set to: 4
 27491  001EDE  0E20               	movlw	32
 27492  001EE0  0100               	movlb	0	; () banked
 27493  001EE2  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27494  001EE4  A4D8               	btfss	status,2,c
 27495  001EE6  0012               	return	
 27496                           
 27497                           ; BSR set to: 0
 27498                           ;usb_device.c: 2408: {
 27499                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 27500  001EE8  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27501                           
 27502                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 27503  001EEA  0104               	movlb	4	; () banked
 27504  001EEC  BF34               	btfsc	52,7,b	;volatile
 27505  001EEE  D019               	goto	i2l2078
 27506                           
 27507                           ; BSR set to: 4
 27508                           ;usb_device.c: 2415: {
 27509                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27510  001EF0  5134               	movf	52,w,b	;volatile
 27511  001EF2  0B0F               	andlw	15
 27512  001EF4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27513  001EF6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27514  001EF8  0D02               	mullw	2
 27515  001EFA  0E40               	movlw	low _pBDTEntryOut
 27516  001EFC  24F3               	addwf	prodl,w,c
 27517  001EFE  6ED9               	movwf	fsr2l,c
 27518  001F00  0E01               	movlw	high _pBDTEntryOut
 27519  001F02  20F4               	addwfc	prodh,w,c
 27520  001F04  6EDA               	movwf	fsr2h,c
 27521  001F06  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27522  001F0A  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27523                           
 27524                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27525  001F0E  5134               	movf	52,w,b	;volatile
 27526  001F10  0B0F               	andlw	15
 27527  001F12  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27528  001F14  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27529  001F16  0D01               	mullw	1
 27530  001F18  0ED0               	movlw	low _ep_data_out
 27531  001F1A  24F3               	addwf	prodl,w,c
 27532  001F1C  6ED9               	movwf	fsr2l,c
 27533  001F1E  0E00               	movlw	high _ep_data_out
 27534  001F20  D018               	goto	L27
 27535  001F22                     i2l2078:
 27536                           
 27537                           ; BSR set to: 4
 27538                           ;usb_device.c: 2419: else
 27539                           ;usb_device.c: 2420: {
 27540                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27541                           
 27542                           ; BSR set to: 4
 27543  001F22  5134               	movf	52,w,b	;volatile
 27544  001F24  0B0F               	andlw	15
 27545  001F26  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27546  001F28  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27547  001F2A  0D02               	mullw	2
 27548  001F2C  0ECA               	movlw	low _pBDTEntryIn
 27549  001F2E  24F3               	addwf	prodl,w,c
 27550  001F30  6ED9               	movwf	fsr2l,c
 27551  001F32  0E00               	movlw	high _pBDTEntryIn
 27552  001F34  20F4               	addwfc	prodh,w,c
 27553  001F36  6EDA               	movwf	fsr2h,c
 27554  001F38  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 27555  001F3C  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27556                           
 27557                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27558  001F40  5134               	movf	52,w,b	;volatile
 27559  001F42  0B0F               	andlw	15
 27560  001F44  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27561  001F46  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27562  001F48  0D01               	mullw	1
 27563  001F4A  0ED3               	movlw	low _ep_data_in
 27564  001F4C  24F3               	addwf	prodl,w,c
 27565  001F4E  6ED9               	movwf	fsr2l,c
 27566  001F50  0E00               	movlw	high _ep_data_in
 27567  001F52                     L27:
 27568  001F52  20F4               	addwfc	prodh,w,c
 27569  001F54  6EDA               	movwf	fsr2h,c
 27570  001F56  50DF               	movf	indf2,w,c
 27571  001F58  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27572                           
 27573                           ; BSR set to: 4
 27574                           ;usb_device.c: 2423: }
 27575                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 27576                           
 27577                           ; BSR set to: 4
 27578  001F5A  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27579  001F5C  D002               	goto	i2l2080
 27580                           
 27581                           ; BSR set to: 4
 27582                           ;usb_device.c: 2429: {
 27583                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27584  001F5E  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 27585                           
 27586                           ;usb_device.c: 2431: }
 27587  001F60  D001               	goto	i2l2081
 27588  001F62                     i2l2080:
 27589                           
 27590                           ; BSR set to: 4
 27591                           ;usb_device.c: 2432: else
 27592                           ;usb_device.c: 2433: {
 27593                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27594                           
 27595                           ; BSR set to: 4
 27596  001F62  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 27597  001F64                     i2l2081:
 27598                           
 27599                           ; BSR set to: 4
 27600                           ;usb_device.c: 2435: }
 27601                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 27602                           
 27603                           ; BSR set to: 4
 27604  001F64  BF34               	btfsc	52,7,b	;volatile
 27605  001F66  D00A               	goto	i2l2082
 27606                           
 27607                           ; BSR set to: 4
 27608                           ;usb_device.c: 2440: {
 27609                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27610  001F68  5134               	movf	52,w,b	;volatile
 27611  001F6A  0B0F               	andlw	15
 27612  001F6C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27613  001F6E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27614  001F70  0D02               	mullw	2
 27615  001F72  0E40               	movlw	low _pBDTEntryOut
 27616  001F74  24F3               	addwf	prodl,w,c
 27617  001F76  6ED9               	movwf	fsr2l,c
 27618  001F78  0E01               	movlw	high _pBDTEntryOut
 27619  001F7A  D009               	goto	L28
 27620  001F7C                     i2l2082:
 27621                           
 27622                           ; BSR set to: 4
 27623                           ;usb_device.c: 2443: else
 27624                           ;usb_device.c: 2444: {
 27625                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27626                           
 27627                           ; BSR set to: 4
 27628  001F7C  5134               	movf	52,w,b	;volatile
 27629  001F7E  0B0F               	andlw	15
 27630  001F80  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27631  001F82  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27632  001F84  0D02               	mullw	2
 27633  001F86  0ECA               	movlw	low _pBDTEntryIn
 27634  001F88  24F3               	addwf	prodl,w,c
 27635  001F8A  6ED9               	movwf	fsr2l,c
 27636  001F8C  0E00               	movlw	high _pBDTEntryIn
 27637  001F8E                     L28:
 27638  001F8E  20F4               	addwfc	prodh,w,c
 27639  001F90  6EDA               	movwf	fsr2h,c
 27640  001F92  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27641  001F96  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27642                           
 27643                           ; BSR set to: 4
 27644                           ;usb_device.c: 2446: }
 27645                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 27646                           
 27647                           ; BSR set to: 4
 27648  001F9A  0E03               	movlw	3
 27649  001F9C  1931               	xorwf	49,w,b	;volatile
 27650  001F9E  A4D8               	btfss	status,2,c
 27651  001FA0  D02D               	goto	i2l2084
 27652                           
 27653                           ; BSR set to: 4
 27654                           ;usb_device.c: 2450: {
 27655                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 27656  001FA2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27657  001FA6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27658  001FAA  AEDF               	btfss	indf2,7,c
 27659  001FAC  D01A               	goto	i2l2087
 27660                           
 27661                           ; BSR set to: 4
 27662                           ;usb_device.c: 2452: {
 27663                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 27664  001FAE  BF34               	btfsc	52,7,b	;volatile
 27665  001FB0  D00A               	goto	i2l2086
 27666                           
 27667                           ; BSR set to: 4
 27668                           ;usb_device.c: 2456: {
 27669                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27670  001FB2  5134               	movf	52,w,b	;volatile
 27671  001FB4  0B0F               	andlw	15
 27672  001FB6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27673  001FB8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27674  001FBA  0D01               	mullw	1
 27675  001FBC  0ED0               	movlw	low _ep_data_out
 27676  001FBE  24F3               	addwf	prodl,w,c
 27677  001FC0  6ED9               	movwf	fsr2l,c
 27678  001FC2  0E00               	movlw	high _ep_data_out
 27679  001FC4  D00A               	goto	L29
 27680  001FC6                     i2l2086:
 27681                           
 27682                           ;usb_device.c: 2459: else
 27683                           ;usb_device.c: 2460: {
 27684                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27685                           
 27686                           ; BSR set to: 0
 27687  001FC6  0104               	movlb	4	; () banked
 27688  001FC8  5134               	movf	52,w,b	;volatile
 27689  001FCA  0B0F               	andlw	15
 27690  001FCC  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27691  001FCE  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27692  001FD0  0D01               	mullw	1
 27693  001FD2  0ED3               	movlw	low _ep_data_in
 27694  001FD4  24F3               	addwf	prodl,w,c
 27695  001FD6  6ED9               	movwf	fsr2l,c
 27696  001FD8  0E00               	movlw	high _ep_data_in
 27697  001FDA                     L29:
 27698  001FDA  20F4               	addwfc	prodh,w,c
 27699  001FDC  6EDA               	movwf	fsr2h,c
 27700  001FDE  0100               	movlb	0	; () banked
 27701  001FE0  82DF               	bsf	indf2,1,c
 27702  001FE2                     i2l2087:
 27703                           
 27704                           ;usb_device.c: 2462: }
 27705                           ;usb_device.c: 2463: }
 27706                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 27707                           
 27708                           ; BSR set to: 0
 27709                           
 27710                           ; BSR set to: 0
 27711  001FE2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27712  001FE6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27713  001FEA  0E00               	movlw	0
 27714  001FEC  84DB               	bsf	plusw2,2,c
 27715                           
 27716                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 27717  001FEE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27718  001FF2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27719  001FF6  0E00               	movlw	0
 27720  001FF8  8EDB               	bsf	plusw2,7,c
 27721                           
 27722                           ;usb_device.c: 2468: }
 27723  001FFA  0012               	return	
 27724  001FFC                     i2l2084:
 27725                           
 27726                           ;usb_device.c: 2469: else
 27727                           ;usb_device.c: 2470: {
 27728                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27729  001FFC  0E04               	movlw	4
 27730  001FFE  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27731                           
 27732                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 27733  002000  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27734  002004  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27735  002008  AEDF               	btfss	indf2,7,c
 27736  00200A  D01B               	goto	i2l2089
 27737                           
 27738                           ;usb_device.c: 2476: {
 27739                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 27740  00200C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27741  002010  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27742  002014  0E7F               	movlw	127
 27743  002016  16DF               	andwf	indf2,f,c
 27744                           
 27745                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 27746  002018  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27747  00201C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27748  002020  0E00               	movlw	0
 27749  002022  8CDB               	bsf	plusw2,6,c
 27750                           
 27751                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27752  002024  0E00               	movlw	0
 27753  002026  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27754  002028  0E05               	movlw	5
 27755  00202A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27756  00202C  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27757  002030  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27758  002034  0E00               	movlw	0
 27759  002036  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27760  002038  0E02               	movlw	2
 27761  00203A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27762  00203C  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27763                           
 27764                           ;usb_device.c: 2482: }
 27765  002040  D006               	goto	i2l2090
 27766  002042                     i2l2089:
 27767                           
 27768                           ;usb_device.c: 2483: else
 27769                           ;usb_device.c: 2484: {
 27770                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 27771  002042  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27772  002046  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27773  00204A  0E00               	movlw	0
 27774  00204C  8CDB               	bsf	plusw2,6,c
 27775  00204E                     i2l2090:
 27776                           
 27777                           ;usb_device.c: 2487: }
 27778                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27779  00204E  0E04               	movlw	4
 27780  002050  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 27781                           
 27782                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27783  002052  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27784  002054  D006               	goto	i2u628_40
 27785  002056  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27786  00205A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27787  00205E  AEDF               	btfss	indf2,7,c
 27788  002060  D030               	goto	i2l2091
 27789  002062                     i2u628_40:
 27790                           
 27791                           ;usb_device.c: 2498: {
 27792                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 27793  002062  0104               	movlb	4	; () banked
 27794  002064  BF34               	btfsc	52,7,b	;volatile
 27795  002066  D00A               	goto	i2l2094
 27796                           
 27797                           ; BSR set to: 4
 27798                           ;usb_device.c: 2500: {
 27799                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27800  002068  5134               	movf	52,w,b	;volatile
 27801  00206A  0B0F               	andlw	15
 27802  00206C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27803  00206E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27804  002070  0D01               	mullw	1
 27805  002072  0ED0               	movlw	low _ep_data_out
 27806  002074  24F3               	addwf	prodl,w,c
 27807  002076  6ED9               	movwf	fsr2l,c
 27808  002078  0E00               	movlw	high _ep_data_out
 27809  00207A  D00A               	goto	L30
 27810  00207C                     i2l2094:
 27811                           
 27812                           ;usb_device.c: 2503: else
 27813                           ;usb_device.c: 2504: {
 27814                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27815                           
 27816                           ; BSR set to: 0
 27817  00207C  0104               	movlb	4	; () banked
 27818  00207E  5134               	movf	52,w,b	;volatile
 27819  002080  0B0F               	andlw	15
 27820  002082  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27821  002084  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27822  002086  0D01               	mullw	1
 27823  002088  0ED3               	movlw	low _ep_data_in
 27824  00208A  24F3               	addwf	prodl,w,c
 27825  00208C  6ED9               	movwf	fsr2l,c
 27826  00208E  0E00               	movlw	high _ep_data_in
 27827  002090                     L30:
 27828  002090  20F4               	addwfc	prodh,w,c
 27829  002092  6EDA               	movwf	fsr2h,c
 27830  002094  0100               	movlb	0	; () banked
 27831  002096  92DF               	bcf	indf2,1,c
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;usb_device.c: 2506: }
 27835                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27836                           
 27837                           ; BSR set to: 0
 27838  002098  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27839  00209C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27840  0020A0  0E3B               	movlw	59
 27841  0020A2  16DF               	andwf	indf2,f,c
 27842                           
 27843                           ; BSR set to: 0
 27844                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27845  0020A4  0E00               	movlw	0
 27846  0020A6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27847  0020A8  0E05               	movlw	5
 27848  0020AA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27849  0020AC  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27850  0020B0  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27851  0020B4  0E00               	movlw	0
 27852  0020B6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27853  0020B8  0E02               	movlw	2
 27854  0020BA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27855  0020BC  ECD7  F026         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27856                           
 27857                           ;usb_device.c: 2512: }
 27858  0020C0  D006               	goto	i2l2096
 27859  0020C2                     i2l2091:
 27860                           
 27861                           ;usb_device.c: 2513: else
 27862                           ;usb_device.c: 2514: {
 27863                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27864  0020C2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27865  0020C6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27866  0020CA  0E3B               	movlw	59
 27867  0020CC  16DF               	andwf	indf2,f,c
 27868  0020CE                     i2l2096:
 27869                           
 27870                           ;usb_device.c: 2517: }
 27871                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27872  0020CE  0104               	movlb	4	; () banked
 27873  0020D0  5134               	movf	52,w,b	;volatile
 27874  0020D2  0B0F               	andlw	15
 27875  0020D4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27876  0020D6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 27877  0020D8  0D01               	mullw	1
 27878  0020DA  0E6A               	movlw	106
 27879  0020DC  24F3               	addwf	prodl,w,c
 27880  0020DE  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 27881  0020E0  0E0F               	movlw	15
 27882  0020E2  20F4               	addwfc	prodh,w,c
 27883  0020E4  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27884                           
 27885                           ; BSR set to: 4
 27886                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 27887  0020E6  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27888  0020EA  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27889  0020EE  0EFE               	movlw	254
 27890  0020F0  16DF               	andwf	indf2,f,c
 27891                           
 27892                           ; BSR set to: 4
 27893  0020F2  0012               	return	
 27894  0020F4                     __end_of_USBStdFeatureReqHandler:
 27895                           	opt stack 0
 27896                           pclatu	equ	0xFFB
 27897                           pclath	equ	0xFFA
 27898                           tblptru	equ	0xFF8
 27899                           tblptrh	equ	0xFF7
 27900                           tblptrl	equ	0xFF6
 27901                           tablat	equ	0xFF5
 27902                           prodh	equ	0xFF4
 27903                           prodl	equ	0xFF3
 27904                           intcon	equ	0xFF2
 27905                           intcon2	equ	0xFF1
 27906                           intcon3	equ	0xFF0
 27907                           indf0	equ	0xFEF
 27908                           postinc0	equ	0xFEE
 27909                           fsr0h	equ	0xFEA
 27910                           fsr0l	equ	0xFE9
 27911                           wreg	equ	0xFE8
 27912                           indf1	equ	0xFE7
 27913                           postdec1	equ	0xFE5
 27914                           fsr1h	equ	0xFE2
 27915                           fsr1l	equ	0xFE1
 27916                           indf2	equ	0xFDF
 27917                           postinc2	equ	0xFDE
 27918                           postdec2	equ	0xFDD
 27919                           plusw2	equ	0xFDB
 27920                           fsr2h	equ	0xFDA
 27921                           fsr2l	equ	0xFD9
 27922                           status	equ	0xFD8
 27923                           
 27924 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27925 ;; Defined at:
 27926 ;;		line 308 in file "../Includes/Board/USBapp.c"
 27927 ;; Parameters:    Size  Location     Type
 27928 ;;  event           2   13[COMRAM] enum E5981
 27929 ;;  pdata           2   15[COMRAM] PTR void 
 27930 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 27931 ;;  size            2   17[COMRAM] unsigned int 
 27932 ;; Auto vars:     Size  Location     Type
 27933 ;;		None
 27934 ;; Return value:  Size  Location     Type
 27935 ;;                  1    wreg      unsigned char 
 27936 ;; Registers used:
 27937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27938 ;; Tracked objects:
 27939 ;;		On entry : 0/0
 27940 ;;		On exit  : 0/0
 27941 ;;		Unchanged: 0/0
 27942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27943 ;;      Params:         6       0       0       0       0       0       0       0       0
 27944 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27945 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27946 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27947 ;;Total ram usage:        8 bytes
 27948 ;; Hardware stack levels used:    1
 27949 ;; Hardware stack levels required when called:    4
 27950 ;; This function calls:
 27951 ;;		_USBCheckCDCRequest
 27952 ;;		_USBapp_CdcEmulatorInitialize
 27953 ;; This function is called by:
 27954 ;;		_USBDeviceTasks
 27955 ;;		_USBStdSetCfgHandler
 27956 ;;		_USBSuspend
 27957 ;;		_USBWakeFromSuspend
 27958 ;;		_USBCtrlTrfSetupHandler
 27959 ;;		_USBCheckStdRequest
 27960 ;;		_USBStdFeatureReqHandler
 27961 ;; This function uses a non-reentrant model
 27962 ;;
 27963                           
 27964                           	psect	text123
 27965  004DAE                     __ptext123:
 27966                           	opt stack 0
 27967  004DAE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27968                           	opt stack 15
 27969                           
 27970                           ;USBapp.c: 310: switch( (int) event )
 27971                           
 27972                           ;incstack = 0
 27973  004DAE  D006               	goto	i2l917
 27974  004DB0                     
 27975                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 27976  004DB0  EC60  F027         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 27977                           
 27978                           ;USBapp.c: 338: break;
 27979                           
 27980                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 27981                           
 27982                           ;USBapp.c: 335: break;
 27983  004DB4  0012               	return	
 27984  004DB6                     
 27985                           ;USBapp.c: 343: USBCheckCDCRequest();
 27986  004DB6  ECB5  F01F         	call	_USBCheckCDCRequest	;wreg free
 27987                           
 27988                           ;USBapp.c: 354: }
 27989                           
 27990                           ;USBapp.c: 353: break;
 27991                           
 27992                           ;USBapp.c: 352: default:
 27993                           
 27994                           ;USBapp.c: 350: break;
 27995                           
 27996                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 27997                           
 27998                           ;USBapp.c: 347: break;
 27999                           
 28000                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 28001                           
 28002                           ;USBapp.c: 344: break;
 28003  004DBA  0012               	return	
 28004  004DBC                     i2l917:
 28005  004DBC  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28006  004DC0  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28007                           
 28008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28009                           ; Switch size 1, requested type "space"
 28010                           ; Number of cases is 2, Range of values is 0 to 127
 28011                           ; switch strategies available:
 28012                           ; Name         Instructions Cycles
 28013                           ; simple_byte            7     4 (average)
 28014                           ;	Chosen strategy is simple_byte
 28015  004DC4  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28016  004DC6  0A00               	xorlw	0	; case 0
 28017  004DC8  B4D8               	btfsc	status,2,c
 28018  004DCA  D004               	goto	i2l12082
 28019  004DCC  0A7F               	xorlw	127	; case 127
 28020  004DCE  A4D8               	btfss	status,2,c
 28021  004DD0  0012               	return	
 28022  004DD2  D018               	goto	i2l12084
 28023  004DD4                     i2l12082:
 28024                           
 28025                           ; Switch size 1, requested type "space"
 28026                           ; Number of cases is 8, Range of values is 1 to 117
 28027                           ; switch strategies available:
 28028                           ; Name         Instructions Cycles
 28029                           ; simple_byte           25    13 (average)
 28030                           ;	Chosen strategy is simple_byte
 28031  004DD4  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28032  004DD6  0A01               	xorlw	1	; case 1
 28033  004DD8  B4D8               	btfsc	status,2,c
 28034  004DDA  D7EA               	goto	i2l923
 28035  004DDC  0A03               	xorlw	3	; case 2
 28036  004DDE  B4D8               	btfsc	status,2,c
 28037  004DE0  0012               	return	
 28038  004DE2  0A01               	xorlw	1	; case 3
 28039  004DE4  B4D8               	btfsc	status,2,c
 28040  004DE6  D7E7               	goto	i2l925
 28041  004DE8  0A06               	xorlw	6	; case 5
 28042  004DEA  B4D8               	btfsc	status,2,c
 28043  004DEC  0012               	return	
 28044  004DEE  0A77               	xorlw	119	; case 114
 28045  004DF0  B4D8               	btfsc	status,2,c
 28046  004DF2  0012               	return	
 28047  004DF4  0A01               	xorlw	1	; case 115
 28048  004DF6  B4D8               	btfsc	status,2,c
 28049  004DF8  0012               	return	
 28050  004DFA  0A07               	xorlw	7	; case 116
 28051  004DFC  B4D8               	btfsc	status,2,c
 28052  004DFE  0012               	return	
 28053  004E00  0A01               	xorlw	1	; case 117
 28054  004E02  0012               	return	
 28055  004E04                     i2l12084:
 28056                           
 28057                           ; Switch size 1, requested type "space"
 28058                           ; Number of cases is 1, Range of values is 255 to 255
 28059                           ; switch strategies available:
 28060                           ; Name         Instructions Cycles
 28061                           ; simple_byte            4     3 (average)
 28062                           ;	Chosen strategy is simple_byte
 28063  004E04  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28064  004E06  0AFF               	xorlw	255	; case 255
 28065  004E08  0012               	return	
 28066  004E0A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28067                           	opt stack 0
 28068                           pclatu	equ	0xFFB
 28069                           pclath	equ	0xFFA
 28070                           tblptru	equ	0xFF8
 28071                           tblptrh	equ	0xFF7
 28072                           tblptrl	equ	0xFF6
 28073                           tablat	equ	0xFF5
 28074                           prodh	equ	0xFF4
 28075                           prodl	equ	0xFF3
 28076                           intcon	equ	0xFF2
 28077                           intcon2	equ	0xFF1
 28078                           intcon3	equ	0xFF0
 28079                           indf0	equ	0xFEF
 28080                           postinc0	equ	0xFEE
 28081                           fsr0h	equ	0xFEA
 28082                           fsr0l	equ	0xFE9
 28083                           wreg	equ	0xFE8
 28084                           indf1	equ	0xFE7
 28085                           postdec1	equ	0xFE5
 28086                           fsr1h	equ	0xFE2
 28087                           fsr1l	equ	0xFE1
 28088                           indf2	equ	0xFDF
 28089                           postinc2	equ	0xFDE
 28090                           postdec2	equ	0xFDD
 28091                           plusw2	equ	0xFDB
 28092                           fsr2h	equ	0xFDA
 28093                           fsr2l	equ	0xFD9
 28094                           status	equ	0xFD8
 28095                           
 28096 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28097 ;; Defined at:
 28098 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;		None
 28101 ;; Auto vars:     Size  Location     Type
 28102 ;;  i               1   12[COMRAM] unsigned char 
 28103 ;; Return value:  Size  Location     Type
 28104 ;;                  1    wreg      void 
 28105 ;; Registers used:
 28106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28107 ;; Tracked objects:
 28108 ;;		On entry : 0/0
 28109 ;;		On exit  : 0/0
 28110 ;;		Unchanged: 0/0
 28111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28112 ;;      Params:         0       0       0       0       0       0       0       0       0
 28113 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28114 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28115 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28116 ;;Total ram usage:        1 bytes
 28117 ;; Hardware stack levels used:    1
 28118 ;; Hardware stack levels required when called:    3
 28119 ;; This function calls:
 28120 ;;		_CDCInitEP
 28121 ;;		i2_EUSART_Initialize
 28122 ;; This function is called by:
 28123 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28124 ;; This function uses a non-reentrant model
 28125 ;;
 28126                           
 28127                           	psect	text124
 28128  004EC0                     __ptext124:
 28129                           	opt stack 0
 28130  004EC0                     _USBapp_CdcEmulatorInitialize:
 28131                           	opt stack 15
 28132                           
 28133                           ;USBapp.c: 147: CDCInitEP();
 28134                           
 28135                           ;incstack = 0
 28136  004EC0  EC45  F026         	call	_CDCInitEP	;wreg free
 28137                           
 28138                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28139  004EC4  0E00               	movlw	0
 28140  004EC6  0101               	movlb	1	; () banked
 28141  004EC8  6FEB               	movwf	(_line_coding+4)& (0+255),b
 28142                           
 28143                           ; BSR set to: 1
 28144                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28145  004ECA  0E08               	movlw	8
 28146  004ECC  6FED               	movwf	(_line_coding+6)& (0+255),b
 28147                           
 28148                           ; BSR set to: 1
 28149                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28150  004ECE  0E00               	movlw	0
 28151  004ED0  6FEC               	movwf	(_line_coding+5)& (0+255),b
 28152                           
 28153                           ; BSR set to: 1
 28154                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28155  004ED2  0E00               	movlw	0
 28156  004ED4  6FE7               	movwf	_line_coding& (0+255),b
 28157  004ED6  0E4B               	movlw	75
 28158  004ED8  6FE8               	movwf	(_line_coding+1)& (0+255),b
 28159  004EDA  0E00               	movlw	0
 28160  004EDC  6FE9               	movwf	(_line_coding+2)& (0+255),b
 28161  004EDE  0E00               	movlw	0
 28162  004EE0  6FEA               	movwf	(_line_coding+3)& (0+255),b
 28163                           
 28164                           ; BSR set to: 1
 28165                           ;USBapp.c: 152: EUSART_Initialize();
 28166  004EE2  EC5D  F029         	call	i2_EUSART_Initialize	;wreg free
 28167                           
 28168                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28169  004EE6  0E00               	movlw	0
 28170  004EE8  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28171  004EEA                     i2l7802:
 28172  004EEA  0E3F               	movlw	63
 28173  004EEC  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28174  004EEE  D001               	goto	i2l870
 28175  004EF0  D00C               	goto	i2u562_40
 28176  004EF2                     i2l870:
 28177                           
 28178                           ;USBapp.c: 155: {
 28179                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28180  004EF2  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28181  004EF4  0D01               	mullw	1
 28182  004EF6  0E80               	movlw	low _USB_Buffer
 28183  004EF8  24F3               	addwf	prodl,w,c
 28184  004EFA  6ED9               	movwf	fsr2l,c
 28185  004EFC  0E02               	movlw	high _USB_Buffer
 28186  004EFE  20F4               	addwfc	prodh,w,c
 28187  004F00  6EDA               	movwf	fsr2h,c
 28188  004F02  0E00               	movlw	0
 28189  004F04  6EDF               	movwf	indf2,c
 28190  004F06  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28191  004F08  D7F0               	goto	i2l7802
 28192  004F0A                     i2u562_40:
 28193                           
 28194                           ;USBapp.c: 157: }
 28195                           ;USBapp.c: 158: NextUSBOut = 0;
 28196  004F0A  0E00               	movlw	0
 28197  004F0C  0100               	movlb	0	; () banked
 28198  004F0E  6FE8               	movwf	_NextUSBOut& (0+255),b
 28199                           
 28200                           ;USBapp.c: 159: LastRS232Out = 0;
 28201  004F10  0E00               	movlw	0
 28202  004F12  6FE6               	movwf	_LastRS232Out& (0+255),b
 28203                           
 28204                           ; BSR set to: 0
 28205  004F14  0012               	return		;funcret
 28206  004F16                     __end_of_USBapp_CdcEmulatorInitialize:
 28207                           	opt stack 0
 28208                           pclatu	equ	0xFFB
 28209                           pclath	equ	0xFFA
 28210                           tblptru	equ	0xFF8
 28211                           tblptrh	equ	0xFF7
 28212                           tblptrl	equ	0xFF6
 28213                           tablat	equ	0xFF5
 28214                           prodh	equ	0xFF4
 28215                           prodl	equ	0xFF3
 28216                           intcon	equ	0xFF2
 28217                           intcon2	equ	0xFF1
 28218                           intcon3	equ	0xFF0
 28219                           indf0	equ	0xFEF
 28220                           postinc0	equ	0xFEE
 28221                           fsr0h	equ	0xFEA
 28222                           fsr0l	equ	0xFE9
 28223                           wreg	equ	0xFE8
 28224                           indf1	equ	0xFE7
 28225                           postdec1	equ	0xFE5
 28226                           fsr1h	equ	0xFE2
 28227                           fsr1l	equ	0xFE1
 28228                           indf2	equ	0xFDF
 28229                           postinc2	equ	0xFDE
 28230                           postdec2	equ	0xFDD
 28231                           plusw2	equ	0xFDB
 28232                           fsr2h	equ	0xFDA
 28233                           fsr2l	equ	0xFD9
 28234                           status	equ	0xFD8
 28235                           
 28236 ;; *************** function _CDCInitEP *****************
 28237 ;; Defined at:
 28238 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28239 ;; Parameters:    Size  Location     Type
 28240 ;;		None
 28241 ;; Auto vars:     Size  Location     Type
 28242 ;;		None
 28243 ;; Return value:  Size  Location     Type
 28244 ;;                  1    wreg      void 
 28245 ;; Registers used:
 28246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28247 ;; Tracked objects:
 28248 ;;		On entry : 0/0
 28249 ;;		On exit  : 0/0
 28250 ;;		Unchanged: 0/0
 28251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28252 ;;      Params:         0       0       0       0       0       0       0       0       0
 28253 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28255 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28256 ;;Total ram usage:        0 bytes
 28257 ;; Hardware stack levels used:    1
 28258 ;; Hardware stack levels required when called:    2
 28259 ;; This function calls:
 28260 ;;		_USBEnableEndpoint
 28261 ;;		i2_USBTransferOnePacket
 28262 ;; This function is called by:
 28263 ;;		_USBapp_CdcEmulatorInitialize
 28264 ;; This function uses a non-reentrant model
 28265 ;;
 28266                           
 28267                           	psect	text125
 28268  004C8A                     __ptext125:
 28269                           	opt stack 0
 28270  004C8A                     _CDCInitEP:
 28271                           	opt stack 15
 28272                           
 28273                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;incstack = 0
 28277  004C8A  0E00               	movlw	0
 28278  004C8C  0101               	movlb	1	; () banked
 28279  004C8E  6FE7               	movwf	_line_coding& (0+255),b
 28280  004C90  0E4B               	movlw	75
 28281  004C92  6FE8               	movwf	(_line_coding+1)& (0+255),b
 28282  004C94  0E00               	movlw	0
 28283  004C96  6FE9               	movwf	(_line_coding+2)& (0+255),b
 28284  004C98  0E00               	movlw	0
 28285  004C9A  6FEA               	movwf	(_line_coding+3)& (0+255),b
 28286                           
 28287                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 28288  004C9C  0E00               	movlw	0
 28289  004C9E  6FEB               	movwf	(_line_coding+4)& (0+255),b
 28290                           
 28291                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 28292  004CA0  0E00               	movlw	0
 28293  004CA2  6FEC               	movwf	(_line_coding+5)& (0+255),b
 28294                           
 28295                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 28296  004CA4  0E08               	movlw	8
 28297  004CA6  6FED               	movwf	(_line_coding+6)& (0+255),b
 28298                           
 28299                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 28300  004CA8  0E00               	movlw	0
 28301  004CAA  0100               	movlb	0	; () banked
 28302  004CAC  6FDE               	movwf	_cdc_rx_len& (0+255),b
 28303                           
 28304                           ; BSR set to: 0
 28305                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 28306  004CAE  0E1A               	movlw	26
 28307  004CB0  6E09               	movwf	USBEnableEndpoint@options,c
 28308  004CB2  0E01               	movlw	1
 28309  004CB4  EC06  F029         	call	_USBEnableEndpoint
 28310                           
 28311                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28312  004CB8  0E1E               	movlw	30
 28313  004CBA  6E09               	movwf	USBEnableEndpoint@options,c
 28314  004CBC  0E02               	movlw	2
 28315  004CBE  EC06  F029         	call	_USBEnableEndpoint
 28316                           
 28317                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28318  004CC2  0E00               	movlw	0
 28319  004CC4  6E01               	movwf	i2USBTransferOnePacket@dir,c
 28320  004CC6  0E40               	movlw	64
 28321  004CC8  6E02               	movwf	i2USBTransferOnePacket@data,c
 28322  004CCA  0E05               	movlw	5
 28323  004CCC  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 28324  004CCE  0E40               	movlw	64
 28325  004CD0  6E04               	movwf	i2USBTransferOnePacket@len,c
 28326  004CD2  0E02               	movlw	2
 28327  004CD4  EC47  F01E         	call	i2_USBTransferOnePacket
 28328  004CD8  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28329  004CDC  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28330                           
 28331                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 28332  004CE0  0E00               	movlw	0
 28333  004CE2  6E34               	movwf	_CDCDataInHandle,c
 28334  004CE4  0E00               	movlw	0
 28335  004CE6  6E35               	movwf	_CDCDataInHandle+1,c
 28336                           
 28337                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 28338  004CE8  0E00               	movlw	0
 28339  004CEA  0100               	movlb	0	; () banked
 28340  004CEC  6FEB               	movwf	_cdc_trf_state& (0+255),b
 28341                           
 28342                           ; BSR set to: 0
 28343  004CEE  0012               	return		;funcret
 28344  004CF0                     __end_of_CDCInitEP:
 28345                           	opt stack 0
 28346                           pclatu	equ	0xFFB
 28347                           pclath	equ	0xFFA
 28348                           tblptru	equ	0xFF8
 28349                           tblptrh	equ	0xFF7
 28350                           tblptrl	equ	0xFF6
 28351                           tablat	equ	0xFF5
 28352                           prodh	equ	0xFF4
 28353                           prodl	equ	0xFF3
 28354                           intcon	equ	0xFF2
 28355                           intcon2	equ	0xFF1
 28356                           intcon3	equ	0xFF0
 28357                           indf0	equ	0xFEF
 28358                           postinc0	equ	0xFEE
 28359                           fsr0h	equ	0xFEA
 28360                           fsr0l	equ	0xFE9
 28361                           wreg	equ	0xFE8
 28362                           indf1	equ	0xFE7
 28363                           postdec1	equ	0xFE5
 28364                           fsr1h	equ	0xFE2
 28365                           fsr1l	equ	0xFE1
 28366                           indf2	equ	0xFDF
 28367                           postinc2	equ	0xFDE
 28368                           postdec2	equ	0xFDD
 28369                           plusw2	equ	0xFDB
 28370                           fsr2h	equ	0xFDA
 28371                           fsr2l	equ	0xFD9
 28372                           status	equ	0xFD8
 28373                           
 28374 ;; *************** function i2_USBTransferOnePacket *****************
 28375 ;; Defined at:
 28376 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 28377 ;; Parameters:    Size  Location     Type
 28378 ;;  ep              1    wreg     unsigned char 
 28379 ;;  dir             1    0[COMRAM] unsigned char 
 28380 ;;  data            2    1[COMRAM] PTR unsigned char 
 28381 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28382 ;;  len             1    3[COMRAM] unsigned char 
 28383 ;; Auto vars:     Size  Location     Type
 28384 ;;  ep              1    4[COMRAM] unsigned char 
 28385 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28386 ;;		 -> BDT(48), NULL(0), 
 28387 ;; Return value:  Size  Location     Type
 28388 ;;                  2    0[COMRAM] PTR void 
 28389 ;; Registers used:
 28390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28391 ;; Tracked objects:
 28392 ;;		On entry : 0/0
 28393 ;;		On exit  : 0/0
 28394 ;;		Unchanged: 0/0
 28395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28396 ;;      Params:         4       0       0       0       0       0       0       0       0
 28397 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28399 ;;      Totals:         7       0       0       0       0       0       0       0       0
 28400 ;;Total ram usage:        7 bytes
 28401 ;; Hardware stack levels used:    1
 28402 ;; This function calls:
 28403 ;;		Nothing
 28404 ;; This function is called by:
 28405 ;;		_CDCInitEP
 28406 ;; This function uses a non-reentrant model
 28407 ;;
 28408                           
 28409                           	psect	text126
 28410  003C8E                     __ptext126:
 28411                           	opt stack 0
 28412  003C8E                     i2_USBTransferOnePacket:
 28413                           	opt stack 16
 28414                           
 28415                           ; BSR set to: 0
 28416                           ;incstack = 0
 28417                           ;i2USBTransferOnePacket@ep stored from wreg
 28418  003C8E  6E05               	movwf	i2USBTransferOnePacket@ep,c
 28419                           
 28420                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 28421                           ;usb_device.c: 762: if(dir != 0)
 28422  003C90  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28423  003C92  B4D8               	btfsc	status,2,c
 28424  003C94  D007               	goto	i2l1885
 28425                           
 28426                           ;usb_device.c: 763: {
 28427                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 28428  003C96  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28429  003C98  0D02               	mullw	2
 28430  003C9A  0ECA               	movlw	low _pBDTEntryIn
 28431  003C9C  24F3               	addwf	prodl,w,c
 28432  003C9E  6ED9               	movwf	fsr2l,c
 28433  003CA0  0E00               	movlw	high _pBDTEntryIn
 28434  003CA2  D006               	goto	L31
 28435  003CA4                     i2l1885:
 28436                           
 28437                           ;usb_device.c: 767: else
 28438                           ;usb_device.c: 768: {
 28439                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 28440  003CA4  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28441  003CA6  0D02               	mullw	2
 28442  003CA8  0E40               	movlw	low _pBDTEntryOut
 28443  003CAA  24F3               	addwf	prodl,w,c
 28444  003CAC  6ED9               	movwf	fsr2l,c
 28445  003CAE  0E01               	movlw	high _pBDTEntryOut
 28446  003CB0                     L31:
 28447  003CB0  20F4               	addwfc	prodh,w,c
 28448  003CB2  6EDA               	movwf	fsr2h,c
 28449  003CB4  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 28450  003CB8  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28451                           
 28452                           ;usb_device.c: 771: }
 28453                           ;usb_device.c: 775: if(handle == 0)
 28454  003CBC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28455  003CBE  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28456  003CC0  A4D8               	btfss	status,2,c
 28457  003CC2  D005               	goto	i2l1887
 28458                           
 28459                           ;usb_device.c: 776: {
 28460                           ;usb_device.c: 777: return 0;
 28461  003CC4  0E00               	movlw	0
 28462  003CC6  6E01               	movwf	?i2_USBTransferOnePacket,c
 28463  003CC8  0E00               	movlw	0
 28464  003CCA  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 28465  003CCC  0012               	return	
 28466  003CCE                     i2l1887:
 28467                           
 28468                           ;usb_device.c: 778: }
 28469                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 28470  003CCE  EE20 F002          	lfsr	2,2
 28471  003CD2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28472  003CD4  26D9               	addwf	fsr2l,f,c
 28473  003CD6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28474  003CD8  22DA               	addwfc	fsr2h,f,c
 28475  003CDA  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28476  003CDE  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28477                           
 28478                           ;usb_device.c: 781: handle->CNT = len;
 28479  003CE2  EE20 F001          	lfsr	2,1
 28480  003CE6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 28481  003CE8  26D9               	addwf	fsr2l,f,c
 28482  003CEA  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 28483  003CEC  22DA               	addwfc	fsr2h,f,c
 28484  003CEE  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28485                           
 28486                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 28487  003CF2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28488  003CF6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28489  003CFA  0E40               	movlw	64
 28490  003CFC  16DF               	andwf	indf2,f,c
 28491                           
 28492                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 28493  003CFE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28494  003D02  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28495  003D06  0E00               	movlw	0
 28496  003D08  86DB               	bsf	plusw2,3,c
 28497                           
 28498                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 28499  003D0A  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28500  003D0E  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28501  003D12  0E00               	movlw	0
 28502  003D14  8EDB               	bsf	plusw2,7,c
 28503                           
 28504                           ;usb_device.c: 787: if(dir != 0)
 28505  003D16  5001               	movf	i2USBTransferOnePacket@dir,w,c
 28506  003D18  B4D8               	btfsc	status,2,c
 28507  003D1A  D007               	goto	i2l1889
 28508                           
 28509                           ;usb_device.c: 788: {
 28510                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28511  003D1C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28512  003D1E  0D02               	mullw	2
 28513  003D20  0ECA               	movlw	low _pBDTEntryIn
 28514  003D22  24F3               	addwf	prodl,w,c
 28515  003D24  6ED9               	movwf	fsr2l,c
 28516  003D26  0E00               	movlw	high _pBDTEntryIn
 28517  003D28  D006               	goto	L32
 28518  003D2A                     i2l1889:
 28519                           
 28520                           ;usb_device.c: 792: else
 28521                           ;usb_device.c: 793: {
 28522                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28523  003D2A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 28524  003D2C  0D02               	mullw	2
 28525  003D2E  0E40               	movlw	low _pBDTEntryOut
 28526  003D30  24F3               	addwf	prodl,w,c
 28527  003D32  6ED9               	movwf	fsr2l,c
 28528  003D34  0E01               	movlw	high _pBDTEntryOut
 28529  003D36                     L32:
 28530  003D36  20F4               	addwfc	prodh,w,c
 28531  003D38  6EDA               	movwf	fsr2h,c
 28532  003D3A  0E04               	movlw	4
 28533  003D3C  1ADF               	xorwf	indf2,f,c
 28534                           
 28535                           ;usb_device.c: 796: }
 28536                           ;usb_device.c: 797: return (void*)handle;
 28537  003D3E  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28538  003D42  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28539  003D46  0012               	return	
 28540  003D48                     __end_ofi2_USBTransferOnePacket:
 28541                           	opt stack 0
 28542                           pclatu	equ	0xFFB
 28543                           pclath	equ	0xFFA
 28544                           tblptru	equ	0xFF8
 28545                           tblptrh	equ	0xFF7
 28546                           tblptrl	equ	0xFF6
 28547                           tablat	equ	0xFF5
 28548                           prodh	equ	0xFF4
 28549                           prodl	equ	0xFF3
 28550                           intcon	equ	0xFF2
 28551                           intcon2	equ	0xFF1
 28552                           intcon3	equ	0xFF0
 28553                           indf0	equ	0xFEF
 28554                           postinc0	equ	0xFEE
 28555                           fsr0h	equ	0xFEA
 28556                           fsr0l	equ	0xFE9
 28557                           wreg	equ	0xFE8
 28558                           indf1	equ	0xFE7
 28559                           postdec1	equ	0xFE5
 28560                           fsr1h	equ	0xFE2
 28561                           fsr1l	equ	0xFE1
 28562                           indf2	equ	0xFDF
 28563                           postinc2	equ	0xFDE
 28564                           postdec2	equ	0xFDD
 28565                           plusw2	equ	0xFDB
 28566                           fsr2h	equ	0xFDA
 28567                           fsr2l	equ	0xFD9
 28568                           status	equ	0xFD8
 28569                           
 28570 ;; *************** function _USBEnableEndpoint *****************
 28571 ;; Defined at:
 28572 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 28573 ;; Parameters:    Size  Location     Type
 28574 ;;  ep              1    wreg     unsigned char 
 28575 ;;  options         1    8[COMRAM] unsigned char 
 28576 ;; Auto vars:     Size  Location     Type
 28577 ;;  ep              1   11[COMRAM] unsigned char 
 28578 ;;  p               2    9[COMRAM] PTR unsigned char 
 28579 ;;		 -> UEP0(1), 
 28580 ;; Return value:  Size  Location     Type
 28581 ;;                  1    wreg      void 
 28582 ;; Registers used:
 28583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28584 ;; Tracked objects:
 28585 ;;		On entry : 0/0
 28586 ;;		On exit  : 0/0
 28587 ;;		Unchanged: 0/0
 28588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28589 ;;      Params:         1       0       0       0       0       0       0       0       0
 28590 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28592 ;;      Totals:         4       0       0       0       0       0       0       0       0
 28593 ;;Total ram usage:        4 bytes
 28594 ;; Hardware stack levels used:    1
 28595 ;; Hardware stack levels required when called:    1
 28596 ;; This function calls:
 28597 ;;		_USBConfigureEndpoint
 28598 ;; This function is called by:
 28599 ;;		_CDCInitEP
 28600 ;; This function uses a non-reentrant model
 28601 ;;
 28602                           
 28603                           	psect	text127
 28604  00520C                     __ptext127:
 28605                           	opt stack 0
 28606  00520C                     _USBEnableEndpoint:
 28607                           	opt stack 15
 28608                           
 28609                           ;incstack = 0
 28610                           ;USBEnableEndpoint@ep stored from wreg
 28611  00520C  6E0C               	movwf	USBEnableEndpoint@ep,c
 28612                           
 28613                           ;usb_device.c: 647: unsigned char* p;
 28614                           ;usb_device.c: 651: if(options & 0x04)
 28615  00520E  A409               	btfss	USBEnableEndpoint@options,2,c
 28616  005210  D005               	goto	i2l1880
 28617                           
 28618                           ;usb_device.c: 652: {
 28619                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 28620  005212  0E00               	movlw	0
 28621  005214  6E01               	movwf	USBConfigureEndpoint@direction,c
 28622  005216  500C               	movf	USBEnableEndpoint@ep,w,c
 28623  005218  ECA8  F021         	call	_USBConfigureEndpoint
 28624  00521C                     i2l1880:
 28625                           
 28626                           ;usb_device.c: 654: }
 28627                           ;usb_device.c: 655: if(options & 0x02)
 28628  00521C  A209               	btfss	USBEnableEndpoint@options,1,c
 28629  00521E  D005               	goto	i2l1881
 28630                           
 28631                           ;usb_device.c: 656: {
 28632                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 28633  005220  0E01               	movlw	1
 28634  005222  6E01               	movwf	USBConfigureEndpoint@direction,c
 28635  005224  500C               	movf	USBEnableEndpoint@ep,w,c
 28636  005226  ECA8  F021         	call	_USBConfigureEndpoint
 28637  00522A                     i2l1881:
 28638                           
 28639                           ;usb_device.c: 658: }
 28640                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 28641  00522A  500C               	movf	USBEnableEndpoint@ep,w,c
 28642  00522C  0D01               	mullw	1
 28643  00522E  0E6A               	movlw	106
 28644  005230  24F3               	addwf	prodl,w,c
 28645  005232  6E0A               	movwf	USBEnableEndpoint@p,c
 28646  005234  0E0F               	movlw	15
 28647  005236  20F4               	addwfc	prodh,w,c
 28648  005238  6E0B               	movwf	USBEnableEndpoint@p+1,c
 28649                           
 28650                           ;usb_device.c: 664: *p = options;
 28651  00523A  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28652  00523E  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28653  005242  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 28654  005246  0012               	return		;funcret
 28655  005248                     __end_of_USBEnableEndpoint:
 28656                           	opt stack 0
 28657                           pclatu	equ	0xFFB
 28658                           pclath	equ	0xFFA
 28659                           tblptru	equ	0xFF8
 28660                           tblptrh	equ	0xFF7
 28661                           tblptrl	equ	0xFF6
 28662                           tablat	equ	0xFF5
 28663                           prodh	equ	0xFF4
 28664                           prodl	equ	0xFF3
 28665                           intcon	equ	0xFF2
 28666                           intcon2	equ	0xFF1
 28667                           intcon3	equ	0xFF0
 28668                           indf0	equ	0xFEF
 28669                           postinc0	equ	0xFEE
 28670                           fsr0h	equ	0xFEA
 28671                           fsr0l	equ	0xFE9
 28672                           wreg	equ	0xFE8
 28673                           indf1	equ	0xFE7
 28674                           postdec1	equ	0xFE5
 28675                           fsr1h	equ	0xFE2
 28676                           fsr1l	equ	0xFE1
 28677                           indf2	equ	0xFDF
 28678                           postinc2	equ	0xFDE
 28679                           postdec2	equ	0xFDD
 28680                           plusw2	equ	0xFDB
 28681                           fsr2h	equ	0xFDA
 28682                           fsr2l	equ	0xFD9
 28683                           status	equ	0xFD8
 28684                           
 28685 ;; *************** function _USBConfigureEndpoint *****************
 28686 ;; Defined at:
 28687 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 28688 ;; Parameters:    Size  Location     Type
 28689 ;;  EPNum           1    wreg     unsigned char 
 28690 ;;  direction       1    0[COMRAM] unsigned char 
 28691 ;; Auto vars:     Size  Location     Type
 28692 ;;  EPNum           1    5[COMRAM] unsigned char 
 28693 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28694 ;;		 -> BDT(48), 
 28695 ;; Return value:  Size  Location     Type
 28696 ;;                  1    wreg      void 
 28697 ;; Registers used:
 28698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28699 ;; Tracked objects:
 28700 ;;		On entry : 0/0
 28701 ;;		On exit  : 0/0
 28702 ;;		Unchanged: 0/0
 28703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28704 ;;      Params:         1       0       0       0       0       0       0       0       0
 28705 ;;      Locals:         3       0       0       0       0       0       0       0       0
 28706 ;;      Temps:          4       0       0       0       0       0       0       0       0
 28707 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28708 ;;Total ram usage:        8 bytes
 28709 ;; Hardware stack levels used:    1
 28710 ;; This function calls:
 28711 ;;		Nothing
 28712 ;; This function is called by:
 28713 ;;		_USBEnableEndpoint
 28714 ;; This function uses a non-reentrant model
 28715 ;;
 28716                           
 28717                           	psect	text128
 28718  004350                     __ptext128:
 28719                           	opt stack 0
 28720  004350                     _USBConfigureEndpoint:
 28721                           	opt stack 15
 28722                           
 28723                           ;incstack = 0
 28724                           ;USBConfigureEndpoint@EPNum stored from wreg
 28725  004350  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 28726                           
 28727                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 28728                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 28729  004352  0E00               	movlw	0
 28730  004354  6E07               	movwf	USBConfigureEndpoint@handle,c
 28731  004356  0E04               	movlw	4
 28732  004358  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 28733                           
 28734                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 28735  00435A  5001               	movf	USBConfigureEndpoint@direction,w,c
 28736  00435C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 28737  00435E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28738  004360  90D8               	bcf	status,0,c
 28739  004362  3602               	rlcf	??_USBConfigureEndpoint,f,c
 28740  004364  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 28741  004366  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28742  004368  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28743  00436A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28744  00436C  90D8               	bcf	status,0,c
 28745  00436E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28746  004370  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28747  004372  90D8               	bcf	status,0,c
 28748  004374  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28749  004376  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28750  004378  5002               	movf	??_USBConfigureEndpoint,w,c
 28751  00437A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 28752  00437C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 28753  00437E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 28754  004380  90D8               	bcf	status,0,c
 28755  004382  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28756  004384  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28757  004386  90D8               	bcf	status,0,c
 28758  004388  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 28759  00438A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 28760  00438C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 28761  00438E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 28762  004390  5005               	movf	??_USBConfigureEndpoint+3,w,c
 28763  004392  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28764                           
 28765                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 28766  004394  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28767  004398  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28768  00439C  9EDF               	bcf	indf2,7,c
 28769                           
 28770                           ;usb_device.c: 1242: if(direction == 0)
 28771  00439E  5001               	movf	USBConfigureEndpoint@direction,w,c
 28772  0043A0  A4D8               	btfss	status,2,c
 28773  0043A2  D007               	goto	i2l1927
 28774                           
 28775                           ;usb_device.c: 1243: {
 28776                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 28777  0043A4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28778  0043A6  0D02               	mullw	2
 28779  0043A8  0E40               	movlw	low _pBDTEntryOut
 28780  0043AA  24F3               	addwf	prodl,w,c
 28781  0043AC  6ED9               	movwf	fsr2l,c
 28782  0043AE  0E01               	movlw	high _pBDTEntryOut
 28783  0043B0  D006               	goto	L33
 28784  0043B2                     i2l1927:
 28785                           
 28786                           ;usb_device.c: 1246: else
 28787                           ;usb_device.c: 1247: {
 28788                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 28789  0043B2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 28790  0043B4  0D02               	mullw	2
 28791  0043B6  0ECA               	movlw	low _pBDTEntryIn
 28792  0043B8  24F3               	addwf	prodl,w,c
 28793  0043BA  6ED9               	movwf	fsr2l,c
 28794  0043BC  0E00               	movlw	high _pBDTEntryIn
 28795  0043BE                     L33:
 28796  0043BE  20F4               	addwfc	prodh,w,c
 28797  0043C0  6EDA               	movwf	fsr2h,c
 28798  0043C2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28799  0043C6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28800                           
 28801                           ;usb_device.c: 1249: }
 28802                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 28803  0043CA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28804  0043CE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28805  0043D2  9CDF               	bcf	indf2,6,c
 28806                           
 28807                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 28808  0043D4  EE20 F004          	lfsr	2,4
 28809  0043D8  5007               	movf	USBConfigureEndpoint@handle,w,c
 28810  0043DA  26D9               	addwf	fsr2l,f,c
 28811  0043DC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 28812  0043DE  22DA               	addwfc	fsr2h,f,c
 28813  0043E0  8CDF               	bsf	indf2,6,c
 28814  0043E2  0012               	return		;funcret
 28815  0043E4                     __end_of_USBConfigureEndpoint:
 28816                           	opt stack 0
 28817                           pclatu	equ	0xFFB
 28818                           pclath	equ	0xFFA
 28819                           tblptru	equ	0xFF8
 28820                           tblptrh	equ	0xFF7
 28821                           tblptrl	equ	0xFF6
 28822                           tablat	equ	0xFF5
 28823                           prodh	equ	0xFF4
 28824                           prodl	equ	0xFF3
 28825                           intcon	equ	0xFF2
 28826                           intcon2	equ	0xFF1
 28827                           intcon3	equ	0xFF0
 28828                           indf0	equ	0xFEF
 28829                           postinc0	equ	0xFEE
 28830                           fsr0h	equ	0xFEA
 28831                           fsr0l	equ	0xFE9
 28832                           wreg	equ	0xFE8
 28833                           indf1	equ	0xFE7
 28834                           postdec1	equ	0xFE5
 28835                           fsr1h	equ	0xFE2
 28836                           fsr1l	equ	0xFE1
 28837                           indf2	equ	0xFDF
 28838                           postinc2	equ	0xFDE
 28839                           postdec2	equ	0xFDD
 28840                           plusw2	equ	0xFDB
 28841                           fsr2h	equ	0xFDA
 28842                           fsr2l	equ	0xFD9
 28843                           status	equ	0xFD8
 28844                           
 28845 ;; *************** function _USBCheckCDCRequest *****************
 28846 ;; Defined at:
 28847 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 28848 ;; Parameters:    Size  Location     Type
 28849 ;;		None
 28850 ;; Auto vars:     Size  Location     Type
 28851 ;;		None
 28852 ;; Return value:  Size  Location     Type
 28853 ;;                  1    wreg      void 
 28854 ;; Registers used:
 28855 ;;		wreg, status,2, status,0
 28856 ;; Tracked objects:
 28857 ;;		On entry : 0/0
 28858 ;;		On exit  : 0/0
 28859 ;;		Unchanged: 0/0
 28860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28861 ;;      Params:         0       0       0       0       0       0       0       0       0
 28862 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28863 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28864 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28865 ;;Total ram usage:        0 bytes
 28866 ;; Hardware stack levels used:    1
 28867 ;; This function calls:
 28868 ;;		Nothing
 28869 ;; This function is called by:
 28870 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28871 ;; This function uses a non-reentrant model
 28872 ;;
 28873                           
 28874                           	psect	text129
 28875  003F6A                     __ptext129:
 28876                           	opt stack 0
 28877  003F6A                     _USBCheckCDCRequest:
 28878                           	opt stack 18
 28879                           
 28880                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 28881                           
 28882                           ;incstack = 0
 28883  003F6A  0104               	movlb	4	; () banked
 28884  003F6C  5130               	movf	48,w,b	;volatile
 28885  003F6E  0B1F               	andlw	31
 28886  003F70  06E8               	decf	wreg,f,c
 28887  003F72  A4D8               	btfss	status,2,c
 28888  003F74  0012               	return	
 28889                           
 28890                           ; BSR set to: 4
 28891                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 28892                           
 28893                           ; BSR set to: 4
 28894                           
 28895                           ; BSR set to: 4
 28896  003F76  3930               	swapf	48,w,b	;volatile
 28897  003F78  32E8               	rrcf	wreg,f,c
 28898  003F7A  0B03               	andlw	3
 28899  003F7C  06E8               	decf	wreg,f,c
 28900  003F7E  A4D8               	btfss	status,2,c
 28901  003F80  0012               	return	
 28902                           
 28903                           ; BSR set to: 4
 28904                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 28905                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 28906                           
 28907                           ; BSR set to: 4
 28908                           
 28909                           ; BSR set to: 4
 28910  003F82  5134               	movf	52,w,b	;volatile
 28911  003F84  B4D8               	btfsc	status,2,c
 28912  003F86  D037               	goto	i2l2148
 28913                           
 28914                           ; BSR set to: 4
 28915  003F88  0534               	decf	52,w,b	;volatile
 28916  003F8A  A4D8               	btfss	status,2,c
 28917  003F8C  0012               	return	
 28918  003F8E  D033               	goto	i2l2148
 28919  003F90                     
 28920                           ; BSR set to: 4
 28921                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28922                           
 28923                           ; BSR set to: 4
 28924  003F90  0EDF               	movlw	low _dummy_encapsulated_cmd_response
 28925  003F92  0100               	movlb	0	; () banked
 28926  003F94  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28927  003F96  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28928  003F98  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28929                           
 28930                           ; BSR set to: 0
 28931                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 28932  003F9A  0E00               	movlw	0
 28933  003F9C  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28934  003F9E  0E08               	movlw	8
 28935  003FA0  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28936                           
 28937                           ; BSR set to: 0
 28938                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28939  003FA2  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28940                           
 28941                           ; BSR set to: 0
 28942                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 28943  003FA4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28944                           
 28945                           ;usb_device_cdc.c: 212: break;
 28946  003FA6  0012               	return	
 28947  003FA8                     
 28948                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28949                           
 28950                           ; BSR set to: 0
 28951  003FA8  0EDF               	movlw	low _dummy_encapsulated_cmd_response
 28952  003FAA  0100               	movlb	0	; () banked
 28953  003FAC  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28954  003FAE  0E01               	movlw	high _dummy_encapsulated_cmd_response
 28955  003FB0  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28956                           
 28957                           ; BSR set to: 0
 28958                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 28959  003FB2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28960                           
 28961                           ;usb_device_cdc.c: 217: break;
 28962  003FB4  0012               	return	
 28963  003FB6                     i2l2152:
 28964                           
 28965                           ; BSR set to: 4
 28966                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 28967  003FB6  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 28968  003FBA  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 28969                           
 28970                           ; BSR set to: 4
 28971                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 28972  003FBE  0ED5               	movlw	low _cdc_notice
 28973  003FC0  0100               	movlb	0	; () banked
 28974  003FC2  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 28975  003FC4  0E01               	movlw	high _cdc_notice
 28976  003FC6  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28977                           
 28978                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 28979  003FC8  0E66               	movlw	low _USART_mySetLineCodingHandler
 28980  003FCA  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28981  003FCC  0E4E               	movlw	high _USART_mySetLineCodingHandler
 28982  003FCE  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28983                           
 28984                           ; BSR set to: 0
 28985                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 28986  003FD0  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28987                           
 28988                           ;usb_device_cdc.c: 224: break;
 28989  003FD2  0012               	return	
 28990  003FD4                     
 28991                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28992                           
 28993                           ; BSR set to: 0
 28994  003FD4  0EE7               	movlw	low _line_coding
 28995  003FD6  0100               	movlb	0	; () banked
 28996  003FD8  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28997  003FDA  0E01               	movlw	high _line_coding
 28998  003FDC  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28999                           
 29000                           ; BSR set to: 0
 29001  003FDE  0E00               	movlw	0
 29002  003FE0  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29003  003FE2  0E07               	movlw	7
 29004  003FE4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29005                           
 29006                           ; BSR set to: 0
 29007  003FE6  0EC1               	movlw	193
 29008  003FE8  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29009                           
 29010                           ;usb_device_cdc.c: 231: break;
 29011  003FEA  0012               	return	
 29012  003FEC                     i2l2154:
 29013                           
 29014                           ; BSR set to: 4
 29015                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29016  003FEC  C432 F15A          	movff	1074,_control_signal_bitmap	;volatile
 29017                           
 29018                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29019  003FF0  0100               	movlb	0	; () banked
 29020  003FF2  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29021                           
 29022                           ; BSR set to: 0
 29023                           ;usb_device_cdc.c: 260: }
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;usb_device_cdc.c: 259: break;
 29027                           
 29028                           ;usb_device_cdc.c: 258: default:
 29029                           
 29030                           ;usb_device_cdc.c: 256: break;
 29031  003FF4  0012               	return	
 29032  003FF6                     i2l2148:
 29033                           
 29034                           ; BSR set to: 0
 29035  003FF6  0104               	movlb	4	; () banked
 29036  003FF8  5131               	movf	49,w,b	;volatile
 29037                           
 29038                           ; Switch size 1, requested type "space"
 29039                           ; Number of cases is 5, Range of values is 0 to 34
 29040                           ; switch strategies available:
 29041                           ; Name         Instructions Cycles
 29042                           ; simple_byte           16     9 (average)
 29043                           ;	Chosen strategy is simple_byte
 29044  003FFA  0A00               	xorlw	0	; case 0
 29045  003FFC  B4D8               	btfsc	status,2,c
 29046  003FFE  D7C8               	goto	i2l2149
 29047  004000  0A01               	xorlw	1	; case 1
 29048  004002  B4D8               	btfsc	status,2,c
 29049  004004  D7D1               	goto	i2l2151
 29050  004006  0A21               	xorlw	33	; case 32
 29051  004008  B4D8               	btfsc	status,2,c
 29052  00400A  D7D5               	goto	i2l2152
 29053  00400C  0A01               	xorlw	1	; case 33
 29054  00400E  B4D8               	btfsc	status,2,c
 29055  004010  D7E1               	goto	i2l2153
 29056  004012  0A03               	xorlw	3	; case 34
 29057  004014  A4D8               	btfss	status,2,c
 29058  004016  0012               	return	
 29059  004018  D7E9               	goto	i2l2154
 29060  00401A                     __end_of_USBCheckCDCRequest:
 29061                           	opt stack 0
 29062                           pclatu	equ	0xFFB
 29063                           pclath	equ	0xFFA
 29064                           tblptru	equ	0xFF8
 29065                           tblptrh	equ	0xFF7
 29066                           tblptrl	equ	0xFF6
 29067                           tablat	equ	0xFF5
 29068                           prodh	equ	0xFF4
 29069                           prodl	equ	0xFF3
 29070                           intcon	equ	0xFF2
 29071                           intcon2	equ	0xFF1
 29072                           intcon3	equ	0xFF0
 29073                           indf0	equ	0xFEF
 29074                           postinc0	equ	0xFEE
 29075                           fsr0h	equ	0xFEA
 29076                           fsr0l	equ	0xFE9
 29077                           wreg	equ	0xFE8
 29078                           indf1	equ	0xFE7
 29079                           postdec1	equ	0xFE5
 29080                           fsr1h	equ	0xFE2
 29081                           fsr1l	equ	0xFE1
 29082                           indf2	equ	0xFDF
 29083                           postinc2	equ	0xFDE
 29084                           postdec2	equ	0xFDD
 29085                           plusw2	equ	0xFDB
 29086                           fsr2h	equ	0xFDA
 29087                           fsr2l	equ	0xFD9
 29088                           status	equ	0xFD8
 29089                           
 29090 ;; *************** function _USBCtrlTrfOutHandler *****************
 29091 ;; Defined at:
 29092 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29093 ;; Parameters:    Size  Location     Type
 29094 ;;		None
 29095 ;; Auto vars:     Size  Location     Type
 29096 ;;		None
 29097 ;; Return value:  Size  Location     Type
 29098 ;;                  1    wreg      void 
 29099 ;; Registers used:
 29100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29101 ;; Tracked objects:
 29102 ;;		On entry : 0/0
 29103 ;;		On exit  : 0/0
 29104 ;;		Unchanged: 0/0
 29105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29106 ;;      Params:         0       0       0       0       0       0       0       0       0
 29107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29109 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29110 ;;Total ram usage:        0 bytes
 29111 ;; Hardware stack levels used:    1
 29112 ;; Hardware stack levels required when called:    3
 29113 ;; This function calls:
 29114 ;;		_USBCtrlTrfRxService
 29115 ;; This function is called by:
 29116 ;;		_USBCtrlEPService
 29117 ;; This function uses a non-reentrant model
 29118 ;;
 29119                           
 29120                           	psect	text130
 29121  004E0A                     __ptext130:
 29122                           	opt stack 0
 29123  004E0A                     _USBCtrlTrfOutHandler:
 29124                           	opt stack 15
 29125                           
 29126                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29127                           
 29128                           ;incstack = 0
 29129  004E0A  0E02               	movlw	2
 29130  004E0C  184D               	xorwf	_controlTransferState,w,c	;volatile
 29131  004E0E  A4D8               	btfss	status,2,c
 29132  004E10  D003               	goto	i2l2035
 29133                           
 29134                           ;usb_device.c: 2172: {
 29135                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29136  004E12  EC84  F013         	call	_USBCtrlTrfRxService	;wreg free
 29137                           
 29138                           ;usb_device.c: 2174: }
 29139  004E16  0012               	return	
 29140  004E18                     i2l2035:
 29141                           
 29142                           ;usb_device.c: 2175: else
 29143                           ;usb_device.c: 2176: {
 29144                           ;usb_device.c: 2179: controlTransferState = 0;
 29145  004E18  0E00               	movlw	0
 29146  004E1A  6E4D               	movwf	_controlTransferState,c	;volatile
 29147                           
 29148                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29149  004E1C  504A               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29150  004E1E  A4D8               	btfss	status,2,c
 29151  004E20  D01F               	goto	i2l2037
 29152                           
 29153                           ;usb_device.c: 2187: {
 29154                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29155  004E22  EE20 F001          	lfsr	2,1
 29156  004E26  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29157  004E28  26D9               	addwf	fsr2l,f,c
 29158  004E2A  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29159  004E2C  22DA               	addwfc	fsr2h,f,c
 29160  004E2E  0E08               	movlw	8
 29161  004E30  6EDF               	movwf	indf2,c
 29162                           
 29163                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29164  004E32  EE20 F002          	lfsr	2,2
 29165  004E36  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29166  004E38  26D9               	addwf	fsr2l,f,c
 29167  004E3A  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29168  004E3C  22DA               	addwfc	fsr2h,f,c
 29169  004E3E  0E30               	movlw	48
 29170  004E40  6EDE               	movwf	postinc2,c
 29171  004E42  0E04               	movlw	4
 29172  004E44  6EDD               	movwf	postdec2,c
 29173                           
 29174                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29175  004E46  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29176  004E4A  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29177  004E4E  0E0C               	movlw	12
 29178  004E50  6EDF               	movwf	indf2,c
 29179                           
 29180                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29181  004E52  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29182  004E56  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29183  004E5A  0E00               	movlw	0
 29184  004E5C  8EDB               	bsf	plusw2,7,c
 29185                           
 29186                           ;usb_device.c: 2192: }
 29187  004E5E  0012               	return	
 29188  004E60                     i2l2037:
 29189                           
 29190                           ;usb_device.c: 2193: else
 29191                           ;usb_device.c: 2194: {
 29192                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29193  004E60  0E00               	movlw	0
 29194  004E62  6E4A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29195  004E64  0012               	return	
 29196  004E66                     __end_of_USBCtrlTrfOutHandler:
 29197                           	opt stack 0
 29198                           pclatu	equ	0xFFB
 29199                           pclath	equ	0xFFA
 29200                           tblptru	equ	0xFF8
 29201                           tblptrh	equ	0xFF7
 29202                           tblptrl	equ	0xFF6
 29203                           tablat	equ	0xFF5
 29204                           prodh	equ	0xFF4
 29205                           prodl	equ	0xFF3
 29206                           intcon	equ	0xFF2
 29207                           intcon2	equ	0xFF1
 29208                           intcon3	equ	0xFF0
 29209                           indf0	equ	0xFEF
 29210                           postinc0	equ	0xFEE
 29211                           fsr0h	equ	0xFEA
 29212                           fsr0l	equ	0xFE9
 29213                           wreg	equ	0xFE8
 29214                           indf1	equ	0xFE7
 29215                           postdec1	equ	0xFE5
 29216                           fsr1h	equ	0xFE2
 29217                           fsr1l	equ	0xFE1
 29218                           indf2	equ	0xFDF
 29219                           postinc2	equ	0xFDE
 29220                           postdec2	equ	0xFDD
 29221                           plusw2	equ	0xFDB
 29222                           fsr2h	equ	0xFDA
 29223                           fsr2l	equ	0xFD9
 29224                           status	equ	0xFD8
 29225                           
 29226 ;; *************** function _USBCtrlTrfRxService *****************
 29227 ;; Defined at:
 29228 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 29229 ;; Parameters:    Size  Location     Type
 29230 ;;		None
 29231 ;; Auto vars:     Size  Location     Type
 29232 ;;  byteToRead      1   18[COMRAM] unsigned char 
 29233 ;;  i               1   17[COMRAM] unsigned char 
 29234 ;; Return value:  Size  Location     Type
 29235 ;;                  1    wreg      void 
 29236 ;; Registers used:
 29237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29238 ;; Tracked objects:
 29239 ;;		On entry : 0/0
 29240 ;;		On exit  : 0/0
 29241 ;;		Unchanged: 0/0
 29242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29243 ;;      Params:         0       0       0       0       0       0       0       0       0
 29244 ;;      Locals:         2       0       0       0       0       0       0       0       0
 29245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29246 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29247 ;;Total ram usage:        2 bytes
 29248 ;; Hardware stack levels used:    1
 29249 ;; Hardware stack levels required when called:    2
 29250 ;; This function calls:
 29251 ;;		_USART_mySetLineCodingHandler
 29252 ;;		_USBCtrlEPAllowStatusStage
 29253 ;; This function is called by:
 29254 ;;		_USBCtrlTrfOutHandler
 29255 ;; This function uses a non-reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text131
 29259  002708                     __ptext131:
 29260                           	opt stack 0
 29261  002708                     _USBCtrlTrfRxService:
 29262                           	opt stack 15
 29263                           
 29264                           ;usb_device.c: 1520: uint8_t byteToRead;
 29265                           ;usb_device.c: 1521: uint8_t i;
 29266                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29267                           
 29268                           ;incstack = 0
 29269  002708  EE20 F001          	lfsr	2,1
 29270  00270C  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 29271  00270E  26D9               	addwf	fsr2l,f,c
 29272  002710  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29273  002712  22DA               	addwfc	fsr2h,f,c
 29274  002714  50DF               	movf	indf2,w,c
 29275  002716  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 29276                           
 29277                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 29278  002718  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29279  00271A  0100               	movlb	0	; () banked
 29280  00271C  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29281  00271E  0E00               	movlw	0
 29282  002720  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29283  002722  A0D8               	btfss	status,0,c
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;usb_device.c: 1532: {
 29287                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 29288  002724  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29289                           
 29290                           ; BSR set to: 0
 29291                           ;usb_device.c: 1534: }
 29292                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 29293                           
 29294                           ; BSR set to: 0
 29295  002728  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29296  00272A  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29297  00272C  0E00               	movlw	0
 29298  00272E  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29299                           
 29300                           ; BSR set to: 0
 29301                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 29302  002730  0E00               	movlw	0
 29303  002732  6E12               	movwf	USBCtrlTrfRxService@i,c
 29304  002734  D011               	goto	i2l1961
 29305  002736                     
 29306                           ; BSR set to: 0
 29307                           ;usb_device.c: 1541: {
 29308                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29309                           
 29310                           ; BSR set to: 0
 29311  002736  5012               	movf	USBCtrlTrfRxService@i,w,c
 29312  002738  0D01               	mullw	1
 29313  00273A  0E38               	movlw	56
 29314  00273C  24F3               	addwf	prodl,w,c
 29315  00273E  6ED9               	movwf	fsr2l,c
 29316  002740  0E04               	movlw	4
 29317  002742  20F4               	addwfc	prodh,w,c
 29318  002744  6EDA               	movwf	fsr2h,c
 29319  002746  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 29320  00274A  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29321  00274E  CFDF FFE7          	movff	indf2,indf1
 29322                           
 29323                           ; BSR set to: 0
 29324  002752  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 29325  002754  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29326                           
 29327                           ; BSR set to: 0
 29328  002756  2A12               	incf	USBCtrlTrfRxService@i,f,c
 29329  002758                     i2l1961:
 29330                           
 29331                           ; BSR set to: 0
 29332                           
 29333                           ; BSR set to: 0
 29334  002758  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29335  00275A  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 29336  00275C  A0D8               	btfss	status,0,c
 29337  00275E  D7EB               	goto	i2l1962
 29338                           
 29339                           ; BSR set to: 0
 29340                           ;usb_device.c: 1543: }
 29341                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 29342                           
 29343                           ; BSR set to: 0
 29344  002760  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29345  002762  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29346  002764  B4D8               	btfsc	status,2,c
 29347  002766  D032               	goto	i2l1964
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;usb_device.c: 1548: {
 29351                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 29352  002768  EE20 F001          	lfsr	2,1
 29353  00276C  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29354  00276E  26D9               	addwf	fsr2l,f,c
 29355  002770  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29356  002772  22DA               	addwfc	fsr2h,f,c
 29357  002774  0E08               	movlw	8
 29358  002776  6EDF               	movwf	indf2,c
 29359                           
 29360                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29361  002778  EE20 F002          	lfsr	2,2
 29362  00277C  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29363  00277E  26D9               	addwf	fsr2l,f,c
 29364  002780  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29365  002782  22DA               	addwfc	fsr2h,f,c
 29366  002784  0E38               	movlw	56
 29367  002786  6EDE               	movwf	postinc2,c
 29368  002788  0E04               	movlw	4
 29369  00278A  6EDD               	movwf	postdec2,c
 29370                           
 29371                           ; BSR set to: 0
 29372                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29373  00278C  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29374  002790  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29375  002794  BCDF               	btfsc	indf2,6,c
 29376  002796  D00D               	goto	i2l1965
 29377                           
 29378                           ; BSR set to: 0
 29379                           ;usb_device.c: 1552: {
 29380                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29381  002798  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29382  00279C  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29383  0027A0  0E48               	movlw	72
 29384  0027A2  6EDF               	movwf	indf2,c
 29385                           
 29386                           ; BSR set to: 0
 29387                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29388  0027A4  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29389  0027A8  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29390  0027AC  0E00               	movlw	0
 29391  0027AE  8EDB               	bsf	plusw2,7,c
 29392                           
 29393                           ;usb_device.c: 1555: }
 29394  0027B0  0012               	return	
 29395  0027B2                     i2l1965:
 29396                           
 29397                           ; BSR set to: 0
 29398                           ;usb_device.c: 1556: else
 29399                           ;usb_device.c: 1557: {
 29400                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29401                           
 29402                           ; BSR set to: 0
 29403  0027B2  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29404  0027B6  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29405  0027BA  0E08               	movlw	8
 29406  0027BC  6EDF               	movwf	indf2,c
 29407                           
 29408                           ; BSR set to: 0
 29409                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29410  0027BE  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29411  0027C2  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29412  0027C6  0E00               	movlw	0
 29413  0027C8  8EDB               	bsf	plusw2,7,c
 29414                           
 29415                           ; BSR set to: 0
 29416                           ;usb_device.c: 1560: }
 29417                           ;usb_device.c: 1561: }
 29418  0027CA  0012               	return	
 29419  0027CC                     i2l1964:
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;usb_device.c: 1562: else
 29423                           ;usb_device.c: 1563: {
 29424                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 29425                           
 29426                           ; BSR set to: 0
 29427  0027CC  EE20 F001          	lfsr	2,1
 29428  0027D0  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29429  0027D2  26D9               	addwf	fsr2l,f,c
 29430  0027D4  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29431  0027D6  22DA               	addwfc	fsr2h,f,c
 29432  0027D8  0E08               	movlw	8
 29433  0027DA  6EDF               	movwf	indf2,c
 29434                           
 29435                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29436  0027DC  EE20 F002          	lfsr	2,2
 29437  0027E0  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29438  0027E2  26D9               	addwf	fsr2l,f,c
 29439  0027E4  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29440  0027E6  22DA               	addwfc	fsr2h,f,c
 29441  0027E8  0E30               	movlw	48
 29442  0027EA  6EDE               	movwf	postinc2,c
 29443  0027EC  0E04               	movlw	4
 29444  0027EE  6EDD               	movwf	postdec2,c
 29445                           
 29446                           ; BSR set to: 0
 29447                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29448  0027F0  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29449  0027F4  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29450  0027F8  0E04               	movlw	4
 29451  0027FA  6EDF               	movwf	indf2,c
 29452                           
 29453                           ; BSR set to: 0
 29454                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29455  0027FC  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29456  002800  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29457  002804  0E00               	movlw	0
 29458  002806  8EDB               	bsf	plusw2,7,c
 29459                           
 29460                           ; BSR set to: 0
 29461                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 29462  002808  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29463  00280A  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29464  00280C  B4D8               	btfsc	status,2,c
 29465  00280E  D00E               	goto	i2u663_49
 29466                           
 29467                           ; BSR set to: 0
 29468                           ;usb_device.c: 1581: {
 29469                           ;usb_device.c: 1586: outPipes[0].pFunc();
 29470  002810  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29471  002814  D801               	call	i2u663_48
 29472  002816  D00A               	goto	i2u663_49
 29473  002818                     i2u663_48:
 29474  002818  0005               	push	
 29475  00281A  6EFA               	movwf	pclath,c
 29476  00281C  50DE               	movf	postinc2,w,c
 29477  00281E  6EFD               	movwf	tosl,c
 29478  002820  50DE               	movf	postinc2,w,c
 29479  002822  6EFE               	movwf	tosh,c
 29480  002824  50F8               	movf	tblptru,w,c
 29481  002826  6EFF               	movwf	tosu,c
 29482  002828  50FA               	movf	pclath,w,c
 29483  00282A  0012               	return		;indir
 29484  00282C                     i2u663_49:
 29485                           
 29486                           ;usb_device.c: 1588: }
 29487                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 29488  00282C  0100               	movlb	0	; () banked
 29489  00282E  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29490                           
 29491                           ; BSR set to: 0
 29492                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 29493  002830  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29494  002832  A4D8               	btfss	status,2,c
 29495  002834  0012               	return	
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;usb_device.c: 1604: {
 29499                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 29500  002836  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29501  00283A  0012               	return	
 29502  00283C                     __end_of_USBCtrlTrfRxService:
 29503                           	opt stack 0
 29504                           tosu	equ	0xFFF
 29505                           tosh	equ	0xFFE
 29506                           tosl	equ	0xFFD
 29507                           pclatu	equ	0xFFB
 29508                           pclath	equ	0xFFA
 29509                           tblptru	equ	0xFF8
 29510                           tblptrh	equ	0xFF7
 29511                           tblptrl	equ	0xFF6
 29512                           tablat	equ	0xFF5
 29513                           prodh	equ	0xFF4
 29514                           prodl	equ	0xFF3
 29515                           intcon	equ	0xFF2
 29516                           intcon2	equ	0xFF1
 29517                           intcon3	equ	0xFF0
 29518                           indf0	equ	0xFEF
 29519                           postinc0	equ	0xFEE
 29520                           fsr0h	equ	0xFEA
 29521                           fsr0l	equ	0xFE9
 29522                           wreg	equ	0xFE8
 29523                           indf1	equ	0xFE7
 29524                           postdec1	equ	0xFE5
 29525                           fsr1h	equ	0xFE2
 29526                           fsr1l	equ	0xFE1
 29527                           indf2	equ	0xFDF
 29528                           postinc2	equ	0xFDE
 29529                           postdec2	equ	0xFDD
 29530                           plusw2	equ	0xFDB
 29531                           fsr2h	equ	0xFDA
 29532                           fsr2l	equ	0xFD9
 29533                           status	equ	0xFD8
 29534                           
 29535 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29536 ;; Defined at:
 29537 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 29538 ;; Parameters:    Size  Location     Type
 29539 ;;		None
 29540 ;; Auto vars:     Size  Location     Type
 29541 ;;		None
 29542 ;; Return value:  Size  Location     Type
 29543 ;;                  1    wreg      void 
 29544 ;; Registers used:
 29545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29546 ;; Tracked objects:
 29547 ;;		On entry : 0/0
 29548 ;;		On exit  : 0/0
 29549 ;;		Unchanged: 0/0
 29550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29551 ;;      Params:         0       0       0       0       0       0       0       0       0
 29552 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29554 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29555 ;;Total ram usage:        0 bytes
 29556 ;; Hardware stack levels used:    1
 29557 ;; This function calls:
 29558 ;;		Nothing
 29559 ;; This function is called by:
 29560 ;;		_USBDeviceTasks
 29561 ;;		_USBCtrlEPServiceComplete
 29562 ;;		_USBCtrlTrfRxService
 29563 ;; This function uses a non-reentrant model
 29564 ;;
 29565                           
 29566                           	psect	text132
 29567  003A4E                     __ptext132:
 29568                           	opt stack 0
 29569  003A4E                     _USBCtrlEPAllowStatusStage:
 29570                           	opt stack 16
 29571                           
 29572                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 29573                           
 29574                           ;incstack = 0
 29575  003A4E  5047               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29576  003A50  A4D8               	btfss	status,2,c
 29577  003A52  0012               	return	
 29578                           
 29579                           ;usb_device.c: 1112: {
 29580                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 29581  003A54  0E01               	movlw	1
 29582  003A56  6E47               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29583                           
 29584                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 29585  003A58  5046               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29586  003A5A  A4D8               	btfss	status,2,c
 29587  003A5C  0012               	return	
 29588                           
 29589                           ;usb_device.c: 1115: {
 29590                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 29591  003A5E  0E01               	movlw	1
 29592  003A60  6E46               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29593                           
 29594                           ;usb_device.c: 1120: if(controlTransferState == 2)
 29595  003A62  0E02               	movlw	2
 29596  003A64  184D               	xorwf	_controlTransferState,w,c	;volatile
 29597  003A66  A4D8               	btfss	status,2,c
 29598  003A68  D016               	goto	i2l1915
 29599                           
 29600                           ;usb_device.c: 1121: {
 29601                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 29602  003A6A  0100               	movlb	0	; () banked
 29603  003A6C  EE20 F001          	lfsr	2,1
 29604  003A70  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29605  003A72  26D9               	addwf	fsr2l,f,c
 29606  003A74  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29607  003A76  22DA               	addwfc	fsr2h,f,c
 29608  003A78  0E00               	movlw	0
 29609  003A7A  6EDF               	movwf	indf2,c
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29613  003A7C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29614  003A80  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29615  003A84  0E48               	movlw	72
 29616  003A86  6EDF               	movwf	indf2,c
 29617                           
 29618                           ; BSR set to: 0
 29619                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29620  003A88  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29621  003A8C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29622  003A90  0E00               	movlw	0
 29623  003A92  8EDB               	bsf	plusw2,7,c
 29624                           
 29625                           ;usb_device.c: 1125: }
 29626  003A94  0012               	return	
 29627  003A96                     i2l1915:
 29628                           
 29629                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 29630                           
 29631                           ; BSR set to: 0
 29632  003A96  044D               	decf	_controlTransferState,w,c	;volatile
 29633  003A98  A4D8               	btfss	status,2,c
 29634  003A9A  0012               	return	
 29635                           
 29636                           ;usb_device.c: 1127: {
 29637                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 29638  003A9C  0E00               	movlw	0
 29639  003A9E  6E4A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29640                           
 29641                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 29642  003AA0  EE20 F001          	lfsr	2,1
 29643  003AA4  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 29644  003AA6  26D9               	addwf	fsr2l,f,c
 29645  003AA8  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29646  003AAA  22DA               	addwfc	fsr2h,f,c
 29647  003AAC  0E08               	movlw	8
 29648  003AAE  6EDF               	movwf	indf2,c
 29649                           
 29650                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29651  003AB0  EE20 F002          	lfsr	2,2
 29652  003AB4  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 29653  003AB6  26D9               	addwf	fsr2l,f,c
 29654  003AB8  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29655  003ABA  22DA               	addwfc	fsr2h,f,c
 29656  003ABC  0E30               	movlw	48
 29657  003ABE  6EDE               	movwf	postinc2,c
 29658  003AC0  0E04               	movlw	4
 29659  003AC2  6EDD               	movwf	postdec2,c
 29660                           
 29661                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29662  003AC4  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29663  003AC8  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29664  003ACC  0E04               	movlw	4
 29665  003ACE  6EDF               	movwf	indf2,c
 29666                           
 29667                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29668  003AD0  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29669  003AD4  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29670  003AD8  0E00               	movlw	0
 29671  003ADA  8EDB               	bsf	plusw2,7,c
 29672                           
 29673                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 29674  003ADC  0E01               	movlw	1
 29675  003ADE  6E4A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29676                           
 29677                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 29678  003AE0  EE20 F001          	lfsr	2,1
 29679  003AE4  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29680  003AE6  26D9               	addwf	fsr2l,f,c
 29681  003AE8  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29682  003AEA  22DA               	addwfc	fsr2h,f,c
 29683  003AEC  0E08               	movlw	8
 29684  003AEE  6EDF               	movwf	indf2,c
 29685                           
 29686                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29687  003AF0  EE20 F002          	lfsr	2,2
 29688  003AF4  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29689  003AF6  26D9               	addwf	fsr2l,f,c
 29690  003AF8  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29691  003AFA  22DA               	addwfc	fsr2h,f,c
 29692  003AFC  0E30               	movlw	48
 29693  003AFE  6EDE               	movwf	postinc2,c
 29694  003B00  0E04               	movlw	4
 29695  003B02  6EDD               	movwf	postdec2,c
 29696                           
 29697                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29698  003B04  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29699  003B08  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29700  003B0C  0E80               	movlw	128
 29701  003B0E  6EDF               	movwf	indf2,c
 29702  003B10  0012               	return	
 29703  003B12                     __end_of_USBCtrlEPAllowStatusStage:
 29704                           	opt stack 0
 29705                           tosu	equ	0xFFF
 29706                           tosh	equ	0xFFE
 29707                           tosl	equ	0xFFD
 29708                           pclatu	equ	0xFFB
 29709                           pclath	equ	0xFFA
 29710                           tblptru	equ	0xFF8
 29711                           tblptrh	equ	0xFF7
 29712                           tblptrl	equ	0xFF6
 29713                           tablat	equ	0xFF5
 29714                           prodh	equ	0xFF4
 29715                           prodl	equ	0xFF3
 29716                           intcon	equ	0xFF2
 29717                           intcon2	equ	0xFF1
 29718                           intcon3	equ	0xFF0
 29719                           indf0	equ	0xFEF
 29720                           postinc0	equ	0xFEE
 29721                           fsr0h	equ	0xFEA
 29722                           fsr0l	equ	0xFE9
 29723                           wreg	equ	0xFE8
 29724                           indf1	equ	0xFE7
 29725                           postdec1	equ	0xFE5
 29726                           fsr1h	equ	0xFE2
 29727                           fsr1l	equ	0xFE1
 29728                           indf2	equ	0xFDF
 29729                           postinc2	equ	0xFDE
 29730                           postdec2	equ	0xFDD
 29731                           plusw2	equ	0xFDB
 29732                           fsr2h	equ	0xFDA
 29733                           fsr2l	equ	0xFD9
 29734                           status	equ	0xFD8
 29735                           
 29736 ;; *************** function _USBCtrlTrfInHandler *****************
 29737 ;; Defined at:
 29738 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 29739 ;; Parameters:    Size  Location     Type
 29740 ;;		None
 29741 ;; Auto vars:     Size  Location     Type
 29742 ;;  lastDTS         1   17[COMRAM] unsigned char 
 29743 ;; Return value:  Size  Location     Type
 29744 ;;                  1    wreg      void 
 29745 ;; Registers used:
 29746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 29747 ;; Tracked objects:
 29748 ;;		On entry : 0/0
 29749 ;;		On exit  : 0/0
 29750 ;;		Unchanged: 0/0
 29751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29752 ;;      Params:         0       0       0       0       0       0       0       0       0
 29753 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29755 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29756 ;;Total ram usage:        1 bytes
 29757 ;; Hardware stack levels used:    1
 29758 ;; Hardware stack levels required when called:    2
 29759 ;; This function calls:
 29760 ;;		_USART_mySetLineCodingHandler
 29761 ;;		_USBCtrlTrfTxService
 29762 ;; This function is called by:
 29763 ;;		_USBCtrlEPService
 29764 ;; This function uses a non-reentrant model
 29765 ;;
 29766                           
 29767                           	psect	text133
 29768  0033A6                     __ptext133:
 29769                           	opt stack 0
 29770  0033A6                     _USBCtrlTrfInHandler:
 29771                           	opt stack 16
 29772                           
 29773                           ;usb_device.c: 2225: uint8_t lastDTS;
 29774                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29775                           
 29776                           ;incstack = 0
 29777  0033A6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29778  0033AA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29779  0033AE  0100               	movlb	0	; () banked
 29780  0033B0  0E00               	movlw	0
 29781  0033B2  BCDF               	btfsc	indf2,6,c
 29782  0033B4  0E01               	movlw	1
 29783  0033B6  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29787  0033B8  0E04               	movlw	4
 29788  0033BA  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 29789                           
 29790                           ; BSR set to: 0
 29791                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 29792  0033BC  0E08               	movlw	8
 29793  0033BE  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29794  0033C0  A4D8               	btfss	status,2,c
 29795  0033C2  D00C               	goto	i2l2044
 29796                           
 29797                           ; BSR set to: 0
 29798                           ;usb_device.c: 2236: {
 29799                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 29800  0033C4  0104               	movlb	4	; () banked
 29801  0033C6  5132               	movf	50,w,b	;volatile
 29802  0033C8  0B7F               	andlw	127
 29803  0033CA  6E63               	movwf	3939,c	;volatile
 29804                           
 29805                           ; BSR set to: 4
 29806                           ;usb_device.c: 2238: if(UADDR != 0u)
 29807  0033CC  5063               	movf	3939,w,c	;volatile
 29808  0033CE  B4D8               	btfsc	status,2,c
 29809  0033D0  D002               	goto	i2l2043
 29810                           
 29811                           ; BSR set to: 4
 29812                           ;usb_device.c: 2239: {
 29813                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 29814  0033D2  0E10               	movlw	16
 29815  0033D4  D001               	goto	L34
 29816  0033D6                     i2l2043:
 29817                           
 29818                           ;usb_device.c: 2242: else
 29819                           ;usb_device.c: 2243: {
 29820                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 29821                           
 29822                           ; BSR set to: 0
 29823  0033D6  0E04               	movlw	4
 29824  0033D8                     L34:
 29825  0033D8  0100               	movlb	0	; () banked
 29826  0033DA  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 29827  0033DC                     i2l2044:
 29828                           
 29829                           ; BSR set to: 0
 29830                           ;usb_device.c: 2245: }
 29831                           ;usb_device.c: 2246: }
 29832                           ;usb_device.c: 2249: if(controlTransferState == 1)
 29833                           
 29834                           ; BSR set to: 0
 29835                           
 29836                           ; BSR set to: 0
 29837  0033DC  044D               	decf	_controlTransferState,w,c	;volatile
 29838  0033DE  A4D8               	btfss	status,2,c
 29839  0033E0  D03A               	goto	i2l2045
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;usb_device.c: 2250: {
 29843                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29844  0033E2  EE20 F002          	lfsr	2,2
 29845  0033E6  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 29846  0033E8  26D9               	addwf	fsr2l,f,c
 29847  0033EA  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29848  0033EC  22DA               	addwfc	fsr2h,f,c
 29849  0033EE  0E38               	movlw	56
 29850  0033F0  6EDE               	movwf	postinc2,c
 29851  0033F2  0E04               	movlw	4
 29852  0033F4  6EDD               	movwf	postdec2,c
 29853                           
 29854                           ; BSR set to: 0
 29855                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 29856  0033F6  EC8D  F01B         	call	_USBCtrlTrfTxService	;wreg free
 29857                           
 29858                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 29859  0033FA  0E02               	movlw	2
 29860  0033FC  184E               	xorwf	_shortPacketStatus,w,c	;volatile
 29861  0033FE  A4D8               	btfss	status,2,c
 29862  003400  D00D               	goto	i2l2046
 29863                           
 29864                           ;usb_device.c: 2259: {
 29865                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 29866  003402  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29867  003406  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29868  00340A  0E04               	movlw	4
 29869  00340C  6EDF               	movwf	indf2,c
 29870                           
 29871                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29872  00340E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29873  003412  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29874  003416  0E00               	movlw	0
 29875  003418  8EDB               	bsf	plusw2,7,c
 29876                           
 29877                           ;usb_device.c: 2264: }
 29878  00341A  0012               	return	
 29879  00341C                     i2l2046:
 29880                           
 29881                           ;usb_device.c: 2265: else
 29882                           ;usb_device.c: 2266: {
 29883                           ;usb_device.c: 2267: if(lastDTS == 0)
 29884  00341C  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29885  00341E  A4D8               	btfss	status,2,c
 29886  003420  D00D               	goto	i2l2048
 29887                           
 29888                           ;usb_device.c: 2268: {
 29889                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29890  003422  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29891  003426  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29892  00342A  0E48               	movlw	72
 29893  00342C  6EDF               	movwf	indf2,c
 29894                           
 29895                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29896  00342E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29897  003432  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29898  003436  0E00               	movlw	0
 29899  003438  8EDB               	bsf	plusw2,7,c
 29900                           
 29901                           ;usb_device.c: 2271: }
 29902  00343A  0012               	return	
 29903  00343C                     i2l2048:
 29904                           
 29905                           ;usb_device.c: 2272: else
 29906                           ;usb_device.c: 2273: {
 29907                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29908  00343C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29909  003440  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29910  003444  0E08               	movlw	8
 29911  003446  6EDF               	movwf	indf2,c
 29912                           
 29913                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29914  003448  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 29915  00344C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29916  003450  0E00               	movlw	0
 29917  003452  8EDB               	bsf	plusw2,7,c
 29918                           
 29919                           ;usb_device.c: 2276: }
 29920                           ;usb_device.c: 2277: }
 29921                           ;usb_device.c: 2278: }
 29922  003454  0012               	return	
 29923  003456                     i2l2045:
 29924                           
 29925                           ; BSR set to: 0
 29926                           ;usb_device.c: 2279: else
 29927                           ;usb_device.c: 2280: {
 29928                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 29929  003456  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29930  003458  D014               	goto	i2l2051
 29931                           
 29932                           ; BSR set to: 0
 29933                           ;usb_device.c: 2285: {
 29934                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 29935  00345A  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 29936  00345C  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 29937  00345E  B4D8               	btfsc	status,2,c
 29938  003460  D00E               	goto	i2u845_49
 29939                           
 29940                           ; BSR set to: 0
 29941                           ;usb_device.c: 2287: {
 29942                           ;usb_device.c: 2288: outPipes[0].pFunc();
 29943  003462  EE20  F0C2         	lfsr	2,_outPipes+6	;volatile
 29944  003466  D801               	call	i2u845_48
 29945  003468  D00A               	goto	i2u845_49
 29946  00346A                     i2u845_48:
 29947  00346A  0005               	push	
 29948  00346C  6EFA               	movwf	pclath,c
 29949  00346E  50DE               	movf	postinc2,w,c
 29950  003470  6EFD               	movwf	tosl,c
 29951  003472  50DE               	movf	postinc2,w,c
 29952  003474  6EFE               	movwf	tosh,c
 29953  003476  50F8               	movf	tblptru,w,c
 29954  003478  6EFF               	movwf	tosu,c
 29955  00347A  50FA               	movf	pclath,w,c
 29956  00347C  0012               	return		;indir
 29957  00347E                     i2u845_49:
 29958                           
 29959                           ;usb_device.c: 2289: }
 29960                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 29961  00347E  0100               	movlb	0	; () banked
 29962  003480  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29963  003482                     i2l2051:
 29964                           
 29965                           ; BSR set to: 0
 29966                           ;usb_device.c: 2291: }
 29967                           ;usb_device.c: 2293: controlTransferState = 0;
 29968                           
 29969                           ; BSR set to: 0
 29970  003482  0E00               	movlw	0
 29971  003484  6E4D               	movwf	_controlTransferState,c	;volatile
 29972  003486  0012               	return	
 29973  003488                     __end_of_USBCtrlTrfInHandler:
 29974                           	opt stack 0
 29975                           tosu	equ	0xFFF
 29976                           tosh	equ	0xFFE
 29977                           tosl	equ	0xFFD
 29978                           pclatu	equ	0xFFB
 29979                           pclath	equ	0xFFA
 29980                           tblptru	equ	0xFF8
 29981                           tblptrh	equ	0xFF7
 29982                           tblptrl	equ	0xFF6
 29983                           tablat	equ	0xFF5
 29984                           prodh	equ	0xFF4
 29985                           prodl	equ	0xFF3
 29986                           intcon	equ	0xFF2
 29987                           intcon2	equ	0xFF1
 29988                           intcon3	equ	0xFF0
 29989                           indf0	equ	0xFEF
 29990                           postinc0	equ	0xFEE
 29991                           fsr0h	equ	0xFEA
 29992                           fsr0l	equ	0xFE9
 29993                           wreg	equ	0xFE8
 29994                           indf1	equ	0xFE7
 29995                           postdec1	equ	0xFE5
 29996                           fsr1h	equ	0xFE2
 29997                           fsr1l	equ	0xFE1
 29998                           indf2	equ	0xFDF
 29999                           postinc2	equ	0xFDE
 30000                           postdec2	equ	0xFDD
 30001                           plusw2	equ	0xFDB
 30002                           fsr2h	equ	0xFDA
 30003                           fsr2l	equ	0xFD9
 30004                           status	equ	0xFD8
 30005                           
 30006 ;; *************** function _USBCtrlTrfTxService *****************
 30007 ;; Defined at:
 30008 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 30009 ;; Parameters:    Size  Location     Type
 30010 ;;		None
 30011 ;; Auto vars:     Size  Location     Type
 30012 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30013 ;; Return value:  Size  Location     Type
 30014 ;;                  1    wreg      void 
 30015 ;; Registers used:
 30016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30017 ;; Tracked objects:
 30018 ;;		On entry : 0/0
 30019 ;;		On exit  : 0/0
 30020 ;;		Unchanged: 0/0
 30021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30022 ;;      Params:         0       0       0       0       0       0       0       0       0
 30023 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30025 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30026 ;;Total ram usage:        1 bytes
 30027 ;; Hardware stack levels used:    1
 30028 ;; This function calls:
 30029 ;;		Nothing
 30030 ;; This function is called by:
 30031 ;;		_USBCtrlEPAllowDataStage
 30032 ;;		_USBCtrlTrfInHandler
 30033 ;; This function uses a non-reentrant model
 30034 ;;
 30035                           
 30036                           	psect	text134
 30037  00371A                     __ptext134:
 30038                           	opt stack 0
 30039  00371A                     _USBCtrlTrfTxService:
 30040                           	opt stack 15
 30041                           
 30042                           ;usb_device.c: 1439: uint8_t byteToSend;
 30043                           ;usb_device.c: 1443: byteToSend = 8;
 30044                           
 30045                           ;incstack = 0
 30046  00371A  0E08               	movlw	8
 30047  00371C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30048                           
 30049                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30050  00371E  0100               	movlb	0	; () banked
 30051  003720  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30052  003722  E110               	bnz	i2l7940
 30053  003724  0E08               	movlw	8
 30054  003726  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30055  003728  B0D8               	btfsc	status,0,c
 30056  00372A  D00C               	goto	i2l1948
 30057                           
 30058                           ; BSR set to: 0
 30059                           ;usb_device.c: 1445: {
 30060                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30061  00372C  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30062                           
 30063                           ; BSR set to: 0
 30064                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30065  003730  504E               	movf	_shortPacketStatus,w,c	;volatile
 30066  003732  A4D8               	btfss	status,2,c
 30067  003734  D002               	goto	i2l1946
 30068                           
 30069                           ; BSR set to: 0
 30070                           ;usb_device.c: 1454: {
 30071                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30072  003736  0E01               	movlw	1
 30073  003738  D004               	goto	L35
 30074  00373A                     i2l1946:
 30075                           
 30076                           ; BSR set to: 0
 30077                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30078                           
 30079                           ; BSR set to: 0
 30080  00373A  044E               	decf	_shortPacketStatus,w,c	;volatile
 30081  00373C  A4D8               	btfss	status,2,c
 30082  00373E  D002               	goto	i2l1948
 30083                           
 30084                           ; BSR set to: 0
 30085                           ;usb_device.c: 1458: {
 30086                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30087  003740  0E02               	movlw	2
 30088  003742                     L35:
 30089  003742  6E4E               	movwf	_shortPacketStatus,c	;volatile
 30090  003744                     i2l1948:
 30091  003744                     i2l7940:
 30092                           
 30093                           ; BSR set to: 0
 30094                           ;usb_device.c: 1460: }
 30095                           ;usb_device.c: 1461: }
 30096                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30097  003744  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30098  003746  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30099  003748  0E00               	movlw	0
 30100  00374A  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30101                           
 30102                           ; BSR set to: 0
 30103                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30104  00374C  EE20 F001          	lfsr	2,1
 30105  003750  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30106  003752  26D9               	addwf	fsr2l,f,c
 30107  003754  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30108  003756  22DA               	addwfc	fsr2h,f,c
 30109  003758  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30110                           
 30111                           ; BSR set to: 0
 30112                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30113  00375C  0E38               	movlw	56
 30114  00375E  0101               	movlb	1	; () banked
 30115  003760  6F54               	movwf	_pDst& (0+255),b
 30116  003762  0E04               	movlw	4
 30117  003764  6F55               	movwf	(_pDst+1)& (0+255),b
 30118                           
 30119                           ; BSR set to: 1
 30120                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30121  003766  0100               	movlb	0	; () banked
 30122  003768  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30123  00376A  D01D               	goto	i2l1950
 30124  00376C  D03C               	goto	i2l1954
 30125  00376E                     
 30126                           ;usb_device.c: 1478: {
 30127                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30128                           
 30129                           ; BSR set to: 0
 30130  00376E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30131  003772  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30132  003776  6AF8               	clrf	tblptru,c
 30133  003778  C154  FFD9         	movff	_pDst,fsr2l
 30134  00377C  C155  FFDA         	movff	_pDst+1,fsr2h
 30135  003780  0E07               	movlw	(high __ramtop+-1)
 30136  003782  64F7               	cpfsgt	tblptrh,c
 30137  003784  D003               	bra	i2u575_47
 30138  003786  0008               	tblrd		*
 30139  003788  50F5               	movf	tablat,w,c
 30140  00378A  D005               	bra	i2u575_40
 30141  00378C                     i2u575_47:
 30142  00378C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30143  003790  CFF7 FFEA          	movff	tblptrh,fsr0h
 30144  003794  50EF               	movf	indf0,w,c
 30145  003796                     i2u575_40:
 30146  003796  6EDF               	movwf	indf2,c
 30147  003798  0100               	movlb	0	; () banked
 30148  00379A  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30149  00379C  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30150                           
 30151                           ; BSR set to: 0
 30152  00379E  0101               	movlb	1	; () banked
 30153  0037A0  4B54               	infsnz	_pDst& (0+255),f,b
 30154  0037A2  2B55               	incf	(_pDst+1)& (0+255),f,b
 30155                           
 30156                           ; BSR set to: 1
 30157                           ;usb_device.c: 1480: byteToSend--;
 30158  0037A4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30159  0037A6                     i2l1950:
 30160                           
 30161                           ; BSR set to: 1
 30162  0037A6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30163  0037A8  B4D8               	btfsc	status,2,c
 30164  0037AA  0012               	return	
 30165  0037AC  D7E0               	goto	i2l1951
 30166  0037AE                     
 30167                           ;usb_device.c: 1486: {
 30168                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30169  0037AE  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30170  0037B2  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30171  0037B6  6AF8               	clrf	tblptru,c
 30172  0037B8  C154  FFD9         	movff	_pDst,fsr2l
 30173  0037BC  C155  FFDA         	movff	_pDst+1,fsr2h
 30174  0037C0  0E07               	movlw	(high __ramtop+-1)
 30175  0037C2  64F7               	cpfsgt	tblptrh,c
 30176  0037C4  D003               	bra	i2u577_47
 30177  0037C6  0008               	tblrd		*
 30178  0037C8  50F5               	movf	tablat,w,c
 30179  0037CA  D005               	bra	i2u577_40
 30180  0037CC                     i2u577_47:
 30181  0037CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30182  0037D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30183  0037D4  50EF               	movf	indf0,w,c
 30184  0037D6                     i2u577_40:
 30185  0037D6  6EDF               	movwf	indf2,c
 30186  0037D8  0100               	movlb	0	; () banked
 30187  0037DA  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30188  0037DC  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30189                           
 30190                           ; BSR set to: 0
 30191  0037DE  0101               	movlb	1	; () banked
 30192  0037E0  4B54               	infsnz	_pDst& (0+255),f,b
 30193  0037E2  2B55               	incf	(_pDst+1)& (0+255),f,b
 30194                           
 30195                           ; BSR set to: 1
 30196                           ;usb_device.c: 1488: byteToSend--;
 30197  0037E4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30198  0037E6                     i2l1954:
 30199                           
 30200                           ; BSR set to: 1
 30201  0037E6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30202  0037E8  B4D8               	btfsc	status,2,c
 30203  0037EA  0012               	return	
 30204  0037EC  D7E0               	goto	i2l1955
 30205  0037EE                     __end_of_USBCtrlTrfTxService:
 30206                           	opt stack 0
 30207                           tosu	equ	0xFFF
 30208                           tosh	equ	0xFFE
 30209                           tosl	equ	0xFFD
 30210                           pclatu	equ	0xFFB
 30211                           pclath	equ	0xFFA
 30212                           tblptru	equ	0xFF8
 30213                           tblptrh	equ	0xFF7
 30214                           tblptrl	equ	0xFF6
 30215                           tablat	equ	0xFF5
 30216                           prodh	equ	0xFF4
 30217                           prodl	equ	0xFF3
 30218                           intcon	equ	0xFF2
 30219                           intcon2	equ	0xFF1
 30220                           intcon3	equ	0xFF0
 30221                           indf0	equ	0xFEF
 30222                           postinc0	equ	0xFEE
 30223                           fsr0h	equ	0xFEA
 30224                           fsr0l	equ	0xFE9
 30225                           wreg	equ	0xFE8
 30226                           indf1	equ	0xFE7
 30227                           postdec1	equ	0xFE5
 30228                           fsr1h	equ	0xFE2
 30229                           fsr1l	equ	0xFE1
 30230                           indf2	equ	0xFDF
 30231                           postinc2	equ	0xFDE
 30232                           postdec2	equ	0xFDD
 30233                           plusw2	equ	0xFDB
 30234                           fsr2h	equ	0xFDA
 30235                           fsr2l	equ	0xFD9
 30236                           status	equ	0xFD8
 30237                           
 30238 ;; *************** function _USART_mySetLineCodingHandler *****************
 30239 ;; Defined at:
 30240 ;;		line 273 in file "../Includes/Board/USBapp.c"
 30241 ;; Parameters:    Size  Location     Type
 30242 ;;		None
 30243 ;; Auto vars:     Size  Location     Type
 30244 ;;  dwBaud          4   13[COMRAM] unsigned long 
 30245 ;; Return value:  Size  Location     Type
 30246 ;;                  1    wreg      void 
 30247 ;; Registers used:
 30248 ;;		wreg, status,2, status,0, cstack
 30249 ;; Tracked objects:
 30250 ;;		On entry : 0/0
 30251 ;;		On exit  : 0/0
 30252 ;;		Unchanged: 0/0
 30253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30254 ;;      Params:         0       0       0       0       0       0       0       0       0
 30255 ;;      Locals:         4       0       0       0       0       0       0       0       0
 30256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30257 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30258 ;;Total ram usage:        4 bytes
 30259 ;; Hardware stack levels used:    1
 30260 ;; Hardware stack levels required when called:    1
 30261 ;; This function calls:
 30262 ;;		___lldiv
 30263 ;;		i2_EUSART_Initialize
 30264 ;; This function is called by:
 30265 ;;		_USBCheckCDCRequest
 30266 ;;		_USBCtrlTrfRxService
 30267 ;;		_USBCtrlTrfInHandler
 30268 ;; This function uses a non-reentrant model
 30269 ;;
 30270                           
 30271                           	psect	text135
 30272  004E66                     __ptext135:
 30273                           	opt stack 0
 30274  004E66                     _USART_mySetLineCodingHandler:
 30275                           	opt stack 15
 30276                           
 30277                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 30278                           
 30279                           ;incstack = 0
 30280  004E66  C1D5  F1E7         	movff	_cdc_notice,_line_coding
 30281  004E6A  C1D6  F1E8         	movff	_cdc_notice+1,_line_coding+1
 30282  004E6E  C1D7  F1E9         	movff	_cdc_notice+2,_line_coding+2
 30283  004E72  C1D8  F1EA         	movff	_cdc_notice+3,_line_coding+3
 30284                           
 30285                           ;USBapp.c: 278: uint32_t dwBaud;
 30286                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 30287  004E76  0E00               	movlw	0
 30288  004E78  6E01               	movwf	___lldiv@dividend,c
 30289  004E7A  0E1B               	movlw	27
 30290  004E7C  6E02               	movwf	___lldiv@dividend+1,c
 30291  004E7E  0EB7               	movlw	183
 30292  004E80  6E03               	movwf	___lldiv@dividend+2,c
 30293  004E82  0E00               	movlw	0
 30294  004E84  6E04               	movwf	___lldiv@dividend+3,c
 30295  004E86  C1E7  F005         	movff	_line_coding,___lldiv@divisor
 30296  004E8A  C1E8  F006         	movff	_line_coding+1,___lldiv@divisor+1
 30297  004E8E  C1E9  F007         	movff	_line_coding+2,___lldiv@divisor+2
 30298  004E92  C1EA  F008         	movff	_line_coding+3,___lldiv@divisor+3
 30299  004E96  ECCE  F023         	call	___lldiv	;wreg free
 30300  004E9A  0EFF               	movlw	255
 30301  004E9C  2401               	addwf	?___lldiv,w,c
 30302  004E9E  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 30303  004EA0  0EFF               	movlw	255
 30304  004EA2  2002               	addwfc	?___lldiv+1,w,c
 30305  004EA4  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 30306  004EA6  0EFF               	movlw	255
 30307  004EA8  2003               	addwfc	?___lldiv+2,w,c
 30308  004EAA  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 30309  004EAC  0EFF               	movlw	255
 30310  004EAE  2004               	addwfc	?___lldiv+3,w,c
 30311  004EB0  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 30312                           
 30313                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 30314  004EB2  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 30315                           
 30316                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 30317  004EB6  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 30318                           
 30319                           ;USBapp.c: 283: EUSART_Initialize();
 30320  004EBA  EC5D  F029         	call	i2_EUSART_Initialize	;wreg free
 30321  004EBE  0012               	return		;funcret
 30322  004EC0                     __end_of_USART_mySetLineCodingHandler:
 30323                           	opt stack 0
 30324                           tosu	equ	0xFFF
 30325                           tosh	equ	0xFFE
 30326                           tosl	equ	0xFFD
 30327                           pclatu	equ	0xFFB
 30328                           pclath	equ	0xFFA
 30329                           tblptru	equ	0xFF8
 30330                           tblptrh	equ	0xFF7
 30331                           tblptrl	equ	0xFF6
 30332                           tablat	equ	0xFF5
 30333                           prodh	equ	0xFF4
 30334                           prodl	equ	0xFF3
 30335                           intcon	equ	0xFF2
 30336                           intcon2	equ	0xFF1
 30337                           intcon3	equ	0xFF0
 30338                           indf0	equ	0xFEF
 30339                           postinc0	equ	0xFEE
 30340                           fsr0h	equ	0xFEA
 30341                           fsr0l	equ	0xFE9
 30342                           wreg	equ	0xFE8
 30343                           indf1	equ	0xFE7
 30344                           postdec1	equ	0xFE5
 30345                           fsr1h	equ	0xFE2
 30346                           fsr1l	equ	0xFE1
 30347                           indf2	equ	0xFDF
 30348                           postinc2	equ	0xFDE
 30349                           postdec2	equ	0xFDD
 30350                           plusw2	equ	0xFDB
 30351                           fsr2h	equ	0xFDA
 30352                           fsr2l	equ	0xFD9
 30353                           status	equ	0xFD8
 30354                           
 30355 ;; *************** function i2_EUSART_Initialize *****************
 30356 ;; Defined at:
 30357 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 30358 ;; Parameters:    Size  Location     Type
 30359 ;;		None
 30360 ;; Auto vars:     Size  Location     Type
 30361 ;;		None
 30362 ;; Return value:  Size  Location     Type
 30363 ;;                  1    wreg      void 
 30364 ;; Registers used:
 30365 ;;		wreg, status,2
 30366 ;; Tracked objects:
 30367 ;;		On entry : 0/0
 30368 ;;		On exit  : 0/0
 30369 ;;		Unchanged: 0/0
 30370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30371 ;;      Params:         0       0       0       0       0       0       0       0       0
 30372 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30374 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30375 ;;Total ram usage:        0 bytes
 30376 ;; Hardware stack levels used:    1
 30377 ;; This function calls:
 30378 ;;		Nothing
 30379 ;; This function is called by:
 30380 ;;		_USBapp_CdcEmulatorInitialize
 30381 ;;		_USART_mySetLineCodingHandler
 30382 ;; This function uses a non-reentrant model
 30383 ;;
 30384                           
 30385                           	psect	text136
 30386  0052BA                     __ptext136:
 30387                           	opt stack 0
 30388  0052BA                     i2_EUSART_Initialize:
 30389                           	opt stack 17
 30390                           
 30391                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 30392                           
 30393                           ;incstack = 0
 30394  0052BA  9A9D               	bcf	3997,5,c	;volatile
 30395                           
 30396                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 30397  0052BC  989D               	bcf	3997,4,c	;volatile
 30398                           
 30399                           ;eusart.c: 85: BAUDCON = 0x48;
 30400  0052BE  0E48               	movlw	72
 30401  0052C0  6EB8               	movwf	4024,c	;volatile
 30402                           
 30403                           ;eusart.c: 88: RCSTA = 0x90;
 30404  0052C2  0E90               	movlw	144
 30405  0052C4  6EAB               	movwf	4011,c	;volatile
 30406                           
 30407                           ;eusart.c: 91: TXSTA = 0x26;
 30408  0052C6  0E26               	movlw	38
 30409  0052C8  6EAC               	movwf	4012,c	;volatile
 30410                           
 30411                           ;eusart.c: 95: SPBRG = 0xD0;
 30412  0052CA  0ED0               	movlw	208
 30413  0052CC  6EAF               	movwf	4015,c	;volatile
 30414                           
 30415                           ;eusart.c: 100: SPBRGH = 0x00;
 30416  0052CE  0E00               	movlw	0
 30417  0052D0  6EB0               	movwf	4016,c	;volatile
 30418                           
 30419                           ;eusart.c: 103: eusartTxHead = 0;
 30420  0052D2  0E00               	movlw	0
 30421  0052D4  0100               	movlb	0	; () banked
 30422  0052D6  6FE3               	movwf	_eusartTxHead& (0+255),b
 30423                           
 30424                           ;eusart.c: 104: eusartTxTail = 0;
 30425  0052D8  0E00               	movlw	0
 30426  0052DA  6FE2               	movwf	_eusartTxTail& (0+255),b
 30427                           
 30428                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 30429  0052DC  0E40               	movlw	64
 30430  0052DE  6FE1               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 30431                           
 30432                           ;eusart.c: 107: eusartRxHead = 0;
 30433  0052E0  0E00               	movlw	0
 30434  0052E2  6FE0               	movwf	_eusartRxHead& (0+255),b
 30435                           
 30436                           ;eusart.c: 108: eusartRxTail = 0;
 30437  0052E4  0E00               	movlw	0
 30438  0052E6  6FDF               	movwf	_eusartRxTail& (0+255),b
 30439                           
 30440                           ;eusart.c: 109: eusartRxCount = 0;
 30441  0052E8  0E00               	movlw	0
 30442  0052EA  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 30443                           
 30444                           ; BSR set to: 0
 30445                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 30446  0052EC  8A9D               	bsf	3997,5,c	;volatile
 30447                           
 30448                           ; BSR set to: 0
 30449                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 30450  0052EE  88AB               	bsf	4011,4,c	;volatile
 30451                           
 30452                           ; BSR set to: 0
 30453  0052F0  0012               	return		;funcret
 30454  0052F2                     __end_ofi2_EUSART_Initialize:
 30455                           	opt stack 0
 30456                           tosu	equ	0xFFF
 30457                           tosh	equ	0xFFE
 30458                           tosl	equ	0xFFD
 30459                           pclatu	equ	0xFFB
 30460                           pclath	equ	0xFFA
 30461                           tblptru	equ	0xFF8
 30462                           tblptrh	equ	0xFF7
 30463                           tblptrl	equ	0xFF6
 30464                           tablat	equ	0xFF5
 30465                           prodh	equ	0xFF4
 30466                           prodl	equ	0xFF3
 30467                           intcon	equ	0xFF2
 30468                           intcon2	equ	0xFF1
 30469                           intcon3	equ	0xFF0
 30470                           indf0	equ	0xFEF
 30471                           postinc0	equ	0xFEE
 30472                           fsr0h	equ	0xFEA
 30473                           fsr0l	equ	0xFE9
 30474                           wreg	equ	0xFE8
 30475                           indf1	equ	0xFE7
 30476                           postdec1	equ	0xFE5
 30477                           fsr1h	equ	0xFE2
 30478                           fsr1l	equ	0xFE1
 30479                           indf2	equ	0xFDF
 30480                           postinc2	equ	0xFDE
 30481                           postdec2	equ	0xFDD
 30482                           plusw2	equ	0xFDB
 30483                           fsr2h	equ	0xFDA
 30484                           fsr2l	equ	0xFD9
 30485                           status	equ	0xFD8
 30486                           
 30487 ;; *************** function ___lldiv *****************
 30488 ;; Defined at:
 30489 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30490 ;; Parameters:    Size  Location     Type
 30491 ;;  dividend        4    0[COMRAM] unsigned long 
 30492 ;;  divisor         4    4[COMRAM] unsigned long 
 30493 ;; Auto vars:     Size  Location     Type
 30494 ;;  quotient        4    8[COMRAM] unsigned long 
 30495 ;;  counter         1   12[COMRAM] unsigned char 
 30496 ;; Return value:  Size  Location     Type
 30497 ;;                  4    0[COMRAM] unsigned long 
 30498 ;; Registers used:
 30499 ;;		wreg, status,2, status,0
 30500 ;; Tracked objects:
 30501 ;;		On entry : 0/0
 30502 ;;		On exit  : 0/0
 30503 ;;		Unchanged: 0/0
 30504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30505 ;;      Params:         8       0       0       0       0       0       0       0       0
 30506 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30507 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30508 ;;      Totals:        13       0       0       0       0       0       0       0       0
 30509 ;;Total ram usage:       13 bytes
 30510 ;; Hardware stack levels used:    1
 30511 ;; This function calls:
 30512 ;;		Nothing
 30513 ;; This function is called by:
 30514 ;;		_USART_mySetLineCodingHandler
 30515 ;; This function uses a non-reentrant model
 30516 ;;
 30517                           
 30518                           	psect	text137
 30519  00479C                     __ptext137:
 30520                           	opt stack 0
 30521  00479C                     ___lldiv:
 30522                           	opt stack 15
 30523                           
 30524                           ; BSR set to: 0
 30525                           ;incstack = 0
 30526  00479C  0E00               	movlw	0
 30527  00479E  6E09               	movwf	___lldiv@quotient,c
 30528  0047A0  0E00               	movlw	0
 30529  0047A2  6E0A               	movwf	___lldiv@quotient+1,c
 30530  0047A4  0E00               	movlw	0
 30531  0047A6  6E0B               	movwf	___lldiv@quotient+2,c
 30532  0047A8  0E00               	movlw	0
 30533  0047AA  6E0C               	movwf	___lldiv@quotient+3,c
 30534  0047AC  5005               	movf	___lldiv@divisor,w,c
 30535  0047AE  1006               	iorwf	___lldiv@divisor+1,w,c
 30536  0047B0  1007               	iorwf	___lldiv@divisor+2,w,c
 30537  0047B2  1008               	iorwf	___lldiv@divisor+3,w,c
 30538  0047B4  B4D8               	btfsc	status,2,c
 30539  0047B6  D02A               	goto	i2l2593
 30540  0047B8  0E01               	movlw	1
 30541  0047BA  6E0D               	movwf	___lldiv@counter,c
 30542  0047BC  D006               	goto	i2l2588
 30543  0047BE  90D8               	bcf	status,0,c
 30544  0047C0  3605               	rlcf	___lldiv@divisor,f,c
 30545  0047C2  3606               	rlcf	___lldiv@divisor+1,f,c
 30546  0047C4  3607               	rlcf	___lldiv@divisor+2,f,c
 30547  0047C6  3608               	rlcf	___lldiv@divisor+3,f,c
 30548  0047C8  2A0D               	incf	___lldiv@counter,f,c
 30549  0047CA                     i2l2588:
 30550  0047CA  AE08               	btfss	___lldiv@divisor+3,7,c
 30551  0047CC  D7F8               	goto	i2l2589
 30552  0047CE                     i2u580_40:
 30553  0047CE  90D8               	bcf	status,0,c
 30554  0047D0  3609               	rlcf	___lldiv@quotient,f,c
 30555  0047D2  360A               	rlcf	___lldiv@quotient+1,f,c
 30556  0047D4  360B               	rlcf	___lldiv@quotient+2,f,c
 30557  0047D6  360C               	rlcf	___lldiv@quotient+3,f,c
 30558  0047D8  5005               	movf	___lldiv@divisor,w,c
 30559  0047DA  5C01               	subwf	___lldiv@dividend,w,c
 30560  0047DC  5006               	movf	___lldiv@divisor+1,w,c
 30561  0047DE  5802               	subwfb	___lldiv@dividend+1,w,c
 30562  0047E0  5007               	movf	___lldiv@divisor+2,w,c
 30563  0047E2  5803               	subwfb	___lldiv@dividend+2,w,c
 30564  0047E4  5008               	movf	___lldiv@divisor+3,w,c
 30565  0047E6  5804               	subwfb	___lldiv@dividend+3,w,c
 30566  0047E8  A0D8               	btfss	status,0,c
 30567  0047EA  D009               	goto	i2l2592
 30568  0047EC  5005               	movf	___lldiv@divisor,w,c
 30569  0047EE  5E01               	subwf	___lldiv@dividend,f,c
 30570  0047F0  5006               	movf	___lldiv@divisor+1,w,c
 30571  0047F2  5A02               	subwfb	___lldiv@dividend+1,f,c
 30572  0047F4  5007               	movf	___lldiv@divisor+2,w,c
 30573  0047F6  5A03               	subwfb	___lldiv@dividend+2,f,c
 30574  0047F8  5008               	movf	___lldiv@divisor+3,w,c
 30575  0047FA  5A04               	subwfb	___lldiv@dividend+3,f,c
 30576  0047FC  8009               	bsf	___lldiv@quotient,0,c
 30577  0047FE                     i2l2592:
 30578  0047FE  90D8               	bcf	status,0,c
 30579  004800  3208               	rrcf	___lldiv@divisor+3,f,c
 30580  004802  3207               	rrcf	___lldiv@divisor+2,f,c
 30581  004804  3206               	rrcf	___lldiv@divisor+1,f,c
 30582  004806  3205               	rrcf	___lldiv@divisor,f,c
 30583  004808  2E0D               	decfsz	___lldiv@counter,f,c
 30584  00480A  D7E1               	goto	i2u580_40
 30585  00480C                     i2l2593:
 30586  00480C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30587  004810  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30588  004814  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30589  004818  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30590  00481C  0012               	return		;funcret
 30591  00481E                     __end_of___lldiv:
 30592                           	opt stack 0
 30593                           tosu	equ	0xFFF
 30594                           tosh	equ	0xFFE
 30595                           tosl	equ	0xFFD
 30596                           pclatu	equ	0xFFB
 30597                           pclath	equ	0xFFA
 30598                           tblptru	equ	0xFF8
 30599                           tblptrh	equ	0xFF7
 30600                           tblptrl	equ	0xFF6
 30601                           tablat	equ	0xFF5
 30602                           prodh	equ	0xFF4
 30603                           prodl	equ	0xFF3
 30604                           intcon	equ	0xFF2
 30605                           intcon2	equ	0xFF1
 30606                           intcon3	equ	0xFF0
 30607                           indf0	equ	0xFEF
 30608                           postinc0	equ	0xFEE
 30609                           fsr0h	equ	0xFEA
 30610                           fsr0l	equ	0xFE9
 30611                           wreg	equ	0xFE8
 30612                           indf1	equ	0xFE7
 30613                           postdec1	equ	0xFE5
 30614                           fsr1h	equ	0xFE2
 30615                           fsr1l	equ	0xFE1
 30616                           indf2	equ	0xFDF
 30617                           postinc2	equ	0xFDE
 30618                           postdec2	equ	0xFDD
 30619                           plusw2	equ	0xFDB
 30620                           fsr2h	equ	0xFDA
 30621                           fsr2l	equ	0xFD9
 30622                           status	equ	0xFD8
 30623                           
 30624 ;; *************** function _TMRapp_Tick *****************
 30625 ;; Defined at:
 30626 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 30627 ;; Parameters:    Size  Location     Type
 30628 ;;		None
 30629 ;; Auto vars:     Size  Location     Type
 30630 ;;		None
 30631 ;; Return value:  Size  Location     Type
 30632 ;;                  1    wreg      void 
 30633 ;; Registers used:
 30634 ;;		None
 30635 ;; Tracked objects:
 30636 ;;		On entry : 0/0
 30637 ;;		On exit  : 0/0
 30638 ;;		Unchanged: 0/0
 30639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30640 ;;      Params:         0       0       0       0       0       0       0       0       0
 30641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30643 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30644 ;;Total ram usage:        0 bytes
 30645 ;; Hardware stack levels used:    1
 30646 ;; This function calls:
 30647 ;;		Nothing
 30648 ;; This function is called by:
 30649 ;;		_INTERRUPT_InterruptManager
 30650 ;; This function uses a non-reentrant model
 30651 ;;
 30652                           
 30653                           	psect	text138
 30654  00591C                     __ptext138:
 30655                           	opt stack 0
 30656  00591C                     _TMRapp_Tick:
 30657                           	opt stack 20
 30658                           
 30659                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 30660                           
 30661                           ;incstack = 0
 30662  00591C  0100               	movlb	0	; () banked
 30663  00591E  81F8               	bsf	_appTimer& (0+255),0,b
 30664                           
 30665                           ; BSR set to: 0
 30666  005920  0012               	return		;funcret
 30667  005922                     __end_of_TMRapp_Tick:
 30668                           	opt stack 0
 30669                           tosu	equ	0xFFF
 30670                           tosh	equ	0xFFE
 30671                           tosl	equ	0xFFD
 30672                           pclatu	equ	0xFFB
 30673                           pclath	equ	0xFFA
 30674                           tblptru	equ	0xFF8
 30675                           tblptrh	equ	0xFF7
 30676                           tblptrl	equ	0xFF6
 30677                           tablat	equ	0xFF5
 30678                           prodh	equ	0xFF4
 30679                           prodl	equ	0xFF3
 30680                           intcon	equ	0xFF2
 30681                           intcon2	equ	0xFF1
 30682                           intcon3	equ	0xFF0
 30683                           indf0	equ	0xFEF
 30684                           postinc0	equ	0xFEE
 30685                           fsr0h	equ	0xFEA
 30686                           fsr0l	equ	0xFE9
 30687                           wreg	equ	0xFE8
 30688                           indf1	equ	0xFE7
 30689                           postdec1	equ	0xFE5
 30690                           fsr1h	equ	0xFE2
 30691                           fsr1l	equ	0xFE1
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function _TMR3_ISR *****************
 30701 ;; Defined at:
 30702 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;		None
 30705 ;; Auto vars:     Size  Location     Type
 30706 ;;		None
 30707 ;; Return value:  Size  Location     Type
 30708 ;;                  1    wreg      void 
 30709 ;; Registers used:
 30710 ;;		wreg, status,2
 30711 ;; Tracked objects:
 30712 ;;		On entry : 0/0
 30713 ;;		On exit  : 0/0
 30714 ;;		Unchanged: 0/0
 30715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30716 ;;      Params:         0       0       0       0       0       0       0       0       0
 30717 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30719 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30720 ;;Total ram usage:        0 bytes
 30721 ;; Hardware stack levels used:    1
 30722 ;; This function calls:
 30723 ;;		Nothing
 30724 ;; This function is called by:
 30725 ;;		_INTERRUPT_InterruptManager
 30726 ;; This function uses a non-reentrant model
 30727 ;;
 30728                           
 30729                           	psect	text139
 30730  005704                     __ptext139:
 30731                           	opt stack 0
 30732  005704                     _TMR3_ISR:
 30733                           	opt stack 20
 30734                           
 30735                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 30736                           
 30737                           ; BSR set to: 0
 30738                           ;incstack = 0
 30739  005704  92A1               	bcf	4001,1,c	;volatile
 30740                           
 30741                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 30742  005706  A48D               	btfss	3981,2,c	;volatile
 30743  005708  D006               	goto	i2l1675
 30744                           
 30745                           ;tmr3.c: 168: {
 30746                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 30747  00570A  948D               	bcf	3981,2,c	;volatile
 30748                           
 30749                           ;tmr3.c: 170: TMR3H = 0xD5;
 30750  00570C  0ED5               	movlw	213
 30751  00570E  6EB3               	movwf	4019,c	;volatile
 30752                           
 30753                           ;tmr3.c: 171: TMR3L = 0xD0;
 30754  005710  0ED0               	movlw	208
 30755  005712  6EB2               	movwf	4018,c	;volatile
 30756                           
 30757                           ;tmr3.c: 172: } else {
 30758  005714  0012               	return	
 30759  005716                     i2l1675:
 30760                           
 30761                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 30762  005716  848D               	bsf	3981,2,c	;volatile
 30763                           
 30764                           ;tmr3.c: 174: TMR3H = 0xFB;
 30765  005718  0EFB               	movlw	251
 30766  00571A  6EB3               	movwf	4019,c	;volatile
 30767                           
 30768                           ;tmr3.c: 175: TMR3L = 0x50;
 30769  00571C  0E50               	movlw	80
 30770  00571E  6EB2               	movwf	4018,c	;volatile
 30771  005720  0012               	return	
 30772  005722                     __end_of_TMR3_ISR:
 30773                           	opt stack 0
 30774                           tosu	equ	0xFFF
 30775                           tosh	equ	0xFFE
 30776                           tosl	equ	0xFFD
 30777                           pclatu	equ	0xFFB
 30778                           pclath	equ	0xFFA
 30779                           tblptru	equ	0xFF8
 30780                           tblptrh	equ	0xFF7
 30781                           tblptrl	equ	0xFF6
 30782                           tablat	equ	0xFF5
 30783                           prodh	equ	0xFF4
 30784                           prodl	equ	0xFF3
 30785                           intcon	equ	0xFF2
 30786                           intcon2	equ	0xFF1
 30787                           intcon3	equ	0xFF0
 30788                           indf0	equ	0xFEF
 30789                           postinc0	equ	0xFEE
 30790                           fsr0h	equ	0xFEA
 30791                           fsr0l	equ	0xFE9
 30792                           wreg	equ	0xFE8
 30793                           indf1	equ	0xFE7
 30794                           postdec1	equ	0xFE5
 30795                           fsr1h	equ	0xFE2
 30796                           fsr1l	equ	0xFE1
 30797                           indf2	equ	0xFDF
 30798                           postinc2	equ	0xFDE
 30799                           postdec2	equ	0xFDD
 30800                           plusw2	equ	0xFDB
 30801                           fsr2h	equ	0xFDA
 30802                           fsr2l	equ	0xFD9
 30803                           status	equ	0xFD8
 30804                           
 30805 ;; *************** function _TMR1_ISR *****************
 30806 ;; Defined at:
 30807 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;		None
 30810 ;; Auto vars:     Size  Location     Type
 30811 ;;		None
 30812 ;; Return value:  Size  Location     Type
 30813 ;;                  1    wreg      void 
 30814 ;; Registers used:
 30815 ;;		wreg, status,2
 30816 ;; Tracked objects:
 30817 ;;		On entry : 0/0
 30818 ;;		On exit  : 0/0
 30819 ;;		Unchanged: 0/0
 30820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30821 ;;      Params:         0       0       0       0       0       0       0       0       0
 30822 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30823 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30824 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30825 ;;Total ram usage:        0 bytes
 30826 ;; Hardware stack levels used:    1
 30827 ;; This function calls:
 30828 ;;		Nothing
 30829 ;; This function is called by:
 30830 ;;		_INTERRUPT_InterruptManager
 30831 ;; This function uses a non-reentrant model
 30832 ;;
 30833                           
 30834                           	psect	text140
 30835  0058A2                     __ptext140:
 30836                           	opt stack 0
 30837  0058A2                     _TMR1_ISR:
 30838                           	opt stack 20
 30839                           
 30840                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 30841                           
 30842                           ;incstack = 0
 30843  0058A2  909E               	bcf	3998,0,c	;volatile
 30844                           
 30845                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 30846  0058A4  503F               	movf	_timer1ReloadVal+1,w,c	;volatile
 30847  0058A6  6ECF               	movwf	4047,c	;volatile
 30848                           
 30849                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 30850  0058A8  C03E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 30851  0058AC  0012               	return		;funcret
 30852  0058AE                     __end_of_TMR1_ISR:
 30853                           	opt stack 0
 30854                           tosu	equ	0xFFF
 30855                           tosh	equ	0xFFE
 30856                           tosl	equ	0xFFD
 30857                           pclatu	equ	0xFFB
 30858                           pclath	equ	0xFFA
 30859                           tblptru	equ	0xFF8
 30860                           tblptrh	equ	0xFF7
 30861                           tblptrl	equ	0xFF6
 30862                           tablat	equ	0xFF5
 30863                           prodh	equ	0xFF4
 30864                           prodl	equ	0xFF3
 30865                           intcon	equ	0xFF2
 30866                           intcon2	equ	0xFF1
 30867                           intcon3	equ	0xFF0
 30868                           indf0	equ	0xFEF
 30869                           postinc0	equ	0xFEE
 30870                           fsr0h	equ	0xFEA
 30871                           fsr0l	equ	0xFE9
 30872                           wreg	equ	0xFE8
 30873                           indf1	equ	0xFE7
 30874                           postdec1	equ	0xFE5
 30875                           fsr1h	equ	0xFE2
 30876                           fsr1l	equ	0xFE1
 30877                           indf2	equ	0xFDF
 30878                           postinc2	equ	0xFDE
 30879                           postdec2	equ	0xFDD
 30880                           plusw2	equ	0xFDB
 30881                           fsr2h	equ	0xFDA
 30882                           fsr2l	equ	0xFD9
 30883                           status	equ	0xFD8
 30884                           
 30885 ;; *************** function _TMR0_ISR *****************
 30886 ;; Defined at:
 30887 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 30888 ;; Parameters:    Size  Location     Type
 30889 ;;		None
 30890 ;; Auto vars:     Size  Location     Type
 30891 ;;		None
 30892 ;; Return value:  Size  Location     Type
 30893 ;;                  1    wreg      void 
 30894 ;; Registers used:
 30895 ;;		None
 30896 ;; Tracked objects:
 30897 ;;		On entry : 0/0
 30898 ;;		On exit  : 0/0
 30899 ;;		Unchanged: 0/0
 30900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30901 ;;      Params:         0       0       0       0       0       0       0       0       0
 30902 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30904 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30905 ;;Total ram usage:        0 bytes
 30906 ;; Hardware stack levels used:    1
 30907 ;; This function calls:
 30908 ;;		Nothing
 30909 ;; This function is called by:
 30910 ;;		_INTERRUPT_InterruptManager
 30911 ;; This function uses a non-reentrant model
 30912 ;;
 30913                           
 30914                           	psect	text141
 30915  0058AE                     __ptext141:
 30916                           	opt stack 0
 30917  0058AE                     _TMR0_ISR:
 30918                           	opt stack 20
 30919                           
 30920                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 30921                           
 30922                           ;incstack = 0
 30923  0058AE  94F2               	bcf	intcon,2,c	;volatile
 30924                           
 30925                           ;tmr0.c: 135: TMR0 = timer0ReloadVal;
 30926  0058B0  C03A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 30927  0058B4  C03B  FFD7         	movff	_timer0ReloadVal+1,4055	;volatile
 30928  0058B8  0012               	return		;funcret
 30929  0058BA                     __end_of_TMR0_ISR:
 30930                           	opt stack 0
 30931                           tosu	equ	0xFFF
 30932                           tosh	equ	0xFFE
 30933                           tosl	equ	0xFFD
 30934                           pclatu	equ	0xFFB
 30935                           pclath	equ	0xFFA
 30936                           tblptru	equ	0xFF8
 30937                           tblptrh	equ	0xFF7
 30938                           tblptrl	equ	0xFF6
 30939                           tablat	equ	0xFF5
 30940                           prodh	equ	0xFF4
 30941                           prodl	equ	0xFF3
 30942                           intcon	equ	0xFF2
 30943                           intcon2	equ	0xFF1
 30944                           intcon3	equ	0xFF0
 30945                           indf0	equ	0xFEF
 30946                           postinc0	equ	0xFEE
 30947                           fsr0h	equ	0xFEA
 30948                           fsr0l	equ	0xFE9
 30949                           wreg	equ	0xFE8
 30950                           indf1	equ	0xFE7
 30951                           postdec1	equ	0xFE5
 30952                           fsr1h	equ	0xFE2
 30953                           fsr1l	equ	0xFE1
 30954                           indf2	equ	0xFDF
 30955                           postinc2	equ	0xFDE
 30956                           postdec2	equ	0xFDD
 30957                           plusw2	equ	0xFDB
 30958                           fsr2h	equ	0xFDA
 30959                           fsr2l	equ	0xFD9
 30960                           status	equ	0xFD8
 30961                           
 30962 ;; *************** function _InterruptPinRX *****************
 30963 ;; Defined at:
 30964 ;;		line 87 in file "../Includes/Drivers/swUart.c"
 30965 ;; Parameters:    Size  Location     Type
 30966 ;;		None
 30967 ;; Auto vars:     Size  Location     Type
 30968 ;;		None
 30969 ;; Return value:  Size  Location     Type
 30970 ;;                  1    wreg      void 
 30971 ;; Registers used:
 30972 ;;		wreg, status,2, status,0, cstack
 30973 ;; Tracked objects:
 30974 ;;		On entry : 0/0
 30975 ;;		On exit  : 0/0
 30976 ;;		Unchanged: 0/0
 30977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30978 ;;      Params:         0       0       0       0       0       0       0       0       0
 30979 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30981 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30982 ;;Total ram usage:        0 bytes
 30983 ;; Hardware stack levels used:    1
 30984 ;; Hardware stack levels required when called:    1
 30985 ;; This function calls:
 30986 ;;		_clearInterruptPinRX
 30987 ;;		_reloadTimer
 30988 ;; This function is called by:
 30989 ;;		_INTERRUPT_InterruptManager
 30990 ;; This function uses a non-reentrant model
 30991 ;;
 30992                           
 30993                           	psect	text142
 30994  0055BC                     __ptext142:
 30995                           	opt stack 0
 30996  0055BC                     _InterruptPinRX:
 30997                           	opt stack 19
 30998                           
 30999                           ;swUart.c: 89: if(status == SILENT)
 31000                           
 31001                           ;incstack = 0
 31002  0055BC  5052               	movf	_status,w,c
 31003  0055BE  B4D8               	btfsc	status,2,c
 31004                           
 31005                           ;swUart.c: 90: {
 31006                           ;swUart.c: 91: if(PORTBbits.RB7 == 0)
 31007  0055C0  BE81               	btfsc	3969,7,c	;volatile
 31008  0055C2  D00E               	goto	i2l1130
 31009                           
 31010                           ;swUart.c: 92: {
 31011                           ;swUart.c: 95: reloadTimer(104+(104/2));
 31012  0055C4  0E9C               	movlw	156
 31013  0055C6  ECDE  F029         	call	_reloadTimer
 31014                           
 31015                           ;swUart.c: 99: countBitsSilent = 0;
 31016  0055CA  0E00               	movlw	0
 31017  0055CC  6E4F               	movwf	_countBitsSilent,c
 31018                           
 31019                           ;swUart.c: 100: n_bit = 0;
 31020  0055CE  0E00               	movlw	0
 31021  0055D0  6E5B               	movwf	_n_bit,c
 31022                           
 31023                           ;swUart.c: 101: cs = 0;
 31024  0055D2  0E00               	movlw	0
 31025  0055D4  0101               	movlb	1	; () banked
 31026  0055D6  6F5C               	movwf	_cs& (0+255),b
 31027                           
 31028                           ; BSR set to: 1
 31029                           ;swUart.c: 102: rx_data = 0;
 31030  0055D8  0E00               	movlw	0
 31031  0055DA  6E51               	movwf	_rx_data,c
 31032                           
 31033                           ; BSR set to: 1
 31034                           ;swUart.c: 103: status = N_BIT;
 31035  0055DC  0E01               	movlw	1
 31036  0055DE  6E52               	movwf	_status,c
 31037  0055E0                     i2l1130:
 31038                           
 31039                           ;swUart.c: 104: }
 31040                           ;swUart.c: 105: }
 31041                           ;swUart.c: 107: clearInterruptPinRX();
 31042                           
 31043                           ; BSR set to: 1
 31044                           
 31045                           ; BSR set to: 1
 31046  0055E0  EC99  F02C         	call	_clearInterruptPinRX	;wreg free
 31047  0055E4  0012               	return		;funcret
 31048  0055E6                     __end_of_InterruptPinRX:
 31049                           	opt stack 0
 31050                           tosu	equ	0xFFF
 31051                           tosh	equ	0xFFE
 31052                           tosl	equ	0xFFD
 31053                           pclatu	equ	0xFFB
 31054                           pclath	equ	0xFFA
 31055                           tblptru	equ	0xFF8
 31056                           tblptrh	equ	0xFF7
 31057                           tblptrl	equ	0xFF6
 31058                           tablat	equ	0xFF5
 31059                           prodh	equ	0xFF4
 31060                           prodl	equ	0xFF3
 31061                           intcon	equ	0xFF2
 31062                           intcon2	equ	0xFF1
 31063                           intcon3	equ	0xFF0
 31064                           indf0	equ	0xFEF
 31065                           postinc0	equ	0xFEE
 31066                           fsr0h	equ	0xFEA
 31067                           fsr0l	equ	0xFE9
 31068                           wreg	equ	0xFE8
 31069                           indf1	equ	0xFE7
 31070                           postdec1	equ	0xFE5
 31071                           fsr1h	equ	0xFE2
 31072                           fsr1l	equ	0xFE1
 31073                           indf2	equ	0xFDF
 31074                           postinc2	equ	0xFDE
 31075                           postdec2	equ	0xFDD
 31076                           plusw2	equ	0xFDB
 31077                           fsr2h	equ	0xFDA
 31078                           fsr2l	equ	0xFD9
 31079                           status	equ	0xFD8
 31080                           
 31081 ;; *************** function _reloadTimer *****************
 31082 ;; Defined at:
 31083 ;;		line 189 in file "../Includes/Drivers/swUart.c"
 31084 ;; Parameters:    Size  Location     Type
 31085 ;;  setTimerValu    1    wreg     unsigned char 
 31086 ;; Auto vars:     Size  Location     Type
 31087 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 31088 ;; Return value:  Size  Location     Type
 31089 ;;                  1    wreg      void 
 31090 ;; Registers used:
 31091 ;;		wreg, status,2, status,0
 31092 ;; Tracked objects:
 31093 ;;		On entry : 0/0
 31094 ;;		On exit  : 0/0
 31095 ;;		Unchanged: 0/0
 31096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31097 ;;      Params:         0       0       0       0       0       0       0       0       0
 31098 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31100 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31101 ;;Total ram usage:        1 bytes
 31102 ;; Hardware stack levels used:    1
 31103 ;; This function calls:
 31104 ;;		Nothing
 31105 ;; This function is called by:
 31106 ;;		_InterruptPinRX
 31107 ;;		_InterruptTimerUART
 31108 ;; This function uses a non-reentrant model
 31109 ;;
 31110                           
 31111                           	psect	text143
 31112  0053BC                     __ptext143:
 31113                           	opt stack 0
 31114  0053BC                     _reloadTimer:
 31115                           	opt stack 19
 31116                           
 31117                           ;incstack = 0
 31118                           ;reloadTimer@setTimerValue stored from wreg
 31119  0053BC  6E01               	movwf	reloadTimer@setTimerValue,c
 31120                           
 31121                           ;swUart.c: 191: switch(setTimerValue)
 31122  0053BE  D00F               	goto	i2l1154
 31123  0053C0                     
 31124                           ;swUart.c: 196: TMR0 = 110;
 31125  0053C0  0E00               	movlw	0
 31126  0053C2  6ED7               	movwf	4055,c	;volatile
 31127  0053C4  0E6E               	movlw	110
 31128  0053C6  6ED6               	movwf	4054,c	;volatile
 31129                           
 31130                           ;swUart.c: 197: break;
 31131  0053C8  0012               	return	
 31132  0053CA                     
 31133                           ;swUart.c: 201: TMR0 = 34;
 31134  0053CA  0E00               	movlw	0
 31135  0053CC  6ED7               	movwf	4055,c	;volatile
 31136  0053CE  0E22               	movlw	34
 31137  0053D0  6ED6               	movwf	4054,c	;volatile
 31138                           
 31139                           ;swUart.c: 202: break;
 31140  0053D2  0012               	return	
 31141  0053D4                     
 31142                           ;swUart.c: 204: TMR0 = 0;
 31143  0053D4  0E00               	movlw	0
 31144  0053D6  6ED7               	movwf	4055,c	;volatile
 31145  0053D8  0E00               	movlw	0
 31146  0053DA  6ED6               	movwf	4054,c	;volatile
 31147                           
 31148                           ;swUart.c: 206: }
 31149                           
 31150                           ;swUart.c: 205: break;
 31151  0053DC  0012               	return	
 31152  0053DE                     i2l1154:
 31153  0053DE  5001               	movf	reloadTimer@setTimerValue,w,c
 31154                           
 31155                           ; Switch size 1, requested type "space"
 31156                           ; Number of cases is 2, Range of values is 104 to 156
 31157                           ; switch strategies available:
 31158                           ; Name         Instructions Cycles
 31159                           ; simple_byte            7     4 (average)
 31160                           ;	Chosen strategy is simple_byte
 31161  0053E0  0A68               	xorlw	104	; case 104
 31162  0053E2  B4D8               	btfsc	status,2,c
 31163  0053E4  D7ED               	goto	i2l1155
 31164  0053E6  0AF4               	xorlw	244	; case 156
 31165  0053E8  B4D8               	btfsc	status,2,c
 31166  0053EA  D7EF               	goto	i2l1157
 31167  0053EC  D7F3               	goto	i2l1158
 31168  0053EE                     __end_of_reloadTimer:
 31169                           	opt stack 0
 31170                           tosu	equ	0xFFF
 31171                           tosh	equ	0xFFE
 31172                           tosl	equ	0xFFD
 31173                           pclatu	equ	0xFFB
 31174                           pclath	equ	0xFFA
 31175                           tblptru	equ	0xFF8
 31176                           tblptrh	equ	0xFF7
 31177                           tblptrl	equ	0xFF6
 31178                           tablat	equ	0xFF5
 31179                           prodh	equ	0xFF4
 31180                           prodl	equ	0xFF3
 31181                           intcon	equ	0xFF2
 31182                           intcon2	equ	0xFF1
 31183                           intcon3	equ	0xFF0
 31184                           indf0	equ	0xFEF
 31185                           postinc0	equ	0xFEE
 31186                           fsr0h	equ	0xFEA
 31187                           fsr0l	equ	0xFE9
 31188                           wreg	equ	0xFE8
 31189                           indf1	equ	0xFE7
 31190                           postdec1	equ	0xFE5
 31191                           fsr1h	equ	0xFE2
 31192                           fsr1l	equ	0xFE1
 31193                           indf2	equ	0xFDF
 31194                           postinc2	equ	0xFDE
 31195                           postdec2	equ	0xFDD
 31196                           plusw2	equ	0xFDB
 31197                           fsr2h	equ	0xFDA
 31198                           fsr2l	equ	0xFD9
 31199                           status	equ	0xFD8
 31200                           
 31201 ;; *************** function _clearInterruptPinRX *****************
 31202 ;; Defined at:
 31203 ;;		line 209 in file "../Includes/Drivers/swUart.c"
 31204 ;; Parameters:    Size  Location     Type
 31205 ;;		None
 31206 ;; Auto vars:     Size  Location     Type
 31207 ;;		None
 31208 ;; Return value:  Size  Location     Type
 31209 ;;                  1    wreg      void 
 31210 ;; Registers used:
 31211 ;;		None
 31212 ;; Tracked objects:
 31213 ;;		On entry : 0/0
 31214 ;;		On exit  : 0/0
 31215 ;;		Unchanged: 0/0
 31216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31217 ;;      Params:         0       0       0       0       0       0       0       0       0
 31218 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31219 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31220 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31221 ;;Total ram usage:        0 bytes
 31222 ;; Hardware stack levels used:    1
 31223 ;; This function calls:
 31224 ;;		Nothing
 31225 ;; This function is called by:
 31226 ;;		_InterruptPinRX
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text144
 31231  005932                     __ptext144:
 31232                           	opt stack 0
 31233  005932                     _clearInterruptPinRX:
 31234                           	opt stack 19
 31235                           
 31236                           ;swUart.c: 211: INTCONbits.IOCIF = 0;
 31237                           
 31238                           ;incstack = 0
 31239  005932  90F2               	bcf	intcon,0,c	;volatile
 31240  005934  0012               	return		;funcret
 31241  005936                     __end_of_clearInterruptPinRX:
 31242                           	opt stack 0
 31243                           tosu	equ	0xFFF
 31244                           tosh	equ	0xFFE
 31245                           tosl	equ	0xFFD
 31246                           pclatu	equ	0xFFB
 31247                           pclath	equ	0xFFA
 31248                           tblptru	equ	0xFF8
 31249                           tblptrh	equ	0xFF7
 31250                           tblptrl	equ	0xFF6
 31251                           tablat	equ	0xFF5
 31252                           prodh	equ	0xFF4
 31253                           prodl	equ	0xFF3
 31254                           intcon	equ	0xFF2
 31255                           intcon2	equ	0xFF1
 31256                           intcon3	equ	0xFF0
 31257                           indf0	equ	0xFEF
 31258                           postinc0	equ	0xFEE
 31259                           fsr0h	equ	0xFEA
 31260                           fsr0l	equ	0xFE9
 31261                           wreg	equ	0xFE8
 31262                           indf1	equ	0xFE7
 31263                           postdec1	equ	0xFE5
 31264                           fsr1h	equ	0xFE2
 31265                           fsr1l	equ	0xFE1
 31266                           indf2	equ	0xFDF
 31267                           postinc2	equ	0xFDE
 31268                           postdec2	equ	0xFDD
 31269                           plusw2	equ	0xFDB
 31270                           fsr2h	equ	0xFDA
 31271                           fsr2l	equ	0xFD9
 31272                           status	equ	0xFD8
 31273                           
 31274 ;; *************** function _EUSART_Transmit_ISR *****************
 31275 ;; Defined at:
 31276 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 31277 ;; Parameters:    Size  Location     Type
 31278 ;;		None
 31279 ;; Auto vars:     Size  Location     Type
 31280 ;;		None
 31281 ;; Return value:  Size  Location     Type
 31282 ;;                  1    wreg      void 
 31283 ;; Registers used:
 31284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31285 ;; Tracked objects:
 31286 ;;		On entry : 0/0
 31287 ;;		On exit  : 0/0
 31288 ;;		Unchanged: 0/0
 31289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31290 ;;      Params:         0       0       0       0       0       0       0       0       0
 31291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31294 ;;Total ram usage:        0 bytes
 31295 ;; Hardware stack levels used:    1
 31296 ;; This function calls:
 31297 ;;		Nothing
 31298 ;; This function is called by:
 31299 ;;		_INTERRUPT_InterruptManager
 31300 ;; This function uses a non-reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text145
 31304  0054AE                     __ptext145:
 31305                           	opt stack 0
 31306  0054AE                     _EUSART_Transmit_ISR:
 31307                           	opt stack 20
 31308                           
 31309                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 31310                           
 31311                           ;incstack = 0
 31312  0054AE  0E40               	movlw	64
 31313  0054B0  0100               	movlb	0	; () banked
 31314  0054B2  61E1               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 31315  0054B4  D012               	goto	i2l1220
 31316                           
 31317                           ; BSR set to: 0
 31318                           ;eusart.c: 167: {
 31319                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 31320  0054B6  51E2               	movf	_eusartTxTail& (0+255),w,b
 31321  0054B8  0D01               	mullw	1
 31322  0054BA  0E40               	movlw	low _eusartTxBuffer
 31323  0054BC  24F3               	addwf	prodl,w,c
 31324  0054BE  6ED9               	movwf	fsr2l,c
 31325  0054C0  0E02               	movlw	high _eusartTxBuffer
 31326  0054C2  20F4               	addwfc	prodh,w,c
 31327  0054C4  6EDA               	movwf	fsr2h,c
 31328  0054C6  50DF               	movf	indf2,w,c
 31329  0054C8  6EAD               	movwf	4013,c	;volatile
 31330                           
 31331                           ; BSR set to: 0
 31332  0054CA  2BE2               	incf	_eusartTxTail& (0+255),f,b
 31333                           
 31334                           ; BSR set to: 0
 31335                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 31336  0054CC  0E3F               	movlw	63
 31337  0054CE  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 31338  0054D0  D002               	goto	i2l1221
 31339                           
 31340                           ; BSR set to: 0
 31341                           ;eusart.c: 170: {
 31342                           ;eusart.c: 171: eusartTxTail = 0;
 31343  0054D2  0E00               	movlw	0
 31344  0054D4  6FE2               	movwf	_eusartTxTail& (0+255),b
 31345  0054D6                     i2l1221:
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;eusart.c: 172: }
 31349                           ;eusart.c: 173: eusartTxBufferRemaining++;
 31350                           
 31351                           ; BSR set to: 0
 31352  0054D6  2BE1               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 31353                           
 31354                           ;eusart.c: 174: }
 31355  0054D8  0012               	return	
 31356  0054DA                     i2l1220:
 31357                           
 31358                           ; BSR set to: 0
 31359                           ;eusart.c: 175: else
 31360                           ;eusart.c: 176: {
 31361                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 31362  0054DA  989D               	bcf	3997,4,c	;volatile
 31363  0054DC  0012               	return	
 31364  0054DE                     __end_of_EUSART_Transmit_ISR:
 31365                           	opt stack 0
 31366                           tosu	equ	0xFFF
 31367                           tosh	equ	0xFFE
 31368                           tosl	equ	0xFFD
 31369                           pclatu	equ	0xFFB
 31370                           pclath	equ	0xFFA
 31371                           tblptru	equ	0xFF8
 31372                           tblptrh	equ	0xFF7
 31373                           tblptrl	equ	0xFF6
 31374                           tablat	equ	0xFF5
 31375                           prodh	equ	0xFF4
 31376                           prodl	equ	0xFF3
 31377                           intcon	equ	0xFF2
 31378                           intcon2	equ	0xFF1
 31379                           intcon3	equ	0xFF0
 31380                           indf0	equ	0xFEF
 31381                           postinc0	equ	0xFEE
 31382                           fsr0h	equ	0xFEA
 31383                           fsr0l	equ	0xFE9
 31384                           wreg	equ	0xFE8
 31385                           indf1	equ	0xFE7
 31386                           postdec1	equ	0xFE5
 31387                           fsr1h	equ	0xFE2
 31388                           fsr1l	equ	0xFE1
 31389                           indf2	equ	0xFDF
 31390                           postinc2	equ	0xFDE
 31391                           postdec2	equ	0xFDD
 31392                           plusw2	equ	0xFDB
 31393                           fsr2h	equ	0xFDA
 31394                           fsr2l	equ	0xFD9
 31395                           status	equ	0xFD8
 31396                           
 31397 ;; *************** function _EUSART_Receive_ISR *****************
 31398 ;; Defined at:
 31399 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 31400 ;; Parameters:    Size  Location     Type
 31401 ;;		None
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;		None
 31404 ;; Return value:  Size  Location     Type
 31405 ;;                  1    wreg      void 
 31406 ;; Registers used:
 31407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31408 ;; Tracked objects:
 31409 ;;		On entry : 0/0
 31410 ;;		On exit  : 0/0
 31411 ;;		Unchanged: 0/0
 31412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31413 ;;      Params:         0       0       0       0       0       0       0       0       0
 31414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31416 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31417 ;;Total ram usage:        0 bytes
 31418 ;; Hardware stack levels used:    1
 31419 ;; This function calls:
 31420 ;;		Nothing
 31421 ;; This function is called by:
 31422 ;;		_INTERRUPT_InterruptManager
 31423 ;; This function uses a non-reentrant model
 31424 ;;
 31425                           
 31426                           	psect	text146
 31427  0054DE                     __ptext146:
 31428                           	opt stack 0
 31429  0054DE                     _EUSART_Receive_ISR:
 31430                           	opt stack 20
 31431                           
 31432                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;incstack = 0
 31436  0054DE  A2AB               	btfss	4011,1,c	;volatile
 31437  0054E0  D003               	goto	i2l1226
 31438                           
 31439                           ;eusart.c: 184: {
 31440                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 31441  0054E2  98AB               	bcf	4011,4,c	;volatile
 31442                           
 31443                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 31444  0054E4  88AB               	bsf	4011,4,c	;volatile
 31445                           
 31446                           ;eusart.c: 189: }
 31447  0054E6  0012               	return	
 31448  0054E8                     i2l1226:
 31449                           
 31450                           ;eusart.c: 190: else
 31451                           ;eusart.c: 191: {
 31452                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 31453  0054E8  0100               	movlb	0	; () banked
 31454  0054EA  51E0               	movf	_eusartRxHead& (0+255),w,b
 31455  0054EC  0D01               	mullw	1
 31456  0054EE  0E00               	movlw	low _eusartRxBuffer
 31457  0054F0  24F3               	addwf	prodl,w,c
 31458  0054F2  6ED9               	movwf	fsr2l,c
 31459  0054F4  0E02               	movlw	high _eusartRxBuffer
 31460  0054F6  20F4               	addwfc	prodh,w,c
 31461  0054F8  6EDA               	movwf	fsr2h,c
 31462  0054FA  CFAE FFDF          	movff	4014,indf2	;volatile
 31463                           
 31464                           ; BSR set to: 0
 31465  0054FE  2BE0               	incf	_eusartRxHead& (0+255),f,b
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 31469  005500  0E3F               	movlw	63
 31470  005502  65E0               	cpfsgt	_eusartRxHead& (0+255),b
 31471  005504  D002               	goto	i2l1228
 31472                           
 31473                           ; BSR set to: 0
 31474                           ;eusart.c: 195: {
 31475                           ;eusart.c: 196: eusartRxHead = 0;
 31476  005506  0E00               	movlw	0
 31477  005508  6FE0               	movwf	_eusartRxHead& (0+255),b
 31478  00550A                     i2l1228:
 31479                           
 31480                           ; BSR set to: 0
 31481                           ;eusart.c: 197: }
 31482                           ;eusart.c: 198: eusartRxCount++;
 31483                           
 31484                           ; BSR set to: 0
 31485  00550A  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 31486  00550C  0012               	return	
 31487  00550E                     __end_of_EUSART_Receive_ISR:
 31488                           	opt stack 0
 31489                           tosu	equ	0xFFF
 31490                           tosh	equ	0xFFE
 31491                           tosl	equ	0xFFD
 31492                           pclatu	equ	0xFFB
 31493                           pclath	equ	0xFFA
 31494                           tblptru	equ	0xFF8
 31495                           tblptrh	equ	0xFF7
 31496                           tblptrl	equ	0xFF6
 31497                           tablat	equ	0xFF5
 31498                           prodh	equ	0xFF4
 31499                           prodl	equ	0xFF3
 31500                           intcon	equ	0xFF2
 31501                           intcon2	equ	0xFF1
 31502                           intcon3	equ	0xFF0
 31503                           indf0	equ	0xFEF
 31504                           postinc0	equ	0xFEE
 31505                           fsr0h	equ	0xFEA
 31506                           fsr0l	equ	0xFE9
 31507                           wreg	equ	0xFE8
 31508                           indf1	equ	0xFE7
 31509                           postdec1	equ	0xFE5
 31510                           fsr1h	equ	0xFE2
 31511                           fsr1l	equ	0xFE1
 31512                           indf2	equ	0xFDF
 31513                           postinc2	equ	0xFDE
 31514                           postdec2	equ	0xFDD
 31515                           plusw2	equ	0xFDB
 31516                           fsr2h	equ	0xFDA
 31517                           fsr2l	equ	0xFD9
 31518                           status	equ	0xFD8
 31519                           
 31520 ;; *************** function _CMP1_ISR *****************
 31521 ;; Defined at:
 31522 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 31523 ;; Parameters:    Size  Location     Type
 31524 ;;		None
 31525 ;; Auto vars:     Size  Location     Type
 31526 ;;		None
 31527 ;; Return value:  Size  Location     Type
 31528 ;;                  1    wreg      void 
 31529 ;; Registers used:
 31530 ;;		None
 31531 ;; Tracked objects:
 31532 ;;		On entry : 0/0
 31533 ;;		On exit  : 0/0
 31534 ;;		Unchanged: 0/0
 31535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31536 ;;      Params:         0       0       0       0       0       0       0       0       0
 31537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31539 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31540 ;;Total ram usage:        0 bytes
 31541 ;; Hardware stack levels used:    1
 31542 ;; This function calls:
 31543 ;;		Nothing
 31544 ;; This function is called by:
 31545 ;;		_INTERRUPT_InterruptManager
 31546 ;; This function uses a non-reentrant model
 31547 ;;
 31548                           
 31549                           	psect	text147
 31550  005936                     __ptext147:
 31551                           	opt stack 0
 31552  005936                     _CMP1_ISR:
 31553                           	opt stack 20
 31554                           
 31555                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 31556                           
 31557                           ;incstack = 0
 31558  005936  9CA1               	bcf	4001,6,c	;volatile
 31559  005938  0012               	return		;funcret
 31560  00593A                     __end_of_CMP1_ISR:
 31561                           	opt stack 0
 31562                           tosu	equ	0xFFF
 31563                           tosh	equ	0xFFE
 31564                           tosl	equ	0xFFD
 31565                           pclatu	equ	0xFFB
 31566                           pclath	equ	0xFFA
 31567                           tblptru	equ	0xFF8
 31568                           tblptrh	equ	0xFF7
 31569                           tblptrl	equ	0xFF6
 31570                           tablat	equ	0xFF5
 31571                           prodh	equ	0xFF4
 31572                           prodl	equ	0xFF3
 31573                           intcon	equ	0xFF2
 31574                           intcon2	equ	0xFF1
 31575                           intcon3	equ	0xFF0
 31576                           indf0	equ	0xFEF
 31577                           postinc0	equ	0xFEE
 31578                           fsr0h	equ	0xFEA
 31579                           fsr0l	equ	0xFE9
 31580                           wreg	equ	0xFE8
 31581                           indf1	equ	0xFE7
 31582                           postdec1	equ	0xFE5
 31583                           fsr1h	equ	0xFE2
 31584                           fsr1l	equ	0xFE1
 31585                           indf2	equ	0xFDF
 31586                           postinc2	equ	0xFDE
 31587                           postdec2	equ	0xFDD
 31588                           plusw2	equ	0xFDB
 31589                           fsr2h	equ	0xFDA
 31590                           fsr2l	equ	0xFD9
 31591                           status	equ	0xFD8
 31592                           tosu	equ	0xFFF
 31593                           tosh	equ	0xFFE
 31594                           tosl	equ	0xFFD
 31595                           pclatu	equ	0xFFB
 31596                           pclath	equ	0xFFA
 31597                           tblptru	equ	0xFF8
 31598                           tblptrh	equ	0xFF7
 31599                           tblptrl	equ	0xFF6
 31600                           tablat	equ	0xFF5
 31601                           prodh	equ	0xFF4
 31602                           prodl	equ	0xFF3
 31603                           intcon	equ	0xFF2
 31604                           intcon2	equ	0xFF1
 31605                           intcon3	equ	0xFF0
 31606                           indf0	equ	0xFEF
 31607                           postinc0	equ	0xFEE
 31608                           fsr0h	equ	0xFEA
 31609                           fsr0l	equ	0xFE9
 31610                           wreg	equ	0xFE8
 31611                           indf1	equ	0xFE7
 31612                           postdec1	equ	0xFE5
 31613                           fsr1h	equ	0xFE2
 31614                           fsr1l	equ	0xFE1
 31615                           indf2	equ	0xFDF
 31616                           postinc2	equ	0xFDE
 31617                           postdec2	equ	0xFDD
 31618                           plusw2	equ	0xFDB
 31619                           fsr2h	equ	0xFDA
 31620                           fsr2l	equ	0xFD9
 31621                           status	equ	0xFD8
 31622                           
 31623                           	psect	text148
 31624  000000                     __ptext148:
 31625                           	opt stack 0
 31626                           tosu	equ	0xFFF
 31627                           tosh	equ	0xFFE
 31628                           tosl	equ	0xFFD
 31629                           pclatu	equ	0xFFB
 31630                           pclath	equ	0xFFA
 31631                           tblptru	equ	0xFF8
 31632                           tblptrh	equ	0xFF7
 31633                           tblptrl	equ	0xFF6
 31634                           tablat	equ	0xFF5
 31635                           prodh	equ	0xFF4
 31636                           prodl	equ	0xFF3
 31637                           intcon	equ	0xFF2
 31638                           intcon2	equ	0xFF1
 31639                           intcon3	equ	0xFF0
 31640                           indf0	equ	0xFEF
 31641                           postinc0	equ	0xFEE
 31642                           fsr0h	equ	0xFEA
 31643                           fsr0l	equ	0xFE9
 31644                           wreg	equ	0xFE8
 31645                           indf1	equ	0xFE7
 31646                           postdec1	equ	0xFE5
 31647                           fsr1h	equ	0xFE2
 31648                           fsr1l	equ	0xFE1
 31649                           indf2	equ	0xFDF
 31650                           postinc2	equ	0xFDE
 31651                           postdec2	equ	0xFDD
 31652                           plusw2	equ	0xFDB
 31653                           fsr2h	equ	0xFDA
 31654                           fsr2l	equ	0xFD9
 31655                           status	equ	0xFD8
 31656                           
 31657                           	psect	rparam
 31658  0000                     tosu	equ	0xFFF
 31659                           tosh	equ	0xFFE
 31660                           tosl	equ	0xFFD
 31661                           pclatu	equ	0xFFB
 31662                           pclath	equ	0xFFA
 31663                           tblptru	equ	0xFF8
 31664                           tblptrh	equ	0xFF7
 31665                           tblptrl	equ	0xFF6
 31666                           tablat	equ	0xFF5
 31667                           prodh	equ	0xFF4
 31668                           prodl	equ	0xFF3
 31669                           intcon	equ	0xFF2
 31670                           intcon2	equ	0xFF1
 31671                           intcon3	equ	0xFF0
 31672                           indf0	equ	0xFEF
 31673                           postinc0	equ	0xFEE
 31674                           fsr0h	equ	0xFEA
 31675                           fsr0l	equ	0xFE9
 31676                           wreg	equ	0xFE8
 31677                           indf1	equ	0xFE7
 31678                           postdec1	equ	0xFE5
 31679                           fsr1h	equ	0xFE2
 31680                           fsr1l	equ	0xFE1
 31681                           indf2	equ	0xFDF
 31682                           postinc2	equ	0xFDE
 31683                           postdec2	equ	0xFDD
 31684                           plusw2	equ	0xFDB
 31685                           fsr2h	equ	0xFDA
 31686                           fsr2l	equ	0xFD9
 31687                           status	equ	0xFD8
 31688                           
 31689                           	psect	temp
 31690  00005E                     btemp:
 31691                           	opt stack 0
 31692  00005E                     	ds	1
 31693  0000                     int$flags	set	btemp
 31694  0000                     wtemp6	set	btemp+1
 31695                           tosu	equ	0xFFF
 31696                           tosh	equ	0xFFE
 31697                           tosl	equ	0xFFD
 31698                           pclatu	equ	0xFFB
 31699                           pclath	equ	0xFFA
 31700                           tblptru	equ	0xFF8
 31701                           tblptrh	equ	0xFF7
 31702                           tblptrl	equ	0xFF6
 31703                           tablat	equ	0xFF5
 31704                           prodh	equ	0xFF4
 31705                           prodl	equ	0xFF3
 31706                           intcon	equ	0xFF2
 31707                           intcon2	equ	0xFF1
 31708                           intcon3	equ	0xFF0
 31709                           indf0	equ	0xFEF
 31710                           postinc0	equ	0xFEE
 31711                           fsr0h	equ	0xFEA
 31712                           fsr0l	equ	0xFE9
 31713                           wreg	equ	0xFE8
 31714                           indf1	equ	0xFE7
 31715                           postdec1	equ	0xFE5
 31716                           fsr1h	equ	0xFE2
 31717                           fsr1l	equ	0xFE1
 31718                           indf2	equ	0xFDF
 31719                           postinc2	equ	0xFDE
 31720                           postdec2	equ	0xFDD
 31721                           plusw2	equ	0xFDB
 31722                           fsr2h	equ	0xFDA
 31723                           fsr2l	equ	0xFD9
 31724                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         672
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      93
    BANK0           160     92     160
    BANK1           256      0     254
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6273_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6273_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6273_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6273_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4636$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4626$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4626$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  727888
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  284038
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   41590
                                             23 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   41498
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41165
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44168
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  112543
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  344017
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  182477
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44036
                                             23 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44144
                                             23 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51047
                                             23 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   45447
                                             23 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   40407
                                             18 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         20    20      0   30086
                                             31 COMRAM    20    20      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      0     0      0      22
                _clearInterruptPinRX
                        _reloadTimer
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _clearInterruptPinRX
     _reloadTimer
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     33      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     33B      14        0.0%
DATA                 0      0     33B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 11:13:02 2018

           __size_of_moteApp_lightStringSize 0006                                   _USB_SD_Ptr 75EF  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                        ??_moteApp_testSensors 00AC  
                                         l60 2DD6                                           l65 2DD8  
                                         l57 2D74                                           l66 2DEA  
                          ??_CMP1_Initialize 0060                                           l67 2E00  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 4C24  
                                         _cs 015C               moteJoiningProcess@selectButton 0078  
                              _USBDeviceInit 296E                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 57A4  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 0066  
                            _timer0ReloadVal 003A                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
             __end_of_moteApp_setLightString 4BBC         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l111 534A  
                                        l112 5332                                          l130 395C  
                                        l123 3904                                          l127 3974  
                                        l400 10CA                                          l128 391C  
                                        l129 393C                                          l410 11F4  
                                        l402 113E                                          l420 12E2  
                                        l412 1244                                          l404 115C  
                                        l340 4666                                          l500 0728  
                                        l405 1194                                          l341 4676  
                __end_of_USBStdGetDscHandler 2CFA                                          l422 1334  
                                        l414 1254                                          l502 0766  
                                        l431 142E                                          l343 468C  
                                        l424 1360                                          l416 12AA  
                                        l408 11CC                                          l600 23D0  
                                        l512 08FC                                          l504 07A2  
                                        l441 14B0                                          l601 23E0  
                                        l337 4644                                          l434 1450  
                                        l418 12BA                                          l530 0AE2  
                                        l522 0A36                                          l370 2172  
                                        l443 14BA                                          l435 145E  
                                        l427 1376                                          l355 5644  
                                        l523 0B72                                          l531 0AFA  
                                        l363 2120                                          l348 537C  
                                        l524 0B2A                                          l532 0B12  
                                        l516 0956                                          l508 0810  
                                        l460 0276                                          l605 56D6  
                                        l349 5364                                          l437 1492  
                                        l429 13CE                                          l621 4C62  
                                        l701 4D5E                                          l541 0C10  
                                        l525 0A9A                                          l517 09C8  
                                        l509 0864                                          l381 2308  
                                        l373 2202                                          l365 2126  
                                        l390 14FC                                          l550 0CC2  
                                        l518 0994                                          l462 0282  
                                        l382 2222                                          l366 213C  
                                        l439 14A6                                          l391 1030  
                                        l703 4D90                                          l711 48E4  
                                        l543 0D0A                                          l551 0CDA  
                                        l535 0B98                                          l527 0B54  
                                        l519 09AA                                          l383 2272  
                                        l367 2154                                          l704 4DA6  
                                        l720 4934                                          l560 0D6C  
                                        l552 0CF2                                          l544 0C64  
                                        l528 0AB2                                          l480 0400  
                                        l472 02EA                                          l464 02E0  
                                        l376 22EC                                          l721 4946  
                                        l561 0D88                                          l537 0BB4  
                                        l529 0ACA                                          l385 22D8  
                                        l377 2220                                          l369 2164  
                                        l626 4C86                                          l642 3B2A  
                                        l466 0FCE                                          l562 0DA4  
                                        l554 0D4C                                          l546 0D3A  
                                        l490 07B4                                          l482 040C  
                                        l395 1544                                          l731 512C  
                                        l643 3B14                                          l563 0DC0  
                                        l547 0C7A                                          l491 05D2  
                                        l483 04D2                                          l467 02E8  
                                        l459 02CC                                          l636 5436  
                                        l396 1032                                          l708 48B4  
                                        l732 513E                                          l724 4968  
                                        l572 0F2C                                          l580 0EFC  
                                        l556 0DF4                                          l564 0DDC  
                                        l548 0C92                                          l492 06E8  
                                        l484 04F0                                          l476 0346  
                                        l637 5420                                          l397 1042  
                                        l725 497A                                          l661 5538  
                                        l645 3B4A                                          l581 0F14  
                                        l573 0E86                                          l565 0E1E  
                                        l557 0D52                                          l549 0CAA  
                                        l485 0510                                          l477 039A  
                                        l398 104C                                          l750 4B9C  
                                        l582 0F5C                                          l566 0E60  
                                        l494 0664                                          l591 23F0  
                                        l647 3BC2                                          l495 0672  
                                        l592 2360                                          l672 36EC  
                                        l648 3B80                                          l584 0F74  
                                        l576 0E9C                                          l568 0E80  
                                        l593 242A                                          l585 0F7A  
                                        l577 0EB4                                          l569 0E7C  
                                        l497 06B0                                          l489 05A8  
                                        l850 3F4C                                          l594 2370  
                                        l666 364C                                          l690 445E  
                                        l738 4F82                                          l658 5526  
                                        l578 0ECC                                          l498 06B4  
                                        l851 3EBA                                          l595 2380  
                                        l739 4F94                                          l579 0EE4  
                                        l852 3F06                                          l596 2390  
                                        l684 43F2                                          _BDT 000400  
                                        l941 4AB4                                          l845 3F34  
                                        l853 3F0E                                          l597 23A0  
                                        l669 36DE                                          l942 4AB0  
                                        l846 3EB8                                          l598 23B0  
                                        l686 4416                                          l855 3F14  
                                        l599 23C0                                          l679 318E  
                                        _CKE 007E3E                                          l880 34BC  
                                        l688 443A                                          l882 34EA  
                                        l946 4ADC                                          l938 4ABA  
                                        l947 4ADE                                          l884 353A  
                                        l885 3562                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 1024  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 003E                                          _log 02E0  
                                 _USBSuspend 5592                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4476                 __end_of_moteApp_clearCommand 5888  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 5822  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 283C  
                             _USBDeviceState 00EC                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0077                                 ___fltol@exp1 0069  
                                       l1040 4742                                         l1032 4182  
                                       l1033 41FC                                         l1204 5252  
                                       l1205 5250                                         l1045 4AF4  
                                       l1214 51A8                                         l1207 527A  
                                       l1215 51CC                                         l1055 566E  
                                       l2200 2604                                         l1216 51CA  
                                       l1232 509E                                         l2210 2704  
                                       l2202 25EE                                         l1066 5628  
                                       l2211 265A                                         l1324 57C6  
                                       l2212 265E                                         l2204 25F8  
                                       l2222 26E2                                         l2214 26A0  
                                       l2206 2610                                         l2310 405E  
                                       l2223 26E6                                         l2215 267E  
                                       l2207 261A                                         l2208 2648  
                                       l2313 4092                                         l2218 26CA  
                                       l2170 3DFA                                         l2314 40A0  
                                       l2306 4038                                         l2219 26A8  
                                       l2315 40B6                                         l2307 404C  
                            _timer3ReloadVal 003C                                         l2172 3D74  
                                       l2309 406A                                         l2421 4A3E  
                                       l2174 3D7C                                         l2182 56A0  
                                       l1542 51F8                                         l2422 4A36  
                                       l2175 3DA8                                         l2176 3DD4  
                                       l2177 3DAE                                         l2425 4A56  
                                       l2426 4A60                                         l2418 4A1C  
                                       l2427 4A6E                                         l2419 4A28  
                                       l2700 1A36                   USBConfigureEndpoint@handle 0007  
                                       l2701 1A3A                                         l2470 35E4  
                                       l2711 1B1E                                         l2704 1AD4  
                                       l2721 1B8E                                         l2713 1B28  
                                       l1850 2A16                                         l2706 1AE4  
                                       l1907 531A                                         l2651 5064  
                                       l2475 3618                                         l2467 3588  
                                       l2571 5186                                         l1908 5318  
                                       l2652 505C                                         l2740 1C48  
                                       l2476 360C                                         l2572 518E  
                                       l1845 29B4                                         l2805 45F6  
                                       l2725 1BB4                                         l2709 1B08  
                                       l2469 35F4                                         l2821 2530  
                                       l2806 458C                                         l2726 1BBC  
                                       l2718 1B48                                         l2742 1C92  
                                       l2478 3634                                         l2830 25B2  
                                       l2822 2518                                         l2814 24B2  
                                       l2671 546A                                         l1847 29EE  
                                       l2655 507C                                         l2807 45EE  
                                       l2727 1BBE                                         l2735 1C0C  
                                       l2815 24C2                                         l2567 5170  
                                       l2672 5458                                         l1848 29DC  
                                       l2656 5086                                         l2752 1D9C  
                                       l2744 1CBA                                         l2736 1C08  
                                       l2824 2562                                         l2816 24E0  
                                       l2568 516A                                         l2761 1E18  
                                       l2753 1D7E                                         l2745 1D68  
                                       l2825 2556                                         l2665 5038  
                                       l2690 19EE                                         l2762 1E3C  
                                       l2746 1D18                                         l2770 1578  
                                       l2818 24F2                                         l2666 5016  
                                       l2691 19CC                                         l2683 1916  
                                       l2763 1E66                                         l2747 1D40  
                                       l2739 1C4C                                         l2771 158C  
                                       l2819 24E6                                         l2692 19DA  
                                       l2684 1912                                         l2764 1E72  
                                       l2780 17AA                                         l1885 3BEA  
                                       l2693 19DE                                         l2765 1E74  
                                       l2749 1D66                                         l2781 178C  
                                       l2773 15BC                                         l2829 2580  
                                       l2686 1972                                         l2678 18CE  
                                       l2790 1844                                         l2774 15B8  
                                       l1887 3C14                                         l2687 1936  
                                       l2679 18CA                                         l2759 1DD4  
                                       l2775 15CC                                         l2696 1A4C  
                                       l2792 1868                                         l2776 15EA  
                                       l1889 3C70                                         l2697 1A12  
                                       l2793 1886                                         l2769 157C  
                                       l2787 17E2                                         l2797 4FC4  
                                       l2789 1826                                         l2798 4FBA  
                                       l8046 5016                                         l8400 5096  
                                       l7760 473A                                         l7770 5196  
                                       l9418 458C                                         l9522 4D56  
                                       l9460 440E                                         l9374 48AC  
                                       l8478 4B94                                         l9472 4432  
                                       l9448 43EA                                         l9484 4456  
                                       l9572 3B42                                         l7896 5666  
                                       STR_1 7D1E                                         l8984 1E66  
                                       STR_2 7D00                                         STR_3 7D0F  
                                       STR_4 7F3D                                         STR_5 7D8A  
                                       STR_6 7D97                                         STR_7 7CC3  
                                       STR_8 7E70                                         STR_9 7F46  
                            _lightStringSize 00ED                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0020                                         u7010 1B9A  
                                       _PEIE 007F96                                         u6400 50B6  
                                       u8010 4950                                         u7220 1DD0  
                                       u6350 4B14                                         u8030 4984  
                                       u9000 14C2                                         u6370 4B42  
                                       u7250 1E26                                         u7410 17DE  
                                       u7260 1E4A                                         u7500 4A42  
                                       u8060 4DAA                                         u6357 4B0A  
                                       u7350 15D8                                         u6470 4BB8  
                      ??_USBCtrlTrfTxService 0001                                         u8240 25E2  
                                       u6800 19F6                                         u7440 1834  
                                       u7360 174E                                         u8160 36BC  
                                       u6377 4B38                                         u8330 26D0  
                                       u7450 1852                                         u7610 5174  
                                       u8090 3B66                                         u8180 3D68  
                                       u7540 35A6                                         u7365 1744  
                                       u6750 19A2                                         _UCFG 000F62  
                                       u8248 25E6                                         u6760 19B2  
                                       u7800 5148                                         u9240 06B8  
                                       u9160 051E                                         u9080 02F8  
                                       u7545 359C                                         u8530 5068  
                                       u6930 1B2C                                         u6770 19B4  
                                       u9410 0BC2                                         u9330 0908  
                                       u8188 3D6C                                         u7580 361E  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       u7910 4FF8                                         u8720 4A86  
                                       u6960 1B44                                         u7840 4912  
                                       u8560 38EC                                         u7745 5208  
                                       u8490 406E                                         u7746 520A  
                                       u7690 256C                                         u7930 440A  
                                       u9290 07C2                                         _UEIE 000F66  
                                       u7780 4F9E                                         u7950 442E  
                                       u7880 45BA                                         u7970 4452  
                                       u9820 29D0                                         u9910 3F58  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u9850 2A72                                         _TMR0 000FD6  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 0034       USBStdFeatureReqHandler@current_ep_data 0019  
                                       _pDst 0154                                         _main 2CFA  
                   ??i2_USBTransferOnePacket 0005                              _TMR0_StartTimer 592E  
          __end_of_moteApp_add8bToDataBuffer 3EB6                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 52F2  
                                       btemp 005E                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 58FA  
                                       start 011E                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 5896  
                            _TMR3_Initialize 56A4                                  _storedLight 01F3  
                __end_of_USBapp_exitCDCState 58CE                             __end_of_CMP1_ISR 593A  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 32C4  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 0F02  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 591C                         ??_moteJoiningProcess 0079  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 591C  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 5704                       _moteApp_getLightString 5896  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 5878                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 57D0                                        l10302 1330  
                                      l10224 113A                                        l10324 13CA  
                                      l10270 1250                                        l11048 5458  
                                      l11224 29AC                                        l10352 148E  
                                      l10336 142A                                        l11252 2A0E  
                                      l10286 12B6                                        l10606 066A  
                              ___fltol@sign1 0068                              __end_of___almod 40C8  
                            __end_of___fladd 1BDA                                        ?_main 0001  
                            __end_of___fldiv 1E90                              __end_of___lbdiv 5192  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 4A78                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 189C                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3646                              _TMR1_StartTimer 592A  
                                      u10000 218E                              __end_of___lldiv 481E  
                                      u11007 2354                                        u11017 2432  
                                      u11027 2444                                        u11037 2456  
                                      u11047 14CA                                        u11057 14DC  
                                      u11067 14EE            __size_of_MOTEapp_setResponseReady 0008  
                                      u11077 536C                                        _T1CON 000FCD  
                     __end_of_USBDeviceTasks 296E                                        _T2CON 000FBA  
                                      u10907 31B6                                        u10827 396C  
                                      u10917 31C8                                        u10837 3106  
                                      u10927 533A                                        u10847 3118  
                    __end_of_sendDataCommand 3BD0                                        _T3CON 000FB1  
                                      u10937 07AA                                        u10857 312A  
                                      u10947 482E                                        u10867 3150  
                                      u10957 4842                                        u10877 3162  
                                      u10967 4856                                        u10887 3174  
                                      u10977 5650                                        u10897 31A4  
                  ?_USBCtrlEPServiceComplete 0001                                        u10987 2330  
                                      u10997 2342                              __end_of___lwmod 5090  
                  ?_MOTEapp_setResponseReady 0001                          oled_putUint8@number 0079  
                                      i2l923 4DB0                                        i2l917 4DBC  
                                      i2l925 4DB6                                        i2l870 4EF2  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00C4                              __end_of_delayms 5358  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 42B4                            oled_putChar@index 006B  
                           __end_of_TMR0_ISR 58BA                             __end_of_TMR1_ISR 58AE  
                                      _sd000 79B4                                        _sd001 796E  
            service_pushbutton@Release_Timer 00E4                                        _sd002 793A  
                              __CFG_WRTB$OFF 000000                             __end_of_TMR3_ISR 5722  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 57D0                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _n_bit 005B  
                                      _light 0158                          _clearInterruptPinRX 5932  
                                      _stops 015D                               __pbitbssCOMRAM 02E0  
                    __end_of_TMR1_Initialize 53BC                                 _runningState 00F3  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 4CF0  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 005F  
                            _TMR2_StartTimer 5926                              __end_of_strncmp 4612  
                            ___lbdiv@divisor 0060                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                             __end_ofi2_memset 5568  
                            ___lbdiv@counter 0062                                 _m10SecTicker 0156  
               __end_of_moteApp_getTempValue 5154                              putUSBUSART@data 0060  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 42B4                        TMR2_ReadTimer@readVal 0060  
              __size_of_TMRapp_ClearBitFlags 0008                                   _InitSwUart 573E  
                               __end_of_main 2E12                        _control_signal_bitmap 015A  
                       ?_clearInterruptPinRX 0001                __size_of_MOTEapp_handlerState 000A  
                     _MOTEapp_TimerBasedTask 56C6                               ??_EUSART_Write 0060  
                    __end_of_TMR2_Initialize 5836                                 ?_sendCommand 0061  
                ?_INTERRUPT_InterruptManager 0001                    __size_of_USBCtrlEPService 00CE  
                                     ??_main 00BC                                 ?_moduleSleep 0001  
                               ?_moteHandler 0001             __size_of_moteApp_addToDataBuffer 005E  
                            _TMR3_StartTimer 5922                                __activetblptr 000002  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 52BA  
                  sendDataCommand@dataLength 0065                                  ?_USBSuspend 0001  
                                 _NextUSBOut 00E8                                 ?_reloadTimer 0001  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 00DC             moteApp_convertSensorValue@string 0072  
                    __end_of_TMR0_StartTimer 5932                      __end_of_USBDeviceAttach 5326  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 00D6  
                          _getsUSBUSART$6637 006B                                       _ACTCON 000FB5  
                                     STR_100 7B87                                       STR_101 7C83  
                                     STR_110 7C83                                       STR_102 7C63  
                                     STR_103 7C53                                       STR_111 7C20  
                                     STR_104 7C83                                       STR_112 7CD3  
                                     STR_120 7B65                                       STR_121 7F87  
                                     STR_113 7CE2                                       STR_105 7C42  
                                     STR_130 7CE2                                       STR_122 7FC2  
                                     STR_106 7ECA                                       STR_114 7C73  
                                     _ADRESH 000FC4                                       STR_131 7CD3  
                                     STR_115 7C63                                       STR_107 7E51  
                                     STR_123 7DCB                                       STR_132 7C63  
                                     STR_108 7B10                                       STR_124 7FE0  
                                     STR_140 7FCF                                       STR_116 7F80  
                                     STR_133 7C53                                       STR_109 7AFF  
                                     STR_125 7FEC                                       STR_141 7FD3  
                                     STR_117 7F79                                       STR_134 7C83  
                                     STR_126 7FE4                                       STR_150 7FEF  
                                     STR_118 7FFA                                       STR_142 7FD7  
                                     _ADRESL 000FC3                                       STR_127 7FE8  
                                     STR_143 7FDB                                       STR_135 7BED  
                                     STR_151 7BCB                                       STR_119 7B76  
                                     STR_160 7B21                                       STR_144 7FF3  
                                     STR_128 7FEF                                       STR_136 7E58  
                                     STR_152 7C93                                       STR_137 7C73  
                                     STR_129 7C73                                       STR_153 7FC7  
                                     STR_145 7FDB                                       STR_161 7B87  
                                     STR_162 7C83                                       STR_154 7FCB  
                                     STR_146 7FDF                                       STR_138 7FC7  
                                     STR_170 7DCD                                       STR_155 7FCF  
                                     STR_147 7FEB                                       STR_139 7FCB  
                                     STR_171 7DDA                                       STR_163 7CA3  
                                     STR_156 7FD3                                       STR_180 7F71  
                                     STR_148 7FE3                                       STR_164 7D7F  
                                     STR_172 7CF1                                       STR_157 7FD7  
                                     STR_181 7F69                                       STR_149 7FE7  
                                     STR_173 7F2B                                       STR_165 7D8C  
                                     _EEDATA 000FA8                                       STR_174 7A05  
                                     STR_182 7AC7                                       STR_158 7FDB  
                                     STR_166 7D99                                       STR_159 7FF3  
                                     STR_167 7DA6                                       STR_175 7A22  
                                     STR_183 79D3                                       STR_168 7DB3  
                                     STR_176 7A3C                                       STR_184 79B8  
                                     STR_169 7DC0                                       STR_185 7A56  
                                     STR_177 79EE                                       STR_186 7A6C  
                                     STR_178 7A08                                       STR_179 7F58  
                                     STR_187 7F10                                       STR_188 7F61  
                                     STR_189 7E28                                       _EECON2 000FA7  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 007A                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0144                                       i2l2000 40EA  
                                     i2l2001 4108                                       i2l1130 55E0  
                                     i2l1220 54DA                      __end_of_TMR3_Initialize 56C6  
                                     i2l1221 54D6                                       i2l2022 38AC  
                                     i2l2023 38A6                                       i2l2024 3846  
                                     i2l2008 5110                                       i2l2016 54A8  
                                     i2l2009 510E                                       i2l2017 54A6  
                                     i2l1226 54E8                                       i2l1154 53DE  
                                     i2l1155 53C0                                       i2l2051 3482  
                                     i2l2043 33D6                                       i2l2035 4E18  
                                     i2l1228 550A                                       i2l2044 33DC  
                                     i2l1157 53CA                                       i2l2045 3456  
                                     i2l2037 4E60                                       i2l2061 31FC  
                                     i2l1158 53D4                                       i2l2046 341C  
                                     i2l2062 3202                                       i2l2151 3FA8  
                                     i2l2063 3208                                       i2l2048 343C  
                                     i2l2152 3FB6                                       i2l2080 1F62  
                                     i2l2064 321C                                       i2l1280 0088  
                                     i2l2153 3FD4                                       i2l2081 1F64  
                                     i2l2065 3222                                       i2l2154 3FEC  
                                     i2l2090 204E                                       i2l2082 1F7C  
                                     i2l2058 3280                                       i2l1282 0092  
                                     i2l2091 20C2                                       i2l2075 1EB4  
                                     i2l2067 3228                                       i2l2059 31F2  
                                     i2l1283 009E                                       i2l1275 0060  
                                     i2l2148 3FF6                                       i2l2084 1FFC  
                                     i2l2076 1EB8                                       i2l2068 3246  
                                     i2l1276 006C                                       i2l2149 3F90  
                                     i2l2069 3262                                       i2l1285 00CE  
                                     i2l2094 207C                                       i2l2086 1FC6  
                                     i2l2078 1F22                                       i2l1286 00D2  
                                     i2l1278 007C                                       i2l2087 1FE2  
                                     i2l2096 20CE                                       i2l2089 2042  
                                     i2l1921 4264                                       i2l1850 2B42  
                                     i2l1675 5716                                       i2l1915 3A96  
                                     i2l1923 4280                                       i2l1932 2F96  
                                     i2l1860 287A                                       i2l1933 2F40  
                                     i2l1845 2AE0                                       i2l1861 2886  
                                     i2l1950 37A6                                       i2l1870 2904  
                                     i2l1951 376E                                       i2l1927 43B2  
                                     i2l2671 5556                                       i2l1847 2B1C  
                                     i2l1863 28AA                                       i2l2592 47FE  
                                     i2l1880 521C                                       i2l2672 5546  
                                     i2l1848 2B08                                       i2l1856 2852  
                                     i2l2593 480C                                       i2l1961 2758  
                                     i2l1881 522A                                       i2l1937 2FBC  
                                     i2l1873 292A                                       i2l1865 28BA  
                                     i2l1857 285E                                       i2l1954 37E6  
                                     i2l1946 373A                                       i2l1962 2736  
                                     i2l1866 28C4                                       i2l1858 2866  
                                     i2l1955 37AE                                       i2l1875 294A  
                                     i2l1867 28E8                                       i2l2588 47CA  
                                     i2l1948 3744                                       i2l1964 27CC  
                                     i2l1868 28F4                                       i2l2589 47BE  
                                     i2l1965 27B2                                       i2l1885 3CA4  
                                     i2l1981 2CE2                                       i2l1973 330E  
                                     i2l1877 2966                                       i2l1990 2CDA  
                                     i2l1982 2BDE                                       i2l1887 3CCE  
                                     i2l1975 3382                                       i2l1984 2BF2  
                                     i2l1889 3D2A                                       i2l1985 2C7A  
                                     i2l1994 4144                                       i2l1987 2C82  
                                     i2l1995 40D4                                       i2l1988 2CD2  
                                     i2l1998 415A                                       i2l1999 40E4  
                                     i2l8174 3306                                       _TABLAT 000FF5  
                                     i2l7802 4EEA                                       i2l7940 3744  
                                     i2l7994 5546                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 25C4                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 4FB8                            _shortPacketStatus 004E  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 43E4                         _moteApp_clearCommand 5878  
                    _moteApp_lightStringSize 590A                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 573E  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 553C  
                   USBTransferOnePacket@data 0061                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 0068                    __size_of_Set_Page_Address 0014  
                    __end_of_TMR1_StartTimer 592E                                 ?_putUSBUSART 0060  
                      ??_clearInterruptPinRX 0001                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 55E6  
                                  ??___fldiv 0095                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0100                         __end_of_getsUSBUSART 3E00  
                                  ??___lwmod 0064                            _USBEnableEndpoint 520C  
            __size_of_USBStdGetStatusHandler 00A8                          _EUSART_Transmit_ISR 54AE  
                                     _memcpy 5004                             ?_TMR0_Initialize 0001  
                                     _memset 544E                                       clear_0 430A  
                                     clear_1 4316                                       clear_2 4322  
                                     clear_3 432E                                       clear_4 433C  
                                     _parity 015E                              ___awmod@divisor 0062  
                                  ??_delayms 0062                              ___awmod@counter 0064  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                                     _status 0052                      __end_of_DATAEE_ReadByte 57E6  
                                     _strcmp 4FB8                   __end_of_ADC_TempConversion 30FA  
              __size_of_USBTransferOnePacket 00BE                             ?_sendDataCommand 0061  
                            _moteApp_delayms 5358                  __size_of_service_pushbutton 006E  
                               __pdataCOMRAM 005D                                 _CDCTxService 25C4  
                               __mediumconst 75EE                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 592A                                 _dataRateRead 0053  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004D  
                  USBapp_Handler@buttonPress 0077                         _USBapp_getrxByteFlag 5916  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0162                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 003A                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 5568                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 0070  
                                 __accesstop 0060                      __end_of__initialization 4342  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 5836                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0042  
                              ?_oled_putint8 0077                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 5248                                  ?_InitSwUart 0001  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79B8  
                              __end_of_sd001 79A2                                __end_of_sd002 796E  
                               __pidataBANK0 5902                                 __pidataBANK1 593A  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 5926  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009E  
                           _DATAEE_WriteByte 51D0                __size_of_USBConfigureEndpoint 0094  
    __end_of_oled_setContrastControlRegister 580E     __size_of_oled_setContrastControlRegister 0014  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 57FA                  __end_of_USBCtrlTrfInHandler 3488  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 3C8E  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F7                            _CDCTxService$6685 0068  
                                 _cdc_notice 01D5                                    ?i2_memset 0001  
                                 _cdc_rx_len 00DE                                   _cdc_tx_len 00DD  
                       _moteApp_getTempValue 5114                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01F8                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01C5                             ?_TMR0_StartTimer 0001  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 5592                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 40C8                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00BC                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                       __end_of_EUSART_Write 51D0                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0076  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                             ??_oled_setFont 0062                 ??_moteApp_convertSensorValue 0074  
                            _periodicUpValue 00FE                    ??_moteApp_lightStringSize 0060  
                __size_of_EUSART_Receive_ISR 0030                          oled_putString@index 0076  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 00CA                       __size_of_oled_clearRow 0026  
                                 _clearLight 01EE                  __end_of_moteApp_testSensors 3A4E  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 3010  
           __end_of_MOTEapp_setResponseReady 58FA                               ??_oled_putint8 0079  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00B0  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0030  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 538A  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00B4  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A2                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 37EE  
                    _moteApp_addToDataBuffer 4D50                  __size_of_moteApp_toggleLeds 00E8  
                                 _ep_data_in 00D3                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 283C                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 31E2                                _eusartRxCount 00F5  
                          _configDescriptor1 78F7                                      i2l11102 383E  
                                    i2l11138 2AD8                                      i2l11166 2B3A  
                                    i2l12082 4DD4                                      i2l12084 4E04  
                                    i2l11598 28FC                                    ?___xxtofl 0060  
                                    _RS232cp 00E5                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0060  
                                 ??i2_memset 0007                           __size_of_test_oled 008A  
                       __size_of_moduleSleep 0026                  __end_of_USBCtrlTrfTxService 37EE  
                       __size_of_moteHandler 021A                          _USBStdSetCfgHandler 32C4  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 008A  
             USBapp_LEDUpdateStatus@ledCount 0042                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 007E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 5848                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                         __size_of_reloadTimer 0032  
                           ?_TMR2_StartTimer 0001                 __size_of_USBStdGetDscHandler 012E  
                        __size_of_InitSwUart 001C                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 007A  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 5888  
                              _cdc_trf_state 00EB                         DATAEE_WriteByte@bAdd 0061  
                            _countBitsSilent 004F                      __size_of_USBapp_exitCDC 0006  
                 __end_of_moteRunningProcess 1024                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                   ?_moteApp_add8bToDataBuffer 0066  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 58A2  
         __end_of_MOTEapp_SetDataRateSetting 2470                   _MOTEapp_SetDataRateSetting 230E  
                                    __Hparam 0000                         ?_USBStdSetCfgHandler 0001  
                                  _CDCInitEP 4C8A                      ?_MOTEapp_TimerBasedTask 0001  
                                    __Lparam 0000                   __size_of_USBEnableEndpoint 003C  
                USBapp_exitCDCState@usbState 0060                          moteHandler@s2Button 00B9  
                           _Set_Page_Address 580E                         ??_USBCheckStdRequest 001C  
               moteRunningProcess@sleepEvent 00AE                                      ___almod 401A  
                                    ___fladd 189C                            _timerMinTickCount 0040  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 0526  
                                    ___fldiv 1BDA                                      ___lbdiv 5154  
                                    ___awmod 4A06                                      ___flmul 154A  
                           ?_TMR3_StartTimer 0001                                      ___fltol 3568  
                                    ___lldiv 479C                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0028                            ??_USBStallHandler 0001  
                                    ___lwmod 504C                         oled_putint8@negative 0079  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 42B4                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793A  
                                    __ramtop 0800                                      _delayms 5326  
                          hexToStr@character 0060                                      __ptext0 2CFA  
                                    __ptext1 4994                                      __ptext2 38BC  
                                    __ptext3 4476                                      __ptext4 4CF0  
                                    __ptext5 4BBC                                      __ptext6 30FA  
                                    __ptext7 5326                                      __ptext8 3988  
                                    __ptext9 20F4                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 0044  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 5910  
                            __size_of_strcmp 004C                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countRX 0050  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 57BA  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 565C                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 002A              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 575A                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 58F2  
                               _LastRS232Out 00E6                              i2_USBDeviceInit 2A9E  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 541E  
                                    _rx_data 0051                 __end_of_MOTEapp_handlerState 58E2  
                     ??_USBapp_getrxByteFlag 0060                           __end_of_USB_CD_Ptr 75F7  
                 moteRunningProcess@readByte 00B0                   __size_of_SYSTEM_Initialize 002A  
            __size_of_USBCtrlTrfSetupHandler 0084                                   ??_hexToStr 0060  
                                    _strncmp 458A                         end_of_initialization 4342  
                               _getsUSBUSART 3D48                sendDataCommand@byteCount_1627 0068  
                         __end_of_USB_SD_Ptr 75F5                                      memcpy@d 0066  
                                    memcpy@n 0064                                      memcpy@s 0068  
                        _pBDTEntryEP0OutNext 0036                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
                              __Lmediumconst 75EE              _dummy_encapsulated_cmd_response 01DF  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1034_40 296A  
                   ?_USBStdFeatureReqHandler 0001                                    i2u1067_40 00BC  
                                  i2u1068_48 00BE               __end_of_MOTEapp_TimerBasedTask 56E6  
                          _EUSART_Initialize 5282                            _oled_powerControl 5858  
                                 _rxByteFlag 00E9                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00CC  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 4D50                            __end_of_test_oled 4500  
             moteJoiningProcess@changeStates 0077                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 4500  
                         __end_of_USBSuspend 55BC               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 4216                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006D                           test_switch@timeout 0078  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                  ??_moteApp_addToDataBuffer 0075               moteApp_setLightString@stingPos 006D  
                       __end_of_oled_devInit 489E                     _USBCtrlEPServiceComplete 2F1E  
                    moteApp_toggleLeds@state 0064                                   _responseId 0130  
                                 _retryCount 0163                             ?_moteApp_delayms 0060  
                              _randomPortNum 00F1                     _MOTEapp_setResponseReady 58F2  
                                    strcmp@r 0065                   _USBStatusStageEnabledFlag1 0047  
                 _USBStatusStageEnabledFlag2 0046                                _dataRateValue 00FC  
                        _USBapp_handlerState 58CE                          ??_EUSART_Initialize 0060  
                        ??_oled_powerControl 0061                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                                  _PORTCbits 000F82                      oled_putUint8@start_page 0078  
                             ?_oled_clearRow 0001                                   _test_comms 4BBC  
                     ??_moteApp_getTempValue 0065                         __end_of_oled_setFont 57FA  
                                ___fladd@grs 0073                           _Set_Column_Address 5722  
                       __end_of_oled_putChar 479C                                ___xxtofl@sign 0068  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISEbits 000F96  
                          ??_oled_displayOff 0061                        __size_of_EUSART_Write 003E  
                       __end_of_oled_putint8 4216                           _BothEP0OutUOWNsSet 004A  
           __size_of_moteApp_setSensorsInput 0078                                ?_test_powerup 0001  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 520C  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 58BA                                    _USTATcopy 0059  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3010                     oled_putString@start_page 0075  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 491C                   _moteApp_convertSensorValue 489E  
                  __end_of_EUSART_Initialize 52BA                    __end_of_oled_powerControl 5868  
                    oled_putint8@station_dot 0077                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 3C8E                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 5936  
                             ?_oled_putUint8 0077                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                               ??_InitSwUart 0060                        _moteApp_getLightValue 4F6A  
                     _USBCtrlTrfSetupHandler 4696                         ??_Set_Column_Address 0061  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 4696  
                      __end_of_USBDeviceInit 2A9E                               _TMRapp_Handler 2E12  
                             _USBapp_Handler 3EB6                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 560E  
                              __pidataCOMRAM 593D                                 _EUSART_Write 5192  
                      sendDataCommand@string 0061                            __size_of_TMR0_ISR 000C  
                    __end_ofi2_USBDeviceInit 2BCC                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 4AE6                            __size_of_TMR3_ISR 001E  
                             _ADC_Initialize 5774                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 504C                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 547E                            _USBBusIsSuspended 015B  
                   oled_writeCommand@command 0060                               __end_of_strcmp 5004  
                                ?_oled_clear 0001                          start_initialization 42B4  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0010                     __size_of_TMR0_Initialize 001E  
            __size_of_PIN_MANAGER_Initialize 0054                            ??_oled_setDisplay 0061  
                              ??_EUSART_Read 0060                       __end_of_TMR2_ReadTimer 58C4  
            __end_of_moteApp_addToDataBuffer 4DAE                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 52F2  
                          __size_ofi2_memset 002C                                    _OledFont0 75F7  
               __end_of_USBConfigureEndpoint 43E4              __end_of_USBStdFeatureReqHandler 20F4  
                   __size_of_sendDataCommand 00BE                           __end_of_InitSwUart 575A  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 3B12                                _periodicState 00FA  
                             _USBapp_exitCDC 5910                     __end_of_USBCtrlEPService 38BC  
       __end_of_USART_mySetLineCodingHandler 4EC0        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 4E66                   __end_of_EUSART_FlushBuffer 50D2  
                        DATAEE_ReadByte@bAdd 0060                __size_of_USBapp_setrxByteFlag 0008  
                              _moteModeState 0054                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0038  
                   __size_of_TMR1_Initialize 0032                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 3F6A  
                     __end_of_TMRapp_Handler 2F1E               __end_ofi2_USBTransferOnePacket 3D48  
                       _TMRapp_ClearBitFlags 58EA                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 006A                          _USBStdGetDscHandler 2BCC  
                       _MOTEapp_handlerState 58D8                       __end_of_ADC_Initialize 578E  
                                __pdataBANK0 00F9                                  __pdataBANK1 01FB  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 0165                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0074  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                             _InterruptPinRX 55BC                       _USBActiveConfiguration 005A  
             __end_of_USBStdGetStatusHandler 4170                                    ___fldiv@a 0091  
                                  ___fldiv@b 008D                  __end_of_EUSART_Transmit_ISR 54DE  
                                  ___flmul@a 0078                                    ___flmul@b 0074  
                                __pbssCOMRAM 0034                   service_pushbutton@PB_Timer 014A  
                              __pcstackBANK0 0060                 __size_of_USBCtrlTrfInHandler 00E2  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 5822  
                          __size_of___xxtofl 0154                              ?_TMR2_ReadTimer 0001  
                                _activeState 00F4                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 5916           __size_of_MOTEapp_getModuleResponse 0066  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 550E               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 58C4  
                 __end_of_USBWakeFromSuspend 54AE                   __size_of_EUSART_Initialize 0038  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 002E  
                            _USBStallHandler 50D2                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 5282                   __end_of_USBCheckCDCRequest 401A  
                            ??_oled_putUint8 0079                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0120                  ??_moteApp_add8bToDataBuffer 0067  
        INTERRUPT_InterruptManager@tClearPin 0033                            _oled_writeCommand 57A4  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 4F16  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0162  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EE  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                  __ptext100 573E                                    __ptext101 5282  
                                   ?___lbdiv 0060                                    __ptext110 547E  
                                  __ptext102 5836                                    __ptext111 5592  
                                  __ptext103 5774                                    __ptext120 40C8  
                                  __ptext112 50D2                                    __ptext104 58D8  
                                  __ptext121 2BCC                                    __ptext113 37EE  
                                  __ptext105 57D0                                    __ptext130 4E0A  
                                  __ptext122 1E90                                    __ptext114 4696  
                                  __ptext131 2708                                    __ptext123 4DAE  
                                  __ptext115 2F1E                                    __ptext107 58FA  
                                  __ptext140 58A2                                    __ptext132 3A4E  
                                  __ptext124 4EC0                                    __ptext116 4216  
                                  __ptext108 283C                                    __ptext141 58AE  
                                  __ptext133 33A6                                    __ptext125 4C8A  
                                  __ptext117 31E2                                    __ptext109 2A9E  
                                  __ptext142 55BC                                    __ptext134 371A  
                                  __ptext126 3C8E                                    __ptext118 32C4  
                                  __ptext143 53BC                                    __ptext135 4E66  
                                  __ptext127 520C                                    __ptext119 553C  
                                  __ptext144 5932                                    __ptext136 52BA  
                                  __ptext128 4350                                    __ptext145 54AE  
                                  __ptext137 479C                                    __ptext129 3F6A  
                                  __ptext146 54DE                                    __ptext138 591C  
                                  __ptext147 5936                                    __ptext139 5704  
                                  __ptext148 0000                                     ?___awmod 0060  
                                   ?___flmul 0074                                     ?___fltol 0060  
                 __end_of_moteApp_toggleLeds 31E2                                     ?___lldiv 0001  
                                   ?___lwmod 0060                              ?_ADC_Initialize 0001  
                      __size_of_oled_setFont 0014                                 _eusartRxHead 00E0  
                              ??_sendCommand 0063            moteApp_getTempValue@escapeCounter 0065  
                               _eusartTxHead 00E3                                 _eusartRxTail 00DF  
               __size_of_moteApp_testSensors 00C6                                 _eusartTxTail 00E2  
                       ?_USBapp_exitCDCState 0001                        __size_of_oled_putChar 0082  
                     __end_of_InterruptPinRX 55E6                           _moteRunningProcess 0122  
                          _moduleBufferIndex 00F2                                     ?_delayms 0060  
                                  _buffer_rx 0300                 ??_INTERRUPT_InterruptManager 0020  
                           ___almod@dividend 0060                             ?i2_USBDeviceInit 0001  
                     moteHandler@readMessage 00BB                          ??_oled_writeCommand 0060  
                              ??_moduleSleep 0063                                ??_moteHandler 00B6  
                      __size_of_oled_putint8 00A6                      _eusartTxBufferRemaining 00E1  
                       _USBTransferOnePacket 3BD0                                    _mainState 0056  
                   __size_of_TMR1_StartTimer 0004                                ??_reloadTimer 0001  
                    _moteApp_setSensorsInput 491C                       moteHandler@buttonPress 00BA  
                        ?_moteRunningProcess 00AC                 __end_of_USBCtrlTrfOutHandler 4E66  
                                  _minTicker 0161                     reloadTimer@setTimerValue 0001  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 5936  
                     _moteApp_setLightString 4B52                                  _ep_data_out 00D0  
               __size_of_USBCtrlTrfRxService 0134                                    _secTicker 00F0  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0016                                     ?_strncmp 0060  
                        oled_putint8@numData 007A                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 481E           __end_of_oled_regulorResistorSelect 5858  
                 _oled_regulorResistorSelect 5848                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 0072                            _dataRateSelection 01FD  
                           _timerMsTickCount 00D8                                    _oled_init 53EE  
               __size_of_USBCtrlTrfTxService 00D4                            ??_TMR0_Initialize 0060  
          __end_of_MOTEapp_getModuleResponse 4C8A                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 57BA                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 0060  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 0068                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 57E6                                    _moteState 00FF  
                          ??_sendDataCommand 0066                                _operationType 00F7  
                      __size_of_moduleResync 0084                         ??_moteRunningProcess 00AF  
                 __end_of_moteJoiningProcess 154A          __size_of_INTERRUPT_InterruptManager 0116  
                               _oled_putChar 471A                                     _PIR1bits 000F9E  
                                   i2u603_40 2C44                                     _PIR2bits 000FA1  
                                   i2u603_47 2C3A                __size_of_moteApp_clearBuffers 0092  
                                   i2u604_40 2C74                __size_of_moteApp_clearCommand 0010  
                                   i2u604_47 2C6A                                     _PIR3bits 000FA4  
                                   i2u606_40 2CC6                                     i2u606_47 2CBC  
                                   i2u562_40 4F0A                                     i2u580_40 47CE  
                                   i2u628_40 2062                                     i2u575_40 3796  
                                   i2u575_47 378C                                     i2u663_48 2818  
                  USBCtrlEPService@setup_cnt 001E                                     i2u663_49 282C  
                                   i2u577_40 37D6                                     i2u577_47 37CC  
                                   i2u845_48 346A                                     i2u845_49 347E  
                                   i2u599_40 333A                                     i2u980_40 2B9E  
                                   i2u974_40 388C                                     _RCONbits 000FD0  
                       __end_of_test_powerup 4A06                                 _oled_putint8 4170  
                                   i2u977_40 2AFC                                ??_putUSBUSART 0063  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0045  
                                   _SSP1CON1 000FC6                                     _TMR0_ISR 58AE  
                __size_of_USBCheckStdRequest 00E2                                     _TMR1_ISR 58A2  
                    __size_of_oled_putString 006C                                     _TMR3_ISR 5704  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 58E2                                    _test_leds 4CF0  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00AC  
                       _USBConfigureEndpoint 4350                                    _test_oled 4476  
                      ??_USBapp_exitCDCState 0060                              ?_InterruptPinRX 0001  
           __size_of_USBStdFeatureReqHandler 0264                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                          ___wmul@multiplier 0060                        ?_USBTransferOnePacket 0060  
        moteRunningProcess@sizeOfUpdate_1497 00B2                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0078                    _moteApp_add8bToDataBuffer 3E00  
                    __size_of_oled_writeData 0016                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 00B8  
                               _RemoteWakeup 004C                          __end_of_sendCommand 544E  
                                   i2_memset 553C                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 5868                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 00E7            moteApp_setLightString@lightString 006B  
                    __end_of_USBStallHandler 5114                          __end_of_moduleSleep 565C  
                        __end_of_moteHandler 230E                                  _EUSART_Read 5248  
                          _moteApp_GoToSleep 3646                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0                                    copy_data0 42E6  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 0074  
                               _moduleResync 4612                  __end_of_USBStdSetCfgHandler 33A6  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0006  
                        __end_of_reloadTimer 53EE                           ?_moteApp_GoToSleep 0001  
                                 ?_oled_init 0001                            ??_TMR2_Initialize 0060  
                              ??_test_switch 0077  MOTEapp_getModuleResponse@terminatorReceived 0061  
                ?_moteApp_convertSensorValue 0072                             __size_of_EndLine 000E  
                         ??_DATAEE_WriteByte 0061                           __end_of_device_dsc 79B4  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                    USBStdGetStatusHandler@p 0002                                     __Hrparam 0000  
                        ??_moteApp_GoToSleep 006E                                    memcpy@tmp 006A  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                            ??_TMR0_StartTimer 0060  
                           __size_of___almod 00AE                             __size_of___fladd 033E  
                          ??_USBDeviceAttach 0060                                   ?_test_leds 0001  
                           __size_of___fldiv 02B6                             __size_of___lbdiv 003E  
                                 ?_test_oled 0001                             __size_of___awmod 0072  
                           __size_of___flmul 0352                             __size_of___fltol 00DE  
                 oled_initialDispayLine@line 0061               moteJoiningProcess@readDataRate 007A  
                               _selectedFont 01FB                             __size_of___lldiv 0082  
                            _oled_setDisplay 560E             moteApp_clearBuffers@counter_1714 0061  
           moteApp_clearBuffers@counter_1715 0062             moteApp_clearBuffers@counter_1716 0063  
                           __size_of___lwmod 0044                    MOTEapp_handlerState@state 0060  
                          ??_TMR3_Initialize 0060                    ??_moteApp_setSensorsInput 0065  
                           __size_of_delayms 0032                                   _ANSELAbits 000F5B  
                        __end_of_putUSBUSART 56A4                                  _line_coding 01E7  
                                 _ANSELCbits 000F5D                               ??_CDCTxService 0067  
                              _responseReady 0164                                 ??_oled_clear 006E  
                                   ___xxtofl 2470                                  _menuTimeout 00FB  
                   __size_of_moteApp_delayms 0032                    __end_of_moteApp_GoToSleep 371A  
              __size_of_moteApp_getTempValue 0040                      __size_of_USBDeviceTasks 0132  
                                   _appTimer 00F8                                     _appState 0055  
                                   __ptext10 0122                                     __ptext11 3B12  
                                   __ptext20 5004                                     __ptext12 550E  
                                   __ptext21 5896                                     __ptext13 4170  
                                 _T1GCONbits 000FCC                                     __ptext30 53EE  
                                   __ptext22 489E                                     __ptext14 4500  
                                   __ptext31 57E6                                     __ptext23 55E6  
                                   __ptext15 491C                                     __ptext40 4612  
                                   __ptext32 560E                                     __ptext24 43E4  
                                   __ptext16 590A                                     __ptext41 4C24  
                                   __ptext33 481E                                     __ptext25 4D50  
                                   __ptext17 5114                                     __ptext50 189C  
                                   __ptext42 5090                                     __ptext34 57FA  
                                   __ptext26 3E00                                     __ptext18 4F6A  
                                   __ptext51 1024                                     __ptext43 58BA  
                                   __ptext35 5848                                     __ptext27 5154  
                                   __ptext19 4B52                                     __ptext60 401A  
                                   __ptext52 458A                                     __ptext44 230E  
                                   __ptext36 5858                                     __ptext28 4A06  
                                   __ptext61 58EA                                     __ptext53 4FB8  
                                   __ptext45 3010                                     __ptext37 5868  
                                   __ptext29 3646                                     __ptext70 575A  
                                   __ptext62 56C6                                     __ptext54 5358  
                                   __ptext46 2470                                     __ptext38 58E2  
                                   __ptext71 565C                                     __ptext63 5878  
                                   __ptext55 51D0                                     __ptext47 3568  
                                   __ptext39 5636                                     __ptext80 5916  
                                   __ptext72 471A                                     __ptext64 541E  
                                   __ptext56 58C4                                     __ptext48 154A  
                                   __ptext81 58F2                                     __ptext73 578E  
                                   __ptext65 5888                                     __ptext57 5910  
                                   __ptext49 1BDA                                     __ptext90 56A4  
                                   __ptext82 5192                                     __ptext74 580E  
                                   __ptext66 58CE                                     __ptext58 2E12  
                                   __ptext91 5922                                     __ptext83 5248  
                                   __ptext75 5722                                     __ptext67 3EB6  
                                   __ptext59 504C                                     __ptext92 5822  
                                   __ptext84 25C4                                     __ptext76 57A4  
                                   __ptext68 4A78                                     __ptext93 5926  
                                   __ptext85 3BD0                                     __ptext77 3488  
                                   __ptext69 4AE6                                     __ptext94 538A  
                                   __ptext86 296E                                     __ptext78 5682  
                                   __ptext95 592A                                     __ptext87 544E  
                                   __ptext79 3D48                                     __ptext96 56E6  
                                   __ptext88 52F2                                     __ptext97 592E  
                                   __ptext89 5568                                     __ptext98 4F16  
                                   __ptext99 57BA         __end_of_USBapp_CdcEmulatorInitialize 4F16  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 4EC0  
                               _SSP1CON1bits 000FC6                                     _dotCount 0160  
                                   _hexToStr 550E                           _service_pushbutton 4A78  
                            ___almod@divisor 0064                            ??_TMR1_StartTimer 0060  
                            ___almod@counter 0068                                   _T3GCONbits 000FB4  
                DATAEE_WriteByte@GIEBitValue 0062                     ??_moteApp_getLightString 0062  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 0088  
             __end_of_USBCtrlTrfSetupHandler 471A                                __size_of_main 0118  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 005D                                     _rnModule 00EE  
                         oled_putint8@number 0080                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 0072  
                    __end_of_oled_displayOff 58EA                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 0065                                     delayms@i 0063  
                                   delayms@t 0060                          _USBCtrlTrfInHandler 33A6  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 015F  
                         __end_of_oled_clear 5774                          __end_of_test_switch 3988  
                                   _outPipes 00BC                         _USBCtrlTrfOutHandler 4E0A  
                                   int$flags 005E                                     _usbState 00EA  
                  _USBCtrlEPAllowStatusStage 3A4E                 __size_of_clearInterruptPinRX 0004  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 011E                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 541E                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 5090  
                               ??_test_comms 0077                 __end_of_USBapp_setrxByteFlag 5902  
                                _moduleSleep 5636                                  _moteHandler 20F4  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 0048                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 58D8  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                _reloadTimer 53BC                                     memcpy@s1 0062  
              USBCtrlTrfTxService@byteToSend 0001                                     memset@p1 0060  
                           ?_USBStallHandler 0001                     USBStdFeatureReqHandler@p 001A  
                          ?_Set_Page_Address 0001                     ??_MOTEapp_TimerBasedTask 0060  
                               _responseData 01A5                            ??_TMR3_StartTimer 0060  
              ?_USBapp_CdcEmulatorInitialize 0001                                     intlevel2 0000  
                        _moteApp_testSensors 3988                                  ??_oled_init 006E  
                ??_MOTEapp_getModuleResponse 0061                           ??_Set_Page_Address 0061  
                     __size_of_USBDeviceInit 0130                         oled_powerControl@vol 0061  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4E0A     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 4DAE               moteJoiningProcess@messageReady 007C  
            __end_of_moteApp_setSensorsInput 4994                             ___lwmod@dividend 0060  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                    ??_moteApp_getLightValue 0070                             ??_USBapp_Handler 0077  
                           ??_TMRapp_Handler 006A                        __size_of_test_powerup 0072  
                       moteHandler@gotoSleep 00B7                 __size_ofi2_EUSART_Initialize 0038  
                                  strncmp@s1 0060                                    strncmp@s2 0062  
                           ??_ADC_Initialize 0060                           __end_of_test_comms 4C24  
                       ??_EUSART_FlushBuffer 0060                      __end_of_oled_setDisplay 5636  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00EF  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 4AE6                                  _putUSBUSART 5682  
                         _EUSART_Receive_ISR 54DE                            oled_clearRow@page 006C  
                       __CFG_CPUDIV$NOCLKDIV 000000                          _USBCtrlTrfRxService 2708  
                         _USBWakeFromSuspend 547E                                  ??_test_leds 0077  
                              _powerOnStatus 00F6                                  ??_test_oled 0077  
                    _USBStdFeatureReqHandler 1E90                         ?_moteApp_testSensors 0001  
    __end_of_USBapp_DeviceCdcEmulatorHandler 3568     __size_of_USBapp_DeviceCdcEmulatorHandler 00E0  
           ?_USBapp_DeviceCdcEmulatorHandler 0001            ??_USBapp_DeviceCdcEmulatorHandler 006D  
            _USBapp_DeviceCdcEmulatorHandler 3488                           _USBCheckCDCRequest 3F6A  
                        _USBCtrlTrfTxService 371A                          __end_of_TMRapp_Tick 5922  
                      __end_of_oled_clearRow 5682                                  _temperature 00DA  
                        ?_EUSART_Receive_ISR 0001                               _oled_writeData 578E  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 0060  
                                   strcmp@s2 0062                      ?_moteApp_setLightString 006B  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 0062  
                           ??_USBapp_exitCDC 0060                              _TMR0_Initialize 56E6  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 0057  
                            ___lwmod@counter 0064                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 30FA                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 004B  
                                 _WDTCONbits 000FD1                                 _test_powerup 4994  
                            _sendDataCommand 3B12                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0077                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 4F6A                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0049  
                                _test_switch 38BC                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 2708                              _TMR1_Initialize 538A  
          moteJoiningProcess@joiningComplete 007B                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 458A                       __end_of_oled_putString 4B52  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75F5  
                           ??_InterruptPinRX 0002  
